{"version":3,"sources":["webpack:///21.5a54c805aa33b31f5e0c.js","webpack:///./~/pdfjs-dist/build/pdf.worker.js"],"names":["webpackJsonp","1732","module","exports","__webpack_require__","process","root","factory","this","modules","__w_pdfjs_require__","moduleId","installedModules","i","l","call","m","c","value","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","object","property","prototype","hasOwnProperty","p","s","global","setVerbosityLevel","level","verbosity","getVerbosityLevel","info","msg","VERBOSITY_LEVELS","infos","console","log","warn","warnings","deprecated","details","error","errors","backtrace","Error","e","stack","split","slice","join","assert","cond","isSameOrigin","baseUrl","otherUrl","base","URL","origin","other","isValidProtocol","url","protocol","createValidAbsoluteUrl","absoluteUrl","ex","shadow","obj","prop","writable","getLookupTableFactory","initializer","lookup","create","removeNullCharacters","str","replace","NullCharactersRegExp","bytesToString","bytes","undefined","length","MAX_ARGUMENT_COUNT","String","fromCharCode","apply","strBuf","chunkEnd","Math","min","chunk","subarray","push","stringToBytes","Uint8Array","charCodeAt","arrayByteLength","arr","byteLength","arraysToBytes","item","itemLength","resultLength","ii","pos","data","set","string32","log2","x","readInt8","start","readUint16","offset","readUint32","isLittleEndian","buffer8","Uint16Array","buffer","isEvalSupported","Function","stringToPDFString","code","PDFStringTranslateTable","charAt","stringToUTF8String","decodeURIComponent","escape","utf8StringToString","unescape","encodeURIComponent","isEmptyObj","key","isBool","v","isInt","isNum","isString","isArray","Array","isArrayBuffer","isSpace","ch","isNodeJS","__pdfjsdev_webpack__","createPromiseCapability","capability","promise","Promise","resolve","reject","MessageHandler","sourceName","targetName","comObj","callbackIndex","postMessageTransfers","callbacksCapabilities","ah","actionHandler","_onComObjOnMessage","event","isReply","callbackId","callback","action","then","result","postMessage","reason","bind","addEventListener","loadJpegStream","id","imageUrl","objs","img","Image","onload","onerror","src","globalScope","window","self","FONT_IDENTITY_MATRIX","TextRenderingMode","FILL","STROKE","FILL_STROKE","INVISIBLE","FILL_ADD_TO_PATH","STROKE_ADD_TO_PATH","FILL_STROKE_ADD_TO_PATH","ADD_TO_PATH","FILL_STROKE_MASK","ADD_TO_PATH_FLAG","ImageKind","GRAYSCALE_1BPP","RGB_24BPP","RGBA_32BPP","AnnotationType","TEXT","LINK","FREETEXT","LINE","SQUARE","CIRCLE","POLYGON","POLYLINE","HIGHLIGHT","UNDERLINE","SQUIGGLY","STRIKEOUT","STAMP","CARET","INK","POPUP","FILEATTACHMENT","SOUND","MOVIE","WIDGET","SCREEN","PRINTERMARK","TRAPNET","WATERMARK","THREED","REDACT","AnnotationFlag","HIDDEN","PRINT","NOZOOM","NOROTATE","NOVIEW","READONLY","LOCKED","TOGGLENOVIEW","LOCKEDCONTENTS","AnnotationFieldFlag","REQUIRED","NOEXPORT","MULTILINE","PASSWORD","NOTOGGLETOOFF","RADIO","PUSHBUTTON","COMBO","EDIT","SORT","FILESELECT","MULTISELECT","DONOTSPELLCHECK","DONOTSCROLL","COMB","RICHTEXT","RADIOSINUNISON","COMMITONSELCHANGE","AnnotationBorderStyleType","SOLID","DASHED","BEVELED","INSET","StreamType","UNKNOWN","FLATE","LZW","DCT","JPX","JBIG","A85","AHX","CCF","RL","FontType","TYPE1","TYPE1C","CIDFONTTYPE0","CIDFONTTYPE0C","TRUETYPE","CIDFONTTYPE2","TYPE3","OPENTYPE","TYPE0","MMTYPE1","CMapCompressionType","NONE","BINARY","STREAM","OPS","dependency","setLineWidth","setLineCap","setLineJoin","setMiterLimit","setDash","setRenderingIntent","setFlatness","setGState","save","restore","transform","moveTo","lineTo","curveTo","curveTo2","curveTo3","closePath","rectangle","stroke","closeStroke","fill","eoFill","fillStroke","eoFillStroke","closeFillStroke","closeEOFillStroke","endPath","clip","eoClip","beginText","endText","setCharSpacing","setWordSpacing","setHScale","setLeading","setFont","setTextRenderingMode","setTextRise","moveText","setLeadingMoveText","setTextMatrix","nextLine","showText","showSpacedText","nextLineShowText","nextLineSetSpacingShowText","setCharWidth","setCharWidthAndBounds","setStrokeColorSpace","setFillColorSpace","setStrokeColor","setStrokeColorN","setFillColor","setFillColorN","setStrokeGray","setFillGray","setStrokeRGBColor","setFillRGBColor","setStrokeCMYKColor","setFillCMYKColor","shadingFill","beginInlineImage","beginImageData","endInlineImage","paintXObject","markPoint","markPointProps","beginMarkedContent","beginMarkedContentProps","endMarkedContent","beginCompat","endCompat","paintFormXObjectBegin","paintFormXObjectEnd","beginGroup","endGroup","beginAnnotations","endAnnotations","beginAnnotation","endAnnotation","paintJpegXObject","paintImageMaskXObject","paintImageMaskXObjectGroup","paintImageXObject","paintInlineImageXObject","paintInlineImageXObjectGroup","paintImageXObjectRepeat","paintImageMaskXObjectRepeat","paintSolidColorImageMask","constructPath","UNSUPPORTED_FEATURES","unknown","forms","javaScript","smask","shadingPattern","font","PasswordResponses","NEED_PASSWORD","INCORRECT_PASSWORD","PasswordException","message","constructor","UnknownErrorException","InvalidPDFException","MissingPDFException","UnexpectedResponseException","status","NotImplementedException","MissingDataException","begin","end","XRefParseException","Uint32ArrayView","ensureUint32ArrayViewProps","createUint32ArrayProp","index","uint32ArrayViewSetters","IDENTITY_MATRIX","Util","rgbBuf","makeCssRgb","r","g","b","m1","m2","applyTransform","applyInverseTransform","getAxialAlignedBoundingBox","p1","p2","p3","p4","max","inverseTransform","apply3dTransform","singularValueDecompose2dScale","transpose","a","first","second","sqrt","sx","sy","normalizeRect","rect","intersect","rect1","rect2","compare","orderedX","sort","orderedY","sign","num","ROMAN_NUMBER_MAP","toRoman","number","lowerCase","romanBuf","romanStr","toLowerCase","appendToArray","arr1","arr2","prependToArray","unshift","extendObj","obj1","obj2","getInheritableProperty","dict","getArray","has","inherit","sub","loadScript","script","document","createElement","loaded","setAttribute","getElementsByTagName","appendChild","PageViewport","viewBox","scale","rotation","offsetX","offsetY","dontFlip","rotateA","rotateB","rotateC","rotateD","centerX","centerY","offsetCanvasX","offsetCanvasY","width","height","abs","fontScale","clone","args","convertToViewportPoint","y","convertToViewportRectangle","tl","br","convertToPdfPoint","StatTimer","rpad","pad","started","times","enabled","time","Date","now","timeEnd","toString","out","longest","span","duration","createBlob","contentType","Blob","type","createObjectURL","digits","forceDataSchema","blob","b1","b2","b3","d1","d2","d3","d4","on","actionName","handler","scope","send","transfers","sendWithPromise","destroy","removeEventListener","isEOF","EOF","isName","Name","isCmd","cmd","Cmd","isDict","Dict","isRef","Ref","isRefsEqual","v1","v2","gen","isStream","getBytes","sharedUtil","nameCache","nameValue","cmdCache","cmdValue","xref","map","objId","suppressEncryption","__nonSerializable__","nonSerializable","assignXref","newXref","key1","key2","key3","fetchIfRef","getAsync","fetchIfRefAsync","fetch","getRaw","getKeys","keys","forEach","empty","merge","dictArray","mergedDict","keyName","RefSet","ref","put","remove","RefSetCache","putAlias","aliasRef","fn","thisArg","clear","corePrimitives","coreJbig2","coreJpg","coreJpx","Jbig2Image","JpegImage","JpxImage","Stream","arrayBuffer","isEmpty","getByte","getUint16","b0","getInt32","strEnd","peekByte","peekedByte","peekBytes","skip","reset","moveStart","makeSubStream","StringStream","DecodeStream","maybeMinBufferLength","bufferLength","eof","emptyBuffer","minBufferLength","readBlock","ensureBuffer","requested","size","buffer2","bufEnd","getBaseStreams","StreamsSequenceStream","streams","stream","shift","newLength","baseStreams","FlateStream","maybeLength","cmf","flg","codeSize","codeBuf","codeLenCodeMap","Int32Array","lengthDecode","distDecode","fixedLitCodeTab","fixedDistCodeTab","getBits","bits","getCode","table","codes","maxLen","codeLen","codeVal","generateHuffmanTable","lengths","len","val","code2","t","hdr","litCodeTable","distCodeTable","numLitCodes","numDistCodes","numCodeLenCodes","codeLenCodeLengths","codeLenCodeTab","bitsLength","bitsOffset","what","codeLengths","repeatLength","limit","code1","dist","k","blockLen","check","PredictorStream","params","predictor","readBlockTiff","readBlockPng","colors","columns","pixBytes","rowBytes","rawBytes","inbuf","outbuf","inbits","outbits","compArray","bitMask","j","kk","prevRow","up","upLeft","left","pa","pb","pc","JpegStream","req","jpegImage","decodeArr","forceRGB","bitsPerComponent","decodeArrLength","transformNeeded","maxValue","decodeTransform","colorTransform","parse","getData","drawWidth","drawHeight","getIR","JpxStream","jpxImage","componentsCount","tileCount","tiles","items","tileComponents","tileWidth","tileHeight","tileLeft","tileTop","top","srcPosition","dataPosition","imgRowSize","tileRowSize","Jbig2Stream","jbig2Image","chunks","globalsStream","globals","parseChunks","dataLength","DecryptStream","decrypt","nextChunk","initialized","chunkSize","hasMoreData","Ascii85Stream","input","TILDA_CHAR","Z_LOWER_CHAR","AsciiHexStream","firstDigit","UPSTREAM_BLOCK_SIZE","maxDecodeLength","digit","RunLengthStream","repeatHeader","source","CCITTFaxStream","encoding","eoline","byteAlign","rows","eoblock","black","codingLine","Uint32Array","refLine","codingPos","row","nextLine2D","inputBits","inputBuf","outputBits","lookBits","eatBits","ccittEOL","ccittEOF","twoDimPass","twoDimHoriz","twoDimVert0","twoDimVertR1","twoDimVertL1","twoDimVertR2","twoDimVertL2","twoDimVertR3","twoDimVertL3","twoDimTable","whiteTable1","whiteTable2","blackTable1","blackTable2","blackTable3","lookChar","addPixels","a1","blackPixels","err","addPixelsNeg","refPos","code3","getTwoDimCode","getBlackCode","getWhiteCode","gotEOL","findTableCode","limitValue","LZWStream","earlyChange","cachedData","bitsCached","maxLzwDictionarySize","lzwState","codeLength","nextCode","dictionaryValues","dictionaryLengths","dictionaryPrevCodes","currentSequence","currentSequenceLength","readBits","lastCode","q","blockSize","estimatedDecodedSize","decodedSizeDelta","prevCode","decodedLength","currentBufferLength","hasPrev","NullStream","coreFunction","PDFFunction","ColorSpace","resizeRgbImage","bpc","w1","h1","w2","h2","alpha01","dest","COMPONENTS","py","oldIndex","xRatio","yRatio","newIndex","xScaled","w1Scanline","floor","getRgb","srcOffset","rgb","getRgbItem","destOffset","getRgbBuffer","count","getOutputLength","inputLength","isPassthrough","fillRgb","originalWidth","originalHeight","actualHeight","comps","numComponentColors","needsResizing","numComps","allColors","colorMap","destPos","rgbPos","usesZeroToOneRange","cs","res","IR","parseToIR","AlternateCS","fromIR","whitePoint","blackPoint","gamma","singletons","gray","cmyk","CalGrayCS","matrix","CalRGBCS","basePatternCS","PatternCS","baseIndexedCS","hiVal","IndexedCS","alt","tintFnIR","range","LabCS","colorSpaces","refcs","mode","altIR","altCS","isDefaultDecode","decode","DeviceGrayCS","DeviceRgbCS","DeviceCmykCS","tintFn","defaultColor","Float32Array","tmpBuf","baseNumComps","baseBuf","scaled","tinted","decodeMap","baseCS","highVal","outputDelta","lookupPos","convertToRgb","srcScale","XW","YW","ZW","XB","YB","ZB","G","A","AG","pow","L","GR","GG","GB","MXA","MYA","MZA","MXB","MYB","MZB","MXC","MYC","MZC","matrixProduct","convertToFlat","sourceWhitePoint","LMS","convertToD65","sRGBTransferFunction","color","adjustToRange","decodeL","DECODE_L_CONSTANT","compensateBlackPoint","sourceBlackPoint","XYZ_Flat","zeroDecodeL","X_DST","X_SRC","Y_DST","Y_SRC","Z_DST","Z_SRC","X_Scale","X_Offset","Y_Scale","Y_Offset","Z_Scale","Z_Offset","normalizeWhitePointToFlat","XYZ_In","BRADFORD_SCALE_MATRIX","LMS_Flat","tempNormalizeMatrix","BRADFORD_SCALE_INVERSE_MATRIX","normalizeWhitePointToD65","LMS_D65","B","C","AGR","BGG","CGB","X","Y","Z","XYZ","tempConvertMatrix1","tempConvertMatrix2","XYZ_Black","XYZ_D65","FLAT_WHITEPOINT_MATRIX","SRGB","SRGB_D65_XYZ_TO_RGB_MATRIX","sR","sG","sB","round","amin","amax","bmin","bmax","fn_g","high1","low2","high2","maxVal","Ls","as","bs","M","N","getEncoding","encodingName","WinAnsiEncoding","StandardEncoding","MacRomanEncoding","SymbolSetEncoding","ZapfDingbatsEncoding","ExpertEncoding","MacExpertEncoding","coreStream","MAX_LENGTH_TO_CACHE","Parser","lexer","allowStreams","recoveryMode","imageCache","refill","buf1","getObj","buf2","tryShift","cipherTransform","makeInlineImage","array","makeStream","decryptString","findDefaultInlineStreamEnd","followingBytes","E","I","SPACE","LF","CR","startPos","state","findDCTDecodeInlineStreamEnd","markerLength","foundEOI","inlineStreamSkipEI","findASCII85DecodeInlineStreamEnd","TILDE","GT","findASCIIHexDecodeInlineStreamEnd","filterName","filter","filterZero","adler32","imageStream","imageBytes","createStream","cacheKey","skipToNextLine","nextChar","SCAN_BLOCK_SIZE","ENDSTREAM_SIGNATURE_LENGTH","ENDSTREAM_SIGNATURE","skipped","found","scanBytes","scanLength","makeFilter","filterArray","paramsArray","xrefStreamStats","stats","streamTypes","Lexer","knownCommands","toHexDigit","specialChars","currentChar","peekChar","getNumber","eNotation","divideBy","baseValue","powerValue","powerValueSign","currentDigit","getString","numParen","done","charBuffered","getName","previousCh","x2","getHexString","secondDigit","isFirstHex","comment","knownCommandFound","possibleCommand","Linearization","getInt","allowZeroValue","linDict","getHints","hintsLength","hints","parser","obj3","objectNumberFirst","endFirst","numPages","mainXRefEntriesOffset","pageFirst","isPDFFunction","fnDict","corePsParser","PostScriptLexer","PostScriptParser","CONSTRUCT_SAMPLED","CONSTRUCT_INTERPOLATED","CONSTRUCT_STICHED","getSampleArray","outputSize","bps","sampleMul","strBytes","strIdx","types","constructSampled","constructInterpolated","constructStiched","constructPostScript","typeNum","typeFn","constructSampledFromIR","constructInterpolatedFromIR","constructStichedFromIR","constructPostScriptFromIR","parseArray","fnObj","fnArray","jj","toMultiArray","domain","inputSize","order","encode","samples","interpolate","xmin","xmax","ymin","ymax","cubeVertices","cubeN","Float64Array","cubeVertex","domain_2i","domain_2i_1","xi","size_i","e0","n0","n1","offset0","offset1","rj","c0","c1","diff","fnRefs","fns","bounds","fnsIR","dmin","dmax","rmin","rmax","compiled","PostScriptCompiler","compile","numOutputs","numInputs","evaluator","PostScriptEvaluator","cache","MAX_CACHE_SIZE","cache_available","cachedValue","output","execute","stackIndex","bound","PostScriptStack","initialStack","MAX_STACK_SIZE","pop","copy","roll","operators","operator","counter","atan","ceil","cos","LN10","sin","AstNode","AstArgument","AstLiteral","AstBinaryOperation","op","arg1","arg2","AstMin","arg","AstVariable","AstVariableDefinition","variable","ExpressionBuilderVisitor","parts","buildAddOperation","num1","num2","buildMulOperation","buildSubOperation","buildMinOperation","visit","visitor","visitArgument","visitLiteral","visitBinaryOperation","visitMin","visitVariable","visitVariableDefinition","literal","operation","definition","ast1","ast2","tmpVar","instructions","lastRegister","splice","instruction","statementBuilder","expr","getGlyphsUnicode","getDingbatsGlyphsUnicode","setPDFNetworkStreamClass","cls","PDFNetworkStream","initializeWorker","WorkerMessageHandler","setup","corePdfManager","LocalPdfManager","NetworkPdfManager","WorkerTask","terminated","_capability","finished","finish","terminate","ensureNotTerminated","PDFWorkerStream","msgHandler","_queuedChunks","initialData","_msgHandler","_isRangeSupported","disableRange","_isStreamingSupported","disableStream","_contentLength","_fullRequestReader","_rangeReaders","_onReceiveData","_onProgress","PDFWorkerStreamReader","queuedChunks","_stream","_done","_requests","_headersReady","onProgress","PDFWorkerStreamRangeReader","_begin","_end","_queuedChunk","_enqueue","some","rangeReader","evt","firstReader","_removeRangeReader","reader","indexOf","getFullReader","getRangeReader","cancelAllRequests","cancel","headersReady","isRangeSupported","isStreamingSupported","contentLength","read","requestCapability","port","testMessageProcessed","supportTransfers","xhr","XMLHttpRequest","responseExists","responseType","supportTypedArray","createDocumentHandler","docParams","startWorkerTask","task","WorkerTasks","finishWorkerTask","loadDocument","loadDocumentCapability","parseSuccess","numPagesPromise","pdfManager","ensureDoc","fingerprintPromise","encryptedPromise","ensureXRef","all","results","doc","fingerprint","encrypted","parseFailure","getPdfManager","evaluatorOptions","pdfManagerCapability","docId","password","docBaseUrl","pdfStream","chunkedViewerLoading","fullRequest","total","disableAutoFetch","rangeChunkSize","cancelXHRs","catch","cachedChunks","flushChunks","pdfFile","readChunk","sendProgressiveData","setupDoc","onSuccess","pdfInfo","onFailure","updatePassword","pdfManagerReady","requestLoadedStream","onLoadedStream","disableCreateObjectURL","maxImageSize","disableFontFace","disableNativeImageDecoder","newPdfManager","workerHandlerName","getPage","pageIndex","page","rotatePromise","ensure","refPromise","userUnitPromise","viewPromise","rotate","userUnit","view","pdfDocument","catalog","getPageIndex","ensureCatalog","intent","pageNum","getOperatorList","renderInteractiveForms","operatorList","totalLength","featureId","wrappedException","minimumStackMessage","normalizeWhitespace","combineTextItems","extractTextContent","textContent","cleanup","waitOn","eval","ArithmeticDecoder","bp","dataEnd","chigh","clow","byteIn","ct","QeTable","qe","nmps","nlps","switchFlag","readBit","contexts","cx_index","cx_mps","qeTableIcx","qeIcx","coreCharsets","coreEncodings","ISOAdobeCharset","ExpertCharset","ExpertSubsetCharset","MAX_SUBR_NESTING","CFFStandardStrings","CFFParser","file","properties","seacAnalysisEnabled","CharstringValidationData","stackClearing","stem","resetStack","undefStack","CharstringValidationData12","stackDelta","stackFn","cff","CFF","header","parseHeader","nameIndex","parseIndex","endPos","topDictIndex","stringIndex","globalSubrIndex","topDictParsed","parseDict","topDict","createDict","CFFTopDict","strings","names","parseNameIndex","parseStringIndex","parsePrivateDict","isCIDFont","hasName","charStringOffset","getByName","charStringIndex","fontMatrix","fontBBox","ascent","descent","ascentScaled","charset","fdArrayIndex","dictRaw","fontDict","fdArray","parseCharsets","fdSelect","parseFDSelect","parseEncoding","charStringsAndSeacs","parseCharStrings","privateDict","subrsIndex","charStrings","seacs","widths","bytesLength","major","minor","hdrSize","offSize","CFFHeader","parseOperand","parseFloatOperand","NaN","parseFloat","operands","entries","cffIndex","CFFIndex","offsets","offsetSize","offsetStart","offsetEnd","add","CFFStrings","Type","cffDict","pair","setByKey","parseCharString","localSubrIndex","callDepth","stackSize","validationCommand","seac","bias","subrNumber","isNaN","valid","firstStackClearing","charstring","localSubrToUse","fdIndex","getFDIndex","emptyPrivateDictionary","parentDict","CFFPrivateDict","privateOffset","removeByName","privateDictEnd","dictData","subrsOffset","relativeOffset","cid","CFFCharset","CFFCharsetPredefinedTypes","ISO_ADOBE","EXPERT","EXPERT_SUBSET","format","raw","readSupplement","supplementsCount","sid","predefined","baseEncoding","dataStart","glyphsCount","rangesCount","gid","CFFEncoding","invalidFirstGID","next","CFFFDSelect","objects","CFFDict","tables","keyToNameMap","nameToKeyMap","defaults","opcodes","values","valueLength","setByName","createTables","layout","entry","glyphIndex","CFFOffsetTracker","isTracking","track","location","setEntryLocation","dataOffset","offset2","offset3","offset4","CFFCompiler","concat","compileHeader","compileNameIndex","subDict","compileTopDicts","topDictTracker","trackers","compileStringIndex","compileIndex","compileEncoding","compileCharset","compileCharStrings","compileFDSelect","fontDictTrackers","compilePrivateDicts","encodeNumber","parseInt","encodeFloat","encodeInteger","exec","epsilon","nibbles","substr","dicts","removeCidKeys","fontDictTracker","fontDictData","compileDict","privateDictTracker","privateDictData","outputLength","subrs","offsetTracker","compileGlobalSubrIndex","writeByteArray","compileTypedArray","lastOffset","ChunkedStream","manager","loadedChunks","numChunksLoaded","numChunks","progressiveDataLength","lastSuccessfulEnsureByteChunk","getMissingChunks","allChunksLoaded","onReceiveData","curChunk","beginChunk","endChunk","onReceiveProgressiveData","position","ensureByte","ensureRange","nextEmptyChunk","hasChunk","getByteRange","ChunkedStreamSubstream","missingChunks","subStream","ChunkedStreamManager","pdfNetworkStream","currRequestId","chunksNeededByRequest","requestsByChunk","promisesByRequest","aborted","_loadedStreamCapability","sendRequest","chunkData","requestAllChunks","_requestChunks","requestId","chunksNeeded","chunksToRequest","groupedChunksToRequest","groupChunks","groupedChunk","getStream","requestRange","getBeginChunk","getEndChunk","requestRanges","ranges","groupedChunks","prevChunk","bytesLoaded","isProgressive","loadedRequests","requestIds","lastChunk","onError","abort","ARCFourCipher","tmp","keyLength","encryptBlock","tmp2","decryptBlock","calculateMD5","hash","h0","h3","paddedLength","padded","w","f","rotateArg","Word64","highInteger","lowInteger","high","low","and","word","xor","or","shiftRight","places","shiftLeft","rotateRight","not","lowAdd","highAdd","copyTo","assign","calculateSHA256","rotr","z","maj","sigma","sigmaPrime","littleSigma","littleSigmaPrime","h4","h5","h6","h7","t1","t2","h","calculateSHA512","mode384","tmp3","tmp1","calculateSHA384","NullCipher","AES128Cipher","expandKey128","cipherKey","t3","t4","rcon","decrypt128","u","inv_s","s0","mix","s1","s2","s3","encrypt128","mixCol","bufferPosition","decryptBlock2","finalize","sourceLength","iv","plain","lastBlock","psLen","encrypt","cipher","AES256Cipher","expandKey256","decrypt256","encrypt256","PDF17","compareByteArrays","array1","array2","checkOwnerPassword","ownerValidationSalt","userBytes","ownerPassword","hashData","checkUserPassword","userValidationSalt","userPassword","getOwnerKey","ownerKeySalt","ownerEncryption","getUserKey","userKeySalt","userEncryption","PDF20","concatArrays","calculatePDF20Hash","arrayLength","k1","remainder","concatBytes","CipherTransform","stringCipherConstructor","streamCipherConstructor","StringCipherConstructor","StreamCipherConstructor","CipherTransformFactory","createEncryptionKey20","revision","uBytes","perms","passwordLength","pdfAlgorithm","prepareKeyData","fileId","flags","encryptMetadata","hashDataSize","defaultPasswordBytes","keyLengthInBytes","checkData","encryptionKey","derivedKey","decodeUserPassword","algorithm","cfDict","streamCryptoName","handlerDict","passwordBytes","fileIdBytes","cf","stmf","identityName","strf","eff","buildObjectKey","isAes","buildCipherConstructor","cfm","cryptFilter","createCipherTransform","cipherConstructor","coreParser","coreImage","coreColorSpace","coreMurmurHash3","coreFonts","corePattern","coreCMap","coreMetrics","coreBidi","coreStandardFonts","coreUnicode","coreGlyphList","PDFImage","MurmurHash3_64","ErrorFont","FontFlags","Font","IdentityToUnicodeMap","ToUnicodeMap","getFontType","Pattern","getTilingPatternIR","CMapFactory","IdentityCMap","getMetrics","bidi","getStdFontMap","getSerifFonts","getSymbolsFonts","getNormalizedUnicodes","reverseIfRtl","getUnicodeForGlyph","PartialEvaluator","NativeImageDecoder","resources","idFactory","fontCache","builtInCMapCache","options","DefaultPartialEvaluatorOptions","fetchBuiltInCMap","cachedCMap","compressionType","TimeSlotManager","canDecode","image","isDecodable","colorSpace","isSupported","checked","endTime","deferred","hasBlendModes","processed","nodes","node","graphicStates","graphicStatesKeys","graphicState","bm","xObjects","xObjectsKeys","xObject","xResources","buildFormXObject","xobj","initialState","bbox","group","groupOptions","isolated","knockout","groupSubtype","backdrop","addOp","buildPaintImageXObject","inline","imgData","bitStrideLength","imgArray","inverseDecode","createMask","cached","softMask","mask","createImageData","useNativeImageDecoder","createObjId","addDependency","nativeImageDecoder","buildImage","imageObj","handleSMask","stateManager","smaskContent","smaskOptions","subtype","transferObj","transferFn","transferMap","handleTilingType","pattern","patternDict","tilingOpList","OperatorList","resourcesArray","patternResources","addDependencies","dependencies","argsArray","handleSetFont","fontArgs","fontRef","fontName","loadFont","translated","isType3Font","loadType3Data","TranslatedFont","loadedName","handleText","chars","glyphs","charsToGlyphs","isAddToPathSet","textRenderingMode","buildPath","fontChar","renderer","hasBuiltPath","path","getPathJs","glyph","accent","gState","gStateObj","gStateKeys","errorFont","fontRes","fontID","fontCapability","preEvaluatedFont","preEvaluateFont","descriptor","fontRefIsRef","fontAliases","aliasFontRef","getFontID","translatedPromise","translateFont","translatedFont","fontType","fontTypes","fontFile3","lastIndex","opArgs","handleColorN","patterns","patternName","shading","parseShading","xobjs","StateManager","EvalState","preprocessor","EvaluatorPreprocessor","timeSlotManager","promiseBody","stop","fontSize","cacheEntry","combinedGlyphs","arrLength","arrItem","fillColorSpace","strokeColorSpace","shadingRes","dictName","extGState","savedStatesDepth","getTextContent","ensureTextContentItem","textContentItem","textState","styles","fontFamily","fallbackName","vertical","tsm","textHScale","textRise","glyphHeight","trm","ctm","textMatrix","textLineMatrix","scaleLineX","scaleCtmX","textAdvanceScale","lastAdvanceWidth","lastAdvanceHeight","spaceWidth","fakeSpaceMin","SPACE_FACTOR","fakeMultiSpaceMin","MULTI_SPACE_FACTOR","fakeMultiSpaceMax","MULTI_SPACE_FACTOR_MAX","textRunBreakAllowed","isMonospace","Infinity","replaceWhitespace","WhitespaceRegexp","runBidiTransform","textChunk","bidiResult","dir","buildTextContentItem","glyphWidth","vmetric","glyphUnicode","unicode","NormalizedUnicodes","charSpacing","wordSpacing","addFakeSpaces","tx","ty","translateTextMatrix","fakeSpaces","flushTextContentItem","TextState","xobjsCache","advance","fontNameArg","fontSizeArg","leading","isSameTextLine","translateTextLineMatrix","carriageReturn","calcTextLineMatrixAdvance","setTextLineMatrix","breakTextRun","texts","formTextContent","gStateFont","extractDataStructures","baseDict","toUnicode","toUnicodePromise","readToUnicode","composite","cidSystemInfo","registry","ordering","supplement","cidToGidMap","readCidToGidMap","differences","baseEncodingName","diffEncoding","defaultEncoding","isSymbolicFont","Symbolic","isNonsymbolicFont","Nonsymbolic","test","hasEncoding","buildToUnicode","hasIncludedToUnicodeMap","charcode","glyphName","glyphsUnicodeMap","cMap","builtInCMap","ucs2CMapName","useCMap","ucs2CMap","ucs2","firstChar","lastChar","cmapObj","cmap","getMap","charCode","token","cidToGidStream","glyphsData","glyphID","extractWidths","defaultVMetrics","glyphsWidths","defaultWidth","glyphsVMetrics","vmetrics","baseFontName","metrics","getBaseFontMetrics","buildCharCodeToWidth","firstWidth","FixedPitch","isSerifFont","fontNameWoStyle","search","monospace","stdFontMap","lookupName","Metrics","glyphWidths","widthsByGlyphName","uint8array","df","update","diffLength","diffBuf","diffEntry","hexdigest","maxCharIndex","Serif","baseFont","fontNameStr","baseFontStr","fontFile","length1","length2","length3","wideChars","fixedPitch","xHeight","capHeight","italicAngle","coded","cMapPromise","cidEncoding","type3Loaded","sent","fontData","exportData","parentOperatorList","loadCharProcsPromise","charProcs","fontResources","charProcKeys","charProcOperatorList","glyphStream","getTransfers","queue","messageHandler","_totalLength","CHUNK_SIZE","CHUNK_SIZE_ABOUT","flush","addOpList","opList","QueueOptimizer","optimize","stateStack","old","prev","txDiff","tyDiff","denominator","calcRenderMatrix","opMap","getOPMap","nonProcessedArgs","numArgs","variableArgs","opSpec","argsLength","preprocessCommand","addState","parentState","handlePaintSolidColorImageMask","iFirstSave","iFirstPIMXO","imageMask","InitialState","context","MIN_IMAGES_IN_INLINE_IMAGES_BLOCK","MAX_IMAGES_IN_INLINE_IMAGES_BLOCK","MAX_WIDTH","IMAGE_PADDING","curr","iCurr","iFirstTransform","iFirstPIIXO","maxX","maxLineHeight","currentX","currentY","imgWidth","imgHeight","rowSize","kind","MIN_IMAGES_IN_MASKS_BLOCK","MAX_IMAGES_IN_MASKS_BLOCK","MAX_SAME_IMAGES_IN_MASKS_BLOCK","iTransform","transformArgs","isSameImage","firstPIMXOArg0","firstTransformArg0","firstTransformArg3","iPIMXO","positions","images","maskParams","MIN_IMAGES_IN_BLOCK","MAX_IMAGES_IN_BLOCK","iFirstPIXO","iFirstRestore","firstPIXOArg0","MIN_CHARS_IN_BLOCK","MAX_CHARS_IN_BLOCK","iFirstBeginText","iFirstSetFont","iFirstSetTextMatrix","iFirstShowText","iFirstEndText","firstSetFontArg0","firstSetFontArg1","iFirst","iEndText","coreArithmeticDecoder","failOnCorruptedImage","calculateComponentDimensions","component","siz","x0","XOsiz","XRsiz","x1","Xsiz","y0","YOsiz","YRsiz","y1","Ysiz","calculateTileGrids","components","tile","SIZ","numXtiles","XTOsiz","XTsiz","numYtiles","YTOsiz","YTsiz","tx0","ty0","tx1","ty1","Csiz","tileComponent","tcx0","tcy0","tcx1","tcy1","getBlocksDimensions","codOrCoc","codingStyleParameters","entropyCoderWithCustomPrecincts","PPx","precinctsSizes","PPy","xcb_","xcb","ycb_","ycb","buildPrecincts","resolution","dimensions","precinctWidth","precinctHeight","isZeroRes","resLevel","precinctWidthInSubband","precinctHeightInSubband","numprecinctswide","trx1","trx0","numprecinctshigh","try1","try0","numprecincts","precinctParameters","buildCodeblocks","subband","codeblock","precinctNumber","codeblockWidth","codeblockHeight","cbx0","tbx0","cby0","tby0","cbx1","tbx1","cby1","tby1","codeblocks","precincts","cbx","cby","tbx0_","tby0_","tbx1_","tby1_","pi","pj","subbandType","Lblock","precinct","cbxMin","cbxMax","cbyMin","cbyMax","codeblockParameters","numcodeblockwide","numcodeblockhigh","createPacket","layerNumber","precinctCodeblocks","subbands","LayerResolutionComponentPositionIterator","tileIndex","currentTile","layersCount","codingStyleDefaultParameters","maxDecompositionLevelsCount","decompositionLevelsCount","nextPacket","resolutions","packet","ResolutionLayerComponentPositionIterator","ResolutionPositionComponentLayerIterator","maxNumPrecinctsInLevel","maxNumPrecincts","PositionComponentResolutionLayerIterator","getPrecinctSizesInImageScale","precinctsIterationSizes","px","maxNumHigh","maxNumWide","sizeInImageScale","getPrecinctIndexIfExist","ComponentPositionResolutionLayerIterator","pxIndex","pyIndex","precinctIterationSizes","posX","minWidth","posY","minHeight","startPrecinctRowIndex","Number","MAX_VALUE","sizePerComponent","sizePerResolution","minWidthCurrentComponent","minHeightCurrentComponent","maxNumWideCurrentComponent","maxNumHighCurrentComponent","widthCurrentResolution","heightCurrentResolution","buildPackets","blocksDimensions","bscale","resolutionSubbands","progressionOrder","packetsIterator","parseTilePackets","bufferSize","skipNextBit","skipMarkerIfEqual","skipBytes","alignToByte","readCodingpasses","sopMarkerUsed","COD","ephMarkerUsed","codeblockColumn","codeblockRow","codeblockIncluded","firstTimeInclusion","inclusionTree","zeroBitPlanesTree","InclusionTree","TagTree","incrementValue","nextLevel","included","zeroBitPlanes","codingpasses","codingpassesLog2","codedDataLength","packetItem","copyCoefficients","coefficients","levelWidth","levelHeight","delta","mb","reversible","segmentationSymbolUsed","right","bottom","blockWidth","blockHeight","bitModel","currentCodingpassType","BitModel","dataItem","encodedData","decoder","setDecoder","runSignificancePropagationPass","runMagnitudeRefinementPass","runCleanupPass","checkSegmentationSymbol","nb","coefficentsSign","magnitude","coefficentsMagnitude","bitsDecoded","magnitudeCorrection","interleave","levelOffset","transformTile","quantizationParameters","spqcds","SPqcds","scalarExpounded","guardBits","precision","reversibleTransformation","ReversibleTransform","IrreversibleTransform","subbandCoefficients","mu","gainLog2","SubbandsGainLog2","calculate","transformComponents","resultImages","transformedTiles","maxK","y2","tile0","multipleComponentTransform","fourComponents","y0items","y1items","y2items","y3items","component0","initializeTile","qcdOrQcc","QCC","QCD","COC","LL","LH","HL","HH","parseCodestream","headerSize","lbox","tbox","jumpDataLength","method","colorspace","headerType","parseImageProperties","newByte","oldByte","doNotRecover","sqcd","spqcdSize","mainHeader","isSigned","qcd","noQuantization","spqcd","qcc","cqcc","cod","scod","blockStyle","selectiveArithmeticCodingBypass","resetContextProbabilities","terminationOnEachCodingPass","verticalyStripe","predictableTermination","precinctsSize","unsupported","partIndex","partsCount","levelsLength","levels","currentLevel","defaultValue","stopValue","propagateValues","levelIndex","currentValue","contextLabelTable","HHContextLabel","HLContextLabel","LLAndLHContextsLabel","coefficientCount","neighborsSignificance","processingFlags","UNIFORM_CONTEXT","RUNLENGTH_CONTEXT","Int8Array","setNeighborsSignificance","column","labels","processedInverseMask","processedMask","firstMagnitudeBitMask","i0","i1","contextLabel","decision","decodeSignBit","contribution","sign0","sign1","significance1","decoded","horizontalContribution","indexNext","width4","index0","significance","bit","iNext","oneRowDown","twoRowsDown","threeRowsDown","indexBase","checkAllEmpty","allEmpty","i2","Transform","u0","v0","ll","iterate","extend","j1","j2","hl_lh_hh","llWidth","llHeight","llItems","bufferPadding","rowBuffer","numBuffers","colBuffers","currentBuffer","current","alpha","beta","K","K_","coreCrypto","coreChunkedStream","Catalog","pageFactory","catDict","getCatalogObj","pagePromises","metadata","streamRef","toplevelPagesDict","pagesObj","documentOutline","readDocumentOutline","parent","blackColor","outlineDict","parseDestDictionary","destDict","resultObj","title","rgbColor","outlineItem","unsafeUrl","newWindow","bold","italic","destinations","fetchDestination","nameTreeRef","nameDictionaryRef","dests","nameTree","NameTree","getAll","getDestination","destinationId","pageLabels","readPageLabels","style","prefix","numberTree","NumberTree","nums","currentLabel","currentIndex","labelDict","st","LIMIT","A_UPPER_CASE","A_LOWER_CASE","baseCharCode","letterIndex","character","charBuf","attachments","fs","FileSpec","serializable","appendIfJavaScriptDict","jsDict","js","openactionDict","actionType","promises","translatedFonts","getPageDict","createPage","nodesToVisit","currentNode","fetchAsync","currentPageIndex","kids","last","pageRef","pagesBeforeRef","kidRef","parentRef","kidPromises","kid","addDefaultProtocolToUrl","tryConvertUrlEncoding","linkType","urlDict","remoteDest","JSON","stringify","namedAction","jsAction","URL_OPEN_METHODS","regex","RegExp","jsUrl","href","XRef","xrefstms","setStartXRef","startXRef","startXRefQueue","trailerDict","indexObjects","readXRef","trailer","ids","processXRefTable","tableState","entryNum","streamPos","parserBuf1","parserBuf2","readXRefTable","firstEntryNum","entryCount","free","uncompressed","processXRefStream","streamParameters","byteWidths","streamState","entryRanges","readXRefStream","typeFieldWidth","offsetFieldWidth","generationFieldWidth","generation","readToken","LT","skipUntil","TAB","PERCENT","objRegExp","trailerBytes","startxrefBytes","endobjBytes","xrefBytes","trailers","xrefStms","content","xrefTagOffset","getEntry","xrefEntry","fetchUncompressed","fetchCompressed","substring","tableOffset","streamManager","tryFetch","NameOrNumberTree","_type","kidsOrEntries","loopCount","MAX_LEVELS","limits","currentKey","description","contentAvailable","pickPlatformItem","filename","_filename","contentRef","fileObj","ObjectLoader","mayHaveChildren","addChildren","refSet","load","_walk","nodesToRevisit","pendingRequests","foundMissingData","getNonStdFontMap","getGlyphMapForStandardFonts","getSupplementalGlyphMapForArialBlack","mapSpecialUnicodeValues","getSpecialPUASymbols","hexStr","nameLen","toUpperCase","getUnicodeRangeFor","UnicodeRanges","isRTLRangeFor","charsLength","NetworkManager","isHttp","httpHeaders","withCredentials","getXhr","currXhrId","getArrayBuffer","response","_options","_manager","_rangeChunkSize","_rangeRequestReaders","PDFNetworkStreamFullRequestReader","onHeadersReceived","_onHeadersReceived","onProgressiveData","_onProgressiveData","onDone","_onDone","_onError","_url","_fullRequestId","requestFull","_headersReceivedCapability","_disableRange","_cachedChunks","_storedError","PDFNetworkStreamRangeRequestReader","_requestId","onClosed","coreWorker","OK_RESPONSE","PARTIAL_CONTENT_RESPONSE","supportsMozChunked","open","listeners","request","xhrId","pendingRequest","setRequestHeader","rangeStr","expectedStatus","mozChunked","onreadystatechange","onStateChange","onprogress","readyState","xhrStatus","rangeHeader","getResponseHeader","matches","hasPendingRequests","getRequestXhr","isStreamingRequest","isPendingRequest","isLoadedRequest","abortAllRequests","abortRequest","_onRangeRequestReaderClosed","_validateRangeRequestCapabilities","networkManager","fullRequestXhrId","fullRequestXhr","exception","lengthComputable","_close","AnnotationFactory","coreObj","coreEvaluator","parameters","LinkAnnotation","TextAnnotation","fieldType","TextWidgetAnnotation","ButtonWidgetAnnotation","ChoiceWidgetAnnotation","WidgetAnnotation","PopupAnnotation","HighlightAnnotation","UnderlineAnnotation","SquigglyAnnotation","StrikeOutAnnotation","FileAttachmentAnnotation","Annotation","getTransformMatrix","minX","minY","maxY","setFlags","setRectangle","setColor","setBorderStyle","setAppearance","annotationFlags","borderStyle","hasAppearance","appearance","_hasFlag","flag","_isViewable","_isPrintable","viewable","printable","hasFlag","AnnotationBorderStyle","dictType","setWidth","setStyle","setDashArray","setHorizontalCornerRadius","setVerticalCornerRadius","appearanceStates","normalAppearanceState","_preparePopup","hasPopup","contents","loadResources","renderForms","appearanceDict","resourcesPromise","dashArray","horizontalCornerRadius","verticalCornerRadius","isValid","allZeros","element","radius","annotationType","fieldName","_constructFieldName","fieldValue","alternativeText","defaultAppearance","fieldResources","fieldFlags","readOnly","hasFieldFlag","loopDict","alignment","textAlignment","maximumLength","multiLine","comb","checkBox","radioButton","buttonValue","fieldParent","fieldParentValue","option","isOptionArray","exportValue","displayValue","combo","multiSelect","DEFAULT_ICON_SIZE","parentItem","parentId","parentFlags","isOdd","isEven","findUnequal","setValues","reverseValues","temp","createBidiText","isLTR","startLevel","strLength","numBidi","charType","baseTypes","arabicTypes","sor","eor","lastType","before","after","highestLevel","lowestOddLevel","BUILT_IN_CMAPS","CMap","codespaceRanges","numCodespaceRanges","_map","addCodespaceRange","mapCidRange","dstLow","mapBfRange","lastByte","mapBfRangeToArray","mapOne","dst","contains","charCodeOf","readCharCode","codespaceRangesLen","codespaceRange","isIdentityCMap","BinaryCMapReader","hexToInt","hexToStr","addHex","incHex","BinaryCMapStream","MAX_ENCODED_NUM_SIZE","processBinaryCMap","readByte","MAX_NUM_SIZE","char","sequence","dataSize","ucs2DataSize","subitemsCount","readNumber","readHex","readHexNumber","readSigned","readHexSigned","readString","sp","strToInt","expectString","expectInt","parseBfChar","parseBfRange","parseCidChar","parseCidRange","parseCodespaceRange","parseWMode","parseCMapName","parseCMap","previous","embededUseCMap","objLoop","extendCMap","createBuiltInCMap","newCMap","useCodespaceRanges","cMapData","parsedCMap","coreAnnotation","Page","isAnnotationRenderable","annotation","pageDict","uniquePrefix","idCounters","LETTER_SIZE_MEDIABOX","getPageProp","getInheritedPageProp","valueArray","mediaBox","cropBox","intersection","getContentStream","contentStreamPromise","partialEvaluator","dataPromises","pageListPromise","contentStream","transparency","annotationsPromise","datas","pageOpList","annotations","opListPromises","opLists","getAnnotationsData","annotationsData","annotationRefs","annotationFactory","annotationRef","PDFDocument","find","needle","backwards","lastIndexOf","FINGERPRINT_FIRST_BYTES","DocumentInfoValidators","Title","Author","Subject","Keywords","Creator","Producer","CreationDate","ModDate","Trapped","version","pdfFormatVersion","acroForm","xfa","fields","linearization","step","checkHeader","MAX_VERSION_LENGTH","parseStartXRef","documentInfo","infoDict","docInfo","PDFFormatVersion","IsAcroFormPresent","IsXFAPresent","validEntries","fileID","idArray","hex","coreCFFParser","FontRendererFactory","getLong","getUshort","parseCmap","segCount","idDelta","idOffset","groups","parseCff","gsubrs","parseGlyfTable","glyf","loca","isGlyphLocationsLong","itemSize","itemDecode","startOffset","endOffset","lookupCmap","glyphId","compileGlyf","cmds","quadraticCurveTo","xa","ya","numberOfContours","scaleX","scaleY","scale01","scale10","subglyph","endPtsOfContours","numberOfPoints","points","repeat","startPoint","endPoint","contour","compileCharString","bezierCurveTo","xb","yb","y3","subrCode","stackClean","stems","subrsBias","achar","bchar","glyphNameMap","gsubrsBias","CompiledFont","compiledGlyphs","compiledCharCodeToGlyphId","TrueTypeCompiled","Type2Compiled","cffInfo","compileGlyph","compileGlyphImpl","indexToLocFormat","unitsPerEm","numTables","tag","adjustWidths","adjustToUnicode","builtInEncoding","amend","recoverGlyphName","type1FontGlyphMapping","glyphNames","charCodeToGlyphId","standardGlyphName","coreFontRenderer","coreType1Parser","Type1Parser","PRIVATE_USE_OFFSET_START","PRIVATE_USE_OFFSET_END","SKIP_PRIVATE_USE_RANGE_F000_TO_F01F","PDF_GLYPH_SPACE_UNITS","SEAC_ANALYSIS_ENABLED","Script","Italic","AllCap","SmallCap","ForceBold","MacStandardGlyphOrdering","Glyph","operatorListId","isInFont","matchesForCache","OpenTypeFileBuilder","writeInt16","writeInt32","writeData","sfnt","getSearchParams","entriesCount","entrySize","maxPower2","searchRange","rangeShift","OTF_HEADER_SIZE","OTF_TABLE_ENTRY_SIZE","toArray","tablesNames","tableName","tableOffsets","searchParams","checksum","addTable","ProblematicCharRanges","sizes","missingFile","glyphCache","toFontChar","nonStdFontMap","isStandardFont","remeasure","GlyphMapForStandardFonts","SupplementalGlyphMapForArialBlack","unicodeCharCode","buildToFontChar","loading","isTrueTypeFile","isOpenTypeFile","isType1File","mimetype","CFFFont","Type1Font","convert","checkAndRepair","isOpenType","seacMap","int16","signedInt16","int32","string16","safeString16","isProblematicUnicodeLocation","adjustMapping","isSymbolic","isIdentityUnicode","newMap","usedFontCharCodes","nextAvailableFontCharCode","originalCharCode","fontCharCode","hasUnicodeValue","getRanges","numGlyphs","codeIndices","createCmapTable","bmpLength","trailingRangesCount","startCount","endCount","idDeltas","idRangeOffsets","glyphsIds","contiguous","format314","format31012","header31012","validateOS2Table","os2","selection","createOS2Table","charstrings","override","yMax","yMin","ulUnicodeRange1","ulUnicodeRange2","ulUnicodeRange3","ulUnicodeRange4","firstCharIndex","lastCharIndex","typoAscent","typoDescent","winAscent","winDescent","createPostTable","angle","createNameTable","proto","stringsUnicode","strBufUnicode","platforms","encodings","languages","namesRecordCount","nameTable","strOffset","strs","ID","readTableEntry","previousPosition","readOpenTypeHeader","ttf","entrySelector","readCmapTable","platformId","encodingId","mappings","hasShortCmap","segment","potentialTable","canBreak","useTable","segIndex","segments","offsetsCount","rangeOffset","offsetIndex","firstCode","sanitizeMetrics","numOfMetrics","numOfSidebearings","numMissing","sanitizeGlyph","sourceStart","sourceEnd","destStart","hintsValid","contoursCount","flagsCount","instructionsStart","instructionsLength","instructionsEnd","coordinatesLength","xyLength","glyphDataLength","sanitizeHead","head","locaLength","numGlyphsPlusOne","sanitizeGlyphLocations","dupFirstEntry","itemEncode","locaData","locaDataSize","oldGlyfData","oldGlyfDataLength","newGlyfData","writeOffset","missingGlyphData","simpleGlyph","firstEntryLength","readPostScriptTable","post","maxpNumGlyphs","glyphNameIndexes","customNames","stringLength","readNameTable","numRecords","stringsStart","records","NAME_RECORD_LENGTH","platform","language","record","sanitizeTTProgram","ttContext","funcId","lastEndf","lastDeff","callstack","functionsCalled","tooComplexToFollowFunctions","inFDEF","ifLevel","inELSE","functionsStackDeltas","stackTop","functionsDefined","functionsUsed","TTOpsStackDeltas","foldTTTable","checkInvalidFunctions","maxFunctionDefs","sanitizeTTPrograms","fpgm","prep","cvt","cvtData","hasGlyph","widthCode","missingGlyphs","skipToUnicode","cffFile","VALID_TABLES","isTrueType","metricsOverride","isCidToGidMapEmpty","cmapTable","cmapPlatformId","cmapEncodingId","cmapMappings","cmapMappingsLength","unicodeOrCharCode","isUnicode","newMapping","compiler","namePrototype","builder","tableTag","getCharCodes","charCodes","createCharCode","mapping","getGlyphMapping","getCharset","baseGlyphName","accentGlyphName","baseGlyphId","accentGlyphId","accentOffset","baseFontCharCode","accentFontCharCode","tan","cffWidths","hmtx","_shadowWidth","possibleSpaceReplacements","charToGlyph","charsCache","charsCacheKey","findBlock","streamBytes","signature","startIndex","streamBytesLength","signatureLength","getHeaderBlock","suggestedLength","headerBytes","headerBytesLength","block","EEXEC_SIGNATURE","streamStartPos","actualLength","SCAN_BLOCK_LENGTH","getEexecBlock","eexecBytes","PFB_HEADER_SIZE","headerBlockLength","eexecBlockLength","pfbHeader","pfbHeaderPresent","headerBlock","extractFontHeader","eexecBlock","eexecBlockParser","extractFontProgram","type2Charstrings","getType2Charstrings","getType2Subrs","wrap","getSeacs","type1Charstrings","type1Subrs","type2Subrs","charsetArray","charStringsIndex","field","privateData","subrIndex","charsets","navigator","userAgent","handleImageData","nativeDecoder","decodeAndClamp","addend","coefficient","resizeImageMask","isMask","matte","needsDecode","decodeCoefficients","decodeAddends","maskDict","smaskPromise","maskPromise","imagePromise","imageData","smaskData","maskData","imageIsFromDecodeStream","computedLength","haveFullData","decodeBuffer","getComponents","buf","bufferPos","rowComps","loop1End","loop2End","remainingBits","fillOpacity","rgbaBuf","alphaBuf","sw","sh","fillGrayBuffer","opacity","imageOffset","maskOffset","undoPreblend","matteRgb","matteR","matteG","matteB","forceRGBA","getImageBytes","newArray","maybeUndoPreblend","ContextCache","DecodingContext","decodeInteger","contextCache","procedure","getContexts","decodeIAID","decodeBitmapTemplate0","decodingContext","pixel","row1","row2","bitmap","decodeBitmap","mmr","templateIndex","prediction","at","useskip","template","CodingTemplates","templateLength","templateX","templateY","changingTemplateEntries","reuseMask","changingEntriesLength","changingTemplateX","changingTemplateY","changingTemplateBit","j0","sbb_left","sbb_top","sbb_right","pseudoPixelContext","ReusedContexts","ltp","decodeRefinement","referenceBitmap","codingTemplate","RefinementTemplates","coding","codingTemplateLength","codingTemplateX","codingTemplateY","referenceTemplate","reference","referenceTemplateLength","referenceTemplateX","referenceTemplateY","referenceWidth","referenceHeight","RefinementReusedContexts","decodeSymbolDictionary","huffman","refinement","symbols","numberOfNewSymbols","numberOfExportedSymbols","huffmanTables","refinementTemplateIndex","refinementAt","newSymbols","currentHeight","symbolCodeLength","currentWidth","deltaWidth","numberOfInstances","decodeTextRegion","symbolId","rdx","rdy","exportedSymbols","currentFlag","totalSymbolsLength","runLength","defaultPixelValue","numberOfSymbolInstances","stripSize","inputSymbols","transposed","dsOffset","referenceCorner","combinationOperator","stripT","firstS","currentS","currentT","applyRefinement","symbolBitmap","symbolWidth","symbolHeight","rdw","rdh","symbolRow","offsetT","offsetS","maxWidth","deltaS","readSegmentHeader","segmentHeader","segmentType","SegmentTypes","typeName","deferredNonRetain","pageAssociationFieldSize","referredFlags","referredToCount","retainBits","referredToSegmentNumberSize","referredTo","pageAssociation","genericRegionInfo","readRegionSegmentInformation","genericRegionSegmentFlags","RegionSegmentInformationFieldLength","genericRegionMmr","searchPatternLength","searchPattern","headerEnd","readSegments","randomAccess","processSegment","atLength","dictionary","dictionaryFlags","huffmanDHSelector","huffmanDWSelector","bitmapSizeSelector","aggregationInstancesSelector","bitmapCodingContextUsed","bitmapCodingContextRetained","refinementTemplate","textRegion","textRegionSegmentFlags","textRegionHuffmanFlags","huffmanFS","huffmanDS","huffmanDT","huffmanRefinementDW","huffmanRefinementDH","huffmanRefinementDX","huffmanRefinementDY","huffmanRefinementSizeSelector","genericRegion","pageInfo","resolutionX","resolutionY","pageSegmentFlags","lossless","requiresBuffer","combinationOperatorOverride","callbackName","processSegments","parseJbig2Chunks","SimpleSegmentVisitor","onPageInformation","currentPageInfo","drawBitmap","regionInfo","mask0","onImmediateGenericRegion","region","onImmediateLosslessGenericRegion","arguments","onSymbolDictionary","currentSegment","referredSegments","onImmediateTextRegion","onImmediateLosslessTextRegion","buildHuffmanTable","children","getBlockBufferOffset","col","blocksPerLine","decodeScan","frame","resetInterval","spectralStart","spectralEnd","successivePrev","successive","bitsCount","bitsData","nextByte","decodeHuffman","tree","receive","receiveAndExtend","decodeBaseline","huffmanTableDC","blockData","pred","rs","huffmanTableAC","dctZigZag","decodeDCFirst","decodeDCSuccessive","decodeACFirst","eobrun","decodeACSuccessive","successiveACState","successiveACNextValue","decodeMcu","mcu","mcuRow","mcusPerLine","mcuCol","decodeBlock","decodeFn","progressive","componentsLength","marker","mcuExpected","blocksPerColumn","mcusPerColumn","quantizeAndInverse","blockBufferOffset","v3","v4","v5","v6","v7","p0","p5","p6","p7","qt","quantizationTable","dctSqrt2","dctSqrt1d2","dctSin6","dctCos6","dctSin3","dctCos3","dctSin1","dctCos1","buildComponentData","computationBuffer","Int16Array","blockRow","blockCol","clamp0to255","readDataBlock","prepareComponents","samplesPerLine","maxH","scanLines","maxV","blocksPerLineForMcu","blocksPerColumnForMcu","blocksBufferSize","jfif","adobe","quantizationTables","huffmanTablesAC","huffmanTablesDC","fileMarker","appData","densityUnits","xDensity","yDensity","thumbWidth","thumbHeight","thumbData","flags0","flags1","transformCode","quantizationTablesLength","quantizationTablesEnd","quantizationTableSpec","tableData","extended","componentIds","componentId","qId","quantizationId","huffmanLength","huffmanTableSpec","codeLengthSum","huffmanValues","selectorsCount","componentIndex","tableSpec","successiveApproximation","numComponents","_getLinearizedBlockData","componentScaleX","componentScaleY","blocksPerScanline","xScaleBlockOffset","mask3LSB","_isColorConversionNeeded","_convertYccToRgb","Cb","Cr","_convertYcckToRgb","_convertYcckToCmyk","_convertCmykToRgb","forceRGBoutput","rgbData","grayColor","seed","SEED","MASK_HIGH","MASK_LOW","alwaysUseUint32ArrayView","useUint32ArrayView","blockCounts","tailLength","dataUint32","k2","C1","C2","C1_LOW","C2_LOW","ShadingType","FUNCTION_BASED","AXIAL","RADIAL","FREE_FORM_MESH","LATTICE_FORM_MESH","COONS_PATCH_MESH","TENSOR_PATCH_MESH","getPattern","ctx","Shadings","RadialAxial","Mesh","Dummy","SMALL_NUMBER","coordsArr","shadingType","t0","domainArr","extendStart","extendEnd","extendArr","r1","r2","distance","colorStops","ratio","cssColor","background","r0","MeshStreamReader","tmpCompsBuf","csNumComps","tmpCsCompsBuf","colorFn","decodeType4Shading","mesh","coords","ps","verticesLeft","hasData","readFlag","coord","readCoordinate","readComponents","align","figures","decodeType5Shading","verticesPerRow","buildFigureFromPatch","figure","ci","figureMinX","figureMinY","figureMaxX","figureMaxY","splitXBy","TRIANGLE_DENSITY","MIN_SPLIT_PATCH_CHUNKS_AMOUNT","MAX_SPLIT_PATCH_CHUNKS_AMOUNT","splitYBy","figureCoords","figureColors","cl","cr","c2","c3","bRow","getB","bCol","newColor","decodeType6Shading","tmp4","decodeType7Shading","updateBounds","packData","coordsPacked","xy","colorsPacked","decodeContext","bitsPerCoordinate","bitsPerFlag","patchMesh","yi","buildB","lut","t_","coreDocument","BasePdfManager","_docId","_password","_docBaseUrl","ensureHelper","nextToken","getToken","accept","expect","PostScriptTokenTypes","LBRACE","parseBlock","RBRACE","NUMBER","OPERATOR","parseCondition","conditionLocation","IF","jumpLocation","endOfTrue","IFELSE","PostScriptToken","opCache","getOperator","opValue","HINTING_ENABLED","Type1CharString","lsb","flexing","COMMAND_MAP","hstem","vstem","vmoveto","rlineto","hlineto","vlineto","rrcurveto","callsubr","flex","drop","endchar","rmoveto","hmoveto","vhcurveto","hvcurveto","encoded","wx","sbx","executeCommand","dy","sby","flexArgs","howManyArgs","command","keepStack","stackLength","isHexDigit","discardNumber","decrypted","decryptAscii","digit1","digit2","isSpecial","isBinary","EEXEC_ENCRYPT_KEY","CHAR_STRS_ENCRYPT_KEY","readNumberArray","readInt","readBoolean","lenIV","program","blueArray","charString","encodingArg","PDFJS","compatibilityChecked","isAndroid","isAndroidPre3","isAndroidPre5","isChrome","isChromeWithRangeBug","isIOSChrome","isIE","isIOS","isOpera","isSafari","hasDOM","TypedArray","setArrayOffset","webkitURL","definePropertyPossible","Test","def","__defineGetter__","__defineSetter__","xhrPrototype","mimeType","_responseType","overrideMimeType","VBArray","responseBody","responseText","text","btoa","atob","bc","idx","headArgs","HTMLElement","_dataset","dataset","attributes","attribute","changeList","itemName","className","list","classListPrototype","toggle","_classList","classList","importScripts","consoleTimer","workerConsole","ignoreIfTargetDisabled","isDisabled","target","stopPropagation","disabled","parentNode","locale","userLanguage","history","pushState","disableHistory","CanvasPixelArray","versionMatch","polyfill","match","contextPrototype","CanvasRenderingContext2D","fakeRequestAnimationFrame","setTimeout","requestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","maxCanvasPixels","disableFullscreen","scripts","el","inputProto","typeProperty","getOwnPropertyDescriptor","attachEvent","documentProto","readyStateProto","Element","removeChild","iterable","resolve_","reject_","onReject","STATUS_PENDING","STATUS_RESOLVED","STATUS_REJECTED","REJECTION_TIMEOUT","HandlerManager","handlers","running","unhandledRejections","pendingRejectionCheck","scheduleHandlers","_status","_handlers","runHandlers","RUN_TIMEOUT","timeoutAt","nextStatus","thisPromise","nextValue","_value","onResolve","_unhandledRejection","removeUnhandeledRejection","nextPromise","_updateStatus","addUnhandledRejection","scheduleRejectionCheck","unhandled","_","resolver","_resolve","_reject","rejectAll","resolveAll","unresolved","isPromise","WeakMap","delete","isRelativeScheme","scheme","relative","invalid","_isInvalid","IDNAToASCII","percentEscape","percentEscapeQuery","stateOverride","cursor","seenAt","seenBracket","loop","ALPHA","ALPHANUMERIC","_scheme","_isRelative","_query","_fragment","_schemeData","_host","_port","_path","_username","nextC","nextNextC","cp","tempC","relativePathDotMapping","JURL","hasWorkingUrl","pathname","authority","host","hostname","OriginalURL","revokeObjectURL","pdfjsCoreWorker"],"mappings":"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CAAAslB,EAAA,KAAAC,GAEAloB,KAAAmoB,SAAA,EACAnoB,KAAAooB,QAAA,EACAxB,EAAArmB,KAAAP,KAAAgoB,GAnpBA,GAAAK,GAAA,GAAAC,aACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,GACA,EACA,GACA,EACA,GACA,EACA,GACA,EACA,GACA,EACA,KAEAC,EAAA,GAAAD,aACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,MACA,MACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,IACA,IACA,MAEAE,EAAA,GAAAF,aACA,EACA,EACA,EACA,EACA,MACA,MACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,SAEAG,GACA,GAAAH,aaACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,EACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,IAEA,EA2OA,OApNAP,GAAAvmB,UAAAT,OAAA2D,OAAAkiB,EAAAplB,WACAumB,EAAAvmB,UAAAmnB,QAAA,SAAAC,GAKA,IAJA,GAGA9O,GAHAlV,EAAA5E,KAAA4E,IACAujB,EAAAnoB,KAAAmoB,SACAC,EAAApoB,KAAAooB,QAEAD,EAAAS,IACA,KAAA9O,EAAAlV,EAAAmhB,YACApjB,EAAA,gCAEAylB,GAAAtO,GAAAqO,EACAA,GAAA,CAKA,OAHArO,GAAAsO,GAAA,GAAAQ,GAAA,EACA5oB,KAAAooB,WAAAQ,EACA5oB,KAAAmoB,YAAAS,EACA9O,GAEAiO,EAAAvmB,UAAAqnB,QAAA,SAAAC,GAOA,IANA,GAKAhP,GALAlV,EAAA5E,KAAA4E,IACAmkB,EAAAD,EAAA,GACAE,EAAAF,EAAA,GACAX,EAAAnoB,KAAAmo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EACAD,IAGA,EACAD,IAGA,EACAA,IAGA,EACAD,IAGA,EACAA,IAGA,EACAL,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAC,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAG,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAD,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAD,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,EACAA,IAGA,E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C,EACA,yBACA,MAAAC,EACA,4BACA,MAAAC,EACA,sBACA,MAAAC,EACA,yBACA,MAAAC,EACA,SACA,aAnxDA,GAAAD,IACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,QACA,cACA,oBACA,GACA,iBACA,iBACA,iBACA,aACA,oBACA,qBACA,iBACA,iBACA,QACA,SACA,SACA,WACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,QACA,YACA,gBACA,sBACA,iBACA,gBACA,GACA,YACA,YACA,eACA,YACA,YACA,GACA,GACA,YACA,GACA,GACA,YACA,YACA,YACA,YACA,GACA,GACA,YACA,YACA,YACA,GACA,KACA,KACA,KACA,MACA,MACA,oBACA,GACA,qBACA,kBACA,iBACA,aACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,gBACA,YACA,SACA,aACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,kBACA,eACA,cACA,GACA,GACA,cACA,cACA,gBACA,aACA,aACA,GACA,iBACA,GACA,GACA,cACA,GACA,GACA,aACA,iBACA,GACA,GACA,cACA,YACA,eACA,GACA,GACA,GACA,aACA,UACA,gBACA,oBACA,YACA,eACA,cACA,eACA,WACA,YACA,GACA,GACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,iBACA,iBACA,gBACA,cACA,cACA,mBACA,cACA,iBACA,aACA,UACA,gBACA,cACA,cACA,mBACA,iBACA,cACA,cACA,mBACA,iBACA,WACA,cACA,cACA,cACA,mBACA,cACA,iBACA,UACA,cACA,cACA,cACA,mBACA,iBACA,cACA,aACA,kBAEAC,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,QACA,cACA,oBACA,eACA,iBACA,iBACA,iBACA,aACA,oBACA,qBACA,iBACA,iBACA,QACA,SACA,SACA,WACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,QACA,YACA,GACA,sBACA,GACA,gBACA,GACA,GACA,GACA,GACA,WACA,GACA,GACA,aACA,UACA,gBACA,YACA,eACA,cACA,eACA,WACA,YACA,GACA,GACA,GACA,GACA,GACA,GACA,KACA,KACA,KACA,MACA,MACA,oBACA,GACA,qBACA,kBACA,iBACA,aACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,gBACA,YACA,SACA,aACA,GACA,GACA,YACA,eACA,GACA,GACA,GACA,GACA,cACA,cACA,mBACA,iBACA,cACA,aACA,gBACA,cACA,cACA,mBACA,iBACA,cACA,cACA,mBACA,iBACA,cACA,cACA,cACA,mBACA,iBACA,cACA,cACA,cACA,mBACA,iBACA,GACA,gBACA,eACA,gBACA,cACA,gBACA,gBACA,cACA,GACA,eACA,cACA,GACA,gBACA,GACA,aACA,YACA,eACA,GACA,gBACA,iBACA,cACA,GACA,iBACA,GACA,aACA,GACA,eACA,eACA,cACA,UACA,cACA,oBACA,cACA,cACA,GACA,GACA,GACA,GACA,GACA,GACA,eACA,GACA,GACA,GACA,GACA,GACA,UACA,aACA,iBACA,GACA,GACA,GACA,GACA,kBACA,GACA,iBACA,GACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,eACA,eACA,GACA,YACA,YACA,YACA,GACA,GACA,YACA,YACA,YACA,GACA,GACA,GACA,GACA,GACA,YACA,cACA,aACA,cACA,YACA,YACA,YACA,gBACA,iBACA,iBACA,aAEAJ,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,QACA,SACA,WACA,aACA,SACA,UACA,YACA,cACA,YACA,aACA,WACA,OACA,QACA,SACA,SACA,QACA,OACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,QACA,YACA,OACA,QACA,UACA,WACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,cACA,YACA,eACA,cACA,aACA,QACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,YACA,MACA,aACA,aACA,GACA,YACA,QACA,WACA,SACA,SACA,YACA,YACA,SACA,SACA,cACA,YACA,SACA,QACA,WACA,SACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,OACA,WACA,UACA,SACA,YACA,aACA,aACA,YACA,YACA,QACA,WACA,WACA,KACA,SACA,WACA,YACA,YACA,eACA,MACA,KACA,cACA,YACA,UACA,KACA,WACA,cACA,eACA,QACA,KACA,SACA,eACA,aACA,aACA,UACA,SACA,cACA,QACA,gBACA,iBACA,WACA,QACA,SACA,SACA,SACA,KACA,KACA,SACA,SACA,eACA,gBACA,YACA,aACA,SACA,UACA,YACA,YACA,WACA,WACA,gBACA,iBACA,KACA,KACA,YACA,iBACA,iBACA,eACA,cACA,cACA,cACA,SACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,cACA,QACA,SACA,SACA,cACA,SACA,WACA,aACA,QACA,SACA,QACA,YACA,OACA,UACA,eACA,SACA,SAEAD,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,QACA,SACA,WACA,aACA,SACA,UACA,YACA,aACA,YACA,aACA,WACA,OACA,QACA,SACA,SACA,QACA,OACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,QACA,YACA,OACA,QACA,UACA,WACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,cACA,YACA,eACA,cACA,aACA,YACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,YACA,MACA,aACA,aACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,aACA,OACA,WACA,WACA,MACA,SACA,UACA,WACA,cACA,eACA,gBACA,gBACA,iBACA,KACA,KACA,GACA,SACA,SACA,YACA,iBACA,GACA,YACA,SACA,iBACA,eACA,gBACA,iBACA,WACA,cACA,GACA,eACA,GACA,QACA,QACA,aACA,QACA,SACA,QACA,YACA,WACA,GACA,OACA,UACA,GACA,eACA,SACA,QACA,SACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,KACA,GACA,cACA,GACA,GACA,GACA,GACA,SACA,SACA,KACA,eACA,GACA,GACA,GACA,GACA,GACA,KACA,GACA,GACA,GACA,WACA,GACA,GACA,SACA,SACA,KACA,cAEAD,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,QACA,SACA,WACA,aACA,SACA,UACA,YACA,cACA,YACA,aACA,WACA,OACA,QACA,SACA,SACA,QACA,OACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,QACA,YACA,OACA,QACA,UACA,WACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,cACA,YACA,eACA,cACA,aACA,QACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,YACA,MACA,aACA,aACA,SACA,OACA,SACA,iBACA,SACA,eACA,WACA,SACA,YACA,aACA,cACA,SACA,gBACA,KACA,SACA,SACA,SACA,SACA,YACA,aACA,eACA,gBACA,SACA,SACA,SACA,QACA,YACA,SACA,iBACA,KACA,SACA,SACA,YACA,QACA,aACA,OACA,WACA,WACA,MACA,YACA,UACA,WACA,YACA,cACA,gBACA,aACA,SACA,aACA,SACA,SACA,YACA,cACA,gBACA,QACA,KACA,YACA,iBACA,UACA,cACA,eACA,iBACA,aACA,UACA,gBACA,eACA,SACA,SACA,cACA,SACA,YACA,QACA,KACA,WACA,SACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,MACA,SACA,SACA,SACA,cACA,SACA,YACA,WACA,SACA,SACA,SACA,cACA,YACA,SACA,QACA,aACA,SACA,SACA,cACA,SACA,YACA,QACA,KACA,WACA,SACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,MACA,SACA,SACA,SACA,cACA,SACA,YACA,SACA,SACA,SACA,SACA,cACA,YACA,SACA,QACA,aAEAG,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,QACA,SACA,YACA,aACA,cACA,UACA,YACA,WACA,YACA,aACA,eACA,OACA,QACA,QACA,SACA,QACA,OACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,QACA,YACA,OACA,QACA,UACA,WACA,YACA,QACA,OACA,MACA,QACA,UACA,MACA,QACA,MACA,OACA,SACA,QACA,SACA,KACA,KACA,UACA,KACA,QACA,MACA,QACA,MACA,UACA,SACA,QACA,KACA,MACA,OACA,cACA,YACA,eACA,gBACA,aACA,YACA,QACA,OACA,MACA,QACA,UACA,MACA,QACA,MACA,OACA,OACA,QACA,SACA,KACA,KACA,UACA,KACA,QACA,MACA,QACA,MACA,UACA,SACA,QACA,KACA,MACA,OACA,YACA,MACA,aACA,UACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,OACA,WACA,SACA,YACA,WACA,WACA,SACA,OACA,UACA,QACA,QACA,YACA,YACA,UACA,aACA,YACA,SACA,YACA,SACA,eACA,WACA,eACA,cACA,SACA,SACA,WACA,cACA,cACA,WACA,cACA,eACA,iBACA,QACA,WACA,WACA,cACA,iBACA,aACA,WACA,eACA,QACA,iBACA,iBACA,YACA,eACA,eACA,UACA,aACA,QACA,WACA,gBACA,iBACA,iBACA,UACA,UACA,UACA,aACA,aACA,YACA,eACA,eACA,aACA,gBACA,eACA,UACA,YACA,eACA,gBACA,gBACA,YACA,cACA,cACA,cACA,gBACA,gBACA,gBACA,cACA,eACA,cACA,UACA,GACA,aACA,WACA,aACA,aACA,aACA,eACA,eACA,eACA,iBACA,iBACA,iBACA,eACA,gBACA,gBAEAC,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,QACA,KACA,KACA,OACA,KACA,KACA,KACA,OACA,OACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,KACA,KACA,KACA,KACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,GACA,MACA,MACA,MACA,MACA,MACA,MACA,OACA,MACA,OACA,MACA,MACA,MACA,MACA,MACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,GACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OAsBAzgC,GAAAqgC,kBACArgC,EAAAsgC,mBACAtgC,EAAAugC,mBACAvgC,EAAAwgC,oBACAxgC,EAAAygC,uBACAzgC,EAAA0gC,iBACA1gC,EAAAmgC,eAIA,SAAApgC,EAAAC,EAAAO,GAEA,YAEA,IAAA4iB,GAAA5iB,EAAA,GACAmlB,EAAAnlB,EAAA,GACAqgC,EAAArgC,EAAA,GACA6Y,EAAA+J,EAAA/J,qBACAzI,EAAAwS,EAAAxS,WACAlN,EAAA0f,EAAA1f,OACAT,EAAAmgB,EAAAngB,MACAV,EAAA6gB,EAAA7gB,KACA0G,EAAAma,EAAAna,QACAH,EAAAsa,EAAAta,MACAC,EAAAqa,EAAAra,MACAC,EAAAoa,EAAApa,SACAnG,EAAAugB,EAAAvgB,KACAuf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GA,IAFA1gC,EAAA,EACAqgC,EAAA9Z,EAAArB,UAAAllB,GACAf,EAAA,EAAiBA,EAAAe,EAAOf,IAExB,IADA0I,EAAA04B,EAAAphC,MACAwhC,GAAA94B,IAAA+4B,IAAA/4B,EAAA64B,GAAA74B,EAAA,MACAi5B,EAAA,CACA,OAGA,OAAAA,EACA,UAGAA,GAAA,CAIA,OAAAra,GAAAlhB,IAAA,EAAAs7B,GAEAE,6BAAA,SAAAta,GAEA,IADA,GAAA7N,GAAAooB,EAAAh9B,EAAA68B,EAAApa,EAAAlhB,IAAA07B,GAAA,GACA,KAAAroB,EAAA6N,EAAA5B,YACA,SAAAjM,EAAA,CAGA,OAAA6N,EAAA5B,WACA,OACA,KACA,UACA4B,EAAApB,MAAA,EACA,MACA,UACA4b,GAAA,CACA,MACA,UACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACAD,EAAAva,EAAA3B,YACAkc,EAAA,EACAva,EAAApB,KAAA2b,EAAA,GAEAva,EAAApB,MAAA,GAIA,GAAA4b,EACA,MAIA,MADAj9B,GAAAyiB,EAAAlhB,IAAAs7B,GACA,IAAAjoB,GACAvX,EAAA,oFACAolB,EAAApB,MAAArhB,GACAlF,KAAAwhC,2BAAA7Z,KAEA3nB,KAAAoiC,mBAAAza,GACAziB,IAEAm9B,iCAAA,SAAA1a,GAGA,IAFA,GACA5e,GAAA7D,EADAo9B,EAAA,IAAAC,EAAA,GACAR,EAAApa,EAAAlhB,KACA,KAAAsC,EAAA4e,EAAA5B,YACA,GAAAhd,IAAAu5B,GAAA3a,EAAAvB,aAAAmc,EAAA,CACA5a,EAAApB,MACA,OAIA,MADArhB,GAAAyiB,EAAAlhB,IAAAs7B,GACA,IAAAh5B,GACAxG,EAAA,wFACAolB,EAAApB,MAAArhB,GACAlF,KAAAwhC,2BAAA7Z,KAEA3nB,KAAAoiC,mBAAAza,GACAziB,IAEAs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AA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,aACAA,EAAA,aACAA,EAAA,aACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,gBACAA,EAAA,cACAA,GAAA,eACAA,EAAA,eACAA,EAAA,gBACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,EAAA,cACAA,EAAA,eACAA,EAAA,eACAA,EAAA,eACAA,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AC,KAAA,EACAC,KAAA,EACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,EACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,EACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,MACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACAC,KAAA,GACAC,WAAA,IAGAH,GAAA,KACAC,KAAA,GACA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CA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,cACA,YACA,eACA,cACA,aACA,YACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,YACA,MACA,aACA,aACA,aACA,OACA,WACA,WACA,MACA,SACA,UACA,WACA,cACA,eACA,gBACA,gBACA,iBACA,KACA,KACA,SACA,SACA,YACA,iBACA,YACA,SACA,iBACA,eACA,gBACA,iBACA,WACA,cACA,eACA,QACA,QACA,aACA,QACA,SACA,QACA,YACA,WACA,OACA,UACA,eACA,SACA,QACA,SACA,KACA,cACA,SACA,SACA,KACA,eACA,KACA,WACA,SACA,SACA,KACA,aACA,cACA,aACA,KACA,YACA,MACA,UACA,YACA,QACA,aACA,SACA,YACA,SACA,QACA,gBACA,cACA,aACA,QACA,MACA,WACA,gBACA,YACA,SACA,cACA,YACA,SACA,QACA,SACA,WACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,YACA,SACA,SACA,cACA,YACA,SACA,QACA,SACA,WACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,YACA,SACA,cACA,oBACA,iBACA,iBACA,iBACA,aACA,oBACA,qBACA,iBACA,iBACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,gBACA,sBACA,iBACA,gBACA,YACA,YACA,eACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,KACA,MACA,MACA,oBACA,qBACA,kBACA,iBACA,aACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,gBACA,YACA,SACA,aACA,kBACA,eACA,cACA,cACA,cACA,gBACA,aACA,aACA,iBACA,cACA,aACA,iBACA,cACA,YACA,eACA,oBACA,YACA,eACA,cACA,eACA,WACA,YACA,eACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,iBACA,iBACA,gBACA,cACA,cACA,mBACA,cACA,iBACA,aACA,UACA,gBACA,cACA,cACA,mBACA,iBACA,cACA,cACA,mBACA,iBACA,WACA,cACA,cACA,cACA,mBACA,cACA,iBACA,UACA,cACA,cACA,cACA,mBACA,iBACA,cACA,aACA,iBACA,UACA,UACA,UACA,UACA,QACA,OACA,OACA,QACA,SACA,UACA,QACA,YAEAC,EAAA,WA0RA,QAAAA,GAAAC,EAAAC,EAAAC,GACAp6C,KAAAgF,MAAAk1C,EAAAr3B,WACA7iB,KAAAm6C,aACAn6C,KAAAo6C,wBA5RA,GAAAC,IACA,MAEAvvC,GAAA,QACApF,IAAA,EACA40C,eAAA,EACAC,MAAA,GAEA,MAEAzvC,GAAA,QACApF,IAAA,EACA40C,eAAA,EACAC,MAAA,IAGAzvC,GAAA,UACApF,IAAA,EACA40C,eAAA,IAGAxvC,GAAA,UACApF,IAAA,EACA80C,YAAA,IAGA1vC,GAAA,UACApF,IAAA,EACA80C,YAAA,IAGA1vC,GAAA,UACApF,IAAA,EACA80C,YAAA,IAGA1vC,GAAA,YACApF,IAAA,EACA80C,YAAA,GAEA,MAEA1vC,GAAA,WACApF,IAAA,EACA+0C,YAAA,IAGA3vC,GAAA,SACApF,IAAA,EACA+0C,YAAA,GAEA,KACA,MAEA3vC,GAAA,UACApF,IAAA,EACA40C,eAAA,GAEA,KACA,KACA,MAEAxvC,GAAA,U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AAA,EAAA,IACAV,EAAA1Z,MAAA3iC,KAAAwC,GAEA,MAAA65C,IAEAD,KAEAtG,EAAA,WAiTA,QAAAA,GAAAC,GACA,OAAAsG,IACAA,EAAAD,EAAAS,aAAAC,IAEAV,EAAA1hD,KAAAP,KAAAkiD,EAAAtG,GACA57C,KAAAs9C,YAAA,KArTA,GAAAqF,MAGA,GACA,IAEA,OAEA,MACA,MACA,OAEA,QAIA,GACA,IAEA,gBACA,MACA,OAGA,EACA,UACA,MACA,OAGA,EACA,SACA,MACA,QAIA,GACA,GAEA,YACA,MACA,OAGA,EACA,WACA,MACA,OAGA,EACA,aACA,MACA,OAGA,EACA,SACA,MACA,QAIA,GACA,GAEA,eACA,MACA,KAIA,GACA,GAEA,cACA,MACA,KAIA,GACA,GAEA,oBACA,OACA,OAIA,GACA,GAEA,qBACA,MACA,MAIA,GACA,GAEA,YACA,MACA,KAIA,GACA,GAEA,iBACA,MACA,KAIA,GACA,GAEA,cAEA,MACA,MACA,MACA,MACA,MACA,QAGA,KACA,EACA,EACA,KACA,EACA,KAIA,GACA,WACA,MACA,OAGA,EACA,YAEA,MACA,MACA,MACA,QAGA,EACA,EACA,EACA,MAKA,GACA,GAEA,cACA,MACA,IAGA,GACA,OACA,QACA,OAGA,GACA,UACA,SACA,IAGA,GACA,WACA,SACA,IAGA,GACA,cACA,SACA,IAGA,GACA,WAEA,SACA,UAEA,QAIA,GACA,IAEA,aACA,MACA,QAIA,GACA,IAEA,eACA,MACA,QAIA,GACA,IAEA,gBACA,QACA,QAIA,GACA,IAEA,iBACA,MACA,KAIA,GACA,IAEA,kBACA,MACA,KAIA,GACA,IAEA,cACA,MACA,KAIA,GACA,IAEA,WACA,MACA,QAIA,GACA,IAEA,UACA,MACA,QAIA,GACA,IAEA,WACA,SACA,QAIA,GACA,IAEA,UACA,SACA,QAIA,GACA,IAEA,WACA,MACA,OAGAT,EAAA,IASA,OADAvG,GAAAn6C,UAAAT,OAAA2D,OAAAu9C,EAAAzgD,WACAm6C,KAEAyE,EAAA,WA2IA,QAAAA,GAAAxE,GACA,OAAAsG,IACAA,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CA,EACA,EACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,GACA,EACA,GACA,GACA,KAEA0kB,EAAA,GAAAnC,cACA,WACA,UACA,WACA,YACA,UACA,YACA,YACA,SACA,YACA,YACA,OACA,WACA,YACA,UACA,WACA,YACA,WACA,WACA,WACA,WACA,UACA,UACA,WACA,UACA,WACA,YACA,UACA,YACA,YACA,SACA,YACA,YACA,QACA,WACA,YACA,UACA,WACA,YACA,WACA,WACA,WACA,WACA,UACA,UACA,WACA,UACA,WACA,WACA,UACA,YACA,YACA,SACA,YACA,YACA,SACA,WACA,YACA,UACA,WACA,YACA,WACA,WACA,WACA,WAyEA,OAAAshC,MAEAQ,EAAA,WACA,QAAAA,GAAAC,EAAAC,GACAtqD,KAAAuqD,KAAA,EAAAF,EACArqD,KAAAwqD,IAAA,EAAAF,EA0EA,MAxEAF,GAAA5oD,WACAipD,IAAA,SAAAC,GACA1qD,KAAAuqD,MAAAG,EAAAH,KACAvqD,KAAAwqD,KAAAE,EAAAF,KAEAG,IAAA,SAAAD,GACA1qD,KAAAuqD,MAAAG,EAAAH,KACAvqD,KAAAwqD,KAAAE,EAAAF,KAEAI,GAAA,SAAAF,GACA1qD,KAAAuqD,MAAAG,EAAAH,KACAvqD,KAAAwqD,KAAAE,EAAAF,KAEAK,WAAA,SAAAC,GACAA,GAAA,IACA9qD,KAAAwqD,IAAAxqD,KAAAuqD,OAAAO,EAAA,KACA9qD,KAAAuqD,KAAA,IAEAvqD,KAAAwqD,IAAAxqD,KAAAwqD,MAAAM,EAAA9qD,KAAAuqD,MAAA,GAAAO,EACA9qD,KAAAuqD,KAAAvqD,KAAAuqD,OAAAO,EAAA,IAGAC,UAAA,SAAAD,GACAA,GAAA,IACA9qD,KAAAuqD,KAAAvqD,KAAAwqD,KAAAM,EAAA,GACA9qD,KAAAwqD,IAAA,IAEAxqD,KAAAuqD,KAAAvqD,KAAAuqD,MAAAO,EAAA9qD,KAAAwqD,MAAA,GAAAM,EACA9qD,KAAAwqD,IAAAxqD,KAAAwqD,KAAAM,IAGAE,YAAA,SAAAF,GACA,GAAAN,GAAAD,CACA,IAAAO,GACAP,EAAAvqD,KAAAwqD,IACAA,EAAAxqD,KAAAuqD,OAEAC,EAAAxqD,KAAAwqD,IACAD,EAAAvqD,KAAAuqD,MAEAO,GAAA,GACA9qD,KAAAwqD,QAAAM,EAAAP,GAAA,GAAAO,EACA9qD,KAAAuqD,SAAAO,EAAAN,GAAA,GAAAM,GAEAG,IAAA,WACAjrD,KAAAuqD,MAAAvqD,KAAAuqD,KACAvqD,KAAAwqD,KAAAxqD,KAAAwqD,KAEA3L,IAAA,SAAA6L,GACA,GAAAQ,IAAAlrD,KAAAwqD,MAAA,IAAAE,EAAAF,MAAA,GACAW,GAAAnrD,KAAAuqD,OAAA,IAAAG,EAAAH,OAAA,EACAW,GAAA,aACAC,GAAA,GAEAnrD,KAAAwqD,IAAA,EAAAU,EACAlrD,KAAAuqD,KAAA,EAAAY,GAEAC,OAAA,SAAApmD,EAAAkC,GACAlC,EAAAkC,GAAAlH,KAAAuqD,OAAA,OACAvlD,EAAAkC,EAAA,GAAAlH,KAAAuqD,MAAA,OACAvlD,EAAAkC,EAAA,GAAAlH,KAAAuqD,MAAA,MACAvlD,EAAAkC,EAAA,OAAAlH,KAAAuqD,KACAvlD,EAAAkC,EAAA,GAAAlH,KAAAwqD,MAAA,OACAxlD,EAAAkC,EAAA,GAAAlH,KAAAwqD,KAAA,OACAxlD,EAAAkC,EAAA,GAAAlH,KAAAwqD,KAAA,MACAxlD,EAAAkC,EAAA,OAAAlH,KAAAwqD,KAEAa,OAAA,SAAAX,GACA1qD,KAAAuqD,KAAAG,EAAAH,KACAvqD,KAAAwqD,IAAAE,EAAAF,MAGAJ,KAEAkB,EAAA,WACA,QAAAC,GAAAzkD,EAAA1F,GACA,MAAA0F,KAAA1F,EAAA0F,GAAA,GAAA1F,EAEA,QAAA2H,GAAAjC,EAAAmY,EAAAusC,GACA,MAAA1kD,GAAAmY,GAAAnY,EAAA0kD,EAEA,QAAAC,GAAA3kD,EAAAmY,EAAAusC,GACA,MAAA1kD,GAAAmY,EAAAnY,EAAA0kD,EAAAvsC,EAAAusC,EAEA,QAAAE,GAAA5kD,GACA,MAAAykD,GAAAzkD,EAAA,GAAAykD,EAAAzkD,EAAA,IAAAykD,EAAAzkD,EAAA,IAEA,QAAA6kD,GAAA7kD,GACA,MAAAykD,GAAAzkD,EAAA,GAAAykD,EAAAzkD,EAAA,IAAAykD,EAAAzkD,EAAA,IAEA,QAAA8kD,GAAA9kD,GACA,MAAAykD,GAAAzkD,EAAA,GAAAykD,EAAAzkD,EAAA,IAAAA,IAAA,EAEA,QAAA+kD,GAAA/kD,GACA,MAAAykD,GAAAzkD,EAAA,IAAAykD,EAAAzkD,EAAA,IAAAA,IAAA,GAoEA,QAAA8iD,GAAAljD,EAAAQ,EAAAhC,GACA,GAGA7E,GAAAurB,EAAAxqB,EAHAyoD,EAAA,WAAAh1B,EAAA,WAAAE,EAAA,WAAA+0B,EAAA,WAAAgC,EAAA,WAAAC,EAAA,WAAAC,EAAA,UAAAC,EAAA,WACAlC,EAAA,GAAAtkD,KAAAymC,MAAAhnC,EAAA,OACA8kD,EAAA,GAAAjkD,YAAAgkD,EAEA,KAAA1pD,EAAA,EAAaA,EAAA6E,IAAY7E,EACzB2pD,EAAA3pD,GAAAqG,EAAAQ,IAIA,KAFA8iD,EAAA3pD,KAAA,IACAe,EAAA2oD,EAAA,EACA1pD,EAAAe,GACA4oD,EAAA3pD,KAAA,CAEA2pD,GAAA3pD,KAAA,EACA2pD,EAAA3pD,KAAA,EACA2pD,EAAA3pD,KAAA,EACA2pD,EAAA3pD,KAAA6E,IAAA,OACA8kD,EAAA3pD,KAAA6E,GAAA,OACA8kD,EAAA3pD,KAAA6E,GAAA,OACA8kD,EAAA3pD,KAAA6E,GAAA,MACA8kD,EAAA3pD,KAAA6E,GAAA,KACA,IAAA+kD,GAAA,GAAA35B,aAAA,GACA,KAAAjwB,EAAA,EAAaA,EAAA0pD,GAAkB,CAC/B,IAAAn+B,EAAA,EAAcA,EAAA,KAAQA,EACtBq+B,EAAAr+B,GAAAo+B,EAAA3pD,IAAA,GAAA2pD,EAAA3pD,EAAA,OAAA2pD,EAAA3pD,EAAA,MAAA2pD,EAAA3pD,EAAA,GACAA,GAAA,CAEA,KAAAurB,EAAA,GAAeA,EAAA,KAAQA,EACvBq+B,EAAAr+B,GAAAigC,EAAA5B,EAAAr+B,EAAA,IAAAq+B,EAAAr+B,EAAA,GAAAggC,EAAA3B,EAAAr+B,EAAA,KAAAq+B,EAAAr+B,EAAA,KAEA,IAAAsgC,GAAAC,EAAAtxC,EAAAgvC,EAAA/vC,EAAA+a,EAAAp0B,EAAAs0B,EAAAp0B,EAAAmpD,EAAA/mD,EAAA+oD,EAAA5B,EAAA6B,EAAAlyC,EAAAmyC,EAAAI,EAAAH,CACA,KAAArgC,EAAA,EAAcA,EAAA,KAAQA,EACtBsgC,EAAAE,EAAAT,EAAA5oD,GAAAgG,EAAAhG,EAAAmnD,EAAArwC,GAAA4Q,EAAAmB,GAAAq+B,EAAAr+B,GACAugC,EAAAT,EAAA7wC,GAAA4wC,EAAA5wC,EAAAf,EAAArZ,GACA2rD,EAAAvyC,EACAA,EAAAqwC,EACAA,EAAAnnD,EACAA,EAAApC,EAAAurD,EAAA,EACAvrD,EAAAF,EACAA,EAAAqZ,EACAA,EAAAe,EACAA,EAAAqxC,EAAAC,EAAA,CAEAtC,KAAAhvC,EAAA,EACAga,IAAA/a,EAAA,EACAib,IAAAt0B,EAAA,EACAqpD,IAAAnpD,EAAA,EACAmrD,IAAA/oD,EAAA,EACAgpD,IAAA7B,EAAA,EACA8B,IAAAnyC,EAAA,EACAoyC,IAAAG,EAAA,EAEA,UAAArmD,aACA8jD,GAAA,OACAA,GAAA,OACAA,GAAA,MACA,IAAAA,EACAh1B,GAAA,OACAA,GAAA,OACAA,GAAA,MACA,IAAAA,EACAE,GAAA,OACAA,GAAA,OACAA,GAAA,MACA,IAAAA,EACA+0B,GAAA,OACAA,GAAA,OACAA,GAAA,MACA,IAAAA,EACAgC,GAAA,OACAA,GAAA,OACAA,GAAA,MACA,IAAAA,EACAC,GAAA,OACAA,GAAA,OACAA,GAAA,MACA,IAAAA,EACAC,GAAA,OACAA,GAAA,OACAA,GAAA,MACA,IAAAA,EACAC,GAAA,OACAA,GAAA,OACAA,GAAA,MACA,IAAAA,IAtJA,GAAAxhC,IACA,WACA,WACA,WACA,WACA,UACA,WACA,WACA,WACA,WACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,UACA,UACA,UACA,UACA,UACA,UACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WACA,WAyFA,OAAAm/B,MAEAyC,EAAA,WACA,QAAAtjD,GAAAyB,EAAA1D,EAAAmY,EAAAusC,EAAAlC,GACA9+C,EAAA6gD,OAAAvkD,GACA0D,EAAAigD,IAAAxrC,GACAqqC,EAAA+B,OAAAvkD,GACAwiD,EAAA2B,MACA3B,EAAAmB,IAAAe,GACAhhD,EAAAmgD,IAAArB,GAEA,QAAAmC,GAAAjhD,EAAA1D,EAAAmY,EAAAusC,EAAAlC,GACA9+C,EAAA6gD,OAAAvkD,GACA0D,EAAAigD,IAAAxrC,GACAqqC,EAAA+B,OAAAvkD,GACAwiD,EAAAmB,IAAAe,GACAhhD,EAAAmgD,IAAArB,GACAA,EAAA+B,OAAApsC,GACAqqC,EAAAmB,IAAAe,GACAhhD,EAAAmgD,IAAArB,GAEA,QAAAoC,GAAAlhD,EAAA1D,EAAAwiD,GACA9+C,EAAA6gD,OAAAvkD,GACA0D,EAAAwgD,YAAA,IACA1B,EAAA+B,OAAAvkD,GACAwiD,EAAA0B,YAAA,IACAxgD,EAAAmgD,IAAArB,GACAA,EAAA+B,OAAAvkD,GACAwiD,EAAA0B,YAAA,IACAxgD,EAAAmgD,IAAArB,GAEA,QAAAqC,GAAAnhD,EAAA1D,EAAAwiD,GACA9+C,EAAA6gD,OAAAvkD,GACA0D,EAAAwgD,YAAA,IACA1B,EAAA+B,OAAAvkD,GACAwiD,EAAA0B,YAAA,IACAxgD,EAAAmgD,IAAArB,GACAA,EAAA+B,OAAAvkD,GACAwiD,EAAA0B,YAAA,IACAxgD,EAAAmgD,IAAArB,GAEA,QAAAsC,GAAAphD,EAAA1D,EAAAwiD,GACA9+C,EAAA6gD,OAAAvkD,GACA0D,EAAAwgD,YAAA,GACA1B,EAAA+B,OAAAvkD,GACAwiD,EAAA0B,YAAA,GACAxgD,EAAAmgD,IAAArB,GACAA,EAAA+B,OAAAvkD,GACAwiD,EAAAuB,WAAA,GACArgD,EAAAmgD,IAAArB,GAEA,QAAAuC,GAAArhD,EAAA1D,EAAAwiD,GACA9+C,EAAA6gD,OAAAvkD,GACA0D,EAAAwgD,YAAA,IACA1B,EAAA+B,OAAAvkD,GACAwiD,EAAA0B,YAAA,IACAxgD,EAAAmgD,IAAArB,GACAA,EAAA+B,OAAAvkD,GACAwiD,EAAAuB,WAAA,GACArgD,EAAAmgD,IAAArB,GAoFA,QAAAM,GAAAljD,EAAAQ,EAAAhC,EAAAonD,GACAA,KACA,IAAAzC,GAAAh1B,EAAAE,EAAA+0B,EAAAgC,EAAAC,EAAAC,EAAAC,CACAK,IAUAzC,EAAA,GAAAO,GAAA,uBACAv1B,EAAA,GAAAu1B,GAAA,sBACAr1B,EAAA,GAAAq1B,GAAA,sBACAN,EAAA,GAAAM,GAAA,sBACA0B,EAAA,GAAA1B,GAAA,uBACA2B,EAAA,GAAA3B,GAAA,uBACA4B,EAAA,GAAA5B,GAAA,uBACA6B,EAAA,GAAA7B,GAAA,yBAhBAP,EAAA,GAAAO,GAAA,uBACAv1B,EAAA,GAAAu1B,GAAA,uBACAr1B,EAAA,GAAAq1B,GAAA,uBACAN,EAAA,GAAAM,GAAA,uBACA0B,EAAA,GAAA1B,GAAA,uBACA2B,EAAA,GAAA3B,GAAA,sBACA4B,EAAA,GAAA5B,GAAA,sBACA6B,EAAA,GAAA7B,GAAA,sBAWA,IAEA/pD,GAAAurB,EAAAxqB,EAFA2oD,EAAA,IAAAtkD,KAAAymC,MAAAhnC,EAAA,SACA8kD,EAAA,GAAAjkD,YAAAgkD,EAEA,KAAA1pD,EAAA,EAAaA,EAAA6E,IAAY7E,EACzB2pD,EAAA3pD,GAAAqG,EAAAQ,IAIA,KAFA8iD,EAAA3pD,KAAA,IACAe,EAAA2oD,EAAA,GACA1pD,EAAAe,GACA4oD,EAAA3pD,KAAA,CAEA2pD,GAAA3pD,KAAA,EACA2pD,EAAA3pD,KAAA,EACA2pD,EAAA3pD,KAAA,EACA2pD,EAAA3pD,KAAA,EACA2pD,EAAA3pD,KAAA,EACA2pD,EAAA3pD,KAAA,EACA2pD,EAAA3pD,KAAA,EACA2pD,EAAA3pD,KAAA,EACA2pD,EAAA3pD,KAAA,EACA2pD,EAAA3pD,KAAA,EACA2pD,EAAA3pD,KAAA,EACA2pD,EAAA3pD,KAAA6E,IAAA,OACA8kD,EAAA3pD,KAAA6E,GAAA,OACA8kD,EAAA3pD,KAAA6E,GAAA,OACA8kD,EAAA3pD,KAAA6E,GAAA,MACA8kD,EAAA3pD,KAAA6E,GAAA,KACA,IAAA+kD,GAAA,GAAArhD,OAAA,GACA,KAAAvI,EAAA,EAAaA,EAAA,GAAQA,IACrB4pD,EAAA5pD,GAAA,GAAA+pD,GAAA,IAEA,IAIAmC,GAJA1xC,EAAA,GAAAuvC,GAAA,KAAAtwC,EAAA,GAAAswC,GAAA,KAAA3pD,EAAA,GAAA2pD,GAAA,KACAzpD,EAAA,GAAAypD,GAAA,KAAArnD,EAAA,GAAAqnD,GAAA,KAAAF,EAAA,GAAAE,GAAA,KACAvwC,EAAA,GAAAuwC,GAAA,KAAAgC,EAAA,GAAAhC,GAAA,KACA8B,EAAA,GAAA9B,GAAA,KAAA+B,EAAA,GAAA/B,GAAA,KACAoC,EAAA,GAAApC,GAAA,KAAAX,EAAA,GAAAW,GAAA,IACA,KAAA/pD,EAAA,EAAaA,EAAA0pD,GAAkB,CAC/B,IAAAn+B,EAAA,EAAcA,EAAA,KAAQA,EACtBq+B,EAAAr+B,GAAA2+B,KAAAP,EAAA3pD,IAAA,GAAA2pD,EAAA3pD,EAAA,OAAA2pD,EAAA3pD,EAAA,MAAA2pD,EAAA3pD,EAAA,GACA4pD,EAAAr+B,GAAA4+B,IAAAR,EAAA3pD,EAAA,OAAA2pD,EAAA3pD,EAAA,OAAA2pD,EAAA3pD,EAAA,MAAA2pD,EAAA3pD,EAAA,GACAA,GAAA,CAEA,KAAAurB,EAAA,GAAeA,EAAA,KAAQA,EACvB2gC,EAAAtC,EAAAr+B,GACAigC,EAAAU,EAAAtC,EAAAr+B,EAAA,GAAA69B,GACA8C,EAAA1N,IAAAoL,EAAAr+B,EAAA,IACAggC,EAAAY,EAAAvC,EAAAr+B,EAAA,IAAA69B,GACA8C,EAAA1N,IAAA2N,GACAD,EAAA1N,IAAAoL,EAAAr+B,EAAA,IAUA,KARA/Q,EAAAwwC,OAAAxB,GACA/vC,EAAAuxC,OAAAx2B,GACAp0B,EAAA4qD,OAAAt2B,GACAp0B,EAAA0qD,OAAAvB,GACA/mD,EAAAsoD,OAAAS,GACA5B,EAAAmB,OAAAU,GACAlyC,EAAAwxC,OAAAW,GACAI,EAAAf,OAAAY,GACArgC,EAAA,EAAcA,EAAA,KAAQA,EACtBsgC,EAAAb,OAAAe,GACAT,EAAAa,EAAAzpD,EAAA0mD,GACAyC,EAAArN,IAAA2N,GACAzjD,EAAAyjD,EAAAzpD,EAAAmnD,EAAArwC,EAAA4vC,GACAyC,EAAArN,IAAA2N,GACAN,EAAArN,IAAAp0B,EAAAmB,IACAsgC,EAAArN,IAAAoL,EAAAr+B,IACA8/B,EAAAS,EAAAtxC,EAAA4uC,GACAgC,EAAAe,EAAA3xC,EAAAf,EAAArZ,EAAAgpD,GACA0C,EAAAtN,IAAA2N,GACAD,EAAAH,EACAA,EAAAvyC,EACAA,EAAAqwC,EACAA,EAAAnnD,EACApC,EAAAk+C,IAAAqN,GACAnpD,EAAApC,EACAA,EAAAF,EACAA,EAAAqZ,EACAA,EAAAe,EACA0xC,EAAAlB,OAAAa,GACAK,EAAA1N,IAAAsN,GACAtxC,EAAA0xC,CAEA1C,GAAAhL,IAAAhkC,GACAga,EAAAgqB,IAAA/kC,GACAib,EAAA8pB,IAAAp+C,GACAqpD,EAAAjL,IAAAl+C,GACAmrD,EAAAjN,IAAA97C,GACAgpD,EAAAlN,IAAAqL,GACA8B,EAAAnN,IAAAhlC,GACAoyC,EAAApN,IAAAuN,GAEA,GAAA5hD,EAoBA,OAnBA8hD,IAWA9hD,EAAA,GAAAzE,YAAA,IACA8jD,EAAAuB,OAAA5gD,EAAA,GACAqqB,EAAAu2B,OAAA5gD,EAAA,GACAuqB,EAAAq2B,OAAA5gD,EAAA,IACAs/C,EAAAsB,OAAA5gD,EAAA,IACAshD,EAAAV,OAAA5gD,EAAA,IACAuhD,EAAAX,OAAA5gD,EAAA,MAhBAA,EAAA,GAAAzE,YAAA,IACA8jD,EAAAuB,OAAA5gD,EAAA,GACAqqB,EAAAu2B,OAAA5gD,EAAA,GACAuqB,EAAAq2B,OAAA5gD,EAAA,IACAs/C,EAAAsB,OAAA5gD,EAAA,IACAshD,EAAAV,OAAA5gD,EAAA,IACAuhD,EAAAX,OAAA5gD,EAAA,IACAwhD,EAAAZ,OAAA5gD,EAAA,IACAyhD,EAAAb,OAAA5gD,EAAA,KAUAA,EAvNA,GAAAigB,IACA,GAAA2/B,GAAA,uBACA,GAAAA,GAAA,sBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,sBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,sBACA,GAAAA,GAAA,sBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,sBACA,GAAAA,GAAA,sBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,sBACA,GAAAA,GAAA,sBACA,GAAAA,GAAA,sBACA,GAAAA,GAAA,sBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,sBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,sBACA,GAAAA,GAAA,qBACA,GAAAA,GAAA,sBACA,GAAAA,GAAA,sBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,sBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,sBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,qBACA,GAAAA,GAAA,sBACA,GAAAA,GAAA,sBACA,GAAAA,GAAA,sBACA,GAAAA,GAAA,sBACA,GAAAA,GAAA,sBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,sBACA,GAAAA,GAAA,sBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,sBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,sBACA,GAAAA,GAAA,sBACA,GAAAA,GAAA,sBACA,GAAAA,GAAA,qBACA,GAAAA,GAAA,qBACA,GAAAA,GAAA,sBACA,GAAAA,GAAA,sBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,uBACA,GAAAA,GAAA,sBACA,GAAAA,GAAA,uBAyIA,OAAAR,MAEA6C,EAAA,WACA,QAAA7C,GAAAljD,EAAAQ,EAAAhC,GACA,MAAAmnD,GAAA3lD,EAAAQ,EAAAhC,GAAA,GAEA,MAAA0kD,MAEA8C,EAAA,WACA,QAAAA,MAOA,MALAA,GAAAlrD,WACAkoD,aAAA,SAAAhjD,GACA,MAAAA,KAGAgmD,KAEAC,EAAA,WAihCA,QAAAC,GAAAC,GACA,GAAA/yC,GAAA,IAAAtP,EAAA,GAAAzE,YAAA+T,EACAtP,GAAA7D,IAAAkmD,EACA,QAAAjhC,GAAA,GAAAvrB,EAAA,EAAyBurB,EAAA9R,IAAOzZ,EAAA,CAChC,GAAA6rD,GAAA1hD,EAAAohB,EAAA,GAAAugC,EAAA3hD,EAAAohB,EAAA,GAAAkhC,EAAAtiD,EAAAohB,EAAA,GAAAmhC,EAAAviD,EAAAohB,EAAA,EACAsgC,GAAAvqD,EAAAuqD,GACAC,EAAAxqD,EAAAwqD,GACAW,EAAAnrD,EAAAmrD,GACAC,EAAAprD,EAAAorD,GACAb,GAAAc,EAAA3sD,EACA,QAAAe,GAAA,EAAkBA,EAAA,IAAOA,EACzBoJ,EAAAohB,GAAAsgC,GAAA1hD,EAAAohB,EAAA,IACAA,IACAphB,EAAAohB,GAAAugC,GAAA3hD,EAAAohB,EAAA,IACAA,IACAphB,EAAAohB,GAAAkhC,GAAAtiD,EAAAohB,EAAA,IACAA,IACAphB,EAAAohB,GAAAmhC,GAAAviD,EAAAohB,EAAA,IACAA,IAGA,MAAAphB,GAEA,QAAAyiD,GAAA99B,EAAA9mB,GACA,GAAA25B,GAAA,GAAAj8B,YAAA,GACAi8B,GAAAr7B,IAAAwoB,EACA,IAAA9uB,GAAAurB,EAAAnB,EACAjB,EAAA0jC,EAAA3kD,CACA,KAAAqjB,EAAA,EAAAnB,EAAA,IAAsBmB,EAAA,KAAQA,IAAAnB,EAC9BuX,EAAApW,IAAAvjB,EAAAoiB,EAEA,KAAApqB,EAAA,EAAaA,GAAA,IAAQA,EAAA,CAmBrB,IAlBAmpB,EAAAwY,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAxY,EACAA,EAAAwY,EAAA,IACAkrB,EAAAlrB,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,GAAAxY,EACAwY,EAAA,GAAAkrB,EACA1jC,EAAAwY,EAAA,IACAkrB,EAAAlrB,EAAA,IACAz5B,EAAAy5B,EAAA,GACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAxY,EACAwY,EAAA,GAAAkrB,EACAlrB,EAAA,GAAAz5B,EACAqjB,EAAA,EAAcA,EAAA,KAAQA,EACtBoW,EAAApW,GAAAuhC,EAAAnrB,EAAApW,GAEA,KAAAA,EAAA,EAAAnB,EAAA,GAAApqB,EAA0BurB,EAAA,KAAQA,IAAAnB,EAClCuX,EAAApW,IAAAvjB,EAAAoiB,EAEA,KAAAmB,EAAA,EAAcA,EAAA,GAAQA,GAAA,GACtB,GAAAwhC,GAAAC,EAAArrB,EAAApW,IAAA0hC,EAAAD,EAAArrB,EAAApW,EAAA,IAAA2hC,EAAAF,EAAArrB,EAAApW,EAAA,IAAA4hC,EAAAH,EAAArrB,EAAApW,EAAA,GACApC,GAAA4jC,EAAAE,IAAA,EAAAA,GAAA,GAAAC,IAAA,GAAAA,GAAA,GAAAC,IAAA,GAAAA,GAAA,EACAxrB,EAAApW,GAAApC,IAAA,OACAwY,EAAApW,EAAA,GAAApC,GAAA,OACAwY,EAAApW,EAAA,GAAApC,GAAA,MACAwY,EAAApW,EAAA,OAAApC,GAqBA,IAlBAA,EAAAwY,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAxY,EACAA,EAAAwY,EAAA,IACAkrB,EAAAlrB,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,GAAAxY,EACAwY,EAAA,GAAAkrB,EACA1jC,EAAAwY,EAAA,IACAkrB,EAAAlrB,EAAA,IACAz5B,EAAAy5B,EAAA,GACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAxY,EACAwY,EAAA,GAAAkrB,EACAlrB,EAAA,GAAAz5B,EACAqjB,EAAA,EAAaA,EAAA,KAAQA,EACrBoW,EAAApW,GAAAuhC,EAAAnrB,EAAApW,IACAoW,EAAApW,IAAAvjB,EAAAujB,EAEA,OAAAoW,GAEA,QAAAyrB,GAAAt+B,EAAA9mB,GACA,GAAAmhB,GAAA0jC,EAAA3kD,EAAAkiB,EACAuX,EAAA,GAAAj8B,YAAA,GAEA,KADAi8B,EAAAr7B,IAAAwoB,GACAvD,EAAA,EAAaA,EAAA,KAAQA,EACrBoW,EAAApW,IAAAvjB,EAAAujB,EAEA,KAAAvrB,EAAA,EAAaA,EAAA,GAAQA,IAAA,CACrB,IAAAurB,EAAA,EAAcA,EAAA,KAAQA,EACtBoW,EAAApW,GAAAjqB,EAAAqgC,EAAApW,GAEArjB,GAAAy5B,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,IAAAz5B,EACAA,EAAAy5B,EAAA,GACAkrB,EAAAlrB,EAAA,GACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,IAAAz5B,EACAy5B,EAAA,IAAAkrB,EACA3kD,EAAAy5B,EAAA,GACAkrB,EAAAlrB,EAAA,GACAxY,EAAAwY,EAAA,IACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,GAAAz5B,EACAy5B,EAAA,IAAAkrB,EACAlrB,EAAA,IAAAxY,CACA,QAAAoC,GAAA,EAAkBA,EAAA,GAAQA,GAAA,GAC1B,GAAAwhC,GAAAprB,EAAApW,EAAA,GAAA0hC,EAAAtrB,EAAApW,EAAA,GACA2hC,EAAAvrB,EAAApW,EAAA,GAAA4hC,EAAAxrB,EAAApW,EAAA,EACApC,GAAA4jC,EAAAE,EAAAC,EAAAC,EACAxrB,EAAApW,EAAA,IAAApC,EAAAkkC,EAAAN,EAAAE,GACAtrB,EAAApW,EAAA,IAAApC,EAAAkkC,EAAAJ,EAAAC,GACAvrB,EAAApW,EAAA,IAAApC,EAAAkkC,EAAAH,EAAAC,GACAxrB,EAAApW,EAAA,IAAApC,EAAAkkC,EAAAF,EAAAJ,GAEA,IAAAxhC,EAAA,EAAAnB,EAAA,GAAApqB,EAA0BurB,EAAA,KAAQA,IAAAnB,EAClCuX,EAAApW,IAAAvjB,EAAAoiB,GAGA,IAAAmB,EAAA,EAAaA,EAAA,KAAQA,EACrBoW,EAAApW,GAAAjqB,EAAAqgC,EAAApW,GAoBA,KAlBArjB,EAAAy5B,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,IAAAz5B,EACAA,EAAAy5B,EAAA,GACAkrB,EAAAlrB,EAAA,GACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,IAAAz5B,EACAy5B,EAAA,IAAAkrB,EACA3kD,EAAAy5B,EAAA,GACAkrB,EAAAlrB,EAAA,GACAxY,EAAAwY,EAAA,IACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,GAAAz5B,EACAy5B,EAAA,IAAAkrB,EACAlrB,EAAA,IAAAxY,EACAoC,EAAA,EAAAnB,EAAA,IAAsBmB,EAAA,KAAQA,IAAAnB,EAC9BuX,EAAApW,IAAAvjB,EAAAoiB,EAEA,OAAAuX,GAEA,QAAA2qB,GAAAtkD,GACArI,KAAAqI,IAAAukD,EAAAvkD,GACArI,KAAAuH,OAAA,GAAAxB,YAAA,IACA/F,KAAA2tD,eAAA,EAEA,QAAAC,GAAAlnD,EAAAmnD,GACA,GAAAxtD,GAAAurB,EAAAplB,EAAAsnD,EAAApnD,EAAAxB,OAAAqC,EAAAvH,KAAAuH,OAAAuf,EAAA9mB,KAAA2tD,eAAAnjD,KAAAujD,EAAA/tD,KAAA+tD,EACA,KAAA1tD,EAAA,EAAaA,EAAAytD,IAAkBztD,EAG/B,GAFAkH,EAAAuf,GAAApgB,EAAArG,OACAymB,EACA,KAGA,GAAAknC,GAAAf,EAAA1lD,EAAAvH,KAAAqI,IACA,KAAAujB,EAAA,EAAcA,EAAA,KAAQA,EACtBoiC,EAAApiC,IAAAmiC,EAAAniC,EAEAmiC,GAAAxmD,EACAiD,EAAA3E,KAAAmoD,GACAzmD,EAAA,GAAAxB,YAAA,IACA+gB,EAAA,EAKA,GAHA9mB,KAAAuH,SACAvH,KAAA8mB,eACA9mB,KAAA+tD,KACA,IAAAvjD,EAAAtF,OACA,UAAAa,eAEA,IAAAu/C,GAAA,GAAA96C,EAAAtF,MACA,IAAA2oD,EAAA,CACA,GAAAI,GAAAzjD,IAAAtF,OAAA,GACAgpD,EAAAD,EAAA,GACA,IAAAC,GAAA,IACA,IAAA7tD,EAAA,GAAAmG,EAAA,GAAA0nD,EAAiC7tD,GAAAmG,IAASnG,EAC1C,GAAA4tD,EAAA5tD,KAAA6tD,EAAA,CACAA,EAAA,CACA,OAGA5I,GAAA4I,EACA1jD,IAAAtF,OAAA,GAAA+oD,EAAAroD,SAAA,KAAAsoD,IAGA,GAAA9iB,GAAA,GAAArlC,YAAAu/C,EACA,KAAAjlD,EAAA,EAAAurB,EAAA,EAAAplB,EAAAgE,EAAAtF,OAAwC7E,EAAAmG,IAAQnG,EAAAurB,GAAA,GAChDwf,EAAAzkC,IAAA6D,EAAAnK,GAAAurB,EAEA,OAAAwf,GArdA,OAvwBA4hB,GAAA,GAAAjnD,apE,EAAA,GAAAoE,aonD,EAAA,GAAApnD,anD,EAAA,GAAA3nD,YAAA,KACA1F,EAAA,EAAgBA,EAAA,IAASA,IAEzBqtD,EAAArtD,GADAA,EAAA,IACAA,GAAA,EAEAA,GAAA,IAGA,IAAAgtD,GAAA,GAAA/8B,cmQA,OAnDAq8B,GAAAnrD,WACAkoD,aAAA,SAAAhjD,EAAAmnD,GACA,GAAAxtD,GAAAytD,EAAApnD,EAAAxB,OACAqC,EAAAvH,KAAAuH,OAAAuf,EAAA9mB,KAAA2tD,cACA,KAAAttD,EAAA,EAAcymB,EAAA,IAAAzmB,EAAAytD,IAAuCztD,IAAAymB,EACrDvf,EAAAuf,GAAApgB,EAAArG,EAEA,OAAAymB,GAAA,IACA9mB,KAAA8mB,eACA,GAAA/gB,kBAEA/F,KAAA+tD,GAAAxmD,EACAvH,KAAAuH,OAAA,GAAAxB,YAAA,IACA/F,KAAA8mB,aAAA,EACA9mB,KAAA0pD,aAAAkE,EACA5tD,KAAA0pD,aAAAhjD,EAAAd,SAAA,IAAAioD,KAEAM,QAAA,SAAAznD,EAAAqnD,GACA,GAAA1tD,GAAAurB,EAAAplB,EAAAsnD,EAAApnD,EAAAxB,OAAAqC,EAAAvH,KAAAuH,OAAAuf,EAAA9mB,KAAA2tD,eAAAnjD,IAIA,KAHAujD,IACAA,EAAA,GAAAhoD,YAAA,KAEA1F,EAAA,EAAcA,EAAAytD,IAAkBztD,EAGhC,GAFAkH,EAAAuf,GAAApgB,EAAArG,OACAymB,EACA,KAGA,IAAA8E,EAAA,EAAeA,EAAA,KAAQA,EACvBrkB,EAAAqkB,IAAAmiC,EAAAniC,EAEA,IAAAwiC,GAAAX,EAAAlmD,EAAAvH,KAAAqI,IACA0lD,GAAAK,EACA5jD,EAAA3E,KAAAuoD,GACA7mD,EAAA,GAAAxB,YAAA,IACA+gB,EAAA,EAKA,GAHA9mB,KAAAuH,SACAvH,KAAA8mB,eACA9mB,KAAA+tD,KACA,IAAAvjD,EAAAtF,OACA,UAAAa,eAEA,IAAAu/C,GAAA,GAAA96C,EAAAtF,OACAkmC,EAAA,GAAArlC,YAAAu/C,EACA,KAAAjlD,EAAA,EAAAurB,EAAA,EAAAplB,EAAAgE,EAAAtF,OAAyC7E,EAAAmG,IAAQnG,EAAAurB,GAAA,GACjDwf,EAAAzkC,IAAA6D,EAAAnK,GAAAurB,EAEA,OAAAwf,KAGAuhB,KAEA0B,EAAA,WA+wBA,QAAAC,GAAAzB,GACA,GAAA/yC,GAAA,IAAAtP,EAAA,GAAAzE,YAAA+T,GACAF,EAAA,CACApP,GAAA7D,IAAAkmD,EACA,QAAAjhC,GAAA,GAAAvrB,EAAA,EAAyBurB,EAAA9R,IAAOzZ,EAAA,CAChC,GAAAurB,EAAA,OACAsgC,EAAAvqD,EAAAuqD,GACAC,EAAAxqD,EAAAwqD,GACAW,EAAAnrD,EAAAmrD,GACAC,EAAAprD,EAAAorD,OACI,IAAAnhC,EAAA,OACJ,GAAAsgC,GAAA1hD,EAAAohB,EAAA,GAAAugC,EAAA3hD,EAAAohB,EAAA,GAAAkhC,EAAAtiD,EAAAohB,EAAA,GAAAmhC,EAAAviD,EAAAohB,EAAA,EACAsgC,GAAAvqD,EAAAuqD,GACAC,EAAAxqD,EAAAwqD,GACAW,EAAAnrD,EAAAmrD,GACAC,EAAAprD,EAAAorD,GACAb,GAAAtyC,GACAA,IAAA,UACAA,EAAA,QAAAA,IAGA,OAAAxY,GAAA,EAAkBA,EAAA,IAAOA,EACzBoJ,EAAAohB,GAAAsgC,GAAA1hD,EAAAohB,EAAA,IACAA,IACAphB,EAAAohB,GAAAugC,GAAA3hD,EAAAohB,EAAA,IACAA,IACAphB,EAAAohB,GAAAkhC,GAAAtiD,EAAAohB,EAAA,IACAA,IACAphB,EAAAohB,GAAAmhC,GAAAviD,EAAAohB,EAAA,IACAA,IAGA,MAAAphB,GAEA,QAAA+jD,GAAAp/B,EAAA9mB,GACA,GAAA25B,GAAA,GAAAj8B,YAAA,GACAi8B,GAAAr7B,IAAAwoB,EACA,IAAA9uB,GAAAurB,EAAAnB,EACAjB,EAAA0jC,EAAA3kD,CACA,KAAAqjB,EAAA,EAAAnB,EAAA,IAAsBmB,EAAA,KAAQA,IAAAnB,EAC9BuX,EAAApW,IAAAvjB,EAAAoiB,EAEA,KAAApqB,EAAA,GAAcA,GAAA,IAAQA,EAAA,CAmBtB,IAlBAmpB,EAAAwY,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAxY,EACAA,EAAAwY,EAAA,IACAkrB,EAAAlrB,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,GAAAxY,EACAwY,EAAA,GAAAkrB,EACA1jC,EAAAwY,EAAA,IACAkrB,EAAAlrB,EAAA,IACAz5B,EAAAy5B,EAAA,GACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAxY,EACAwY,EAAA,GAAAkrB,EACAlrB,EAAA,GAAAz5B,EACAqjB,EAAA,EAAcA,EAAA,KAAQA,EACtBoW,EAAApW,GAAAuhC,EAAAnrB,EAAApW,GAEA,KAAAA,EAAA,EAAAnB,EAAA,GAAApqB,EAA0BurB,EAAA,KAAQA,IAAAnB,EAClCuX,EAAApW,IAAAvjB,EAAAoiB,EAEA,KAAAmB,EAAA,EAAcA,EAAA,GAAQA,GAAA,GACtB,GAAAwhC,GAAAC,EAAArrB,EAAApW,IAAA0hC,EAAAD,EAAArrB,EAAApW,EAAA,IAAA2hC,EAAAF,EAAArrB,EAAApW,EAAA,IAAA4hC,EAAAH,EAAArrB,EAAApW,EAAA,GACApC,GAAA4jC,EAAAE,IAAA,EAAAA,GAAA,GAAAC,IAAA,GAAAA,GAAA,GAAAC,IAAA,GAAAA,GAAA,EACAxrB,EAAApW,GAAApC,IAAA,OACAwY,EAAApW,EAAA,GAAApC,GAAA,OACAwY,EAAApW,EAAA,GAAApC,GAAA,MACAwY,EAAApW,EAAA,OAAApC,GAqBA,IAlBAA,EAAAwY,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAxY,EACAA,EAAAwY,EAAA,IACAkrB,EAAAlrB,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,GAAAxY,EACAwY,EAAA,GAAAkrB,EACA1jC,EAAAwY,EAAA,IACAkrB,EAAAlrB,EAAA,IACAz5B,EAAAy5B,EAAA,GACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAxY,EACAwY,EAAA,GAAAkrB,EACAlrB,EAAA,GAAAz5B,EACAqjB,EAAA,EAAaA,EAAA,KAAQA,EACrBoW,EAAApW,GAAAuhC,EAAAnrB,EAAApW,IACAoW,EAAApW,IAAAvjB,EAAAujB,EAEA,OAAAoW,GAEA,QAAAwsB,GAAAr/B,EAAA9mB,GACA,GAAAmhB,GAAA0jC,EAAA3kD,EAAAkiB,EACAuX,EAAA,GAAAj8B,YAAA,GAEA,KADAi8B,EAAAr7B,IAAAwoB,GACAvD,EAAA,EAAaA,EAAA,KAAQA,EACrBoW,EAAApW,IAAAvjB,EAAAujB,EAEA,KAAAvrB,EAAA,EAAaA,EAAA,GAAQA,IAAA,CACrB,IAAAurB,EAAA,EAAcA,EAAA,KAAQA,EACtBoW,EAAApW,GAAAjqB,EAAAqgC,EAAApW,GAEArjB,GAAAy5B,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,IAAAz5B,EACAA,EAAAy5B,EAAA,GACAkrB,EAAAlrB,EAAA,GACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,IAAAz5B,EACAy5B,EAAA,IAAAkrB,EACA3kD,EAAAy5B,EAAA,GACAkrB,EAAAlrB,EAAA,GACAxY,EAAAwY,EAAA,IACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,GAAAz5B,EACAy5B,EAAA,IAAAkrB,EACAlrB,EAAA,IAAAxY,CACA,QAAAoC,GAAA,EAAkBA,EAAA,GAAQA,GAAA,GAC1B,GAAAwhC,GAAAprB,EAAApW,EAAA,GAAA0hC,EAAAtrB,EAAApW,EAAA,GACA2hC,EAAAvrB,EAAApW,EAAA,GAAA4hC,EAAAxrB,EAAApW,EAAA,EACApC,GAAA4jC,EAAAE,EAAAC,EAAAC,EACAxrB,EAAApW,EAAA,IAAApC,EAAAkkC,EAAAN,EAAAE,GACAtrB,EAAApW,EAAA,IAAApC,EAAAkkC,EAAAJ,EAAAC,GACAvrB,EAAApW,EAAA,IAAApC,EAAAkkC,EAAAH,EAAAC,GACAxrB,EAAApW,EAAA,IAAApC,EAAAkkC,EAAAF,EAAAJ,GAEA,IAAAxhC,EAAA,EAAAnB,EAAA,GAAApqB,EAA0BurB,EAAA,KAAQA,IAAAnB,EAClCuX,EAAApW,IAAAvjB,EAAAoiB,GAGA,IAAAmB,EAAA,EAAaA,EAAA,KAAQA,EACrBoW,EAAApW,GAAAjqB,EAAAqgC,EAAApW,GAoBA,KAlBArjB,EAAAy5B,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,IAAAz5B,EACAA,EAAAy5B,EAAA,GACAkrB,EAAAlrB,EAAA,GACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,IAAAz5B,EACAy5B,EAAA,IAAAkrB,EACA3kD,EAAAy5B,EAAA,GACAkrB,EAAAlrB,EAAA,GACAxY,EAAAwY,EAAA,IACAA,EAAA,GAAAA,EAAA,IACAA,EAAA,GAAAz5B,EACAy5B,EAAA,IAAAkrB,EACAlrB,EAAA,IAAAxY,EACAoC,EAAA,EAAAnB,EAAA,IAAsBmB,EAAA,KAAQA,IAAAnB,EAC9BuX,EAAApW,IAAAvjB,EAAAoiB,EAEA,OAAAuX,GAEA,QAAAqsB,GAAAhmD,GACArI,KAAAqI,IAAAimD,EAAAjmD,GACArI,KAAAuH,OAAA,GAAAxB,YAAA,IACA/F,KAAA2tD,eAAA,EAEA,QAAAC,GAAAlnD,EAAAmnD,GACA,GAAAxtD,GAAAurB,EAAAplB,EAAAsnD,EAAApnD,EAAAxB,OAAAqC,EAAAvH,KAAAuH,OAAAuf,EAAA9mB,KAAA2tD,eAAAnjD,KAAAujD,EAAA/tD,KAAA+tD,EACA,KAAA1tD,EAAA,EAAaA,EAAAytD,IAAkBztD,EAG/B,GAFAkH,EAAAuf,GAAApgB,EAAArG,OACAymB,EACA,KAGA,GAAAknC,GAAAO,EAAAhnD,EAAAvH,KAAAqI,IACA,KAAAujB,EAAA,EAAcA,EAAA,KAAQA,EACtBoiC,EAAApiC,IAAAmiC,EAAAniC,EAEAmiC,GAAAxmD,EACAiD,EAAA3E,KAAAmoD,GACAzmD,EAAA,GAAAxB,YAAA,IACA+gB,EAAA,EAKA,GAHA9mB,KAAAuH,SACAvH,KAAA8mB,eACA9mB,KAAA+tD,KACA,IAAAvjD,EAAAtF,OACA,UAAAa,eAEA,IAAAu/C,GAAA,GAAA96C,EAAAtF,MACA,IAAA2oD,EAAA,CACA,GAAAI,GAAAzjD,IAAAtF,OAAA,GACAgpD,EAAAD,EAAA,GACA,IAAAC,GAAA,IACA,IAAA7tD,EAAA,GAAAmG,EAAA,GAAA0nD,EAAiC7tD,GAAAmG,IAASnG,EAC1C,GAAA4tD,EAAA5tD,KAAA6tD,EAAA,CACAA,EAAA,CACA,OAGA5I,GAAA4I,EACA1jD,IAAAtF,OAAA,GAAA+oD,EAAAroD,SAAA,KAAAsoD,IAGA,GAAA9iB,GAAA,GAAArlC,YAAAu/C,EACA,KAAAjlD,EAAA,EAAAurB,EAAA,EAAAplB,EAAAgE,EAAAtF,OAAwC7E,EAAAmG,IAAQnG,EAAAurB,GAAA,GAChDwf,EAAAzkC,IAAA6D,EAAAnK,GAAAurB,EAEA,OAAAwf,GAheA,OArgBAzpC,GAAA,GAAAoE,aonD,EAAA,GAAApnD,anD,EAAA,GAAA3nD,YAAA,KACA1F,EAAA,EAAgBA,EAAA,IAASA,IAEzBqtD,EAAArtD,GADAA,EAAA,IACAA,GAAA,EAEAA,GAAA,IAGA,IAAAgtD,GAAA,GAAA/8B,cmRA,OAxDA+9B,GAAA7sD,WACAkoD,aAAA,SAAAhjD,EAAAmnD,EAAAE,GACA,GAAA1tD,GAAAytD,EAAApnD,EAAAxB,OACAqC,EAAAvH,KAAAuH,OAAAuf,EAAA9mB,KAAA2tD,cACA,IAAAI,EACA/tD,KAAA+tD,SACI,CACJ,IAAA1tD,EAAA,EAAeymB,EAAA,IAAAzmB,EAAAytD,IAAuCztD,IAAAymB,EACtDvf,EAAAuf,GAAApgB,EAAArG,EAEA,IAAAymB,EAAA,GAEA,MADA9mB,MAAA8mB,eACA,GAAA/gB,eAEA/F,MAAA+tD,GAAAxmD,EACAb,IAAAd,SAAA,IAKA,MAHA5F,MAAAuH,OAAA,GAAAxB,YAAA,IACA/F,KAAA8mB,aAAA,EACA9mB,KAAA0pD,aAAAkE,EACA5tD,KAAA0pD,aAAAhjD,EAAAmnD,IAEAM,QAAA,SAAAznD,EAAAqnD,GACA,GAAA1tD,GAAAurB,EAAAplB,EAAAsnD,EAAApnD,EAAAxB,OAAAqC,EAAAvH,KAAAuH,OAAAuf,EAAA9mB,KAAA2tD,eAAAnjD,IAIA,KAHAujD,IACAA,EAAA,GAAAhoD,YAAA,KAEA1F,EAAA,EAAcA,EAAAytD,IAAkBztD,EAGhC,GAFAkH,EAAAuf,GAAApgB,EAAArG,OACAymB,EACA,KAGA,IAAA8E,EAAA,EAAeA,EAAA,KAAQA,EACvBrkB,EAAAqkB,IAAAmiC,EAAAniC,EAEA,IAAAwiC,GAAAI,EAAAjnD,EAAAvH,KAAAqI,IACArI,MAAA+tD,GAAAK,EACA5jD,EAAA3E,KAAAuoD,GACA7mD,EAAA,GAAAxB,YAAA,IACA+gB,EAAA,EAKA,GAHA9mB,KAAAuH,SACAvH,KAAA8mB,eACA9mB,KAAA+tD,KACA,IAAAvjD,EAAAtF,OACA,UAAAa,eAEA,IAAAu/C,GAAA,GAAA96C,EAAAtF,OACAkmC,EAAA,GAAArlC,YAAAu/C,EACA,KAAAjlD,EAAA,EAAAurB,EAAA,EAAAplB,EAAAgE,EAAAtF,OAAyC7E,EAAAmG,IAAQnG,EAAAurB,GAAA,GACjDwf,EAAAzkC,IAAA6D,EAAAnK,GAAAurB,EAEA,OAAAwf,KAGAijB,KAEAI,EAAA,WACA,QAAAC,GAAAC,EAAAC,GACA,GAAAD,EAAAzpD,SAAA0pD,EAAA1pD,OACA,QAEA,QAAA7E,GAAA,EAAiBA,EAAAsuD,EAAAzpD,OAAmB7E,IACpC,GAAAsuD,EAAAtuD,KAAAuuD,EAAAvuD,GACA,QAGA,UAEA,QAAAouD,MAoCA,MAlCAA,GAAAjtD,WACAqtD,mBAAA,SAAAja,EAAAka,EAAAC,EAAAC,GACA,GAAAC,GAAA,GAAAlpD,YAAA6uC,EAAA1vC,OAAA,GAKA,OAJA+pD,GAAAtoD,IAAAiuC,EAAA,GACAqa,EAAAtoD,IAAAmoD,EAAAla,EAAA1vC,QACA+pD,EAAAtoD,IAAAooD,EAAAna,EAAA1vC,OAAA4pD,EAAA5pD,QAEAwpD,EADApD,EAAA2D,EAAA,EAAAA,EAAA/pD,QACA8pD,IAEAE,kBAAA,SAAAta,EAAAua,EAAAC,GACA,GAAAH,GAAA,GAAAlpD,YAAA6uC,EAAA1vC,OAAA,EAIA,OAHA+pD,GAAAtoD,IAAAiuC,EAAA,GACAqa,EAAAtoD,IAAAwoD,EAAAva,EAAA1vC,QAEAwpD,EADApD,EAAA2D,EAAA,EAAAA,EAAA/pD,QACAkqD,IAEAC,YAAA,SAAAza,EAAA0a,EAAAP,EAAAQ,GACA,GAAAN,GAAA,GAAAlpD,YAAA6uC,EAAA1vC,OAAA,GACA+pD,GAAAtoD,IAAAiuC,EAAA,GACAqa,EAAAtoD,IAAA2oD,EAAA1a,EAAA1vC,QACA+pD,EAAAtoD,IAAAooD,EAAAna,EAAA1vC,OAAAoqD,EAAApqD,OACA,IAAAmD,GAAAijD,EAAA2D,EAAA,EAAAA,EAAA/pD,OAEA,OADA,IAAAmpD,GAAAhmD,GACAqhD,aAAA6F,GAAA,KAAAxpD,YAAA,MAEAypD,WAAA,SAAA5a,EAAA6a,EAAAC,GACA,GAAAT,GAAA,GAAAlpD,YAAA6uC,EAAA1vC,OAAA,EACA+pD,GAAAtoD,IAAAiuC,EAAA,GACAqa,EAAAtoD,IAAA8oD,EAAA7a,EAAA1vC,OACA,IAAAmD,GAAAijD,EAAA2D,EAAA,EAAAA,EAAA/pD,OAEA,OADA,IAAAmpD,GAAAhmD,GACAqhD,aAAAgG,GAAA,KAAA3pD,YAAA,OAGA0oD,KAEAkB,EAAA,WACA,QAAAC,GAAAjB,EAAAC,GACA,GAAAplC,GAAA,GAAAzjB,YAAA4oD,EAAAzpD,OAAA0pD,EAAA1pD,OAGA,OAFAskB,GAAA7iB,IAAAgoD,EAAA,GACAnlC,EAAA7iB,IAAAioD,EAAAD,EAAAzpD,QACAskB,EAEA,QAAAqmC,GAAAjb,EAAAzlB,EAAA4/B,GAIA,IAHA,GAAAtkC,GAAA6gC,EAAAn8B,EAAA,EAAAA,EAAAjqB,QAAAU,SAAA,MACA7C,GAAA,GACA1C,EAAA,EACAA,EAAA,IAAA0C,IAAAmC,OAAA,GAAA7E,EAAA,KACA,GAAAyvD,GAAAlb,EAAA1vC,OAAAulB,EAAAvlB,OAAA6pD,EAAA7pD,OACA6qD,EAAA,GAAAhqD,YAAA,GAAA+pD,GACAzuB,EAAAuuB,EAAAhb,EAAAnqB,EACA4W,GAAAuuB,EAAAvuB,EAAA0tB,EACA,QAAAnjC,GAAA,EAAAnlB,EAAA,EAA2BmlB,EAAA,GAAQA,IAAAnlB,GAAAqpD,EACnCC,EAAAppD,IAAA06B,EAAA56B,EAGA1D,GADA,GAAA4pD,GAAAliC,EAAA7kB,SAAA,OACAuoD,QAAA4B,EAAAtlC,EAAA7kB,SAAA,OAEA,QADAoqD,GAAA,EACAxE,EAAA,EAAkBA,EAAA,GAAQA,IAC1BwE,GAAA,EACAA,GAAA,EACAA,IAAAjtD,EAAAyoD,KAAA,KACAwE,GAAA,CAEA,KAAAA,EACAvlC,EAAA6gC,EAAAvoD,EAAA,EAAAA,EAAAmC,QACI,IAAA8qD,EACJvlC,EAAAgiC,EAAA1pD,EAAA,EAAAA,EAAAmC,QACI,IAAA8qD,IACJvlC,EAAA4hC,EAAAtpD,EAAA,EAAAA,EAAAmC,SAEA7E,IAEA,MAAAoqB,GAAA7kB,SAAA,MAEA,QAAA+pD,MAEA,QAAAjB,GAAAC,EAAAC,GACA,GAAAD,EAAAzpD,SAAA0pD,EAAA1pD,OACA,QAEA,QAAA7E,GAAA,EAAiBA,EAAAsuD,EAAAzpD,OAAmB7E,IACpC,GAAAsuD,EAAAtuD,KAAAuuD,EAAAvuD,GACA,QAGA,UAuCA,MArCAsvD,GAAAnuD,WACAooD,KAAA,SAAAhV,EAAAqb,EAAAlB,GACA,MAAAc,GAAAjb,EAAAqb,EAAAlB,IAEAF,mBAAA,SAAAja,EAAAka,EAAAC,EAAAC,GACA,GAAAC,GAAA,GAAAlpD,YAAA6uC,EAAA1vC,OAAA,GAKA,OAJA+pD,GAAAtoD,IAAAiuC,EAAA,GACAqa,EAAAtoD,IAAAmoD,EAAAla,EAAA1vC,QACA+pD,EAAAtoD,IAAAooD,EAAAna,EAAA1vC,OAAA4pD,EAAA5pD,QAEAwpD,EADAmB,EAAAjb,EAAAqa,EAAAF,GACAC,IAEAE,kBAAA,SAAAta,EAAAua,EAAAC,GACA,GAAAH,GAAA,GAAAlpD,YAAA6uC,EAAA1vC,OAAA,EAIA,OAHA+pD,GAAAtoD,IAAAiuC,EAAA,GACAqa,EAAAtoD,IAAAwoD,EAAAva,EAAA1vC,QAEAwpD,EADAmB,EAAAjb,EAAAqa,MACAG,IAEAC,YAAA,SAAAza,EAAA0a,EAAAP,EAAAQ,GACA,GAAAN,GAAA,GAAAlpD,YAAA6uC,EAAA1vC,OAAA,GACA+pD,GAAAtoD,IAAAiuC,EAAA,GACAqa,EAAAtoD,IAAA2oD,EAAA1a,EAAA1vC,QACA+pD,EAAAtoD,IAAAooD,EAAAna,EAAA1vC,OAAAoqD,EAAApqD,OACA,IAAAmD,GAAAwnD,EAAAjb,EAAAqa,EAAAF,EAEA,OADA,IAAAV,GAAAhmD,GACAqhD,aAAA6F,GAAA,KAAAxpD,YAAA,MAEAypD,WAAA,SAAA5a,EAAA6a,EAAAC,GACA,GAAAT,GAAA,GAAAlpD,YAAA6uC,EAAA1vC,OAAA,EACA+pD,GAAAtoD,IAAAiuC,EAAA,GACAqa,EAAAtoD,IAAA8oD,EAAA7a,EAAA1vC,OACA,IAAAmD,GAAAwnD,EAAAjb,EAAAqa,KAEA,OADA,IAAAZ,GAAAhmD,GACAqhD,aAAAgG,GAAA,KAAA3pD,YAAA,OAGA4pD,KAEAO,EAAA,WACA,QAAAA,GAAAC,EAAAC,GACApwD,KAAAqwD,wBAAAF,EACAnwD,KAAAswD,wBAAAF,EAgBA,MAdAF,GAAA1uD,WACAuhC,aAAA,SAAApb,EAAAziB,GACA,GAAAkpD,GAAA,GAAApuD,MAAAswD,uBACA,WAAA1hC,GAAAjH,EAAAziB,EAAA,SAAAwB,EAAAmnD,GACA,MAAAO,GAAA1E,aAAAhjD,EAAAmnD,MAGAtsB,cAAA,SAAA5/B,GACA,GAAAysD,GAAA,GAAApuD,MAAAqwD,wBACA3pD,EAAAZ,EAAAnE,EAEA,OADA+E,GAAA0nD,EAAA1E,aAAAhjD,GAAA,GACA3B,EAAA2B,KAGAwpD,KAEAK,EAAA,WAmCA,QAAAC,GAAAC,EAAA7b,EAAAoa,EAAAF,EAAAQ,EAAAoB,EAAAtB,EAAAD,EAAAM,EAAAF,EAAAG,EAAAiB,GACA,GAAA/b,EAAA,CACA,GAAAgc,GAAAnrD,KAAAC,IAAA,IAAAkvC,EAAA1vC,OACA0vC,KAAAhvC,SAAA,EAAAgrD,OAEAhc,KAEA,IAAAic,EAMA,OAJAA,GADA,IAAAJ,EACA,GAAAd,GAEA,GAAAlB,GAEAoC,EAAA3B,kBAAAta,EAAAua,EAAAC,GACAyB,EAAArB,WAAA5a,EAAA6a,EAAAC,GACG9a,EAAA1vC,QAAA2rD,EAAAhC,mBAAAja,EAAAka,EAAA4B,EAAA1B,GACH6B,EAAAxB,YAAAza,EAAA0a,EAAAoB,EAAAnB,GAEA,KAEA,QAAAuB,GAAAC,EAAAnc,EAAAoa,EAAAI,EAAA4B,EAAAP,EAAAlH,EAAA0H,GACA,GACArlC,GAAAxqB,EADA8vD,EAAA,GAAAlC,EAAA9pD,OAAA6rD,EAAA7rD,OACA+pD,EAAA,GAAAlpD,YAAAmrD,GAAA7wD,EAAA,CACA,IAAAu0C,EAEA,IADAxzC,EAAAqE,KAAAC,IAAA,GAAAkvC,EAAA1vC,QACS7E,EAAAe,IAAOf,EAChB4uD,EAAA5uD,GAAAu0C,EAAAv0C,EAIA,KADAurB,EAAA,EACAvrB,EAAA,IACA4uD,EAAA5uD,KAAA8wD,EAAAvlC,IAEA,KAAAA,EAAA,EAAAxqB,EAAA4tD,EAAA9pD,OAAuC0mB,EAAAxqB,IAAOwqB,EAC9CqjC,EAAA5uD,KAAA2uD,EAAApjC,EAMA,KAJAqjC,EAAA5uD,KAAA,IAAA2wD,EACA/B,EAAA5uD,KAAA2wD,GAAA,MACA/B,EAAA5uD,KAAA2wD,GAAA,OACA/B,EAAA5uD,KAAA2wD,IAAA,OACAplC,EAAA,EAAAxqB,EAAA2vD,EAAA7rD,OAAgC0mB,EAAAxqB,IAAOwqB,EACvCqjC,EAAA5uD,KAAA0wD,EAAAnlC,EAEA6kC,IAAA,IAAAQ,IACAhC,EAAA5uD,KAAA,IACA4uD,EAAA5uD,KAAA,IACA4uD,EAAA5uD,KAAA,IACA4uD,EAAA5uD,KAAA,IAEA,IAAAupD,GAAAD,EAAAsF,EAAA,EAAA5uD,GACA+wD,EAAA7H,GAAA,CACA,IAAAkH,GAAA,EACA,IAAA7kC,EAAA,EAAcA,EAAA,KAAQA,EACtBg+B,EAAAD,EAAAC,EAAA,EAAAwH,EAGA,IACAhD,GAAAiD,EADAC,EAAA1H,EAAAhkD,SAAA,EAAAwrD,EAEA,IAAAX,GAAA,GACA,IAAApwD,EAAA,EAAcA,EAAA,KAAQA,EACtB4uD,EAAA5uD,GAAA8wD,EAAA9wD,EAEA,KAAAurB,EAAA,EAAAxqB,EAAA2vD,EAAA7rD,OAAiC0mB,EAAAxqB,IAAOwqB,EACxCqjC,EAAA5uD,KAAA0wD,EAAAnlC,EAEAwiC,GAAA,GAAA/E,GAAAiI,GACAD,EAAAjD,EAAA5E,aAAAG,EAAAsF,EAAA,EAAA5uD,IACAe,EAAAkwD,EAAApsD,MACA,IAAAulB,GAAA8mC,EAAA,GAAAxrD,YAAA3E,EACA,KAAAwqB,EAAA,EAAcA,GAAA,KAASA,EAAA,CACvB,IAAAnB,EAAA,EAAeA,EAAArpB,IAAOqpB,EACtB8mC,EAAA9mC,GAAA6mC,EAAA7mC,GAAAmB,CAEAwiC,GAAA,GAAA/E,GAAAkI,GACAF,EAAAjD,EAAA5E,aAAA6H,GAEA,IAAAzlC,EAAA,EAAAxqB,EAAAiwD,EAAAnsD,OAAoC0mB,EAAAxqB,IAAOwqB,EAC3C,GAAAwjC,EAAAxjC,KAAAylC,EAAAzlC,GACA,gBAMA,KAFAwiC,EAAA,GAAA/E,GAAAiI,GACAD,EAAAjD,EAAA5E,aAAA2H,GACAvlC,EAAA,EAAAxqB,EAAAiwD,EAAAnsD,OAAoC0mB,EAAAxqB,IAAOwqB,EAC3C,GAAAwjC,EAAAxjC,KAAAylC,EAAAzlC,GACA,WAIA,OAAA0lC,GAEA,QAAAE,GAAA5c,EAAAoa,EAAAyB,EAAAlH,GACA,GAAA39B,GAAAxqB,EAAA6tD,EAAA,GAAAlpD,YAAA,IAAA1F,EAAA,CAEA,KADAe,EAAAqE,KAAAC,IAAA,GAAAkvC,EAAA1vC,QACQ7E,EAAAe,IAAOf,EACf4uD,EAAA5uD,GAAAu0C,EAAAv0C,EAGA,KADAurB,EAAA,EACAvrB,EAAA,IACA4uD,EAAA5uD,KAAA8wD,EAAAvlC,IAEA,IAAAg+B,GAAAD,EAAAsF,EAAA,EAAA5uD,GACA+wD,EAAA7H,GAAA,CACA,IAAAkH,GAAA,EACA,IAAA7kC,EAAA,EAAcA,EAAA,KAAQA,EACtBg+B,EAAAD,EAAAC,EAAA,EAAAA,EAAA1kD,OAGA,IAAAkpD,GAAAgB,CACA,IAAAqB,GAAA,GACArB,EAAAJ,CACA,IAAAvkC,GAAA8mC,EAAA,GAAAxrD,YAAAqrD,EACA,KAAAxlC,EAAA,GAAeA,GAAA,EAAQA,IAAA,CACvB,IAAAnB,EAAA,EAAeA,EAAA2mC,IAAsB3mC,EACrC8mC,EAAA9mC,GAAAm/B,EAAAn/B,GAAAmB,CAEAwiC,GAAA,GAAA/E,GAAAkI,GACAnC,EAAAhB,EAAA5E,aAAA4F,QAGAhB,GAAA,GAAA/E,GAAAO,EAAAhkD,SAAA,EAAAwrD,IACAhC,EAAAhB,EAAA5E,aAAAwF,EAEA,OAAAI,GAGA,QAAAmB,GAAAzzC,EAAAi0C,EAAAnc,GACA,GAAAlS,GAAA5lB,EAAA3b,IAAA,SACA4gB,GAAA2gB,EAAA,aACA//B,EAAA,6BAEA3C,KAAA8c,MACA,IAAA20C,GAAA30C,EAAA3b,IAAA,OACAqH,EAAAipD,IAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,IACA9uD,EAAA,oCAEA3C,KAAAyxD,WACA,IAAAlI,GAAAzsC,EAAA3b,IAAA,SACA,KAAAooD,EACA,GAAAkI,GAAA,EACAlI,EAAA,OACI,CACJ,GAAAmI,GAAA50C,EAAA3b,IAAA,MACAwwD,EAAA70C,EAAA3b,IAAA,OACA,IAAAihB,EAAAsvC,IAAA3vC,EAAA4vC,GAAA,CACAD,EAAApuC,oBAAA,CACA,IAAAsuC,GAAAF,EAAAvwD,IAAAwwD,EAAA/wD,KACA2oD,GAAAqI,KAAAzwD,IAAA,eACAooD,EAAA,KACAA,IAAA,MAKA/gD,EAAA+gD,MAAA,IAAAA,EAAA,OACA5mD,EAAA,qBAEA,IAAAqsD,GAAAlpD,EAAAgX,EAAA3b,IAAA,MAAAyE,SAAA,MACAwpD,EAAAtpD,EAAAgX,EAAA3b,IAAA,MAAAyE,SAAA,MACAorD,EAAAl0C,EAAA3b,IAAA,KACAsvD,EAAA3zC,EAAA3b,IAAA,KACA8vD,GAAA,IAAAQ,GAAA,IAAAA,KAAA,IAAA30C,EAAA3b,IAAA,kBACAnB,MAAAixD,iBACA,IACAY,GADAC,EAAAhsD,EAAAirD,EAEA,IAAAnc,EAAA,CACA,OAAA6b,EACA,IACA7b,EAAA3sC,EAAA2sC,GACK,MAAA1wC,GACL3B,EAAA,oEAGAsvD,EAAA/rD,EAAA8uC,GAEA,GAAA0c,EACA,QAAAG,EACAH,EAAAR,EAAAgB,EAAAD,EAAA7C,EAAAI,EAAA4B,EAAAP,EAAAlH,EAAA0H,OACG,CASHK,EAAAd,EAAAC,EAAAoB,EAAA7C,EARAlpD,EAAAgX,EAAA3b,IAAA,MAAAyE,SAAA,OACAE,EAAAgX,EAAA3b,IAAA,MAAAyE,SAAA,OACAE,EAAAgX,EAAA3b,IAAA,MAAAyE,SAAA,MAMAwpD,EALAtpD,EAAAgX,EAAA3b,IAAA,MAAAyE,SAAA,OACAE,EAAAgX,EAAA3b,IAAA,MAAAyE,SAAA,OACAE,EAAAgX,EAAA3b,IAAA,OACA2E,EAAAgX,EAAA3b,IAAA,OACA2E,EAAAgX,EAAA3b,IAAA,WAGA,IAAAmwD,IAAA1c,EACA,SAAAt8B,GAAA,oBAAAH,EAAAC,cACG,KAAAk5C,GAAA1c,EAAA,CAEH0c,EAAAR,EAAAgB,EADAN,EAAAK,EAAA7C,EAAAyB,EAAAlH,GACAyF,EAAAI,EAAA4B,EAAAP,EAAAlH,EAAA0H,GAEA,IAAAK,EACA,SAAAh5C,GAAA,qBAAAH,EAAAE,mBAGA,IADArY,KAAAsxD,gBACAG,GAAA,GACA,GAAAM,GAAAj1C,EAAA3b,IAAA,KACAihB,GAAA2vC,KACAA,EAAAzuC,oBAAA,GAEAtjB,KAAA+xD,KACA/xD,KAAAgyD,KAAAl1C,EAAA3b,IAAA,SAAA8wD,EACAjyD,KAAAkyD,KAAAp1C,EAAA3b,IAAA,SAAA8wD,EACAjyD,KAAAmyD,IAAAr1C,EAAA3b,IAAA,QAAAnB,KAAAgyD,MAGA,QAAAI,GAAAv2C,EAAA8G,EAAA2uC,EAAAe,GACA,GAAAhyD,GAAAe,EAAAiH,EAAA,GAAAtC,YAAAurD,EAAApsD,OAAA,EACA,KAAA7E,EAAA,EAAAe,EAAAkwD,EAAApsD,OAAuC7E,EAAAe,IAAOf,EAC9CgI,EAAAhI,GAAAixD,EAAAjxD,EAcA,OAZAgI,GAAAhI,KAAA,IAAAwb,EACAxT,EAAAhI,KAAAwb,GAAA,MACAxT,EAAAhI,KAAAwb,GAAA,OACAxT,EAAAhI,KAAA,IAAAsiB,EACAta,EAAAhI,KAAAsiB,GAAA,MACA0vC,IACAhqD,EAAAhI,KAAA,IACAgI,EAAAhI,KAAA,GACAgI,EAAAhI,KAAA,IACAgI,EAAAhI,KAAA,IAEAspD,EAAAthD,EAAA,EAAAhI,GACAuF,SAAA,EAAAH,KAAAC,IAAA4rD,EAAApsD,OAAA,OAEA,QAAAotD,GAAAP,EAAAnxD,EAAAib,EAAA8G,EAAAta,GACAjF,EAAA2e,EAAAnhB,GAAA,6BACA,IACA2xD,GADAC,EAAAT,EAAA5wD,IAAAP,OAKA,OAHA,QAAA4xD,OAAAvtD,KAAAutD,IACAD,EAAAC,EAAArxD,IAAA,QAEAoxD,GAAA,SAAAA,EAAA3xD,KAKA,OAAA2xD,EAAA3xD,KACA,WACA,UAAAyoD,GAAA+I,EAAAv2C,EAAA8G,EAAAta,GAAA,KAGA,UAAAkqD,EAAA3xD,KACA,WACA,UAAA+rD,GAAAyF,EAAAv2C,EAAA8G,EAAAta,GAAA,KAGA,UAAAkqD,EAAA3xD,KACA,WACA,UAAAytD,GAAAhmD,QAGA1F,GAAA,yBAnBA,WACA,UAAA+pD,IAjRA,GAAAyE,GAAA,GAAAprD,aACA,GACA,IACA,GACA,GACA,GACA,IACA,IACA,GACA,IACA,EACA,GACA,GACA,IACA,IACA,EACA,EACA,GACA,GACA,EACA,IACA,IACA,IACA,GACA,IACA,GACA,GACA,IACA,IACA,IACA,GACA,IACA,MAgIAksD,EAAAjwC,EAAA7gB,IAAA,WAiJA,OAZAovD,GAAA/uD,WACAixD,sBAAA,SAAA52C,EAAA8G,GACA,OAAA3iB,KAAAyxD,WAAA,IAAAzxD,KAAAyxD,UACA,UAAAvB,GAAAoC,EAAAtyD,KAAA+xD,GAAA/xD,KAAAgyD,KAAAn2C,EAAA8G,EAAA3iB,KAAAsxD,eAAAgB,EAAAtyD,KAAA+xD,GAAA/xD,KAAAkyD,KAAAr2C,EAAA8G,EAAA3iB,KAAAsxD,eAEA,IAAAjpD,GAAA+pD,EAAAv2C,EAAA8G,EAAA3iB,KAAAsxD,eAAA,GACAoB,EAAA,WACA,UAAArJ,GAAAhhD,GAEA,WAAA6nD,GAAAwC,OAGAnC,IAEA5wD,GAAAgtD,eACAhtD,EAAA0uD,eACA1uD,EAAA0pD,gBACA1pD,EAAA4wD,yBACA5wD,EAAA8uD,QACA9uD,EAAAgwD,QACAhwD,EAAAgqD,eACAhqD,EAAA2rD,kBACA3rD,EAAA8sD,kBACA9sD,EAAA0sD,mBAIA,SAAA3sD,EAAAC,EAAAO,GAEA,YAEA,IAAA4iB,GAAA5iB,EAAA,GACAmlB,EAAAnlB,EAAA,GACAqgC,EAAArgC,EAAA,GACAyyD,EAAAzyD,EAAA,GACA0yD,EAAA1yD,EAAA,IACA2yD,EAAA3yD,EAAA,GACA4yD,EAAA5yD,EAAA,IACA6yD,EAAA7yD,EAAA,IACAq0B,EAAAr0B,EAAA,GACA8yD,EAAA9yD,EAAA,IACA+yD,EAAA/yD,EAAA,IACAgzD,EAAAhzD,EAAA,IACAizD,EAAAjzD,EAAA,IACAy5C,EAAAz5C,EAAA,GACAkzD,EAAAlzD,EAAA,IACAmzD,EAAAnzD,EAAA,IACAozD,EAAApzD,EAAA,GACAuL,EAAAqX,EAAArX,qBACA+N,EAAAsJ,EAAAtJ,gBACA5B,EAAAkL,EAAAlL,qBACAvL,EAAAyW,EAAAzW,UACA2F,EAAA8Q,EAAA9Q,IACAtG,EAAAoX,EAAApX,kBACAkG,EAAAkR,EAAAlR,oBACA6H,EAAAqJ,EAAArJ,KACArW,EAAA0f,EAAA1f,OACA8F,EAAA4Z,EAAA5Z,wBACAvG,EAAAmgB,EAAAngB,MACAV,EAAA6gB,EAAA7gB,KACA0G,EAAAma,EAAAna,QACAF,EAAAqa,EAAAra,MACAC,EAAAoa,EAAApa,SACAnE,EAAAue,EAAAve,sBACAhC,EAAAugB,EAAAvgB,KACA8f,EAAAgD,EAAAhD,KACAL,EAAAqD,EAAArD,KACAH,EAAAwD,EAAAxD,MACAI,EAAAoD,EAAApD,MACAG,EAAAiD,EAAAjD,OACAL,EAAAsD,EAAAtD,OACAO,EAAA+C,EAAA/C,MACAM,EAAAyC,EAAAzC,SACAgE,EAAA2Z,EAAA3Z,aACAyF,EAAAkU,EAAAlU,WACAzG,EAAA2a,EAAA3a,OACAoe,EAAA2uB,EAAA3uB,MACAvD,EAAAkyB,EAAAlyB,OACA8yB,EAAAX,EAAAW,SACA9+B,EAAAo+B,EAAAp+B,WACA++B,EAAAV,EAAAU,eACAC,EAAAV,EAAAU,UACAC,GAAAX,EAAAW,UACAC,GAAAZ,EAAAY,KACAC,GAAAb,EAAAa,qBACAC,GAAAd,EAAAc,aACAC,GAAAf,EAAAe,YACAttB,GAAAjS,EAAAiS,cACAhS,GAAAD,EAAAC,YACAu/B,GAAAf,EAAAe,QACAC,GAAAhB,EAAAgB,mBACAC,GAAAhB,EAAAgB,YACAC,GAAAjB,EAAAiB,aACAC,GAAAjB,EAAAiB,WACAC,GAAAjB,EAAAiB,KACAp0B,GAAA2Z,EAAA3Z,gBACAC,GAAA0Z,EAAA1Z,iBACAC,GAAAyZ,EAAAzZ,iBACAC,GAAAwZ,EAAAxZ,kBACAC,GAAAuZ,EAAAvZ,qBACAN,GAAA6Z,EAAA7Z,YACAu0B,GAAAjB,EAAAiB,cACAC,GAAAlB,EAAAkB,cACAC,GAAAnB,EAAAmB,gBACAC,GAAAnB,EAAAmB,sBACAC,GAAApB,EAAAoB,aACAC,GAAArB,EAAAqB,mBACA5lB,GAAAwkB,EAAAxkB,iBACA6lB,GAAA,WAOA,QAAAC,GAAAzxC,EAAA0xC,EAAAvzC,EAAAX,GACA3gB,KAAAmjB,OACAnjB,KAAA60D,YACA70D,KAAAshB,UACAthB,KAAA2gB,kBAqCA,QAAAg0C,GAAA9gB,EAAA1wB,EAAA7B,EAAAo1B,EAAAoe,EAAAC,EAAAC,EAAAC,GACAj1D,KAAA6zC,aACA7zC,KAAAmjB,OACAnjB,KAAAshB,UACAthB,KAAA02C,YACA12C,KAAA80D,YACA90D,KAAA+0D,YACA/0D,KAAAg1D,mBACAh1D,KAAAi1D,WAAAC,EACAl1D,KAAAm1D,iBAAA,SAAAv0D,GACA,GAAAw0D,GAAAJ,EAAAp0D,EACA,OAAAw0D,GACA/rD,QAAAC,QAAA8rD,GAEA9zC,EAAAI,gBAAA,oBAAuD9gB,SAAa2J,KAAA,SAAA7D,GAIpE,MAHAA,GAAA2uD,kBAAAzjD,EAAAC,OACAmjD,EAAAp0D,GAAA8F,GAEAA,KAMA,QAAA4uD,KACAt1D,KAAAwmB,QAxEA,GAAA0uC,IACAv0C,iBAAA,EACAy1B,cAAA,EACAC,iBAAA,EACAC,2BAAA,EAQAse,GAAApzD,WACA+zD,UAAA,SAAAC,GACA,MAAAA,aAAAnpC,IAAAuoC,EAAAa,YAAAD,EAAAx1D,KAAAmjB,KAAAnjB,KAAA60D,YAEA77B,OAAA,SAAAw8B,GACA,GAAA14C,GAAA04C,EAAA14C,KACA44C,EAAA54C,EAAA3b,IAAA,kBACAu0D,GAAAjhC,EAAAzH,MAAA0oC,EAAA11D,KAAAmjB,KAAAnjB,KAAA60D,UACA,IAAAj+B,GAAA8+B,EAAA9+B,QAKA,OAJA52B,MAAAshB,QAAAI,gBAAA,cACA8zC,EAAApoC,MAAAptB,KAAA2gB,iBACAiW,IAEArsB,KAAA,SAAAgO,GACA,GAAA7R,GAAA6R,EAAA7R,IACA,WAAAkf,GAAAlf,EAAA,EAAAA,EAAAxB,OAAAswD,EAAA14C,UAIA83C,EAAAe,YAAA,SAAAH,EAAAryC,EAAAgU,GACA,GAAAra,GAAA04C,EAAA14C,IACA,IAAAA,EAAAE,IAAA,gBAAAF,EAAAE,IAAA,MACA,QAEA,IAAAka,GAAAzC,EAAAzH,MAAAlQ,EAAA3b,IAAA,mBAAAgiB,EAAAgU,EACA,uBAAAD,EAAAt2B,MAAA,cAAAs2B,EAAAt2B,OAAAs2B,EAAA6B,gBAAAjc,EAAAC,SAAA,gBAEA63C,EAAAa,YAAA,SAAAD,EAAAryC,EAAAgU,GACA,GAAAra,GAAA04C,EAAA14C,IACA,IAAAA,EAAAE,IAAA,gBAAAF,EAAAE,IAAA,MACA,QAEA,IAAAka,GAAAzC,EAAAzH,MAAAlQ,EAAA3b,IAAA,mBAAAgiB,EAAAgU,EACA,YAAAD,EAAAN,UAAA,IAAAM,EAAAN,WAAAM,EAAA6B,gBAAAjc,EAAAC,SAAA,gBA6BAu4C,EAAA9zD,WACAmpB,MAAA,WACA,UAAA3qB,KAAA41D,QANA,OASA51D,KAAA41D,QAAA,EACA51D,KAAA61D,SAAAh2C,KAAAC,QAEA0G,MAAA,WACAxmB,KAAA61D,QAAAh2C,KAAAC,MAdA,GAeA9f,KAAA41D,QAAA,GAGA,IAAAE,GAAAzsD,QAAAC,SAqsDA,OAnsDAqrD,GAAAnzD,WACAu0D,cAAA,SAAAlB,GACA,IAAAzyC,EAAAyyC,GACA,QAEA,IAAAmB,GAAAj1D,OAAA2D,OAAA,KACAmwD,GAAAxxC,QACA2yC,EAAAnB,EAAAxxC,QAAA,EAGA,KADA,GAAA4yC,IAAApB,GAAA1xC,EAAAnjB,KAAAmjB,KACA8yC,EAAA/wD,QAAA,CACA,GAAAmD,GAAAhI,EAAAmG,EACA0vD,EAAAD,EAAAruC,QACAuuC,EAAAD,EAAA/0D,IAAA,YACA,IAAAihB,EAAA+zC,GAAA,CACA,GAAAC,GAAAD,EAAAhyC,SACA,KAAA9jB,EAAA,EAAAmG,EAAA4vD,EAAAlxD,OAA+C7E,EAAAmG,EAAQnG,IAAA,CACvDgI,EAAA+tD,EAAA/1D,EACA,IAAAg2D,GAAAF,EAAAh1D,IAAAkH,GACAiuD,EAAAD,EAAAl1D,IAAA,KACA,IAAA4gB,EAAAu0C,IAAA,WAAAA,EAAA11D,KACA,UAIA,GAAA21D,GAAAL,EAAA/0D,IAAA,UACA,IAAAihB,EAAAm0C,GAAA,CAGA,GAAAC,GAAAD,EAAApyC,SACA,KAAA9jB,EAAA,EAAAmG,EAAAgwD,EAAAtxD,OAAyC7E,EAAAmG,EAAQnG,IAAA,CACjDgI,EAAAmuD,EAAAn2D,EACA,IAAAo2D,GAAAF,EAAAryC,OAAA7b,EACA,IAAAia,EAAAm0C,GAAA,CACA,GAAAT,EAAAS,EAAAz2C,YACA,QAEAy2C,GAAAtzC,EAAAc,MAAAwyC,GAEA,GAAA7zC,EAAA6zC,GAAA,CAGA,GAAAA,EAAA35C,KAAAuG,MAAA,CACA,GAAA2yC,EAAAS,EAAA35C,KAAAuG,OACA,QAEA2yC,GAAAS,EAAA35C,KAAAuG,QAAA,EAEA,GAAAqzC,GAAAD,EAAA35C,KAAA3b,IAAA,cACAihB,EAAAs0C,MAAArzC,OAAA2yC,EAAAU,EAAArzC,SACA4yC,EAAApwD,KAAA6wD,GACAA,EAAArzC,QACA2yC,EAAAU,EAAArzC,QAAA,OAKA,UAEAszC,iBAAA,SAAA9B,EAAA+B,EAAA5+C,EAAA4/B,EAAAtE,EAAAujB,GACA,GAAA9+B,GAAA6+B,EAAA95C,KAAAC,SAAA,UACA+5C,EAAAF,EAAA95C,KAAAC,SAAA,QACAg6C,EAAAH,EAAA95C,KAAA3b,IAAA,QACA,IAAA41D,EAAA,CACA,GAQArB,GARAsB,GACAj/B,SACA++B,OACA9+C,QACAi/C,UAAA,EACAC,UAAA,GAEAC,EAAAJ,EAAA51D,IAAA,IAEA4gB,GAAAo1C,EAAA,kBACAH,EAAAC,SAAAF,EAAA51D,IAAA,SACA61D,EAAAE,SAAAH,EAAA51D,IAAA,SACAu0D,EAAAqB,EAAA/5C,IAAA,MAAAyX,EAAAzH,MAAA+pC,EAAA51D,IAAA,MAAAnB,KAAAmjB,KAAA0xC,GAAA,MAEA78C,KAAAo/C,WACA1B,KAAAjhC,EAAAkD,WAAA9B,IACA7d,EAAAo/C,SAAA1B,EAAA//B,OAAA3d,EAAAo/C,SAAA,IAEAxf,EAAAyf,MAAArlD,EAAA4E,YAAAogD,IAMA,MAJApf,GAAAyf,MAAArlD,EAAA0E,uBACAqhB,EACA++B,IAEA92D,KAAA03C,gBAAAkf,EAAAtjB,EAAAsjB,EAAA95C,KAAA3b,IAAA,cAAA0zD,EAAAjd,EAAAif,GAAAtsD,KAAA,WACAqtC,EAAAyf,MAAArlD,EAAA2E,wBACAogD,GACAnf,EAAAyf,MAAArlD,EAAA6E,UAAAmgD,OAIAM,uBAAA,SAAAzC,EAAAW,EAAA+B,EAAA3f,EAAA5U,EAAAnC,GACA,GAAAr1B,GAAAxL,KACA8c,EAAA04C,EAAA14C,KACAmtC,EAAAntC,EAAA3b,IAAA,aACAirD,EAAAtvC,EAAA3b,IAAA,aACA,MAAA8oD,GAAAxhD,EAAAwhD,IAAAmC,GAAA3jD,EAAA2jD,IAEA,WADA7pD,GAAA,gDAGA,IAAA6zC,GAAAp2C,KAAAi1D,QAAA7e,YACA,SAAAA,GAAA6T,EAAAmC,EAAAhW,EAEA,WADA7zC,GAAA,uDAGA,IACAi1D,GAAAz4C,CACA,IAFAjC,EAAA3b,IAAA,sBAEA,CACA,GAAAud,GAAA5B,EAAA3b,IAAA,aACAwd,EAAA7B,EAAA3b,IAAA,cACAs2D,EAAA/4C,EAAA,KACAg5C,EAAAlC,EAAA3yC,SAAA40C,EAAA94C,GACAqa,EAAAlc,EAAAC,SAAA,cACA46C,IAAA3+B,KAAA,IAWA,OAVAw+B,GAAAjE,EAAAqE,WAAAF,EAAAh5C,EAAAC,EAAA62C,YAAA5uC,GAAA+wC,GACAH,EAAAK,QAAA,EACA94C,GAAAy4C,GACA5f,EAAAyf,MAAArlD,EAAAmF,sBAAA4H,QACAikB,IACAnC,EAAAmC,IACA9d,GAAAlT,EAAAmF,sBACA4H,UAKA,GAAA+4C,GAAAh7C,EAAA3b,IAAA,kBACA42D,EAAAj7C,EAAA3b,IAAA,WAEA,IAAAo2D,IAAAO,IAAAC,KAAAvC,YAAAnpC,KAAA49B,EAAAmC,EADA,IAKA,MAFAoL,GADA,GAAAjE,GAAAvzD,KAAAmjB,KAAA0xC,EAAAW,EAAA+B,EAAA,WACAS,iBAAA,OACApgB,GAAAyf,MAAArlD,EAAAsF,yBAAAkgD,GAGA,IAAAS,IAAAj4D,KAAAi1D,QAAA3e,0BACAjzB,EAAA,OAAArjB,KAAA80D,UAAAoD,aAOA,IANAtgB,EAAAugB,cAAA90C,GACAtE,GACAsE,EACA4mC,EACAmC,GAEA6L,IAAAH,IAAAC,GAAAvC,YAAAnpC,IAAAuoC,EAAAe,YAAAH,EAAAx1D,KAAAmjB,KAAA0xC,GAQA,MAPAjd,GAAAyf,MAAArlD,EAAAkF,iBAAA6H,OACA/e,MAAAshB,QAAAE,KAAA,OACA6B,EACArjB,KAAA02C,UACA,aACA8e,EAAApoC,MAAAptB,KAAAi1D,QAAAt0C,kBAIA,IAAAy3C,GAAA,IACAH,KAAAzC,YAAAnpC,IAAA0rC,YAAA1rC,IAAAyrC,YAAAzrC,MACA+rC,EAAA,GAAAxD,GAAAppD,EAAA2X,KAAA0xC,EAAArpD,EAAA8V,QAAA9V,EAAAypD,QAAAt0C,kBAEA4yC,EAAA8E,WAAA7sD,EAAA8V,QAAA9V,EAAA2X,KAAA0xC,EAAAW,EAAA+B,EAAAa,GAAA7tD,KAAA,SAAA+tD,GACA,GAAAd,GAAAc,EAAAN,iBAAA,EACAxsD,GAAA8V,QAAAE,KAAA,OACA6B,EACA7X,EAAAkrC,UACA,QACA8gB,IACAA,EAAA9wD,KAAAa,WACIgD,SAAAtF,GAAA,SAAAyF,GACJnI,EAAA,2BAAAmI,GACAc,EAAA8V,QAAAE,KAAA,OACA6B,EACA7X,EAAAkrC,UACA,QACA,SAGAkB,EAAAyf,MAAArlD,EAAAqF,kBAAA0H,GACAikB,IACAnC,EAAAmC,IACA9d,GAAAlT,EAAAqF,kBACA0H,UAIAw5C,YAAA,SAAAvgD,EAAA68C,EAAAjd,EAAAtE,EAAAklB,GACA,GAAAC,GAAAzgD,EAAA7W,IAAA,KACAu3D,GACAC,QAAA3gD,EAAA7W,IAAA,KAAAP,KACAw2D,SAAAp/C,EAAA7W,IAAA,OAEAy3D,EAAA5gD,EAAA7W,IAAA,KACA,IAAAqlC,GAAAoyB,GAAA,CAIA,OAHAC,GAAArkC,GAAAxH,MAAAhtB,KAAAmjB,KAAAy1C,GACAE,EAAA,GAAA/yD,YAAA,KACAujD,EAAA,GAAAhwB,cAAA,GACAj5B,EAAA,EAAmBA,EAAA,IAASA,IAC5BipD,EAAA,GAAAjpD,EAAA,IACAw4D,EAAAvP,EAAA,EAAAA,EAAA,GACAwP,EAAAz4D,GAAA,IAAAipD,EAAA,IAEAoP,GAAAI,cAEA,MAAA94D,MAAA22D,iBAAA9B,EAAA4D,EAAAC,EAAA9gB,EAAAtE,EAAAklB,EAAAx2B,MAAAljB,UAEAi6C,iBAAA,SAAA7zC,EAAAnG,EAAA81C,EAAAmE,EAAAC,EAAArhB,EAAAtE,GACA,GAAA4lB,GAAA,GAAAC,IACAC,GACAH,EAAA93D,IAAA,aACA0zD,GAEAwE,EAAAh3C,EAAAkC,MAAAvkB,KAAAmjB,KAAAi2C,EACA,OAAAp5D,MAAA03C,gBAAAshB,EAAA1lB,EAAA+lB,EAAAH,GAAA3uD,KAAA,WACAqtC,EAAA0hB,gBAAAJ,EAAAK,cACA3hB,EAAAyf,MAAAnyC,EAAA8uC,IACA7rB,QAAA+wB,EAAA/wB,QACAqxB,UAAAN,EAAAM,WACKP,EAAAl6C,OAGL06C,cAAA,SAAA5E,EAAA6E,EAAAC,EAAA/hB,EAAAtE,EAAAtR,GACA,GAAA43B,EACAF,KACAA,IAAAx2D,QACA02D,EAAAF,EAAA,GAAA94D,KAEA,IAAA4K,GAAAxL,IACA,OAAAA,MAAA65D,SAAAD,EAAAD,EAAA35D,KAAAmjB,KAAA0xC,GAAAtqD,KAAA,SAAAuvD,GACA,MAAAA,GAAA5hD,KAAA6hD,YAGAD,EAAAE,cAAAxuD,EAAAqpD,EAAAjd,EAAAtE,GAAA/oC,KAAA,WACA,MAAAuvD,IACK,SAAApvD,GAEL,MADAc,GAAA8V,QAAAE,KAAA,sBAA8Cs2B,UAAAlgC,EAAAM,OAC9C,GAAA+hD,IAAA,kBAAAxG,GAAA,0BAAA/oD,GAAAovD,EAAA5hD,QANA4hD,IAQIvvD,KAAA,SAAAuvD,GAGJ,MAFA93B,GAAA9pB,KAAA4hD,EAAA5hD,KACA4hD,EAAAt4C,KAAAhW,EAAA8V,SACAw4C,EAAAI,cAGAC,WAAA,SAAAC,EAAAp4B,GACA,GAAA9pB,GAAA8pB,EAAA9pB,KACAmiD,EAAAniD,EAAAoiD,cAAAF,GACAG,KAAAv4B,EAAAw4B,kBAAA9uD,EAAAU,iBACA,IAAA8L,EAAAxR,OAAA6zD,GAAAv6D,KAAAi1D,QAAA5e,iBAWA,OAVAokB,GAAA,SAAAC,GACA,IAAAxiD,EAAAyiD,SAAAC,aAAAF,GAAA,CACA,GAAAG,GAAA3iD,EAAAyiD,SAAAG,UAAAJ,EACA16D,MAAAshB,QAAAE,KAAA,aACAtJ,EAAAgiD,WAAA,SAAAQ,EACA,WACAG,MAGKlwD,KAAA3K,MACLK,EAAA,EAAAmG,EAAA6zD,EAAAn1D,OAAuC7E,EAAAmG,EAAQnG,IAAA,CAC/C,GAAA06D,GAAAV,EAAAh6D,EACAo6D,GAAAM,EAAAL,SACA,IAAAM,GAAAD,EAAAC,MACAA,MAAAN,UACAD,EAAAO,EAAAN,UAIA,MAAAL,IAEA5nD,UAAA,SAAAoiD,EAAAoG,EAAArjB,EAAAtE,EAAAnwB,EAAAq1C,GAKA,OAJA0C,MACAC,EAAAF,EAAA92C,UACA3Y,EAAAxL,KACAoJ,EAAAC,QAAAC,UACAjJ,EAAA,EAAAmG,EAAA20D,EAAAj2D,OAA0C7E,EAAAmG,EAAQnG,IAAA,CAClD,GAAAgI,GAAA8yD,EAAA96D,GACAK,EAAAu6D,EAAA95D,IAAAkH,EACA,QAAAA,GACA,WACA,KACA,UACA,SACA,SACA,SACA,QACA,SACA,SACA,SACA,SACA6yD,EAAAr1D,MACAwC,EACA3H,GAEA,MACA,YACA0I,IAAAmB,KAAA,WACA,MAAAiB,GAAAiuD,cAAA5E,EAAA,KAAAn0D,EAAA,GAAAk3C,EAAAtE,EAAAklB,EAAAx2B,OAAAz3B,KAAA,SAAA2vD,GACAtiB,EAAAugB,cAAA+B,GACAgB,EAAAr1D,MACAwC,GAEA6xD,EACAx5D,EAAA,SAKA,MACA,UACAw6D,EAAAr1D,MACAwC,EACA3H,GAEA,MACA,aACA,GAAAqhB,EAAArhB,EAAA,SACAw6D,EAAAr1D,MACAwC,GACA,GAEA,OAEA+Z,EAAA1hB,IACA0I,IAAAmB,KAAA,SAAAuS,GACA,MAAAtR,GAAA+sD,YAAAz7C,EAAA+3C,EAAAjd,EAAAtE,EAAAklB,IACO7tD,KAAA3K,KAAAU,IACPw6D,EAAAr1D,MACAwC,GACA,KAGA9F,EAAA,yBAEA,MACA,UACA,SACA,UACA,SACA,UACA,UACA,WACA,SACA,UACA,SACA,SACA,SACA,UACA,SACAN,EAAA,0BAAAoG,EACA,MACA,SACApG,EAAA,kCAAAoG,IAIA,MAAAe,GAAAmB,KAAA,WACA2wD,EAAAh2D,OAAA,GACA0yC,EAAAyf,MAAArlD,EAAAS,WAAAyoD,OAIArB,SAAA,SAAAD,EAAA1hD,EAAAiL,EAAA0xC,GACA,QAAAuG,KACA,MAAA/xD,SAAAC,QAAA,GAAA2wD,IAAA,kBAAAxG,GAAA,QAAAmG,EAAA,qBAAA1hD,IAEA,GAAAyhD,EACA,IAAAzhD,EACA9U,EAAAkf,EAAApK,IACAyhD,EAAAzhD,MACI,CACJ,GAAAmjD,GAAAxG,EAAA1zD,IAAA,OACA,KAAAk6D,EAIA,MADA94D,GAAA,yBACA64D,GAHAzB,GAAA0B,EAAAn3C,OAAA01C,GAMA,IAAAD,EAEA,MADAp3D,GAAA,yBACA64D,GAEA,IAAAp7D,KAAA+0D,UAAA/3C,IAAA28C,GACA,MAAA35D,MAAA+0D,UAAA5zD,IAAAw4D,EAGA,IADAzhD,EAAAiL,EAAAW,WAAA61C,IACAv3C,EAAAlK,GACA,MAAAkjD,IAEA,IAAAljD,EAAA4hD,WACA,MAAA5hD,GAAA4hD,UAEA,IAGAwB,GAHAC,EAAAryD,IACAsyD,EAAAx7D,KAAAy7D,gBAAAvjD,EAAAiL,GACAu4C,EAAAF,EAAAE,WACAC,EAAAr5C,EAAAq3C,EAIA,IAHAgC,IACAL,EAAA3B,EAAA35C,YAEAoC,EAAAs5C,GAAA,CACAA,EAAAE,cACAF,EAAAE,YAAA76D,OAAA2D,OAAA,MAEA,IAAAk3D,GAAAF,EAAAE,YACAhS,EAAA4R,EAAA5R,IACA,IAAAgS,EAAAhS,GAAA,CACA,GAAAiS,GAAAD,EAAAhS,GAAA3kC,QACA,IAAA02C,GAAAE,GAAA77D,KAAA+0D,UAAA/3C,IAAA6+C,GAEA,MADA77D,MAAA+0D,UAAA/vC,SAAA20C,EAAAkC,GACA77D,KAAA+0D,UAAA5zD,IAAAw4D,OAGAiC,GAAAhS,IAA0B0R,OAAA3H,GAAAmI,YAE1BH,KACAC,EAAAhS,GAAA3kC,SAAA00C,GAEA2B,EAAAM,EAAAhS,GAAA0R,OAEAK,EACA37D,KAAA+0D,UAAAlwC,IAAA80C,EAAA4B,EAAAnyD,UAEAkyD,IACAA,EAAAt7D,KAAA80D,UAAAoD,eAEAl4D,KAAA+0D,UAAAlwC,IAAA,MAAAy2C,EAAAC,EAAAnyD,UAEAhG,EAAAk4D,EAAA,iCACApjD,EAAAgiD,WAAA,KAAAl6D,KAAA6zC,WAAAc,MAAA,KAAA2mB,EACApjD,EAAA4hD,WAAAyB,EAAAnyD,OACA,IAAA2yD,EACA,KACAA,EAAA/7D,KAAAg8D,cAAAR,EAAAr4C,GACI,MAAApgB,GACJg5D,EAAA1yD,QAAAE,OAAAxG,GAEA,GAAAyI,GAAAxL,IAoBA,OAnBA+7D,GAAAxxD,KAAA,SAAA0xD,OACAh3D,KAAAg3D,EAAAC,WACA/4C,EAAA2gB,MAAAq4B,UACAF,EAAAC,WAAA,GAEAX,EAAAjyD,QAAA,GAAA2wD,IAAA/hD,EAAAgiD,WAAA+B,EAAA/jD,KACI,SAAAxN,GACJc,EAAA8V,QAAAE,KAAA,sBAA6Cs2B,UAAAlgC,EAAAM,MAC7C,KACA,GAAAwjD,GAAAF,EAAAE,WACAU,EAAAV,KAAAv6D,IAAA,aACAw3D,EAAAyD,KAAAj7D,IAAA,WACA+6D,EAAApI,GAAA0H,EAAAh7C,KAAAm4C,KAAA/3D,KACAuiB,GAAA2gB,MAAAq4B,UACAD,IAAA,EACK,MAAAh4D,IAELq3D,EAAAjyD,QAAA,GAAA2wD,IAAA/hD,EAAAgiD,WAAA,GAAAzG,GAAA/oD,YAAA5H,OAAA4H,EAAA6N,QAAA7N,GAAAwN,MAEAqjD,EAAAnyD,SAEAqxD,UAAA,SAAA7iB,EAAA1yB,EAAAnG,GACA,GAAAs9C,GAAAzkB,EAAA1yC,OAAA,CAIA,IAHA6Z,IACAA,MAEAs9C,EAAA,GAAAzkB,EAAAzP,QAAAk0B,KAAArqD,EAAA2F,cACAigC,EAAAyf,MAAArlD,EAAA2F,gBACAuN,GACAnG,QAEI,CACJ,GAAAu9C,GAAA1kB,EAAA4hB,UAAA6C,EACAC,GAAA,GAAAz2D,KAAAqf,GACAtc,MAAApH,UAAAqE,KAAAP,MAAAg3D,EAAA,GAAAv9C,KAGAw9C,aAAA,SAAA3kB,EAAA1yB,EAAAnG,EAAAmY,EAAAslC,EAAA3H,EAAAvhB,EAAAnwB,GACA,GACA61C,GADAyD,EAAA19C,IAAA7Z,OAAA,EAEA,IAAA6c,EAAA06C,KAAAzD,EAAAwD,EAAAr7D,IAAAs7D,EAAA77D,OAAA,CACA,GAAAkc,GAAA8F,EAAAo2C,KAAAl8C,KAAAk8C,EACArxB,EAAA7qB,EAAA3b,IAAA,cACA,IAleA,IAkeAwmC,EAAA,CACA,GAAA3L,GAAA9E,EAAAzzB,KAAAyzB,EAAAzzB,KAAAkyB,OAAA5W,EAAA,OACA,OAAA/e,MAAA+4D,iBAAA7zC,EAAA8W,EAAA64B,EAAAmE,EAAAl8C,EAAA86B,EAAAtE,GACK,GAreL,IAqeK3L,EAAA,CACL,GAAA+0B,GAAA5/C,EAAA3b,IAAA,WACA42B,EAAAjb,EAAAC,SAAA,SAGA,OAFAi8C,GAAAjF,GAAA4I,aAAAD,EAAA3kC,EAAA5U,EAAA0xC,EAAA70D,KAAAshB,SACAs2B,EAAAyf,MAAAnyC,EAAA8zC,EAAA5rC,SACA/jB,QAAAC,UAEA,MAAAD,SAAAE,OAAA,wBAAAo+B,GAGA,MADAiQ,GAAAyf,MAAAnyC,EAAAnG,GACA1V,QAAAC,WAEAouC,gBAAA,SAAA/vB,EAAA2rB,EAAAuhB,EAAAjd,EAAAif,GACA,GAAArrD,GAAAxL,KACAmjB,EAAAnjB,KAAAmjB,KACA0d,EAAA9/B,OAAA2D,OAAA,KACAtB,GAAAw0C,GACAid,KAAAxyC,EAAAiC,KACA,IAAAs4C,GAAA/H,EAAA1zD,IAAA,YAAAkhB,EAAAiC,MACAk4C,EAAA3H,EAAA1zD,IAAA,YAAAkhB,EAAAiC,MACAk0C,EAAA,GAAAqE,IAAAhG,GAAA,GAAAiG,KACAC,EAAA,GAAAC,IAAAr1C,EAAAxE,EAAAq1C,GACAyE,EAAA,GAAA3H,EACA,WAAAjsD,SAAA,QAAA6zD,GAAA5zD,EAAAC,GACA,GAAAu4C,GAAA,SAAA14C,GACAA,EAAAmB,KAAA,WACA,IACA2yD,EAAA5zD,EAAAC,GACO,MAAArF,GACPqF,EAAArF,KAEMqF,GAEN+pC,GAAAvD,sBACAktB,EAAAz2C,OAEA,KADA,GAAA22C,GAA4B98D,EAAAmG,EAAA0wB,EAA5BiX,OACAgvB,EAAAF,EAAAtyC,WACAwjB,EAAApvB,KAAA,KACAg+C,EAAAtqB,KAAAtE,KAFA,CAKA,GAAApvB,GAAAovB,EAAApvB,KACAmG,EAAAipB,EAAAjpB,EACA,UAAAA,GACA,IAAAlT,GAAAkE,aACA,GAAA6I,EAAA,GAAApX,KACA,KAEA,IAAA/G,GAAAme,EAAA,GAAAne,IACA,KAAAA,EAAA,CACA2B,EAAA,uCACA,UAEA,OAAA0C,KAAA47B,EAAAjgC,GAAA,CACAg3C,EAAAyf,MAAAx2B,EAAAjgC,GAAAskB,GAAA2b,EAAAjgC,GAAAme,MACAA,EAAA,IACA,UAEA,GAAA63C,GAAAgG,EAAAz7D,IAAAP,EACA,IAAAg2D,EAAA,CACAxzD,EAAAwf,EAAAg0C,GAAA,6BACA,IAAAp2C,GAAAo2C,EAAA95C,KAAA3b,IAAA,UAEA,IADAiC,EAAA2e,EAAAvB,GAAA,sCACA,SAAAA,EAAA5f,KAKA,MAJA43D,GAAA9lD,WACAovC,GAAAt2C,EAAAmrD,iBAAA9B,EAAA+B,EAAA,KAAAhf,EAAAtE,EAAAklB,EAAAx2B,MAAAljB,SAAAvU,KAAA,WACAiuD,EAAA7lD,YAGQ,cAAA6N,EAAA5f,KAAA,CACR4K,EAAA8rD,uBAAAzC,EAAA+B,GAAA,EAAAhf,EAAAh3C,EAAAigC,GACA9hB,EAAA,IACA,UACQ,UAAAyB,EAAA5f,KAAA,CACRqB,EAAA,6BACA,UAEAU,EAAA,6BAAA6d,EAAA5f,MAGA,KACA,KAAAoR,GAAAqC,QACA,GAAA+oD,GAAAr+C,EAAA,EAQA,YAPA+iC,GAAAt2C,EAAAiuD,cAAA5E,EAAA91C,EAAA,KAAA64B,EAAAtE,EAAAklB,EAAAx2B,OAAAz3B,KAAA,SAAA2vD,GACAtiB,EAAAugB,cAAA+B,GACAtiB,EAAAyf,MAAArlD,EAAAqC,SACA6lD,EACAkD,MAIA,KAAAprD,GAAAiE,eACA,GAAA+sB,GAAAjkB,EAAA,GAAAikB,QACA,IAAAA,EAAA,CACA,GAAAq6B,GAAAx8B,EAAAmC,EACA,QAAA/9B,KAAAo4D,EAAA,CACAzlB,EAAAyf,MAAAgG,EAAAn4C,GAAAm4C,EAAAt+C,MACAA,EAAA,IACA,WAGAvT,EAAA8rD,uBAAAzC,EAAA91C,EAAA,MAAA64B,EAAA5U,EAAAnC,GACA9hB,EAAA,IACA,SACA,KAAA/M,GAAA4C,SACAmK,EAAA,GAAAvT,EAAA2uD,WAAAp7C,EAAA,GAAAy5C,EAAAx2B,MACA,MACA,KAAAhwB,GAAA6C,eACA,GAAA3O,GAAA6Y,EAAA,GACAu+C,KACAC,EAAAr3D,EAAAhB,OACA88B,EAAAw2B,EAAAx2B,KACA,KAAA3hC,EAAA,EAAiBA,EAAAk9D,IAAel9D,EAAA,CAChC,GAAAm9D,GAAAt3D,EAAA7F,EACAqI,GAAA80D,GACA50D,MAAApH,UAAAqE,KAAAP,MAAAg4D,EAAA9xD,EAAA2uD,WAAAqD,EAAAx7B,IACQv5B,EAAA+0D,IACRF,EAAAz3D,KAAA23D,GAGAz+C,EAAA,GAAAu+C,EACAp4C,EAAAlT,EAAA4C,QACA,MACA,KAAA5C,GAAA8C,iBACA8iC,EAAAyf,MAAArlD,EAAA2C,UACAoK,EAAA,GAAAvT,EAAA2uD,WAAAp7C,EAAA,GAAAy5C,EAAAx2B,OACA9c,EAAAlT,EAAA4C,QACA,MACA,KAAA5C,GAAA+C,2BACA6iC,EAAAyf,MAAArlD,EAAA2C,UACAijC,EAAAyf,MAAArlD,EAAAkC,gBAAA6K,EAAA6I,UACAgwB,EAAAyf,MAAArlD,EAAAiC,gBAAA8K,EAAA6I,UACA7I,EAAA,GAAAvT,EAAA2uD,WAAAp7C,EAAA,GAAAy5C,EAAAx2B,OACA9c,EAAAlT,EAAA4C,QACA,MACA,KAAA5C,GAAAsC,qBACAkkD,EAAAx2B,MAAAw4B,kBAAAz7C,EAAA,EACA,MACA,KAAA/M,GAAAmD,kBACAqjD,EAAAx2B,MAAAy7B,eAAAhpC,EAAAzH,MAAAjO,EAAA,GAAAoE,EAAA0xC,EACA,SACA,KAAA7iD,GAAAkD,oBACAsjD,EAAAx2B,MAAA07B,iBAAAjpC,EAAAzH,MAAAjO,EAAA,GAAAoE,EAAA0xC,EACA,SACA,KAAA7iD,GAAAsD,aACA4hB,EAAAshC,EAAAx2B,MAAAy7B,eACA1+C,EAAAmY,EAAAvB,OAAA5W,EAAA,GACAmG,EAAAlT,EAAA2D,eACA,MACA,KAAA3D,GAAAoD,eACA8hB,EAAAshC,EAAAx2B,MAAA07B,iBACA3+C,EAAAmY,EAAAvB,OAAA5W,EAAA,GACAmG,EAAAlT,EAAA0D,iBACA,MACA,KAAA1D,GAAAyD,YACA+iD,EAAAx2B,MAAAy7B,eAAAhpC,EAAAkD,WAAAC,KACA7Y,EAAA0V,EAAAkD,WAAAC,KAAAjC,OAAA5W,EAAA,GACAmG,EAAAlT,EAAA2D,eACA,MACA,KAAA3D,GAAAwD,cACAgjD,EAAAx2B,MAAA07B,iBAAAjpC,EAAAkD,WAAAC,KACA7Y,EAAA0V,EAAAkD,WAAAC,KAAAjC,OAAA5W,EAAA,GACAmG,EAAAlT,EAAA0D,iBACA,MACA,KAAA1D,GAAA6D,iBACA2iD,EAAAx2B,MAAAy7B,eAAAhpC,EAAAkD,WAAAE,KACA9Y,EAAA0V,EAAAkD,WAAAE,KAAAlC,OAAA5W,EAAA,GACAmG,EAAAlT,EAAA2D,eACA,MACA,KAAA3D,GAAA4D,mBACA4iD,EAAAx2B,MAAA07B,iBAAAjpC,EAAAkD,WAAAE,KACA9Y,EAAA0V,EAAAkD,WAAAE,KAAAlC,OAAA5W,EAAA,GACAmG,EAAAlT,EAAA0D,iBACA,MACA,KAAA1D,GAAA2D,gBACA6iD,EAAAx2B,MAAAy7B,eAAAhpC,EAAAkD,WAAA9B,IACA9W,EAAA0V,EAAAkD,WAAA9B,IAAAF,OAAA5W,EAAA,EACA,MACA,KAAA/M,GAAA0D,kBACA8iD,EAAAx2B,MAAA07B,iBAAAjpC,EAAAkD,WAAA9B,IACA9W,EAAA0V,EAAAkD,WAAA9B,IAAAF,OAAA5W,EAAA,EACA,MACA,KAAA/M,GAAAuD,cAEA,GADA2hB,EAAAshC,EAAAx2B,MAAAy7B,eACA,YAAAvmC,EAAAt2B,KAEA,WADAkhD,GAAAt2C,EAAA+wD,aAAA3kB,EAAA5lC,EAAAuD,cAAAwJ,EAAAmY,EAAAslC,EAAA3H,EAAAvhB,EAAAnwB,GAGApE,GAAAmY,EAAAvB,OAAA5W,EAAA,GACAmG,EAAAlT,EAAA2D,eACA,MACA,KAAA3D,GAAAqD,gBAEA,GADA6hB,EAAAshC,EAAAx2B,MAAA07B,iBACA,YAAAxmC,EAAAt2B,KAEA,WADAkhD,GAAAt2C,EAAA+wD,aAAA3kB,EAAA5lC,EAAAqD,gBAAA0J,EAAAmY,EAAAslC,EAAA3H,EAAAvhB,EAAAnwB,GAGApE,GAAAmY,EAAAvB,OAAA5W,EAAA,GACAmG,EAAAlT,EAAA0D,iBACA,MACA,KAAA1D,GAAA8D,YACA,GAAA6nD,GAAA9I,EAAA1zD,IAAA,UACAw8D,IACAh7D,EAAA,4BAEA,IAAA+5D,GAAAiB,EAAAx8D,IAAA4d,EAAA,GAAAne,KACA87D,IACA/5D,EAAA,2BAIAoc,GAFAg1C,GAAA4I,aAAAD,EAAA,KAAAv5C,EAAA0xC,EAAArpD,EAAA8V,SACA8L,SAEAlI,EAAAlT,EAAA8D,WACA,MACA,KAAA9D,GAAAS,UACA,GAAAmrD,GAAA7+C,EAAA,GACA8+C,EAAAhJ,EAAA1zD,IAAA,YACA,KAAAihB,EAAAy7C,OAAA7gD,IAAA4gD,EAAAh9D,MACA,KAEA,IAAAq6D,GAAA4C,EAAA18D,IAAAy8D,EAAAh9D,KAEA,YADAkhD,GAAAt2C,EAAAiH,UAAAoiD,EAAAoG,EAAArjB,EAAAtE,EAAAnwB,EAAAq1C,GAEA,KAAAxmD,GAAAa,OACA,IAAAb,GAAAc,OACA,IAAAd,GAAAe,QACA,IAAAf,GAAAgB,SACA,IAAAhB,GAAAiB,SACA,IAAAjB,GAAAkB,UAGA,IAAAlB,GAAAmB,UACA3H,EAAAivD,UAAA7iB,EAAA1yB,EAAAnG,EACA,SACA,KAAA/M,GAAAmE,UACA,IAAAnE,GAAAoE,eACA,IAAApE,GAAAqE,mBACA,IAAArE,GAAAsE,wBACA,IAAAtE,GAAAuE,iBACA,IAAAvE,GAAAwE,YACA,IAAAxE,GAAAyE,UACA,QACA,SACA,UAAAsI,EAAA,CACA,IAAA1e,EAAA,EAAAmG,EAAAuY,EAAA7Z,OAAoC7E,EAAAmG,KACpCuY,EAAA1e,YAAAgiB,IAD4ChiB,KAK5C,GAAAA,EAAAmG,EAAA,CACAjE,EAAA,wCAAA2iB,EACA,YAIA0yB,EAAAyf,MAAAnyC,EAAAnG,GAEA,GAAAo+C,EAEA,WADArb,GAAAgU,EAGA,KAAAz1D,EAAA,EAAAmG,EAAAu2D,EAAAe,iBAAmDz9D,EAAAmG,EAAQnG,IAC3Du3C,EAAAyf,MAAArlD,EAAAW,WAEArJ,QAGAy0D,eAAA,SAAAp2C,EAAA2rB,EAAAuhB,EAAA2D,EAAAvgB,EAAAC,GAkCA,QAAA8lB,KACA,GAAAC,EAAAlvC,YACA,MAAAkvC,EAEA,IAAA/lD,GAAAgmD,EAAAhmD,IACAA,GAAAgiD,aAAA9hB,GAAA+lB,SACA/lB,EAAA+lB,OAAAjmD,EAAAgiD,aACAkE,WAAAlmD,EAAAmmD,aACA7hB,OAAAtkC,EAAAskC,OACAC,QAAAvkC,EAAAukC,QACA6hB,SAAApmD,EAAAomD,WAGAL,EAAArE,SAAA1hD,EAAAgiD,UACA,IAAAqE,IACAL,EAAAd,SAAAc,EAAAM,WACA,EACA,EACAN,EAAAd,SACA,EACAc,EAAAO,SAEA,IAAAvmD,EAAA6hD,aAAAmE,EAAA5hB,aAAA7wC,GAAA,IAAAyyD,EAAAd,SAAA,CACA,GAAAsB,GAAAxmD,EAAA4+C,KAAA,GAAA5+C,EAAA4+C,KAAA,EACA4H,GAAA,IACAA,GAAAR,EAAA5hB,WAAA,GACAiiB,EAAA,IAAAG,GAGA,GAAAC,GAAAllD,EAAA7G,UAAAsrD,EAAAU,IAAAnlD,EAAA7G,UAAAsrD,EAAAW,WAAAN,GACAN,GAAArrD,UAAA+rD,EACAzmD,EAAAomD,UAKAL,EAAAv/C,MAAAjZ,KAAAuV,KAAA2jD,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAV,EAAAt/C,OAAA,EACAs/C,EAAAK,UAAA,IANAL,EAAAv/C,MAAA,EACAu/C,EAAAt/C,OAAAlZ,KAAAuV,KAAA2jD,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAV,EAAAK,UAAA,EAMA,IAAAzjD,GAAAqjD,EAAAY,eAAA,GACAhlD,EAAAokD,EAAAY,eAAA,GACAC,EAAAt5D,KAAAuV,KAAAH,IAAAf,IACAe,GAAAqjD,EAAAU,IAAA,GACA9kD,EAAAokD,EAAAU,IAAA,EACA,IAAAI,GAAAv5D,KAAAuV,KAAAH,IAAAf,IACAmkD,GAAAgB,iBAAAD,EAAAD,EACAd,EAAAiB,iBAAA,EACAjB,EAAAkB,kBAAA,CACA,IAAAC,GAAAlnD,EAAAknD,WAAA,IAAAlB,EAAAd,QAeA,OAdAgC,IACAnB,EAAAmB,aACAnB,EAAAoB,aAAAD,EAAAE,EACArB,EAAAsB,kBAAAH,EAAAI,EACAvB,EAAAwB,kBAAAL,EAAAM,EACAzB,EAAA0B,qBAAAznD,EAAA0nD,cAEA3B,EAAAmB,WAAA,EACAnB,EAAAoB,aAAAQ,IACA5B,EAAAsB,kBAAAM,IACA5B,EAAAwB,kBAAA,EACAxB,EAAA0B,qBAAA,GAEA1B,EAAAlvC,aAAA,EACAkvC,EAEA,QAAA6B,GAAAl7D,GAEA,IADA,GAAA+C,GAAAtH,EAAA,EAAAmG,EAAA5B,EAAAM,OACA7E,EAAAmG,IAAAmB,EAAA/C,EAAAoB,WAAA3F,KAAA,IAAAsH,GAAA,KACAtH,GAEA,OAAAA,GAAAmG,EAAA5B,EAAAC,QAAAk7D,EAAA,KAAAn7D,EAEA,QAAAo7D,GAAAC,GACA,GAAAr7D,GAAAq7D,EAAAr7D,IAAAzB,KAAA,IACA+8D,EAAA9L,GAAAxvD,GAAA,EAAAq7D,EAAA3B,SACA,QACA15D,IAAAqzC,EAAA6nB,EAAAI,EAAAt7D,KAAAs7D,EAAAt7D,IACAu7D,IAAAD,EAAAC,IACAzhD,MAAAuhD,EAAAvhD,MACAC,OAAAshD,EAAAthD,OACA/L,UAAAqtD,EAAArtD,UACAgnD,SAAAqG,EAAArG,UAGA,QAAAH,GAAAG,EAAAD,GACA,MAAAnuD,GAAAquD,SAAAD,EAAAD,EAAAx2C,EAAA0xC,GAAAtqD,KAAA,SAAAuvD,GACAoE,EAAAhmD,KAAA4hD,EAAA5hD,KACAgmD,EAAA5hB,WAAAwd,EAAA5hD,KAAAokC,YAAA7wC,IAGA,QAAA20D,GAAAhG,GAMA,OALAliD,GAAAgmD,EAAAhmD,KACA+nD,EAAAjC,IACAt/C,EAAA,EACAC,EAAA,EACA07C,EAAAniD,EAAAoiD,cAAAF,GACA/5D,EAAA,EAAmBA,EAAAg6D,EAAAn1D,OAAmB7E,IAAA,CACtC,GAAA06D,GAAAV,EAAAh6D,GACAggE,EAAA,IAEAA,GADAnoD,EAAAomD,UAAAvD,EAAAuF,QACAvF,EAAAuF,QAAA,GAEAvF,EAAAr8C,KAEA,IAAA6hD,GAAAxF,EAAAyF,QACAC,EAAAjM,SACAvvD,KAAAw7D,EAAAF,KACAA,EAAAE,EAAAF,IAEAA,EAAA9L,GAAA8L,EACA,IAAAG,GAAAxC,EAAAwC,WACA,IAAA3F,EAAAjyD,QAAA,CACA,GAAA63D,GAAAzC,EAAAyC,WACAD,IAAAC,EACAA,EAAA,GACAC,EAAAD,EAAAV,EAAAr7D,KAGA,GAAAi8D,GAAA,EACAC,EAAA,CACA5oD,GAAAomD,UAMAwC,EADAT,EAAAnC,EAAA5hB,WAAA,GACA4hB,EAAAd,SAAAsD,EACA/hD,GAAAmiD,IALAD,GADAR,EAAAnC,EAAA5hB,WAAA,GACA4hB,EAAAd,SAAAsD,GAAAxC,EAAAM,WACA9/C,GAAAmiD,GAMA3C,EAAA6C,oBAAAF,EAAAC,GACAb,EAAAr7D,IAAAiB,KAAA06D,GASA,MAPAroD,GAAAomD,UAIA2B,EAAAd,kBAAAxgD,EACAshD,EAAAthD,QAAAlZ,KAAAmZ,IAAAD,KAJAshD,EAAAf,iBAAAxgD,EACAuhD,EAAAvhD,UAKAuhD,EAEA,QAAAW,GAAAliD,EAAAnZ,GACA,KAAAmZ,EAAAu/C,EAAAoB,cAAA,CAGA,GAAA3gD,EAAAu/C,EAAAsB,kBAEA,WADAh6D,GAAAM,KAAA,IAIA,KADA,GAAAm7D,GAAAv7D,KAAAs5B,MAAArgB,EAAAu/C,EAAAmB,YACA4B,KAAA,GACAz7D,EAAAM,KAAA,MAGA,QAAAo7D,KACAhD,EAAAlvC,cAGAkvC,EAAAv/C,OAAAu/C,EAAAgB,iBACAhB,EAAAt/C,QAAAs/C,EAAAgB,iBACA7mB,EAAA1qB,MAAA7nB,KAAAm6D,EAAA/B,IACAA,EAAAlvC,aAAA,EACAkvC,EAAAr5D,IAAAM,OAAA,GApMAszD,KAAA,GAAAqE,IAAA,GAAAqE,IACA,IAAAnB,GAAA,MACA3nB,GACA1qB,SACAywC,OAAAp9D,OAAA2D,OAAA,OAEAu5D,GACAlvC,aAAA,EACAnqB,OACA8Z,MAAA,EACAC,OAAA,EACA2/C,UAAA,EACAY,iBAAA,EACAC,kBAAA,EACAF,iBAAA,EACAG,WAAA,EACAC,aAAAQ,IACAN,kBAAAM,IACAJ,mBAAA,EACAE,qBAAA,EACA/sD,UAAA,KACAgnD,SAAA,MAEA0F,EAAA,GACAE,EAAA,IACAE,EAAA,EACAl0D,EAAAxL,KACAmjB,EAAAnjB,KAAAmjB,IACA0xC,GAAA1xC,EAAAW,WAAA+wC,IAAAxyC,EAAAiC,KACA,IAGA45C,GAHAtB,EAAA,KACAuE,EAAApgE,OAAA2D,OAAA,MACAq4D,EAAA,GAAAC,IAAAr1C,EAAAxE,EAAAq1C,GAuKAyE,EAAA,GAAA3H,EACA,WAAAjsD,SAAA,QAAA6zD,GAAA5zD,EAAAC,GACA,GAAAu4C,GAAA,SAAA14C,GACAA,EAAAmB,KAAA,WACA,IACA2yD,EAAA5zD,EAAAC,GACO,MAAArF,GACPqF,EAAArF,KAEMqF,GAEN+pC,GAAAvD,sBACAktB,EAAAz2C,OAEA,KADA,GAAA22C,GAAAhvB,KAA4BpvB,OAC5Bo+C,EAAAF,EAAAtyC,WACA5L,EAAA7Z,OAAA,EACAipC,EAAApvB,OACAg+C,EAAAtqB,KAAAtE,KAHA,CAMA+vB,EAAA1F,EAAAx2B,KACA,IAAA9c,GAAAipB,EAAAjpB,EACAnG,GAAAovB,EAAApvB,IACA,IAAAqiD,GAAAp3B,CACA,UAAA9kB,GACA,IAAAlT,GAAAqC,QACA,GAAAgtD,GAAAtiD,EAAA,GAAAne,KAAA0gE,EAAAviD,EAAA,EACA,IAAAm/C,EAAAhmD,MAAAmpD,IAAAnD,EAAAtE,UAAA0H,IAAApD,EAAAd,SACA,KAMA,OAJA6D,KACA/C,EAAAtE,SAAAyH,EACAnD,EAAAd,SAAAkE,MACAxf,GAAA2X,EAAA4H,EAAA,MAEA,KAAArvD,GAAAuC,YACA0sD,IACA/C,EAAAO,SAAA1/C,EAAA,EACA,MACA,KAAA/M,GAAAmC,UACA8sD,IACA/C,EAAAM,WAAAz/C,EAAA,MACA,MACA,KAAA/M,GAAAoC,WACA6sD,IACA/C,EAAAqD,QAAAxiD,EAAA,EACA,MACA,KAAA/M,GAAAwC,SACA,GAAAgtD,KAAAtD,EAAAhmD,MAAA,KAAAgmD,EAAAhmD,KAAAomD,SAAAv/C,EAAA,GAAAA,EAAA,GAEA,IADAqiD,EAAAriD,EAAA,GAAAA,EAAA,GACAm5B,GAAAspB,GAAAvD,EAAAlvC,aAAAqyC,EAAA,GAAAA,GAAAnD,EAAAwB,kBAAA,CACAvB,EAAAuD,wBAAA1iD,EAAA,GAAAA,EAAA,IACAk/C,EAAAv/C,OAAAK,EAAA,GAAAk/C,EAAAiB,iBACAjB,EAAAt/C,QAAAI,EAAA,GAAAk/C,EAAAkB,kBACAn1B,EAAAjrB,EAAA,GAAAk/C,EAAAiB,kBAAAngD,EAAA,GAAAk/C,EAAAkB,mBACAyB,EAAA52B,EAAAi0B,EAAAr5D,IACA,OAEAq8D,IACA/C,EAAAuD,wBAAA1iD,EAAA,GAAAA,EAAA,IACAm/C,EAAAW,WAAAX,EAAAY,eAAA57D,OACA,MACA,KAAA8O,GAAAyC,mBACAwsD,IACA/C,EAAAqD,SAAAxiD,EAAA,GACAm/C,EAAAuD,wBAAA1iD,EAAA,GAAAA,EAAA,IACAm/C,EAAAW,WAAAX,EAAAY,eAAA57D,OACA,MACA,KAAA8O,GAAA2C,SACAssD,IACA/C,EAAAwD,gBACA,MACA,KAAA1vD,GAAA0C,cAEA,GADA0sD,EAAAlD,EAAAyD,0BAAA5iD,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAm5B,GAAA,OAAAkpB,GAAAnD,EAAAlvC,aAAAqyC,EAAA1gE,MAAA,GAAA0gE,EAAA1gE,OAAAu9D,EAAAwB,kBAAA,CACAvB,EAAAuD,wBAAAL,EAAA1iD,MAAA0iD,EAAAziD,QACAs/C,EAAAv/C,OAAA0iD,EAAA1iD,MAAAu/C,EAAAiB,iBACAjB,EAAAt/C,QAAAyiD,EAAAziD,OAAAs/C,EAAAkB,kBACAn1B,EAAAo3B,EAAA1iD,MAAAu/C,EAAAiB,kBAAAkC,EAAAziD,OAAAs/C,EAAAkB,mBACAyB,EAAA52B,EAAAi0B,EAAAr5D,IACA,OAEAq8D,IACA/C,EAAAxpD,cAAAqK,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAm/C,EAAA0D,kBAAA7iD,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACA,MACA,KAAA/M,GAAAiC,eACAiqD,EAAAwC,YAAA3hD,EAAA,EACA,MACA,KAAA/M,GAAAkC,eACAgqD,EAAAyC,YAAA5hD,EAAA,EACA,MACA,KAAA/M,GAAA+B,UACAktD,IACA/C,EAAAW,WAAArlD,EAAAtW,QACAg7D,EAAAY,eAAAtlD,EAAAtW,OACA,MACA,KAAA8O,GAAA6C,eAGA,OADA3N,GADAwmB,EAAA3O,EAAA,GAEA6M,EAAA,EAAAwc,EAAA1a,EAAAxoB,OAAwC0mB,EAAAwc,EAAQxc,IAChD,mBAAA8B,GAAA9B,GACAw0C,EAAA1yC,EAAA9B,QACQ,IAAAnjB,EAAAilB,EAAA9B,IAAA,CACRoyC,IACAoD,EAAA1zC,EAAA9B,GAAAsyC,EAAAd,SAAA,GACA,IAAAyE,IAAA,CACA3D,GAAAhmD,KAAAomD,UACAp3D,EAAAk6D,EACAlD,EAAA6C,oBAAA,EAAA75D,IACA26D,EAAA5D,EAAA0B,qBAAAyB,EAAAnD,EAAAwB,qBAEAxB,EAAAt/C,QAAAzX,KAGAk6D,KACAl6D,EAAAk6D,EAAAlD,EAAAM,WACAN,EAAA6C,oBAAA75D,EAAA,IACA26D,EAAA5D,EAAA0B,qBAAAyB,EAAAnD,EAAAwB,qBAEAxB,EAAAv/C,OAAAxX,IAGA26D,EACAZ,IACSG,EAAA,GACTR,EAAAQ,EAAAnD,EAAAr5D,KAIA,KACA,KAAAoN,GAAA4C,SACAwrD,EAAArhD,EAAA,GACA,MACA,KAAA/M,GAAA8C,iBACAmsD,IACA/C,EAAAwD,iBACAtB,EAAArhD,EAAA,GACA,MACA,KAAA/M,GAAA+C,2BACAksD,IACA/C,EAAAyC,YAAA5hD,EAAA,GACAm/C,EAAAwC,YAAA3hD,EAAA,GACAm/C,EAAAwD,iBACAtB,EAAArhD,EAAA,GACA,MACA,KAAA/M,GAAAkE,aAEA,GADA+qD,IACAliD,EAAA,GAAApX,KACA,KAEAi1D,KACAA,EAAA/H,EAAA1zD,IAAA,YAAAkhB,EAAAiC,MAEA,IAAA1jB,GAAAme,EAAA,GAAAne,IACA,IAAAugE,EAAA94D,MAAAzH,EAAA,CACAugE,EAAAW,QACAroD,EAAA4C,cAAA+7B,EAAA1qB,MAAAyzC,EAAAW,MAAAp0C,OACAjU,EAAAiD,UAAA07B,EAAA+lB,OAAAgD,EAAAW,MAAA3D,QAEA,OAEA,GAAAvH,GAAAgG,EAAAz7D,IAAAP,EACA,KAAAg2D,EACA,KAEAxzD,GAAAwf,EAAAg0C,GAAA,6BACA,IAAAp2C,GAAAo2C,EAAA95C,KAAA3b,IAAA,UAEA,IADAiC,EAAA2e,EAAAvB,GAAA,sCACA,SAAAA,EAAA5f,KAAA,CACAugE,EAAA94D,IAAAzH,EACAugE,EAAAW,MAAA,IACA,OAEAtJ,EAAA9lD,MACA,IAAAqlB,GAAA6+B,EAAA95C,KAAAC,SAAA,SAWA,OAVApU,GAAAovB,IAAA,IAAAA,EAAA7yB,QACAszD,EAAA5lD,UAAAmlB,OAEA+pB,GAAAt2C,EAAAuyD,eAAAnH,EAAAtjB,EAAAsjB,EAAA95C,KAAA3b,IAAA,cAAA0zD,EAAA2D,EAAAvgB,EAAAC,GAAA3tC,KAAA,SAAAw3D,GACAtoD,EAAA4C,cAAA+7B,EAAA1qB,MAAAq0C,EAAAr0C,OACAjU,EAAAiD,UAAA07B,EAAA+lB,OAAA4D,EAAA5D,QACA3F,EAAA7lD,UACAwuD,EAAA94D,IAAAzH,EACAugE,EAAAW,MAAAC,IAGA,KAAA/vD,GAAAS,UACAwuD,GACA,IAAArD,GAAA7+C,EAAA,GACA8+C,EAAAhJ,EAAA1zD,IAAA,YACA,KAAAihB,EAAAy7C,KAAA97C,EAAA67C,GACA,KAEA,IAAA3C,GAAA4C,EAAA18D,IAAAy8D,EAAAh9D,KACA,KAAAwhB,EAAA64C,GACA,KAEA,IAAA+G,IAAA/G,EAAA95D,IAAA,OACA,IAAA6gE,GAIA,MAHA9D,GAAAtE,SAAA,KACAsE,EAAAd,SAAA4E,GAAA,OACAlgB,GAAA2X,EAAA,KAAAuI,GAAA,MAMA,GAAA7E,EAEA,WADArb,GAAAgU,EAGAmL,KACA33D,EAAA8uC,MAGA6pB,sBAAA,SAAAnlD,EAAAolD,EAAA/+C,EAAAg3B,GACA,GAAAgoB,GAAArlD,EAAA3b,IAAA,cAAA+gE,EAAA/gE,IAAA,aACAihE,EAAAD,EAAAniE,KAAAqiE,cAAAF,GAAA94D,QAAAC,YAAArE,GACA,IAAAk1C,EAAAmoB,UAAA,CACA,GAAAC,GAAAzlD,EAAA3b,IAAA,gBACAihB,GAAAmgD,KACApoB,EAAAooB,eACAC,SAAAD,EAAAphE,IAAA,YACAshE,SAAAF,EAAAphE,IAAA,YACAuhE,WAAAH,EAAAphE,IAAA,eAGA,IAAAwhE,GAAA7lD,EAAA3b,IAAA,cACAyhB,GAAA+/C,KACAxoB,EAAAwoB,YAAA3iE,KAAA4iE,gBAAAD,IAGA,GAEA5yC,GAFA8yC,KACAC,EAAA,IAEA,IAAAhmD,EAAAE,IAAA,aAEA,GADA+S,EAAAjT,EAAA3b,IAAA,YACAihB,EAAA2N,IAGA,GAFA+yC,EAAA/yC,EAAA5uB,IAAA,gBACA2hE,EAAA/gD,EAAA+gD,KAAAliE,KAAA,KACAmvB,EAAA/S,IAAA,eAGA,OAFA+lD,GAAAhzC,EAAA5uB,IAAA,eACAmY,EAAA,EACAsS,EAAA,EAAAwc,EAAA26B,EAAA79D,OAA+C0mB,EAAAwc,EAAQxc,IAAA,CACvD,GAAAllB,GAAAyc,EAAAW,WAAAi/C,EAAAn3C,GACAnjB,GAAA/B,GACA4S,EAAA5S,EACQqb,EAAArb,GACRm8D,EAAAvpD,KAAA5S,EAAA9F,KAEA+B,EAAA,yCAAA+D,QAIKqb,GAAAgO,GACL+yC,EAAA/yC,EAAAnvB,KAEA+B,EAAA,oCAEA,sBAAAmgE,GAAA,sBAAAA,GAAA,oBAAAA,IACAA,EAAA,MAGA,GAAAA,EACA3oB,EAAA6oB,gBAAAljC,GAAAgjC,GAAA5/D,YACI,CACJ,GAAA+/D,MAAA9oB,EAAA6W,MAAA0C,GAAAwP,UACAC,KAAAhpB,EAAA6W,MAAA0C,GAAA0P,YACArzC,GAAAkQ,GACA,aAAAka,EAAA35B,MAAA2iD,IACApzC,EAAAiQ,IAEAijC,IACAlzC,EAAAmQ,GACAia,EAAAD,OACA,UAAAmpB,KAAAlpB,EAAAv5C,MACAmvB,EAAAoQ,GACO,YAAAkjC,KAAAlpB,EAAAv5C,QACPmvB,EAAAqQ,MAIA+Z,EAAA6oB,gBAAAjzC,EAMA,MAJAoqB,GAAA0oB,cACA1oB,EAAA2oB,mBACA3oB,EAAAmpB,cAAAR,GAAAD,EAAA39D,OAAA,EACAi1C,EAAAr9B,OACAslD,EAAA73D,KAAA,SAAA43D,GAEA,MADAhoB,GAAAgoB,YACAniE,KAAAujE,eAAAppB,IACIxvC,KAAA3K,OAAAuK,KAAA,SAAA43D,GAEJ,MADAhoB,GAAAgoB,YACAhoB,KAGAopB,eAAA,SAAAppB,GAEA,GADAA,EAAAqpB,0BAAArpB,EAAAgoB,WAAAhoB,EAAAgoB,UAAAj9D,OAAA,EACAi1C,EAAAqpB,wBACA,MAAAn6D,SAAAC,QAAA6wC,EAAAgoB,UAEA,IAAAA,GAAAsB,EAAAC,CACA,KAAAvpB,EAAAmoB,UAAA,CACAH,IACA,IAAApyC,GAAAoqB,EAAA6oB,gBAAA9/D,QACA4/D,EAAA3oB,EAAA2oB,iBACAD,EAAA1oB,EAAA0oB,WACA,KAAAY,IAAAZ,GAEA,aADAa,EAAAb,EAAAY,MAIA1zC,EAAA0zC,GAAAC,EAEA,IAAAC,GAAA70B,IACA,KAAA20B,IAAA1zC,GAEA,SADA2zC,EAAA3zC,EAAA0zC,IAGM,OAAAx+D,KAAA0+D,EAAAD,GAqCNvB,EAAAsB,GAAAr+D,OAAAC,aAAAs+D,EAAAD,QArCM,CACN,GAAA/7D,GAAA,CACA,QAAA+7D,EAAA,IACA,QACA,IAAAA,EAAAx+D,SACAyC,EAAA68C,SAAAkf,EAAA5e,OAAA,OAEA,MACA,SACA,IAAA4e,EAAAx+D,SACAyC,EAAA68C,SAAAkf,EAAA5e,OAAA,OAEA,MACA,SACA,QACA4e,EAAAx+D,QAAA,IACAyC,GAAA+7D,EAAA5e,OAAA,GAEA,MACA,SACA,GAAA0b,GAAA9L,GAAAgP,EAAAC,IACA,IAAAnD,IACA74D,EAAA64D,GAGA,GAAA74D,EAAA,CACA,GAAAm7D,GAAAn7D,KAAA87D,EAAA,CACA,GAAAliB,GAAAzhB,GAAAgjC,EACA,IAAAvhB,IAAAmiB,EAAAniB,EAAAkiB,IAAA,CACAtB,EAAAsB,GAAAr+D,OAAAC,aAAAs+D,EAAAD,GACA,WAGAvB,EAAAsB,GAAAr+D,OAAAC,aAAAsC,IAMA,MAAA0B,SAAAC,QAAA,GAAAuqD,IAAAsO,IAEA,GAAAhoB,EAAAmoB,YAAAnoB,EAAAypB,KAAAC,eAAA1pB,EAAAypB,eAAA1P,MAAA,UAAA/Z,EAAAooB,cAAAC,WAAA,QAAAroB,EAAAooB,cAAAE,UAAA,SAAAtoB,EAAAooB,cAAAE,UAAA,WAAAtoB,EAAAooB,cAAAE,UAAA,WAAAtoB,EAAAooB,cAAAE,WAAA,CACA,GAAAD,GAAAroB,EAAAooB,cAAAC,SACAC,EAAAtoB,EAAAooB,cAAAE,SACAqB,EAAA9hD,EAAA7gB,IAAAqhE,EAAA,IAAAC,EAAA,QACA,OAAAxO,IAAAvvD,QACAqrB,SAAA+zC,EACA3O,iBAAAn1D,KAAAm1D,iBACA4O,QAAA,OACKx5D,KAAA,SAAAy5D,GACL,GAAAJ,GAAAzpB,EAAAypB,IASA,OARAzB,MACAyB,EAAAv/C,QAAA,SAAAo/C,EAAA9iB,GACAv9C,EAAAu9C,GAAA,kCACA,IAAAsjB,GAAAD,EAAAv/D,OAAAk8C,EACAsjB,KACA9B,EAAAsB,GAAAr+D,OAAAC,cAAA4+D,EAAAj+D,WAAA,OAAAi+D,EAAAj+D,WAAA,OAGA,GAAA6tD,IAAAsO,KAGA,MAAA94D,SAAAC,QAAA,GAAAsqD,IAAAzZ,EAAA+pB,UAAA/pB,EAAAgqB,YAEA9B,cAAA,SAAAF,GACA,GAAAiC,GAAAjC,CACA,OAAApgD,GAAAqiD,GACAnQ,GAAAvvD,QACAqrB,SAAAq0C,EACAjP,iBAAAn1D,KAAAm1D,iBACA4O,QAAA,OACKx5D,KAAA,SAAA85D,GACL,MAAAA,aAAAnQ,IACA,GAAAN,IAAA,SAEA,GAAAC,IAAAwQ,EAAAC,YAEI1hD,EAAAwhD,GACJnQ,GAAAvvD,QACAqrB,SAAAq0C,EACAjP,iBAAAn1D,KAAAm1D,iBACA4O,QAAA,OACKx5D,KAAA,SAAA85D,GACL,GAAAA,YAAAnQ,IACA,UAAAN,IAAA,QAEA,IAAAxwC,GAAA,GAAAxa,OAAAy7D,EAAAn/D,OAeA,OAdAm/D,GAAAhgD,QAAA,SAAAkgD,EAAAC,GAEA,OADA5/D,MACA6lB,EAAA,EAAqBA,EAAA+5C,EAAAt/D,OAAkBulB,GAAA,GACvC,GAAAmK,GAAA4vC,EAAAx+D,WAAAykB,IAAA,EAAA+5C,EAAAx+D,WAAAykB,EAAA,EACA,kBAAAmK,GAAA,CAIAnK,GAAA,CACA,IAAAqK,GAAA0vC,EAAAx+D,WAAAykB,IAAA,EAAA+5C,EAAAx+D,WAAAykB,EAAA,EACA7lB,GAAAiB,OAAA,KAAA+uB,IAAA,UAAAE,GAAA,WALAlwB,GAAAiB,KAAA+uB,GAOAxR,EAAAmhD,GAAAn/D,OAAAC,aAAAC,MAAAF,OAAAR,KAEA,GAAAivD,IAAAzwC,KAGA/Z,QAAAC,QAAA,OAEAs5D,gBAAA,SAAA6B,GAGA,OAFAC,GAAAD,EAAA5hD,WACArY,KACAohB,EAAA,EAAAwc,EAAAs8B,EAAAx/D,OAA0C0mB,EAAAwc,EAAQxc,IAAA,CAClD,GAAA+4C,GAAAD,EAAA94C,MAAA,EAAA84C,EAAA94C,EACA,KAAA+4C,IAIAn6D,EADAohB,GAAA,GACA+4C,GAEA,MAAAn6D,IAEAo6D,cAAA,SAAA9nD,EAAAqG,EAAAu4C,EAAAvhB,GACA,GAGA0qB,GACAxkE,EAAAmG,EAAAolB,EAAAwc,EAAAphC,EAAAW,EAAA+1C,EAJAonB,KACAC,EAAA,EACAC,IAGA,IAAA7qB,EAAAmoB,UAAA,CAGA,GAFAyC,EAAAjoD,EAAA3b,IAAA,WACAu8C,EAAA5gC,EAAA3b,IAAA,KAEA,IAAAd,EAAA,EAAAmG,EAAAk3C,EAAAx4C,OAAoC7E,EAAAmG,EAAQnG,IAG5C,GAFA2G,EAAAmc,EAAAW,WAAA45B,EAAAr9C,MACAsH,EAAAwb,EAAAW,WAAA45B,EAAAr9C,IACAsI,EAAAhB,GACA,IAAAikB,EAAA,EAAAwc,EAAAzgC,EAAAzC,OAAoC0mB,EAAAwc,EAAQxc,IAC5Ck5C,EAAA99D,KAAAmc,EAAAW,WAAAnc,EAAAikB,QAEO,CACP,GAAAlN,GAAAyE,EAAAW,WAAA45B,IAAAr9C,GACA,KAAAurB,EAAA5kB,EAAsB4kB,GAAAjkB,EAAWikB,IACjCk5C,EAAAl5C,GAAAlN,EAKA,GAAAy7B,EAAAmkB,SAAA,CACA,GAAA2G,GAAAnoD,EAAAC,SAAA,SACA,KACA,IAQA,IANA8nD,GACAI,EAAA,GACA,GAAAF,EACAE,EAAA,IAEAA,EAAAnoD,EAAA3b,IAAA,MAEA,IAAAd,EAAA,EAAAmG,EAAAy+D,EAAA//D,OAAuC7E,EAAAmG,EAAQnG,IAG/C,GAFA2G,EAAAmc,EAAAW,WAAAmhD,EAAA5kE,MACAsH,EAAAwb,EAAAW,WAAAmhD,EAAA5kE,IACAsI,EAAAhB,GACA,IAAAikB,EAAA,EAAAwc,EAAAzgC,EAAAzC,OAAqC0mB,EAAAwc,EAAQxc,IAC7Co5C,EAAAh+D,MACAmc,EAAAW,WAAAnc,EAAAikB,MACAzI,EAAAW,WAAAnc,EAAAikB,MACAzI,EAAAW,WAAAnc,EAAAikB,SAGQ,CACR,GAAA00C,IACAn9C,EAAAW,WAAAmhD,IAAA5kE,IACA8iB,EAAAW,WAAAmhD,IAAA5kE,IACA8iB,EAAAW,WAAAmhD,IAAA5kE,IAEA,KAAAurB,EAAA5kB,EAAuB4kB,GAAAjkB,EAAWikB,IAClCo5C,EAAAp5C,GAAA00C,QAMI,CACJ,GAAA4D,GAAA/pB,EAAA+pB,SAEA,IADAxmB,EAAA5gC,EAAA3b,IAAA,UACA,CAEA,IADAyqB,EAAAs4C,EACA7jE,EAAA,EAAAmG,EAAAk3C,EAAAx4C,OAAoC7E,EAAAmG,EAAQnG,IAC5CykE,EAAAl5C,KAAAzI,EAAAW,WAAA45B,EAAAr9C,GAEA0kE,GAAA3mB,WAAAsd,EAAAv6D,IAAA,wBACK,CACL,GAAA+jE,GAAApoD,EAAA3b,IAAA,WACA,IAAA4gB,EAAAmjD,GAAA,CACA,GAAAC,GAAAnlE,KAAAolE,mBAAAF,EAAAtkE,KACAkkE,GAAA9kE,KAAAqlE,qBAAAF,EAAAznB,OAAAvD,GACA4qB,EAAAI,EAAAJ,eAIA,GAAAnF,IAAA,EACA0F,EAAAP,CACA,QAAAhK,KAAA+J,GAAA,CACA,GAAAzE,GAAAyE,EAAA/J,EACA,IAAAsF,EAGA,GAAAiF,GAIA,GAAAA,IAAAjF,EAAA,CACAT,GAAA,CACA,YALA0F,GAAAjF,EAQAT,IACAzlB,EAAA6W,OAAA0C,GAAA6R,YAEAprB,EAAA4qB,eACA5qB,EAAAuD,OAAAonB,EACA3qB,EAAA0qB,kBACA1qB,EAAA8qB,SAAAD,GAEAQ,YAAA,SAAAN,GACA,GAAAO,GAAAP,EAAAjiE,MAAA,OACA,OAAAwiE,KAAAnR,QAAA,IAAAmR,EAAAC,OAAA,YAEAN,mBAAA,SAAAxkE,GACA,GAAAmkE,GAAA,EACArnB,KACAioB,GAAA,EACAC,EAAAvR,KACAwR,EAAAD,EAAAhlE,MACAklE,EAAA3R,IACA0R,KAAAC,KAEAD,EADA7lE,KAAAwlE,YAAA5kE,GACA,cAEA,YAGA,IAAAmlE,GAAAD,EAAAD,EAOA,OANAp9D,GAAAs9D,IACAhB,EAAAgB,EACAJ,GAAA,GAEAjoB,EAAAqoB,KAGAhB,eACAY,YACAjoB,WAGA2nB,qBAAA,SAAAW,EAAA7rB,GAIA,OAHAuD,GAAA38C,OAAA2D,OAAA,MACAm+D,EAAA1oB,EAAA0oB,YACA9yC,EAAAoqB,EAAA6oB,gBACAuB,EAAA,EAAyBA,EAAA,IAAgBA,IACzCA,IAAA1B,IAAAmD,EAAAnD,EAAA0B,IACA7mB,EAAA6mB,GAAAyB,EAAAnD,EAAA0B,IAGAA,IAAAx0C,IAAAi2C,EAAAj2C,EAAAw0C,MACA7mB,EAAA6mB,GAAAyB,EAAAj2C,EAAAw0C,IAIA,OAAA7mB,IAEA+d,gBAAA,SAAA3+C,EAAAqG,GACA,GAAA++C,GAAAplD,EACA0D,EAAA1D,EAAA3b,IAAA,UACAiC,GAAA2e,EAAAvB,GAAA,uBACA,IACAylD,GADA3D,GAAA,CAEA,cAAA9hD,EAAA5f,KAAA,CACA,GAAAslE,GAAAppD,EAAA3b,IAAA,kBACA+kE,IACAvjE,EAAA,sCAEAma,EAAAnU,EAAAu9D,GAAA/iD,EAAAW,WAAAoiD,EAAA,IAAAA,EACA1lD,EAAA1D,EAAA3b,IAAA,WACAiC,EAAA2e,EAAAvB,GAAA,wBACA8hD,GAAA,EAEA,GAAA5G,GAAA5+C,EAAA3b,IAAA,iBACA,IAAAu6D,EAAA,CACA,GAAA9R,GAAA,GAAA4J,GACAzjC,EAAAmyC,EAAAh+C,OAAA,WACA,IAAAnC,EAAAgO,GACA65B,EAAAuc,OAAAp2C,EAAAnvB,UACK,IAAA0hB,EAAAyN,GACL65B,EAAAuc,OAAAp2C,EAAA/P,gBACK,IAAAoC,EAAA2N,GAEL,OADA3L,GAAA2L,EAAA5L,UACA9jB,EAAA,EAAAmG,EAAA4d,EAAAlf,OAAsC7E,EAAAmG,EAAQnG,IAAA,CAC9C,GAAAuiD,GAAA7yB,EAAA7L,OAAAE,EAAA/jB,GACA,IAAA0hB,EAAA6gC,GACAgH,EAAAuc,OAAAvjB,EAAAhiD,UACO,IAAA0hB,EAAAsgC,GACPgH,EAAAuc,OAAAvjB,EAAA5iC,gBACO,IAAArX,EAAAi6C,GAAA,CAEP,OADAwjB,GAAAxjB,EAAA19C,OAAAmhE,EAAA,GAAAz9D,OAAAw9D,GACAx6C,EAAA,EAAsBA,EAAAw6C,EAAgBx6C,IAAA,CACtC,GAAA06C,GAAA1jB,EAAAh3B,EACA7J,GAAAukD,GACAD,EAAAz6C,GAAA06C,EAAA1lE,MACS6H,EAAA69D,IAAAhkD,EAAAgkD,MACTD,EAAAz6C,GAAA06C,EAAAtmD,YAGA4pC,EAAAuc,OAAAE,EAAAljE,SAIA,GAAAg/D,GAAArlD,EAAA3b,IAAA,cAAA+gE,EAAA/gE,IAAA,YACA,IAAAyhB,EAAAu/C,GAAA,CACA,GAAAx6C,GAAAw6C,EAAAv9D,KAAAu9D,CACA8D,GAAAt+C,EAAApgB,OAAA,GAAAxB,YAAA4hB,EAAApgB,cAAA,EAAAogB,EAAAb,cAAA,GAAA/gB,YAAA4hB,EAAA3iB,MAAAuC,OAAAogB,EAAA3gB,MAAA2gB,EAAA1O,IAAA0O,EAAA3gB,OACA4iD,EAAAuc,OAAAF,OACKlkD,GAAAogD,IACLvY,EAAAuc,OAAAhE,EAAAvhE,KAEA,IAAA88C,GAAA5gC,EAAA3b,IAAA,WAAA+gE,EAAA/gE,IAAA,SACAu8C,KACAuoB,EAAA,GAAAlgE,YAAA,GAAAuqB,aAAAotB,GAAAn2C,QACAqiD,EAAAuc,OAAAF,IAGA,OACAvK,aACA5+C,OACAolD,WACAI,YACA9hD,OAAA5f,KACAgpD,SAAA2c,YAAA,KAGAvK,cAAA,SAAAR,EAAAr4C,GACA,GAMAg3B,GANA+nB,EAAA1G,EAAA0G,SACAplD,EAAA0+C,EAAA1+C,KACAwlD,EAAA9G,EAAA8G,UACA5G,EAAAF,EAAAE,WACAl7C,EAAAg7C,EAAAh7C,KACAgmD,EAAAlE,EAAA,SAEA,KAAA5G,EAAA,CACA,aAAAl7C,EAIK,CACL,GAAA0kD,GAAApoD,EAAA3b,IAAA,WACA4gB,GAAAmjD,IACAviE,EAAA,8BAEAuiE,IAAAtkE,KAAAiE,QAAA,YACA,IAAAsgE,GAAAnlE,KAAAolE,mBAAAF,GACAO,EAAAP,EAAAjiE,MAAA,QACA+tD,GAAAhxD,KAAAwlE,YAAAC,GAAA/R,GAAA+S,MAAA,IAAAtB,EAAAQ,UAAAjS,GAAA6R,WAAA,IAAAhR,KAAAkR,GAAA/R,GAAAwP,SAAAxP,GAAA0P,YAUA,OATAjpB,IACA35B,OACA5f,KAAAskE,EACAxnB,OAAAynB,EAAAznB,OACAqnB,aAAAI,EAAAJ,aACA/T,QACAkT,UAAA,EACAC,SAAAqC,GAEAxmE,KAAAiiE,sBAAAnlD,IAAAqG,EAAAg3B,GAAA5vC,KAAA,SAAA4vC,GAEA,MADAA,GAAAuD,OAAA19C,KAAAqlE,qBAAAF,EAAAznB,OAAAvD,GACA,GAAAwZ,IAAAuR,EAAA,KAAA/qB,IACMxvC,KAAA3K,OAxBN07D,EAAA,GAAAr5C,GAAA,MACAq5C,EAAA/0D,IAAA,WAAAqb,EAAA7gB,IAAAqf,IACAk7C,EAAA/0D,IAAA,WAAAmW,EAAAC,SAAA,aAyBA,GAAAmnD,GAAApnD,EAAA3b,IAAA,gBACAgjE,EAAArnD,EAAA3b,IAAA,aAAAqlE,EACA5M,EAAA8B,EAAAv6D,IAAA,YACAulE,EAAA5pD,EAAA3b,IAAA,WAOA,IANAuH,EAAAkxD,KACAA,EAAA53C,EAAA7gB,IAAAy4D,IAEAlxD,EAAAg+D,KACAA,EAAA1kD,EAAA7gB,IAAAulE,IAEA,UAAAlmD,EAAA,CACA,GAAAmmD,GAAA/M,KAAAh5D,KACAgmE,EAAAF,KAAA9lE,IACA+lE,KAAAC,IACA3kE,EAAA,sCAAA0kE,EAAA,qDAAAC,EAAA,KACAD,GAAAC,GAAA,IAAAA,EAAA50B,QAAA20B,KACA/M,EAAA8M,IAIA9M,KAAA8M,EACAtjE,EAAA2e,EAAA63C,GAAA,oBACA,IAAAiN,GAAAnL,EAAAv6D,IAAA,mCACA,IAAA0lE,GACAA,EAAA/pD,KAAA,CACA,GAAA67C,GAAAkO,EAAA/pD,KAAA3b,IAAA,UACAw3D,KACAA,IAAA/3D,KAEA,IAAAkmE,GAAAD,EAAA/pD,KAAA3b,IAAA,WACA4lE,EAAAF,EAAA/pD,KAAA3b,IAAA,WACA6lE,EAAAH,EAAA/pD,KAAA3b,IAAA,WAGAg5C,GACA35B,OACA5f,KAAAg5D,EAAAh5D,KACA+3D,UACAze,KAAA2sB,EACAC,UACAC,UACAC,UACA9M,WAAAgI,EAAAhI,WACAoI,YACA2E,UAAA3E,EACA4E,YAAA,EACA5qB,WAAAx/B,EAAAC,SAAA,eAAAtR,EACAy4D,aAAA,EACAC,YAAAqC,EACA1P,KAAA4E,EAAA3+C,SAAA,YACAy/B,OAAAkf,EAAAv6D,IAAA,UACAs7C,QAAAif,EAAAv6D,IAAA,WACAgmE,QAAAzL,EAAAv6D,IAAA,WACAimE,UAAA1L,EAAAv6D,IAAA,aACA6vD,MAAA0K,EAAAv6D,IAAA,SACAkmE,YAAA3L,EAAAv6D,IAAA,eACAmmE,OAAA,EAEA,IAAAC,EACA,IAAAjF,EAAA,CACA,GAAAkF,GAAAtF,EAAA/gE,IAAA,WACA4gB,GAAAylD,KACArtB,EAAAqtB,cAAA5mE,MAEA2mE,EAAAtT,GAAAvvD,QACAqrB,SAAAy3C,EACArS,iBAAAn1D,KAAAm1D,iBACA4O,QAAA,OACKx5D,KAAA,SAAAq5D,GACLzpB,EAAAypB,OACAzpB,EAAAmkB,SAAAnkB,EAAAypB,KAAAtF,eAGAiJ,GAAAl+D,QAAAC,YAAArE,GAEA,OAAAsiE,GAAAh9D,KAAA,WACA,MAAAvK,MAAAiiE,sBAAAnlD,EAAAolD,EAAA/+C,EAAAg3B,IACIxvC,KAAA3K,OAAAuK,KAAA,SAAA4vC,GAKJ,MAJAn6C,MAAA4kE,cAAA9nD,EAAAqG,EAAAu4C,EAAAvhB,GACA,UAAA35B,IACA25B,EAAA4f,aAAA,GAEA,GAAApG,IAAAiG,EAAAh5D,KAAAimE,EAAA1sB,IACIxvC,KAAA3K,SAGJ20D,KAEAsF,GAAA,WACA,QAAAA,GAAAC,EAAAhiD,EAAA4E,GACA9c,KAAAk6D,aACAl6D,KAAAkY,OACAlY,KAAA8c,OACA9c,KAAAynE,YAAA,KACAznE,KAAA0nE,MAAA,EA8CA,MA5CAzN,GAAAz4D,WACAggB,KAAA,SAAAF,GACA,IAAAthB,KAAA0nE,KAAA,CAGA,GAAAC,GAAA3nE,KAAAkY,KAAA0vD,YACAtmD,GAAAE,KAAA,aACAxhB,KAAAk6D,WACA,OACAyN,IAEA3nE,KAAA0nE,MAAA,IAEA1N,cAAA,SAAAlvB,EAAA+pB,EAAAgT,EAAAv0B,GAEA,GADAlwC,EAAApD,KAAAkY,KAAA6hD,aACA/5D,KAAAynE,YACA,MAAAznE,MAAAynE,WAQA,QANAxL,GAAAj8D,KAAAkY,KACA4vD,EAAAz+D,QAAAC,UACAy+D,EAAA/nE,KAAA8c,KAAA3b,IAAA,aACA6mE,EAAAhoE,KAAA8c,KAAA3b,IAAA,cAAA0zD,EACAoT,EAAAF,EAAA5jD,UACA+jD,EAAAnnE,OAAA2D,OAAA,MACArE,EAAA,EAAAe,EAAA6mE,EAAA/iE,OAA2C7E,EAAAe,IAAOf,EAClDynE,IAAAv9D,KAAA,SAAAlC,GACA,GAAA8/D,GAAAJ,EAAA5mE,IAAAkH,GACAuvC,EAAA,GAAAuhB,GACA,OAAAruB,GAAA4M,gBAAAywB,EAAA70B,EAAA00B,EAAApwB,GAAArtC,KAAA,WACA29D,EAAA7/D,GAAAuvC,EAAAxqB,QACAy6C,EAAAvO,gBAAA1hB,EAAA2hB,eACM,SAAA7uD,GACNnI,EAAA,wBAAA8F,EAAA,qBACA,IAAAuvC,GAAA,GAAAuhB,GACA+O,GAAA7/D,GAAAuvC,EAAAxqB,WAEKziB,KAAA3K,KAAAioE,EAAA5nE,IAKL,OAHAL,MAAAynE,YAAAK,EAAAv9D,KAAA,WACA0xD,EAAAiM,yBAEAloE,KAAAynE,cAGAxN,KAEAd,GAAA,WAGA,QAAAiP,GAAAC,GAGA,OAFA5mD,MACA0mB,EAAAkgC,EAAAlgC,QAAAqxB,EAAA6O,EAAA7O,UACAn5D,EAAA,EAAAmG,EAAA6hE,EAAAnjE,OAAoC7E,EAAAmG,EAAQnG,IAC5C,OAAA8nC,EAAA9nC,IACA,IAAA2R,GAAAsF,wBACA,IAAAtF,GAAAuF,6BACA,IAAAvF,GAAAmF,sBACA,GAAA21B,GAAA0sB,EAAAn5D,GAAA,EACAysC,GAAA+qB,QACAp2C,EAAA5b,KAAAinC,EAAApmC,KAAAa,QAKA,MAAAka,GAEA,QAAA03C,GAAA3hB,EAAA8wB,EAAA5xB,GACA12C,KAAAsoE,iBACAtoE,KAAAmoC,WACAnoC,KAAAw5D,aACAx5D,KAAAu5D,aAAAx4D,OAAA2D,OAAA,MACA1E,KAAAuoE,aAAA,EACAvoE,KAAA02C,YACA12C,KAAAw3C,SA1BA,GAAAgxB,GAAA,IACAC,EAAAD,EAAA,CA4FA,OAjEArP,GAAA33D,WACA0D,aACA,MAAAlF,MAAAw5D,UAAAt0D,QAEA2yC,kBACA,MAAA73C,MAAAuoE,aAAAvoE,KAAAkF,QAEAmyD,MAAA,SAAAnyC,EAAAnG,GACA/e,KAAAmoC,QAAAtiC,KAAAqf,GACAllB,KAAAw5D,UAAA3zD,KAAAkZ,GACA/e,KAAAsoE,iBACAtoE,KAAAmoC,QAAAjjC,QAAAsjE,EACAxoE,KAAA0oE,QACK1oE,KAAAmoC,QAAAjjC,QAAAujE,IAAAvjD,IAAAlT,EAAAW,SAAAuS,IAAAlT,EAAAgC,UACLhU,KAAA0oE,UAIAvQ,cAAA,SAAAlmD,GACAA,IAAAjS,MAAAu5D,eAGAv5D,KAAAu5D,aAAAtnD,IAAA,EACAjS,KAAAq3D,MAAArlD,EAAAC,kBAEAqnD,gBAAA,SAAAC,GACA,OAAAlxD,KAAAkxD,GACAv5D,KAAAm4D,cAAA9vD,IAGAsgE,UAAA,SAAAC,GACAnvD,EAAAiD,UAAA1c,KAAAu5D,aAAAqP,EAAArP,aACA,QAAAl5D,GAAA,EAAAmG,EAAAoiE,EAAA1jE,OAAsC7E,EAAAmG,EAAQnG,IAC9CL,KAAAq3D,MAAAuR,EAAAzgC,QAAA9nC,GAAAuoE,EAAApP,UAAAn5D,KAGA+sB,MAAA,WACA,OACA+a,QAAAnoC,KAAAmoC,QACAqxB,UAAAx5D,KAAAw5D,UACAt0D,OAAAlF,KAAAkF,SAGAwjE,MAAA,SAAAxf,GACA,WAAAlpD,KAAAw3C,SACA,GAAAqxB,KAAAC,SAAA9oE,KAEA,IAAAyhB,GAAA2mD,EAAApoE,MACAkF,EAAAlF,KAAAkF,MACAlF,MAAAuoE,cAAArjE,EACAlF,KAAAsoE,eAAA9mD,KAAA,mBACAo2B,cACAzP,QAAAnoC,KAAAmoC,QACAqxB,UAAAx5D,KAAAw5D,UACAtQ,YACAhkD,UAEAwxC,UAAA12C,KAAA02C,UACAc,OAAAx3C,KAAAw3C,QACI/1B,GACJzhB,KAAAu5D,aAAAx4D,OAAA2D,OAAA,MACA1E,KAAAmoC,QAAAjjC,OAAA,EACAlF,KAAAw5D,UAAAt0D,OAAA,IAGAi0D,KAEA0D,GAAA,WACA,QAAAA,GAAAhG,GACA72D,KAAAgiC,MAAA60B,EACA72D,KAAA+oE,cAkBA,MAhBAlM,GAAAr7D,WACAkR,KAAA,WACA,GAAAs2D,GAAAhpE,KAAAgiC,KACAhiC,MAAA+oE,WAAAljE,KAAA7F,KAAAgiC,OACAhiC,KAAAgiC,MAAAgnC,EAAAlqD,SAEAnM,QAAA,WACA,GAAAs2D,GAAAjpE,KAAA+oE,WAAAp9B,KACAs9B,KACAjpE,KAAAgiC,MAAAinC,IAGAr2D,UAAA,SAAAmM,GACA/e,KAAAgiC,MAAA48B,IAAAnlD,EAAA7G,UAAA5S,KAAAgiC,MAAA48B,IAAA7/C,KAGA89C,KAEAqE,GAAA,WACA,QAAAA,KACAlhE,KAAA4+D,IAAA,GAAAtlC,cAAA9f,GACAxZ,KAAA45D,SAAA,KACA55D,KAAAo9D,SAAA,EACAp9D,KAAAkY,KAAA,KACAlY,KAAAs8C,WAAA7wC,EACAzL,KAAA6+D,WAAArlD,EAAAtW,QACAlD,KAAA8+D,eAAAtlD,EAAAtW,QACAlD,KAAA0gE,YAAA,EACA1gE,KAAA2gE,YAAA,EACA3gE,KAAAuhE,QAAA,EACAvhE,KAAAw+D,WAAA,EACAx+D,KAAAy+D,SAAA,EAiFA,MA/EAyC,GAAA1/D,WACAkT,cAAA,SAAAmG,EAAAf,EAAArZ,EAAAE,EAAAoC,EAAAmnD,GACA,GAAA1pD,GAAAR,KAAA6+D,UACAr+D,GAAA,GAAAqa,EACAra,EAAA,GAAAsZ,EACAtZ,EAAA,GAAAC,EACAD,EAAA,GAAAG,EACAH,EAAA,GAAAuC,EACAvC,EAAA,GAAA0pD,GAEA0X,kBAAA,SAAA/mD,EAAAf,EAAArZ,EAAAE,EAAAoC,EAAAmnD,GACA,GAAA1pD,GAAAR,KAAA8+D,cACAt+D,GAAA,GAAAqa,EACAra,EAAA,GAAAsZ,EACAtZ,EAAA,GAAAC,EACAD,EAAA,GAAAG,EACAH,EAAA,GAAAuC,EACAvC,EAAA,GAAA0pD,GAEA6W,oBAAA,SAAAj6D,EAAAmY,GACA,GAAAze,GAAAR,KAAA6+D,UACAr+D,GAAA,GAAAA,EAAA,GAAAsG,EAAAtG,EAAA,GAAAye,EAAAze,EAAA,GACAA,EAAA,GAAAA,EAAA,GAAAsG,EAAAtG,EAAA,GAAAye,EAAAze,EAAA,IAEAihE,wBAAA,SAAA36D,EAAAmY,GACA,GAAAze,GAAAR,KAAA8+D,cACAt+D,GAAA,GAAAA,EAAA,GAAAsG,EAAAtG,EAAA,GAAAye,EAAAze,EAAA,GACAA,EAAA,GAAAA,EAAA,GAAAsG,EAAAtG,EAAA,GAAAye,EAAAze,EAAA,IAEAmhE,0BAAA,SAAA9mD,EAAAf,EAAArZ,EAAAE,EAAAoC,EAAAmnD,GACA,GAAAhyC,GAAAlY,KAAAkY,IACA,KAAAA,EACA,WAEA,IAAA1X,GAAAR,KAAA8+D,cACA,IAAAjkD,IAAAra,EAAA,IAAAsZ,IAAAtZ,EAAA,IAAAC,IAAAD,EAAA,IAAAG,IAAAH,EAAA,GACA,WAEA,IAAA0oE,GAAAnmE,EAAAvC,EAAA,GAAA2oE,EAAAjf,EAAA1pD,EAAA,EACA,IAAA0X,EAAAomD,UAAA,IAAA4K,IAAAhxD,EAAAomD,UAAA,IAAA6K,EACA,WAEA,IAAAtI,GAAAC,EAAAsI,EAAAvuD,EAAAla,EAAAmZ,EAAArZ,CAQA,OAPAyX,GAAAomD,UACAuC,GAAAsI,EAAA1oE,EAAA2oE,EACAtI,EAAAqI,EAAAtuD,EAAAuuD,IAEAvI,EAAAqI,EAAAvoE,EAAAyoE,EACAtI,GAAAoI,EAAApvD,EAAAsvD,IAGA1qD,MAAAmiD,EACAliD,OAAAmiD,EACApgE,MAAAwX,EAAAomD,SAAAwC,EAAAD,IAGAwI,iBAAA,SAAAzK,GACA,GAAAL,IACAv+D,KAAAo9D,SAAAp9D,KAAAw+D,WACA,EACA,EACAx+D,KAAAo9D,SACA,EACAp9D,KAAAy+D,SAEA,OAAAhlD,GAAA7G,UAAAgsD,EAAAnlD,EAAA7G,UAAA5S,KAAA6+D,WAAAN,KAEAmD,eAAA,WACA1hE,KAAAyhE,wBAAA,GAAAzhE,KAAAuhE,SACAvhE,KAAA6+D,WAAA7+D,KAAA8+D,eAAA57D,SAEA4b,MAAA,WACA,GAAAA,GAAA/d,OAAA2D,OAAA1E,KAIA,OAHA8e,GAAA+/C,WAAA7+D,KAAA6+D,WAAA37D,QACA4b,EAAAggD,eAAA9+D,KAAA8+D,eAAA57D,QACA4b,EAAAw9B,WAAAt8C,KAAAs8C,WAAAp5C,QACA4b,IAGAoiD,KAEApE,GAAA,WACA,QAAAA,KACA98D,KAAA4+D,IAAA,GAAAtlC,cAAA9f,GACAxZ,KAAAkY,KAAA,KACAlY,KAAAw6D,kBAAA9uD,EAAAC,KACA3L,KAAAy9D,eAAAhpC,EAAAkD,WAAAC,KACA53B,KAAA09D,iBAAAjpC,EAAAkD,WAAAC,KAOA,MALAklC,GAAAt7D,WACAsd,MAAA,WACA,MAAA/d,QAAA2D,OAAA1E,QAGA88D,KAEAE,GAAA,WA0XA,QAAAA,GAAAr1C,EAAAxE,EAAAq1C,GACAx4D,KAAAspE,MAAAC,IACAvpE,KAAAimC,OAAA,GAAAxF,GAAA,GAAAuD,GAAArc,EAAA3nB,KAAAspE,QAAA,EAAAnmD,GACAnjB,KAAAw4D,eACAx4D,KAAAwpE,oBA7XA,GAAAD,GAAAhlE,EAAA,SAAAilB,GACAA,EAAA,GACA1e,GAAAkH,EAAAE,aACAu3D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,GACA1e,GAAAkH,EAAAG,WACAs3D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,GACA1e,GAAAkH,EAAAI,YACAq3D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,GACA1e,GAAAkH,EAAAK,cACAo3D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,GACA1e,GAAAkH,EAAAM,QACAm3D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,IACA1e,GAAAkH,EAAAO,mBACAk3D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,GACA1e,GAAAkH,EAAAQ,YACAi3D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,IACA1e,GAAAkH,EAAAS,UACAg3D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,GACA1e,GAAAkH,EAAAU,KACA+2D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,GACA1e,GAAAkH,EAAAW,QACA82D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,IACA1e,GAAAkH,EAAAY,UACA62D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,GACA1e,GAAAkH,EAAAa,OACA42D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,GACA1e,GAAAkH,EAAAc,OACA22D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,GACA1e,GAAAkH,EAAAe,QACA02D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,GACA1e,GAAAkH,EAAAgB,SACAy2D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,GACA1e,GAAAkH,EAAAiB,SACAw2D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,GACA1e,GAAAkH,EAAAkB,UACAu2D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,IACA1e,GAAAkH,EAAAmB,UACAs2D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,GACA1e,GAAAkH,EAAAoB,OACAq2D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,GACA1e,GAAAkH,EAAAqB,YACAo2D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,GACA1e,GAAAkH,EAAAsB,KACAm2D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,GACA1e,GAAAkH,EAAAsB,KACAm2D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,OACA1e,GAAAkH,EAAAuB,OACAk2D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,GACA1e,GAAAkH,EAAAwB,WACAi2D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,OACA1e,GAAAkH,EAAAyB,aACAg2D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,GACA1e,GAAAkH,EAAA0B,gBACA+1D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,OACA1e,GAAAkH,EAAA2B,kBACA81D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,GACA1e,GAAAkH,EAAA4B,QACA61D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,GACA1e,GAAAkH,EAAA6B,KACA41D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,OACA1e,GAAAkH,EAAA8B,OACA21D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,IACA1e,GAAAkH,EAAA+B,UACA01D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,IACA1e,GAAAkH,EAAAgC,QACAy1D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,IACA1e,GAAAkH,EAAAiC,eACAw1D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,IACA1e,GAAAkH,EAAAkC,eACAu1D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,IACA1e,GAAAkH,EAAAmC,UACAs1D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,IACA1e,GAAAkH,EAAAoC,WACAq1D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,IACA1e,GAAAkH,EAAAqC,QACAo1D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,IACA1e,GAAAkH,EAAAsC,qBACAm1D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,IACA1e,GAAAkH,EAAAuC,YACAk1D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,IACA1e,GAAAkH,EAAAwC,SACAi1D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,IACA1e,GAAAkH,EAAAyC,mBACAg1D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,IACA1e,GAAAkH,EAAA0C,cACA+0D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,OACA1e,GAAAkH,EAAA2C,SACA80D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,IACA1e,GAAAkH,EAAA4C,SACA60D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,IACA1e,GAAAkH,EAAA6C,eACA40D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,MACA1e,GAAAkH,EAAA8C,iBACA20D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,MACA1e,GAAAkH,EAAA+C,2BACA00D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,IACA1e,GAAAkH,EAAAgD,aACAy0D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,IACA1e,GAAAkH,EAAAiD,sBACAw0D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,IACA1e,GAAAkH,EAAAkD,oBACAu0D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,IACA1e,GAAAkH,EAAAmD,kBACAs0D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,IACA1e,GAAAkH,EAAAoD,eACAq0D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,KACA1e,GAAAkH,EAAAqD,gBACAo0D,QAAA,GACAC,cAAA,GAEAlgD,EAAA,IACA1e,GAAAkH,EAAAsD,aACAm0D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,KACA1e,GAAAkH,EAAAuD,cACAk0D,QAAA,GACAC,cAAA,GAEAlgD,EAAA,GACA1e,GAAAkH,EAAAwD,cACAi0D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,GACA1e,GAAAkH,EAAAyD,YACAg0D,QAAA,EACAC,cAAA,GAEAlgD,EAAA,IACA1e,GAAAkH,EAAA0D,kBACA+zD,QAAA,EACAC,cAAA,GAEAlgD,EAAA,IACA1e,GAAAkH,EAAA2D,gBACA8zD,QAAA,EACAC,cAAA,GAEAlgD,EAAA,GACA1e,GAAAkH,EAAA4D,mBACA6zD,QAAA,EACAC,cAAA,GAEAlgD,EAAA,GACA1e,GAAAkH,EAAA6D,iBACA4zD,QAAA,EACAC,cAAA,GAEAlgD,EAAA,IACA1e,GAAAkH,EAAA8D,YACA2zD,QAAA,EACAC,cAAA,GAEAlgD,EAAA,IACA1e,GAAAkH,EAAA+D,iBACA0zD,QAAA,EACAC,cAAA,GAEAlgD,EAAA,IACA1e,GAAAkH,EAAAgE,eACAyzD,QAAA,EACAC,cAAA,GAEAlgD,EAAA,IACA1e,GAAAkH,EAAAiE,eACAwzD,QAAA,EACAC,cAAA,GAEAlgD,EAAA,IACA1e,GAAAkH,EAAAkE,aACAuzD,QAAA,EACAC,cAAA,GAEAlgD,EAAA,IACA1e,GAAAkH,EAAAmE,UACAszD,QAAA,EACAC,cAAA,GAEAlgD,EAAA,IACA1e,GAAAkH,EAAAoE,eACAqzD,QAAA,EACAC,cAAA,GAEAlgD,EAAA,KACA1e,GAAAkH,EAAAqE,mBACAozD,QAAA,EACAC,cAAA,GAEAlgD,EAAA,KACA1e,GAAAkH,EAAAsE,wBACAmzD,QAAA,EACAC,cAAA,GAEAlgD,EAAA,KACA1e,GAAAkH,EAAAuE,iBACAkzD,QAAA,EACAC,cAAA,GAEAlgD,EAAA,IACA1e,GAAAkH,EAAAwE,YACAizD,QAAA,EACAC,cAAA,GAEAlgD,EAAA,IACA1e,GAAAkH,EAAAyE,UACAgzD,QAAA,EACAC,cAAA,GAEAlgD,EAAA,QACAA,EAAA,QACAA,EAAA,UACAA,EAAA,QACAA,EAAA,SACAA,EAAA,UACAA,EAAA,WACAA,EAAA,QACAA,EAAA,SACAA,EAAA,WAkFA,OA1EAwzC,GAAAx7D,WACAs8D,uBACA,MAAA99D,MAAAw4D,aAAAuQ,WAAA7jE,QAEAutC,KAAA,SAAAtE,GAEA,IADA,GAAApvB,GAAAovB,EAAApvB,OACA,CACA,GAAA3a,GAAApE,KAAAimC,OAAAjF,QACA,IAAA/e,EAAA7d,GAAA,CACA,GAAA8d,GAAA9d,EAAA8d,IACAynD,EAAA3pE,KAAAspE,MAAApnD,EACA,KAAAynD,EAAA,CACApnE,EAAA,oBAAA2f,EAAA,IACA,UAEA,GAAAgD,GAAAykD,EAAA7+D,GACA2+D,EAAAE,EAAAF,QACAG,EAAA,OAAA7qD,IAAA7Z,OAAA,CACA,IAAAykE,EAAAD,aAsBME,EAAAH,GACNxnE,EAAA,WAAAijB,EAAA,iBAAAukD,EAAA,wBAAAG,EAAA,cAvBA,CACA,GAAAA,IAAAH,EAAA,CAEA,IADA,GAAAD,GAAAxpE,KAAAwpE,iBACAI,EAAAH,GACAD,EAAA3jE,KAAAkZ,EAAA6I,SACAgiD,GAEA,MAAAA,EAAAH,GAAA,IAAAD,EAAAtkE,QACA,OAAA6Z,IACAA,MAEAA,EAAAtC,QAAA+sD,EAAA79B,OACAi+B,IAGA,GAAAA,EAAAH,EAAA,CACAlnE,EAAA,oBAAA2iB,EAAA,cAAAukD,EAAA,uBAAAG,EAAA,UACA,OAAA7qD,IACAA,EAAA7Z,OAAA,EAEA,WAQA,MAHAlF,MAAA6pE,kBAAA3kD,EAAAnG,GACAovB,EAAAjpB,KACAipB,EAAApvB,QACA,EAEA,GAAA8C,EAAAzd,GACA,QAEA,QAAAA,IACA,OAAA2a,IACAA,MAEAA,EAAAlZ,KAAAzB,GACAhB,EAAA2b,EAAA7Z,QAAA,4BAIA2kE,kBAAA,SAAA3kD,EAAAnG,GACA,SAAAmG,GACA,IAAAlT,GAAAU,KACA1S,KAAAw4D,aAAA9lD,MACA,MACA,KAAAV,GAAAW,QACA3S,KAAAw4D,aAAA7lD,SACA,MACA,KAAAX,GAAAY,UACA5S,KAAAw4D,aAAA5lD,UAAAmM,MAKAi+C,KAEA6L,GAAA,WACA,QAAAiB,GAAAC,EAAA/Q,EAAA9zC,GAEA,OADA8c,GAAA+nC,EACA1pE,EAAA,EAAAmG,EAAAwyD,EAAA9zD,OAAA,EAA0C7E,EAAAmG,EAAQnG,IAAA,CAClD,GAAAgG,GAAA2yD,EAAA34D,EACA2hC,KAAA37B,KAAA27B,EAAA37B,OAEA27B,EAAAg3B,IAAA9zD,OAAA,IAAAggB,EAEA,QAAA8kD,GAAAC,EAAAh0C,EAAAkS,EAAAqxB,GAEA,OADA0Q,GAAAD,EAAA,EACA5pE,EAAA,EAAiBA,EAAA41B,EAAW51B,IAAA,CAC5B,GAAAysC,GAAA0sB,EAAA0Q,EAAA,EAAA7pE,GACA8pE,EAAA,IAAAr9B,EAAA5nC,QAAA4nC,EAAA,EACA,KAAAq9B,GAAA,IAAAA,EAAAzrD,OAAA,IAAAyrD,EAAAxrD,QAAAwrD,EAAAzjE,KAAAxB,SAAA,IAAAilE,EAAAzjE,KAAAxB,QAAA,IAAAilE,EAAAzjE,KAAA,IAIA,KAHAyhC,GAAA+hC,EAAA,EAAA7pE,GAAA2R,EAAA0F,yBAKA,MAAAue,GAAA51B,EAqRA,QAAAwoE,MAnRA,GAAAuB,KA4SA,OA3SAN,GAAAM,GACAp4D,EAAAU,KACAV,EAAAY,UACAZ,EAAAsF,wBACAtF,EAAAW,SACA,SAAA03D,GAYA,IAXA,GAAAC,GAAA,GACAC,EAAA,IACAC,EAAA,IACAC,EAAA,EACAtiC,EAAAkiC,EAAAliC,QAAAqxB,EAAA6Q,EAAA7Q,UACAkR,EAAAL,EAAAM,MACAV,EAAAS,EAAA,EACAE,EAAAF,EAAA,EACAG,EAAAH,EAAA,EACArqE,EAAA4pE,EAAA,EACAzjE,EAAA2hC,EAAAjjC,OACA7E,EAAA,EAAAmG,GACA2hC,EAAA9nC,KAAA2R,EAAAU,MAAAy1B,EAAA9nC,EAAA,KAAA2R,EAAAY,WAAAu1B,EAAA9nC,EAAA,KAAA2R,EAAAsF,yBAAA6wB,EAAA9nC,EAAA,KAAA2R,EAAAW,SAGAtS,GAAA,CAEA,IAAA41B,GAAAxwB,KAAAC,KAAArF,EAAA4pE,GAAA,EAAAM,EACA,IAAAt0C,EAAAq0C,EACA,MAAAjqE,EAEA,IAGAyzB,GAHAg3C,EAAA,EACA1nD,KAAA2nD,EAAA,EACAC,EAAAP,EAAAQ,EAAAR,CAEA,KAAA32C,EAAA,EAAaA,EAAAmC,EAAWnC,IAAA,CACxB,GAAAlhB,GAAA4mD,EAAAoR,GAAA92C,GAAA,IACA7oB,EAAAuuD,EAAAqR,GAAA/2C,GAAA,MACAk3C,GAAA//D,EAAAyT,MAAA8rD,IACAM,EAAArlE,KAAA+U,IAAAswD,EAAAE,GACAC,GAAAF,EAAA,EAAAN,EACAO,EAAA,EACAD,EAAA,GAEA3nD,EAAAvd,MACA+M,YACA9L,EAAAkkE,EACA/rD,EAAAgsD,EACAhhB,EAAAh/C,EAAAyT,MACA0tC,EAAAnhD,EAAA0T,SAEAqsD,GAAA//D,EAAAyT,MAAA,EAAA+rD,EACAM,EAAAtlE,KAAA+U,IAAAuwD,EAAA9/D,EAAA0T,QAEA,GAAAusD,GAAAzlE,KAAA+U,IAAAswD,EAAAE,GAAAP,EACAU,EAAAF,EAAAF,EAAAN,EACAjT,EAAA,GAAAzxD,YAAAmlE,EAAAC,EAAA,GACAh9C,EAAA+8C,GAAA,CACA,KAAAp3C,EAAA,EAAaA,EAAAmC,EAAWnC,IAAA,CACxB,GAAAptB,GAAA8yD,EAAAqR,GAAA/2C,GAAA,OAAAptB,KACA0kE,EAAAhoD,EAAA0Q,GAAAm2B,GAAA,EACA9G,EAAA,EACAj8C,EAAAkc,EAAA0Q,GAAAhtB,EAAAsc,EAAA0Q,GAAA7U,EAAAisD,GAAA,CACA1T,GAAA7wD,IAAAD,EAAAd,SAAA,EAAAwlE,GAAAlkE,EAAAinB,EACA,QAAA1D,GAAA,EAAAoB,EAAAzI,EAAA0Q,GAAAs4B,EAAiC3hC,EAAAoB,EAAQpB,IACzC+sC,EAAA7wD,IAAAD,EAAAd,SAAAu9C,IAAAioB,GAAAlkE,GACAi8C,GAAAioB,EACAlkE,GAAAinB,CAGA,KADAqpC,EAAA7wD,IAAAD,EAAAd,SAAAu9C,EAAAioB,EAAAjoB,GAAAj8C,GACAA,GAAA,GACAR,EAAAQ,EAAA,GAAAR,EAAAQ,GACAR,EAAAQ,EAAA,GAAAR,EAAAQ,EAAA,GACAR,EAAAQ,EAAA,GAAAR,EAAAQ,EAAA,GACAR,EAAAQ,EAAA,GAAAR,EAAAQ,EAAA,GACAR,EAAAQ,EAAAkkE,GAAA1kE,EAAAQ,EAAAkkE,EAAA,GACA1kE,EAAAQ,EAAAkkE,EAAA,GAAA1kE,EAAAQ,EAAAkkE,EAAA,GACA1kE,EAAAQ,EAAAkkE,EAAA,GAAA1kE,EAAAQ,EAAAkkE,EAAA,GACA1kE,EAAAQ,EAAAkkE,EAAA,GAAA1kE,EAAAQ,EAAAkkE,EAAA,GACAlkE,GAAAinB,EAaA,MAVAga,GAAAuG,OAAAu7B,EAAA,EAAAh0C,EAAAjkB,EAAAuF,8BACAiiD,EAAA9qB,OAAAu7B,EAAA,EAAAh0C,IAEAvX,MAAAwsD,EACAvsD,OAAAwsD,EACAE,KAAAh/D,EAAAG,WACA9F,KAAA8wD,GAEAp0C,IAEA6mD,EAAA,IAEAH,EAAAM,GACAp4D,EAAAU,KACAV,EAAAY,UACAZ,EAAAmF,sBACAnF,EAAAW,SACA,SAAA03D,GAWA,IAVA,GAAAiB,GAAA,GACAC,EAAA,IACAC,EAAA,IACArjC,EAAAkiC,EAAAliC,QAAAqxB,EAAA6Q,EAAA7Q,UACAkR,EAAAL,EAAAM,MACAV,EAAAS,EAAA,EACAE,EAAAF,EAAA,EACAR,EAAAQ,EAAA,EACArqE,EAAA4pE,EAAA,EACAzjE,EAAA2hC,EAAAjjC,OACA7E,EAAA,EAAAmG,GACA2hC,EAAA9nC,KAAA2R,EAAAU,MAAAy1B,EAAA9nC,EAAA,KAAA2R,EAAAY,WAAAu1B,EAAA9nC,EAAA,KAAA2R,EAAAmF,uBAAAgxB,EAAA9nC,EAAA,KAAA2R,EAAAW,SAGAtS,GAAA,CAEA,IAAA41B,IAAA51B,EAAA4pE,GAAA,CAEA,KADAh0C,EAAA+zC,EAAAC,EAAAh0C,EAAAkS,EAAAqxB,IACA8R,EACA,MAAAjrE,EAEA,IAAAyzB,GAEA23C,EAAAC,EADAC,GAAA,EAEAC,EAAApS,EAAA0Q,GAAA,EACA,QAAA1Q,EAAAoR,GAAA,QAAApR,EAAAoR,GAAA,IACAe,GAAA,CACA,IAAAE,GAAArS,EAAAoR,GAAA,GACAkB,EAAAtS,EAAAoR,GAAA,EACAa,GAAAb,EAAA,CACA,IAAAmB,GAAA7B,EAAA,CACA,KAAAp2C,EAAA,EAAcA,EAAAmC,EAAWnC,IAAA23C,GAAA,EAAAM,GAAA,EAEzB,GADAL,EAAAlS,EAAAiS,GACAjS,EAAAuS,GAAA,KAAAH,GAAAF,EAAA,KAAAG,GAAA,IAAAH,EAAA,QAAAA,EAAA,IAAAA,EAAA,KAAAI,EAAA,CACAh4C,EAAAw3C,EACAK,GAAA,EAEA11C,EAAAnC,CAEA,QAIA,GAAA63C,EAAA,CACA11C,EAAAxwB,KAAAC,IAAAuwB,EAAAu1C,EACA,IAAAQ,GAAA,GAAA1yC,cAAA,EAAArD,EAEA,KADAw1C,EAAAb,EACA92C,EAAA,EAAcA,EAAAmC,EAAWnC,IAAA23C,GAAA,EACzBC,EAAAlS,EAAAiS,GACAO,EAAAl4C,GAAA,GAAA43C,EAAA,GACAM,EAAA,GAAAl4C,GAAA,IAAA43C,EAAA,EAEAvjC,GAAAuG,OAAAu7B,EAAA,EAAAh0C,EAAAjkB,EAAAyF,6BACA+hD,EAAA9qB,OAAAu7B,EAAA,EAAAh0C,GACA21C,EACAC,EACAC,EACAE,QAEG,CACH/1C,EAAAxwB,KAAAC,IAAAuwB,EAAAs1C,EACA,IAAAU,KACA,KAAAn4C,EAAA,EAAcA,EAAAmC,EAAWnC,IAAA,CACzB43C,EAAAlS,EAAAoR,GAAA92C,GAAA,GACA,IAAAo4C,GAAA1S,EAAA0Q,GAAAp2C,GAAA,MACAm4C,GAAApmE,MACAa,KAAAwlE,EAAAxlE,KACAgY,MAAAwtD,EAAAxtD,MACAC,OAAAutD,EAAAvtD,OACA/L,UAAA84D,IAGAvjC,EAAAuG,OAAAu7B,EAAA,EAAAh0C,EAAAjkB,EAAAoF,4BACAoiD,EAAA9qB,OAAAu7B,EAAA,EAAAh0C,GAAAg2C,IAEA,MAAAhC,GAAA,IAEAH,EAAAM,GACAp4D,EAAAU,KACAV,EAAAY,UACAZ,EAAAqF,kBACArF,EAAAW,SACA,SAAA03D,GACA,GAAA8B,GAAA,EACAC,EAAA,IACAjkC,EAAAkiC,EAAAliC,QAAAqxB,EAAA6Q,EAAA7Q,UACAkR,EAAAL,EAAAM,MACAV,EAAAS,EAAA,EACAE,EAAAF,EAAA,EACA2B,EAAA3B,EAAA,EACA4B,EAAA5B,CACA,QAAAlR,EAAAoR,GAAA,QAAApR,EAAAoR,GAAA,GACA,MAAA0B,GAAA,CAOA,KALA,GAAAC,GAAA/S,EAAA6S,GAAA,GACAR,EAAArS,EAAAoR,GAAA,GACAkB,EAAAtS,EAAAoR,GAAA,GACAvqE,EAAA4pE,EAAA,EACAzjE,EAAA2hC,EAAAjjC,OACA7E,EAAA,EAAAmG,GACA2hC,EAAA9nC,KAAA2R,EAAAU,MAAAy1B,EAAA9nC,EAAA,KAAA2R,EAAAY,WAAAu1B,EAAA9nC,EAAA,KAAA2R,EAAAqF,mBAAA8wB,EAAA9nC,EAAA,KAAA2R,EAAAW,SAGA6mD,EAAAn5D,EAAA,QAAAwrE,GAAA,IAAArS,EAAAn5D,EAAA,WAAAm5D,EAAAn5D,EAAA,OAAAm5D,EAAAn5D,EAAA,QAAAyrE,GAGAtS,EAAAn5D,EAAA,QAAAksE,GAGAlsE,GAAA,CAEA,IAAA41B,GAAAxwB,KAAAC,KAAArF,EAAA4pE,GAAA,EAAAmC,EACA,IAAAn2C,EAAAk2C,EACA,MAAA9rE,EAIA,QAFA2rE,GAAA,GAAA1yC,cAAA,EAAArD,GACAw1C,EAAAb,EACA92C,EAAA,EAAiBA,EAAAmC,EAAWnC,IAAA23C,GAAA,GAC5B,GAAAC,GAAAlS,EAAAiS,EACAO,GAAAl4C,GAAA,GAAA43C,EAAA,GACAM,EAAA,GAAAl4C,GAAA,IAAA43C,EAAA,GAEA,GAAA3sD,IACAwtD,EACAV,EACAC,EACAE,EAIA,OAFA7jC,GAAAuG,OAAAu7B,EAAA,EAAAh0C,EAAAjkB,EAAAwF,yBACAgiD,EAAA9qB,OAAAu7B,EAAA,EAAAh0C,EAAAlX,GACAkrD,EAAA,IAEAH,EAAAM,GACAp4D,EAAA+B,UACA/B,EAAAqC,QACArC,EAAA0C,cACA1C,EAAA4C,SACA5C,EAAAgC,SACA,SAAAq2D,GAcA,IAbA,GAAAmC,GAAA,EACAC,EAAA,IACAtkC,EAAAkiC,EAAAliC,QAAAqxB,EAAA6Q,EAAA7Q,UACAkR,EAAAL,EAAAM,MACA+B,EAAAhC,EAAA,EACAiC,EAAAjC,EAAA,EACAkC,EAAAlC,EAAA,EACAmC,EAAAnC,EAAA,EACAoC,EAAApC,EACAqC,EAAAvT,EAAAmT,GAAA,GACAK,EAAAxT,EAAAmT,GAAA,GACAtsE,EAAAqsE,EAAA,EACAlmE,EAAA2hC,EAAAjjC,OACA7E,EAAA,EAAAmG,GACA2hC,EAAA9nC,KAAA2R,EAAA+B,WAAAo0B,EAAA9nC,EAAA,KAAA2R,EAAAqC,SAAA8zB,EAAA9nC,EAAA,KAAA2R,EAAA0C,eAAAyzB,EAAA9nC,EAAA,KAAA2R,EAAA4C,UAAAuzB,EAAA9nC,EAAA,KAAA2R,EAAAgC,SAGAwlD,EAAAn5D,EAAA,QAAA0sE,GAAAvT,EAAAn5D,EAAA,QAAA2sE,GAGA3sE,GAAA,CAEA,IAAA41B,GAAAxwB,KAAAC,KAAArF,EAAAqsE,GAAA,EAAAD,EACA,IAAAx2C,EAAAu2C,EACA,MAAAnsE,EAEA,IAAA4sE,GAAAP,CACAA,IAAA,GAAAvkC,EAAAukC,EAAA,KAAAvkC,EAAAwkC,IAAAxkC,EAAAukC,EAAA,KAAAvkC,EAAAykC,IAAAzkC,EAAAukC,EAAA,KAAAvkC,EAAA0kC,IAAA1kC,EAAAukC,EAAA,KAAAvkC,EAAA2kC,IAAAtT,EAAAkT,EAAA,QAAAK,GAAAvT,EAAAkT,EAAA,QAAAM,IACA/2C,IACAg3C,GAAA,EAGA,QADAC,GAAAD,EAAA,EACAn5C,EAAA,EAAiBA,EAAAmC,EAAWnC,IAC5BqU,EAAAuG,OAAAw+B,EAAA,GACA1T,EAAA9qB,OAAAw+B,EAAA,GACAA,GAAA,CAEA,OAAAA,GAAA,IAIArE,EAAArnE,WACAsnE,SAAA,SAAAT,GASA,IARA,GAMArmC,GANAmG,EAAAkgC,EAAAlgC,QAAAqxB,EAAA6O,EAAA7O,UACA6Q,GACAM,MAAA,EACAxiC,UACAqxB,aAGAn5D,EAAA,EAAAmG,EAAA2hC,EAAAjjC,OACA7E,EAAAmG,GACAw7B,MAAAooC,GAAAjiC,EAAA9nC,IACA,kBAAA2hC,IACAqoC,EAAAM,MAAAtqE,EACAA,EAAA2hC,EAAAqoC,GACAroC,MAAA/8B,GACAuB,EAAA6jE,EAAAliC,QAAAjjC,QAEA7E,MAKAwoE,IAEAlpE,GAAAw5D,gBACAx5D,EAAAg1D,qBAIA,SAAAj1D,EAAAC,EAAAO,GAEA,YAEA,IAAA4iB,GAAA5iB,EAAA,GACAitE,EAAAjtE,EAAA,IACA+B,EAAA6gB,EAAA7gB,KACAM,EAAAugB,EAAAvgB,KACAI,EAAAmgB,EAAAngB,MACAkE,EAAAic,EAAAjc,KACAI,EAAA6b,EAAA7b,WACAE,EAAA2b,EAAA3b,WACAqxC,EAAA20B,EAAA30B,kBACA7yB,EAAA,WAOA,QAAAA,KACA3lB,KAAAotE,sBAAA,EA+VA,QAAAC,GAAAC,EAAAC,GACAD,EAAAE,GAAA/nE,KAAAymC,KAAAqhC,EAAAE,MAAAH,EAAAI,OACAJ,EAAAK,GAAAloE,KAAAymC,KAAAqhC,EAAAK,KAAAN,EAAAI,OACAJ,EAAAO,GAAApoE,KAAAymC,KAAAqhC,EAAAO,MAAAR,EAAAS,OACAT,EAAAU,GAAAvoE,KAAAymC,KAAAqhC,EAAAU,KAAAX,EAAAS,OACAT,EAAA5uD,MAAA4uD,EAAAK,GAAAL,EAAAE,GACAF,EAAA3uD,OAAA2uD,EAAAU,GAAAV,EAAAO,GAEA,QAAAK,GAAA7D,EAAA8D,GAKA,OAHAC,GADAb,EAAAlD,EAAAgE,IACA5gD,KACA6gD,EAAA7oE,KAAAymC,MAAAqhC,EAAAK,KAAAL,EAAAgB,QAAAhB,EAAAiB,OACAC,EAAAhpE,KAAAymC,MAAAqhC,EAAAU,KAAAV,EAAAmB,QAAAnB,EAAAoB,OACA76C,EAAA,EAAiBA,EAAA26C,EAAe36C,IAChC,OAAApyB,GAAA,EAAkBA,EAAA4sE,EAAe5sE,IACjC0sE,KACAA,EAAAQ,IAAAnpE,KAAA+U,IAAA+yD,EAAAgB,OAAA7sE,EAAA6rE,EAAAiB,MAAAjB,EAAAE,OACAW,EAAAS,IAAAppE,KAAA+U,IAAA+yD,EAAAmB,OAAA56C,EAAAy5C,EAAAoB,MAAApB,EAAAO,OACAM,EAAAU,IAAArpE,KAAAC,IAAA6nE,EAAAgB,QAAA7sE,EAAA,GAAA6rE,EAAAiB,MAAAjB,EAAAK,MACAQ,EAAAW,IAAAtpE,KAAAC,IAAA6nE,EAAAmB,QAAA56C,EAAA,GAAAy5C,EAAAoB,MAAApB,EAAAU,MACAG,EAAA1vD,MAAA0vD,EAAAU,IAAAV,EAAAQ,IACAR,EAAAzvD,OAAAyvD,EAAAW,IAAAX,EAAAS,IACAT,EAAAD,cACA1gD,EAAA5nB,KAAAuoE,EAGA/D,GAAA58C,OAEA,QADAF,GAAAggD,EAAAyB,KACA3uE,EAAA,EAAAmG,EAAA+mB,EAAuCltB,EAAAmG,EAAQnG,IAE/C,OADAitE,GAAAa,EAAA9tE,GACAurB,EAAA,EAAAwc,EAAA3a,EAAAvoB,OAAqC0mB,EAAAwc,EAAQxc,IAAA,CAC7C,GAAAqjD,KACAb,GAAA3gD,EAAA7B,GACAqjD,EAAAC,KAAAzpE,KAAAymC,KAAAkiC,EAAAQ,IAAAtB,EAAAI,OACAuB,EAAAE,KAAA1pE,KAAAymC,KAAAkiC,EAAAS,IAAAvB,EAAAS,OACAkB,EAAAG,KAAA3pE,KAAAymC,KAAAkiC,EAAAU,IAAAxB,EAAAI,OACAuB,EAAAI,KAAA5pE,KAAAymC,KAAAkiC,EAAAW,IAAAzB,EAAAS,OACAkB,EAAAvwD,MAAAuwD,EAAAG,KAAAH,EAAAC,KACAD,EAAAtwD,OAAAswD,EAAAI,KAAAJ,EAAAE,KACAf,EAAAD,WAAA9tE,GAAA4uE,GAIA,QAAAK,GAAAjF,EAAAiD,EAAA1zD,GACA,GAAA21D,GAAAjC,EAAAkC,sBACAhlE,IAUA,OATA+kE,GAAAE,iCAIAjlE,EAAAklE,IAAAH,EAAAI,eAAA/1D,GAAA81D,IACAllE,EAAAolE,IAAAL,EAAAI,eAAA/1D,GAAAg2D,MAJAplE,EAAAklE,IAAA,GACAllE,EAAAolE,IAAA,IAKAplE,EAAAqlE,KAAAj2D,EAAA,EAAAnU,KAAAC,IAAA6pE,EAAAO,IAAAtlE,EAAAklE,IAAA,GAAAjqE,KAAAC,IAAA6pE,EAAAO,IAAAtlE,EAAAklE,KACAllE,EAAAulE,KAAAn2D,EAAA,EAAAnU,KAAAC,IAAA6pE,EAAAS,IAAAxlE,EAAAolE,IAAA,GAAAnqE,KAAAC,IAAA6pE,EAAAS,IAAAxlE,EAAAolE,KACAplE,EAEA,QAAAylE,GAAA5F,EAAA6F,EAAAC,GACA,GAAAC,GAAA,GAAAD,EAAAT,IACAW,EAAA,GAAAF,EAAAP,IACAU,EAAA,IAAAJ,EAAAK,SACAC,EAAA,GAAAL,EAAAT,KAAAY,EAAA,MACAG,EAAA,GAAAN,EAAAP,KAAAU,EAAA,MACAI,EAAAR,EAAAS,KAAAT,EAAAU,KAAAnrE,KAAAymC,KAAAgkC,EAAAS,KAAAP,GAAA3qE,KAAAiwB,MAAAw6C,EAAAU,KAAAR,GAAA,EACAS,EAAAX,EAAAY,KAAAZ,EAAAa,KAAAtrE,KAAAymC,KAAAgkC,EAAAY,KAAAT,GAAA5qE,KAAAiwB,MAAAw6C,EAAAa,KAAAV,GAAA,EACAW,EAAAN,EAAAG,CACAX,GAAAe,oBACAb,gBACAC,iBACAK,mBACAG,mBACAG,eACAR,yBACAC,2BAGA,QAAAS,GAAA7G,EAAA8G,EAAAhB,GACA,GAWA9vE,GAAAurB,EAAAwlD,EAAAC,EAXAxB,EAAAM,EAAAN,KACAE,EAAAI,EAAAJ,KACAuB,EAAA,GAAAzB,EACA0B,EAAA,GAAAxB,EACAyB,EAAAL,EAAAM,MAAA5B,EACA6B,EAAAP,EAAAQ,MAAA5B,EACA6B,EAAAT,EAAAU,KAAAP,EAAA,GAAAzB,EACAiC,EAAAX,EAAAY,KAAAR,EAAA,GAAAxB,EACAkB,EAAAE,EAAAjB,WAAAe,mBACAe,KACAC,IAEA,KAAArmD,EAAA8lD,EAAgB9lD,EAAAkmD,EAAUlmD,IAC1B,IAAAvrB,EAAAmxE,EAAiBnxE,EAAAuxE,EAAUvxE,IAAA,CAC3B+wE,GACAc,IAAA7xE,EACA8xE,IAAAvmD,EACA6lD,KAAAH,EAAAjxE,EACAsxE,KAAAJ,EAAA3lD,EACAimD,KAAAP,GAAAjxE,EAAA,GACA0xE,KAAAR,GAAA3lD,EAAA,IAEAwlD,EAAAgB,MAAA3sE,KAAA+U,IAAA22D,EAAAM,KAAAL,EAAAK,MACAL,EAAAiB,MAAA5sE,KAAA+U,IAAA22D,EAAAQ,KAAAP,EAAAO,MACAP,EAAAkB,MAAA7sE,KAAAC,IAAAyrE,EAAAU,KAAAT,EAAAS,MACAT,EAAAmB,MAAA9sE,KAAAC,IAAAyrE,EAAAY,KAAAX,EAAAW,KACA,IAAAS,GAAA/sE,KAAAiwB,OAAA07C,EAAAgB,MAAAjB,EAAAM,MAAAR,EAAAT,wBACAiC,EAAAhtE,KAAAiwB,OAAA07C,EAAAiB,MAAAlB,EAAAQ,MAAAV,EAAAR,wBAKA,IAJAY,EAAAmB,EAAAC,EAAAxB,EAAAP,iBACAU,EAAAC,iBACAD,EAAAsB,YAAAvB,EAAA3wD,KACA4wD,EAAAuB,OAAA,IACAvB,EAAAkB,OAAAlB,EAAAgB,OAAAhB,EAAAmB,OAAAnB,EAAAiB,OAAA,CAGAL,EAAAnsE,KAAAurE,EACA,IAAAwB,GAAAX,EAAAZ,OACApsE,KAAA2tE,GACAvyE,EAAAuyE,EAAAC,OACAD,EAAAC,OAAAxyE,EACMA,EAAAuyE,EAAAE,SACNF,EAAAE,OAAAzyE,GAEAurB,EAAAgnD,EAAAG,OACAH,EAAAC,OAAAjnD,EACMA,EAAAgnD,EAAAI,SACNJ,EAAAI,OAAApnD,IAGAqmD,EAAAZ,GAAAuB,GACAC,OAAAxyE,EACA0yE,OAAAnnD,EACAknD,OAAAzyE,EACA2yE,OAAApnD,GAGAwlD,EAAAwB,YAGAzB,EAAA8B,qBACA3B,eAAAzB,EACA0B,gBAAAxB,EACAmD,iBAAAtB,EAAAJ,EAAA,EACA2B,iBAAArB,EAAAJ,EAAA,GAEAP,EAAAa,aACAb,EAAAc,YAEA,QAAAmB,GAAAlD,EAAAmB,EAAAgC,GAGA,OAFAC,MACAC,EAAArD,EAAAqD,SACAlzE,EAAA,EAAAmG,EAAA+sE,EAAAruE,OAAuC7E,EAAAmG,EAAQnG,IAG/C,OAFA8wE,GAAAoC,EAAAlzE,GACA2xE,EAAAb,EAAAa,WACApmD,EAAA,EAAAwc,EAAA4pC,EAAA9sE,OAA0C0mB,EAAAwc,EAAQxc,IAAA,CAClD,GAAAwlD,GAAAY,EAAApmD,EACAwlD,GAAAC,oBAGAiC,EAAAztE,KAAAurE,GAGA,OACAiC,cACArB,WAAAsB,GAGA,QAAAE,GAAAnJ,GAOA,OANAkD,GAAAlD,EAAAgE,IACAoF,EAAApJ,EAAAqJ,YAAAp6D,MACA80D,EAAA/D,EAAA58C,MAAAgmD,GACAE,EAAAvF,EAAAwF,6BAAAD,YACApmD,EAAAggD,EAAAyB,KACA6E,EAAA,EACA//C,EAAA,EAAiBA,EAAAvG,EAAqBuG,IACtC+/C,EAAApuE,KAAA+U,IAAAq5D,EAAAzF,EAAAD,WAAAr6C,GAAA07C,sBAAAsE,yBAEA,IAAAxzE,GAAA,EAAAsZ,EAAA,EAAAvZ,EAAA,EAAAoqB,EAAA,CACAzqB,MAAA+zE,WAAA,WACA,KAASzzE,EAAAqzE,EAAiBrzE,IAAA,CAC1B,KAAUsZ,GAAAi6D,EAAkCj6D,IAAA,CAC5C,KAAWvZ,EAAAktB,EAAqBltB,IAAA,CAChC,GAAAitE,GAAAc,EAAAD,WAAA9tE,EACA,MAAAuZ,EAAA0zD,EAAAkC,sBAAAsE,0BAAA,CAKA,IAFA,GAAA5D,GAAA5C,EAAA0G,YAAAp6D,GACAo3D,EAAAd,EAAAe,mBAAAD,aACYvmD,EAAAumD,GAAkB,CAC9B,GAAAiD,GAAAb,EAAAlD,EAAAzlD,EAAAnqB,EAEA,OADAmqB,KACAwpD,EAEAxpD,EAAA,GAEApqB,EAAA,EAEAuZ,EAAA,EAEAjX,EAAA,8BAGA,QAAAuxE,GAAA7J,GAOA,OANAkD,GAAAlD,EAAAgE,IACAoF,EAAApJ,EAAAqJ,YAAAp6D,MACA80D,EAAA/D,EAAA58C,MAAAgmD,GACAE,EAAAvF,EAAAwF,6BAAAD,YACApmD,EAAAggD,EAAAyB,KACA6E,EAAA,EACA//C,EAAA,EAAiBA,EAAAvG,EAAqBuG,IACtC+/C,EAAApuE,KAAA+U,IAAAq5D,EAAAzF,EAAAD,WAAAr6C,GAAA07C,sBAAAsE,yBAEA,IAAAl6D,GAAA,EAAAtZ,EAAA,EAAAD,EAAA,EAAAoqB,EAAA,CACAzqB,MAAA+zE,WAAA,WACA,KAASn6D,GAAAi6D,EAAkCj6D,IAAA,CAC3C,KAAUtZ,EAAAqzE,EAAiBrzE,IAAA,CAC3B,KAAWD,EAAAktB,EAAqBltB,IAAA,CAChC,GAAAitE,GAAAc,EAAAD,WAAA9tE,EACA,MAAAuZ,EAAA0zD,EAAAkC,sBAAAsE,0BAAA,CAKA,IAFA,GAAA5D,GAAA5C,EAAA0G,YAAAp6D,GACAo3D,EAAAd,EAAAe,mBAAAD,aACYvmD,EAAAumD,GAAkB,CAC9B,GAAAiD,GAAAb,EAAAlD,EAAAzlD,EAAAnqB,EAEA,OADAmqB,KACAwpD,EAEAxpD,EAAA,GAEApqB,EAAA,EAEAC,EAAA,EAEAqC,EAAA,8BAGA,QAAAwxE,GAAA9J,GACA,GAKA/pE,GAAAsZ,EAAAnZ,EAAAiB,EALA6rE,EAAAlD,EAAAgE,IACAoF,EAAApJ,EAAAqJ,YAAAp6D,MACA80D,EAAA/D,EAAA58C,MAAAgmD,GACAE,EAAAvF,EAAAwF,6BAAAD,YACApmD,EAAAggD,EAAAyB,KAEA6E,EAAA,CACA,KAAApzE,EAAA,EAAaA,EAAA8sB,EAAqB9sB,IAAA,CAClC,GAAA6sE,GAAAc,EAAAD,WAAA1tE,EACAozE,GAAApuE,KAAA+U,IAAAq5D,EAAAvG,EAAAkC,sBAAAsE,0BAEA,GAAAM,GAAA,GAAA9rD,YAAAurD,EAAA,EACA,KAAAj6D,EAAA,EAAaA,GAAAi6D,IAAkCj6D,EAAA,CAC/C,GAAAy6D,GAAA,CACA,KAAA5zE,EAAA,EAAcA,EAAA8sB,IAAqB9sB,EAAA,CACnC,GAAAuzE,GAAA5F,EAAAD,WAAA1tE,GAAAuzE,WACAp6D,GAAAo6D,EAAA9uE,SACAmvE,EAAA5uE,KAAA+U,IAAA65D,EAAAL,EAAAp6D,GAAAq3D,mBAAAD,eAGAoD,EAAAx6D,GAAAy6D,EAEA/zE,EAAA,EACAsZ,EAAA,EACAnZ,EAAA,EACAiB,EAAA,EACA1B,KAAA+zE,WAAA,WACA,KAASn6D,GAAAi6D,EAAkCj6D,IAAA,CAC3C,KAAUlY,EAAA0yE,EAAAx6D,GAA+BlY,IAAA,CACzC,KAAWjB,EAAA8sB,EAAqB9sB,IAAA,CAChC,GAAA6sE,GAAAc,EAAAD,WAAA1tE,EACA,MAAAmZ,EAAA0zD,EAAAkC,sBAAAsE,0BAAA,CAGA,GAAA5D,GAAA5C,EAAA0G,YAAAp6D,GACAo3D,EAAAd,EAAAe,mBAAAD,YACA,MAAAtvE,GAAAsvE,GAAA,CAGA,KAAY1wE,EAAAqzE,GAAiB,CAC7B,GAAAM,GAAAb,EAAAlD,EAAAxuE,EAAApB,EAEA,OADAA,KACA2zE,EAEA3zE,EAAA,IAEAG,EAAA,EAEAiB,EAAA,EAEAiB,EAAA,8BAGA,QAAA2xE,GAAAjK,GACA,GAAAkD,GAAAlD,EAAAgE,IACAoF,EAAApJ,EAAAqJ,YAAAp6D,MACA80D,EAAA/D,EAAA58C,MAAAgmD,GACAE,EAAAvF,EAAAwF,6BAAAD,YACApmD,EAAAggD,EAAAyB,KACAW,EAAA4E,EAAAnG,GACAoG,EAAA7E,EACArvE,EAAA,EAAAsZ,EAAA,EAAAnZ,EAAA,EAAAg0E,EAAA,EAAAt/C,EAAA,CACAn1B,MAAA+zE,WAAA,WACA,KAAS5+C,EAAAq/C,EAAAE,WAAyCv/C,IAAA,CAClD,KAAUs/C,EAAAD,EAAAG,WAAyCF,IAAA,CACnD,KAAWh0E,EAAA8sB,EAAqB9sB,IAAA,CAGhC,IAFA,GAAA6sE,GAAAc,EAAAD,WAAA1tE,GACAqzE,EAAAxG,EAAAkC,sBAAAsE,yBACYl6D,GAAAk6D,EAA+Bl6D,IAAA,CAC3C,GAAAs2D,GAAA5C,EAAA0G,YAAAp6D,GACAg7D,EAAAjF,EAAAxB,WAAA1tE,GAAAuzE,YAAAp6D,GACA6Q,EAAAoqD,EAAAJ,EAAAt/C,EAAAy/C,EAAAJ,EAAAtE,EACA,WAAAzlD,EAAA,CAGA,KAAanqB,EAAAqzE,GAAiB,CAC9B,GAAAM,GAAAb,EAAAlD,EAAAzlD,EAAAnqB,EAEA,OADAA,KACA2zE,EAEA3zE,EAAA,GAEAsZ,EAAA,EAEAnZ,EAAA,EAEAg0E,EAAA,EAEA9xE,EAAA,8BAGA,QAAAmyE,GAAAzK,GACA,GAAAkD,GAAAlD,EAAAgE,IACAoF,EAAApJ,EAAAqJ,YAAAp6D,MACA80D,EAAA/D,EAAA58C,MAAAgmD,GACAE,EAAAvF,EAAAwF,6BAAAD,YACApmD,EAAAggD,EAAAyB,KACAW,EAAA4E,EAAAnG,GACA9tE,EAAA,EAAAsZ,EAAA,EAAAnZ,EAAA,EAAAg0E,EAAA,EAAAt/C,EAAA,CACAn1B,MAAA+zE,WAAA,WACA,KAAStzE,EAAA8sB,IAAqB9sB,EAAA,CAI9B,IAHA,GAAA6sE,GAAAc,EAAAD,WAAA1tE,GACA+zE,EAAA7E,EAAAxB,WAAA1tE,GACAqzE,EAAAxG,EAAAkC,sBAAAsE,yBACU3+C,EAAAq/C,EAAAE,WAAyCv/C,IAAA,CACnD,KAAWs/C,EAAAD,EAAAG,WAAyCF,IAAA,CACpD,KAAY76D,GAAAk6D,EAA+Bl6D,IAAA,CAC3C,GAAAs2D,GAAA5C,EAAA0G,YAAAp6D,GACAg7D,EAAAJ,EAAAR,YAAAp6D,GACA6Q,EAAAoqD,EAAAJ,EAAAt/C,EAAAy/C,EAAAJ,EAAAtE,EACA,WAAAzlD,EAAA,CAGA,KAAanqB,EAAAqzE,GAAiB,CAC9B,GAAAM,GAAAb,EAAAlD,EAAAzlD,EAAAnqB,EAEA,OADAA,KACA2zE,EAEA3zE,EAAA,GAEAsZ,EAAA,EAEA66D,EAAA,EAEAt/C,EAAA,EAEAxyB,EAAA,8BAGA,QAAAkyE,GAAAE,EAAAC,EAAAJ,EAAAK,EAAA/E,GACA,GAAAgF,GAAAH,EAAAE,EAAAE,SACAC,EAAAJ,EAAAC,EAAAI,SACA,IAAAH,EAAAN,EAAAl2D,OAAA,GAAA02D,EAAAR,EAAAj2D,QAAA,EACA,WAEA,IAAA22D,GAAAF,EAAAR,EAAAl2D,MAAAwxD,EAAAe,mBAAAP,gBACA,OAAAwE,GAAAN,EAAAj2D,OAAA22D,EAEA,QAAAf,GAAAnG,GAOA,OANA7gD,GAAA6gD,EAAAD,WAAAjpE,OACAiwE,EAAAI,OAAAC,UACAH,EAAAE,OAAAC,UACAb,EAAA,EACAD,EAAA,EACAe,EAAA,GAAA7sE,OAAA2kB,GACA9sB,EAAA,EAAiBA,EAAA8sB,EAAqB9sB,IAAA,CAStC,OARA6sE,GAAAc,EAAAD,WAAA1tE,GACAqzE,EAAAxG,EAAAkC,sBAAAsE,yBACA4B,EAAA,GAAA9sE,OAAAkrE,EAAA,GACA6B,EAAAJ,OAAAC,UACAI,EAAAL,OAAAC,UACAK,EAAA,EACAC,EAAA,EACAj4D,EAAA,EACAjE,EAAAk6D,EAAyCl6D,GAAA,IAAQA,EAAA,CACjD,GAAAs2D,GAAA5C,EAAA0G,YAAAp6D,GACAm8D,EAAAl4D,EAAAqyD,EAAAe,mBAAAb,cACA4F,EAAAn4D,EAAAqyD,EAAAe,mBAAAZ,cACAsF,GAAAlwE,KAAAC,IAAAiwE,EAAAI,GACAH,EAAAnwE,KAAAC,IAAAkwE,EAAAI,GACAH,EAAApwE,KAAA+U,IAAAq7D,EAAA3F,EAAAe,mBAAAP,kBACAoF,EAAArwE,KAAA+U,IAAAs7D,EAAA5F,EAAAe,mBAAAJ,kBACA6E,EAAA97D,IACA8E,MAAAq3D,EACAp3D,OAAAq3D,GAEAn4D,IAAA,EAEAs3D,EAAA1vE,KAAAC,IAAAyvE,EAAAQ,GACAN,EAAA5vE,KAAAC,IAAA2vE,EAAAO,GACAjB,EAAAlvE,KAAA+U,IAAAm6D,EAAAkB,GACAnB,EAAAjvE,KAAA+U,IAAAk6D,EAAAoB,GACAL,EAAAh1E,IACAuzE,YAAA0B,EACAP,SAAAQ,EACAN,UAAAO,EACAjB,WAAAkB,EACAnB,WAAAoB,GAGA,OACA3H,WAAAsH,EACAN,WACAE,YACAV,aACAD,cAGA,QAAAuB,GAAA5L,GAKA,OAJAkD,GAAAlD,EAAAgE,IACAoF,EAAApJ,EAAAqJ,YAAAp6D,MACA80D,EAAA/D,EAAA58C,MAAAgmD,GACAlmD,EAAAggD,EAAAyB,KACAvuE,EAAA,EAAiBA,EAAA8sB,EAAqB9sB,IAAA,CAKtC,OAJA6sE,GAAAc,EAAAD,WAAA1tE,GACAqzE,EAAAxG,EAAAkC,sBAAAsE,yBACAE,KACAT,KACA35D,EAAA,EAAkBA,GAAAk6D,EAA+Bl6D,IAAA,CACjD,GAAAs8D,GAAA5G,EAAAjF,EAAAiD,EAAA1zD,GACAs2D,KACAryD,EAAA,GAAAi2D,EAAAl6D,CACAs2D,GAAAU,KAAAnrE,KAAAymC,KAAAohC,EAAA4B,KAAArxD,GACAqyD,EAAAa,KAAAtrE,KAAAymC,KAAAohC,EAAA6B,KAAAtxD,GACAqyD,EAAAS,KAAAlrE,KAAAymC,KAAAohC,EAAA8B,KAAAvxD,GACAqyD,EAAAY,KAAArrE,KAAAymC,KAAAohC,EAAA+B,KAAAxxD,GACAqyD,EAAAK,SAAA32D,EACAq2D,EAAA5F,EAAA6F,EAAAgG,GACAlC,EAAAnuE,KAAAqqE,EACA,IAAAiB,EACA,QAAAv3D,EACAu3D,KACAA,EAAA3wD,KAAA,KACA2wD,EAAAM,KAAAhsE,KAAAymC,KAAAohC,EAAA4B,KAAArxD,GACAszD,EAAAQ,KAAAlsE,KAAAymC,KAAAohC,EAAA6B,KAAAtxD,GACAszD,EAAAU,KAAApsE,KAAAymC,KAAAohC,EAAA8B,KAAAvxD,GACAszD,EAAAY,KAAAtsE,KAAAymC,KAAAohC,EAAA+B,KAAAxxD,GACAszD,EAAAjB,aACAgB,EAAA7G,EAAA8G,EAAA+E,GACA3C,EAAA1tE,KAAAsrE,GACAjB,EAAAqD,UAAApC,OACK,CACL,GAAAgF,GAAA,GAAArC,EAAAl6D,EAAA,EACAw8D,IACAjF,MACAA,EAAA3wD,KAAA,KACA2wD,EAAAM,KAAAhsE,KAAAymC,KAAAohC,EAAA4B,KAAAiH,EAAA,IACAhF,EAAAQ,KAAAlsE,KAAAymC,KAAAohC,EAAA6B,KAAAgH,GACAhF,EAAAU,KAAApsE,KAAAymC,KAAAohC,EAAA8B,KAAA+G,EAAA,IACAhF,EAAAY,KAAAtsE,KAAAymC,KAAAohC,EAAA+B,KAAA8G,GACAhF,EAAAjB,aACAgB,EAAA7G,EAAA8G,EAAA+E,GACA3C,EAAA1tE,KAAAsrE,GACAiF,EAAAvwE,KAAAsrE,GACAA,KACAA,EAAA3wD,KAAA,KACA2wD,EAAAM,KAAAhsE,KAAAymC,KAAAohC,EAAA4B,KAAAiH,GACAhF,EAAAQ,KAAAlsE,KAAAymC,KAAAohC,EAAA6B,KAAAgH,EAAA,IACAhF,EAAAU,KAAApsE,KAAAymC,KAAAohC,EAAA8B,KAAA+G,GACAhF,EAAAY,KAAAtsE,KAAAymC,KAAAohC,EAAA+B,KAAA8G,EAAA,IACAhF,EAAAjB,aACAgB,EAAA7G,EAAA8G,EAAA+E,GACA3C,EAAA1tE,KAAAsrE,GACAiF,EAAAvwE,KAAAsrE,GACAA,KACAA,EAAA3wD,KAAA,KACA2wD,EAAAM,KAAAhsE,KAAAymC,KAAAohC,EAAA4B,KAAAiH,EAAA,IACAhF,EAAAQ,KAAAlsE,KAAAymC,KAAAohC,EAAA6B,KAAAgH,EAAA,IACAhF,EAAAU,KAAApsE,KAAAymC,KAAAohC,EAAA8B,KAAA+G,EAAA,IACAhF,EAAAY,KAAAtsE,KAAAymC,KAAAohC,EAAA+B,KAAA8G,EAAA,IACAhF,EAAAjB,aACAgB,EAAA7G,EAAA8G,EAAA+E,GACA3C,EAAA1tE,KAAAsrE,GACAiF,EAAAvwE,KAAAsrE,GACAjB,EAAAqD,SAAA6C,GAGA9I,EAAA0G,cACA1G,EAAAiG,WAEA,GAAA8C,GAAAjI,EAAAwF,6BAAAyC,gBACA,QAAAA,GACA,OACAjI,EAAAkI,gBAAA,GAAA9C,GAAAnJ,EACA,MACA,QACA+D,EAAAkI,gBAAA,GAAApC,GAAA7J,EACA,MACA,QACA+D,EAAAkI,gBAAA,GAAAnC,GAAA9J,EACA,MACA,QACA+D,EAAAkI,gBAAA,GAAAhC,GAAAjK,EACA,MACA,QACA+D,EAAAkI,gBAAA,GAAAxB,GAAAzK,EACA,MACA,SACA1nE,EAAA,4CAAA0zE,IAGA,QAAAE,GAAAlM,EAAA3jE,EAAAQ,EAAAynB,GAGA,QAAAiF,GAAAqC,GACA,KAAAugD,EAAAvgD,GAAA,CACA,GAAAnc,GAAApT,EAAAQ,EAAAy/C,EACAA,KACA8vB,GACAlvE,KAAA,EAAAuS,EACA08D,GAAA,EACAC,GAAA,IAEAlvE,KAAA,EAAAuS,EACA08D,GAAA,GAEA,MAAA18D,IACA28D,GAAA,GAIA,MADAD,IAAAvgD,EACA1uB,IAAAivE,GAAA,GAAAvgD,GAAA,EAEA,QAAAygD,GAAAh2E,GACA,aAAAgG,EAAAQ,EAAAy/C,EAAA,IAAAjgD,EAAAQ,EAAAy/C,KAAAjmD,GACAi2E,EAAA,IACA,GACI,MAAAjwE,EAAAQ,EAAAy/C,IAAAjgD,EAAAQ,EAAAy/C,EAAA,KAAAjmD,IACJi2E,EAAA,IACA,GAIA,QAAAA,GAAA1gD,GACA0wB,GAAA1wB,EAEA,QAAA2gD,KACAJ,EAAA,EACAC,IACA9vB,IACA8vB,GAAA,GAGA,QAAAI,KACA,OAAAjjD,EAAA,GACA,QAEA,QAAAA,EAAA,GACA,QAEA,IAAAlzB,GAAAkzB,EAAA,EACA,OAAAlzB,GAAA,EACAA,EAAA,GAEAA,EAAAkzB,EAAA,IACA,GACAlzB,EAAA,GAEAA,EAAAkzB,EAAA,IACA,GAOA,IAhEA,GACArsB,GADAo/C,EAAA,EACA6vB,EAAA,EAAAC,GAAA,EA0DAhD,EAAApJ,EAAAqJ,YAAAp6D,MACA80D,EAAA/D,EAAA58C,MAAAgmD,GACAqD,EAAAzM,EAAA0M,IAAAD,cACAE,EAAA3M,EAAA0M,IAAAC,cACAV,EAAAlI,EAAAkI,gBACA3vB,EAAAh4B,GAAA,CACAioD,IACAE,GAAAJ,EAAA,MACAC,EAAA,EAEA,IAAA1C,GAAAqC,EAAAvC,YACA,IAAAngD,EAAA,IAKA,OADAw9C,GADAiC,EAAAY,EAAAZ,YACAhL,KACAhoE,EAAA,EAAAmG,EAAAytE,EAAAjC,WAAA9sE,OAAiD7E,EAAAmG,EAAQnG,IAAA,CACzD+wE,EAAA6C,EAAAjC,WAAA3xE,EACA,IAAAuyE,GAAAxB,EAAAwB,SACAqE,EAAA7F,EAAAc,IAAAU,EAAAC,OACAqE,EAAA9F,EAAAe,IAAAS,EAAAG,OACAoE,GAAA,EACAC,GAAA,CAEA,QAAAnyE,KAAAmsE,EAAA,SACA+F,IAAAvjD,EAAA,OACK,CACLg/C,EAAAxB,EAAAwB,QACA,IAAAyE,GAAAC,CACA,QAAAryE,KAAA2tE,EAAA,cACAyE,EAAAzE,EAAAyE,kBACM,CACN,GAAA34D,GAAAk0D,EAAAE,OAAAF,EAAAC,OAAA,EACAl0D,EAAAi0D,EAAAI,OAAAJ,EAAAG,OAAA,CACAsE,GAAA,GAAAE,GAAA74D,EAAAC,EAAA00D,GACAiE,EAAA,GAAAE,GAAA94D,EAAAC,GACAi0D,EAAAyE,gBACAzE,EAAA0E,oBAEA,GAAAD,EAAA7wD,MAAAywD,EAAAC,EAAA7D,GACA,QACA,IAAAz/C,EAAA,GAOQ,CACRyjD,EAAAI,eAAApE,EACA,OAPA,IADAgE,EAAAK,YACA,CACAtG,EAAAuG,UAAA,EACAR,EAAAC,GAAA,CACA,SASA,GAAAD,EAAA,CAGA,GAAAC,EAAA,CAGA,IAFAE,EAAA1E,EAAA0E,kBACAA,EAAA9wD,MAAAywD,EAAAC,KAEA,GAAAtjD,EAAA,IAEA,IADA0jD,EAAAI,YAEA,UAGAJ,GAAAG,gBAGArG,GAAAwG,cAAAN,EAAA52E,MAGA,IADA,GAAAm3E,GAAAhB,IACAjjD,EAAA,IACAw9C,EAAAuB,QAEA,IAAAmF,GAAAjxE,EAAAgxE,GACAjvD,GAAAivD,EAAA,GAAAC,IAAA,EAAAA,GAAA1G,EAAAuB,OACAoF,EAAAnkD,EAAAhL,EACAy/C,GAAAxiE,MACAurE,YACAyG,eACAlpD,WAAAopD,KAOA,IAJAnB,IACAI,GACAN,EAAA,KAEArO,EAAAnjE,OAAA,IACA,GAAA8yE,GAAA3P,EAAAzgD,OACAwpD,GAAA4G,EAAA5G,cACAnsE,KAAAmsE,EAAA,OACAA,EAAA1qE,SAEA0qE,EAAA1qE,KAAAb,MACAa,OACAM,MAAAE,EAAAy/C,EACA1tC,IAAA/R,EAAAy/C,EAAAqxB,EAAArpD,WACAkpD,aAAAG,EAAAH,eAEAlxB,GAAAqxB,EAAArpD,aAGA,MAAAg4B,GAEA,QAAAsxB,GAAAC,EAAAC,EAAAC,EAAAjH,EAAAkH,EAAAC,EAAAC,EAAAC,GAOA,OANAhL,GAAA2D,EAAAM,KACA5D,EAAAsD,EAAAQ,KACAjzD,EAAAyyD,EAAAU,KAAAV,EAAAM,KACAO,EAAAb,EAAAa,WACAyG,EAAA,MAAAtH,EAAA3wD,KAAA3Y,OAAA,OACA6wE,EAAA,MAAAvH,EAAA3wD,KAAA3Y,OAAA,GAAAswE,EAAA,EACA93E,EAAA,EAAAmG,EAAAwrE,EAAA9sE,OAAyC7E,EAAAmG,IAAQnG,EAAA,CACjD,GAAA+wE,GAAAY,EAAA3xE,GACAs4E,EAAAvH,EAAAkB,MAAAlB,EAAAgB,MACAwG,EAAAxH,EAAAmB,MAAAnB,EAAAiB,KACA,QAAAsG,GAAA,IAAAC,OAGA3zE,KAAAmsE,EAAA,MAGA,GAAAyH,GAAAC,CACAD,GAAA,GAAAE,GAAAJ,EAAAC,EAAAxH,EAAAsB,YAAAtB,EAAAwG,cAAAU,GACAQ,EAAA,CACA,IACAltD,GAAAwc,EAAA4wC,EADAtyE,EAAA0qE,EAAA1qE,KAAAmxC,EAAA,EAAAggC,EAAA,CAEA,KAAAjsD,EAAA,EAAAwc,EAAA1hC,EAAAxB,OAAgC0mB,EAAAwc,EAAQxc,IACxCotD,EAAAtyE,EAAAklB,GACAisB,GAAAmhC,EAAA//D,IAAA+/D,EAAAhyE,MACA6wE,GAAAmB,EAAAnB,YAEA,IAAAoB,GAAA,GAAAlzE,YAAA8xC,GACA8O,EAAA,CACA,KAAA/6B,EAAA,EAAAwc,EAAA1hC,EAAAxB,OAAgC0mB,EAAAwc,EAAQxc,IAAA,CACxCotD,EAAAtyE,EAAAklB,EACA,IAAAjmB,GAAAqzE,EAAAtyE,KAAAd,SAAAozE,EAAAhyE,MAAAgyE,EAAA//D,IACAggE,GAAAtyE,IAAAhB,EAAAghD,GACAA,GAAAhhD,EAAAT,OAEA,GAAAg0E,GAAA,GAAA1gC,GAAAygC,EAAA,EAAAphC,EAEA,KADAghC,EAAAM,WAAAD,GACAttD,EAAA,EAAcA,EAAAisD,EAAkBjsD,IAAA,CAChC,OAAAktD,GACA,OACAD,EAAAO,gCACA,MACA,QACAP,EAAAQ,4BACA,MACA,QACAR,EAAAS,iBACAd,GACAK,EAAAU,0BAIAT,KAAA,KAEA,GAKAruD,GAAArpB,EAAAo4E,EALAtyE,EAAAkqE,EAAAgB,MAAA5E,GAAA4D,EAAAiB,MAAAxE,GAAAnvD,EACA9C,EAAAi9D,EAAAY,gBACAC,EAAAb,EAAAc,qBACAC,EAAAf,EAAAe,YACAC,EAAAtB,EAAA,IAEA5xB,GAAA,CACA,IAAAmzB,GAAA,OAAA3I,EAAA3wD,IACA,KAAAoL,EAAA,EAAcA,EAAAgtD,EAAiBhtD,IAAA,CAC/B,GAAA6E,GAAAvpB,EAAAwX,EAAA,EACAq7D,EAAA,EAAAtpD,GAAA0nD,EAAAz5D,GAAA+5D,EAAAC,CACA,KAAAjuD,EAAA,EAAeA,EAAAkuD,EAAgBluD,IAAA,CAE/B,QADArpB,EAAAs4E,EAAA/yB,IACA,CACAvlD,KAAAy4E,GAAAxB,EACA,IAAAz8D,EAAA+qC,KACAvlD,MAEAo4E,EAAAI,EAAAjzB,EACA,IAAAlgD,GAAAqzE,EAAAC,GAAA7yE,GAAA,GAAAA,CAEAgxE,GAAAzxE,GADA8xE,GAAAiB,GAAAlB,EACAl3E,EAEAA,GAAA,GAAAk3E,EAAAkB,GAGAtyE,IACAy/C,IAEAz/C,GAAAwX,EAAAi6D,KAIA,QAAAqB,GAAA3P,EAAA+D,EAAA3tE,GAcA,OAbA6sE,GAAAc,EAAAD,WAAA1tE,GACA+uE,EAAAlC,EAAAkC,sBACAyK,EAAA3M,EAAA2M,uBACAnG,EAAAtE,EAAAsE,yBACAoG,EAAAD,EAAAE,OACAC,EAAAH,EAAAG,gBACAC,EAAAJ,EAAAI,UACA7B,EAAAhJ,EAAAgJ,uBACA8B,EAAAjQ,EAAA8D,WAAA1tE,GAAA65E,UACA/B,EAAA/I,EAAA+K,yBACA3nE,EAAA2lE,EAAA,GAAAiC,GAAA,GAAAC,GACAC,KACA5gE,EAAA,EACAzZ,EAAA,EAAiBA,GAAAyzE,EAA+BzzE,IAAA,CAKhD,OAJA6vE,GAAA5C,EAAA0G,YAAA3zE,GACAqe,EAAAwxD,EAAAS,KAAAT,EAAAU,KACAjyD,EAAAuxD,EAAAY,KAAAZ,EAAAa,KACAmH,EAAA,GAAA5+C,cAAA5a,EAAAC,GACAiN,EAAA,EAAAwc,EAAA8nC,EAAAqD,SAAAruE,OAAmD0mB,EAAAwc,EAAQxc,IAAA,CAC3D,GAAA+uD,GAAA/1B,CACAw1B,IAIAO,EAAAT,EAAApgE,GAAA6gE,GACA/1B,EAAAs1B,EAAApgE,GAAA8qC,QACA9qC,MALA6gE,EAAAT,EAAA,GAAAS,GACA/1B,EAAAs1B,EAAA,GAAAt1B,SAAAvkD,EAAA,IAAAA,EAAA,GAMA,IAAA8wE,GAAAjB,EAAAqD,SAAA3nD,GACAgvD,EAAAC,EAAA1J,EAAA3wD,KAGAy3D,GAAAC,EAAAx5D,EAAAC,EAAAwyD,EAFAoH,EAAA,EAAA9yE,KAAAm1B,IAAA,EAAA0/C,EAAAM,EAAAh2B,IAAA,EAAA+1B,EAAA,MACAN,EAAAz1B,EAAA,EACA2zB,EAAAC,GAEAkC,EAAA70E,MACA6Y,QACAC,SACA+O,MAAAwqD,IAGA,GAAA1tE,GAAAoI,EAAAkoE,UAAAJ,EAAApN,EAAA4B,KAAA5B,EAAA6B,KACA,QACAljD,KAAAqhD,EAAA4B,KACAlhD,IAAAs/C,EAAA6B,KACAzwD,MAAAlU,EAAAkU,MACAC,OAAAnU,EAAAmU,OACA+O,MAAAljB,EAAAkjB,OAGA,QAAAqtD,GAAA1Q,GAKA,OAJAkD,GAAAlD,EAAAgE,IACAF,EAAA9D,EAAA8D,WACA5gD,EAAAggD,EAAAyB,KACAgM,KACA36E,EAAA,EAAAmG,EAAA6jE,EAAA58C,MAAAvoB,OAA4C7E,EAAAmG,EAAQnG,IAAA,CACpD,GAEAI,GAFA2tE,EAAA/D,EAAA58C,MAAAptB,GACA46E,IAEA,KAAAx6E,EAAA,EAAcA,EAAA8sB,EAAqB9sB,IACnCw6E,EAAAx6E,GAAAu5E,EAAA3P,EAAA+D,EAAA3tE,EAEA,IASAmnB,GAAA1gB,EAAAsT,EAAA9U,EAAAw1E,EACAtvD,EAAAwc,EAAAylC,EAAAG,EAAAmN,EAAAvhE,EAAAC,EAAAC,EAAA2Q,EAAAnB,EAVA8xD,EAAAH,EAAA,GACAh7D,EAAA,GAAAla,YAAAq1E,EAAA1tD,MAAAxoB,OAAAqoB,GACA/iB,GACAyhB,KAAAmvD,EAAAnvD,KACA+B,IAAAotD,EAAAptD,IACAtP,MAAA08D,EAAA18D,MACAC,OAAAy8D,EAAAz8D,OACA+O,MAAAzN,GAGAxZ,EAAA,CACA,IAAA2nE,EAAAwF,6BAAAyH,2BAAA,CACA,GAAAC,GAAA,IAAA/tD,EACAguD,EAAAN,EAAA,GAAAvtD,MACA8tD,EAAAP,EAAA,GAAAvtD,MACA+tD,EAAAR,EAAA,GAAAvtD,MACAguD,EAAAJ,EAAAL,EAAA,GAAAvtD,MAAA,IACA9F,GAAAumD,EAAA,GAAAmM,UAAA,EACApzE,EAAA,SAAA0gB,GACApN,EAAA,QAAAoN,GACAszD,EAAA,GAAA1gE,EACA9U,GAAAw1E,CACA,IAAAS,GAAAvN,EAAAD,WAAA,GACAn5C,EAAAzH,EAAA,CAEA,IADA6a,EAAAmzC,EAAAr2E,OACAy2E,EAAAnM,sBAAA+K,yBAaA,IAAA3uD,EAAA,EAAgBA,EAAAwc,EAAQxc,IAAAnlB,GAAAuuB,EACxB64C,EAAA0N,EAAA3vD,GAAA1kB,EACA8mE,EAAAwN,EAAA5vD,GACAuvD,EAAAM,EAAA7vD,GACA/R,EAAAg0D,GAAAsN,EAAAnN,GAAA,GACAp0D,EAAAC,EAAAshE,EACArhE,EAAAD,EAAAm0D,EACA/tD,EAAAxZ,KAAAmT,GAAA,IAAAA,GAAAY,EAAA,IAAAZ,GAAAgO,EACA3H,EAAAxZ,KAAAoT,GAAA,IAAAA,GAAAW,EAAA,IAAAX,GAAA+N,EACA3H,EAAAxZ,KAAAqT,GAAA,IAAAA,GAAAU,EAAA,IAAAV,GAAA8N,MArBA,KAAAgE,EAAA,EAAgBA,EAAAwc,EAAQxc,IAAAnlB,GAAAuuB,EACxB64C,EAAA0N,EAAA3vD,GAAA1kB,EACA8mE,EAAAwN,EAAA5vD,GACAuvD,EAAAM,EAAA7vD,GACAhS,EAAAi0D,EAAA,MAAAsN,EACAthE,EAAAg0D,EAAA,OAAAG,EAAA,OAAAmN,EACArhE,EAAA+zD,EAAA,MAAAG,EACA/tD,EAAAxZ,KAAAmT,GAAA,IAAAA,GAAAY,EAAA,IAAAZ,GAAAgO,EACA3H,EAAAxZ,KAAAoT,GAAA,IAAAA,GAAAW,EAAA,IAAAX,GAAA+N,EACA3H,EAAAxZ,KAAAqT,GAAA,IAAAA,GAAAU,EAAA,IAAAV,GAAA8N,CAeA,IAAA0zD,EACA,IAAA1vD,EAAA,EAAAnlB,EAAA,EAAyBmlB,EAAAwc,EAAQxc,IAAAnlB,GAAA,EACjCgkB,EAAAixD,EAAA9vD,GACA3L,EAAAxZ,GAAAgkB,GAAA/kB,EAAA,EAAA+kB,GAAAywD,EAAA,IAAAzwD,EAAAvjB,GAAA0gB,MAIA,KAAAnnB,EAAA,EAAeA,EAAA8sB,EAAqB9sB,IAAA,CACpC,GAAAitB,GAAAutD,EAAAx6E,GAAAitB,KAKA,KAJA9F,EAAAumD,EAAA1tE,GAAA65E,UAAA,EACApzE,EAAA,SAAA0gB,GACApN,EAAA,UAAAoN,GACAliB,GAAA8U,EACA/T,EAAAhG,EAAAmrB,EAAA,EAAAwc,EAAA1a,EAAAxoB,OAA4C0mB,EAAAwc,EAAQxc,IACpDtC,EAAAoE,EAAA9B,GACA3L,EAAAxZ,GAAA6iB,GAAA5jB,EAAA,EAAA4jB,GAAA9O,EAAA,IAAA8O,EAAApiB,GAAA0gB,EACAnhB,GAAA8mB,EAIAytD,EAAAn1E,KAAA2E,GAEA,MAAAwwE,GAEA,QAAAY,GAAAvR,EAAAoJ,GAIA,OAHAlG,GAAAlD,EAAAgE,IACA9gD,EAAAggD,EAAAyB,KACAZ,EAAA/D,EAAA58C,MAAAgmD,GACAhzE,EAAA,EAAiBA,EAAA8sB,EAAqB9sB,IAAA,CACtC,GAAA6sE,GAAAc,EAAAD,WAAA1tE,GACAo7E,MAAA52E,KAAAolE,EAAAqJ,YAAAoI,IAAAr7E,GAAA4pE,EAAAqJ,YAAAoI,IAAAr7E,GAAA4pE,EAAAqJ,YAAAqI,GACAzO,GAAA2M,uBAAA4B,CACA,IAAAtM,OAAAtqE,KAAAolE,EAAAqJ,YAAAsI,IAAAv7E,GAAA4pE,EAAAqJ,YAAAsI,IAAAv7E,GAAA4pE,EAAAqJ,YAAAqD,GACAzJ,GAAAkC,sBAAAD,EAEAnB,EAAAwF,6BAAAvJ,EAAAqJ,YAAAqD,IA3vCA,GAAA8D,IACAoB,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EAKAz2D,GAAAnkB,WACAwrB,MAAA,SAAAtmB,GAEA,WADAO,EAAAP,EAAA,GAGA,WADA1G,MAAAq8E,gBAAA31E,EAAA,EAAAA,EAAAxB,OAIA,KADA,GAAAyhD,GAAA,EAAAzhD,EAAAwB,EAAAxB,OACAyhD,EAAAzhD,GAAA,CACA,GAAAo3E,GAAA,EACAC,EAAAp1E,EAAAT,EAAAigD,GACA61B,EAAAr1E,EAAAT,EAAAigD,EAAA,EACAA,IAAA21B,EACA,IAAAC,IACAA,EAAA,WAAAp1E,EAAAT,EAAAigD,GAAAx/C,EAAAT,EAAAigD,EAAA,GACAA,GAAA,EACA21B,GAAA,GAEA,IAAAC,IACAA,EAAAr3E,EAAAyhD,EAAA21B,GAEAC,EAAAD,GACA35E,EAAA,oCAEA,IAAAgsB,GAAA4tD,EAAAD,EACAG,GAAA,CACA,QAAAD,GACA,gBACAC,GAAA,CACA,MACA,iBACA,GAAAC,GAAAh2E,EAAAigD,EACA,QAAA+1B,EAAA,CACA,GAAAC,GAAAx1E,EAAAT,EAAAigD,EAAA,EACA,QAAAg2B,GACA,QACA,QACA,QACA,KACA,SACAp6E,EAAA,sBAAAo6E,QAGM,KAAAD,GACNz6E,EAAA,4BAEA,MACA,iBACAjC,KAAAq8E,gBAAA31E,EAAAigD,IAAAh4B,EACA,MACA,gBACA,YAAAxnB,EAAAT,EAAAigD,IACApkD,EAAA,wBAEA,MACA,iBACA,gBACA,gBACA,gBACA,gBACA,KACA,SACA,GAAAq6E,GAAAx3E,OAAAC,aAAAm3E,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,EACAj6E,GAAA,2BAAAi6E,EAAA,KAAAI,EAAA,KAGAH,IACA91B,GAAAh4B,KAIAkuD,qBAAA,SAAAl1D,GAEA,IADA,GAAAm1D,GAAAn1D,EAAA5B,UACA+2D,GAAA,IACA,GAAAC,GAAAD,CACAA,GAAAn1D,EAAA5B,SAEA,aADAg3D,GAAA,EAAAD,GACA,CACAn1D,EAAApB,KAAA,EACA,IAAAqnD,GAAAjmD,EAAAzB,aAAA,EACA+nD,EAAAtmD,EAAAzB,aAAA,EACAunD,EAAA9lD,EAAAzB,aAAA,EACA4nD,EAAAnmD,EAAAzB,aAAA,CACAyB,GAAApB,KAAA,GACA,IAAAyoD,GAAArnD,EAAA3B,WAKA,OAJAhmB,MAAA0e,MAAAkvD,EAAAH,EACAztE,KAAA2e,OAAAsvD,EAAAH,EACA9tE,KAAAutB,gBAAAyhD,OACAhvE,KAAA0sB,iBAAA,IAIA/pB,EAAA,kDAEA05E,gBAAA,SAAA31E,EAAAM,EAAAiS,GACA,GAAAoxD,MACA2S,GAAA,CACA,KAEA,IADA,GAAAr2B,GAAA3/C,EACA2/C,EAAA,EAAA1tC,GAAA,CACA,GAAAtR,GAAAV,EAAAP,EAAAigD,EACAA,IAAA,CACA,IAAA/6B,GAAAqxD,EAAA/C,EAAAgD,EAAA9C,EAAAhM,EAAAlpE,EAAA,CACA,QAAAyC,GACA,WACA0iE,EAAA8S,YAAA,CACA,MACA,YACA,KACA,YACAj4E,EAAA+B,EAAAP,EAAAigD,EACA,IAAA4mB,KACAA,GAAAK,KAAAzmE,EAAAT,EAAAigD,EAAA,GACA4mB,EAAAU,KAAA9mE,EAAAT,EAAAigD,EAAA,GACA4mB,EAAAE,MAAAtmE,EAAAT,EAAAigD,EAAA,IACA4mB,EAAAO,MAAA3mE,EAAAT,EAAAigD,EAAA,IACA4mB,EAAAiB,MAAArnE,EAAAT,EAAAigD,EAAA,IACA4mB,EAAAoB,MAAAxnE,EAAAT,EAAAigD,EAAA,IACA4mB,EAAAgB,OAAApnE,EAAAT,EAAAigD,EAAA,IACA4mB,EAAAmB,OAAAvnE,EAAAT,EAAAigD,EAAA,GACA,IAAAp5B,GAAAtmB,EAAAP,EAAAigD,EAAA,GACA4mB,GAAAyB,KAAAzhD,CACA,IAAA4gD,KACAviD,GAAA+6B,EAAA,EACA,QAAAtmD,GAAA,EAAqBA,EAAAktB,EAAqBltB,IAAA,CAC1C,GAAAitE,IACAgN,UAAA,OAAA5zE,EAAAklB,IACAwxD,YAAA,IAAA12E,EAAAklB,IACA8hD,MAAAhnE,EAAAklB,EAAA,GACAmiD,MAAArnE,EAAAklB,EAAA,GAEAyhD,GAAAC,EAAAC,GACAY,EAAAtoE,KAAAynE,GAEAjD,EAAAgE,IAAAd,EACAlD,EAAA8D,aACAD,EAAA7D,EAAA8D,GACA9D,EAAAyR,OACAzR,EAAA2R,MACA,MACA,YACA92E,EAAA+B,EAAAP,EAAAigD,EACA,IAAA02B,KAGA,QAFAzxD,EAAA+6B,EAAA,EAEA,IADAs2B,EAAAv2E,EAAAklB,OAEA,OACAsxD,EAAA,EACA9C,GAAA,CACA,MACA,QACA8C,EAAA,GACA9C,GAAA,CACA,MACA,QACA8C,EAAA,GACA9C,GAAA,CACA,MACA,SACA,SAAAt3E,OAAA,sBAAAm6E,GAMA,IAJAI,EAAAC,eAAA,IAAAJ,EACAG,EAAAjD,kBACAiD,EAAAhD,UAAA4C,GAAA,EACA/C,KACAtuD,EAAA1mB,EAAAyhD,GAAA,CACA,GAAA42B,KACA,KAAAL,GACAK,EAAA34B,QAAAl+C,EAAAklB,MAAA,EACA2xD,EAAA5C,GAAA,IAEA4C,EAAA34B,QAAAl+C,EAAAklB,IAAA,EACA2xD,EAAA5C,IAAA,EAAAj0E,EAAAklB,KAAA,EAAAllB,EAAAklB,EAAA,GACAA,GAAA,GAEAsuD,EAAAr0E,KAAA03E,GAEAF,EAAAlD,OAAAD,EACA7P,EAAA8S,WACA9S,EAAA0R,IAAAsB,GAEAhT,EAAAqJ,YAAAqI,IAAAsB,EACAhT,EAAAqJ,YAAAoI,OAEA,MACA,YACA52E,EAAA+B,EAAAP,EAAAigD,EACA,IAAA62B,KACA5xD,GAAA+6B,EAAA,CACA,IAAA82B,EAQA,QAPApT,EAAAgE,IAAAW,KAAA,IACAyO,EAAA/2E,EAAAklB,MAEA6xD,EAAAx2E,EAAAP,EAAAklB,GACAA,GAAA,GAGA,IADAqxD,EAAAv2E,EAAAklB,OAEA,OACAsxD,EAAA,EACA9C,GAAA,CACA,MACA,QACA8C,EAAA,GACA9C,GAAA,CACA,MACA,QACA8C,EAAA,GACA9C,GAAA,CACA,MACA,SACA,SAAAt3E,OAAA,sBAAAm6E,GAMA,IAJAO,EAAAF,eAAA,IAAAJ,EACAM,EAAApD,kBACAoD,EAAAnD,UAAA4C,GAAA,EACA/C,KACAtuD,EAAA1mB,EAAAyhD,GACA42B,KACA,IAAAL,GACAK,EAAA34B,QAAAl+C,EAAAklB,MAAA,EACA2xD,EAAA5C,GAAA,IAEA4C,EAAA34B,QAAAl+C,EAAAklB,IAAA,EACA2xD,EAAA5C,IAAA,EAAAj0E,EAAAklB,KAAA,EAAAllB,EAAAklB,EAAA,GACAA,GAAA,GAEAsuD,EAAAr0E,KAAA03E,EAEAC,GAAArD,OAAAD,EACA7P,EAAA8S,WACA9S,EAAAyR,IAAA2B,GAAAD,EAEAnT,EAAAqJ,YAAAoI,IAAA2B,GAAAD,CAEA,MACA,YACAt4E,EAAA+B,EAAAP,EAAAigD,EACA,IAAA+2B,KACA9xD,GAAA+6B,EAAA,CACA,IAAAg3B,GAAAj3E,EAAAklB,IACA8xD,GAAAjO,mCAAA,EAAAkO,GACAD,EAAA5G,iBAAA,EAAA6G,GACAD,EAAA1G,iBAAA,EAAA2G,GACAD,EAAArH,iBAAA3vE,EAAAklB,KACA8xD,EAAA/J,YAAA1sE,EAAAP,EAAAklB,GACAA,GAAA,EACA8xD,EAAArC,2BAAA30E,EAAAklB,KACA8xD,EAAA5J,yBAAAptE,EAAAklB,KACA8xD,EAAA5N,IAAA,MAAAppE,EAAAklB,MACA8xD,EAAA1N,IAAA,MAAAtpE,EAAAklB,KACA,IAAAgyD,GAAAl3E,EAAAklB,IAQA,IAPA8xD,EAAAG,mCAAA,EAAAD,GACAF,EAAAI,6BAAA,EAAAF,GACAF,EAAAK,+BAAA,EAAAH,GACAF,EAAAM,mBAAA,EAAAJ,GACAF,EAAAO,0BAAA,GAAAL,GACAF,EAAAlF,0BAAA,GAAAoF,GACAF,EAAAnD,yBAAA7zE,EAAAklB,KACA8xD,EAAAjO,gCAAA,CAEA,IADA,GAAAE,MACA/jD,EAAA1mB,EAAAyhD,GAAA,CACA,GAAAu3B,GAAAx3E,EAAAklB,IACA+jD,GAAA9pE,MACA6pE,IAAA,GAAAwO,EACAtO,IAAAsO,GAAA,IAGAR,EAAA/N,iBAEA,GAAAwO,KAgBA,IAfAT,EAAAG,iCACAM,EAAAt4E,KAAA,mCAEA63E,EAAAI,2BACAK,EAAAt4E,KAAA,6BAEA63E,EAAAK,6BACAI,EAAAt4E,KAAA,+BAEA63E,EAAAM,iBACAG,EAAAt4E,KAAA,mBAEA63E,EAAAO,wBACAE,EAAAt4E,KAAA,0BAEAs4E,EAAAj5E,OAAA,EAEA,KADA83E,IAAA,EACA,GAAAl6E,OAAA,4BAAAq7E,EAAAh7E,KAAA,UAEAknE,GAAA8S,WACA9S,EAAA0M,IAAA2G,GAEArT,EAAAqJ,YAAAqD,IAAA2G,EACArT,EAAAqJ,YAAAsI,OAEA,MACA,YACA92E,EAAA+B,EAAAP,EAAAigD,GACAynB,KACAA,EAAA90D,MAAArS,EAAAP,EAAAigD,EAAA,GACAynB,EAAAlpE,OAAAiC,EAAAT,EAAAigD,EAAA,GACAynB,EAAA11B,QAAA01B,EAAAlpE,OAAAyhD,EAAA,EACAynB,EAAAgQ,UAAA13E,EAAAigD,EAAA,GACAynB,EAAAiQ,WAAA33E,EAAAigD,EAAA,GACA0jB,EAAA8S,YAAA,EACA,IAAA/O,EAAAgQ,YACAhQ,EAAA2I,IAAA1M,EAAA0M,IACA3I,EAAA4N,IAAA3R,EAAA2R,IAAA94E,MAAA,GACAkrE,EAAA2N,IAAA1R,EAAA0R,IACA3N,EAAA0N,IAAAzR,EAAAyR,IAAA54E,MAAA,IAEAmnE,EAAAqJ,YAAAtF,CACA,MACA,YACAA,EAAA/D,EAAAqJ,YACA,IAAAtF,EAAAgQ,YACAxC,EAAAvR,EAAA+D,EAAA90D,OACA28D,EAAA5L,IAEAnlE,EAAAkpE,EAAA11B,QAAAiO,EACA4vB,EAAAlM,EAAA3jE,EAAAigD,EAAAzhD,EACA,MACA,YACA,WACA,WACA,WACAA,EAAA+B,EAAAP,EAAAigD,EACA,MACA,YACA,SAAA7jD,OAAA,kDACA,SACA,SAAAA,OAAA,4BAAA6E,EAAAqY,SAAA,KAEA2mC,GAAAzhD,GAEI,MAAAnC,GACJi6E,GAAAh9E,KAAAotE,qBACAzqE,EAAA,cAAAI,EAAAwV,SAEAhW,EAAA,gCAAAQ,EAAAwV,SAGAvY,KAAAytB,MAAAstD,EAAA1Q,GACArqE,KAAA0e,MAAA2rD,EAAAgE,IAAAT,KAAAvD,EAAAgE,IAAAZ,MACAztE,KAAA2e,OAAA0rD,EAAAgE,IAAAJ,KAAA5D,EAAAgE,IAAAP,MACA9tE,KAAAutB,gBAAA88C,EAAAgE,IAAAW,MA05BA,IAAAwI,GAAA,WACA,QAAAA,GAAA94D,EAAAC,GACA,GAAA2/D,GAAAz3E,EAAApB,KAAA+U,IAAAkE,EAAAC,IAAA,CACA3e,MAAAu+E,SACA,QAAAl+E,GAAA,EAAkBA,EAAAi+E,EAAkBj+E,IAAA,CACpC,GAAAyB,IACA4c,QACAC,SACA+O,SAEA1tB,MAAAu+E,OAAA14E,KAAA/D,GACA4c,EAAAjZ,KAAAymC,KAAAxtB,EAAA,GACAC,EAAAlZ,KAAAymC,KAAAvtB,EAAA,IA2CA,MAxCA64D,GAAAh2E,WACAglB,MAAA,SAAAnmB,EAAAurB,GAEA,IADA,GAAA9pB,GAAA08E,EAAA,EAAA99E,EAAA,EACA89E,EAAAx+E,KAAAu+E,OAAAr5E,QAAA,CACApD,EAAA9B,KAAAu+E,OAAAC,EACA,IAAAllE,GAAAjZ,EAAAurB,EAAA9pB,EAAA4c,KACA,QAAAzZ,KAAAnD,EAAA4rB,MAAApU,GAAA,CACA5Y,EAAAoB,EAAA4rB,MAAApU,EACA,OAEAxX,EAAAwX,QACAjZ,IAAA,EACAurB,IAAA,EACA4yD,IAEAA,IACA18E,EAAA9B,KAAAu+E,OAAAC,GACA18E,EAAA4rB,MAAA5rB,EAAAwX,OAAA5Y,EACAV,KAAAw+E,qBACAx+E,MAAAU,OAEA+2E,eAAA,WACA,GAAA31E,GAAA9B,KAAAu+E,OAAAv+E,KAAAw+E,aACA18E,GAAA4rB,MAAA5rB,EAAAwX,UAEAo+D,UAAA,WACA,GAAA8G,GAAAx+E,KAAAw+E,aACA18E,EAAA9B,KAAAu+E,OAAAC,GACA99E,EAAAoB,EAAA4rB,MAAA5rB,EAAAwX,MAEA,SADAklE,EACA,GACAx+E,KAAAU,SACA,IAEAV,KAAAw+E,eACA18E,EAAA9B,KAAAu+E,OAAAC,GACA18E,EAAA4rB,MAAA5rB,EAAAwX,OAAA5Y,GACA,KAGA82E,KAEAD,EAAA,WACA,QAAAA,GAAA74D,EAAAC,EAAA8/D,GACA,GAAAH,GAAAz3E,EAAApB,KAAA+U,IAAAkE,EAAAC,IAAA,CACA3e,MAAAu+E,SACA,QAAAl+E,GAAA,EAAkBA,EAAAi+E,EAAkBj+E,IAAA,CAEpC,OADAqtB,GAAA,GAAA3nB,YAAA2Y,EAAAC,GACAiN,EAAA,EAAAwc,EAAA1a,EAAAxoB,OAAsC0mB,EAAAwc,EAAQxc,IAC9C8B,EAAA9B,GAAA6yD,CAEA,IAAA38E,IACA4c,QACAC,SACA+O,QAEA1tB,MAAAu+E,OAAA14E,KAAA/D,GACA4c,EAAAjZ,KAAAymC,KAAAxtB,EAAA,GACAC,EAAAlZ,KAAAymC,KAAAvtB,EAAA,IAuDA,MApDA44D,GAAA/1E,WACAglB,MAAA,SAAAnmB,EAAAurB,EAAA8yD,GAEA,IADA,GAAAF,GAAA,EACAA,EAAAx+E,KAAAu+E,OAAAr5E,QAAA,CACA,GAAApD,GAAA9B,KAAAu+E,OAAAC,GACAllE,EAAAjZ,EAAAurB,EAAA9pB,EAAA4c,KACA5c,GAAAwX,OACA,IAAA5Y,GAAAoB,EAAA4rB,MAAApU,EACA,UAAA5Y,EACA,KAEA,IAAAA,EAAAg+E,EAGA,MAFA1+E,MAAAw+E,eACAx+E,KAAA2+E,mBACA,CAEAt+E,KAAA,EACAurB,IAAA,EACA4yD,IAGA,MADAx+E,MAAAw+E,eAAA,GACA,GAEA/G,eAAA,SAAAiH,GACA,GAAA58E,GAAA9B,KAAAu+E,OAAAv+E,KAAAw+E,aACA18E,GAAA4rB,MAAA5rB,EAAAwX,OAAAolE,EAAA,EACA1+E,KAAA2+E,mBAEAA,gBAAA,WAIA,IAHA,GAAAC,GAAA5+E,KAAAw+E,aACA18E,EAAA9B,KAAAu+E,OAAAK,GACAC,EAAA/8E,EAAA4rB,MAAA5rB,EAAAwX,SACAslE,GAAA,GACA98E,EAAA9B,KAAAu+E,OAAAK,GACA98E,EAAA4rB,MAAA5rB,EAAAwX,OAAAulE,GAGAnH,UAAA,WACA,GAAA8G,GAAAx+E,KAAAw+E,aACA18E,EAAA9B,KAAAu+E,OAAAC,GACA99E,EAAAoB,EAAA4rB,MAAA5rB,EAAAwX,MAGA,OAFAxX,GAAA4rB,MAAA5rB,EAAAwX,OAAA,QACAklE,EACA,KAGAx+E,KAAAw+E,eACA18E,EAAA9B,KAAAu+E,OAAAC,GACA18E,EAAA4rB,MAAA5rB,EAAAwX,OAAA5Y,GACA,KAGA62E,KAEAwB,EAAA,WA0OA,QAAAA,GAAAr6D,EAAAC,EAAAwyD,EAAAyG,EAAAU,GACAt4E,KAAA0e,QACA1e,KAAA2e,SACA3e,KAAA8+E,kBAAA,OAAA3N,EAAA4N,EAAA,OAAA5N,EAAA6N,EAAAC,CACA,IAAAC,GAAAxgE,EAAAC,CACA3e,MAAAm/E,sBAAA,GAAAp5E,YAAAm5E,GACAl/E,KAAAy5E,gBAAA,GAAA1zE,YAAAm5E,GACAl/E,KAAA25E,qBAAArB,EAAA,MAAAhoD,aAAA4uD,GAAA5G,EAAA,KAAAhxE,aAAA43E,GAAA,GAAAn5E,YAAAm5E,GACAl/E,KAAAo/E,gBAAA,GAAAr5E,YAAAm5E,EACA,IAAAtF,GAAA,GAAA7zE,YAAAm5E,EACA,QAAAtH,EACA,OAAAv3E,GAAA,EAAmBA,EAAA6+E,EAAsB7+E,IACzCu5E,EAAAv5E,GAAAu3E,CAGA53E,MAAA45E,cACA55E,KAAAwmB,QAzPA,GAAA64D,GAAA,GACAC,EAAA,GACAL,EAAA,GAAAl5E,aACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAEAi5E,EAAA,GAAAj5E,aACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,IAEAg5E,EAAA,GAAAh5E,aACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,E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AGA,KAAAA,EAAAo3F,EAA2Bp3F,GAAAq3F,IAAyBr3F,EAAA,CACpD,GAAAkF,IAAA,CACA,KAAA3G,EAAA,EAAAmG,EAAA+3E,EAAAr5E,OAAiC7E,EAAAmG,IAAQnG,EACzCk+E,EAAAl+E,GAAAyB,EACAkF,GAAA,IACAmxF,EAAA/9B,EAAApzD,EAAA3G,GACA2G,GAAA,GAEIA,EAAA,IACJA,EAAA3G,EAGA2G,IAAA,GACAmxF,EAAA/9B,EAAApzD,EAAAu3E,EAAAr5E,QAGA,IAAA7E,EAAA,EAAAmG,EAAA4zD,EAAAl1D,OAA+B7E,EAAAmG,IAAQnG,EAAA,CACvC,GAAA0I,GAAAqxD,EAAA/5D,EACA,OAAA0I,GAAA,MAAAA,IACAqxD,EAAA/5D,GAAA,IAGA,MAAAg4F,GAAAj+B,EAAAj3D,KAAA,IAAAm1F,GAvuBA,GAAAx1E,GAAA5iB,EAAA,GACAqC,EAAAugB,EAAAvgB,KACAokCAx+B,KACA9yB,IAkMA3nC,GAAAy0D,QAIA,SAAA10D,EAAAC,EAAAO,GAEA,YAEA,IAAA05C,IACA,UACA,QACA,SACA,WACA,aACA,SACA,UACA,YACA,aACA,YACA,aACA,WACA,OACA,QACA,SACA,SACA,QACA,OACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,QACA,YACA,OACA,QACA,UACA,WACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,cACA,YACA,eACA,cACA,aACA,YACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,YACA,MACA,aACA,aACA,aACA,OACA,WACA,WACA,MACA,SACA,UACA,WACA,cACA,eACA,gBACA,gBACA,iBACA,KACA,KACA,SACA,SACA,YACA,iBACA,YACA,SACA,iBACA,eACA,gBACA,iBACA,WACA,cACA,eACA,QACA,QACA,aACA,QACA,SACA,QACA,YACA,WACA,OACA,UACA,eACA,SACA,QACA,SACA,KACA,cACA,SACA,SACA,KACA,eACA,KACA,WACA,SACA,SACA,KACA,aACA,cACA,aACA,KACA,YACA,MACA,UACA,YACA,QACA,aACA,SACA,YACA,SACA,QACA,gBACA,cACA,aACA,QACA,MACA,WACA,gBACA,YACA,SACA,cACA,YACA,SACA,QACA,SACA,WACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,YACA,SACA,SACA,cACA,YACA,SACA,QACA,SACA,WACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,YACA,UAEAC,GACA,UACA,QACA,cACA,oBACA,iBACA,iBACA,iBACA,aACA,oBACA,qBACA,iBACA,iBACA,QACA,SACA,SACA,WACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,QACA,YACA,gBACA,sBACA,iBACA,gBACA,YACA,YACA,eACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,KACA,KACA,KACA,MACA,MACA,oBACA,qBACA,kBACA,iBACA,aACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,SACA,gBACA,YACA,SACA,aACA,kBACA,eACA,cACA,cACA,cACA,gBACA,aACA,aACA,iBACA,cACA,aACA,iBACA,cACA,YACA,eACA,aACA,UACA,gBACA,oBACA,YACA,eACA,cACA,eACA,WACA,YACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,iBACA,iBACA,gBACA,cACA,cACA,mBACA,cACA,iBACA,aACA,UACA,gBACA,cACA,cACA,mBACA,iBACA,cACA,cACA,mBACA,iBACA,WACA,cACA,cACA,cACA,mBACA,cACA,iBACA,UACA,cACA,cACA,cACA,mBACA,iBACA,cACA,aACA,kBAEAC,GACA,UACA,QACA,iBACA,iBACA,oBACA,qBACA,iBACA,iBACA,QACA,SACA,SACA,WACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,QACA,YACA,gBACA,sBACA,iBACA,YACA,YACA,eACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,YACA,KACA,KACA,KACA,MACA,MACA,oBACA,qBACA,iBACA,gBACA,YACA,SACA,eACA,aACA,iBACA,aACA,UACA,gBACA,YACA,eACA,cACA,eACA,WACA,YACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,cACA,cACA,gBACA,eACA,eACA,cACA,gBACA,gBACA,eACA,eACA,iBACA,iBACA,gBAEAn6C,GAAAi6C,kBACAj6C,EAAAk6C,gBACAl6C,EAAAm6C,uBAIA,SAAAp6C,EAAAC,EAAAO,GAEA,YAEA,IAAA4iB,GAAA5iB,EAAA,GACAmlB,EAAAnlB,EAAA,GACAqgC,EAAArgC,EAAA,GACAyyD,EAAAzyD,EAAA,GACAuZ,EAAAqJ,EAAArJ,KACArW,EAAA0f,EAAA1f,OACAb,EAAAugB,EAAAvgB,KACAI,EAAAmgB,EAAAngB,MACA6F,EAAAsa,EAAAta,MACAE,EAAAoa,EAAApa,SACAqQ,EAAA+J,EAAA/J,qBACAnH,EAAAkR,EAAAlR,oBACAiQ,EAAAwD,EAAAxD,MACAE,EAAAsD,EAAAtD,OACAE,EAAAoD,EAAApD,MACAW,EAAAyC,EAAAzC,SACAgD,EAAA2a,EAAA3a,OACAoe,EAAA2uB,EAAA3uB,MACAo1D,GACA,iBACA,kBACA,oBACA,oBACA,WACA,WACA,OACA,YACA,YACA,OACA,cACA,cACA,cACA,cACA,cACA,eACA,eACA,cACA,cACA,QACA,aACA,aACA,QACA,eACA,eACA,eACA,eACA,eACA,eACA,eACA,cACA,cACA,cACA,cACA,cACA,cACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,iBACA,OACA,OACA,SACA,SACA,YACA,YACA,SACA,SACA,SACA,SACA,YACA,YACA,YACA,YACA,cACA,cACA,QACA,QACA,QACA,aACA,aACA,QACA,WACA,WACA,OACA,OACA,YACA,YACA,UACA,UACA,aACA,aACA,YACA,YACA,QACA,QACA,cACA,cACA,aACA,aACA,IACA,aACA,aACA,aACA,aACA,cACA,cACA,cACA,cACA,cACA,cACA,aACA,aACA,UACA,WACA,YACA,YACA,QACA,cACA,cACA,QACA,cACA,iBACA,iBACA,cACA,cACA,cACA,WACA,QACA,QACA,SACA,SACA,QACA,gBACA,gBACA,iBACA,iBACA,iBACA,iBACA,gBACA,gBACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,eACA,eACA,gBACA,mBACA,mBACA,gBACA,iBACA,iBACA,iBACA,iBACA,gBACA,gBACA,qBACA,qBACA,qBACA,qBACA,oBACA,oBACA,sBACA,mBACA,mBACA,sBACA,sBACA,0BACA,0BACA,eACA,eACA,gBACA,gBACA,gBACA,gBACA,eACA,eACA,IACA,aAEAC,EAAA,WACA,QAAAA,GAAAx1B,GACA7jE,KAAAs5F,8BAMAt5F,KAAAu5F,mBAAA,EACAv5F,KAAAw5F,QACAx5F,KAAAY,KAAA,GACAZ,KAAAs+D,UAAA,EACAt+D,KAAA+jE,QAAA,KACA/jE,KAAA6jE,cA+FA,MA7FAw1B,GAAA73F,WACAi4F,kBAAA,SAAAr4F,EAAAopD,EAAAD,GACAvqD,KAAAs5F,gBAAAl4F,EAAA,GAAAyE,KAAA2kD,EAAAD,GACAvqD,KAAAu5F,sBAEAG,YAAA,SAAAlvC,EAAAD,EAAAovC,GACA,KAAAnvC,GAAAD,GACAvqD,KAAAw5F,KAAAhvC,KAAAmvC,KAGAC,WAAA,SAAApvC,EAAAD,EAAAovC,GAEA,IADA,GAAAE,GAAAF,EAAAz0F,OAAA,EACAslD,GAAAD,GACAvqD,KAAAw5F,KAAAhvC,KAAAmvC,EACAA,IAAA70C,OAAA,EAAA+0C,GAAAz0F,OAAAC,aAAAs0F,EAAA3zF,WAAA6zF,GAAA,IAGAC,kBAAA,SAAAtvC,EAAAD,EAAAlpB,GAEA,IADA,GAAAhhC,GAAA,EAAAmG,EAAA66B,EAAAn8B,OACAslD,GAAAD,GAAAlqD,EAAAmG,GACAxG,KAAAw5F,KAAAhvC,GAAAnpB,EAAAhhC,OACAmqD,GAGAuvC,OAAA,SAAA1uF,EAAA2uF,GACAh6F,KAAAw5F,KAAAnuF,GAAA2uF,GAEAv1F,OAAA,SAAAkD,GACA,MAAA3H,MAAAw5F,KAAA7xF,IAEAsyF,SAAA,SAAAtyF,GACA,WAAA1C,KAAAjF,KAAAw5F,KAAA7xF,IAEA0c,QAAA,SAAAha,GACA,GAEAhK,GAFA+iB,EAAApjB,KAAAw5F,KACAt0F,EAAAke,EAAAle,MAEA,IAAAA,GAAA,MACA,IAAA7E,EAAA,EAAeA,EAAA6E,EAAY7E,QAC3B4E,KAAAme,EAAA/iB,IACAgK,EAAAhK,EAAA+iB,EAAA/iB,QAIA,KAAAA,IAAAL,MAAAw5F,KACAnvF,EAAAhK,EAAA+iB,EAAA/iB,KAIA65F,WAAA,SAAAx5F,GACA,MAAAV,MAAAw5F,KAAAxnD,QAAAtxC,IAEA4jE,OAAA,WACA,MAAAtkE,MAAAw5F,MAEAW,aAAA,SAAAv1F,EAAAsC,EAAA+Y,GAIA,OAHAxf,GAAA,EACA64F,EAAAt5F,KAAAs5F,gBACAc,EAAAp6F,KAAAs5F,gBAAAp0F,OACA9D,EAAA,EAAkBA,EAAAg5F,EAAwBh5F,IAAA,CAC1CX,MAAA,EAAAmE,EAAAoB,WAAAkB,EAAA9F,MAAA,CAEA,QADAi5F,GAAAf,EAAAl4F,GACAqpB,EAAA,EAAAoB,EAAAwuE,EAAAn1F,OAA+CulB,EAAAoB,GAAQ,CACvD,GAAA2+B,GAAA6vC,EAAA5vE,KACA8/B,EAAA8vC,EAAA5vE,IACA,IAAAhqB,GAAA+pD,GAAA/pD,GAAA8pD,EAGA,MAFAtqC,GAAAwjD,SAAAhjE,OACAwf,EAAA/a,OAAA9D,EAAA,IAKA6e,EAAAwjD,SAAA,EACAxjD,EAAA/a,OAAA,GAEAA,aACA,MAAAlF,MAAAw5F,KAAAt0F,QAEAo1F,qBACA,kBAAAt6F,KAAAY,MAAA,eAAAZ,KAAAY,KACA,QAEA,YAAAZ,KAAAw5F,KAAAt0F,OACA,QAEA,QAAA7E,GAAA,EAAkBA,EAAA,MAAaA,IAC/B,GAAAL,KAAAw5F,KAAAn5F,OACA,QAGA,YAGAg5F,KAEAnlC,EAAA,WACA,QAAAA,GAAAoK,EAAAl9D,GACAi4F,EAAA94F,KAAAP,MACAA,KAAAs+D,WACAt+D,KAAAy5F,kBAAAr4F,EAAA,SA8CA,MA5CAqY,GAAAwD,QAAAi3C,EAAAmlC,MACAnlC,EAAA1yD,WACAi4F,kBAAAJ,EAAA73F,UAAAi4F,kBACAC,YAAA,SAAAlvC,EAAAD,EAAAovC,GACAh3F,EAAA,gCAEAi3F,WAAA,SAAApvC,EAAAD,EAAAovC,GACAh3F,EAAA,+BAEAm3F,kBAAA,SAAAtvC,EAAAD,EAAAlpB,GACA1+B,EAAA,sCAEAo3F,OAAA,SAAA1uF,EAAA2uF,GACAr3F,EAAA,8BAEA8B,OAAA,SAAAkD,GACA,MAAAa,GAAAb,OAAA,MAAAA,MAAA1C,IAEAg1F,SAAA,SAAAtyF,GACA,MAAAa,GAAAb,OAAA,OAEA0c,QAAA,SAAAha,GACA,OAAAhK,GAAA,EAAkBA,GAAA,MAAaA,IAC/BgK,EAAAhK,MAGA65F,WAAA,SAAAx5F,GACA,MAAA8H,GAAA9H,OAAA,MAAAA,GAAA,GAEA4jE,OAAA,WAEA,OADAlhD,GAAA,GAAAxa,OAAA,OACAvI,EAAA,EAAkBA,GAAA,MAAaA,IAC/B+iB,EAAA/iB,IAEA,OAAA+iB,IAEA+2E,aAAAd,EAAA73F,UAAA24F,aACAj1F,aACA,cAEAo1F,qBACA33F,EAAA,uCAGAuxD,KAEAqmC,EAAA,WACA,QAAAC,GAAA3/E,EAAAwM,GAEA,OADAjmB,GAAA,EACAf,EAAA,EAAiBA,GAAAgnB,EAAWhnB,IAC5Be,KAAA,EAAAyZ,EAAAxa,EAEA,OAAAe,KAAA,EAEA,QAAAq5F,GAAA5/E,EAAAwM,GACA,WAAAA,EACAjiB,OAAAC,aAAAwV,EAAA,GAAAA,EAAA,IAEA,IAAAwM,EACAjiB,OAAAC,aAAAwV,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEAzV,OAAAC,aAAAC,MAAA,KAAAuV,EAAAjV,SAAA,EAAAyhB,EAAA,IAEA,QAAAqzE,GAAA7/E,EAAAf,EAAAuN,GAEA,OADA5mB,GAAA,EACAJ,EAAAgnB,EAAoBhnB,GAAA,EAAQA,IAC5BI,GAAAoa,EAAAxa,GAAAyZ,EAAAzZ,GACAwa,EAAAxa,GAAA,IAAAI,EACAA,IAAA,EAGA,QAAAk6F,GAAA9/E,EAAAwM,GAEA,OADA5mB,GAAA,EACAJ,EAAAgnB,EAAoBhnB,GAAA,GAAAI,EAAA,EAAiBJ,IACrCI,GAAAoa,EAAAxa,GACAwa,EAAAxa,GAAA,IAAAI,EACAA,IAAA,EAKA,QAAAm6F,GAAAl0F,GACA1G,KAAAuH,OAAAb,EACA1G,KAAAyG,IAAA,EACAzG,KAAAiZ,IAAAvS,EAAAxB,OACAlF,KAAAu5B,OAAA,GAAAxzB,YAAA80F,GAuEA,QAAAC,GAAAp0F,EAAAk9D,EAAA+d,GACA,UAAAt4E,SAAA,SAAAC,EAAAC,GACA,GAAAoe,GAAA,GAAAizE,GAAAl0F,GACAq0C,EAAApzB,EAAAozE,UACAn3B,GAAAtF,YAAA,EAAAvjB,EASA,KARA,GAMApzC,GACAmS,EAPAiqD,EAAA,KACA/8D,EAAA,GAAAjB,YAAAi1F,GACA/hF,EAAA,GAAAlT,YAAAi1F,GACAC,EAAA,GAAAl1F,YAAAi1F,GACAz2B,EAAA,GAAAx+D,YAAAi1F,GACA1xC,EAAA,GAAAvjD,YAAAi1F,IAGAlhF,EAAA6N,EAAAozE,aAAA,IACA,GAAAv6E,GAAA1G,GAAA,CACA,QAAA0G,EAAA,CAWA,GAAA06E,MAAA,GAAAphF,GACAqhF,EAAA,GAAArhF,CACA1W,GAAA+3F,EAAA,GAAAH,EACA,IAEA36F,GAFA+6F,EAAA,EACAC,EAAA1zE,EAAA2zE,YAEA,QAAA96E,GACA,OAKA,IAJAmH,EAAA4zE,QAAAv0F,EAAAm0F,GACAxzE,EAAA6zE,cAAAviF,EAAAkiF,GACAT,EAAAzhF,EAAAjS,EAAAm0F,GACAv3B,EAAA61B,kBAAA0B,EAAA,EAAAX,EAAAxzF,EAAAm0F,GAAAX,EAAAvhF,EAAAkiF,IACA96F,EAAA,EAAgBA,EAAAg7F,EAAmBh7F,IACnCs6F,EAAA1hF,EAAAkiF,GACAxzE,EAAA6zE,cAAAx0F,EAAAm0F,GACAT,EAAA1zF,EAAAiS,EAAAkiF,GACAxzE,EAAA6zE,cAAAviF,EAAAkiF,GACAT,EAAAzhF,EAAAjS,EAAAm0F,GACAv3B,EAAA61B,kBAAA0B,EAAA,EAAAX,EAAAxzF,EAAAm0F,GAAAX,EAAAvhF,EAAAkiF,GAEA,MACA,QAKA,IAJAxzE,EAAA4zE,QAAAv0F,EAAAm0F,GACAxzE,EAAA6zE,cAAAviF,EAAAkiF,GACAT,EAAAzhF,EAAAjS,EAAAm0F,GACAxzF,EAAAggB,EAAA2zE,aACAj7F,EAAA,EAAgBA,EAAAg7F,EAAmBh7F,IACnCs6F,EAAA1hF,EAAAkiF,GACAxzE,EAAA6zE,cAAAx0F,EAAAm0F,GACAT,EAAA1zF,EAAAiS,EAAAkiF,GACAxzE,EAAA6zE,cAAAviF,EAAAkiF,GACAT,EAAAzhF,EAAAjS,EAAAm0F,GACAxzF,EAAAggB,EAAA2zE,YAEA,MACA,QAIA,IAHA3zE,EAAA4zE,QAAAN,EAAAE,GACAxzF,EAAAggB,EAAA2zE,aACA13B,EAAAm2B,OAAAS,EAAAS,EAAAE,GAAAxzF,GACAtH,EAAA,EAAgBA,EAAAg7F,EAAmBh7F,IACnCs6F,EAAAM,EAAAE,GACAD,IACAvzE,EAAA6zE,cAAAlyC,EAAA6xC,GACAT,EAAAO,EAAA3xC,EAAA6xC,IAEAxzF,EAAAggB,EAAA8zE,cAAA9zF,EAAA,GACAi8D,EAAAm2B,OAAAS,EAAAS,EAAAE,GAAAxzF,EAEA,MACA,QAMA,IALAggB,EAAA4zE,QAAAv0F,EAAAm0F,GACAxzE,EAAA6zE,cAAAviF,EAAAkiF,GACAT,EAAAzhF,EAAAjS,EAAAm0F,GACAxzF,EAAAggB,EAAA2zE,aACA13B,EAAA81B,YAAAc,EAAAxzF,EAAAm0F,GAAAX,EAAAvhF,EAAAkiF,GAAAxzF,GACAtH,EAAA,EAAgBA,EAAAg7F,EAAmBh7F,IACnCs6F,EAAA1hF,EAAAkiF,GACAD,EAIAl0F,EAAAL,IAAAsS,IAHA0O,EAAA6zE,cAAAx0F,EAAAm0F,GACAT,EAAA1zF,EAAAiS,EAAAkiF,IAIAxzE,EAAA6zE,cAAAviF,EAAAkiF,GACAT,EAAAzhF,EAAAjS,EAAAm0F,GACAxzF,EAAAggB,EAAA2zE,aACA13B,EAAA81B,YAAAc,EAAAxzF,EAAAm0F,GAAAX,EAAAvhF,EAAAkiF,GAAAxzF,EAEA,MACA,QAIA,IAHAggB,EAAA4zE,QAAAN,EAAAG,GACAzzE,EAAA4zE,QAAAh3B,EAAA42B,GACAv3B,EAAAm2B,OAAAS,EAAAS,EAAAG,GAAAX,EAAAl2B,EAAA42B,IACA96F,EAAA,EAAgBA,EAAAg7F,EAAmBh7F,IACnCs6F,EAAAM,EAAAG,GACAF,IACAvzE,EAAA6zE,cAAAlyC,EAAA8xC,GACAV,EAAAO,EAAA3xC,EAAA8xC,IAEAT,EAAAp2B,EAAA42B,GACAxzE,EAAA+zE,cAAApyC,EAAA6xC,GACAT,EAAAn2B,EAAAjb,EAAA6xC,GACAv3B,EAAAm2B,OAAAS,EAAAS,EAAAG,GAAAX,EAAAl2B,EAAA42B,GAEA,MACA,QAMA,IALAxzE,EAAA4zE,QAAAv0F,EAAAo0F,GACAzzE,EAAA6zE,cAAAviF,EAAAmiF,GACAV,EAAAzhF,EAAAjS,EAAAo0F,GACAzzE,EAAA4zE,QAAAh3B,EAAA42B,GACAv3B,EAAAg2B,WAAAY,EAAAxzF,EAAAo0F,GAAAZ,EAAAvhF,EAAAmiF,GAAAX,EAAAl2B,EAAA42B,IACA96F,EAAA,EAAgBA,EAAAg7F,EAAmBh7F,IACnCs6F,EAAA1hF,EAAAmiF,GACAF,EAIAl0F,EAAAL,IAAAsS,IAHA0O,EAAA6zE,cAAAx0F,EAAAo0F,GACAV,EAAA1zF,EAAAiS,EAAAmiF,IAIAzzE,EAAA6zE,cAAAviF,EAAAmiF,GACAV,EAAAzhF,EAAAjS,EAAAo0F,GACAzzE,EAAA4zE,QAAAh3B,EAAA42B,GACAv3B,EAAAg2B,WAAAY,EAAAxzF,EAAAo0F,GAAAZ,EAAAvhF,EAAAmiF,GAAAX,EAAAl2B,EAAA42B,GAEA,MACA,SAEA,WADA5xF,GAAA,GAAAzG,OAAA,oCAAA0d,SApHA,WAAA1G,GACA,OACA6N,EAAAg0E,YACA,MACA,QACA53B,EAAAp8C,EAAAg0E,cAmHA,GAAA53B,EAEA,WADAz6D,GAAAq4E,EAAA5d,GAGAz6D,GAAAs6D,KAGA,QAAA22B,MA5NA,GAAAS,GAAA,GACAH,EAAA,EA8NA,OAvNAD,GAAAp5F,WACAu5F,SAAA,WACA,MAAA/6F,MAAAyG,KAAAzG,KAAAiZ,KACA,EAEAjZ,KAAAuH,OAAAvH,KAAAyG,QAEA60F,WAAA,WACA,GACAlU,GADAhmF,EAAA,CAEA,IACA,GAAA0Y,GAAA9Z,KAAA+6F,UACAjhF,GAAA,GACAnX,EAAA,2BAEAykF,IAAA,IAAAttE,GACA1Y,KAAA,MAAA0Y,SACIstE,EACJ,OAAAhmF,IAEAq6F,WAAA,WACA,GAAAr6F,GAAApB,KAAAs7F,YACA,UAAAl6F,QAAA,GAAAA,IAAA,GAEAm6F,QAAA,SAAA1/E,EAAAwL,GACAxL,EAAAlV,IAAA3G,KAAAuH,OAAA3B,SAAA5F,KAAAyG,IAAAzG,KAAAyG,IAAA4gB,EAAA,IACArnB,KAAAyG,KAAA4gB,EAAA,GAEAm0E,cAAA,SAAA3/E,EAAAwL,GACA,GAAA+/D,GACApkF,EAAAhD,KAAAu5B,OAAAqiE,EAAA,CACA,IACA,GAAA9hF,GAAA9Z,KAAA+6F,UACAjhF,GAAA,GACAnX,EAAA,2BAEAykF,IAAA,IAAAttE,GACA9W,EAAA44F,KAAA,IAAA9hF,SACIstE,EAEJ,KADA,GAAA/mF,GAAAgnB,EAAA9f,EAAA,EAAAivE,EAAA,EACAn2E,GAAA,IACA,KAAAm2E,EAAA,GAAAxzE,EAAAkC,OAAA,GACAqC,EAAAvE,IAAA44F,IAAAplB,EAAAjvE,EACAivE,GAAA,CAEA36D,GAAAxb,GAAA,IAAAkH,EACAlH,IACAkH,IAAA,EACAivE,GAAA,IAGAklB,cAAA,SAAA7/E,EAAAwL,GACArnB,KAAAw7F,cAAA3/E,EAAAwL,EAGA,QAFAzL,GAAA,EAAAC,EAAAwL,GAAA,MACA5mB,EAAA,EACAJ,EAAA,EAAkBA,GAAAgnB,EAAWhnB,IAC7BI,GAAA,EAAAA,IAAA,EAAAob,EAAAxb,GACAwb,EAAAxb,GAAAI,GAAA,EAAAmb,GAGA+/E,WAAA,WAGA,OAFAtyE,GAAArpB,KAAAs7F,aACA35F,EAAA,GACAtB,EAAA,EAAkBA,EAAAgpB,EAAShpB,IAC3BsB,GAAAyD,OAAAC,aAAArF,KAAAs7F,aAEA,OAAA35F,KAoJA44F,EAAA/4F,WAA+B3B,QAAAi7F,GAC/BP,KAEAtmC,EAAA,WACA,QAAA4nC,GAAAj3F,GAEA,OADAiW,GAAA,EACAxa,EAAA,EAAiBA,EAAAuE,EAAAM,OAAgB7E,IACjCwa,KAAA,EAAAjW,EAAAoB,WAAA3F,EAEA,OAAAwa,KAAA,EAEA,QAAAihF,GAAA13F,GACAsE,EAAAtE,IACAzB,EAAA,oCAGA,QAAAo5F,GAAA33F,GACAoE,EAAApE,IACAzB,EAAA,iCAGA,QAAAq5F,GAAAp4B,EAAAljC,GACA,QACA,GAAAt8B,GAAAs8B,EAAAM,QACA,IAAAnf,EAAAzd,GACA,KAEA,IAAA6d,EAAA7d,EAAA,aACA,MAEA03F,GAAA13F,EACA,IAAAiH,GAAAwwF,EAAAz3F,EACAA,GAAAs8B,EAAAM,SACA86D,EAAA13F,EACA,IAAA41F,GAAA51F,CACAw/D,GAAAm2B,OAAA1uF,EAAA2uF,IAGA,QAAAiC,GAAAr4B,EAAAljC,GACA,QACA,GAAAt8B,GAAAs8B,EAAAM,QACA,IAAAnf,EAAAzd,GACA,KAEA,IAAA6d,EAAA7d,EAAA,cACA,MAEA03F,GAAA13F,EACA,IAAAomD,GAAAqxC,EAAAz3F,EACAA,GAAAs8B,EAAAM,SACA86D,EAAA13F,EACA,IAAAmmD,GAAAsxC,EAAAz3F,EAEA,IADAA,EAAAs8B,EAAAM,SACAx4B,EAAApE,IAAAsE,EAAAtE,GAAA,CACA,GAAAu1F,GAAAnxF,EAAApE,GAAAgB,OAAAC,aAAAjB,IACAw/D,GAAAg2B,WAAApvC,EAAAD,EAAAovC,OACI,KAAA13E,EAAA7d,EAAA,KASJ,KARAA,GAAAs8B,EAAAM,QAEA,KADA,GAAAK,OACApf,EAAA7d,EAAA,OAAAyd,EAAAzd,IACAi9B,EAAAx7B,KAAAzB,GACAA,EAAAs8B,EAAAM,QAEA4iC,GAAAk2B,kBAAAtvC,EAAAD,EAAAlpB,IAKA1+B,EAAA,qBAEA,QAAAu5F,GAAAt4B,EAAAljC,GACA,QACA,GAAAt8B,GAAAs8B,EAAAM,QACA,IAAAnf,EAAAzd,GACA,KAEA,IAAA6d,EAAA7d,EAAA,cACA,MAEA03F,GAAA13F,EACA,IAAAiH,GAAAwwF,EAAAz3F,EACAA,GAAAs8B,EAAAM,SACA+6D,EAAA33F,EACA,IAAA41F,GAAA51F,CACAw/D,GAAAm2B,OAAA1uF,EAAA2uF,IAGA,QAAAmC,GAAAv4B,EAAAljC,GACA,QACA,GAAAt8B,GAAAs8B,EAAAM,QACA,IAAAnf,EAAAzd,GACA,KAEA,IAAA6d,EAAA7d,EAAA,eACA,MAEA03F,GAAA13F,EACA,IAAAomD,GAAAqxC,EAAAz3F,EACAA,GAAAs8B,EAAAM,SACA86D,EAAA13F,EACA,IAAAmmD,GAAAsxC,EAAAz3F,EACAA,GAAAs8B,EAAAM,SACA+6D,EAAA33F,EACA,IAAAu1F,GAAAv1F,CACAw/D,GAAA81B,YAAAlvC,EAAAD,EAAAovC,IAGA,QAAAyC,GAAAx4B,EAAAljC,GACA,QACA,GAAAt8B,GAAAs8B,EAAAM,QACA,IAAAnf,EAAAzd,GACA,KAEA,IAAA6d,EAAA7d,EAAA,qBACA,MAEA,KAAAsE,EAAAtE,GACA,KAEA,IAAAomD,GAAAqxC,EAAAz3F,EAEA,IADAA,EAAAs8B,EAAAM,UACAt4B,EAAAtE,GACA,KAEA,IAAAmmD,GAAAsxC,EAAAz3F,EACAw/D,GAAA61B,kBAAAr1F,EAAAc,OAAAslD,EAAAD,GAEA5nD,EAAA,4BAEA,QAAA05F,GAAAz4B,EAAAljC,GACA,GAAAt8B,GAAAs8B,EAAAM,QACAx4B,GAAApE,KACAw/D,EAAAtF,WAAAl6D,GAGA,QAAAk4F,GAAA14B,EAAAljC,GACA,GAAAt8B,GAAAs8B,EAAAM,QACAjf,GAAA3d,IAAAsE,EAAAtE,EAAAxD,QACAgjE,EAAAhjE,KAAAwD,EAAAxD,MAGA,QAAA27F,GAAA34B,EAAAljC,EAAAy0B,EAAA4O,GACA,GAAAy4B,GACAC,CACAC,GACA,OACA,IACA,GAAAt4F,GAAAs8B,EAAAM,QACA,IAAAnf,EAAAzd,GACA,KACM,IAAA2d,EAAA3d,GACN,UAAAA,EAAAxD,KACAy7F,EAAAz4B,EAAAljC,GACO,aAAAt8B,EAAAxD,MACP07F,EAAA14B,EAAAljC,GAEA87D,EAAAp4F,MACM,IAAA6d,EAAA7d,GACN,OAAAA,EAAA8d,KACA,cACA,KAAAw6E,EACA,eACA36E,EAAAy6E,KACAC,EAAAD,EAAA57F,KAEA,MACA,2BACAw7F,EAAAx4B,EAAAljC,EACA,MACA,mBACAs7D,EAAAp4B,EAAAljC,EACA,MACA,oBACAw7D,EAAAt4B,EAAAljC,EACA,MACA,oBACAu7D,EAAAr4B,EAAAljC,EACA,MACA,qBACAy7D,EAAAv4B,EAAAljC,IAIK,MAAAx8B,GACL,GAAAA,YAAA6U,GACA,KAAA7U,EAEA3B,GAAA,sBAAA2B,EACA,UAMA,OAHA6/D,GAAA04B,IACA14B,EAAA04B,GAEA14B,EACA44B,EAAA/4B,EAAAzO,EAAA4O,GAEA16D,QAAAC,QAAAs6D,GAEA,QAAA+4B,GAAA/4B,EAAAzO,EAAA4O,GACA,MAAA64B,GAAA74B,EAAA5O,GAAA5qD,KAAA,SAAAsyF,GAEA,GADAj5B,EAAAG,QAAA84B,EACA,IAAAj5B,EAAA21B,mBAAA,CAEA,OADAuD,GAAAl5B,EAAAG,QAAAu1B,gBACAj5F,EAAA,EAAmBA,EAAAy8F,EAAA53F,OAA+B7E,IAClDujE,EAAA01B,gBAAAj5F,GAAAy8F,EAAAz8F,GAAA6C,OAEA0gE,GAAA21B,mBAAA31B,EAAAG,QAAAw1B,mBAOA,MALA31B,GAAAG,QAAA1/C,QAAA,SAAAhc,EAAA3H,GACAkjE,EAAAq2B,SAAA5xF,IACAu7D,EAAAm2B,OAAA1xF,EAAAu7D,EAAAG,QAAAt/D,OAAA4D,MAGAu7D,IAGA,QAAAg5B,GAAAh8F,EAAAu0D,GACA,qBAAAv0D,EACAyI,QAAAC,QAAA,GAAA4qD,IAAA,MACG,eAAAtzD,EACHyI,QAAAC,QAAA,GAAA4qD,IAAA,OAEA,IAAAklC,EAAApnD,QAAApxC,GACAyI,QAAAE,OAAA,GAAAzG,OAAA,sBAAAlC,KAEAwC,EAAA+xD,EAAA,8CACAA,EAAAv0D,GAAA2J,KAAA,SAAA7D,GACA,GAAAq2F,GAAAr2F,EAAAq2F,SAAA1nC,EAAA3uD,EAAA2uD,gBACAuO,EAAA,GAAAy1B,IAAA,EACA,IAAAhkC,IAAAzjD,EAAAE,OACA,UAAAyoF,IAAA16F,QAAAk9F,EAAAn5B,EAAA,SAAAG,GACA,MAAA44B,GAAA/4B,EAAAzO,EAAA4O,IAGA3gE,GAAAiyD,IAAAzjD,EAAAC,KAAA,kEACA,IAAA6uB,GAAA,GAAAsD,GAAA,GAAApe,GAAAm3E,GACA,OAAAR,GAAA34B,EAAAljC,EAAAy0B,EAAA,SAGA,OACAzwD,OAAA,SAAAmmB,GACA,GAAAkF,GAAAlF,EAAAkF,SACAolC,EAAAtqC,EAAAsqC,iBACA4O,EAAAl5C,EAAAk5C,OACA,IAAAhiD,EAAAgO,GACA,MAAA6sE,GAAA7sE,EAAAnvB,KAAAu0D,EACI,IAAAvyC,EAAAmN,GAAA,CAGJ,MAAAwsE,GAFA,GAAAlD,GACA,GAAAr1D,GAAAjU,GACAolC,EAAA4O,GAAAx5D,KAAA,SAAAyyF,GACA,MAAAA,GAAA1C,eACAsC,EAAAI,EAAAp8F,KAAAu0D,GAEA6nC,IAGA,MAAA3zF,SAAAE,OAAA,GAAAzG,OAAA,2BAIAnD,GAAA05F,OACA15F,EAAAs0D,cACAt0D,EAAAu0D,gBAIA,SAAAx0D,EAAAC,EAAAO,GAEA,YAEA,IAAA4iB,GAAA5iB,EAAA,GACAmlB,EAAAnlB,EAAA,GACAqgC,EAAArgC,EAAA,GACAkyF,EAAAlyF,EAAA,IACAyyD,EAAAzyD,EAAA,GACA0iF,EAAA1iF,EAAA,IACAmyF,EAAAnyF,EAAA,IACA+8F,EAAA/8F,EAAA,IACA8R,EAAA8Q,EAAA9Q,IACA+G,EAAA+J,EAAA/J,qBACAU,EAAAqJ,EAAArJ,KACArW,EAAA0f,EAAA1f,OACAT,EAAAmgB,EAAAngB,MACAV,EAAA6gB,EAAA7gB,KACA0G,EAAAma,EAAAna,QACAE,EAAAia,EAAAja,cACAJ,EAAAqa,EAAAra,MACAC,EAAAoa,EAAApa,SACAvE,EAAA2e,EAAA3e,OACA2B,EAAAgd,EAAAhd,cACA4B,EAAAob,EAAApb,kBACAnF,EAAAugB,EAAAvgB,KACAuG,EAAAga,EAAAha,QACAuZ,EAAAgD,EAAAhD,KACAD,EAAAiD,EAAAjD,OACAL,EAAAsD,EAAAtD,OACAa,EAAAyC,EAAAzC,SACA0R,EAAAiM,EAAAjM,WACA1O,EAAA2a,EAAA3a,OACA6B,EAAA8Y,EAAA9Y,sBACAq7D,EAAAsP,EAAAtP,QACA8J,EAAAwF,EAAAxF,aACAnE,EAAA2J,EAAA3J,KACA/iD,EAAAitB,EAAAjtB,cACAikB,EAAAi5B,EAAAj5B,aACAwP,EAAAk5B,EAAAl5B,aACAxE,EAAA09B,EAAA19B,iBACAw9B,EAAA8K,EAAA9K,kBACA+K,EAAA,WAQA,QAAAC,GAAAC,EAAA5lD,GACA,kBAAAA,GAAA4lD,EAAA9I,UAAA,UAAA98C,GAAA4lD,EAAA7I,UAEA,QAAA2I,GAAArpD,EAAA1wB,EAAAuzB,EAAA2mD,EAAAz4E,EAAAmwC,EAAAC,GACAh1D,KAAA6zC,aACA7zC,KAAA02C,YACA12C,KAAAq9F,WACAr9F,KAAAmjB,OACAnjB,KAAA4kB,MACA5kB,KAAA+0D,YACA/0D,KAAAg1D,mBACAh1D,KAAAy0C,iBAAAZ,EAAAY,iBACAz0C,KAAAw1F,iBAAA,IACA,IAAA8H,GAAA,IAAAt9F,KAAA02C,UAAA,IACA6mD,GAAoBn5F,IAAA,EACpBpE,MAAA80D,WACAoD,YAAA,WACA,MAAAolC,MAAAC,EAAAn5F,MAxBA,GACAo5F,IACA,EACA,EACA,IACA,IAwOA,OAjNAN,GAAA17F,WACAi8F,YAAA,SAAAp1F,GACA,MAAArI,MAAAq9F,SAAAl8F,IAAAkH,IAEAq1F,qBAAA,SAAAr1F,EAAA0U,GACA,GAAAD,GAAA9c,KAAAq9F,SAAAM,EAAA,KAAA1R,EAAA,CAGA,KADAlvE,MAAA,EACAD,GAAA,CACA,GAAApc,GAAAqc,EAAAD,EAAAC,SAAA1U,GAAAyU,EAAA3b,IAAAkH,EAOA,QANApD,KAAAvE,IACAi9F,IACAA,MAEAA,EAAA93F,KAAAnF,MAEAurF,EAVA,IAYA,MADA1pF,GAAA,yDAAA8F,GACAs1F,IAAA,OAAA14F,EAEA6X,KAAA3b,IAAA,UAEA,GAAAw8F,EAGA,WAAAA,EAAAz4F,QAAAkd,EAAAu7E,EAAA,IAGAt7E,EAAAkC,MAAAvkB,KAAAmjB,KAAAw6E,GAFAA,EAAA,IAIAvS,cACA,MAAAprF,MAAAy9F,YAAA,aAEA5oC,gBACA,MAAA1wD,GAAAnE,KAAA,YAAAA,KAAA09F,qBAAA,cAAAr7E,EAAAiC,QAEAs5E,eACA,GAAAA,GAAA59F,KAAA09F,qBAAA,cACA,OAAA/0F,GAAAi1F,IAAA,IAAAA,EAAA14F,OAGAf,EAAAnE,KAAA,WAAA49F,GAFAz5F,EAAAnE,KAAA,WAAAw9F,IAIAK,cACA,GAAAA,GAAA79F,KAAA09F,qBAAA,aACA,OAAA/0F,GAAAk1F,IAAA,IAAAA,EAAA34F,OAGAf,EAAAnE,KAAA,UAAA69F,GAFA15F,EAAAnE,KAAA,UAAAA,KAAA49F,WAIA1mD,eACA,GAAA9yC,GAAApE,KAAAy9F,YAAA,WAIA,SAHAh1F,EAAArE,OAAA,KACAA,EAjFA,GAmFAD,EAAAnE,KAAA,WAAAoE,IAEA+yC,WACA,GAAAymD,GAAA59F,KAAA49F,SAAAC,EAAA79F,KAAA69F,OACA,IAAAD,IAAAC,EACA,MAAA15F,GAAAnE,KAAA,OAAA49F,EAEA,IAAAE,GAAArkF,EAAA4B,UAAAwiF,EAAAD,EACA,OAAAz5F,GAAAnE,KAAA,OAAA89F,GAAAF,IAEA3mD,aACA,GAAAA,GAAAj3C,KAAA09F,qBAAA,YAQA,OAPAzmD,GAAA,MACAA,EAAA,EACIA,GAAA,IACJA,GAAA,IACIA,EAAA,IACJA,KAAA,cAEA9yC,EAAAnE,KAAA,SAAAi3C,IAEA8mD,iBAAA,WACA,GACAp2E,GADAyjE,EAAAprF,KAAAorF,OAEA,IAAAziF,EAAAyiF,GAAA,CACA,GACA/qF,GADA8iB,EAAAnjB,KAAAmjB,KACA/hB,EAAAgqF,EAAAlmF,OACAwiB,IACA,KAAArnB,EAAA,EAAeA,EAAAe,IAAOf,EACtBqnB,EAAA7hB,KAAAsd,EAAAW,WAAAsnE,EAAA/qF,IAEAsnB,GAAA,GAAAF,GAAAC,OAEAC,GADI/E,EAAAwoE,GACJA,EAEA,GAAA92D,EAEA,OAAA3M,IAEA0tE,cAAA,SAAAjxE,GAIA,MAHApkB,MAAAw1F,mBACAx1F,KAAAw1F,iBAAAx1F,KAAA6zC,WAAAgD,OAAA72C,KAAA,cAEAA,KAAAw1F,iBAAAjrF,KAAA,WAEA,MADA,IAAAqiF,GAAA5sF,KAAA60D,UAAAzxC,IAAAgB,EAAApkB,KAAAmjB,MACA6pE,QACIriF,KAAA3K,QAEJ03C,gBAAA,SAAAp2B,EAAAgyB,EAAAkE,EAAAG,GACA,GAAAnsC,GAAAxL,KACA6zC,EAAA7zC,KAAA6zC,WACAmqD,EAAAnqD,EAAAgD,OAAA72C,KAAA,uBACAw1F,EAAAx1F,KAAAq1F,eACA,YACA,aACA,UACA,UACA,UACA,SAEA4I,EAAA,GAAAtpC,GAAA9gB,EAAA7zC,KAAAmjB,KAAA7B,EAAAthB,KAAA02C,UAAA12C,KAAA80D,UAAA90D,KAAA+0D,UAAA/0D,KAAAg1D,iBAAAh1D,KAAAy0C,kBACAypD,EAAA70F,QAAA6qC,KACA8pD,EACAxI,IAEA2I,EAAAD,EAAA3zF,KAAA,SAAA7D,GACA,GAAA03F,GAAA13F,EAAA,GACAkiE,EAAA,GAAAzP,GAAA3hB,EAAAl2B,EAAA9V,EAAAkrC,UAMA,OALAp1B,GAAAE,KAAA,mBACA68E,aAAAJ,EAAAloC,cAAAvqD,EAAAqpD,WACAne,UAAAlrC,EAAAkrC,UACAc,WAEAymD,EAAAvmD,gBAAA0mD,EAAA9qD,EAAA9nC,EAAAqpD,UAAA+T,GAAAr+D,KAAA,WACA,MAAAq+D,OAGA01B,EAAAzqD,EAAAgD,OAAA72C,KAAA,cACA,OAAAqJ,SAAA6qC,KACAiqD,EACAG,IACA/zF,KAAA,SAAAg0F,GACA,GAAAC,GAAAD,EAAA,GACAE,EAAAF,EAAA,EACA,QAAAE,EAAAv5F,OAEA,MADAs5F,GAAA91B,OAAA,GACA81B,CAEA,IAAAn+F,GAAAmG,EAAAk4F,IACA,KAAAr+F,EAAA,EAAAmG,EAAAi4F,EAAAv5F,OAAwC7E,EAAAmG,EAAQnG,IAChD88F,EAAAsB,EAAAp+F,GAAAm3C,IACAknD,EAAA74F,KAAA44F,EAAAp+F,GAAAq3C,gBAAAumD,EAAA3qD,EAAAqE,GAGA,OAAAtuC,SAAA6qC,IAAAwqD,GAAAn0F,KAAA,SAAAo0F,GAEA,IADAH,EAAAnnC,MAAArlD,EAAA8E,qBACAzW,EAAA,EAAAmG,EAAAm4F,EAAAz5F,OAAqC7E,EAAAmG,EAAQnG,IAC7Cm+F,EAAA71B,UAAAg2B,EAAAt+F,GAIA,OAFAm+F,GAAAnnC,MAAArlD,EAAA+E,mBACAynF,EAAA91B,OAAA,GACA81B,OAIArmD,mBAAA,SAAA7E,EAAA2E,EAAAC,GACA,GAAA52B,IACAF,GAAA,aAEAI,KAAA,cAGAhW,EAAAxL,KACA6zC,EAAA7zC,KAAA6zC,WACAmqD,EAAAnqD,EAAAgD,OAAA72C,KAAA,uBACAw1F,EAAAx1F,KAAAq1F,eACA,YACA,UACA,QAMA,OAJAhsF,SAAA6qC,KACA8pD,EACAxI,IAEAjrF,KAAA,SAAA7D,GACA,GAAA03F,GAAA13F,EAAA,EAEA,OADA,IAAAiuD,GAAA9gB,EAAAroC,EAAA2X,KAAA7B,EAAA9V,EAAAkrC,UAAAlrC,EAAAspD,UAAAtpD,EAAAupD,UAAAvpD,EAAAwpD,iBAAAxpD,EAAAipC,kBACAspB,eAAAqgC,EAAA9qD,EAAA9nC,EAAAqpD,UAAA,KAAA5c,EAAAC,MAGA0mD,mBAAA,SAAApnD,GAGA,OAFAinD,GAAAz+F,KAAAy+F,YACAI,KACAx+F,EAAA,EAAAe,EAAAq9F,EAAAv5F,OAA0C7E,EAAAe,IAAOf,EACjDm3C,IAAA2lD,EAAAsB,EAAAp+F,GAAAm3C,IACAqnD,EAAAh5F,KAAA44F,EAAAp+F,GAAAqG,KAGA,OAAAm4F,IAEAJ,kBAIA,OAHAA,MACAK,EAAA9+F,KAAA09F,qBAAA,cACAqB,EAAA,GAAA5M,GACA9xF,EAAA,EAAAe,EAAA09F,EAAA55F,OAA6C7E,EAAAe,IAAOf,EAAA,CACpD,GAAA2+F,GAAAF,EAAAz+F,GACA+8F,EAAA2B,EAAAr6F,OAAA1E,KAAAmjB,KAAA67E,EAAAh/F,KAAA6zC,WAAA7zC,KAAA80D,UACAsoC,IACAqB,EAAA54F,KAAAu3F,GAGA,MAAAj5F,GAAAnE,KAAA,cAAAy+F,KAGAvB,KAEA+B,EAAA,WAGA,QAAAA,GAAAprD,EAAA/G,GACA,GAAAnlB,EACA/E,GAAAkqB,GACAnlB,EAAAmlB,EACGjkC,EAAAikC,GACHnlB,EAAA,GAAA/B,GAAAknB,GAEAnqC,EAAA,sCAEAS,EAAAukB,EAAAziB,OAAA,2BACAlF,KAAA6zC,aACA7zC,KAAA2nB,SACA3nB,KAAAmjB,KAAA,GAAAslE,GAAA9gE,EAAAksB,GAEA,QAAAqrD,GAAAv3E,EAAAw3E,EAAA70E,EAAA80E,GACA,GAAA34F,GAAAkhB,EAAAlhB,IACAwS,EAAA0O,EAAA1O,IACA1T,IACAkB,GAAA6jB,EAAArR,IACAqR,EAAArR,EAAAxS,EAEA,QAAArF,GAAA,EAAiBA,EAAAkpB,IAAWlpB,EAC5BmE,EAAAM,KAAAT,OAAAC,aAAAsiB,EAAA5B,WAEA,IAAAnhB,GAAAW,EAAApC,KAAA,GACAwkB,GAAAlhB,KACA,IAAA6S,GAAA8lF,EAAAx6F,EAAAy6F,YAAAF,GAAAv6F,EAAAotC,QAAAmtD,EACA,YAAA7lF,IAGAqO,EAAAlhB,KAAA6S,GACA,GAjCA,GAAAgmF,GAAA,KAmCAC,GACAjhD,cACA,MAAAn6C,GAAAnE,KAAA,WACAw/F,MAAA92F,EACA+2F,OAAA/2F,EACAg3F,QAAAh3F,EACAi3F,SAAAj3F,EACAk3F,QAAAl3F,EACAm3F,SAAAn3F,EACAo3F,aAAAp3F,EACAq3F,QAAAr3F,EACAs3F,QAAAj+E,KA+KA,OA3KAk9E,GAAAz9F,WACAwrB,MAAA,SAAA4T,GACA5gC,KAAAqvC,MAAAzO,EACA,IAAAq/D,GAAAjgG,KAAAq3C,QAAA2rC,QAAA7hF,IAAA,UACA4gB,GAAAk+E,KACAjgG,KAAAkgG,iBAAAD,EAAAr/F,KAEA,KAEA,GADAZ,KAAAmgG,SAAAngG,KAAAq3C,QAAA2rC,QAAA7hF,IAAA,YACAnB,KAAAmgG,SAAA,CACAngG,KAAAogG,IAAApgG,KAAAmgG,SAAAh/F,IAAA,MACA,IAAAk/F,GAAArgG,KAAAmgG,SAAAh/F,IAAA,SACAk/F,IAAA13F,EAAA03F,IAAA,IAAAA,EAAAn7F,QAAAlF,KAAAogG,MACApgG,KAAAmgG,SAAA,OAGI,MAAAj8F,GACJjC,EAAA,uCACAjC,KAAAmgG,SAAA,OAGAG,oBACA,GAAAA,GAAA,IACA,IAAAtgG,KAAA2nB,OAAAziB,OACA,IACAo7F,EAAA56D,EAAAhhC,OAAA1E,KAAA2nB,QACK,MAAA0K,GACL,GAAAA,YAAAtZ,GACA,KAAAsZ,EAEApwB,GAAAowB,GAGA,MAAAluB,GAAAnE,KAAA,gBAAAsgG,IAEA1X,gBACA,GAAAjhE,GAAA3nB,KAAA2nB,OACAihE,EAAA,CAEA,IADA5oF,KAAAsgG,cAEA34E,EAAAnB,QACA04E,EAAAv3E,EAAA,iBACAihE,EAAAjhE,EAAAlhB,IAAA,OAEI,CAGJ,IAFA,GAAA85F,GAAA,KACAh9D,GAAA,EAAA98B,EAAAkhB,EAAA1O,KACAsqB,GAAA98B,EAAA,GACAA,GAAA85F,EAAA,YAAAr7F,OACAuB,EAAA,IACAA,EAAA,GAEAkhB,EAAAlhB,MACA88B,EAAA27D,EAAAv3E,EAAA,YAAA44E,GAAA,EAEA,IAAAh9D,EAAA,CACA5b,EAAApB,KAAA,EACA,IAAAxd,EACA,IACAA,EAAA4e,EAAA5B,gBACMjd,EAAAC,GAEN,KADA,GAAAnE,GAAA,GACAmE,GAAA,IAAAA,GAAA,IACAnE,GAAAQ,OAAAC,aAAA0D,GACAA,EAAA4e,EAAA5B,SAEA6iE,GAAApkC,SAAA5/C,EAAA,IACA+6C,MAAAipC,KACAA,EAAA,IAIA,MAAAzkF,GAAAnE,KAAA,YAAA4oF,IAEAtiD,4BACA,GAAAA,GAAA,EACAg6D,EAAAtgG,KAAAsgG,aAIA,OAHAA,KACAh6D,EAAAg6D,EAAAh6D,uBAEAniC,EAAAnE,KAAA,wBAAAsmC,IAEAk6D,YAAA,WACA,GAAA74E,GAAA3nB,KAAA2nB,MAEA,IADAA,EAAAnB,QACA04E,EAAAv3E,EAAA,eACAA,EAAAlB,WAGA,KAFA,GACA1d,GADA03F,EAAA,GACAR,EAAA,IACAl3F,EAAA4e,EAAA5B,WAAA,MACAk6E,EAAA/6F,QAAAu7F,IAGAR,GAAA76F,OAAAC,aAAA0D,EAKA,aAHA/I,KAAAkgG,mBACAlgG,KAAAkgG,iBAAAD,EAAAvU,UAAA,OAKAgV,eAAA,WACA,GAAA9X,GAAA5oF,KAAA4oF,SACA5oF,MAAAmjB,KAAAwlE,aAAAC,IAEAv5C,MAAA,SAAAzO,GACA5gC,KAAAmjB,KAAA6J,MAAA4T,EACA,IAAAp1B,GAAAxL,KACA+iF,GACA+D,WAAA,SAAApwC,EAAA55B,EAAA8H,EAAAmwC,EAAAC,GACA,UAAAkoC,GAAA1xF,EAAAqoC,WAAAroC,EAAA2X,KAAAuzB,EAAA55B,EAAA8H,EAAAmwC,EAAAC,IAGAh1D,MAAAq3C,QAAA,GAAAyrC,GAAA9iF,KAAA6zC,WAAA7zC,KAAAmjB,KAAA4/D,IAEA18C,eACA,GAAAi6D,GAAAtgG,KAAAsgG,cACAzkF,EAAAykF,IAAAj6D,SAAArmC,KAAAq3C,QAAAhR,QACA,OAAAliC,GAAAnE,KAAA,WAAA6b,IAEA8kF,mBACA,GAKAC,GALAC,GACAC,iBAAA9gG,KAAAkgG,iBACAa,oBAAA/gG,KAAAmgG,SACAa,eAAAhhG,KAAAogG,IAGA,KACAQ,EAAA5gG,KAAAmjB,KAAA8lE,QAAA9nF,IAAA,QACI,MAAAkxB,GACJpwB,EAAA,mDAEA,GAAA2+F,EAAA,CACA,GAAAK,GAAA1B,EAAAjhD,OACA,QAAAj2C,KAAA44F,GACA,GAAAL,EAAA5jF,IAAA3U,GAAA,CACA,GAAA3H,GAAAkgG,EAAAz/F,IAAAkH,EACA44F,GAAA54F,GAAA3H,GACAmgG,EAAAx4F,GAAA,gBAAA3H,KAAAgH,EAAAhH,GAEAuB,EAAA,mCAAAoG,EAAA,MAKA,MAAAlE,GAAAnE,KAAA,eAAA6gG,IAEAxsD,kBACA,GAAAuV,GAAAzmC,EAAAnjB,KAAAmjB,KAAA+9E,EAAA,GACAC,EAAAh+E,EAAA8lE,QAAA9nF,IAAA,KACAggG,IAAAx4F,EAAAw4F,MAAA,IAAAz4F,EAAAy4F,EAAA,KAvMA,qCAuMAA,EAAA,GACAv3C,EAAA9jD,EAAAq7F,EAAA,KAEAnhG,KAAA2nB,OAAAk/B,aACA7mD,KAAA2nB,OAAAk/B,YAAA,EAAAphD,KAAAC,IAAA45F,EAAAt/F,KAAA2nB,OAAA1O,MAEA2wC,EAAAD,EAAA3pD,KAAA2nB,OAAA3iB,MAAAY,SAAA,EAAA05F,GAAA,EAAAA,GAEA,QAAAj/F,GAAA,EAAAe,EAAAwoD,EAAA1kD,OAAmC7E,EAAAe,EAAOf,IAAA,CAC1C,GAAA+gG,GAAAx3C,EAAAvpD,GAAA2f,SAAA,GACAkhF,IAAA,IAAAE,EAAAl8F,OAAA,IAAAk8F,IAEA,MAAAj9F,GAAAnE,KAAA,cAAAkhG,IAEAzqD,QAAA,SAAAC,GACA,MAAA12C,MAAAq3C,QAAAZ,QAAAC,IAEA2B,QAAA,WACA,MAAAr4C,MAAAq3C,QAAAgB,YAGA4mD,IAEAt/F,GAAAu9F,OACAv9F,EAAAs/F,eAIA,SAAAv/F,EAAAC,EAAAO,GAEA,YAEA,IAAA4iB,GAAA5iB,EAAA,GACAqgC,EAAArgC,EAAA,GACAozD,EAAApzD,EAAA,GACAy5C,EAAAz5C,EAAA,GACAmhG,EAAAnhG,EAAA,IACAuZ,EAAAqJ,EAAArJ,KACA1U,EAAA+d,EAAA/d,cACApC,EAAAmgB,EAAAngB,MACAijB,EAAA2a,EAAA3a,OACAkpB,EAAAwkB,EAAAxkB,iBACA7O,EAAA0Z,EAAA1Z,iBACAga,EAAAonD,EAAApnD,UACAqnD,EAAA,WACA,QAAAC,GAAA76F,EAAAQ,GACA,MAAAR,GAAAQ,IAAA,GAAAR,EAAAQ,EAAA,OAAAR,EAAAQ,EAAA,MAAAR,EAAAQ,EAAA,GAEA,QAAAs6F,GAAA96F,EAAAQ,GACA,MAAAR,GAAAQ,IAAA,EAAAR,EAAAQ,EAAA,GAEA,QAAAu6F,GAAA/6F,EAAAM,EAAAiS,GACA,GAEA0vC,GAAAjnD,EAAArB,EAFA6G,EAAA,IAAAs6F,EAAA96F,EAAAM,EAAA,GAAAu6F,EAAA76F,EAAAM,EAAA,GAAAu6F,EAAA76F,EAAAM,EAAA,IACAi6C,EAAAugD,EAAA96F,EAAAM,EAAAE,EAEA,QAAA+5C,EAAA,CACAugD,EAAA96F,EAAAM,EAAAE,EAAA,EACA,IAAAw6F,GAAAF,EAAA96F,EAAAM,EAAAE,EAAA,KAGA,KAFAxF,EAAAsF,EAAAE,EAAA,GACAyhD,KACAtoD,EAAA,EAAcA,EAAAqhG,EAAcrhG,IAAAqB,GAAA,EAC5BinD,EAAAtoD,IAAiB4Y,IAAAuoF,EAAA96F,EAAAhF,GAGjB,KADAA,GAAA,EACArB,EAAA,EAAcA,EAAAqhG,EAAcrhG,IAAAqB,GAAA,EAC5BinD,EAAAtoD,GAAA2G,MAAAw6F,EAAA96F,EAAAhF,EAEA,KAAArB,EAAA,EAAcA,EAAAqhG,EAAcrhG,IAAAqB,GAAA,EAC5BinD,EAAAtoD,GAAAshG,QAAAH,EAAA96F,EAAAhF,EAEA,KAAArB,EAAA,EAAcA,EAAAqhG,EAAcrhG,IAAAqB,GAAA,GAC5B,GAAAkgG,GAAAJ,EAAA96F,EAAAhF,EACA,QAAAkgG,EAAA,CAGAj5C,EAAAtoD,GAAA6oF,MACA,QAAAt9D,GAAA,EAAAwc,EAAAugB,EAAAtoD,GAAA4Y,IAAA0vC,EAAAtoD,GAAA2G,MAAA,EAA6D4kB,EAAAwc,EAAQxc,IACrE+8B,EAAAtoD,GAAA6oF,IAAAt9D,GAAA41E,EAAA96F,EAAAhF,EAAAkgG,GACAA,GAAA,GAGA,MAAAj5C,GACG,QAAA1H,EAAA,CACHsgD,EAAA76F,EAAAM,EAAAE,EAAA,EACA,IAAA26F,GAAAN,EAAA76F,EAAAM,EAAAE,EAAA,GAGA,KAFAxF,EAAAsF,EAAAE,EAAA,GACAyhD,KACAtoD,EAAA,EAAcA,EAAAwhG,EAAYxhG,IAC1BsoD,EAAA9iD,MACAmB,MAAAu6F,EAAA76F,EAAAhF,GACAuX,IAAAsoF,EAAA76F,EAAAhF,EAAA,GACAigG,QAAAJ,EAAA76F,EAAAhF,EAAA,GAAA6/F,EAAA76F,EAAAhF,KAEAA,GAAA,EAEA,OAAAinD,GAEAhmD,EAAA,uBAAAs+C,GAEA,QAAA6gD,GAAAp7F,EAAAM,EAAAiS,EAAAmhC,GACA,GAAAD,MACAlU,EAAA,GAAAgU,GAAA,GAAAr0B,GAAAlf,EAAAM,EAAAiS,EAAAjS,GAAAmzC,EAAAC,GACAS,EAAA5U,EAAAjZ,OACA,QACAqtC,OAAAxf,EAAA2C,YAAAwE,QACAuD,MAAA1K,EAAAY,QAAA6B,aAAAzC,EAAAY,QAAA6B,YAAAC,YAAA1C,EAAAY,QAAA6B,YAAAC,WAAAyE,QACA+/C,OAAAlnD,EAAAS,iBAAAT,EAAAS,gBAAA0G,SAGA,QAAAggD,GAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAC,CACAF,IACAC,EAAA,EACAC,EAAA,SAAA37F,EAAAQ,GACA,MAAAR,GAAAQ,IAAA,GAAAR,EAAAQ,EAAA,OAAAR,EAAAQ,EAAA,MAAAR,EAAAQ,EAAA,MAGAk7F,EAAA,EACAC,EAAA,SAAA37F,EAAAQ,GACA,MAAAR,GAAAQ,IAAA,EAAAR,EAAAQ,EAAA,OAKA,QAFAmzD,MACAioC,EAAAD,EAAAH,EAAA,GACAt2E,EAAAw2E,EAAwBx2E,EAAAs2E,EAAAh9F,OAAiB0mB,GAAAw2E,EAAA,CACzC,GAAAG,GAAAF,EAAAH,EAAAt2E,EACAyuC,GAAAx0D,KAAAo8F,EAAAr8F,SAAA08F,EAAAC,IACAD,EAAAC,EAEA,MAAAloC,GAEA,QAAAmoC,GAAA75C,EAAA6X,GAGA,IAFA,GAAA74D,GAAA64D,EAAAx6D,WAAA,GAAA27C,EAAA,EACArhD,EAAA,EAAAsZ,EAAA+uC,EAAAzjD,OAAA,EACA5E,EAAAsZ,GAAA,CACA,GAAAnZ,GAAAH,EAAAsZ,EAAA,IACAjS,GAAAghD,EAAAloD,GAAAuG,MACA4S,EAAAnZ,EAAA,EAEAH,EAAAG,EAMA,MAHAkoD,GAAAroD,GAAA0G,OAAAW,MAAAghD,EAAAroD,GAAA2Y,MACA0oC,EAAAgH,EAAAroD,GAAAqhG,SAAAh5C,EAAAroD,GAAA4oF,IAAAvgC,EAAAroD,GAAA4oF,IAAAvhF,EAAAghD,EAAAroD,GAAA0G,OAAAW,GAAA,QAGA48D,SAAA58D,EACA86F,QAAA9gD,GAGA,QAAA+gD,GAAA/6F,EAAAg7F,EAAAzqF,GACA,QAAArF,GAAA/L,EAAAmY,GACA0jF,EAAA98F,MACAqc,IAAA,SACAnD,MACAjY,EACAmY,KAIA,QAAAnM,GAAAhM,EAAAmY,GACA0jF,EAAA98F,MACAqc,IAAA,SACAnD,MACAjY,EACAmY,KAIA,QAAA2jF,GAAAC,EAAAC,EAAAh8F,EAAAmY,GACA0jF,EAAA98F,MACAqc,IAAA,mBACAnD,MACA8jF,EACAC,EACAh8F,EACAmY,KAIA,GAEA+xC,GAFA3wD,EAAA,EACA0iG,GAAAp7F,EAAAtH,IAAA,GAAAsH,EAAAtH,EAAA,YAEAyG,EAAA,EAAAmY,EAAA,CAEA,IADA5e,GAAA,GACA0iG,EAAA,EACA,GACA/xC,EAAArpD,EAAAtH,IAAA,EAAAsH,EAAAtH,EAAA,EACA,IAAAwiD,GAAAl7C,EAAAtH,EAAA,MAAAsH,EAAAtH,EAAA,EACAA,IAAA,CACA,IAAAssC,GAAAC,CACA,GAAAokB,GACArkB,GAAAhlC,EAAAtH,IAAA,GAAAsH,EAAAtH,EAAA,YACAusC,GAAAjlC,EAAAtH,EAAA,OAAAsH,EAAAtH,EAAA,YACAA,GAAA,IAEAssC,EAAAhlC,EAAAtH,KACAusC,EAAAjlC,EAAAtH,MAEA,EAAA2wD,GACAlqD,EAAA6lC,EACA1tB,EAAA2tB,IAEA9lC,EAAA,EACAmY,EAAA,EAEA,IAAA+jF,GAAA,EAAAC,EAAA,EAAAC,EAAA,EAAAC,EAAA,CACA,GAAAnyC,GACAgyC,EAAAC,GAAAt7F,EAAAtH,IAAA,GAAAsH,EAAAtH,EAAA,mBACAA,GAAA,GACK,GAAA2wD,GACLgyC,GAAAr7F,EAAAtH,IAAA,GAAAsH,EAAAtH,EAAA,mBACA4iG,GAAAt7F,EAAAtH,EAAA,OAAAsH,EAAAtH,EAAA,mBACAA,GAAA,GACK,IAAA2wD,IACLgyC,GAAAr7F,EAAAtH,IAAA,GAAAsH,EAAAtH,EAAA,mBACA6iG,GAAAv7F,EAAAtH,EAAA,OAAAsH,EAAAtH,EAAA,mBACA8iG,GAAAx7F,EAAAtH,EAAA,OAAAsH,EAAAtH,EAAA,mBACA4iG,GAAAt7F,EAAAtH,EAAA,OAAAsH,EAAAtH,EAAA,mBACAA,GAAA,EAEA,IAAA+iG,GAAAlrF,EAAAmiD,OAAAxX,EACAugD,KACAT,EAAA98F,MAAgBqc,IAAA,SAChBygF,EAAA98F,MACAqc,IAAA,YACAnD,MACAikF,EACAE,EACAC,EACAF,EACAn8F,EACAmY,KAGAyjF,EAAAU,EAAAT,EAAAzqF,GACAyqF,EAAA98F,MAAgBqc,IAAA,mBAEZ,GAAA8uC,OACD,CACH,GACAplC,GAAAwc,EADAi7D,IAEA,KAAAz3E,EAAA,EAAcA,EAAAm3E,EAAsBn3E,IACpCy3E,EAAAx9F,KAAA8B,EAAAtH,IAAA,EAAAsH,EAAAtH,EAAA,IACAA,GAAA,CAGAA,IAAA,GADAsH,EAAAtH,IAAA,EAAAsH,EAAAtH,EAAA,GAIA,KAFA,GAAAijG,GAAAD,IAAAn+F,OAAA,KACAq+F,KACAA,EAAAr+F,OAAAo+F,GAAA,CACAtyC,EAAArpD,EAAAtH,IACA,IAAAmjG,GAAA,CAIA,KAHA,EAAAxyC,IACAwyC,GAAA77F,EAAAtH,MAEAmjG,KAAA,GACAD,EAAA19F,MAAkBmrD,UAGlB,IAAAplC,EAAA,EAAcA,EAAA03E,EAAoB13E,IAAA,CAClC,UAAA23E,EAAA33E,GAAAolC,OACA,OACAlqD,IAAAa,EAAAtH,IAAA,GAAAsH,EAAAtH,EAAA,YACAA,GAAA,CACA,MACA,QACAyG,GAAAa,EAAAtH,IACA,MACA,SACAyG,GAAAa,EAAAtH,KAGAkjG,EAAA33E,GAAA9kB,IAEA,IAAA8kB,EAAA,EAAcA,EAAA03E,EAAoB13E,IAAA,CAClC,UAAA23E,EAAA33E,GAAAolC,OACA,OACA/xC,IAAAtX,EAAAtH,IAAA,GAAAsH,EAAAtH,EAAA,YACAA,GAAA,CACA,MACA,QACA4e,GAAAtX,EAAAtH,IACA,MACA,SACA4e,GAAAtX,EAAAtH,KAGAkjG,EAAA33E,GAAA3M,IAEA,GAAAwkF,GAAA,CACA,KAAApjG,EAAA,EAAcA,EAAA0iG,EAAsB1iG,IAAA,CACpC,GAAAqjG,GAAAL,EAAAhjG,GACAsjG,EAAAJ,EAAArgG,MAAAugG,EAAAC,EAAA,EACA,MAAAC,EAAA,GAAA3yC,MACA2yC,EAAA99F,KAAA89F,EAAA,QACK,MAAAA,IAAAz+F,OAAA,GAAA8rD,MACL2yC,EAAAlnF,QAAAknF,IAAAz+F,OAAA,QACK,CACL,GAAAxD,IACAsvD,MAAA,EACAlqD,GAAA68F,EAAA,GAAA78F,EAAA68F,IAAAz+F,OAAA,GAAA4B,GAAA,EACAmY,GAAA0kF,EAAA,GAAA1kF,EAAA0kF,IAAAz+F,OAAA,GAAA+Z,GAAA,EAEA0kF,GAAAlnF,QAAA/a,GACAiiG,EAAA99F,KAAAnE,GAGA,IADAmR,EAAA8wF,EAAA,GAAA78F,EAAA68F,EAAA,GAAA1kF,GACA2M,EAAA,EAAAwc,EAAAu7D,EAAAz+F,OAAoC0mB,EAAAwc,EAAQxc,IAC5C,EAAA+3E,EAAA/3E,GAAAolC,MACAl+C,EAAA6wF,EAAA/3E,GAAA9kB,EAAA68F,EAAA/3E,GAAA3M,GACM,EAAA0kF,EAAA/3E,EAAA,GAAAolC,OACN4xC,EAAAe,EAAA/3E,GAAA9kB,EAAA68F,EAAA/3E,GAAA3M,EAAA0kF,EAAA/3E,EAAA,GAAA9kB,EAAA68F,EAAA/3E,EAAA,GAAA3M,GACA2M,KAEAg3E,EAAAe,EAAA/3E,GAAA9kB,EAAA68F,EAAA/3E,GAAA3M,GAAA0kF,EAAA/3E,GAAA9kB,EAAA68F,EAAA/3E,EAAA,GAAA9kB,GAAA,GAAA68F,EAAA/3E,GAAA3M,EAAA0kF,EAAA/3E,EAAA,GAAA3M,GAAA,EAGAwkF,GAAAC,EAAA,IAIA,QAAAE,GAAAj8F,EAAAg7F,EAAAzqF,GAIA,QAAArF,GAAA/L,EAAAmY,GACA0jF,EAAA98F,MACAqc,IAAA,SACAnD,MACAjY,EACAmY,KAIA,QAAAnM,GAAAhM,EAAAmY,GACA0jF,EAAA98F,MACAqc,IAAA,SACAnD,MACAjY,EACAmY,KAIA,QAAA4kF,GAAAl2B,EAAAK,EAAA7oC,EAAAg2C,EAAAr0E,EAAAmY,GACA0jF,EAAA98F,MACAqc,IAAA,gBACAnD,MACA4uD,EACAK,EACA7oC,EACAg2C,EACAr0E,EACAmY,KAIA,QAAA+N,GAAArlB,GAEA,IADA,GAAAtH,GAAA,EACAA,EAAAsH,EAAAzC,QAAA,CACA,GAEA29F,GAAAiB,EAAAhB,EAAAiB,EAAA/1B,EAAAmN,EAAA6oB,EAAA5iG,EAAA6iG,EAFAC,GAAA,EACA37F,EAAAZ,EAAAtH,IAEA,QAAAkI,GACA,OAIA,OACA47F,GAAAnhG,EAAAkC,QAAA,EACAg/F,GAAA,CACA,MACA,QACAjlF,GAAAjc,EAAA2oC,MACA94B,EAAA/L,EAAAmY,GACAilF,GAAA,CACA,MACA,QACA,KAAAlhG,EAAAkC,OAAA,GACA4B,GAAA9D,EAAA4kB,QACA3I,GAAAjc,EAAA4kB,QACA9U,EAAAhM,EAAAmY,EAEA,MACA,QACA,KAAAjc,EAAAkC,OAAA,IACA4B,GAAA9D,EAAA4kB,QACA9U,EAAAhM,EAAAmY,GACA,IAAAjc,EAAAkC,SAGA+Z,GAAAjc,EAAA4kB,QACA9U,EAAAhM,EAAAmY,EAEA,MACA,QACA,KAAAjc,EAAAkC,OAAA,IACA+Z,GAAAjc,EAAA4kB,QACA9U,EAAAhM,EAAAmY,GACA,IAAAjc,EAAAkC,SAGA4B,GAAA9D,EAAA4kB,QACA9U,EAAAhM,EAAAmY,EAEA,MACA,QACA,KAAAjc,EAAAkC,OAAA,GACA29F,EAAA/7F,EAAA9D,EAAA4kB,QACAk7E,EAAA7jF,EAAAjc,EAAA4kB,QACAk8E,EAAAjB,EAAA7/F,EAAA4kB,QACAm8E,EAAAjB,EAAA9/F,EAAA4kB,QACA9gB,EAAAg9F,EAAA9gG,EAAA4kB,QACA3I,EAAA8kF,EAAA/gG,EAAA4kB,QACAi8E,EAAAhB,EAAAC,EAAAgB,EAAAC,EAAAj9F,EAAAmY,EAEA,MACA,SACA7d,EAAA4B,EAAA2oC,MAAAzzB,EAAAksF,UACAH,EAAA/rF,EAAAqtC,MAAAnkD,GACA6iG,GACAj3E,EAAAi3E,EAEA,MACA,SACA,MACA,SAEA,OADA17F,EAAAZ,EAAAtH,MAEA,QACAwiG,EAAA/7F,EAAA9D,EAAA4kB,QACAk8E,EAAAjB,EAAA7/F,EAAA4kB,QACAomD,EAAA/uD,EAAAjc,EAAA4kB,QACA9gB,EAAAg9F,EAAA9gG,EAAA4kB,QACAi8E,EAAAhB,EAAA5jF,EAAA6kF,EAAA91B,EAAAlnE,EAAAknE,GACA60B,EAAA/7F,EAAA9D,EAAA4kB,QACAk8E,EAAAjB,EAAA7/F,EAAA4kB,QACA9gB,EAAAg9F,EAAA9gG,EAAA4kB,QACAi8E,EAAAhB,EAAA70B,EAAA81B,EAAA7kF,EAAAnY,EAAAmY,EACA,MACA,SACA4jF,EAAA/7F,EAAA9D,EAAA4kB,QACAk7E,EAAA7jF,EAAAjc,EAAA4kB,QACAk8E,EAAAjB,EAAA7/F,EAAA4kB,QACAm8E,EAAAjB,EAAA9/F,EAAA4kB,QACA9gB,EAAAg9F,EAAA9gG,EAAA4kB,QACA3I,EAAA8kF,EAAA/gG,EAAA4kB,QACAi8E,EAAAhB,EAAAC,EAAAgB,EAAAC,EAAAj9F,EAAAmY,GACA4jF,EAAA/7F,EAAA9D,EAAA4kB,QACAk7E,EAAA7jF,EAAAjc,EAAA4kB,QACAk8E,EAAAjB,EAAA7/F,EAAA4kB,QACAm8E,EAAAjB,EAAA9/F,EAAA4kB,QACA9gB,EAAAg9F,EAAA9gG,EAAA4kB,QACA3I,EAAA8kF,EAAA/gG,EAAA4kB,QACAi8E,EAAAhB,EAAAC,EAAAgB,EAAAC,EAAAj9F,EAAAmY,GACAjc,EAAA2oC,KACA,MACA,SACAk3D,EAAA/7F,EAAA9D,EAAA4kB,QACAomD,EAAA/uD,EAAAjc,EAAA4kB,QACAk8E,EAAAjB,EAAA7/F,EAAA4kB,QACAuzD,EAAAnN,EAAAhrE,EAAA4kB,QACA9gB,EAAAg9F,EAAA9gG,EAAA4kB,QACAi8E,EAAAhB,EAAA70B,EAAA81B,EAAA3oB,EAAAr0E,EAAAq0E,GACA0nB,EAAA/7F,EAAA9D,EAAA4kB,QACAk8E,EAAAjB,EAAA7/F,EAAA4kB,QACAo8E,EAAA7oB,EAAAn4E,EAAA4kB,QACA9gB,EAAAg9F,EAAA9gG,EAAA4kB,QACAi8E,EAAAhB,EAAA1nB,EAAA2oB,EAAAE,EAAAl9F,EAAAmY,EACA,MACA,SACA,GAAAuuD,GAAA1mE,EAAA+mE,EAAA5uD,CACA4jF,GAAA/7F,EAAA9D,EAAA4kB,QACAk7E,EAAA7jF,EAAAjc,EAAA4kB,QACAk8E,EAAAjB,EAAA7/F,EAAA4kB,QACAm8E,EAAAjB,EAAA9/F,EAAA4kB,QACA9gB,EAAAg9F,EAAA9gG,EAAA4kB,QACA3I,EAAA8kF,EAAA/gG,EAAA4kB,QACAi8E,EAAAhB,EAAAC,EAAAgB,EAAAC,EAAAj9F,EAAAmY,GACA4jF,EAAA/7F,EAAA9D,EAAA4kB,QACAk7E,EAAA7jF,EAAAjc,EAAA4kB,QACAk8E,EAAAjB,EAAA7/F,EAAA4kB,QACAm8E,EAAAjB,EAAA9/F,EAAA4kB,QACA9gB,EAAAg9F,EACA7kF,EAAA8kF,EACAt+F,KAAAmZ,IAAA9X,EAAA0mE,GAAA/nE,KAAAmZ,IAAAK,EAAA4uD,GACA/mE,GAAA9D,EAAA4kB,QAEA3I,GAAAjc,EAAA4kB,QAEAi8E,EAAAhB,EAAAC,EAAAgB,EAAAC,EAAAj9F,EAAAmY,EACA,MACA,SACAtc,EAAA,wBAAA4F,GAEA,KACA,SACA,GAAAvF,EAAAkC,QAAA,GACA,GAAAm/F,GAAArhG,EAAA2oC,MACA24D,EAAAthG,EAAA2oC,KACA1sB,GAAAjc,EAAA2oC,MACA7kC,EAAA9D,EAAA2oC,MACAg3D,EAAA98F,MAAiBqc,IAAA,SACjBygF,EAAA98F,MACAqc,IAAA,YACAnD,MACAjY,EACAmY,IAGA,IAAAolD,GAAAm+B,EAAAtqF,EAAAmsD,KAAAj/D,OAAAC,aAAA6S,EAAAqsF,aAAAtkE,EAAAokE,KACAT,GAAA1rF,EAAAmiD,OAAAgK,EAAAo+B,SAAAE,EAAAzqF,GACAyqF,EAAA98F,MAAiBqc,IAAA,YACjBmiD,EAAAm+B,EAAAtqF,EAAAmsD,KAAAj/D,OAAAC,aAAA6S,EAAAqsF,aAAAtkE,EAAAqkE,MACAV,EAAA1rF,EAAAmiD,OAAAgK,EAAAo+B,SAAAE,EAAAzqF,GAEA,MACA,SACAisF,GAAAnhG,EAAAkC,QAAA,EACAg/F,GAAA,CACA,MACA,SAKA,QACAC,GAAAnhG,EAAAkC,QAAA,EACA7E,GAAA8jG,EAAA,KACAD,GAAA,CACA,MACA,SACAjlF,GAAAjc,EAAA2oC,MACA7kC,GAAA9D,EAAA2oC,MACA94B,EAAA/L,EAAAmY,GACAilF,GAAA,CACA,MACA,SACAp9F,GAAA9D,EAAA2oC,MACA94B,EAAA/L,EAAAmY,GACAilF,GAAA,CACA,MACA,SACAC,GAAAnhG,EAAAkC,QAAA,EACAg/F,GAAA,CACA,MACA,SACA,KAAAlhG,EAAAkC,OAAA,GACA29F,EAAA/7F,EAAA9D,EAAA4kB,QACAk7E,EAAA7jF,EAAAjc,EAAA4kB,QACAk8E,EAAAjB,EAAA7/F,EAAA4kB,QACAm8E,EAAAjB,EAAA9/F,EAAA4kB,QACA9gB,EAAAg9F,EAAA9gG,EAAA4kB,QACA3I,EAAA8kF,EAAA/gG,EAAA4kB,QACAi8E,EAAAhB,EAAAC,EAAAgB,EAAAC,EAAAj9F,EAAAmY,EAEAnY,IAAA9D,EAAA4kB,QACA3I,GAAAjc,EAAA4kB,QACA9U,EAAAhM,EAAAmY,EACA,MACA,SACA,KAAAjc,EAAAkC,OAAA,GACA4B,GAAA9D,EAAA4kB,QACA3I,GAAAjc,EAAA4kB,QACA9U,EAAAhM,EAAAmY,EAEA4jF,GAAA/7F,EAAA9D,EAAA4kB,QACAk7E,EAAA7jF,EAAAjc,EAAA4kB,QACAk8E,EAAAjB,EAAA7/F,EAAA4kB,QACAm8E,EAAAjB,EAAA9/F,EAAA4kB,QACA9gB,EAAAg9F,EAAA9gG,EAAA4kB,QACA3I,EAAA8kF,EAAA/gG,EAAA4kB,QACAi8E,EAAAhB,EAAAC,EAAAgB,EAAAC,EAAAj9F,EAAAmY,EACA,MACA,SAIA,IAHAjc,EAAAkC,OAAA,IACA4B,GAAA9D,EAAA4kB,SAEA5kB,EAAAkC,OAAA,GACA29F,EAAA/7F,EACAg8F,EAAA7jF,EAAAjc,EAAA4kB,QACAk8E,EAAAjB,EAAA7/F,EAAA4kB,QACAm8E,EAAAjB,EAAA9/F,EAAA4kB,QACA9gB,EAAAg9F,EACA7kF,EAAA8kF,EAAA/gG,EAAA4kB,QACAi8E,EAAAhB,EAAAC,EAAAgB,EAAAC,EAAAj9F,EAAAmY,EAEA,MACA,SAIA,IAHAjc,EAAAkC,OAAA,IACA+Z,GAAAjc,EAAA4kB,SAEA5kB,EAAAkC,OAAA,GACA29F,EAAA/7F,EAAA9D,EAAA4kB,QACAk7E,EAAA7jF,EACA6kF,EAAAjB,EAAA7/F,EAAA4kB,QACAm8E,EAAAjB,EAAA9/F,EAAA4kB,QACA9gB,EAAAg9F,EAAA9gG,EAAA4kB,QACA3I,EAAA8kF,EACAF,EAAAhB,EAAAC,EAAAgB,EAAAC,EAAAj9F,EAAAmY,EAEA,MACA,SACAjc,EAAA6C,MAAA8B,EAAAtH,IAAA,GAAAsH,EAAAtH,EAAA,aACAA,GAAA,CACA,MACA,SACAe,EAAA4B,EAAA2oC,MAAAzzB,EAAAssF,WACAP,EAAA/rF,EAAA6pF,OAAA3gG,GACA6iG,GACAj3E,EAAAi3E,EAEA,MACA,SACA,KAAAjhG,EAAAkC,OAAA,IACA29F,EAAA/7F,EACAg8F,EAAA7jF,EAAAjc,EAAA4kB,QACAk8E,EAAAjB,EAAA7/F,EAAA4kB,QACAm8E,EAAAjB,EAAA9/F,EAAA4kB,QACA9gB,EAAAg9F,EAAA9gG,EAAA4kB,QACA3I,EAAA8kF,GAAA,IAAA/gG,EAAAkC,OAAAlC,EAAA4kB,QAAA,GACAi8E,EAAAhB,EAAAC,EAAAgB,EAAAC,EAAAj9F,EAAAmY,GACA,IAAAjc,EAAAkC,SAGA29F,EAAA/7F,EAAA9D,EAAA4kB,QACAk7E,EAAA7jF,EACA6kF,EAAAjB,EAAA7/F,EAAA4kB,QACAm8E,EAAAjB,EAAA9/F,EAAA4kB,QACA3I,EAAA8kF,EAAA/gG,EAAA4kB,QACA9gB,EAAAg9F,GAAA,IAAA9gG,EAAAkC,OAAAlC,EAAA4kB,QAAA,GACAi8E,EAAAhB,EAAAC,EAAAgB,EAAAC,EAAAj9F,EAAAmY,EAEA,MACA,SACA,KAAAjc,EAAAkC,OAAA,IACA29F,EAAA/7F,EAAA9D,EAAA4kB,QACAk7E,EAAA7jF,EACA6kF,EAAAjB,EAAA7/F,EAAA4kB,QACAm8E,EAAAjB,EAAA9/F,EAAA4kB,QACA3I,EAAA8kF,EAAA/gG,EAAA4kB,QACA9gB,EAAAg9F,GAAA,IAAA9gG,EAAAkC,OAAAlC,EAAA4kB,QAAA,GACAi8E,EAAAhB,EAAAC,EAAAgB,EAAAC,EAAAj9F,EAAAmY,GACA,IAAAjc,EAAAkC,SAGA29F,EAAA/7F,EACAg8F,EAAA7jF,EAAAjc,EAAA4kB,QACAk8E,EAAAjB,EAAA7/F,EAAA4kB,QACAm8E,EAAAjB,EAAA9/F,EAAA4kB,QACA9gB,EAAAg9F,EAAA9gG,EAAA4kB,QACA3I,EAAA8kF,GAAA,IAAA/gG,EAAAkC,OAAAlC,EAAA4kB,QAAA,GACAi8E,EAAAhB,EAAAC,EAAAgB,EAAAC,EAAAj9F,EAAAmY,EAEA,MACA,SACA1W,EAAA,IACA5F,EAAA,qBAAA4F,GAEAA,EAAA,IACAvF,EAAA6C,KAAA0C,EAAA,KACMA,EAAA,IACNvF,EAAA6C,KAAA,KAAA0C,EAAA,KAAAZ,EAAAtH,KAAA,KACMkI,EAAA,IACNvF,EAAA6C,KAAA,MAAA0C,EAAA,KAAAZ,EAAAtH,KAAA,MAEA2C,EAAA6C,MAAA8B,EAAAtH,IAAA,GAAAsH,EAAAtH,EAAA,OAAAsH,EAAAtH,EAAA,MAAAsH,EAAAtH,EAAA,WACAA,GAAA,GAIA6jG,IACAlhG,EAAAkC,OAAA,IA7VA,GAAAlC,MACA8D,EAAA,EAAAmY,EAAA,EACAklF,EAAA,CA+VAn3E,GAAArlB,GAGA,QAAA88F,GAAAnoD,GACAt8C,KAAA0kG,eAAA3jG,OAAA2D,OAAA,MACA1E,KAAA2kG,0BAAA5jG,OAAA2D,OAAA,MACA1E,KAAAs8C,aA4CA,QAAAsoD,GAAAvqC,EAAAgK,EAAA/nB,GACAA,MACA,OACA,EACA,EACA,OACA,EACA,GAEAmoD,EAAAlkG,KAAAP,KAAAs8C,GACAt8C,KAAAq6D,SACAr6D,KAAAqkE,OAOA,QAAAwgC,GAAAC,EAAAzgC,EAAA/nB,EAAAioD,GACAjoD,MACA,KACA,EACA,EACA,KACA,EACA,GAEAmoD,EAAAlkG,KAAAP,KAAAs8C,GACAt8C,KAAAq6D,OAAAyqC,EAAAzqC,OACAr6D,KAAA+hG,OAAA+C,EAAA/C,WACA/hG,KAAAulD,MAAAu/C,EAAAv/C,UACAvlD,KAAAqkE,OACArkE,KAAAukG,gBAAAz1D,IACA9uC,KAAAwkG,WAAAxkG,KAAA+hG,OAAA78F,OAAA,SAAAlF,KAAA+hG,OAAA78F,OAAA,iBACAlF,KAAAokG,UAAApkG,KAAAulD,MAAArgD,OAAA,SAAAlF,KAAAulD,MAAArgD,OAAA,iBAOA,MAnFAu/F,GAAAjjG,WACAs5D,UAAA,SAAA0F,GACA,GAAA6D,GAAAm+B,EAAAxiG,KAAAqkE,KAAA7D,GACAt7C,EAAAllB,KAAA0kG,eAAArgC,EAAAo+B,QAQA,OAPAv9E,KACAA,EAAAllB,KAAA+kG,aAAA/kG,KAAAq6D,OAAAgK,EAAAo+B,UACAziG,KAAA0kG,eAAArgC,EAAAo+B,SAAAv9E,OAEAjgB,KAAAjF,KAAA2kG,0BAAAtgC,EAAAE,YACAvkE,KAAA2kG,0BAAAtgC,EAAAE,UAAAF,EAAAo+B,SAEAv9E,GAEA6/E,aAAA,SAAAp9F,GACA,IAAAA,GAAA,IAAAA,EAAAzC,QAAA,KAAAyC,EAAA,GACA,MArBA,EAuBA,IAAAg7F,KAeA,OAdAA,GAAA98F,MAAcqc,IAAA,SACdygF,EAAA98F,MACAqc,IAAA,YACAnD,KAAA/e,KAAAs8C,WAAAp5C,UAEAy/F,EAAA98F,MACAqc,IAAA,QACAnD,MACA,OACA,WAGA/e,KAAAglG,iBAAAr9F,EAAAg7F,GACAA,EAAA98F,MAAcqc,IAAA,YACdygF,GAEAqC,iBAAA,WACAriG,EAAA,4CAEAi4D,aAAA,SAAA4F,GACA,GAAA6D,GAAAm+B,EAAAxiG,KAAAqkE,KAAA7D,EACA,YAAAv7D,KAAAjF,KAAA0kG,eAAArgC,EAAAo+B,cAAAx9F,KAAAjF,KAAA2kG,0BAAAtgC,EAAAE,YAgBA9qD,EAAAwD,QAAA2nF,EAAAH,GACAO,iBAAA,SAAAr9F,EAAAg7F,GACAD,EAAA/6F,EAAAg7F,EAAA3iG,SAqBAyZ,EAAAwD,QAAA4nF,EAAAJ,GACAO,iBAAA,SAAAr9F,EAAAg7F,GACAiB,EAAAj8F,EAAAg7F,EAAA3iG,UAIA0E,OAAA,SAAAwT,EAAAkiC,GAIA,OAFAiqB,GAAA49B,EAAAC,EAAArnD,EAAAoqD,EAAAC,EADAx+F,EAAA,GAAAX,YAAAmS,EAAAxR,MAEAy+F,EAAA3D,EAAA96F,EAAA,GACArG,EAAA,EAAAqB,EAAA,GAA0BrB,EAAA8kG,EAAe9kG,IAAAqB,GAAA,IACzC,GAAA0jG,GAAArgG,EAAA2B,EAAAd,SAAAlE,IAAA,IACAwF,EAAAq6F,EAAA76F,EAAAhF,EAAA,GACAwD,EAAAq8F,EAAA76F,EAAAhF,EAAA,GACA,QAAA0jG,GACA,WACA/gC,EAAAo9B,EAAA/6F,EAAAQ,IAAAhC,EACA,MACA,YACA+8F,EAAAv7F,EAAAd,SAAAsB,IAAAhC,EACA,MACA,YACAg9F,EAAAx7F,EAAAd,SAAAsB,IAAAhC,EACA,MACA,YACAggG,EAAA1D,EAAA96F,EAAAQ,EAAA,IACA+9F,EAAAzD,EAAA96F,EAAAQ,EAAA,GACA,MACA,YACA2zC,EAAAinD,EAAAp7F,EAAAQ,IAAAhC,EAAAk1C,IAIA,GAAA6nD,EAAA,CACA,GAAA3lD,GAAA4oD,GACA,EAAAA,EACA,EACA,EACA,EAAAA,EACA,EACA,GANAhtF,EAAAokC,UAQA,WAAAsoD,GAAA5C,EAAAC,EAAAC,EAAA+C,GAAA5gC,EAAA/nB,GAEA,UAAAuoD,GAAAhqD,EAAAwpB,EAAAnsD,EAAAokC,WAAApkC,EAAAqsF,kBAIA5kG,GAAA2hG,uBAIA,SAAA5hG,EAAAC,EAAAO,GAEA,YA0UA,SAAAmlG,GAAAlrD,GACA,GAAAA,EAAAmC,YAGAnC,EAAAmC,WAAA,KAAA7wC,EAAA,IAGA,GAAAoS,GAAA,KAAAs8B,EAAAmC,WAAA,GACAwoB,EAAA3qB,EAAAuD,MACA,QAAAqd,KAAA+J,GACAA,EAAA/J,IAAAl9C,CAEAs8B,GAAA4qB,cAAAlnD,GAEA,QAAAynF,GAAAnrD,EAAAorD,GACA,IAAAprD,EAAAqpB,2BAGArpB,EAAAmpB,aAGAiiC,IAAAprD,EAAA6oB,iBAGA7oB,EAAAgoB,oBAAAvO,KAAA,CAGA,GAAAuO,MAAAwB,EAAA70B,GACA,QAAAy1B,KAAAghC,GAAA,CACA,GAAA7hC,GAAA6hC,EAAAhhC,GACA/D,EAAA9L,EAAAgP,EAAAC,IACA,IAAAnD,IACA2B,EAAAoC,GAAAn/D,OAAAC,aAAAm7D,IAGArmB,EAAAgoB,UAAAqjC,MAAArjC,IAEA,QAAArO,GAAAtzC,EAAAm4C,GACA,OAAAn4C,GACA,YACA,iBAAAm4C,EAAA1nD,EAAAE,OAAAF,EAAAC,KACA,oBACA,wBAAAynD,EAAA1nD,EAAAI,cAAAJ,EAAAG,YACA,gBACA,MAAAH,GAAAQ,QACA,gBACA,MAAAR,GAAAK,QACA,oBACA,MAAAL,GAAAM,YACA,eACA,MAAAN,GAAAU,OACA,aACA,MAAAV,GAAAS,KACA,SACA,MAAAT,GAAAV,SAGA,QAAAk1F,GAAA7kG,EAAA+iE,GACA,OAAA1+D,KAAA0+D,EAAA/iE,GACA,MAAAA,EAEA,IAAA4/D,GAAA9L,EAAA9zD,EAAA+iE,EACA,SAAAnD,EACA,OAAAn4D,KAAAs7D,GACA,GAAAA,EAAAt7D,KAAAm4D,EACA,MAAAn4D,EAKA,OADApG,GAAA,gDAAArB,GACAA,EA+mEA,QAAA8kG,GAAAvrD,EAAAorD,EAAAI,GACA,GACAlD,GAAAl+B,EAAAhjB,EADAqkD,EAAA7kG,OAAA2D,OAAA,MAEAu+D,KAAA9oB,EAAA6W,MAAA0C,GAAAwP,SACA,IAAA/oB,EAAA2oB,iBAEA,IADAvhB,EAAAzhB,EAAAqa,EAAA2oB,kBACAyB,EAAA,EAAoBA,EAAAhjB,EAAAr8C,OAAgCq/D,IACpDk+B,EAAAkD,EAAA3zD,QAAAuP,EAAAgjB,IAEAqhC,EAAArhC,GADAk+B,GAAA,EACAA,EAEA,MAGE,IAAAx/B,EACF,IAAAsB,IAAAghC,GACAK,EAAArhC,GAAAghC,EAAAhhC,OAIA,KADAhjB,EAAAthB,EACAskC,EAAA,EAAoBA,EAAAhjB,EAAAr8C,OAAgCq/D,IACpDk+B,EAAAkD,EAAA3zD,QAAAuP,EAAAgjB,IAEAqhC,EAAArhC,GADAk+B,GAAA,EACAA,EAEA,CAIA,IAAA9+B,GAAAd,EAAA1oB,EAAA0oB,WACA,IAAAA,EACA,IAAA0B,IAAA1B,GAAA,CACA,GAAAa,GAAAb,EAAA0B,EAEA,UADAk+B,EAAAkD,EAAA3zD,QAAA0xB,IACA,CACAC,IACAA,EAAA70B,IAEA,IAAA+2D,GAAAJ,EAAA/hC,EAAAC,EACAkiC,KAAAniC,IACA++B,EAAAkD,EAAA3zD,QAAA6zD,IAIAD,EAAArhC,GADAk+B,GAAA,EACAA,EAEA,EAIA,MAAAmD,GA/iFA,GAAA9iF,GAAA5iB,EAAA,GAEAqgC,GADArgC,EAAA,GACAA,EAAA,IACAozD,EAAApzD,EAAA,GACA4lG,EAAA5lG,EAAA,IACAy5C,EAAAz5C,EAAA,GACAkzD,EAAAlzD,EAAA,IACAmzD,EAAAnzD,EAAA,IACA6lG,EAAA7lG,EAAA,IACAmhG,EAAAnhG,EAAA,IACAuL,EAAAqX,EAAArX,qBACAwF,EAAA6R,EAAA7R,SACA7N,EAAA0f,EAAA1f,OACA2B,EAAA+d,EAAA/d,cACApC,EAAAmgB,EAAAngB,MACAV,EAAA6gB,EAAA7gB,KACA0G,EAAAma,EAAAna,QACAH,EAAAsa,EAAAta,MACAC,EAAAqa,EAAAra,MACAtB,EAAA2b,EAAA3b,WACAhD,EAAA2e,EAAA3e,OACAyC,EAAAkc,EAAAlc,SACArE,EAAAugB,EAAAvgB,KACAwW,EAAA+J,EAAA/J,qBACAjQ,EAAAga,EAAAha,QACA8c,EAAA2a,EAAA3a,OACAkpB,EAAAwkB,EAAAxkB,iBACAC,EAAAukB,EAAAvkB,yBACAuyD,EAAAwE,EAAAxE,oBACArhE,EAAA0Z,EAAA1Z,iBACAC,EAAAyZ,EAAAzZ,iBACAC,EAAAwZ,EAAAxZ,kBACAC,EAAAuZ,EAAAvZ,qBACAN,EAAA6Z,EAAA7Z,YACAu0B,EAAAjB,EAAAiB,cACAg5B,EAAAj6B,EAAAi6B,iBACAC,EAAAl6B,EAAAk6B,4BACAC,EAAAn6B,EAAAm6B,qCACAM,EAAAx6B,EAAAw6B,mBACAL,EAAAn6B,EAAAm6B,wBACA94B,EAAArB,EAAAqB,mBACAsxC,EAAAD,EAAAC,YACAhsD,EAAAqnD,EAAArnD,mBACAC,EAAAonD,EAAApnD,UACAsJ,EAAA89C,EAAA99C,YACAzI,EAAAumD,EAAAvmD,IACAkD,EAAAqjD,EAAArjD,UACArC,GAAA0lD,EAAA1lD,WACAyE,GAAAihD,EAAAjhD,eACAtB,GAAAuiD,EAAAviD,WACAN,GAAA6iD,EAAA7iD,SACAoC,GAAAygD,EAAAzgD,WACAqlD,GAAA,MACAC,GAAA,MACAC,IAAA,EACAC,GAAA,IACAC,IAAA,EACA3yC,IACA6R,WAAA,EACAkB,MAAA,EACAvD,SAAA,EACAojC,OAAA,EACAljC,YAAA,GACAmjC,OAAA,GACAC,OAAA,MACAC,SAAA,OACAC,UAAA,QAEAC,IACA,UACA,QACA,mBACA,QACA,SACA,WACA,aACA,SACA,UACA,YACA,cACA,YACA,aACA,WACA,OACA,QACA,SACA,SACA,QACA,OACA,MACA,MACA,QACA,OACA,OACA,MACA,QACA,QACA,OACA,QACA,YACA,OACA,QACA,UACA,WACA,KACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,cACA,YACA,eACA,cACA,aACA,QACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,IACA,YACA,MACA,aACA,aACA,YACA,QACA,WACA,SACA,SACA,YACA,YACA,SACA,SACA,cACA,YACA,SACA,QACA,WACA,SACA,SACA,cACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,SACA,cACA,YACA,SACA,SACA,OACA,WACA,UACA,SACA,YACA,aACA,aACA,YACA,YACA,QACA,WACA,WACA,KACA,SACA,WACA,YACA,YACA,eACA,MACA,KACA,cACA,YACA,UACA,KACA,WACA,cACA,eACA,QACA,KACA,SACA,eACA,aACA,aACA,UACA,SACA,cACA,QACA,gBACA,iBACA,WACA,mBACA,SACA,SACA,SACA,KACA,KACA,SACA,SACA,eACA,gBACA,YACA,aACA,SACA,UACA,YACA,YACA,WACA,WACA,gBACA,iBACA,KACA,KACA,YACA,iBACA,iBACA,eACA,cACA,cACA,cACA,SACA,YACA,SACA,SACA,cACA,YACA,SACA,SACA,cACA,QACA,SACA,SACA,cACA,SACA,WACA,aACA,QACA,SACA,QACA,YACA,OACA,UACA,eACA,SACA,QACA,SACA,SACA,SACA,SACA,SACA,SACA,YACA,MACA,MACA,SACA,SACA,QACA,QACA,QACA,WACA,cACA,cACA,gBACA,UACA,aACA,gBACA,QACA,SACA,SACA,aACA,WACA,WACA,SACA,SACA,SACA,SACA,UA0EAC,GAAA,WACA,QAAAA,GAAAlsC,EAAA8F,EAAAxF,EAAAt8C,EAAA4hD,EAAAumC,EAAA/9F,EAAAg+F,GACA9mG,KAAA06D,WACA16D,KAAAwgE,UACAxgE,KAAAg7D,SACAh7D,KAAA0e,QACA1e,KAAAsgE,UACAtgE,KAAA6mG,iBACA7mG,KAAA8I,UACA9I,KAAA8mG,WAKA,MAHAF,GAAAplG,UAAAulG,gBAAA,SAAArsC,EAAA8F,EAAAxF,EAAAt8C,EAAA4hD,EAAAumC,EAAA/9F,EAAAg+F,GACA,MAAA9mG,MAAA06D,cAAA16D,KAAAwgE,aAAAxgE,KAAAg7D,YAAAh7D,KAAA0e,WAAA1e,KAAAsgE,aAAAtgE,KAAA6mG,oBAAA7mG,KAAA8I,aAAA9I,KAAA8mG,cAEAF,KAEA/yC,GAAA,WACA,QAAAA,GAAAwQ,GACArkE,KAAAw5F,KAAAn1B,EA0BA,MAxBAxQ,GAAAryD,WACA0D,aACA,MAAAlF,MAAAw5F,KAAAt0F,QAEAmf,QAAA,SAAAha,GACA,OAAAk6D,KAAAvkE,MAAAw5F,KACAnvF,EAAAk6D,EAAAvkE,KAAAw5F,KAAAj1B,GAAAv+D,WAAA,KAGAgX,IAAA,SAAA3c,GACA,WAAA4E,KAAAjF,KAAAw5F,KAAAn5F,IAEAc,IAAA,SAAAd,GACA,MAAAL,MAAAw5F,KAAAn5F,IAEA65F,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ACA,GACA,GACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,GACA,EACA,GACA,GACA,EACA,GACA,KACA,GACA,GACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,EACA,GACA,GACA,KACA,KACA,KACA,KACA,KACA,GACA,GACA,GACA,EACA,EACA,EACA,EACA,GACA,GACA,GACA,KACA,GACA,EACA,EACA,GACA,GACA,GACA,EACA,EACA,EACA,GACA,GACA,GACA,GACA,EA6NAz6F,GAAA,GAAA0N,GAAA,GAAA7f,YAAAmS,EAAA2K,YACA,IAkBAg4B,GAAA24D,EAlBAC,GACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,OACA,QAEA14D,EAAA4yD,EAAAz1F,GACAitF,EAAApqD,EAAAoqD,UAEAjjD,EAAAnhD,OAAA2D,OAAA,KACAw9C,GAAA,aACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,UACAA,EAAA,SAEA,QADAp5B,GACAzoB,EAAA,EAAkBA,EAAA8kG,EAAe9kG,IACjCyoB,EAAA2kF,EAAAv1F,GACAu7F,EAAAzhE,QAAAlpB,EAAAs8E,KAAA,GAGA,IAAAt8E,EAAA5jB,SAGAg9C,EAAAp5B,EAAAs8E,KAAAt8E,EAEA,IAAA4qF,IAAAxxD,EAAA,OACA,IAAAwxD,EAcAxxD,EAAA,MACAv/C,EAAA,sCAEAu/C,EAAA,OACA3/C,EAAA,4DACA2/C,EAAA,MACAkjD,IAAA,OACA1+F,KAAA,GAAAX,YAAA,KAGA/F,KAAAypG,YAAA,MAxBA,CACA,YAAA1uD,EAAAklD,UAAA9lD,EAAAmoB,YAAApgB,EAAA,OAAAA,EAAA,OAAAA,EAAA,OAAAA,EAAA,KAIA,MAHAsxD,GAAA,GAAA5tF,GAAAs8B,EAAA,QAAAx7C,MACAm0C,EAAA,GAAAwuD,IAAAmK,EAAAr5D,GACAkrD,EAAAlrD,GACAn6C,KAAAupG,QAAA3oG,EAAAi6C,EAAAV,SAEA+H,GAAA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,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,OACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,SACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,UACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,SACAA,EAAA,QACAA,GAAA,SACAA,EAAA,YAGA7pB,GAAAw0D,cAIA,SAAAz0D,EAAAC,EAAAO,GAEA,YAEA,IAAA4iB,GAAA5iB,EAAA,GACAiZ,EAAA2J,EAAA3J,gBACAq6C,EAAA,SAAA86D,GAGA,QAAA96D,GAAA86D,GACA,GAAAC,GAAA,UACAvuH,MAAA60B,GAAAy5F,EAAA,WAAAA,EAAAC,EACAvuH,KAAA+0B,GAAAu5F,EAAA,WAAAA,EAAAC,EALA,GAAAC,GAAA,WACAC,EAAA,MAMAC,GAAA,CACA,KACA,GAAAp+F,aAAA,GAAAvqB,YAAA,GAAAwB,OAAA,KACE,MAAAxE,GACF2rH,GAAA,EAsGA,MApGAl7D,GAAAhyD,WACA2kE,OAAA,SAAAh3C,GACA,GACA9uB,GADAsuH,EAAAD,CAEA,oBAAAv/F,GAAA,CACA,GAAAzoB,GAAA,GAAAX,YAAA,EAAAopB,EAAAjqB,QACAA,EAAA,CACA,KAAA7E,EAAA,EAAeA,EAAA8uB,EAAAjqB,OAAkB7E,IAAA,CACjC,GAAAsH,GAAAwnB,EAAAnpB,WAAA3F,EACAsH,IAAA,IACAjB,EAAAxB,KAAAyC,GAEAjB,EAAAxB,KAAAyC,IAAA,EACAjB,EAAAxB,KAAA,IAAAyC,QAGI,IAAAwnB,YAAAppB,YACJW,EAAAyoB,EACAjqB,EAAAwB,EAAAxB,WACI,sBAAAiqB,IAAA,UAAAA,IAKJ,SAAArsB,OAAA,+EAJA4D,GAAAyoB,EACAjqB,EAAAwB,EAAAxB,OACAypH,GAAA,EAIA,GAAAC,GAAA1pH,GAAA,EACA2pH,EAAA3pH,EAAA,EAAA0pH,EACAE,EAAAH,EAAA,GAAAx1G,GAAAzS,EAAAkoH,GAAA,GAAAt+F,aAAA5pB,EAAAa,OAAA,EAAAqnH,GACA7+D,EAAA,EACAg/D,EAAA,EACAl6F,EAAA70B,KAAA60B,GACAE,EAAA/0B,KAAA+0B,GACAi6F,EAAA,WACAC,EAAA,UACAC,EAAAF,EAAAP,EACAU,EAAAF,EAAAR,CACA,KAAApuH,EAAA,EAAcA,EAAAuuH,EAAiBvuH,IAC/B,EAAAA,GACA0vD,EAAA++D,EAAAzuH,GACA0vD,IAAAi/D,EAAAR,EAAAz+D,EAAAm/D,EAAAT,EACA1+D,KAAA,GAAAA,IAAA,GACAA,IAAAk/D,EAAAT,EAAAz+D,EAAAo/D,EAAAV,EACA55F,GAAAk7B,EACAl7B,KAAA,GAAAA,IAAA,GACAA,EAAA,EAAAA,EAAA,aAEAk6F,EAAAD,EAAAzuH,GACA0uH,IAAAC,EAAAR,EAAAO,EAAAG,EAAAT,EACAM,KAAA,GAAAA,IAAA,GACAA,IAAAE,EAAAT,EAAAO,EAAAI,EAAAV,EACA15F,GAAAg6F,EACAh6F,KAAA,GAAAA,IAAA,GACAA,EAAA,EAAAA,EAAA,WAIA,QADAg7B,EAAA,EACA8+D,GACA,OACA9+D,GAAArpD,EAAA,EAAAkoH,EAAA,MACA,QACA7+D,GAAArpD,EAAA,EAAAkoH,EAAA,KACA,QACA7+D,GAAArpD,EAAA,EAAAkoH,GACA7+D,IAAAi/D,EAAAR,EAAAz+D,EAAAm/D,EAAAT,EACA1+D,KAAA,GAAAA,IAAA,GACAA,IAAAk/D,EAAAT,EAAAz+D,EAAAo/D,EAAAV,EACA,EAAAG,EACA/5F,GAAAk7B,EAEAh7B,GAAAg7B,EAKA,MAFA/vD,MAAA60B,KACA70B,KAAA+0B,KACA/0B,MAEAumE,UAAA,WACA,GAAA1xC,GAAA70B,KAAA60B,GACAE,EAAA/0B,KAAA+0B,EACAF,IAAAE,IAAA,EACAF,EAAA,WAAAA,EAAA25F,EAAA,MAAA35F,EAAA45F,EACA15F,EAAA,WAAAA,EAAAy5F,GAAA,YAAAz5F,GAAA,GAAAF,IAAA,IAAA25F,KAAA,GACA35F,GAAAE,IAAA,EACAF,EAAA,UAAAA,EAAA25F,EAAA,MAAA35F,EAAA45F,EACA15F,EAAA,WAAAA,EAAAy5F,GAAA,YAAAz5F,GAAA,GAAAF,IAAA,IAAA25F,KAAA,GACA35F,GAAAE,IAAA,CACA,QAAA10B,GAAA,EAAA6F,GACA2uB,EACAE,GACAnwB,EAAA,GAAiBvE,EAAA6F,EAAAhB,OAAgB7E,IAAA,CAEjC,IADA,GAAA+gG,IAAAl7F,EAAA7F,KAAA,GAAA2f,SAAA,IACAohF,EAAAl8F,OAAA,GACAk8F,EAAA,IAAAA,CAEAx8F,IAAAw8F,EAEA,MAAAx8F,KAGA4uD,IAEA7zD,GAAA6zD,kBAIA,SAAA9zD,EAAAC,EAAAO,GAEA,YA6yBA,SAAA8zD,GAAApc,EAAA96B,EAAAiC,GAOA,OACA,gBACAA,EACA64B,EATA96B,EAAAC,SAAA,UACAD,EAAAC,SAAA,QACAD,EAAA3b,IAAA,SACA2b,EAAA3b,IAAA,SACA2b,EAAA3b,IAAA,aACA2b,EAAA3b,IAAA,eAjzBA,GAAA2hB,GAAA5iB,EAAA,GACAmlB,EAAAnlB,EAAA,GACAq0B,EAAAr0B,EAAA,GACA2yD,EAAA3yD,EAAA,GACA0X,EAAAkL,EAAAlL,qBACAmB,EAAA+J,EAAA/J,qBACAU,EAAAqJ,EAAArJ,KACArW,EAAA0f,EAAA1f,OACAT,EAAAmgB,EAAAngB,MACAV,EAAA6gB,EAAA7gB,KACAM,EAAAugB,EAAAvgB,KACAqgB,EAAAyC,EAAAzC,SACA4R,EAAAD,EAAAC,YACAC,EAAAo+B,EAAAp+B,WACA26F,GACAC,eAAA,EACAC,MAAA,EACAC,OAAA,EACAC,eAAA,EACAC,kBAAA,EACAC,iBAAA,EACAC,kBAAA,GAEA57D,EAAA,WACA,QAAAA,KACApxD,EAAA,uCAgCA,MA9BAoxD,GAAAvyD,WACAouH,WAAA,SAAAC,GACAltH,EAAA,qCAAAktH,KAGA97D,EAAA4I,aAAA,SAAAD,EAAA3kC,EAAA5U,EAAAgU,EAAA7V,GACA,GAAAxE,GAAA8F,EAAA85C,KAAA5/C,KAAA4/C,EACAl8C,EAAA1D,EAAA3b,IAAA,cACA,KACA,OAAAqf,GACA,IAAA4uG,GAAAE,MACA,IAAAF,GAAAG,OACA,UAAAO,GAAAC,YAAAjzG,EAAAib,EAAA5U,EAAAgU,EACA,KAAAi4F,GAAAI,eACA,IAAAJ,GAAAK,kBACA,IAAAL,GAAAM,iBACA,IAAAN,GAAAO,kBACA,UAAAG,GAAAE,KAAAtzD,EAAA3kC,EAAA5U,EAAAgU,EACA,SACA,SAAAr0B,OAAA,4BAAA0d,IAEG,MAAAtc,GACH,GAAAA,YAAA6U,GACA,KAAA7U,EAIA,OAFAod,GAAAE,KAAA,sBAAuCs2B,UAAAlgC,EAAAK,iBACvC1V,EAAA2B,GACA,GAAA4rH,GAAAG,QAGAl8D,KAEA+7D,IACAA,GAAAI,aAAA,KACAJ,EAAAC,YAAA,WACA,QAAAA,GAAAjzG,EAAAib,EAAA5U,EAAAgU,GACAn3B,KAAA+3B,SACA/3B,KAAAmwH,UAAArzG,EAAAC,SAAA,UACA/c,KAAAowH,YAAAtzG,EAAA3b,IAAA,eACAnB,KAAAwgB,KAAA,SACA,IAAA0W,GAAApa,EAAA3b,IAAA,kBACA+1B,GAAAzC,EAAAzH,MAAAkK,EAAA/T,EAAAgU,GACAn3B,KAAAk3B,IACA,IAAAm5F,GAAA,EAAAnkE,EAAA,CACA,IAAApvC,EAAAE,IAAA,WACA,GAAAszG,GAAAxzG,EAAAC,SAAA,SACAszG,GAAAC,EAAA,GACApkE,EAAAokE,EAAA,GAEA,GAAAC,IAAA,EAAAC,GAAA,CACA,IAAA1zG,EAAAE,IAAA,WACA,GAAAyzG,GAAA3zG,EAAAC,SAAA,SACAwzG,GAAAE,EAAA,GACAD,EAAAC,EAAA,GAEA,KAAAzwH,KAAAowH,cAAAhB,EAAAG,QAAAgB,GAAAC,GAAA,CACA,GAAA7iD,GAAA3tE,KAAAmwH,UAAA,GACAniD,EAAAhuE,KAAAmwH,UAAA,GACAO,EAAA1wH,KAAAmwH,UAAA,GACAhrF,EAAAnlC,KAAAmwH,UAAA,GACAh1C,EAAAn7E,KAAAmwH,UAAA,GACAQ,EAAA3wH,KAAAmwH,UAAA,GACAS,EAAAnrH,KAAAuV,MAAA2yD,EAAAxoC,IAAAwoC,EAAAxoC,IAAA6oC,EAAAmN,IAAAnN,EAAAmN,GACAu1C,IAAAC,EAAAC,GAAAD,GAAAD,EAAAE,GACAruH,EAAA,gCAGAvC,KAAAuwH,cACAvwH,KAAAwwH,WACA,IAAAtoF,GAAAprB,EAAA3b,IAAA,YACA+jB,EAAAsP,EAAAyT,WAAA9kB,EAAA+kB,GACA8B,EAAAkiB,EAAAmkE,EACA9vB,EAAAv2D,EAAA,GACA6mF,EAAA7wH,KAAA6wH,aACA,IAAAR,GAAAnkE,GAAAq0C,GAAA,EAEA,WADAt+F,GAAA,sBAKA,QADA+hF,GADAhoD,EAAA,GAAA1C,cAAApC,EAAAN,UAAAk6F,EAAA,GAAAx3F,cAAA,GAEAj5B,EAAAgwH,EAAkBhwH,GAAA6rD,EAAS7rD,GAAAkgG,EAAA,CAC3BuwB,EAAA,GAAAzwH,EACA6kB,EAAA4rG,EAAA,EAAA90F,EAAA,GACAgoD,EAAA9sD,EAAAvB,OAAAqG,EAAA,EACA,IAAA+0F,GAAAt3G,EAAAE,WAAAqqE,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACA6sC,GAAAhrH,OACAxF,EAAAgwH,GAAArmF,EACA+mF,IAGA,GAAAC,GAAA,aACAl0G,GAAAE,IAAA,gBACAgnE,EAAA9sD,EAAAvB,OAAA7Y,EAAA3b,IAAA,iBACA6vH,EAAAv3G,EAAAE,WAAAqqE,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAusC,IACAM,EAAAp0G,SACA,EACAu0G,IAEAH,EAAA,OAAAf,EAAAI,cAEAM,IACAK,IAAA3rH,OAAA,OAAA4qH,EAAAI,aACAW,EAAAhrH,MACA,EACAmrH,KAGAhxH,KAAA6wH,aAuDA,MArDAd,GAAAvuH,WACA4rB,MAAA,WACA,GAEA5M,GAAA+oG,EAAAnvG,EAAA62G,EAAAP,EAFAP,EAAAnwH,KAAAmwH,UACAC,EAAApwH,KAAAowH,WAEAA,KAAAhB,EAAAE,OACA/F,GACA4G,EAAA,GACAA,EAAA,IAEA/1G,GACA+1G,EAAA,GACAA,EAAA,IAEAc,EAAA,KACAP,EAAA,KACAlwG,EAAA,SACI4vG,IAAAhB,EAAAG,QACJhG,GACA4G,EAAA,GACAA,EAAA,IAEA/1G,GACA+1G,EAAA,GACAA,EAAA,IAEAc,EAAAd,EAAA,GACAO,EAAAP,EAAA,GACA3vG,EAAA,UAEA7d,EAAA,4BAAAytH,EAEA,IAAAr4F,GAAA/3B,KAAA+3B,MACA,IAAAA,IACAwxF,EAAA9vG,EAAAQ,eAAAsvG,EAAAxxF,GACA3d,EAAAX,EAAAQ,eAAAG,EAAA2d,GACAq4F,IAAAhB,EAAAG,QAAA,CACA,GAAA1xG,GAAApE,EAAAkB,8BAAAod,EACAk5F,IAAApzG,EAAA,GACA6yG,GAAA7yG,EAAA,GAGA,OACA,cACA2C,EACAxgB,KAAA6wH,WACAtH,EACAnvG,EACA62G,EACAP,KAIAX,KAEAD,EAAAE,KAAA,WACA,QAAAkB,GAAAvpG,EAAA0iD,GACArqE,KAAA2nB,SACA3nB,KAAAqqE,UACArqE,KAAAuH,OAAA,EACAvH,KAAA8mB,aAAA,CACA,IAAA8P,GAAAyzC,EAAAzzC,QACA52B,MAAAmxH,YAAA,GAAA73F,cAAA1C,EACA,IAAAw6F,GAAA/mD,EAAA3U,WAAA9+B,QACA52B,MAAAqxH,cAAAhnD,EAAAinD,QAAA,GAAAh4F,cAAA83F,GAAApxH,KAAAmxH,YA6EA,QAAAI,GAAAC,EAAAz/E,GAMA,IALA,GAAA0/E,GAAAD,EAAAC,OACAxmG,EAAAumG,EAAAvmG,OACA6gB,KACA4lF,KACAC,EAAA,EACA5/E,EAAA6/E,SAAA,CACA,GAAA1nE,GAAAnY,EAAA8/E,WACAC,EAAA//E,EAAAggF,iBACA/1F,EAAA+V,EAAAigF,gBACA,QAAAL,EAAA,CAEA,OADAvuH,EAAA,GAAA8mD,MAAA,wBACAA,GACA,OACAynE,EAAA,CACA,MACA,QACAD,EAAA7rH,KAAA6rH,IAAAxsH,OAAA,GAAAwsH,IAAAxsH,OAAA,IACAysH,EAAA,CACA,MACA,QACAD,EAAA7rH,KAAA6rH,IAAAxsH,OAAA,GAAAwsH,IAAAxsH,OAAA,IACAysH,EAAA,EAGA7lF,EAAAjmC,KAAAqkD,GAEAwnE,EAAA7rH,KAAA4rH,EAAAvsH,QACAusH,EAAA5rH,KAAAisH,GACA7mG,EAAAplB,KAAAm2B,GACA21F,IACA5/E,EAAAkgF,QAEAT,EAAAU,QAAArsH,MACA2a,KAAA,YACAixG,OAAA,GAAAnpG,YAAAopG,GACAzmG,OAAA,GAAA3C,YAAAopG,KAGA,QAAAS,GAAAX,EAAAz/E,EAAAqgF,GAIA,IAHA,GAAAX,GAAAD,EAAAC,OACAxmG,EAAAumG,EAAAvmG,OACAymG,KACA3/E,EAAA6/E,SAAA,CACA,GAAAE,GAAA//E,EAAAggF,iBACA/1F,EAAA+V,EAAAigF,gBACAN,GAAA7rH,KAAA4rH,EAAAvsH,QACAusH,EAAA5rH,KAAAisH,GACA7mG,EAAAplB,KAAAm2B,GAEAw1F,EAAAU,QAAArsH,MACA2a,KAAA,UACAixG,OAAA,GAAAnpG,YAAAopG,GACAzmG,OAAA,GAAA3C,YAAAopG,GACAU,mBA4BA,QAAAC,GAAAb,EAAAl4G,GACA,GAAAg5G,GAAAd,EAAAU,QAAA54G,EACAlW,GAAA,UAAAkvH,EAAA9xG,KAAA,+BACA,IAAAixG,GAAAD,EAAAC,OAAAxmG,EAAAumG,EAAAvmG,OACAunD,EAAA8/C,EAAAb,OACAc,EAAAD,EAAArnG,OACAunG,EAAA/sH,KAAAC,IAAA+rH,EAAAj/C,EAAA,OAAAi/C,EAAAj/C,EAAA,OAAAi/C,EAAAj/C,EAAA,QAAAi/C,EAAAj/C,EAAA,SACAigD,EAAAhtH,KAAAC,IAAA+rH,EAAAj/C,EAAA,OAAAi/C,EAAAj/C,EAAA,OAAAi/C,EAAAj/C,EAAA,QAAAi/C,EAAAj/C,EAAA,SACAkgD,EAAAjtH,KAAA+U,IAAAi3G,EAAAj/C,EAAA,OAAAi/C,EAAAj/C,EAAA,OAAAi/C,EAAAj/C,EAAA,QAAAi/C,EAAAj/C,EAAA,SACAmgD,EAAAltH,KAAA+U,IAAAi3G,EAAAj/C,EAAA,OAAAi/C,EAAAj/C,EAAA,OAAAi/C,EAAAj/C,EAAA,QAAAi/C,EAAAj/C,EAAA,SACAogD,EAAAntH,KAAAymC,MAAAwmF,EAAAF,GAAAK,GAAArB,EAAArnF,OAAA,GAAAqnF,EAAArnF,OAAA,IACAyoF,GAAAntH,KAAA+U,IAAAs4G,EAAArtH,KAAAC,IAAAqtH,EAAAH,GACA,IAAAI,GAAAvtH,KAAAymC,MAAAymF,EAAAF,GAAAI,GAAArB,EAAArnF,OAAA,GAAAqnF,EAAArnF,OAAA,IACA6oF,GAAAvtH,KAAA+U,IAAAs4G,EAAArtH,KAAAC,IAAAqtH,EAAAC,GAQA,QAPAZ,GAAAQ,EAAA,EACAK,EAAA,GAAA3qG,aAAA0qG,EAAA,GAAAZ,GACAc,EAAA,GAAA5qG,aAAA0qG,EAAA,GAAAZ,GACA3nG,EAAA,EACA0oG,EAAA,GAAAptH,YAAA,GAAAqtH,EAAA,GAAArtH,YAAA,GACA+jC,EAAA7e,EAAAsnG,EAAA,IAAAxoF,EAAA9e,EAAAsnG,EAAA,IAAAc,EAAApoG,EAAAsnG,EAAA,IAAAe,EAAAroG,EAAAsnG,EAAA,IACAgB,EAAAC,EAAAR,GAAAS,EAAAD,EAAAZ,GACAniG,EAAA,EAAmBA,GAAAuiG,EAAiBviG,IAAA,CACpC0iG,EAAA,IAAArpF,EAAA,IAAAkpF,EAAAviG,GAAA4iG,EAAA,GAAA5iG,GAAAuiG,EAAA,EACAG,EAAA,IAAArpF,EAAA,IAAAkpF,EAAAviG,GAAA4iG,EAAA,GAAA5iG,GAAAuiG,EAAA,EACAG,EAAA,IAAArpF,EAAA,IAAAkpF,EAAAviG,GAAA4iG,EAAA,GAAA5iG,GAAAuiG,EAAA,EACAI,EAAA,IAAArpF,EAAA,IAAAipF,EAAAviG,GAAA6iG,EAAA,GAAA7iG,GAAAuiG,EAAA,EACAI,EAAA,IAAArpF,EAAA,IAAAipF,EAAAviG,GAAA6iG,EAAA,GAAA7iG,GAAAuiG,EAAA,EACAI,EAAA,IAAArpF,EAAA,IAAAipF,EAAAviG,GAAA6iG,EAAA,GAAA7iG,GAAAuiG,EAAA,CACA,QAAA3M,GAAA,EAAoBA,GAAAuM,EAAiBvM,IAAA57F,IACrC,OAAAgG,OAAAuiG,GAAA,IAAA3M,OAAAuM,EAAA,CAKA,OAFA9rH,GAAA,EAAAmY,EAAA,EACA6U,EAAA,EACAzzB,EAAA,EAAmBA,GAAA,EAAQA,IAC3B,OAAAurB,GAAA,EAAoBA,GAAA,EAAQA,IAAAkI,IAAA,CAC5B,GAAAtzB,GAAA+yH,EAAA9iG,GAAApwB,GAAAozH,EAAApN,GAAAz6F,EACA9kB,IAAA2qH,EAAAj/C,EAAA1+C,IAAA,GAAAtzB,EACAye,GAAAwyG,EAAAj/C,EAAA1+C,IAAA,GAAAtzB,EAGAyyH,EAAAxoG,GAAAgnG,EAAAvsH,OACAusH,EAAA5rH,MACAiB,EACAmY,IAEAi0G,EAAAzoG,GAAAQ,EAAA/lB,MACA,IAAAwuH,GAAA,GAAA3tH,YAAA,EACA2tH,GAAA,IAAAP,EAAA,IAAAP,EAAAvM,GAAA+M,EAAA,GAAA/M,GAAAuM,EAAA,EACAc,EAAA,IAAAP,EAAA,IAAAP,EAAAvM,GAAA+M,EAAA,GAAA/M,GAAAuM,EAAA,EACAc,EAAA,IAAAP,EAAA,IAAAP,EAAAvM,GAAA+M,EAAA,GAAA/M,GAAAuM,EAAA,EACA3nG,EAAAplB,KAAA6tH,IAGAT,EAAA,GAAAzgD,EAAA,GACA0gD,EAAA,GAAAX,EAAA,GACAU,EAAAL,GAAApgD,EAAA,GACA0gD,EAAAN,GAAAL,EAAA,GACAU,EAAAb,EAAAY,GAAAxgD,EAAA,IACA0gD,EAAAd,EAAAY,GAAAT,EAAA,GACAU,EAAAb,EAAAY,EAAAJ,GAAApgD,EAAA,IACA0gD,EAAAd,EAAAY,EAAAJ,GAAAL,EAAA,GACAf,EAAAU,QAAA54G,IACAkH,KAAA,UACAixG,OAAAwB,EACAhoG,OAAAioG,EACAd,kBAGA,QAAAuB,GAAAnC,EAAAz/E,GAKA,IAJA,GAAA0/E,GAAAD,EAAAC,OACAxmG,EAAAumG,EAAAvmG,OACAymG,EAAA,GAAAppG,YAAA,IACA4O,EAAA,GAAA5O,YAAA,GACAypB,EAAA6/E,SAAA,CACA,GAAA1nE,GAAAnY,EAAA8/E,UACAzuH,GAAA,GAAA8mD,MAAA,uBACA,IAAA7pD,GAAAmG,EACAgsE,EAAAi/C,EAAAvsH,MACA,KAAA7E,EAAA,EAAAmG,EAAA,IAAA0jD,EAAA,KAAqC7pD,EAAAmG,EAAQnG,IAC7CoxH,EAAA5rH,KAAAksC,EAAAggF,iBAEA,IAAAQ,GAAAtnG,EAAA/lB,MACA,KAAA7E,EAAA,EAAAmG,EAAA,IAAA0jD,EAAA,IAAoC7pD,EAAAmG,EAAQnG,IAC5C4qB,EAAAplB,KAAAksC,EAAAigF,iBAEA,IAAAxlE,GAAA/C,EAAA8C,EAAAqnE,CACA,QAAA1pE,GACA,OACAwnE,EAAA,IAAAl/C,EAAA,EACAk/C,EAAA,IAAAl/C,EAAA,EACAk/C,EAAA,IAAAl/C,EAAA,EACAk/C,EAAA,IAAAl/C,EAAA,EACAk/C,EAAA,GAAAl/C,EAAA,EACAk/C,EAAA,IAAAl/C,EAAA,EACAk/C,EAAA,GAAAl/C,EAAA,EACAk/C,EAAA,GAAAl/C,EAAA,EACAk/C,EAAA,GAAAl/C,EACAk/C,EAAA,GAAAl/C,EAAA,GACAk/C,EAAA,GAAAl/C,EAAA,GACAk/C,EAAA,GAAAl/C,EAAA,EACAt7C,EAAA,GAAAq7F,EAAA,EACAr7F,EAAA,GAAAq7F,EAAA,EACAr7F,EAAA,GAAAq7F,EACAr7F,EAAA,GAAAq7F,EAAA,CACA,MACA,QACA/lE,EAAAklE,EAAA,IACAjoE,EAAAioE,EAAA,IACAnlE,EAAAmlE,EAAA,IACAkC,EAAAlC,EAAA,IACAA,EAAA,IAAAkC,EACAlC,EAAA,IAAAl/C,EAAA,EACAk/C,EAAA,IAAAl/C,EAAA,EACAk/C,EAAA,IAAAl/C,EAAA,EACAk/C,EAAA,GAAAnlE,EACAmlE,EAAA,IAAAl/C,EAAA,EACAk/C,EAAA,GAAAjoE,EACAioE,EAAA,GAAAl/C,EAAA,EACAk/C,EAAA,GAAAllE,EACAklE,EAAA,GAAAl/C,EAAA,EACAk/C,EAAA,GAAAl/C,EAAA,EACAk/C,EAAA,GAAAl/C,EAAA,EACAhmB,EAAAt1B,EAAA,GACAuyB,EAAAvyB,EAAA,GACAA,EAAA,GAAAuyB,EACAvyB,EAAA,GAAAq7F,EACAr7F,EAAA,GAAAs1B,EACAt1B,EAAA,GAAAq7F,EAAA,CACA,MACA,QACA/lE,EAAAklE,EAAA,IACAjoE,EAAAioE,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAl/C,EAAA,EACAk/C,EAAA,IAAAl/C,EAAA,EACAk/C,EAAA,IAAAl/C,EAAA,EACAk/C,EAAA,GAAAA,EAAA,GACAA,EAAA,IAAAl/C,EAAA,EACAk/C,EAAA,GAAAjoE,EACAioE,EAAA,GAAAl/C,EAAA,EACAk/C,EAAA,GAAAllE,EACAklE,EAAA,GAAAl/C,EAAA,EACAk/C,EAAA,GAAAl/C,EAAA,EACAk/C,EAAA,GAAAl/C,EAAA,EACAhmB,EAAAt1B,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAq7F,EACAr7F,EAAA,GAAAs1B,EACAt1B,EAAA,GAAAq7F,EAAA,CACA,MACA,QACAb,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAl/C,EAAA,EACAk/C,EAAA,IAAAl/C,EAAA,EACAk/C,EAAA,IAAAl/C,EAAA,EACAk/C,EAAA,GAAAA,EAAA,GACAA,EAAA,IAAAl/C,EAAA,EACAk/C,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAl/C,EAAA,EACAk/C,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAl/C,EAAA,EACAk/C,EAAA,GAAAl/C,EAAA,EACAk/C,EAAA,GAAAl/C,EAAA,EACAt7C,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAq7F,EACAr7F,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAq7F,EAAA,EAGAb,EAAA,GAAAD,EAAAvsH,OACAusH,EAAA5rH,QACA,EAAA4rH,EAAAC,EAAA,OAAAD,EAAAC,EAAA,WAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,WAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,WAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,aACA,EAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,WAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,WAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,WAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,aAEAA,EAAA,GAAAD,EAAAvsH,OACAusH,EAAA5rH,QACA,EAAA4rH,EAAAC,EAAA,OAAAD,EAAAC,EAAA,WAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,WAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,YAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,cACA,EAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,WAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,WAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,YAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,cAEAA,EAAA,GAAAD,EAAAvsH,OACAusH,EAAA5rH,QACA,EAAA4rH,EAAAC,EAAA,QAAAD,EAAAC,EAAA,UAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,YAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,YAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,aACA,EAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,UAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,YAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,YAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,aAEAA,EAAA,IAAAD,EAAAvsH,OACAusH,EAAA5rH,QACA,EAAA4rH,EAAAC,EAAA,QAAAD,EAAAC,EAAA,UAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,YAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,WAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,aACA,EAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,UAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,YAAAD,EAAAC,EAAA,QAAAD,EAAAC,EAAA,WAAAD,EAAAC,EAAA,OAAAD,EAAAC,EAAA,aAEAF,EAAAU,QAAArsH,MACA2a,KAAA,QACAixG,OAAA,GAAAnpG,YAAAopG,GACAzmG,OAAA,GAAA3C,YAAA4O,MAIA,QAAA28F,GAAArC,EAAAz/E,GAKA,IAJA,GAAA0/E,GAAAD,EAAAC,OACAxmG,EAAAumG,EAAAvmG,OACAymG,EAAA,GAAAppG,YAAA,IACA4O,EAAA,GAAA5O,YAAA,GACAypB,EAAA6/E,SAAA,CACA,GAAA1nE,GAAAnY,EAAA8/E,UACAzuH,GAAA,GAAA8mD,MAAA,uBACA,IAAA7pD,GAAAmG,EACAgsE,EAAAi/C,EAAAvsH,MACA,KAAA7E,EAAA,EAAAmG,EAAA,IAAA0jD,EAAA,MAAsC7pD,EAAAmG,EAAQnG,IAC9CoxH,EAAA5rH,KAAAksC,EAAAggF,iBAEA,IAAAQ,GAAAtnG,EAAA/lB,MACA,KAAA7E,EAAA,EAAAmG,EAAA,IAAA0jD,EAAA,IAAoC7pD,EAAAmG,EAAQnG,IAC5C4qB,EAAAplB,KAAAksC,EAAAigF,iBAEA,IAAAxlE,GAAA/C,EAAA8C,EAAAqnE,CACA,QAAA1pE,GACA,OACAwnE,EAAA,IAAAl/C,EAAA,EACAk/C,EAAA,IAAAl/C,EAAA,EACAk/C,EAAA,IAAAl/C,EAAA,EACAk/C,EAAA,IAAAl/C,EAAA,EACAk/C,EAAA,GAAAl/C,EAAA,EACAk/C,EAAA,GAAAl/C,EAAA,GACAk/C,EAAA,IAAAl/C,EAAA,GACAk/C,EAAA,IAAAl/C,EAAA,EACAk/C,EAAA,GAAAl/C,EAAA,EACAk/C,EAAA,GAAAl/C,EAAA,GACAk/C,EAAA,GAAAl/C,EAAA,GACAk/C,EAAA,GAAAl/C,EAAA,EACAk/C,EAAA,GAAAl/C,EACAk/C,EAAA,GAAAl/C,EAAA,GACAk/C,EAAA,GAAAl/C,EAAA,GACAk/C,EAAA,GAAAl/C,EAAA,EACAt7C,EAAA,GAAAq7F,EAAA,EACAr7F,EAAA,GAAAq7F,EAAA,EACAr7F,EAAA,GAAAq7F,EACAr7F,EAAA,GAAAq7F,EAAA,CACA,MACA,QACA/lE,EAAAklE,EAAA,IACAjoE,EAAAioE,EAAA,IACAnlE,EAAAmlE,EAAA,IACAkC,EAAAlC,EAAA,IACAA,EAAA,IAAAkC,EACAlC,EAAA,IAAAl/C,EAAA,EACAk/C,EAAA,IAAAl/C,EAAA,EACAk/C,EAAA,IAAAl/C,EAAA,EACAk/C,EAAA,GAAAnlE,EACAmlE,EAAA,GAAAl/C,EAAA,EACAk/C,EAAA,IAAAl/C,EAAA,GACAk/C,EAAA,IAAAl/C,EAAA,EACAk/C,EAAA,GAAAjoE,EACAioE,EAAA,GAAAl/C,EAAA,EACAk/C,EAAA,GAAAl/C,EAAA,GACAk/C,EAAA,GAAAl/C,EAAA,EACAk/C,EAAA,GAAAllE,EACAklE,EAAA,GAAAl/C,EAAA,EACAk/C,EAAA,GAAAl/C,EAAA,EACAk/C,EAAA,GAAAl/C,EAAA,EACAhmB,EAAAt1B,EAAA,GACAuyB,EAAAvyB,EAAA,GACAA,EAAA,GAAAuyB,EACAvyB,EAAA,GAAAq7F,EACAr7F,EAAA,GAAAs1B,EACAt1B,EAAA,GAAAq7F,EAAA,CACA,MACA,QACA/lE,EAAAklE,EAAA,IACAjoE,EAAAioE,EAAA,IACAA,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAl/C,EAAA,EACAk/C,EAAA,IAAAl/C,EAAA,EACAk/C,EAAA,IAAAl/C,EAAA,EACAk/C,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAl/C,EAAA,EACAk/C,EAAA,IAAAl/C,EAAA,GACAk/C,EAAA,IAAAl/C,EAAA,EACAk/C,EAAA,GAAAjoE,EACAioE,EAAA,GAAAl/C,EAAA,EACAk/C,EAAA,GAAAl/C,EAAA,GACAk/C,EAAA,GAAAl/C,EAAA,EACAk/C,EAAA,GAAAllE,EACAklE,EAAA,GAAAl/C,EAAA,EACAk/C,EAAA,GAAAl/C,EAAA,EACAk/C,EAAA,GAAAl/C,EAAA,EACAhmB,EAAAt1B,EAAA,GACAA,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAq7F,EACAr7F,EAAA,GAAAs1B,EACAt1B,EAAA,GAAAq7F,EAAA,CACA,MACA,QACAb,EAAA,IAAAA,EAAA,GACAA,EAAA,IAAAl/C,EAAA,EACAk/C,EAAA,IAAAl/C,EAAA,EACAk/C,EAAA,IAAAl/C,EAAA,EACAk/C,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAl/C,EAAA,EACAk/C,EAAA,IAAAl/C,EAAA,GACAk/C,EAAA,IAAAl/C,EAAA,EACAk/C,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAl/C,EAAA,EACAk/C,EAAA,GAAAl/C,EAAA,GACAk/C,EAAA,GAAAl/C,EAAA,EACAk/C,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAl/C,EAAA,EACAk/C,EAAA,GAAAl/C,EAAA,EACAk/C,EAAA,GAAAl/C,EAAA,EACAt7C,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAq7F,EACAr7F,EAAA,GAAAA,EAAA,GACAA,EAAA,GAAAq7F,EAAA,EAGAf,EAAAU,QAAArsH,MACA2a,KAAA,QACAixG,OAAA,GAAAnpG,YAAAopG,GACAzmG,OAAA,GAAA3C,YAAA4O,MAIA,QAAA48F,GAAAtC,GAEA,OADAl+B,GAAAk+B,EAAAC,OAAA,MAAAl+B,EAAAi+B,EAAAC,OAAA,MAAA3mD,EAAAwoB,EAAAE,EAAAD,EACAlzF,EAAA,EAAAmG,EAAAgrH,EAAAC,OAAAvsH,OAA0C7E,EAAAmG,EAAQnG,IAAA,CAClD,GAAAyG,GAAA0qH,EAAAC,OAAApxH,GAAA,GAAA4e,EAAAuyG,EAAAC,OAAApxH,GAAA,EACAizF,KAAAxsF,IAAAwsF,EACAC,IAAAt0E,IAAAs0E,EACAzoB,IAAAhkE,IAAAgkE,EACA0oB,IAAAv0E,IAAAu0E,EAEAg+B,EAAArnF,QACAmpD,EACAC,EACAzoB,EACA0oB,GAGA,QAAAugC,GAAAvC,GACA,GAAAnxH,GAAAmG,EAAAolB,EAAAwc,EACAqpF,EAAAD,EAAAC,OACAuC,EAAA,GAAA16F,cAAA,EAAAm4F,EAAAvsH,OACA,KAAA7E,EAAA,EAAAurB,EAAA,EAAAplB,EAAAirH,EAAAvsH,OAAwC7E,EAAAmG,EAAQnG,IAAA,CAChD,GAAA4zH,GAAAxC,EAAApxH,EACA2zH,GAAApoG,KAAAqoG,EAAA,GACAD,EAAApoG,KAAAqoG,EAAA,GAEAzC,EAAAC,OAAAuC,CACA,IAAA/oG,GAAAumG,EAAAvmG,OACAipG,EAAA,GAAAnuH,YAAA,EAAAklB,EAAA/lB,OACA,KAAA7E,EAAA,EAAAurB,EAAA,EAAAplB,EAAAykB,EAAA/lB,OAAwC7E,EAAAmG,EAAQnG,IAAA,CAChD,GAAAI,GAAAwqB,EAAA5qB,EACA6zH,GAAAtoG,KAAAnrB,EAAA,GACAyzH,EAAAtoG,KAAAnrB,EAAA,GACAyzH,EAAAtoG,KAAAnrB,EAAA,GAEA+wH,EAAAvmG,OAAAipG,CACA,IAAAhC,GAAAV,EAAAU,OACA,KAAA7xH,EAAA,EAAAmG,EAAA0rH,EAAAhtH,OAAkC7E,EAAAmG,EAAQnG,IAAA,CAC1C,GAAAiyH,GAAAJ,EAAA7xH,GAAAqxH,EAAAY,EAAAb,OAAAv6F,EAAAo7F,EAAArnG,MACA,KAAAW,EAAA,EAAAwc,EAAAspF,EAAAxsH,OAA8B0mB,EAAAwc,EAAQxc,IACtC8lG,EAAA9lG,IAAA,EACAsL,EAAAtL,IAAA,GAIA,QAAAokG,GAAAroG,EAAAoQ,EAAA5U,EAAAgU,GACA/zB,EAAAwf,EAAA+E,GAAA,4BACA,IAAA7K,GAAA6K,EAAA7K,IACA9c,MAAA+3B,SACA/3B,KAAAowH,YAAAtzG,EAAA3b,IAAA,eACAnB,KAAAwgB,KAAA,UACAxgB,KAAA82D,KAAAh6C,EAAAC,SAAA,OACA,IAAAma,GAAApa,EAAA3b,IAAA,kBACA+1B,GAAAzC,EAAAzH,MAAAkK,EAAA/T,EAAAgU,GACAn3B,KAAAk3B,KACAl3B,KAAAgxH,WAAAl0G,EAAAE,IAAA,cAAAka,EAAAvB,OAAA7Y,EAAA3b,IAAA,qBACA,IAAA+mC,GAAAprB,EAAA3b,IAAA,YACA+jB,EAAAgjB,EAAA1T,EAAAyT,WAAA9kB,EAAA+kB,GAAA,IACAloC,MAAAyxH,UACAzxH,KAAAirB,UACAjrB,KAAAkyH,UACA,IAAAiC,IACAC,kBAAAt3G,EAAA3b,IAAA,qBACAurB,iBAAA5P,EAAA3b,IAAA,oBACAkzH,YAAAv3G,EAAA3b,IAAA,eACA63B,OAAAlc,EAAAC,SAAA,UACAu0G,QAAApsG,EACAwwC,WAAAx+B,EACAN,SAAA1R,EAAA,EAAAgS,EAAAN,UAEAmb,EAAA,GAAAm/E,GAAAvpG,EAAAwsG,GACAG,GAAA,CACA,QAAAt0H,KAAAowH,aACA,IAAAhB,GAAAI,eACA+B,EAAAvxH,KAAA+xC,EACA,MACA,KAAAq9E,GAAAK,kBACA,GAAA2C,GAAA,EAAAt1G,EAAA3b,IAAA,iBACAiC,GAAAgvH,GAAA,4BACAD,EAAAnyH,KAAA+xC,EAAAqgF,EACA,MACA,KAAAhD,GAAAM,iBACAiE,EAAA3zH,KAAA+xC,GACAuiF,GAAA,CACA,MACA,KAAAlF,GAAAO,kBACAkE,EAAA7zH,KAAA+xC,GACAuiF,GAAA,CACA,MACA,SACA3xH,EAAA,0BAGA,GAAA2xH,EAAA,CACAR,EAAA9zH,KACA,QAAAK,GAAA,EAAAmG,EAAAxG,KAAAkyH,QAAAhtH,OAA4C7E,EAAAmG,EAAQnG,IACpDgyH,EAAAryH,KAAAK,GAGAyzH,EAAA9zH,MACA+zH,EAAA/zH,MAjkBAkxH,EAAA1vH,WACAowH,cACA,GAAA5xH,KAAA2nB,OAAA1O,IACA,MAAAjZ,MAAA2nB,OAAAlhB,IAAAzG,KAAA2nB,OAAA1O,GAEA,IAAAjZ,KAAA8mB,aAAA,EACA,QAEA,IAAAkgG,GAAAhnH,KAAA2nB,OAAA5B,SACA,SAAAihG,EAAA,KAGAhnH,KAAAuH,OAAAy/G,EACAhnH,KAAA8mB,aAAA,GACA,IAEA8M,SAAA,SAAAxyB,GACA,GAAAmG,GAAAvH,KAAAuH,OACAuf,EAAA9mB,KAAA8mB,YACA,SAAA1lB,EAAA,CACA,OAAA0lB,EACA,OAAA9mB,KAAA2nB,OAAA5B,WAAA,GAAA/lB,KAAA2nB,OAAA5B,WAAA,GAAA/lB,KAAA2nB,OAAA5B,WAAA,EAAA/lB,KAAA2nB,OAAA5B,aAAA,CAEAxe,MAAA,GAAAvH,KAAA2nB,OAAA5B,WAAA,GAAA/lB,KAAA2nB,OAAA5B,WAAA,EAAA/lB,KAAA2nB,OAAA5B,SACA,IAAAihG,GAAAhnH,KAAA2nB,OAAA5B,SAEA,OADA/lB,MAAAuH,OAAAy/G,GAAA,GAAAlgG,GAAA,GACAvf,GAAA,EAAAuf,GAAA,IAAAkgG,IAAAlgG,KAAA,EAEA,OAAA1lB,GAAA,IAAA0lB,EACA,MAAA9mB,MAAA2nB,OAAA5B,SAEA,MAAAe,EAAA1lB,GACAmG,KAAA,EAAAvH,KAAA2nB,OAAA5B,UACAe,GAAA,CAKA,OAHAA,IAAA1lB,EACApB,KAAA8mB,eACA9mB,KAAAuH,UAAA,GAAAuf,GAAA,EACAvf,GAAAuf,GAEAmrG,MAAA,WACAjyH,KAAAuH,OAAA,EACAvH,KAAA8mB,aAAA,GAEA+qG,SAAA,WACA,MAAA7xH,MAAA4zB,SAAA5zB,KAAAqqE,QAAAgqD,cAEAtC,eAAA,WACA,GAAAqC,GAAAp0H,KAAAqqE,QAAA+pD,kBACA9qF,EAAAtpC,KAAA4zB,SAAAwgG,GACAG,EAAAv0H,KAAA4zB,SAAAwgG,GACAp7F,EAAAh5B,KAAAqqE,QAAArxC,OACAnb,EAAAu2G,EAAA,UAAAA,GAAA,yBACA,QACA9qF,EAAAzrB,GAAAmb,EAAA,GAAAA,EAAA,IAAAA,EAAA,GACAu7F,EAAA12G,GAAAmb,EAAA,GAAAA,EAAA,IAAAA,EAAA,KAGAg5F,eAAA,WAMA,OALAp7F,GAAA52B,KAAAqqE,QAAAzzC,SACAlK,EAAA1sB,KAAAqqE,QAAA39C,iBACA7O,EAAA6O,EAAA,UAAAA,GAAA,0BACAsM,EAAAh5B,KAAAqqE,QAAArxC,OACAm1C,EAAAnuE,KAAAmxH,YACA9wH,EAAA,EAAAurB,EAAA,EAAyBvrB,EAAAu2B,EAAcv2B,IAAAurB,GAAA,GACvC,GAAA2mG,GAAAvyH,KAAA4zB,SAAAlH,EACAyhD,GAAA9tE,GAAAkyH,EAAA10G,GAAAmb,EAAApN,EAAA,GAAAoN,EAAApN,IAAAoN,EAAApN,GAEA,GAAAoQ,GAAAh8B,KAAAqxH,aAIA,OAHArxH,MAAAqqE,QAAAinD,SACAtxH,KAAAqqE,QAAAinD,QAAAnjD,EAAA,EAAAnyC,EAAA,GAEAh8B,KAAAqqE,QAAA3U,WAAA//B,OAAAqG,EAAA,IA4DA,IAAA82F,GAAA,EACAC,EAAA,GACAF,EAAA,GACAW,EAAA,WACA,QAAAgB,GAAAv+F,GAEA,OADAw+F,MACAp0H,EAAA,EAAkBA,GAAA41B,EAAY51B,IAAA,CAC9B,GAAAmpB,GAAAnpB,EAAA41B,EAAAy+F,EAAA,EAAAlrG,CACAirG,GAAA5uH,KAAA,GAAAyzB,eACAo7F,MACA,EAAAlrG,EAAAkrG,IACA,EAAAlrG,IAAAkrG,EACAlrG,SAGA,MAAAirG,GAEA,GAAAzpF,KACA,iBAAA/U,GAIA,MAHA+U,GAAA/U,KACA+U,EAAA/U,GAAAu+F,EAAAv+F,IAEA+U,EAAA/U,MAwbA,OAfA+5F,GAAAxuH,WACA4rB,MAAA,WACA,OACA,OACAptB,KAAAowH,YACApwH,KAAAyxH,OACAzxH,KAAAirB,OACAjrB,KAAAkyH,QACAlyH,KAAAmqC,OACAnqC,KAAA+3B,OACA/3B,KAAA82D,KACA92D,KAAAgxH,cAIAhB,KAEAF,EAAAG,MAAA,WACA,QAAAA,KACAjwH,KAAAwgB,KAAA,UAOA,MALAyvG,GAAAzuH,WACA4rB,MAAA,WACA,kBAGA6iG,KAqBAtwH,EAAAo0D,UACAp0D,EAAAq0D,sBAIA,SAAAt0D,EAAAC,EAAAO,GAEA,YAEA,IAAA4iB,GAAA5iB,EAAA,GACAqgC,EAAArgC,EAAA,GACA2iF,EAAA3iF,EAAA,IACAy0H,EAAAz0H,EAAA,IACAqC,EAAAugB,EAAAvgB,KACAyB,EAAA8e,EAAA9e,uBACAG,EAAA2e,EAAA3e,OACA2U,EAAAgK,EAAAhK,wBACAC,EAAA+J,EAAA/J,qBACA7P,EAAA4Z,EAAA5Z,wBACAuQ,EAAAqJ,EAAArJ,KACAmM,EAAA2a,EAAA3a,OACAwhC,EAAAy7B,EAAAz7B,qBACA63C,EAAA01B,EAAA11B,YACA21B,EAAA,WACA,QAAAA,KACA,SAAA9xH,OAAA,wCA0DA,MAxDA8xH,GAAApzH,WACAmzC,YACA,MAAA30C,MAAA60H,QAEAjgF,eACA,MAAA50C,MAAA80H,WAEAjgF,iBACA,GAAAA,GAAA,IACA,IAAA70C,KAAA+0H,YAAA,CACA,GAAA9wH,GAAAD,EAAAhE,KAAA+0H,YACA9wH,GACA4wC,EAAA5wC,EAAAukF,KAEAjmF,EAAA,iCAAAvC,KAAA+0H,YAAA,MAGA,MAAA5wH,GAAAnE,KAAA,aAAA60C,IAEAqB,eAAA,WACA,SAAAp9B,IAEAg7B,UAAA,SAAAzvC,EAAA0a,GACA,MAAA/e,MAAA62C,OAAA72C,KAAAo3C,YAAA/yC,EAAA0a,IAEAk1B,WAAA,SAAA5vC,EAAA0a,GACA,MAAA/e,MAAA62C,OAAA72C,KAAAo3C,YAAAj0B,KAAA9e,EAAA0a,IAEAw4B,cAAA,SAAAlzC,EAAA0a,GACA,MAAA/e,MAAA62C,OAAA72C,KAAAo3C,YAAAC,QAAAhzC,EAAA0a,IAEA03B,QAAA,SAAAC,GACA,MAAA12C,MAAAo3C,YAAAX,QAAAC,IAEA2B,QAAA,WACA,MAAAr4C,MAAAo3C,YAAAiB,WAEAxB,OAAA,SAAAzyC,EAAAC,EAAA0a,GACA,UAAAjG,IAEAyvC,aAAA,SAAAvvC,EAAAC,GACA,UAAAH,IAEAm9B,oBAAA,WACA,UAAAn9B,IAEA48B,oBAAA,SAAA/vC,GACA,UAAAmT,IAEAi9B,eAAA,SAAAnB,GACA50C,KAAA80H,UAAAlgF,GAEA9E,UAAA,WACA,UAAAh3B,KAGA87G,KAEArlF,EAAA,WACA,QAAAA,GAAAoF,EAAAjuC,EAAAkuC,EAAAH,EAAAI,GACA70C,KAAA60H,OAAAlgF,EACA30C,KAAA80H,UAAAlgF,EACA50C,KAAA+0H,YAAAlgF,EACA70C,KAAAy0C,kBACA,IAAA9sB,GAAA,GAAA/B,GAAAlf,EACA1G,MAAAo3C,YAAA,GAAA6nD,GAAAj/F,KAAA2nB,GACA3nB,KAAA2nD,wBAAAz+C,IACAlJ,KAAA2nD,wBAAAr+C,QAAAqe,GA8BA,MA5BAlO,GAAAwD,QAAAsyB,EAAAqlF,GACA/9E,OAAA,SAAAzyC,EAAAC,EAAA0a,GACA,UAAA1V,SAAA,SAAAC,EAAAC,GACA,IACA,GACAiB,GADA9J,EAAA0D,EAAAC,EAGAmG,GADA,kBAAA9J,GACAA,EAAA4E,MAAAlB,EAAA2a,GAEAre,EAEA4I,EAAAkB,GACK,MAAAzH,GACLwG,EAAAxG,OAIAwlD,aAAA,SAAAvvC,EAAAC,GACA,MAAA5P,SAAAC,WAEA2sC,oBAAA,aAEAC,eAAA,WACA,MAAAl2C,MAAA2nD,wBAAAv+C,SAEA0mC,UAAA,eAGAP,KAEAC,EAAA,WACA,QAAAA,GAAAmF,EAAA0S,EAAAtoC,EAAA01B,EAAAI,GACA70C,KAAA60H,OAAAlgF,EACA30C,KAAA80H,UAAA/1G,EAAA61B,SACA50C,KAAA+0H,YAAAlgF,EACA70C,KAAAiwC,WAAAlxB,EAAAkxB,WACAjwC,KAAAy0C,kBACA,IAAA5pB,IACAolB,WAAAlxB,EAAAkxB,WACAnsC,IAAAib,EAAAjb,IACAoB,OAAA6Z,EAAA7Z,OACAgwC,iBAAAn2B,EAAAm2B,iBACAC,eAAAp2B,EAAAo2B,eAEAn1C,MAAA4rF,cAAA,GAAAxkC,GAAAC,EAAAx8B,GACA7qB,KAAAo3C,YAAA,GAAA6nD,GAAAj/F,UAAA4rF,cAAAtjC,aA2CA,MAzCA7uC,GAAAwD,QAAAuyB,EAAAolF,GACA/9E,OAAA,SAAAzyC,EAAAC,EAAA0a,GACA,GAAA80B,GAAA7zC,IACA,WAAAqJ,SAAA,SAAAC,EAAAC,GACA,QAAAyrH,KACA,IACA,GAAAxqH,GACA9J,EAAA0D,EAAAC,EAEAmG,GADA,kBAAA9J,GACAA,EAAA4E,MAAAlB,EAAA2a,GAEAre,EAEA4I,EAAAkB,GACM,MAAAzH,GACN,KAAAA,YAAAgW,IAEA,WADAxP,GAAAxG,EAGA8wC,GAAA+3C,cAAArjC,aAAAxlD,EAAAiW,MAAAjW,EAAAkW,KAAA1O,KAAAyqH,EAAAzrH,IAGAyrH,OAGAzsE,aAAA,SAAAvvC,EAAAC,GACA,MAAAjZ,MAAA4rF,cAAArjC,aAAAvvC,EAAAC,IAEAg9B,oBAAA,WACAj2C,KAAA4rF,cAAA9jC,oBAEApS,oBAAA,SAAA/vC,GACA3F,KAAA4rF,cAAAtlC,eAAqC3gD,WAErCuwC,eAAA,WACA,MAAAl2C,MAAA4rF,cAAA11C,kBAEApG,UAAA,WACA9vC,KAAA4rF,cAAAxiC,WAGA5Z,IAEA7vC,GAAA4vC,kBACA5vC,EAAA6vC,qBAIA,SAAA9vC,EAAAC,EAAAO,GAEA,YAEA,IAAA4iB,GAAA5iB,EAAA,GACAmlB,EAAAnlB,EAAA,GACAyC,EAAAmgB,EAAAngB,MACAmG,EAAAga,EAAAha,QACAgZ,EAAAuD,EAAAvD,IACA8kB,EAAA,WACA,QAAAA,GAAAlG,GACA1gC,KAAA0gC,QACA1gC,KAAA8rC,aACA9rC,KAAAwkE,MAAA,KACAxkE,KAAAipE,KAAA,KAgEA,MA9DAriC,GAAAplC,WACAyzH,UAAA,WACAj1H,KAAAipE,KAAAjpE,KAAAwkE,MACAxkE,KAAAwkE,MAAAxkE,KAAA0gC,MAAAw0F,YAEAC,OAAA,SAAA30G,GACA,MAAAxgB,MAAAwkE,MAAAhkD,WACAxgB,KAAAi1H,aACA,IAIAG,OAAA,SAAA50G,GACA,GAAAxgB,KAAAm1H,OAAA30G,GACA,QAEA7d,GAAA,4BAAA3C,KAAAwkE,MAAAhkD,KAAA,aAAAA,EAAA,MAEAwM,MAAA,WAKA,MAJAhtB,MAAAi1H,YACAj1H,KAAAo1H,OAAAC,EAAAC,QACAt1H,KAAAu1H,aACAv1H,KAAAo1H,OAAAC,EAAAG,QACAx1H,KAAA8rC,WAEAypF,WAAA,WACA,OACA,GAAAv1H,KAAAm1H,OAAAE,EAAAI,QACAz1H,KAAA8rC,UAAAjmC,KAAA7F,KAAAipE,KAAAvoE,WACK,IAAAV,KAAAm1H,OAAAE,EAAAK,UACL11H,KAAA8rC,UAAAjmC,KAAA7F,KAAAipE,KAAAvoE,WACK,KAAAV,KAAAm1H,OAAAE,EAAAC,QAGL,MAFAt1H,MAAA21H,mBAMAA,eAAA,WACA,GAAAC,GAAA51H,KAAA8rC,UAAA5mC,MAIA,IAHAlF,KAAA8rC,UAAAjmC,KAAA,WACA7F,KAAAu1H,aACAv1H,KAAAo1H,OAAAC,EAAAG,QACAx1H,KAAAm1H,OAAAE,EAAAQ,IACA71H,KAAA8rC,UAAA8pF,GAAA51H,KAAA8rC,UAAA5mC,OACAlF,KAAA8rC,UAAA8pF,EAAA,YACI,IAAA51H,KAAAm1H,OAAAE,EAAAC,QAAA,CACJ,GAAAQ,GAAA91H,KAAA8rC,UAAA5mC,MACAlF,MAAA8rC,UAAAjmC,KAAA,UACA,IAAAkwH,GAAA/1H,KAAA8rC,UAAA5mC,MACAlF,MAAAu1H,aACAv1H,KAAAo1H,OAAAC,EAAAG,QACAx1H,KAAAo1H,OAAAC,EAAAW,QACAh2H,KAAA8rC,UAAAgqF,GAAA91H,KAAA8rC,UAAA5mC,OACAlF,KAAA8rC,UAAAgqF,EAAA,OACA91H,KAAA8rC,UAAA8pF,GAAAG,EACA/1H,KAAA8rC,UAAA8pF,EAAA,YAEAjzH,GAAA,6CAIAikC,KAEAyuF,GACAC,OAAA,EACAE,OAAA,EACAC,OAAA,EACAC,SAAA,EACAG,GAAA,EACAG,OAAA,GAEAC,EAAA,WACA,QAAAA,GAAAz1G,EAAA9f,GACAV,KAAAwgB,OACAxgB,KAAAU,QAEA,GAAAw1H,GAAAn1H,OAAA2D,OAAA,KAYA,OAXAuxH,GAAAE,YAAA,SAAAzpF,GACA,GAAA0pF,GAAAF,EAAAxpF,EACA,OAAA0pF,KAGAF,EAAAxpF,GAAA,GAAAupF,GAAAZ,EAAAK,SAAAhpF,KAEAupF,EAAAX,OAAA,GAAAW,GAAAZ,EAAAC,OAAA,KACAW,EAAAT,OAAA,GAAAS,GAAAZ,EAAAG,OAAA,KACAS,EAAAJ,GAAA,GAAAI,GAAAZ,EAAAQ,GAAA,MACAI,EAAAD,OAAA,GAAAC,GAAAZ,EAAAW,OAAA,UACAC,KAEAtvF,EAAA,WACA,QAAAA,GAAAhf,GACA3nB,KAAA2nB,SACA3nB,KAAAkjC,WACAljC,KAAAuF,UAiFA,MA/EAohC,GAAAnlC,WACA0hC,SAAA,WACA,MAAAljC,MAAAokC,YAAApkC,KAAA2nB,OAAA5B,WAEAmvG,SAAA,WAGA,IAFA,GAAA3vF,IAAA,EACAx8B,EAAA/I,KAAAokC,cACA,CACA,GAAAr7B,EAAA,EACA,MAAA+Y,EAEA,IAAAyjB,EACA,KAAAx8B,GAAA,KAAAA,IACAw8B,GAAA,OAEK,SAAAx8B,EACLw8B,GAAA,MACK,KAAAz8B,EAAAC,GACL,KAEAA,GAAA/I,KAAAkjC,WAEA,SAAAn6B,GACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,QACA,UAAAktH,GAAAZ,EAAAI,OAAAz1H,KAAAskC,YACA,UAEA,MADAtkC,MAAAkjC,WACA+yF,EAAAX,MACA,UAEA,MADAt1H,MAAAkjC,WACA+yF,EAAAT,OAEA,GAAAjwH,GAAAvF,KAAAuF,MAGA,KAFAA,EAAAL,OAAA,EACAK,EAAA,GAAAH,OAAAC,aAAA0D,IACAA,EAAA/I,KAAAkjC,aAAA,IAAAn6B,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,MACAxD,EAAAM,KAAAT,OAAAC,aAAA0D,GAEA,IAAAnE,GAAAW,EAAApC,KAAA,GACA,QAAAyB,EAAAwX,eACA,SACA,MAAA65G,GAAAJ,EACA,cACA,MAAAI,GAAAD,MACA,SACA,MAAAC,GAAAE,YAAAvxH,KAGA0/B,UAAA,WACA,GAAAv7B,GAAA/I,KAAAokC,YACA7+B,EAAAvF,KAAAuF,MAGA,KAFAA,EAAAL,OAAA,EACAK,EAAA,GAAAH,OAAAC,aAAA0D,IACAA,EAAA/I,KAAAkjC,aAAA,IACAn6B,GAAA,IAAAA,GAAA,SAAAA,GAAA,KAAAA,IACAxD,EAAAM,KAAAT,OAAAC,aAAA0D,GAKA,IAAArI,GAAA09C,WAAA74C,EAAApC,KAAA,IAIA,OAHAw8C,OAAAj/C,IACAiC,EAAA,kCAAAjC,GAEAA,IAGAimC,IAEAhnC,GAAAgnC,kBACAhnC,EAAAinC,oBAIA,SAAAlnC,EAAAC,EAAAO,GAEA,YAEA,IAAA4iB,GAAA5iB,EAAA,GACAqgC,EAAArgC,EAAA,GACAy5C,EAAAz5C,EAAA,GACAqC,EAAAugB,EAAAvgB,KACAuG,EAAAga,EAAAha,QACA8c,EAAA2a,EAAA3a,OACAka,EAAA6Z,EAAA7Z,YACAu2F,GAAA,EACAC,EAAA,WAwBA,QAAAA,KACAt2H,KAAA0e,MAAA,EACA1e,KAAAu2H,IAAA,EACAv2H,KAAAw2H,SAAA,EACAx2H,KAAAorC,UACAprC,KAAAgD,SA5BA,GAAAyzH,IACAC,OAAA,GACAC,OAAA,GACAC,SAAA,GACAC,SAAA,GACAC,SAAA,GACAC,SAAA,GACAC,WAAA,GACAC,UAAA,IACAC,MACA,GACA,IAEAC,MACA,GACA,IAEAC,SAAA,IACAC,SAAA,IACAC,SAAA,IACAC,WAAA,IACAC,WAAA,IA6NA,OApNAlB,GAAA90H,WACA+nG,QAAA,SAAAkuB,EAAAlyE,EAAAnL,GAIA,OADAs9E,GAAAC,EAAAj4E,EAFAzpB,EAAAwhG,EAAAvyH,OACAvC,GAAA,EAEAtC,EAAA,EAAkBA,EAAA41B,EAAW51B,IAAA,CAC7B,GAAAK,GAAA+2H,EAAAp3H,EACA,IAAAK,EAAA,IAIA,OAHA,KAAAA,IACAA,MAAA,GAAA+2H,IAAAp3H,IAEAK,GACA,OACA,IAAA21H,EAAA,CACAr2H,KAAAgD,QACA,OAEAL,EAAA3C,KAAA43H,eAAA,EAAAnB,EAAAC,MACA,MACA,QACA,IAAAL,EAAA,CACAr2H,KAAAgD,QACA,OAEAL,EAAA3C,KAAA43H,eAAA,EAAAnB,EAAAE,MACA,MACA,QACA,GAAA32H,KAAAw2H,QAAA,CACA,GAAAx2H,KAAAgD,MAAAkC,OAAA,GACAvC,GAAA,CACA,OAEA,GAAAk1H,GAAA73H,KAAAgD,MAAA2oC,KACA3rC,MAAAgD,MAAA6C,KAAA,EAAAgyH,EACA,OAEAl1H,EAAA3C,KAAA43H,eAAA,EAAAnB,EAAAG,QACA,MACA,QACAj0H,EAAA3C,KAAA43H,eAAA,EAAAnB,EAAAI,QACA,MACA,QACAl0H,EAAA3C,KAAA43H,eAAA,EAAAnB,EAAAK,QACA,MACA,QACAn0H,EAAA3C,KAAA43H,eAAA,EAAAnB,EAAAM,QACA,MACA,QACAp0H,EAAA3C,KAAA43H,eAAA,EAAAnB,EAAAO,UACA,MACA,QACAh3H,KAAAgD,QACA,MACA,SACA,GAAAhD,KAAAgD,MAAAkC,OAAA,GACAvC,GAAA,CACA,OAEA+8C,EAAA1/C,KAAAgD,MAAA2oC,MACAhpC,EAAA3C,KAAAupG,QAAAhkD,EAAA7F,GAAA6F,EAAAnL,EACA,MACA,SACA,MAAAz3C,EACA,SACA,GAAA3C,KAAAgD,MAAAkC,OAAA,GACAvC,GAAA,CACA,OAEA+0H,EAAA13H,KAAAgD,MAAA2oC,MACAgsF,EAAA33H,KAAAgD,MAAA2oC,MACA3rC,KAAAu2H,IAAAoB,EACA33H,KAAA0e,MAAAg5G,EACA13H,KAAAgD,MAAA6C,KAAA6xH,EAAAC,GACAh1H,EAAA3C,KAAA43H,eAAA,EAAAnB,EAAAa,QACA,MACA,SACAt3H,KAAAorC,OAAAvlC,KAAA4wH,EAAAW,QAAA,GACA,MACA,SACA,GAAAp3H,KAAAw2H,QACA,KAEA7zH,GAAA3C,KAAA43H,eAAA,EAAAnB,EAAAY,QACA,MACA,SACA,GAAAr3H,KAAAw2H,QAAA,CACAx2H,KAAAgD,MAAA6C,KAAA,EACA,OAEAlD,EAAA3C,KAAA43H,eAAA,EAAAnB,EAAAa,QACA,MACA,SACA30H,EAAA3C,KAAA43H,eAAA,EAAAnB,EAAAc,UACA,MACA,SACA50H,EAAA3C,KAAA43H,eAAA,EAAAnB,EAAAe,UACA,MACA,WACAx3H,KAAAgD,QACA,MACA,WACA,IAAAqzH,EAAA,CACAr2H,KAAAgD,QACA,OAEAL,EAAA3C,KAAA43H,eAAA,EAAAnB,EAAAE,MACA,MACA,WACA,IAAAN,EAAA,CACAr2H,KAAAgD,QACA,OAEAL,EAAA3C,KAAA43H,eAAA,EAAAnB,EAAAC,MACA,MACA,WACAt8E,GACAp6C,KAAAw/C,KAAAx/C,KAAAgD,MAAA0rC,QAAA,KACA/rC,EAAA3C,KAAA43H,eAAA,EAAAnB,EAAAW,UAEAz0H,EAAA3C,KAAA43H,eAAA,EAAAnB,EAAAW,QAEA,MACA,WACA,GAAAp3H,KAAAgD,MAAAkC,OAAA,GACAvC,GAAA,CACA,OAEA3C,KAAAgD,MAAA2oC,MACA+rF,EAAA13H,KAAAgD,MAAA2oC,KACA,IAAAmsF,GAAA93H,KAAAgD,MAAA2oC,KACAgsF,GAAA33H,KAAAgD,MAAA2oC,MACA3rC,KAAAu2H,IAAAoB,EACA33H,KAAA0e,MAAAg5G,EACA13H,KAAAgD,MAAA6C,KAAA6xH,EAAAC,EAAAG,GACAn1H,EAAA3C,KAAA43H,eAAA,EAAAnB,EAAAY,QACA,MACA,WACA,GAAAr3H,KAAAgD,MAAAkC,OAAA,GACAvC,GAAA,CACA,OAEA,GAAA2qC,GAAAttC,KAAAgD,MAAA2oC,MACA0B,EAAArtC,KAAAgD,MAAA2oC,KACA3rC,MAAAgD,MAAA6C,KAAAwnC,EAAAC,EACA,MACA,WACA,GAAAttC,KAAAgD,MAAAkC,OAAA,GACAvC,GAAA,CACA,OAEA+8C,EAAA1/C,KAAAgD,MAAA2oC,KACA,IAAA89B,GAAAzpE,KAAAgD,MAAA2oC,KACA,QAAA+T,GAAA,IAAA+pB,EAAA,CACA,GAAAsuD,GAAA/3H,KAAAgD,MAAA0rC,OAAA1uC,KAAAgD,MAAAkC,OAAA,MACAlF,MAAAgD,MAAA6C,KAAAkyH,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,KACAp1H,EAAA3C,KAAA43H,eAAA,GAAAnB,EAAAS,MAAA,GACAl3H,KAAAw2H,SAAA,EACAx2H,KAAAgD,MAAA6C,KAAAkyH,EAAA,IAAAA,EAAA,SACO,KAAAr4E,GAAA,IAAA+pB,IACPzpE,KAAAw2H,SAAA,EAEA,MACA,WACA,KACA,WACAx2H,KAAAgD,QACA,MACA,SACAT,EAAA,yCAAA7B,EAAA,KAGA,GAAAiC,EACA,UAGKjC,IAAA,IACLA,GAAA,IAEAA,EADKA,GAAA,IACL,KAAAA,EAAA,KAAA+2H,IAAAp3H,GAAA,IACKK,GAAA,KACL,KAAAA,EAAA,KAAA+2H,IAAAp3H,GAAA,KAEA,IAAAo3H,IAAAp3H,KAAA,QAAAo3H,IAAAp3H,KAAA,QAAAo3H,IAAAp3H,KAAA,OAAAo3H,IAAAp3H,KAAA,EAEAL,KAAAgD,MAAA6C,KAAAnF,GAEA,MAAAiC,IAEAi1H,eAAA,SAAAI,EAAAC,EAAAC,GACA,GAAAC,GAAAn4H,KAAAgD,MAAAkC,MACA,IAAA8yH,EAAAG,EACA,QAGA,QADAnxH,GAAAmxH,EAAAH,EACA33H,EAAA2G,EAAsB3G,EAAA83H,EAAiB93H,IAAA,CACvC,GAAAK,GAAAV,KAAAgD,MAAA3C,EACAK,MAAA,EAAAA,GACAV,KAAAorC,OAAAvlC,KAAA,GAAAnF,GAAA,UAAAA,IAEAA,EAAA,MAAAA,EAAA,EACAV,KAAAorC,OAAAvlC,KAAA,IAAAnF,GAAA,OAAAA,GAAA,OAAAA,GAAA,UAAAA,IASA,MANAV,MAAAorC,OAAAvlC,KAAAP,MAAAtF,KAAAorC,OAAA6sF,GACAC,EACAl4H,KAAAgD,MAAA0rC,OAAA1nC,EAAAgxH,GAEAh4H,KAAAgD,MAAAkC,OAAA,GAEA,IAGAoxH,KAEAtwB,EAAA,WAGA,QAAAoyB,GAAAzwH,GACA,MAAAA,IAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAAAA,GAAA,IAEA,QAAAknB,GAAAnoB,EAAA2B,EAAAgwH,GACA,GAAAA,GAAA3xH,EAAAxB,OACA,UAAAa,YAAA,EAEA,IAAA1F,GAAAurB,EAAAhS,EAAA,EAAAvR,EAAA0hC,EAAA,MAAAspF,EAAA,KACA,KAAAhzH,EAAA,EAAaA,EAAAg4H,EAAmBh4H,IAChCuZ,GAAAlT,EAAArG,GAAAuZ,GAAAmwB,EAAAspF,EAAA,KAEA,IAAAp9F,GAAAvvB,EAAAxB,OAAAmzH,EACAC,EAAA,GAAAvyH,YAAAkwB,EACA,KAAA51B,EAAAg4H,EAAAzsG,EAAA,EAAgCA,EAAAqK,EAAW51B,IAAAurB,IAAA,CAC3C,GAAAlrB,GAAAgG,EAAArG,EACAi4H,GAAA1sG,GAAAlrB,EAAAkZ,GAAA,EACAA,GAAAlZ,EAAAkZ,GAAAmwB,EAAAspF,EAAA,MAEA,MAAAiF,GAEA,QAAAC,GAAA7xH,EAAA2B,EAAAgwH,GACA,GAGAh4H,GAAAurB,EAHAhS,EAAA,EAAAvR,EAAA0hC,EAAA,MAAAspF,EAAA,MACAp9F,EAAAvvB,EAAAxB,OAAA8iB,EAAAiO,IAAA,EACAqiG,EAAA,GAAAvyH,YAAAiiB,EAEA,KAAA3nB,EAAA,EAAAurB,EAAA,EAAoBvrB,EAAA41B,EAAW51B,IAAA,CAC/B,GAAAm4H,GAAA9xH,EAAArG,EACA,IAAA+3H,EAAAI,GAAA,CAGAn4H,GAEA,KADA,GAAAo4H,GACAp4H,EAAA41B,IAAAmiG,EAAAK,EAAA/xH,EAAArG,KACAA,GAEA,IAAAA,EAAA41B,EAAA,CACA,GAAAv1B,GAAA8jD,SAAAp/C,OAAAC,aAAAmzH,EAAAC,GAAA,GACAH,GAAA1sG,KAAAlrB,EAAAkZ,GAAA,EACAA,GAAAlZ,EAAAkZ,GAAAmwB,EAAAspF,EAAA,QAGA,MAAAzqH,OAAApH,UAAA0B,MAAA3C,KAAA+3H,EAAAD,EAAAzsG,GAEA,QAAA8sG,GAAAj4H,GACA,YAAAA,GAAA,KAAAA,GAAA,KAAAA,GAAA,MAAAA,GAAA,MAAAA,GAAA,KAAAA,GAAA,KAAAA,EAEA,QAAAulG,GAAAr+E,EAAA2sB,EAAA8F,GACA,GAAA9F,EAAA,CACA,GAAA5tC,GAAAihB,EAAA9E,WACA81G,IAAAP,EAAA1xH,EAAA,KAAA0xH,EAAA1xH,EAAA,KAAA0xH,EAAA1xH,EAAA,KAAA0xH,EAAA1xH,EAAA,IACAihB,GAAA,GAAA/B,GAAA+yG,EAAA9pG,EAAAnoB,EAAAkyH,EAAA,GAAAL,EAAA7xH,EAAAkyH,EAAA,IAEA54H,KAAAo6C,wBACAp6C,KAAA2nB,SACA3nB,KAAAkjC,WAxDA,GAAA01F,GAAA,MACAC,EAAA,IAyRA,OAhOA7yB,GAAAxkG,WACAs3H,gBAAA,WACA94H,KAAAk1H,UAEA,KADA,GAAA7zF,QACA,CACA,GAAAmjC,GAAAxkE,KAAAk1H,UACA,WAAA1wD,GAAA,MAAAA,GAAA,MAAAA,EACA,KAEAnjC,GAAAx7B,KAAAu4C,WAAAomB,GAAA,IAEA,MAAAnjC,IAEAi6D,WAAA,WACA,GAAA92B,GAAAxkE,KAAAk1H,UACA,OAAA92E,YAAAomB,GAAA,IAEAu0D,QAAA,WACA,GAAAv0D,GAAAxkE,KAAAk1H,UACA,UAAA1wE,SAAAggB,GAAA,OAEAw0D,YAAA,WAEA,eADAh5H,KAAAk1H,WACA,KAEAhyF,SAAA,WACA,MAAAljC,MAAAokC,YAAApkC,KAAA2nB,OAAA5B,WAEAmvG,SAAA,WAGA,IAFA,GAAA3vF,IAAA,EACAx8B,EAAA/I,KAAAokC,cACA,CACA,QAAAr7B,EACA,WAEA,IAAAw8B,EACA,KAAAx8B,GAAA,KAAAA,IACAw8B,GAAA,OAEK,SAAAx8B,EACLw8B,GAAA,MACK,KAAAz8B,EAAAC,GACL,KAEAA,GAAA/I,KAAAkjC,WAEA,GAAAw1F,EAAA3vH,GAEA,MADA/I,MAAAkjC,WACA99B,OAAAC,aAAA0D,EAEA,IAAAy7D,GAAA,EACA,IACAA,GAAAp/D,OAAAC,aAAA0D,GACAA,EAAA/I,KAAAkjC,iBACIn6B,GAAA,IAAAD,EAAAC,KAAA2vH,EAAA3vH,GACJ,OAAAy7D,IAEAgzC,mBAAA,WACA,GAAA7vF,GAAA3nB,KAAA2nB,OACA49B,KAAAsmD,KACAuM,EAAAr3G,OAAA2D,OAAA,KACA0zG,GAAA,OAOA,KANA,GAKA5zC,GAAAt/D,EAAAwB,EAAAuyH,EAAAxB,EALAyB,GACA3zE,SACAsmD,eACA1xD,YAAiBi+D,gBAGjB,QAAA5zC,EAAAxkE,KAAAk1H,aACA,SAAA1wD,EAIA,OADAA,EAAAxkE,KAAAk1H,YAEA,kBAKA,IAJAl1H,KAAAk1H,WACAl1H,KAAAk1H,WACAl1H,KAAAk1H,WACAl1H,KAAAk1H,aACA,CAEA,WADA1wD,EAAAxkE,KAAAk1H,aACA,QAAA1wD,EACA,KAEA,UAAAA,EAAA,CAGA,GAAAzJ,GAAA/6D,KAAAk1H,UACAhwH,GAAAlF,KAAA+4H,UACA/4H,KAAAk1H,WACAxuH,EAAAihB,EAAAjB,cAAAiB,EAAAlhB,IAAAvB,GACA+zH,EAAAC,EAAA/+E,WAAAi+D,YAAA,MACAqf,EAAA5oG,EAAAnoB,EAAAmc,WAAAg2G,EAAAI,GACAtxG,EAAApB,KAAArhB,GACAlF,KAAAkjC,WACAshC,EAAAxkE,KAAAk1H,WACA,aAAA1wD,GACAxkE,KAAAk1H,WAEArpB,EAAAhmG,MACAk1D,QACA08D,aAGA,KACA,aAGA,IAFAz3H,KAAA+4H,UACA/4H,KAAAk1H,WACA,SAAA1wD,EAAAxkE,KAAAk1H,aAAA,CACA,GAAA57G,GAAAtZ,KAAA+4H,SACA7zH,GAAAlF,KAAA+4H,UACA/4H,KAAAk1H,WACAxuH,EAAAihB,EAAAjB,cAAAiB,EAAAlhB,IAAAvB,GACA+zH,EAAAC,EAAA/+E,WAAAi+D,YAAA,MACAqf,EAAA5oG,EAAAnoB,EAAAmc,WAAAg2G,EAAAI,GACAtxG,EAAApB,KAAArhB,GACAlF,KAAAkjC,WACAshC,EAAAxkE,KAAAk1H,WACA,aAAA1wD,GACAxkE,KAAAk1H,WAEA3vE,EAAAjsC,GAAAm+G,EAEA,KACA,kBACA,iBACA,kBACA,uBACA,GAAA0B,GAAAn5H,KAAA84H,iBACAK,GAAAj0H,OAAA,GAAAi0H,EAAAj0H,OAAA,MAAAmxH,IACA6C,EAAA/+E,WAAAi+D,YAAA5zC,GAAA20D,EAEA,MACA,iBACA,gBACAD,EAAA/+E,WAAAi+D,YAAA5zC,GAAAxkE,KAAA84H,iBACA,MACA,aACA,YACAI,EAAA/+E,WAAAi+D,YAAA5zC,GAAAxkE,KAAA84H,kBAAA,EACA,MACA,iBACA,YACA,eACA,gBACA,oBACA,sBACAI,EAAA/+E,WAAAi+D,YAAA5zC,GAAAxkE,KAAAs7F,YACA,MACA,iBACA49B,EAAA/+E,WAAAi+D,YAAA5zC,GAAAxkE,KAAAg5H,cAIA,OAAA34H,GAAA,EAAkBA,EAAAwrG,EAAA3mG,OAAwB7E,IAAA,CAC1C06D,EAAA8wC,EAAAxrG,GAAA06D,MACA08D,EAAA5rB,EAAAxrG,GAAAo3H,OACA,IAAA2B,GAAA,GAAA9C,GACA3zH,EAAAy2H,EAAA7vB,QAAAkuB,EAAAlyE,EAAAvlD,KAAAo6C,qBACAhP,EAAAguF,EAAAhuF,MACAzoC,KACAyoC,GAAA,KAEA8tF,EAAArtB,YAAAhmG,MACA69D,UAAA3I,EACAjb,WAAA1U,EACA1sB,MAAA06G,EAAA16G,MACA63G,IAAA6C,EAAA7C,IACA/2E,KAAA45E,EAAA55E,OAGA,MAAA05E,IAEA7hB,kBAAA,SAAAl9D,GAEA,IADA,GAAAqqB,GACA,QAAAA,EAAAxkE,KAAAk1H,aACA,SAAA1wD,EAIA,OADAA,EAAAxkE,KAAAk1H,YAEA,iBACA,GAAAn9F,GAAA/3B,KAAA84H,iBACA3+E,GAAAmC,WAAAvkB,CACA,MACA,gBACA,GACAhI,GADAspG,EAAAr5H,KAAAk1H,UAEA,YAAA7xD,KAAAg2D,GAEM,CACNtpG,IACA,IAAA1I,GAAA,EAAAm9B,SAAA60E,EAAA,GACAr5H,MAAAk1H,UACA,QAAAtpG,GAAA,EAAqBA,EAAAvE,EAAUuE,IAAA,CAE/B,IADA44C,EAAAxkE,KAAAk1H,WACA,QAAA1wD,GAAA,QAAAA,GAEA,WADAA,EAAAxkE,KAAAk1H,YAEA,MAGA,YAAA1wD,EACA,KAEA,IAAAlrD,GAAAtZ,KAAA+4H,SACA/4H,MAAAk1H,UACA,IAAAn6D,GAAA/6D,KAAAk1H,UACAnlG,GAAAzW,GAAAyhD,EACA/6D,KAAAk1H,gBApBAnlG,GAAA+P,EAAAu5F,EAuBAl/E,GAAAorD,gBAAAx1E,CACA,MACA,gBACA,GAAAwsB,GAAAv8C,KAAA84H,iBACA3+E,GAAAqC,OAAA/2C,KAAA+U,IAAA+hC,EAAA,GAAAA,EAAA,IACApC,EAAAsC,QAAAh3C,KAAAC,IAAA62C,EAAA,GAAAA,EAAA,IACApC,EAAAuC,cAAA,KAMAspD,IAEArmG,GAAAqmG,eAIA,SAAAtmG,EAAAC,EAAAO,GAEA,cACA,SAAA0B,GACA,sBAAA03H,eAAAC,qBAAA,CACA,GAAAjuH,GAAA,mBAAAC,mBAAA,KAAA3J,IAAA,mBAAA4J,WAAAxL,KACAw4G,EAAA,mBAAAD,sBAAAC,WAAA,GACAghB,EAAA,UAAAn2D,KAAAm1C,GACAihB,EAAA,sBAAAp2D,KAAAm1C,GACAkhB,EAAA,sBAAAr2D,KAAAm1C,GACAmhB,EAAAnhB,EAAAxmE,QAAA,YACA4nF,EAAA,oBAAAv2D,KAAAm1C,GACAqhB,EAAArhB,EAAAxmE,QAAA,YACA8nF,EAAAthB,EAAAxmE,QAAA,cACA+nF,EAAA,4BAAsC12D,KAAAm1C,GACtCwhB,EAAAxhB,EAAAxmE,QAAA,YACAioF,EAAA,WAAA52D,KAAAm1C,KAAA,uBAAAn1C,KAAAm1C,GACA0hB,EAAA,gBAAA3uH,SAAA,gBAAA8R,SACA,oBAAAi8G,SACAhuH,EAAAguH,UAEAA,MAAAC,sBAAA,EACA,WAeA,QAAA3zH,GAAAoB,EAAAiS,GACA,UAAAkhH,GAAAn6H,KAAAkD,MAAA8D,EAAAiS,IAEA,QAAAmhH,GAAA/4F,EAAAn6B,GACA0+G,UAAA1gH,OAAA,IACAgC,EAAA,EAEA,QAAA7G,GAAA,EAAAe,EAAAigC,EAAAn8B,OAAoC7E,EAAAe,IAAOf,IAAA6G,EAC3ClH,KAAAkH,GAAA,IAAAm6B,EAAAhhC,GAGA,QAAA85H,GAAAxtF,GACA,GAAAniC,GAAAnK,EAAAe,CACA,oBAAAurC,GAEA,IADAniC,KACAnK,EAAA,EAAeA,EAAAssC,IAAUtsC,EACzBmK,EAAAnK,GAAA,MAEI,aAAAssC,GACJniC,EAAAmiC,EAAAzpC,MAAA,OAGA,KADAsH,KACAnK,EAAA,EAAAe,EAAAurC,EAAAznC,OAAgC7E,EAAAe,IAAOf,EACvCmK,EAAAnK,GAAAssC,EAAAtsC,EAUA,OAPAmK,GAAA5E,WACA4E,EAAAjD,OAAAiD,EACAA,EAAArE,WAAAqE,EAAAtF,OACAsF,EAAA7D,IAAAyzH,EACA,gBAAAztF,MAAAplC,SACAiD,EAAAjD,OAAAolC,EAAAplC,QAEAiD,EA/CA,sBAAAzE,YAYA,WAXA,KAAAA,WAAAvE,UAAAoE,WACAG,WAAAvE,UAAAoE,SAAA,SAAAoB,EAAAiS,GACA,UAAAlT,YAAA/F,KAAAkD,MAAA8D,EAAAiS,KAEAqgB,aAAA93B,UAAAoE,SAAA,SAAAoB,EAAAiS,GACA,UAAAqgB,cAAAt5B,KAAAkD,MAAA8D,EAAAiS,WAGA,mBAAAiwB,gBACA59B,EAAA49B,aAAA5P,cAuCAhuB,GAAAvF,WAAAo0H,EACA7uH,EAAAi0E,UAAA46C,EACA7uH,EAAAglB,YAAA6pG,EACA7uH,EAAAgd,WAAA6xG,EACA7uH,EAAAhE,YAAA6yH,EACA7uH,EAAAguB,aAAA6gG,EACA7uH,EAAA49B,aAAAixF,KAEA,WACA7uH,EAAA5H,MACA4H,EAAA5H,IAAA4H,EAAA+uH,cAGA,WACA,YAAAt5H,OAAAC,eAAA,CACA,GAAAs5H,IAAA,CACA,KACAJ,GACAn5H,OAAAC,eAAA,GAAAkK,OAAA,MAA+CxK,MAAA,QAE/C,IAAA65H,GAAA,YAEAA,GAAA/4H,WACAsJ,YAGA/J,OAAAC,eAAA,GAAAu5H,GAAA,MACA75H,MAAA,GACAO,cAAA,EACAC,YAAA,EACAoD,UAAA,IAEI,MAAAvB,GACJu3H,GAAA,EAEA,GAAAA,EACA,OAGAv5H,OAAAC,eAAA,SAAAoD,EAAAxD,EAAA45H,SACAp2H,GAAAxD,GACA,OAAA45H,IACAp2H,EAAAq2H,iBAAA75H,EAAA45H,EAAA,KAEA,OAAAA,IACAp2H,EAAAs2H,iBAAA95H,EAAA45H,EAAA,KAEA,SAAAA,KACAp2H,EAAAs2H,iBAAA95H,EAAA,SAAAF,GAIA,MAHAV,MAAAy6H,iBAAA75H,EAAA,WACA,MAAAF,KAEAA,IAEA0D,EAAAxD,GAAA45H,EAAA95H,WAIA,WACA,sBAAAqyC,gBAAA,CAGA,GAAA4nF,GAAA5nF,eAAAvxC,UACAsxC,EAAA,GAAAC,eAOA,IANA,oBAAAD,IACA/xC,OAAAC,eAAA25H,EAAA,oBACAj6H,MAAA,SAAAk6H,SAIA,gBAAA9nF,IAAA,CAgBA,GAbA/xC,OAAAC,eAAA25H,EAAA,gBACAx5H,IAAA,WACA,MAAAnB,MAAA66H,eAAA,QAEAl0H,IAAA,SAAAjG,GACA,SAAAA,GAAA,gBAAAA,IACAV,KAAA66H,cAAAn6H,EACA,gBAAAA,GAAA,kBAAAV,MAAA86H,kBACA96H,KAAA86H,iBAAA,0CAKA,mBAAAC,SASA,WARAh6H,QAAAC,eAAA25H,EAAA,YACAx5H,IAAA,WACA,sBAAAnB,KAAAizC,aACA,GAAAltC,YAAA,GAAAg1H,SAAA/6H,KAAAg7H,cAAAnzB,WAEA7nG,KAAAi7H,eAKAl6H,QAAAC,eAAA25H,EAAA,YACAx5H,IAAA,WACA,mBAAAnB,KAAAizC,aACA,MAAAjzC,MAAAi7H,YAEA,IACA56H,GADA66H,EAAAl7H,KAAAi7H,aACA75H,EAAA85H,EAAAh2H,OACAsF,EAAA,GAAAzE,YAAA3E,EACA,KAAAf,EAAA,EAAeA,EAAAe,IAAOf,EACtBmK,EAAAnK,GAAA,IAAA66H,EAAAl1H,WAAA3F,EAEA,OAAAmK,GAAAjD,eAIA,WACA,aAAA+D,IAAA,CAGA,GAAAoV,GAAA,mEACApV,GAAA6vH,KAAA,SAAA/gE,GACA,GACA/5D,GAAAe,EADAmG,EAAA,EAEA,KAAAlH,EAAA,EAAAe,EAAAg5D,EAAAl1D,OAAgC7E,EAAAe,EAAOf,GAAA,GACvC,GAAAwgB,GAAA,IAAAu5C,EAAAp0D,WAAA3F,GACAygB,EAAA,IAAAs5C,EAAAp0D,WAAA3F,EAAA,GACA0gB,EAAA,IAAAq5C,EAAAp0D,WAAA3F,EAAA,GACA2gB,EAAAH,GAAA,EAAAI,GAAA,EAAAJ,IAAA,EAAAC,GAAA,EACAI,EAAA7gB,EAAA,EAAAe,GAAA,GAAA0f,IAAA,EAAAC,GAAA,KACAI,EAAA9gB,EAAA,EAAAe,EAAA,GAAA2f,EAAA,EACAxZ,IAAAmZ,EAAA7Y,OAAAmZ,GAAAN,EAAA7Y,OAAAoZ,GAAAP,EAAA7Y,OAAAqZ,GAAAR,EAAA7Y,OAAAsZ,GAEA,MAAA5Z,QAGA,WACA,aAAA+D,IAAA,CAIAA,EAAA8vH,KAAA,SAAAjsG,GAEA,GADAA,IAAAtqB,QAAA,UACAsqB,EAAAjqB,OAAA,KACA,SAAApC,OAAA,iBAEA,QAAA68B,GAAAp4B,EAAA8zH,EAAA,EAAAC,EAAA,EAAAlwF,EAAA,GAAqD7jC,EAAA4nB,EAAAtnB,OAAAyzH,MAA8B/zH,IAAAo4B,EAAA07F,EAAA,KAAA17F,EAAAp4B,IAAA8zH,IAAA,GAAAjwF,GAAAhmC,OAAAC,aAAA,IAAAs6B,KAAA,EAAA07F,EAAA,MACnF9zH,EAPA,oEAOAyqC,QAAAzqC,EAEA,OAAA6jC,QAGA,eACA,KAAA3jC,SAAAjG,UAAAmJ,OAGAlD,SAAAjG,UAAAmJ,KAAA,SAAAvG,GACA,GAAA8gB,GAAAllB,KAAAu7H,EAAA3yH,MAAApH,UAAA0B,MAAA3C,KAAAqlH,UAAA,EAKA,OAJA,YACA,GAAA7mG,GAAAw8G,EAAA/3E,OAAA56C,MAAApH,UAAA0B,MAAA3C,KAAAqlH,WACA,OAAA1gG,GAAA5f,MAAAlB,EAAA2a,SAKA,WACA,GAAAm7G,EAAA,CAIA,WADA78G,UAAAC,cAAA,QAIAvc,OAAAC,eAAAw6H,YAAAh6H,UAAA,WACAL,IAAA,WACA,GAAAnB,KAAAy7H,SACA,MAAAz7H,MAAAy7H,QAGA,QADAC,MACA9vG,EAAA,EAAAwc,EAAApoC,KAAA27H,WAAAz2H,OAAgD0mB,EAAAwc,EAAQxc,IAAA,CACxD,GAAAgwG,GAAA57H,KAAA27H,WAAA/vG,EACA,cAAAgwG,EAAAh7H,KAAA8qF,UAAA,MAMAgwC,EAHAE,EAAAh7H,KAAA8qF,UAAA,GAAA7mF,QAAA,sBAAAqvC,EAAAnrC,GACA,MAAAA,GAAA6kF,iBAEAguC,EAAAl7H,OAOA,MALAK,QAAAC,eAAAhB,KAAA,YACAU,MAAAg7H,EACAp3H,UAAA,EACApD,YAAA,IAEAw6H,GAEAx6H,YAAA,QAGA,WACA,QAAA26H,GAAA/lC,EAAAgmC,EAAAj9E,EAAA/5B,GACA,GAAAnjB,GAAAm0F,EAAAimC,WAAA,GACAC,EAAAr6H,EAAAsB,MAAA,OACA,MAAA+4H,EAAA,IACAA,EAAAp0G,OAEA,IAAAtO,GAAA0iH,EAAAhqF,QAAA8pF,EAQA,OAPAxiH,GAAA,GAAAulC,GACAm9E,EAAAn2H,KAAAi2H,GAEAxiH,GAAA,GAAAwL,GACAk3G,EAAAttF,OAAAp1B,EAAA,GAEAw8E,EAAAimC,UAAAC,EAAA74H,KAAA,KACAmW,GAAA,EAEA,GAAA4gH,EAAA,CAIA,kBADA78G,UAAAC,cAAA,QACA,CAGA,GAAA2+G,IACAp9E,IAAA,SAAAj+C,GACAi7H,EAAA77H,KAAA81F,QAAAl1F,GAAA,OAEAq5F,SAAA,SAAAr5F,GACA,MAAAi7H,GAAA77H,KAAA81F,QAAAl1F,GAAA,OAEAkkB,OAAA,SAAAlkB,GACAi7H,EAAA77H,KAAA81F,QAAAl1F,GAAA,OAEAs7H,OAAA,SAAAt7H,GACAi7H,EAAA77H,KAAA81F,QAAAl1F,GAAA,OAGAG,QAAAC,eAAAw6H,YAAAh6H,UAAA,aACAL,IAAA,WACA,GAAAnB,KAAAm8H,WACA,MAAAn8H,MAAAm8H,UAEA,IAAAC,GAAAr7H,OAAA2D,OAAAu3H,GACAnmC,SACAp1F,MAAAV,KACAsE,UAAA,EACApD,YAAA,IAQA,OALAH,QAAAC,eAAAhB,KAAA,cACAU,MAAA07H,EACA93H,UAAA,EACApD,YAAA,IAEAk7H,GAEAl7H,YAAA,SAGA,WACA,wBAAAm7H,gBAAA,WAAA/wH,IAAA,CAGA,GAAAgxH,MACAC,GACAj6H,IAAA,WACA,GAAAyc,GAAAnW,MAAApH,UAAA0B,MAAA3C,KAAAqlH,UACAt6G,GAAAb,aACAf,WAAA,OACAY,OAAA,cACA5D,KAAAqY,KAGApc,MAAA,WACA,GAAAoc,GAAAnW,MAAApH,UAAA0B,MAAA3C,KAAAqlH,UACAt6G,GAAAb,aACAf,WAAA,OACAY,OAAA,gBACA5D,KAAAqY,KAGAa,KAAA,SAAAhf,GACA07H,EAAA17H,GAAAif,KAAAC,OAEAC,QAAA,SAAAnf,GACA,GAAAgf,GAAA08G,EAAA17H,EACA,KAAAgf,EACA,SAAA9c,OAAA,sBAAAlC,EAEAZ,MAAAsC,IAAA,SAAA1B,EAAAif,KAAAC,MAAAF,IAGAtU,GAAAjJ,QAAAk6H,MAEA,WACA,GAAArC,EAGA,WAAA3uH,QAWA,QAAAlJ,SAAAC,MACAD,QAAAC,IAAA,SAAA4iB,GACA,gBAAAhjB,GACA,MAAAgjB,GAAAhjB,KAEIG,QAAAC,KACJD,QAAAM,MAAA,SAAAuiB,GACA,gBAAAhjB,GACA,MAAAgjB,GAAAhjB,KAEIG,QAAAM,OACJN,QAAAE,KAAA,SAAA2iB,GACA,gBAAAhjB,GACA,MAAAgjB,GAAAhjB,KAEIG,QAAAE,OAzBJgJ,OAAAlJ,SACAC,IAAA,aAEAK,MAAA,aAEAJ,KAAA,iBAwBA,WACA,QAAAi6H,GAAAtyH,GACAuyH,EAAAvyH,EAAAwyH,SACAxyH,EAAAyyH,kBAGA,QAAAF,GAAAvmE,GACA,MAAAA,GAAA0mE,UAAA1mE,EAAA2mE,YAAAJ,EAAAvmE,EAAA2mE,YAEA7C,GACA38G,SAAAzS,iBAAA,QAAA4xH,GAAA,MAGA,YACA1C,GAAAD,KACAP,MAAAnjF,wBAAA,MAGA,WACA,mBAAAoiE,aAGA,YAAAA,aAGA+gB,MAAAwD,OAAAvkB,UAAAwkB,cAAA,aAEA,YACA9C,GAAAR,GAAAG,GAAAG,KACAT,MAAAhpF,cAAA,EACAgpF,MAAA9oF,eAAA,MAGA,WACA0pF,IAGA8C,QAAAC,YAAAxD,IACAH,MAAA4D,gBAAA,OAGA,WACA,GAAAhD,EAGA,GAAA3uH,OAAA4xH,iBACA,kBAAA5xH,QAAA4xH,iBAAA37H,UAAAmF,MACA4E,OAAA4xH,iBAAA37H,UAAAmF,IAAA,SAAAT,GACA,OAAA7F,GAAA,EAAAmG,EAAAxG,KAAAkF,OAAsC7E,EAAAmG,EAAQnG,IAC9CL,KAAAK,GAAA6F,EAAA7F,SAIG,CACH,GAAA+8H,GAAAC,GAAA,CAUA,IATA1D,GACAyD,EAAA5kB,EAAA8kB,MAAA,4BACAD,EAAAD,GAAA54E,SAAA44E,EAAA,QACI5D,EACJ6D,EAAA3D,EACIO,IACJmD,EAAA5kB,EAAA8kB,MAAA,kDACAD,EAAAD,GAAA54E,SAAA44E,EAAA,OAEAC,EAAA,CACA,GAAAE,GAAAhyH,OAAAiyH,yBAAAh8H,UACAw2D,EAAAulE,EAAAvlE,eACAulE,GAAAvlE,gBAAA,SAAA/N,EAAAmC,GACA,GAAAotD,GAAAxhD,EAAAz3D,KAAAP,KAAAiqD,EAAAmC,EAMA,OALAotD,GAAA9yG,KAAAC,IAAA,SAAAT,GACA,OAAA7F,GAAA,EAAAmG,EAAAxG,KAAAkF,OAAuC7E,EAAAmG,EAAQnG,IAC/CL,KAAAK,GAAA6F,EAAA7F,IAGAm5G,GAEA+jB,EAAA,UAIA,WACA,QAAAE,GAAApzH,GACAkB,OAAAmyH,WAAArzH,EAAA,IAEA,GAAA6vH,EAGAH,EACAxuH,OAAAoyH,sBAAAF,EAGA,yBAAAlyH,UAGAA,OAAAoyH,sBAAApyH,OAAAqyH,0BAAAryH,OAAAsyH,6BAAAJ,MAEA,YACA1D,GAAAP,KACAF,MAAAwE,gBAAA,YAGA,WACA5D,GAGAJ,GAAAvuH,OAAAk4E,SAAAl4E,SACA+tH,MAAAyE,mBAAA,MAGA,WACA7D,IAGA,iBAAA78G,WAGAtc,OAAAC,eAAAqc,SAAA,iBACAlc,IAAA,WACA,GAAA68H,GAAA3gH,SAAAI,qBAAA,SACA,OAAAugH,KAAA94H,OAAA,IAEAhE,YAAA,EACAD,cAAA,QAGA,WACA,GAAAi5H,EAAA,CAGA,GAAA+D,GAAA5gH,SAAAC,cAAA,QACA,KACA2gH,EAAAz9G,KAAA,SACG,MAAAtc,GACH,GAAAg6H,GAAAD,EAAAzlH,YAAAhX,UACA28H,EAAAp9H,OAAAq9H,yBAAAF,EAAA,OACAn9H,QAAAC,eAAAk9H,EAAA,QACA/8H,IAAA,WACA,MAAAg9H,GAAAh9H,IAAAZ,KAAAP,OAEA2G,IAAA,SAAAjG,GACAy9H,EAAAx3H,IAAApG,KAAAP,KAAA,WAAAU,EAAA,OAAAA,IAEAQ,YAAA,EACAD,cAAA,SAIA,WACA,GAAAi5H,GAGA78G,SAAAghH,YAAA,CAGA,GAAAC,GAAAjhH,SAAA7E,YAAAhX,UACA+8H,EAAAx9H,OAAAq9H,yBAAAE,EAAA,aACAv9H,QAAAC,eAAAs9H,EAAA,cACAn9H,IAAA,WACA,GAAAT,GAAA69H,EAAAp9H,IAAAZ,KAAAP,KACA,uBAAAU,EAAA,UAAAA,GAEAiG,IAAA,SAAAjG,GACA69H,EAAA53H,IAAApG,KAAAP,KAAAU,IAEAQ,YAAA,EACAD,cAAA,QAGA,WACAi5H,OAGA,KAAAsE,QAAAh9H,UAAAsjB,SAGA05G,QAAAh9H,UAAAsjB,OAAA,WACA9kB,KAAA68H,YACA78H,KAAA68H,WAAA4B,YAAAz+H,WAIA,WACA,GAAAsL,EAAAjC,QA2CA,MA1CA,kBAAAiC,GAAAjC,QAAA6qC,MACA5oC,EAAAjC,QAAA6qC,IAAA,SAAAwqF,GACA,GAAAp1H,GAAAC,EAAA0sB,EAAA,EAAAke,KACA/qC,EAAA,GAAAkC,GAAAjC,QAAA,SAAAs1H,EAAAC,GACAt1H,EAAAq1H,EACAp1H,EAAAq1H,GAeA,OAbAF,GAAAr6G,QAAA,SAAA3iB,EAAArB,GACA41B,IACAv0B,EAAA6I,KAAA,SAAAC,GACA2pC,EAAA9zC,GAAAmK,EAEA,MADAyrB,GAEA3sB,EAAA6qC,IAEO5qC,KAEP,IAAA0sB,GACA3sB,EAAA6qC,GAEA/qC,IAGA,kBAAAkC,GAAAjC,QAAAC,UACAgC,EAAAjC,QAAAC,QAAA,SAAA5I,GACA,UAAA4K,GAAAjC,QAAA,SAAAC,GACAA,EAAA5I,OAIA,kBAAA4K,GAAAjC,QAAAE,SACA+B,EAAAjC,QAAAE,OAAA,SAAAmB,GACA,UAAAY,GAAAjC,QAAA,SAAAC,EAAAC,GACAA,EAAAmB,YAIA,kBAAAY,GAAAjC,QAAA7H,UAAA6zC,QACA/pC,EAAAjC,QAAA7H,UAAA6zC,MAAA,SAAAwpF,GACA,MAAAvzH,GAAAjC,QAAA7H,UAAA+I,SAAAtF,GAAA45H,KAKA,IAAAC,GAAA,EACAC,EAAA,EACAC,EAAA,EACAC,EAAA,IACAC,GACAC,YACAC,SAAA,EACAC,uBACAC,uBAAA,EACAC,iBAAA,SAAAn2H,GACAA,EAAAo2H,UAAAV,IAGA9+H,KAAAm/H,SAAAn/H,KAAAm/H,SAAA37E,OAAAp6C,EAAAq2H,WACAr2H,EAAAq2H,aACAz/H,KAAAo/H,UAGAp/H,KAAAo/H,SAAA,EACA1B,WAAA19H,KAAA0/H,YAAA/0H,KAAA3K,MAAA,MAEA0/H,YAAA,WAGA,IAFA,GAAAC,GAAA,EACAC,EAAA//G,KAAAC,MAAA6/G,EACA3/H,KAAAm/H,SAAAj6H,OAAA,IACA,GAAAoc,GAAAthB,KAAAm/H,SAAAv3G,QACAi4G,EAAAv+G,EAAAw+G,YAAAN,QACAO,EAAAz+G,EAAAw+G,YAAAE,MACA,KACAH,IAAAd,EACA,kBAAAz9G,GAAA2+G,YACAF,EAAAz+G,EAAA2+G,UAAAF,IAEO,kBAAAz+G,GAAAu9G,WACPkB,EAAAz+G,EAAAu9G,SAAAkB,GACAF,EAAAd,EACAz9G,EAAAw+G,YAAAI,qBACAlgI,KAAAmgI,0BAAA7+G,EAAAw+G,cAGM,MAAA57H,GACN27H,EAAAb,EACAe,EAAA77H,EAGA,GADAod,EAAA8+G,YAAAC,cAAAR,EAAAE,GACAlgH,KAAAC,OAAA8/G,EACA,MAGA,GAAA5/H,KAAAm/H,SAAAj6H,OAAA,EAEA,WADAw4H,YAAA19H,KAAA0/H,YAAA/0H,KAAA3K,MAAA,EAGAA,MAAAo/H,SAAA,GAEAkB,sBAAA,SAAAl3H,GACApJ,KAAAq/H,oBAAAx5H,MACAuD,UACAwW,KAAAC,KAAAC,QAEA9f,KAAAugI,0BAEAJ,0BAAA,SAAA/2H,GACAA,EAAA82H,qBAAA,CACA,QAAA7/H,GAAA,EAAmBA,EAAAL,KAAAq/H,oBAAAn6H,OAAqC7E,IACxDL,KAAAq/H,oBAAAh/H,GAAA+I,cACApJ,KAAAq/H,oBAAA3wF,OAAAruC,GACAA,MAIAkgI,uBAAA,WACAvgI,KAAAs/H,wBAGAt/H,KAAAs/H,uBAAA,EACA5B,WAAA,WACA19H,KAAAs/H,uBAAA,CAEA,QADAx/G,GAAAD,KAAAC,MACAzf,EAAA,EAAoBA,EAAAL,KAAAq/H,oBAAAn6H,OAAqC7E,IACzD,GAAAyf,EAAA9f,KAAAq/H,oBAAAh/H,GAAAuf,KAAAq/G,EAAA,CACA,GAAAuB,GAAAxgI,KAAAq/H,oBAAAh/H,GAAA+I,QAAA42H,OACA99H,EAAA,wBAAAs+H,CACAA,GAAAx9H,QACAd,GAAA,KAAAs+H,EAAAx9H,MAEA,KACA,SAAAF,OAAAZ,GACQ,MAAAu+H,GACRp+H,QAAAE,KAAAL,GAEAlC,KAAAq/H,oBAAA3wF,OAAAruC,GACAA,IAGAL,KAAAq/H,oBAAAn6H,QACAlF,KAAAugI,0BAEK51H,KAAA3K,MAAAi/H,MAGL51H,EAAA,SAAAq3H,GACA1gI,KAAAw/H,QAAAV,EACA9+H,KAAAy/H,YACA,KACAiB,EAAAngI,KAAAP,UAAA2gI,SAAAh2H,KAAA3K,WAAA4gI,QAAAj2H,KAAA3K,OACI,MAAA+C,GACJ/C,KAAA4gI,QAAA79H,IAGAsG,GAAA6qC,IAAA,SAAAyyC,GAYA,QAAAp9E,GAAAmB,GACAorD,EAAA0pE,UAAAR,IAGA7qF,KACA0sF,EAAAn2H,IAhBA,GAAAo2H,GAAAD,EACA/qE,EAAA,GAAAzsD,GAAA,SAAAC,EAAAC,GACAu3H,EAAAx3H,EACAu3H,EAAAt3H,IAEAw3H,EAAAp6C,EAAAzhF,OACAivC,IACA,QAAA4sF,EAEA,MADAD,GAAA3sF,GACA2hB,CASA,QAAAz1D,GAAA,EAAAmG,EAAAmgF,EAAAzhF,OAAwC7E,EAAAmG,IAAQnG,EAAA,CAChD,GAAA+I,GAAAu9E,EAAAtmF,GACAiJ,EAAA,SAAAjJ,GACA,gBAAAK,GACAo1D,EAAA0pE,UAAAR,IAGA7qF,EAAA9zC,GAAAK,EAEA,MADAqgI,GAEAD,EAAA3sF,MAGK9zC,EACLgJ,GAAA23H,UAAA53H,GACAA,EAAAmB,KAAAjB,EAAAC,GAEAD,EAAAF,GAGA,MAAA0sD,IAEAzsD,EAAA23H,UAAA,SAAAtgI,GACA,MAAAA,IAAA,kBAAAA,GAAA6J,MAEAlB,EAAAC,QAAA,SAAA5I,GACA,UAAA2I,GAAA,SAAAC,GACAA,EAAA5I,MAGA2I,EAAAE,OAAA,SAAAmB,GACA,UAAArB,GAAA,SAAAC,EAAAC,GACAA,EAAAmB,MAGArB,EAAA7H,WACAg+H,QAAA,KACAQ,OAAA,KACAP,UAAA,KACAS,oBAAA,KACAG,cAAA,SAAAxnH,EAAAnY,GACA,GAAAV,KAAAw/H,UAAAT,GAAA/+H,KAAAw/H,UAAAR,EAAA,CAGA,GAAAnmH,IAAAkmH,GAAA11H,EAAA23H,UAAAtgI,GAEA,WADAA,GAAA6J,KAAAvK,KAAAqgI,cAAA11H,KAAA3K,KAAA++H,GAAA/+H,KAAAqgI,cAAA11H,KAAA3K,KAAAg/H,GAGAh/H,MAAAw/H,QAAA3mH,EACA7Y,KAAAggI,OAAAt/H,EACAmY,IAAAmmH,GAAA,IAAAh/H,KAAAy/H,UAAAv6H,SACAlF,KAAAkgI,qBAAA,EACAhB,EAAAoB,sBAAAtgI,OAEAk/H,EAAAK,iBAAAv/H,QAEA2gI,SAAA,SAAAjgI,GACAV,KAAAqgI,cAAAtB,EAAAr+H,IAEAkgI,QAAA,SAAAl2H,GACA1K,KAAAqgI,cAAArB,EAAAt0H,IAEAH,KAAA,SAAA01H,EAAApB,GACA,GAAAuB,GAAA,GAAA/2H,GAAA,SAAAC,EAAAC,GACAvJ,KAAAsJ,UACAtJ,KAAAuJ,UASA,OAPAvJ,MAAAy/H,UAAA55H,MACAi6H,YAAA9/H,KACAigI,YACApB,WACAuB,gBAEAlB,EAAAK,iBAAAv/H,MACAogI,GAEA/qF,MAAA,SAAAwpF,GACA,MAAA7+H,MAAAuK,SAAAtF,GAAA45H,KAGAvzH,EAAAjC,aAEA,WAKA,QAAA43H,KACAjhI,KAAA8K,GAAA,WAAAA,IALA,IAAAQ,EAAA21H,QAAA,CAGA,GAAAn2H,GAAA,CAIAm2H,GAAAz/H,WACAwb,IAAA,SAAA5Y,GACA,QAAArD,OAAAq9H,yBAAAh6H,EAAApE,KAAA8K,KAEA3J,IAAA,SAAAiD,EAAAq6E,GACA,MAAAz+E,MAAAgd,IAAA5Y,KAAApE,KAAA8K,IAAA2zE,GAEA93E,IAAA,SAAAvC,EAAA1D,GACAK,OAAAC,eAAAoD,EAAApE,KAAA8K,IACApK,QACAQ,YAAA,EACAD,cAAA,KAGAigI,OAAA,SAAA98H,SACAA,GAAApE,KAAA8K,MAGAQ,EAAA21H,cAEA,WA0BA,QAAAE,GAAAC,GACA,WAAAn8H,KAAAo8H,EAAAD,GAEA,QAAAE,KACAl8G,EAAA7kB,KAAAP,MACAA,KAAAuhI,YAAA,EAEA,QAAAC,GAAAp1E,GAIA,MAHA,KAAAA,GACAk1E,EAAA/gI,KAAAP,MAEAosD,EAAAhwC,cAEA,QAAAqlH,GAAAhhI,GACA,GAAA+/D,GAAA//D,EAAAuF,WAAA,EACA,OAAAw6D,GAAA,IAAAA,EAAA,MAOA,KANA,GACA,GACA,GACA,GACA,GACA,IACAxuB,QAAAwuB,GACA//D,EAEA0H,mBAAA1H,GAEA,QAAAihI,GAAAjhI,GACA,GAAA+/D,GAAA//D,EAAAuF,WAAA,EACA,OAAAw6D,GAAA,IAAAA,EAAA,MAMA,KALA,GACA,GACA,GACA,GACA,IACAxuB,QAAAwuB,GACA//D,EAEA0H,mBAAA1H,GAGA,QAAAusB,GAAAmC,EAAAwyG,EAAAl+H,GACA,QAAA4uB,GAAA9Z,GACA3V,EAAAiD,KAAA0S,GAEA,GAAAypB,GAAA2/F,GAAA,eAAAC,EAAA,EAAAr6H,EAAA,GAAAs6H,GAAA,EAAAC,GAAA,EAAAl/H,IACAm/H,GACA,MAAA5yG,EAAAyyG,EAAA,KAAA9/G,GAAA,IAAA8/G,KAAA5hI,KAAAuhI,YAAA,CACA,GAAA9gI,GAAA0uB,EAAAyyG,EACA,QAAA5/F,GACA,mBACA,IAAAvhC,IAAAuhI,EAAA3+D,KAAA5iE,GAGO,IAAAkhI,EAIA,CACPtvG,EAAA,kBACA,MAAA0vG,GALAx6H,EAAA,GACAy6B,EAAA,WACA,UALAz6B,GAAA9G,EAAA2b,cACA4lB,EAAA,QASA,MACA,cACA,GAAAvhC,GAAAwhI,EAAA5+D,KAAA5iE,GACA8G,GAAA9G,EAAA2b,kBACO,UAAA3b,EAkBA,IAAAkhI,EAKA,IAAA7/G,IAAArhB,EACP,KAAAshI,EAEA1vG,GAAA,qCAAA5xB,EACA,MAAAshI,GARAx6H,EAAA,GACAq6H,EAAA,EACA5/F,EAAA,WACA,UAnBA,GAFAhiC,KAAAkiI,QAAA36H,EACAA,EAAA,GACAo6H,EACA,KAAAI,EAEAZ,GAAAnhI,KAAAkiI,WACAliI,KAAAmiI,aAAA,GAGAngG,EADA,SAAAhiC,KAAAkiI,QACA,WACQliI,KAAAmiI,aAAA1+H,KAAAy+H,UAAAliI,KAAAkiI,QACR,wBACQliI,KAAAmiI,YACR,wBAEA,cAaA,KACA,mBACA,MAAA1hI,GACAT,KAAAoiI,OAAA,IACApgG,EAAA,SACO,MAAAvhC,GACPT,KAAAqiI,UAAA,IACArgG,EAAA,YAEAlgB,IAAArhB,GAAA,OAAAA,GAAA,OAAAA,GAAA,OAAAA,IACAT,KAAAsiI,aAAAb,EAAAhhI,GAGA,MACA,iBACA,GAAAgD,GAAA09H,EAAA19H,EAAAy+H,SAGO,CACPlgG,EAAA,UACA,UAJA3P,EAAA,mBACAivG,EAAA/gI,KAAAP,KAKA,MACA,6BACA,SAAAS,GAAA,MAAA0uB,EAAAyyG,EAAA,GAEO,CACPvvG,EAAA,oBAAA5xB,GACAuhC,EAAA,UACA,UAJAA,EAAA,0BAMA,MACA,gBAKA,GAJAhiC,KAAAmiI,aAAA,EACA,SAAAniI,KAAAkiI,UACAliI,KAAAkiI,QAAAz+H,EAAAy+H,SAEApgH,IAAArhB,EAAA,CACAT,KAAAuiI,MAAA9+H,EAAA8+H,MACAviI,KAAAwiI,MAAA/+H,EAAA++H,MACAxiI,KAAAyiI,MAAAh/H,EAAAg/H,MAAAv/H,QACAlD,KAAAoiI,OAAA3+H,EAAA2+H,OACApiI,KAAA0iI,UAAAj/H,EAAAi/H,UACA1iI,KAAA80H,UAAArxH,EAAAqxH,SACA,MAAAiN,GACO,SAAAthI,GAAA,OAAAA,EACP,OAAAA,GACA4xB,EAAA,gCAEA2P,EAAA,qBACO,UAAAvhC,EACPT,KAAAuiI,MAAA9+H,EAAA8+H,MACAviI,KAAAwiI,MAAA/+H,EAAA++H,MACAxiI,KAAAyiI,MAAAh/H,EAAAg/H,MAAAv/H,QACAlD,KAAAoiI,OAAA,IACApiI,KAAA0iI,UAAAj/H,EAAAi/H,UACA1iI,KAAA80H,UAAArxH,EAAAqxH,UACA9yF,EAAA,YACO,UAAAvhC,EASA,CACP,GAAAkiI,GAAAxzG,EAAAyyG,EAAA,GACAgB,EAAAzzG,EAAAyyG,EAAA,IACA,SAAA5hI,KAAAkiI,UAAAF,EAAA3+D,KAAA5iE,IAAA,MAAAkiI,GAAA,MAAAA,GAAA7gH,IAAA8gH,GAAA,MAAAA,GAAA,OAAAA,GAAA,MAAAA,GAAA,MAAAA,KACA5iI,KAAAuiI,MAAA9+H,EAAA8+H,MACAviI,KAAAwiI,MAAA/+H,EAAA++H,MACAxiI,KAAA0iI,UAAAj/H,EAAAi/H,UACA1iI,KAAA80H,UAAArxH,EAAAqxH,UACA90H,KAAAyiI,MAAAh/H,EAAAg/H,MAAAv/H,QACAlD,KAAAyiI,MAAA92F,OAEA3J,EAAA,eACA,UApBAhiC,KAAAuiI,MAAA9+H,EAAA8+H,MACAviI,KAAAwiI,MAAA/+H,EAAA++H,MACAxiI,KAAAyiI,MAAAh/H,EAAAg/H,MAAAv/H,QACAlD,KAAAoiI,OAAA3+H,EAAA2+H,OACApiI,KAAAqiI,UAAA,IACAriI,KAAA0iI,UAAAj/H,EAAAi/H,UACA1iI,KAAA80H,UAAArxH,EAAAqxH,UACA9yF,EAAA,WAeA,KACA,sBACA,SAAAvhC,GAAA,OAAAA,EASO,CACP,SAAAT,KAAAkiI,UACAliI,KAAAuiI,MAAA9+H,EAAA8+H,MACAviI,KAAAwiI,MAAA/+H,EAAA++H,MACAxiI,KAAA0iI,UAAAj/H,EAAAi/H,UACA1iI,KAAA80H,UAAArxH,EAAAqxH,WAEA9yF,EAAA,eACA,UAhBA,OAAAvhC,GACA4xB,EAAA,gCAGA2P,EADA,SAAAhiC,KAAAkiI,QACA,YAEA,0BAYA,MACA,6BACA,SAAAzhI,EAEO,CACP4xB,EAAA,sBAAA5xB,GACAuhC,EAAA,0BACA,UAJAA,EAAA,wBAMA,MACA,8BAEA,GADAA,EAAA,2BACA,MAAAvhC,EAAA,CACA4xB,EAAA,sBAAA5xB,EACA,UAEA,KACA,gCACA,SAAAA,GAAA,OAAAA,EAAA,CACAuhC,EAAA,WACA,UAEA3P,EAAA,4BAAA5xB,EAEA,MACA,iBACA,SAAAA,EAAA,CACAohI,IACAxvG,EAAA,mBACA9qB,GAAA,OAEAs6H,GAAA,CACA,QAAAxhI,GAAA,EAAsBA,EAAAkH,EAAArC,OAAmB7E,IAAA,CACzC,GAAAwiI,GAAAt7H,EAAAlH,EACA,WAAAwiI,GAAA,OAAAA,GAAA,OAAAA,EAIA,SAAAA,GAAA,OAAA7iI,KAAA80H,UAAA,CAIA,GAAAgO,GAAArB,EAAAoB,EACA,QAAA7iI,KAAA80H,UACA90H,KAAA80H,WAAAgO,EAEA9iI,KAAA0iI,WAAAI,MAPA9iI,MAAA80H,UAAA,OAJAziG,GAAA,oCAcA9qB,EAAA,OACO,IAAA9G,IAAAqhB,GAAA,MAAArhB,GAAA,OAAAA,GAAA,MAAAA,GAAA,MAAAA,EAAA,CACPmhI,GAAAr6H,EAAArC,OACAqC,EAAA,GACAy6B,EAAA,MACA,UAEAz6B,GAAA9G,EAEA,KACA,iBACA,GAAAA,IAAAqhB,GAAA,MAAArhB,GAAA,OAAAA,GAAA,MAAAA,GAAA,MAAAA,EAAA,CACA,IAAA8G,EAAArC,SAAA88H,EAAA3+D,KAAA97D,EAAA,WAAAA,EAAA,UAAAA,EAAA,GAEQ,IAAAA,EAAArC,OACR88B,EAAA,uBAEAhiC,KAAAuiI,MAAAf,EAAAjhI,KAAAP,KAAAuH,GACAA,EAAA,GACAy6B,EAAA,uBANAA,EAAA,eAQA,UACO,OAAAvhC,GAAA,OAAAA,GAAA,OAAAA,EACP4xB,EAAA,oCAEA9qB,GAAA9G,CAEA,MACA,YACA,eACA,SAAAA,GAAAqhI,EAOO,IAAArhI,IAAAqhB,GAAA,MAAArhB,GAAA,OAAAA,GAAA,MAAAA,GAAA,MAAAA,EAAA,CAIP,GAHAT,KAAAuiI,MAAAf,EAAAjhI,KAAAP,KAAAuH,GACAA,EAAA,GACAy6B,EAAA,sBACA2/F,EACA,KAAAI,EAEA,UACO,OAAAthI,GAAA,OAAAA,GAAA,OAAAA,GACP,MAAAA,EACAqhI,GAAA,EACQ,MAAArhI,IACRqhI,GAAA,GAEAv6H,GAAA9G,GAEA4xB,EAAA,wCAAA5xB,OAnBA,IAHAT,KAAAuiI,MAAAf,EAAAjhI,KAAAP,KAAAuH,GACAA,EAAA,GACAy6B,EAAA,OACA,aAAA2/F,EACA,KAAAI,EAoBA,MACA,YACA,WAAA1+D,KAAA5iE,GACA8G,GAAA9G,MACO,IAAAA,IAAAqhB,GAAA,MAAArhB,GAAA,OAAAA,GAAA,MAAAA,GAAA,MAAAA,GAAAkhI,EAAA,CACP,QAAAp6H,EAAA,CACA,GAAA6wF,GAAA5zC,SAAAj9C,EAAA,GACA6wF,KAAAipC,EAAArhI,KAAAkiI,WACAliI,KAAAwiI,MAAApqC,EAAA,IAEA7wF,EAAA,GAEA,GAAAo6H,EACA,KAAAI,EAEA//F,GAAA,qBACA,UACO,OAAAvhC,GAAA,OAAAA,GAAA,OAAAA,EACP4xB,EAAA,+BAAA5xB,GAEA6gI,EAAA/gI,KAAAP,MAEA,KACA,2BAKA,GAJA,OAAAS,GACA4xB,EAAA,6BAEA2P,EAAA,gBACA,MAAAvhC,GAAA,OAAAA,EACA,QAEA,MACA,qBACA,GAAAA,IAAAqhB,GAAA,MAAArhB,GAAA,OAAAA,IAAAkhI,GAAA,MAAAlhI,GAAA,MAAAA,GA6BO,OAAAA,GAAA,OAAAA,GAAA,OAAAA,IACP8G,GAAAk6H,EAAAhhI,QA9BA,CACA,OAAAA,GACA4xB,EAAA,mCAEA,IAAAi3B,IACAA,EAAAy5E,EAAAx7H,EAAA6U,kBACA7U,EAAA+hD,GAEA,OAAA/hD,GACAvH,KAAAyiI,MAAA92F,MACA,MAAAlrC,GAAA,OAAAA,GACAT,KAAAyiI,MAAA58H,KAAA,KAEQ,MAAA0B,GAAA,MAAA9G,GAAA,OAAAA,EACRT,KAAAyiI,MAAA58H,KAAA,IACQ,MAAA0B,IACR,SAAAvH,KAAAkiI,SAAA,IAAAliI,KAAAyiI,MAAAv9H,QAAA,IAAAqC,EAAArC,QAAA88H,EAAA3+D,KAAA97D,EAAA,WAAAA,EAAA,KACAA,IAAA,QAEAvH,KAAAyiI,MAAA58H,KAAA0B,IAEAA,EAAA,GACA,MAAA9G,GACAT,KAAAoiI,OAAA,IACApgG,EAAA,SACQ,MAAAvhC,IACRT,KAAAqiI,UAAA,IACArgG,EAAA,YAKA,KACA,aACA2/F,GAAA,MAAAlhI,EAGOqhB,IAAArhB,GAAA,OAAAA,GAAA,OAAAA,GAAA,OAAAA,IACPT,KAAAoiI,QAAAV,EAAAjhI,KAHAT,KAAAqiI,UAAA,IACArgG,EAAA,WAIA,MACA,gBACAlgB,IAAArhB,GAAA,OAAAA,GAAA,OAAAA,GAAA,OAAAA,IACAT,KAAAqiI,WAAA5hI,GAIAmhI,KAGA,QAAAx8G,KACAplB,KAAAkiI,QAAA,GACAliI,KAAAsiI,YAAA,GACAtiI,KAAA0iI,UAAA,GACA1iI,KAAA80H,UAAA,KACA90H,KAAAuiI,MAAA,GACAviI,KAAAwiI,MAAA,GACAxiI,KAAAyiI,SACAziI,KAAAoiI,OAAA,GACApiI,KAAAqiI,UAAA,GACAriI,KAAAuhI,YAAA,EACAvhI,KAAAmiI,aAAA,EAEA,QAAAa,GAAAl/H,EAAAL,OACAwB,KAAAxB,eAAAu/H,KACAv/H,EAAA,GAAAu/H,GAAA59H,OAAA3B,KAEAzD,KAAAqvF,KAAAvrF,EACAshB,EAAA7kB,KAAAP,KACA,IAAAmvB,GAAArrB,EAAAe,QAAA,kCACAmoB,GAAAzsB,KAAAP,KAAAmvB,EAAA,KAAA1rB,GA7aA,GAAAw/H,IAAA,CACA,KACA,qBAAAv/H,MAAA,gBAAAA,KAAAlC,WAAA,UAAAkC,KAAAlC,UAAA,CACA,GAAA0rD,GAAA,GAAAxpD,KAAA,eACAwpD,GAAAg2E,SAAA,QACAD,EAAA,mBAAA/1E,EAAAs7B,MAEG,MAAAzlF,IAEH,IAAAkgI,EAAA,CAGA,GAAA5B,GAAAtgI,OAAA2D,OAAA,KACA28H,GAAA,OACAA,EAAA,OACAA,EAAA,UACAA,EAAA,QACAA,EAAA,UACAA,EAAA,MACAA,EAAA,OACA,IAAA0B,GAAAhiI,OAAA2D,OAAA,KACAq+H,GAAA,WACAA,EAAA,aACAA,EAAA,aACAA,EAAA,cAyCA,IAAAjhH,GAAAkgH,EAAA,WAAAC,EAAA,mBA8WAe,GAAAxhI,WACAwe,SAAA,WACA,MAAAhgB,MAAAwoF,MAEAA,WACA,GAAAxoF,KAAAuhI,WACA,MAAAvhI,MAAAqvF,IAEA,IAAA8zC,GAAA,EAIA,OAHA,KAAAnjI,KAAA0iI,WAAA,OAAA1iI,KAAA80H,YACAqO,EAAAnjI,KAAA0iI,WAAA,OAAA1iI,KAAA80H,UAAA,IAAA90H,KAAA80H,UAAA,SAEA90H,KAAA+D,UAAA/D,KAAAmiI,YAAA,KAAAgB,EAAAnjI,KAAAojI,KAAA,IAAApjI,KAAAkjI,SAAAljI,KAAAoiI,OAAApiI,KAAAqiI,WAEA75C,YACApjE,EAAA7kB,KAAAP,MACAgtB,EAAAzsB,KAAAP,KAAAwoF,IAEAzkF,eACA,MAAA/D,MAAAkiI,QAAA,KAEAn+H,gBACA/D,KAAAuhI,YAGAv0G,EAAAzsB,KAAAP,KAAA+D,EAAA,qBAEAq/H,WACA,MAAApjI,MAAAuhI,WAAA,GAAAvhI,KAAAwiI,MAAAxiI,KAAAuiI,MAAA,IAAAviI,KAAAwiI,MAAAxiI,KAAAuiI,OAEAa,aACApjI,KAAAuhI,YAAAvhI,KAAAmiI,aAGAn1G,EAAAzsB,KAAAP,KAAAojI,EAAA,SAEAC,eACA,MAAArjI,MAAAuiI,OAEAc,iBACArjI,KAAAuhI,YAAAvhI,KAAAmiI,aAGAn1G,EAAAzsB,KAAAP,KAAAqjI,EAAA,aAEA1wF,WACA,MAAA3yC,MAAAwiI,OAEA7vF,aACA3yC,KAAAuhI,YAAAvhI,KAAAmiI,aAGAn1G,EAAAzsB,KAAAP,KAAA2yC,EAAA,SAEAuwF,eACA,MAAAljI,MAAAuhI,WAAA,GAAAvhI,KAAAmiI,YAAA,IAAAniI,KAAAyiI,MAAAt/H,KAAA,KAAAnD,KAAAsiI,aAEAY,iBACAljI,KAAAuhI,YAAAvhI,KAAAmiI,cAGAniI,KAAAyiI,SACAz1G,EAAAzsB,KAAAP,KAAAkjI,EAAA,yBAEAx9D,aACA,MAAA1lE,MAAAuhI,aAAAvhI,KAAAoiI,QAAA,MAAApiI,KAAAoiI,OAAA,GAAApiI,KAAAoiI,QAEA18D,eACA1lE,KAAAuhI,YAAAvhI,KAAAmiI,cAGAniI,KAAAoiI,OAAA,IACA,MAAA18D,EAAA,KACAA,IAAAxiE,MAAA,IAEA8pB,EAAAzsB,KAAAP,KAAA0lE,EAAA,WAEA9b,WACA,MAAA5pD,MAAAuhI,aAAAvhI,KAAAqiI,WAAA,MAAAriI,KAAAqiI,UAAA,GAAAriI,KAAAqiI,WAEAz4E,YACA5pD,KAAAuhI,aAGAvhI,KAAAqiI,UAAA,IACA,MAAAz4E,EAAA,KACAA,IAAA1mD,MAAA,IAEA8pB,EAAAzsB,KAAAP,KAAA4pD,EAAA,cAEAjmD,aACA,GAAAy/H,EACA,IAAApjI,KAAAuhI,aAAAvhI,KAAAkiI,QACA,QAEA,QAAAliI,KAAAkiI,SACA,WACA,WACA,iBACA,aACA,aAGA,MADAkB,GAAApjI,KAAAojI,KACAA,EAGApjI,KAAAkiI,QAAA,MAAAkB,EAFA,IAKA,IAAAE,GAAAh4H,EAAA5H,GACA4/H,KACAN,EAAAviH,gBAAA,SAAAG,GACA,MAAA0iH,GAAA7iH,gBAAAnb,MAAAg+H,EAAA1d,YAEAod,EAAAO,gBAAA,SAAAz/H,GACAw/H,EAAAC,gBAAAz/H,KAGAwH,EAAA5H,IAAAs/H,SAG4BziI,KAAAZ,EAAAO,EAAA,KAI5B,SAAAR,EAAAC,EAAAO,GAEA,YAEA,IAEAsjI,GAAAtjI,EAAA,EAEAA,GAAA,IAEAP,EAAAyvC,qBAAAo0F,EAAAp0F,4BDW6B7uC,KAAKZ,EAASC,EAAoB","file":"21.5a54c805aa33b31f5e0c.js","sourcesContent":["webpackJsonp([21],{\n\n/***/ 1732:\n/***/ (function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(process) {/*** IMPORTS FROM imports-loader ***/\nvar $ = __webpack_require__(0);\nvar jQuery = __webpack_require__(0);\n\n/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf.worker\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf.worker\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf.worker\"] = root.pdfjsDistBuildPdfWorker = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __w_pdfjs_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__w_pdfjs_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__w_pdfjs_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__w_pdfjs_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__w_pdfjs_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__w_pdfjs_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__w_pdfjs_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 37);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\nvar compatibility = __w_pdfjs_require__(36);\nvar globalScope = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this;\nvar FONT_IDENTITY_MATRIX = [\n 0.001,\n 0,\n 0,\n 0.001,\n 0,\n 0\n];\nvar TextRenderingMode = {\n FILL: 0,\n STROKE: 1,\n FILL_STROKE: 2,\n INVISIBLE: 3,\n FILL_ADD_TO_PATH: 4,\n STROKE_ADD_TO_PATH: 5,\n FILL_STROKE_ADD_TO_PATH: 6,\n ADD_TO_PATH: 7,\n FILL_STROKE_MASK: 3,\n ADD_TO_PATH_FLAG: 4\n};\nvar ImageKind = {\n GRAYSCALE_1BPP: 1,\n RGB_24BPP: 2,\n RGBA_32BPP: 3\n};\nvar AnnotationType = {\n TEXT: 1,\n LINK: 2,\n FREETEXT: 3,\n LINE: 4,\n SQUARE: 5,\n CIRCLE: 6,\n POLYGON: 7,\n POLYLINE: 8,\n HIGHLIGHT: 9,\n UNDERLINE: 10,\n SQUIGGLY: 11,\n STRIKEOUT: 12,\n STAMP: 13,\n CARET: 14,\n INK: 15,\n POPUP: 16,\n FILEATTACHMENT: 17,\n SOUND: 18,\n MOVIE: 19,\n WIDGET: 20,\n SCREEN: 21,\n PRINTERMARK: 22,\n TRAPNET: 23,\n WATERMARK: 24,\n THREED: 25,\n REDACT: 26\n};\nvar AnnotationFlag = {\n INVISIBLE: 0x01,\n HIDDEN: 0x02,\n PRINT: 0x04,\n NOZOOM: 0x08,\n NOROTATE: 0x10,\n NOVIEW: 0x20,\n READONLY: 0x40,\n LOCKED: 0x80,\n TOGGLENOVIEW: 0x100,\n LOCKEDCONTENTS: 0x200\n};\nvar AnnotationFieldFlag = {\n READONLY: 0x0000001,\n REQUIRED: 0x0000002,\n NOEXPORT: 0x0000004,\n MULTILINE: 0x0001000,\n PASSWORD: 0x0002000,\n NOTOGGLETOOFF: 0x0004000,\n RADIO: 0x0008000,\n PUSHBUTTON: 0x0010000,\n COMBO: 0x0020000,\n EDIT: 0x0040000,\n SORT: 0x0080000,\n FILESELECT: 0x0100000,\n MULTISELECT: 0x0200000,\n DONOTSPELLCHECK: 0x0400000,\n DONOTSCROLL: 0x0800000,\n COMB: 0x1000000,\n RICHTEXT: 0x2000000,\n RADIOSINUNISON: 0x2000000,\n COMMITONSELCHANGE: 0x4000000\n};\nvar AnnotationBorderStyleType = {\n SOLID: 1,\n DASHED: 2,\n BEVELED: 3,\n INSET: 4,\n UNDERLINE: 5\n};\nvar StreamType = {\n UNKNOWN: 0,\n FLATE: 1,\n LZW: 2,\n DCT: 3,\n JPX: 4,\n JBIG: 5,\n A85: 6,\n AHX: 7,\n CCF: 8,\n RL: 9\n};\nvar FontType = {\n UNKNOWN: 0,\n TYPE1: 1,\n TYPE1C: 2,\n CIDFONTTYPE0: 3,\n CIDFONTTYPE0C: 4,\n TRUETYPE: 5,\n CIDFONTTYPE2: 6,\n TYPE3: 7,\n OPENTYPE: 8,\n TYPE0: 9,\n MMTYPE1: 10\n};\nvar VERBOSITY_LEVELS = {\n errors: 0,\n warnings: 1,\n infos: 5\n};\nvar CMapCompressionType = {\n NONE: 0,\n BINARY: 1,\n STREAM: 2\n};\nvar OPS = {\n dependency: 1,\n setLineWidth: 2,\n setLineCap: 3,\n setLineJoin: 4,\n setMiterLimit: 5,\n setDash: 6,\n setRenderingIntent: 7,\n setFlatness: 8,\n setGState: 9,\n save: 10,\n restore: 11,\n transform: 12,\n moveTo: 13,\n lineTo: 14,\n curveTo: 15,\n curveTo2: 16,\n curveTo3: 17,\n closePath: 18,\n rectangle: 19,\n stroke: 20,\n closeStroke: 21,\n fill: 22,\n eoFill: 23,\n fillStroke: 24,\n eoFillStroke: 25,\n closeFillStroke: 26,\n closeEOFillStroke: 27,\n endPath: 28,\n clip: 29,\n eoClip: 30,\n beginText: 31,\n endText: 32,\n setCharSpacing: 33,\n setWordSpacing: 34,\n setHScale: 35,\n setLeading: 36,\n setFont: 37,\n setTextRenderingMode: 38,\n setTextRise: 39,\n moveText: 40,\n setLeadingMoveText: 41,\n setTextMatrix: 42,\n nextLine: 43,\n showText: 44,\n showSpacedText: 45,\n nextLineShowText: 46,\n nextLineSetSpacingShowText: 47,\n setCharWidth: 48,\n setCharWidthAndBounds: 49,\n setStrokeColorSpace: 50,\n setFillColorSpace: 51,\n setStrokeColor: 52,\n setStrokeColorN: 53,\n setFillColor: 54,\n setFillColorN: 55,\n setStrokeGray: 56,\n setFillGray: 57,\n setStrokeRGBColor: 58,\n setFillRGBColor: 59,\n setStrokeCMYKColor: 60,\n setFillCMYKColor: 61,\n shadingFill: 62,\n beginInlineImage: 63,\n beginImageData: 64,\n endInlineImage: 65,\n paintXObject: 66,\n markPoint: 67,\n markPointProps: 68,\n beginMarkedContent: 69,\n beginMarkedContentProps: 70,\n endMarkedContent: 71,\n beginCompat: 72,\n endCompat: 73,\n paintFormXObjectBegin: 74,\n paintFormXObjectEnd: 75,\n beginGroup: 76,\n endGroup: 77,\n beginAnnotations: 78,\n endAnnotations: 79,\n beginAnnotation: 80,\n endAnnotation: 81,\n paintJpegXObject: 82,\n paintImageMaskXObject: 83,\n paintImageMaskXObjectGroup: 84,\n paintImageXObject: 85,\n paintInlineImageXObject: 86,\n paintInlineImageXObjectGroup: 87,\n paintImageXObjectRepeat: 88,\n paintImageMaskXObjectRepeat: 89,\n paintSolidColorImageMask: 90,\n constructPath: 91\n};\nvar verbosity = VERBOSITY_LEVELS.warnings;\nfunction setVerbosityLevel(level) {\n verbosity = level;\n}\nfunction getVerbosityLevel() {\n return verbosity;\n}\nfunction info(msg) {\n if (verbosity >= VERBOSITY_LEVELS.infos) {\n  console.log('Info: ' + msg);\n }\n}\nfunction warn(msg) {\n if (verbosity >= VERBOSITY_LEVELS.warnings) {\n  console.log('Warning: ' + msg);\n }\n}\nfunction deprecated(details) {\n console.log('Deprecated API usage: ' + details);\n}\nfunction error(msg) {\n if (verbosity >= VERBOSITY_LEVELS.errors) {\n  console.log('Error: ' + msg);\n  console.log(backtrace());\n }\n throw new Error(msg);\n}\nfunction backtrace() {\n try {\n  throw new Error();\n } catch (e) {\n  return e.stack ? e.stack.split('\\n').slice(2).join('\\n') : '';\n }\n}\nfunction assert(cond, msg) {\n if (!cond) {\n  error(msg);\n }\n}\nvar UNSUPPORTED_FEATURES = {\n unknown: 'unknown',\n forms: 'forms',\n javaScript: 'javaScript',\n smask: 'smask',\n shadingPattern: 'shadingPattern',\n font: 'font'\n};\nfunction isSameOrigin(baseUrl, otherUrl) {\n try {\n  var base = new URL(baseUrl);\n  if (!base.origin || base.origin === 'null') {\n   return false;\n  }\n } catch (e) {\n  return false;\n }\n var other = new URL(otherUrl, base);\n return base.origin === other.origin;\n}\nfunction isValidProtocol(url) {\n if (!url) {\n  return false;\n }\n switch (url.protocol) {\n case 'http:':\n case 'https:':\n case 'ftp:':\n case 'mailto:':\n case 'tel:':\n  return true;\n default:\n  return false;\n }\n}\nfunction createValidAbsoluteUrl(url, baseUrl) {\n if (!url) {\n  return null;\n }\n try {\n  var absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n  if (isValidProtocol(absoluteUrl)) {\n   return absoluteUrl;\n  }\n } catch (ex) {\n }\n return null;\n}\nfunction shadow(obj, prop, value) {\n Object.defineProperty(obj, prop, {\n  value: value,\n  enumerable: true,\n  configurable: true,\n  writable: false\n });\n return value;\n}\nfunction getLookupTableFactory(initializer) {\n var lookup;\n return function () {\n  if (initializer) {\n   lookup = Object.create(null);\n   initializer(lookup);\n   initializer = null;\n  }\n  return lookup;\n };\n}\nvar PasswordResponses = {\n NEED_PASSWORD: 1,\n INCORRECT_PASSWORD: 2\n};\nvar PasswordException = function PasswordExceptionClosure() {\n function PasswordException(msg, code) {\n  this.name = 'PasswordException';\n  this.message = msg;\n  this.code = code;\n }\n PasswordException.prototype = new Error();\n PasswordException.constructor = PasswordException;\n return PasswordException;\n}();\nvar UnknownErrorException = function UnknownErrorExceptionClosure() {\n function UnknownErrorException(msg, details) {\n  this.name = 'UnknownErrorException';\n  this.message = msg;\n  this.details = details;\n }\n UnknownErrorException.prototype = new Error();\n UnknownErrorException.constructor = UnknownErrorException;\n return UnknownErrorException;\n}();\nvar InvalidPDFException = function InvalidPDFExceptionClosure() {\n function InvalidPDFException(msg) {\n  this.name = 'InvalidPDFException';\n  this.message = msg;\n }\n InvalidPDFException.prototype = new Error();\n InvalidPDFException.constructor = InvalidPDFException;\n return InvalidPDFException;\n}();\nvar MissingPDFException = function MissingPDFExceptionClosure() {\n function MissingPDFException(msg) {\n  this.name = 'MissingPDFException';\n  this.message = msg;\n }\n MissingPDFException.prototype = new Error();\n MissingPDFException.constructor = MissingPDFException;\n return MissingPDFException;\n}();\nvar UnexpectedResponseException = function UnexpectedResponseExceptionClosure() {\n function UnexpectedResponseException(msg, status) {\n  this.name = 'UnexpectedResponseException';\n  this.message = msg;\n  this.status = status;\n }\n UnexpectedResponseException.prototype = new Error();\n UnexpectedResponseException.constructor = UnexpectedResponseException;\n return UnexpectedResponseException;\n}();\nvar NotImplementedException = function NotImplementedExceptionClosure() {\n function NotImplementedException(msg) {\n  this.message = msg;\n }\n NotImplementedException.prototype = new Error();\n NotImplementedException.prototype.name = 'NotImplementedException';\n NotImplementedException.constructor = NotImplementedException;\n return NotImplementedException;\n}();\nvar MissingDataException = function MissingDataExceptionClosure() {\n function MissingDataException(begin, end) {\n  this.begin = begin;\n  this.end = end;\n  this.message = 'Missing data [' + begin + ', ' + end + ')';\n }\n MissingDataException.prototype = new Error();\n MissingDataException.prototype.name = 'MissingDataException';\n MissingDataException.constructor = MissingDataException;\n return MissingDataException;\n}();\nvar XRefParseException = function XRefParseExceptionClosure() {\n function XRefParseException(msg) {\n  this.message = msg;\n }\n XRefParseException.prototype = new Error();\n XRefParseException.prototype.name = 'XRefParseException';\n XRefParseException.constructor = XRefParseException;\n return XRefParseException;\n}();\nvar NullCharactersRegExp = /\\x00/g;\nfunction removeNullCharacters(str) {\n if (typeof str !== 'string') {\n  warn('The argument for removeNullCharacters must be a string.');\n  return str;\n }\n return str.replace(NullCharactersRegExp, '');\n}\nfunction bytesToString(bytes) {\n assert(bytes !== null && typeof bytes === 'object' && bytes.length !== undefined, 'Invalid argument for bytesToString');\n var length = bytes.length;\n var MAX_ARGUMENT_COUNT = 8192;\n if (length < MAX_ARGUMENT_COUNT) {\n  return String.fromCharCode.apply(null, bytes);\n }\n var strBuf = [];\n for (var i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n  var chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n  var chunk = bytes.subarray(i, chunkEnd);\n  strBuf.push(String.fromCharCode.apply(null, chunk));\n }\n return strBuf.join('');\n}\nfunction stringToBytes(str) {\n assert(typeof str === 'string', 'Invalid argument for stringToBytes');\n var length = str.length;\n var bytes = new Uint8Array(length);\n for (var i = 0; i < length; ++i) {\n  bytes[i] = str.charCodeAt(i) & 0xFF;\n }\n return bytes;\n}\nfunction arrayByteLength(arr) {\n if (arr.length !== undefined) {\n  return arr.length;\n }\n assert(arr.byteLength !== undefined);\n return arr.byteLength;\n}\nfunction arraysToBytes(arr) {\n if (arr.length === 1 && arr[0] instanceof Uint8Array) {\n  return arr[0];\n }\n var resultLength = 0;\n var i, ii = arr.length;\n var item, itemLength;\n for (i = 0; i < ii; i++) {\n  item = arr[i];\n  itemLength = arrayByteLength(item);\n  resultLength += itemLength;\n }\n var pos = 0;\n var data = new Uint8Array(resultLength);\n for (i = 0; i < ii; i++) {\n  item = arr[i];\n  if (!(item instanceof Uint8Array)) {\n   if (typeof item === 'string') {\n    item = stringToBytes(item);\n   } else {\n    item = new Uint8Array(item);\n   }\n  }\n  itemLength = item.byteLength;\n  data.set(item, pos);\n  pos += itemLength;\n }\n return data;\n}\nfunction string32(value) {\n return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n}\nfunction log2(x) {\n var n = 1, i = 0;\n while (x > n) {\n  n <<= 1;\n  i++;\n }\n return i;\n}\nfunction readInt8(data, start) {\n return data[start] << 24 >> 24;\n}\nfunction readUint16(data, offset) {\n return data[offset] << 8 | data[offset + 1];\n}\nfunction readUint32(data, offset) {\n return (data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3]) >>> 0;\n}\nfunction isLittleEndian() {\n var buffer8 = new Uint8Array(2);\n buffer8[0] = 1;\n var buffer16 = new Uint16Array(buffer8.buffer);\n return buffer16[0] === 1;\n}\nfunction isEvalSupported() {\n try {\n  new Function('');\n  return true;\n } catch (e) {\n  return false;\n }\n}\nvar Uint32ArrayView = function Uint32ArrayViewClosure() {\n function Uint32ArrayView(buffer, length) {\n  this.buffer = buffer;\n  this.byteLength = buffer.length;\n  this.length = length === undefined ? this.byteLength >> 2 : length;\n  ensureUint32ArrayViewProps(this.length);\n }\n Uint32ArrayView.prototype = Object.create(null);\n var uint32ArrayViewSetters = 0;\n function createUint32ArrayProp(index) {\n  return {\n   get: function () {\n    var buffer = this.buffer, offset = index << 2;\n    return (buffer[offset] | buffer[offset + 1] << 8 | buffer[offset + 2] << 16 | buffer[offset + 3] << 24) >>> 0;\n   },\n   set: function (value) {\n    var buffer = this.buffer, offset = index << 2;\n    buffer[offset] = value & 255;\n    buffer[offset + 1] = value >> 8 & 255;\n    buffer[offset + 2] = value >> 16 & 255;\n    buffer[offset + 3] = value >>> 24 & 255;\n   }\n  };\n }\n function ensureUint32ArrayViewProps(length) {\n  while (uint32ArrayViewSetters < length) {\n   Object.defineProperty(Uint32ArrayView.prototype, uint32ArrayViewSetters, createUint32ArrayProp(uint32ArrayViewSetters));\n   uint32ArrayViewSetters++;\n  }\n }\n return Uint32ArrayView;\n}();\nexports.Uint32ArrayView = Uint32ArrayView;\nvar IDENTITY_MATRIX = [\n 1,\n 0,\n 0,\n 1,\n 0,\n 0\n];\nvar Util = function UtilClosure() {\n function Util() {\n }\n var rgbBuf = [\n  'rgb(',\n  0,\n  ',',\n  0,\n  ',',\n  0,\n  ')'\n ];\n Util.makeCssRgb = function Util_makeCssRgb(r, g, b) {\n  rgbBuf[1] = r;\n  rgbBuf[3] = g;\n  rgbBuf[5] = b;\n  return rgbBuf.join('');\n };\n Util.transform = function Util_transform(m1, m2) {\n  return [\n   m1[0] * m2[0] + m1[2] * m2[1],\n   m1[1] * m2[0] + m1[3] * m2[1],\n   m1[0] * m2[2] + m1[2] * m2[3],\n   m1[1] * m2[2] + m1[3] * m2[3],\n   m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n   m1[1] * m2[4] + m1[3] * m2[5] + m1[5]\n  ];\n };\n Util.applyTransform = function Util_applyTransform(p, m) {\n  var xt = p[0] * m[0] + p[1] * m[2] + m[4];\n  var yt = p[0] * m[1] + p[1] * m[3] + m[5];\n  return [\n   xt,\n   yt\n  ];\n };\n Util.applyInverseTransform = function Util_applyInverseTransform(p, m) {\n  var d = m[0] * m[3] - m[1] * m[2];\n  var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n  var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n  return [\n   xt,\n   yt\n  ];\n };\n Util.getAxialAlignedBoundingBox = function Util_getAxialAlignedBoundingBox(r, m) {\n  var p1 = Util.applyTransform(r, m);\n  var p2 = Util.applyTransform(r.slice(2, 4), m);\n  var p3 = Util.applyTransform([\n   r[0],\n   r[3]\n  ], m);\n  var p4 = Util.applyTransform([\n   r[2],\n   r[1]\n  ], m);\n  return [\n   Math.min(p1[0], p2[0], p3[0], p4[0]),\n   Math.min(p1[1], p2[1], p3[1], p4[1]),\n   Math.max(p1[0], p2[0], p3[0], p4[0]),\n   Math.max(p1[1], p2[1], p3[1], p4[1])\n  ];\n };\n Util.inverseTransform = function Util_inverseTransform(m) {\n  var d = m[0] * m[3] - m[1] * m[2];\n  return [\n   m[3] / d,\n   -m[1] / d,\n   -m[2] / d,\n   m[0] / d,\n   (m[2] * m[5] - m[4] * m[3]) / d,\n   (m[4] * m[1] - m[5] * m[0]) / d\n  ];\n };\n Util.apply3dTransform = function Util_apply3dTransform(m, v) {\n  return [\n   m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n   m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n   m[6] * v[0] + m[7] * v[1] + m[8] * v[2]\n  ];\n };\n Util.singularValueDecompose2dScale = function Util_singularValueDecompose2dScale(m) {\n  var transpose = [\n   m[0],\n   m[2],\n   m[1],\n   m[3]\n  ];\n  var a = m[0] * transpose[0] + m[1] * transpose[2];\n  var b = m[0] * transpose[1] + m[1] * transpose[3];\n  var c = m[2] * transpose[0] + m[3] * transpose[2];\n  var d = m[2] * transpose[1] + m[3] * transpose[3];\n  var first = (a + d) / 2;\n  var second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n  var sx = first + second || 1;\n  var sy = first - second || 1;\n  return [\n   Math.sqrt(sx),\n   Math.sqrt(sy)\n  ];\n };\n Util.normalizeRect = function Util_normalizeRect(rect) {\n  var r = rect.slice(0);\n  if (rect[0] > rect[2]) {\n   r[0] = rect[2];\n   r[2] = rect[0];\n  }\n  if (rect[1] > rect[3]) {\n   r[1] = rect[3];\n   r[3] = rect[1];\n  }\n  return r;\n };\n Util.intersect = function Util_intersect(rect1, rect2) {\n  function compare(a, b) {\n   return a - b;\n  }\n  var orderedX = [\n    rect1[0],\n    rect1[2],\n    rect2[0],\n    rect2[2]\n   ].sort(compare), orderedY = [\n    rect1[1],\n    rect1[3],\n    rect2[1],\n    rect2[3]\n   ].sort(compare), result = [];\n  rect1 = Util.normalizeRect(rect1);\n  rect2 = Util.normalizeRect(rect2);\n  if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n   result[0] = orderedX[1];\n   result[2] = orderedX[2];\n  } else {\n   return false;\n  }\n  if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n   result[1] = orderedY[1];\n   result[3] = orderedY[2];\n  } else {\n   return false;\n  }\n  return result;\n };\n Util.sign = function Util_sign(num) {\n  return num < 0 ? -1 : 1;\n };\n var ROMAN_NUMBER_MAP = [\n  '',\n  'C',\n  'CC',\n  'CCC',\n  'CD',\n  'D',\n  'DC',\n  'DCC',\n  'DCCC',\n  'CM',\n  '',\n  'X',\n  'XX',\n  'XXX',\n  'XL',\n  'L',\n  'LX',\n  'LXX',\n  'LXXX',\n  'XC',\n  '',\n  'I',\n  'II',\n  'III',\n  'IV',\n  'V',\n  'VI',\n  'VII',\n  'VIII',\n  'IX'\n ];\n Util.toRoman = function Util_toRoman(number, lowerCase) {\n  assert(isInt(number) && number > 0, 'The number should be a positive integer.');\n  var pos, romanBuf = [];\n  while (number >= 1000) {\n   number -= 1000;\n   romanBuf.push('M');\n  }\n  pos = number / 100 | 0;\n  number %= 100;\n  romanBuf.push(ROMAN_NUMBER_MAP[pos]);\n  pos = number / 10 | 0;\n  number %= 10;\n  romanBuf.push(ROMAN_NUMBER_MAP[10 + pos]);\n  romanBuf.push(ROMAN_NUMBER_MAP[20 + number]);\n  var romanStr = romanBuf.join('');\n  return lowerCase ? romanStr.toLowerCase() : romanStr;\n };\n Util.appendToArray = function Util_appendToArray(arr1, arr2) {\n  Array.prototype.push.apply(arr1, arr2);\n };\n Util.prependToArray = function Util_prependToArray(arr1, arr2) {\n  Array.prototype.unshift.apply(arr1, arr2);\n };\n Util.extendObj = function extendObj(obj1, obj2) {\n  for (var key in obj2) {\n   obj1[key] = obj2[key];\n  }\n };\n Util.getInheritableProperty = function Util_getInheritableProperty(dict, name, getArray) {\n  while (dict && !dict.has(name)) {\n   dict = dict.get('Parent');\n  }\n  if (!dict) {\n   return null;\n  }\n  return getArray ? dict.getArray(name) : dict.get(name);\n };\n Util.inherit = function Util_inherit(sub, base, prototype) {\n  sub.prototype = Object.create(base.prototype);\n  sub.prototype.constructor = sub;\n  for (var prop in prototype) {\n   sub.prototype[prop] = prototype[prop];\n  }\n };\n Util.loadScript = function Util_loadScript(src, callback) {\n  var script = document.createElement('script');\n  var loaded = false;\n  script.setAttribute('src', src);\n  if (callback) {\n   script.onload = function () {\n    if (!loaded) {\n     callback();\n    }\n    loaded = true;\n   };\n  }\n  document.getElementsByTagName('head')[0].appendChild(script);\n };\n return Util;\n}();\nvar PageViewport = function PageViewportClosure() {\n function PageViewport(viewBox, scale, rotation, offsetX, offsetY, dontFlip) {\n  this.viewBox = viewBox;\n  this.scale = scale;\n  this.rotation = rotation;\n  this.offsetX = offsetX;\n  this.offsetY = offsetY;\n  var centerX = (viewBox[2] + viewBox[0]) / 2;\n  var centerY = (viewBox[3] + viewBox[1]) / 2;\n  var rotateA, rotateB, rotateC, rotateD;\n  rotation = rotation % 360;\n  rotation = rotation < 0 ? rotation + 360 : rotation;\n  switch (rotation) {\n  case 180:\n   rotateA = -1;\n   rotateB = 0;\n   rotateC = 0;\n   rotateD = 1;\n   break;\n  case 90:\n   rotateA = 0;\n   rotateB = 1;\n   rotateC = 1;\n   rotateD = 0;\n   break;\n  case 270:\n   rotateA = 0;\n   rotateB = -1;\n   rotateC = -1;\n   rotateD = 0;\n   break;\n  default:\n   rotateA = 1;\n   rotateB = 0;\n   rotateC = 0;\n   rotateD = -1;\n   break;\n  }\n  if (dontFlip) {\n   rotateC = -rotateC;\n   rotateD = -rotateD;\n  }\n  var offsetCanvasX, offsetCanvasY;\n  var width, height;\n  if (rotateA === 0) {\n   offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n   offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n   width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n   height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n  } else {\n   offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n   offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n   width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n   height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n  }\n  this.transform = [\n   rotateA * scale,\n   rotateB * scale,\n   rotateC * scale,\n   rotateD * scale,\n   offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n   offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY\n  ];\n  this.width = width;\n  this.height = height;\n  this.fontScale = scale;\n }\n PageViewport.prototype = {\n  clone: function PageViewPort_clone(args) {\n   args = args || {};\n   var scale = 'scale' in args ? args.scale : this.scale;\n   var rotation = 'rotation' in args ? args.rotation : this.rotation;\n   return new PageViewport(this.viewBox.slice(), scale, rotation, this.offsetX, this.offsetY, args.dontFlip);\n  },\n  convertToViewportPoint: function PageViewport_convertToViewportPoint(x, y) {\n   return Util.applyTransform([\n    x,\n    y\n   ], this.transform);\n  },\n  convertToViewportRectangle: function PageViewport_convertToViewportRectangle(rect) {\n   var tl = Util.applyTransform([\n    rect[0],\n    rect[1]\n   ], this.transform);\n   var br = Util.applyTransform([\n    rect[2],\n    rect[3]\n   ], this.transform);\n   return [\n    tl[0],\n    tl[1],\n    br[0],\n    br[1]\n   ];\n  },\n  convertToPdfPoint: function PageViewport_convertToPdfPoint(x, y) {\n   return Util.applyInverseTransform([\n    x,\n    y\n   ], this.transform);\n  }\n };\n return PageViewport;\n}();\nvar PDFStringTranslateTable = [\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0x2D8,\n 0x2C7,\n 0x2C6,\n 0x2D9,\n 0x2DD,\n 0x2DB,\n 0x2DA,\n 0x2DC,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0x2022,\n 0x2020,\n 0x2021,\n 0x2026,\n 0x2014,\n 0x2013,\n 0x192,\n 0x2044,\n 0x2039,\n 0x203A,\n 0x2212,\n 0x2030,\n 0x201E,\n 0x201C,\n 0x201D,\n 0x2018,\n 0x2019,\n 0x201A,\n 0x2122,\n 0xFB01,\n 0xFB02,\n 0x141,\n 0x152,\n 0x160,\n 0x178,\n 0x17D,\n 0x131,\n 0x142,\n 0x153,\n 0x161,\n 0x17E,\n 0,\n 0x20AC\n];\nfunction stringToPDFString(str) {\n var i, n = str.length, strBuf = [];\n if (str[0] === '\\xFE' && str[1] === '\\xFF') {\n  for (i = 2; i < n; i += 2) {\n   strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\n  }\n } else {\n  for (i = 0; i < n; ++i) {\n   var code = PDFStringTranslateTable[str.charCodeAt(i)];\n   strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n  }\n }\n return strBuf.join('');\n}\nfunction stringToUTF8String(str) {\n return decodeURIComponent(escape(str));\n}\nfunction utf8StringToString(str) {\n return unescape(encodeURIComponent(str));\n}\nfunction isEmptyObj(obj) {\n for (var key in obj) {\n  return false;\n }\n return true;\n}\nfunction isBool(v) {\n return typeof v === 'boolean';\n}\nfunction isInt(v) {\n return typeof v === 'number' && (v | 0) === v;\n}\nfunction isNum(v) {\n return typeof v === 'number';\n}\nfunction isString(v) {\n return typeof v === 'string';\n}\nfunction isArray(v) {\n return v instanceof Array;\n}\nfunction isArrayBuffer(v) {\n return typeof v === 'object' && v !== null && v.byteLength !== undefined;\n}\nfunction isSpace(ch) {\n return ch === 0x20 || ch === 0x09 || ch === 0x0D || ch === 0x0A;\n}\nfunction isNodeJS() {\n if (typeof __pdfjsdev_webpack__ === 'undefined') {\n  return typeof process === 'object' && process + '' === '[object process]';\n }\n return false;\n}\nfunction createPromiseCapability() {\n var capability = {};\n capability.promise = new Promise(function (resolve, reject) {\n  capability.resolve = resolve;\n  capability.reject = reject;\n });\n return capability;\n}\nvar StatTimer = function StatTimerClosure() {\n function rpad(str, pad, length) {\n  while (str.length < length) {\n   str += pad;\n  }\n  return str;\n }\n function StatTimer() {\n  this.started = Object.create(null);\n  this.times = [];\n  this.enabled = true;\n }\n StatTimer.prototype = {\n  time: function StatTimer_time(name) {\n   if (!this.enabled) {\n    return;\n   }\n   if (name in this.started) {\n    warn('Timer is already running for ' + name);\n   }\n   this.started[name] = Date.now();\n  },\n  timeEnd: function StatTimer_timeEnd(name) {\n   if (!this.enabled) {\n    return;\n   }\n   if (!(name in this.started)) {\n    warn('Timer has not been started for ' + name);\n   }\n   this.times.push({\n    'name': name,\n    'start': this.started[name],\n    'end': Date.now()\n   });\n   delete this.started[name];\n  },\n  toString: function StatTimer_toString() {\n   var i, ii;\n   var times = this.times;\n   var out = '';\n   var longest = 0;\n   for (i = 0, ii = times.length; i < ii; ++i) {\n    var name = times[i]['name'];\n    if (name.length > longest) {\n     longest = name.length;\n    }\n   }\n   for (i = 0, ii = times.length; i < ii; ++i) {\n    var span = times[i];\n    var duration = span.end - span.start;\n    out += rpad(span['name'], ' ', longest) + ' ' + duration + 'ms\\n';\n   }\n   return out;\n  }\n };\n return StatTimer;\n}();\nvar createBlob = function createBlob(data, contentType) {\n if (typeof Blob !== 'undefined') {\n  return new Blob([data], { type: contentType });\n }\n warn('The \"Blob\" constructor is not supported.');\n};\nvar createObjectURL = function createObjectURLClosure() {\n var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n return function createObjectURL(data, contentType, forceDataSchema) {\n  if (!forceDataSchema && typeof URL !== 'undefined' && URL.createObjectURL) {\n   var blob = createBlob(data, contentType);\n   return URL.createObjectURL(blob);\n  }\n  var buffer = 'data:' + contentType + ';base64,';\n  for (var i = 0, ii = data.length; i < ii; i += 3) {\n   var b1 = data[i] & 0xFF;\n   var b2 = data[i + 1] & 0xFF;\n   var b3 = data[i + 2] & 0xFF;\n   var d1 = b1 >> 2, d2 = (b1 & 3) << 4 | b2 >> 4;\n   var d3 = i + 1 < ii ? (b2 & 0xF) << 2 | b3 >> 6 : 64;\n   var d4 = i + 2 < ii ? b3 & 0x3F : 64;\n   buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n  }\n  return buffer;\n };\n}();\nfunction MessageHandler(sourceName, targetName, comObj) {\n this.sourceName = sourceName;\n this.targetName = targetName;\n this.comObj = comObj;\n this.callbackIndex = 1;\n this.postMessageTransfers = true;\n var callbacksCapabilities = this.callbacksCapabilities = Object.create(null);\n var ah = this.actionHandler = Object.create(null);\n this._onComObjOnMessage = function messageHandlerComObjOnMessage(event) {\n  var data = event.data;\n  if (data.targetName !== this.sourceName) {\n   return;\n  }\n  if (data.isReply) {\n   var callbackId = data.callbackId;\n   if (data.callbackId in callbacksCapabilities) {\n    var callback = callbacksCapabilities[callbackId];\n    delete callbacksCapabilities[callbackId];\n    if ('error' in data) {\n     callback.reject(data.error);\n    } else {\n     callback.resolve(data.data);\n    }\n   } else {\n    error('Cannot resolve callback ' + callbackId);\n   }\n  } else if (data.action in ah) {\n   var action = ah[data.action];\n   if (data.callbackId) {\n    var sourceName = this.sourceName;\n    var targetName = data.sourceName;\n    Promise.resolve().then(function () {\n     return action[0].call(action[1], data.data);\n    }).then(function (result) {\n     comObj.postMessage({\n      sourceName: sourceName,\n      targetName: targetName,\n      isReply: true,\n      callbackId: data.callbackId,\n      data: result\n     });\n    }, function (reason) {\n     if (reason instanceof Error) {\n      reason = reason + '';\n     }\n     comObj.postMessage({\n      sourceName: sourceName,\n      targetName: targetName,\n      isReply: true,\n      callbackId: data.callbackId,\n      error: reason\n     });\n    });\n   } else {\n    action[0].call(action[1], data.data);\n   }\n  } else {\n   error('Unknown action from worker: ' + data.action);\n  }\n }.bind(this);\n comObj.addEventListener('message', this._onComObjOnMessage);\n}\nMessageHandler.prototype = {\n on: function messageHandlerOn(actionName, handler, scope) {\n  var ah = this.actionHandler;\n  if (ah[actionName]) {\n   error('There is already an actionName called \"' + actionName + '\"');\n  }\n  ah[actionName] = [\n   handler,\n   scope\n  ];\n },\n send: function messageHandlerSend(actionName, data, transfers) {\n  var message = {\n   sourceName: this.sourceName,\n   targetName: this.targetName,\n   action: actionName,\n   data: data\n  };\n  this.postMessage(message, transfers);\n },\n sendWithPromise: function messageHandlerSendWithPromise(actionName, data, transfers) {\n  var callbackId = this.callbackIndex++;\n  var message = {\n   sourceName: this.sourceName,\n   targetName: this.targetName,\n   action: actionName,\n   data: data,\n   callbackId: callbackId\n  };\n  var capability = createPromiseCapability();\n  this.callbacksCapabilities[callbackId] = capability;\n  try {\n   this.postMessage(message, transfers);\n  } catch (e) {\n   capability.reject(e);\n  }\n  return capability.promise;\n },\n postMessage: function (message, transfers) {\n  if (transfers && this.postMessageTransfers) {\n   this.comObj.postMessage(message, transfers);\n  } else {\n   this.comObj.postMessage(message);\n  }\n },\n destroy: function () {\n  this.comObj.removeEventListener('message', this._onComObjOnMessage);\n }\n};\nfunction loadJpegStream(id, imageUrl, objs) {\n var img = new Image();\n img.onload = function loadJpegStream_onloadClosure() {\n  objs.resolve(id, img);\n };\n img.onerror = function loadJpegStream_onerrorClosure() {\n  objs.resolve(id, null);\n  warn('Error during JPEG image loading');\n };\n img.src = imageUrl;\n}\nexports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\nexports.IDENTITY_MATRIX = IDENTITY_MATRIX;\nexports.OPS = OPS;\nexports.VERBOSITY_LEVELS = VERBOSITY_LEVELS;\nexports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\nexports.AnnotationBorderStyleType = AnnotationBorderStyleType;\nexports.AnnotationFieldFlag = AnnotationFieldFlag;\nexports.AnnotationFlag = AnnotationFlag;\nexports.AnnotationType = AnnotationType;\nexports.FontType = FontType;\nexports.ImageKind = ImageKind;\nexports.CMapCompressionType = CMapCompressionType;\nexports.InvalidPDFException = InvalidPDFException;\nexports.MessageHandler = MessageHandler;\nexports.MissingDataException = MissingDataException;\nexports.MissingPDFException = MissingPDFException;\nexports.NotImplementedException = NotImplementedException;\nexports.PageViewport = PageViewport;\nexports.PasswordException = PasswordException;\nexports.PasswordResponses = PasswordResponses;\nexports.StatTimer = StatTimer;\nexports.StreamType = StreamType;\nexports.TextRenderingMode = TextRenderingMode;\nexports.UnexpectedResponseException = UnexpectedResponseException;\nexports.UnknownErrorException = UnknownErrorException;\nexports.Util = Util;\nexports.XRefParseException = XRefParseException;\nexports.arrayByteLength = arrayByteLength;\nexports.arraysToBytes = arraysToBytes;\nexports.assert = assert;\nexports.bytesToString = bytesToString;\nexports.createBlob = createBlob;\nexports.createPromiseCapability = createPromiseCapability;\nexports.createObjectURL = createObjectURL;\nexports.deprecated = deprecated;\nexports.error = error;\nexports.getLookupTableFactory = getLookupTableFactory;\nexports.getVerbosityLevel = getVerbosityLevel;\nexports.globalScope = globalScope;\nexports.info = info;\nexports.isArray = isArray;\nexports.isArrayBuffer = isArrayBuffer;\nexports.isBool = isBool;\nexports.isEmptyObj = isEmptyObj;\nexports.isInt = isInt;\nexports.isNum = isNum;\nexports.isString = isString;\nexports.isSpace = isSpace;\nexports.isNodeJS = isNodeJS;\nexports.isSameOrigin = isSameOrigin;\nexports.createValidAbsoluteUrl = createValidAbsoluteUrl;\nexports.isLittleEndian = isLittleEndian;\nexports.isEvalSupported = isEvalSupported;\nexports.loadJpegStream = loadJpegStream;\nexports.log2 = log2;\nexports.readInt8 = readInt8;\nexports.readUint16 = readUint16;\nexports.readUint32 = readUint32;\nexports.removeNullCharacters = removeNullCharacters;\nexports.setVerbosityLevel = setVerbosityLevel;\nexports.shadow = shadow;\nexports.string32 = string32;\nexports.stringToBytes = stringToBytes;\nexports.stringToPDFString = stringToPDFString;\nexports.stringToUTF8String = stringToUTF8String;\nexports.utf8StringToString = utf8StringToString;\nexports.warn = warn;\n/* WEBPACK VAR INJECTION */}.call(exports, __w_pdfjs_require__(9)))\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar isArray = sharedUtil.isArray;\nvar EOF = {};\nvar Name = function NameClosure() {\n function Name(name) {\n  this.name = name;\n }\n Name.prototype = {};\n var nameCache = Object.create(null);\n Name.get = function Name_get(name) {\n  var nameValue = nameCache[name];\n  return nameValue ? nameValue : nameCache[name] = new Name(name);\n };\n return Name;\n}();\nvar Cmd = function CmdClosure() {\n function Cmd(cmd) {\n  this.cmd = cmd;\n }\n Cmd.prototype = {};\n var cmdCache = Object.create(null);\n Cmd.get = function Cmd_get(cmd) {\n  var cmdValue = cmdCache[cmd];\n  return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\n };\n return Cmd;\n}();\nvar Dict = function DictClosure() {\n var nonSerializable = function nonSerializableClosure() {\n  return nonSerializable;\n };\n function Dict(xref) {\n  this.map = Object.create(null);\n  this.xref = xref;\n  this.objId = null;\n  this.suppressEncryption = false;\n  this.__nonSerializable__ = nonSerializable;\n }\n Dict.prototype = {\n  assignXref: function Dict_assignXref(newXref) {\n   this.xref = newXref;\n  },\n  get: function Dict_get(key1, key2, key3) {\n   var value;\n   var xref = this.xref, suppressEncryption = this.suppressEncryption;\n   if (typeof (value = this.map[key1]) !== 'undefined' || key1 in this.map || typeof key2 === 'undefined') {\n    return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n   }\n   if (typeof (value = this.map[key2]) !== 'undefined' || key2 in this.map || typeof key3 === 'undefined') {\n    return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n   }\n   value = this.map[key3] || null;\n   return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n  },\n  getAsync: function Dict_getAsync(key1, key2, key3) {\n   var value;\n   var xref = this.xref, suppressEncryption = this.suppressEncryption;\n   if (typeof (value = this.map[key1]) !== 'undefined' || key1 in this.map || typeof key2 === 'undefined') {\n    if (xref) {\n     return xref.fetchIfRefAsync(value, suppressEncryption);\n    }\n    return Promise.resolve(value);\n   }\n   if (typeof (value = this.map[key2]) !== 'undefined' || key2 in this.map || typeof key3 === 'undefined') {\n    if (xref) {\n     return xref.fetchIfRefAsync(value, suppressEncryption);\n    }\n    return Promise.resolve(value);\n   }\n   value = this.map[key3] || null;\n   if (xref) {\n    return xref.fetchIfRefAsync(value, suppressEncryption);\n   }\n   return Promise.resolve(value);\n  },\n  getArray: function Dict_getArray(key1, key2, key3) {\n   var value = this.get(key1, key2, key3);\n   var xref = this.xref, suppressEncryption = this.suppressEncryption;\n   if (!isArray(value) || !xref) {\n    return value;\n   }\n   value = value.slice();\n   for (var i = 0, ii = value.length; i < ii; i++) {\n    if (!isRef(value[i])) {\n     continue;\n    }\n    value[i] = xref.fetch(value[i], suppressEncryption);\n   }\n   return value;\n  },\n  getRaw: function Dict_getRaw(key) {\n   return this.map[key];\n  },\n  getKeys: function Dict_getKeys() {\n   return Object.keys(this.map);\n  },\n  set: function Dict_set(key, value) {\n   this.map[key] = value;\n  },\n  has: function Dict_has(key) {\n   return key in this.map;\n  },\n  forEach: function Dict_forEach(callback) {\n   for (var key in this.map) {\n    callback(key, this.get(key));\n   }\n  }\n };\n Dict.empty = new Dict(null);\n Dict.merge = function Dict_merge(xref, dictArray) {\n  var mergedDict = new Dict(xref);\n  for (var i = 0, ii = dictArray.length; i < ii; i++) {\n   var dict = dictArray[i];\n   if (!isDict(dict)) {\n    continue;\n   }\n   for (var keyName in dict.map) {\n    if (mergedDict.map[keyName]) {\n     continue;\n    }\n    mergedDict.map[keyName] = dict.map[keyName];\n   }\n  }\n  return mergedDict;\n };\n return Dict;\n}();\nvar Ref = function RefClosure() {\n function Ref(num, gen) {\n  this.num = num;\n  this.gen = gen;\n }\n Ref.prototype = {\n  toString: function Ref_toString() {\n   var str = this.num + 'R';\n   if (this.gen !== 0) {\n    str += this.gen;\n   }\n   return str;\n  }\n };\n return Ref;\n}();\nvar RefSet = function RefSetClosure() {\n function RefSet() {\n  this.dict = Object.create(null);\n }\n RefSet.prototype = {\n  has: function RefSet_has(ref) {\n   return ref.toString() in this.dict;\n  },\n  put: function RefSet_put(ref) {\n   this.dict[ref.toString()] = true;\n  },\n  remove: function RefSet_remove(ref) {\n   delete this.dict[ref.toString()];\n  }\n };\n return RefSet;\n}();\nvar RefSetCache = function RefSetCacheClosure() {\n function RefSetCache() {\n  this.dict = Object.create(null);\n }\n RefSetCache.prototype = {\n  get: function RefSetCache_get(ref) {\n   return this.dict[ref.toString()];\n  },\n  has: function RefSetCache_has(ref) {\n   return ref.toString() in this.dict;\n  },\n  put: function RefSetCache_put(ref, obj) {\n   this.dict[ref.toString()] = obj;\n  },\n  putAlias: function RefSetCache_putAlias(ref, aliasRef) {\n   this.dict[ref.toString()] = this.get(aliasRef);\n  },\n  forEach: function RefSetCache_forEach(fn, thisArg) {\n   for (var i in this.dict) {\n    fn.call(thisArg, this.dict[i]);\n   }\n  },\n  clear: function RefSetCache_clear() {\n   this.dict = Object.create(null);\n  }\n };\n return RefSetCache;\n}();\nfunction isEOF(v) {\n return v === EOF;\n}\nfunction isName(v, name) {\n return v instanceof Name && (name === undefined || v.name === name);\n}\nfunction isCmd(v, cmd) {\n return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n}\nfunction isDict(v, type) {\n return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\n}\nfunction isRef(v) {\n return v instanceof Ref;\n}\nfunction isRefsEqual(v1, v2) {\n return v1.num === v2.num && v1.gen === v2.gen;\n}\nfunction isStream(v) {\n return typeof v === 'object' && v !== null && v.getBytes !== undefined;\n}\nexports.EOF = EOF;\nexports.Cmd = Cmd;\nexports.Dict = Dict;\nexports.Name = Name;\nexports.Ref = Ref;\nexports.RefSet = RefSet;\nexports.RefSetCache = RefSetCache;\nexports.isEOF = isEOF;\nexports.isCmd = isCmd;\nexports.isDict = isDict;\nexports.isName = isName;\nexports.isRef = isRef;\nexports.isRefsEqual = isRefsEqual;\nexports.isStream = isStream;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar coreJbig2 = __w_pdfjs_require__(28);\nvar coreJpg = __w_pdfjs_require__(29);\nvar coreJpx = __w_pdfjs_require__(15);\nvar Util = sharedUtil.Util;\nvar error = sharedUtil.error;\nvar info = sharedUtil.info;\nvar isInt = sharedUtil.isInt;\nvar isArray = sharedUtil.isArray;\nvar createObjectURL = sharedUtil.createObjectURL;\nvar shadow = sharedUtil.shadow;\nvar isSpace = sharedUtil.isSpace;\nvar Dict = corePrimitives.Dict;\nvar isDict = corePrimitives.isDict;\nvar isStream = corePrimitives.isStream;\nvar Jbig2Image = coreJbig2.Jbig2Image;\nvar JpegImage = coreJpg.JpegImage;\nvar JpxImage = coreJpx.JpxImage;\nvar Stream = function StreamClosure() {\n function Stream(arrayBuffer, start, length, dict) {\n  this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n  this.start = start || 0;\n  this.pos = this.start;\n  this.end = start + length || this.bytes.length;\n  this.dict = dict;\n }\n Stream.prototype = {\n  get length() {\n   return this.end - this.start;\n  },\n  get isEmpty() {\n   return this.length === 0;\n  },\n  getByte: function Stream_getByte() {\n   if (this.pos >= this.end) {\n    return -1;\n   }\n   return this.bytes[this.pos++];\n  },\n  getUint16: function Stream_getUint16() {\n   var b0 = this.getByte();\n   var b1 = this.getByte();\n   if (b0 === -1 || b1 === -1) {\n    return -1;\n   }\n   return (b0 << 8) + b1;\n  },\n  getInt32: function Stream_getInt32() {\n   var b0 = this.getByte();\n   var b1 = this.getByte();\n   var b2 = this.getByte();\n   var b3 = this.getByte();\n   return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  },\n  getBytes: function Stream_getBytes(length) {\n   var bytes = this.bytes;\n   var pos = this.pos;\n   var strEnd = this.end;\n   if (!length) {\n    return bytes.subarray(pos, strEnd);\n   }\n   var end = pos + length;\n   if (end > strEnd) {\n    end = strEnd;\n   }\n   this.pos = end;\n   return bytes.subarray(pos, end);\n  },\n  peekByte: function Stream_peekByte() {\n   var peekedByte = this.getByte();\n   this.pos--;\n   return peekedByte;\n  },\n  peekBytes: function Stream_peekBytes(length) {\n   var bytes = this.getBytes(length);\n   this.pos -= bytes.length;\n   return bytes;\n  },\n  skip: function Stream_skip(n) {\n   if (!n) {\n    n = 1;\n   }\n   this.pos += n;\n  },\n  reset: function Stream_reset() {\n   this.pos = this.start;\n  },\n  moveStart: function Stream_moveStart() {\n   this.start = this.pos;\n  },\n  makeSubStream: function Stream_makeSubStream(start, length, dict) {\n   return new Stream(this.bytes.buffer, start, length, dict);\n  }\n };\n return Stream;\n}();\nvar StringStream = function StringStreamClosure() {\n function StringStream(str) {\n  var length = str.length;\n  var bytes = new Uint8Array(length);\n  for (var n = 0; n < length; ++n) {\n   bytes[n] = str.charCodeAt(n);\n  }\n  Stream.call(this, bytes);\n }\n StringStream.prototype = Stream.prototype;\n return StringStream;\n}();\nvar DecodeStream = function DecodeStreamClosure() {\n var emptyBuffer = new Uint8Array(0);\n function DecodeStream(maybeMinBufferLength) {\n  this.pos = 0;\n  this.bufferLength = 0;\n  this.eof = false;\n  this.buffer = emptyBuffer;\n  this.minBufferLength = 512;\n  if (maybeMinBufferLength) {\n   while (this.minBufferLength < maybeMinBufferLength) {\n    this.minBufferLength *= 2;\n   }\n  }\n }\n DecodeStream.prototype = {\n  get isEmpty() {\n   while (!this.eof && this.bufferLength === 0) {\n    this.readBlock();\n   }\n   return this.bufferLength === 0;\n  },\n  ensureBuffer: function DecodeStream_ensureBuffer(requested) {\n   var buffer = this.buffer;\n   if (requested <= buffer.byteLength) {\n    return buffer;\n   }\n   var size = this.minBufferLength;\n   while (size < requested) {\n    size *= 2;\n   }\n   var buffer2 = new Uint8Array(size);\n   buffer2.set(buffer);\n   return this.buffer = buffer2;\n  },\n  getByte: function DecodeStream_getByte() {\n   var pos = this.pos;\n   while (this.bufferLength <= pos) {\n    if (this.eof) {\n     return -1;\n    }\n    this.readBlock();\n   }\n   return this.buffer[this.pos++];\n  },\n  getUint16: function DecodeStream_getUint16() {\n   var b0 = this.getByte();\n   var b1 = this.getByte();\n   if (b0 === -1 || b1 === -1) {\n    return -1;\n   }\n   return (b0 << 8) + b1;\n  },\n  getInt32: function DecodeStream_getInt32() {\n   var b0 = this.getByte();\n   var b1 = this.getByte();\n   var b2 = this.getByte();\n   var b3 = this.getByte();\n   return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  },\n  getBytes: function DecodeStream_getBytes(length) {\n   var end, pos = this.pos;\n   if (length) {\n    this.ensureBuffer(pos + length);\n    end = pos + length;\n    while (!this.eof && this.bufferLength < end) {\n     this.readBlock();\n    }\n    var bufEnd = this.bufferLength;\n    if (end > bufEnd) {\n     end = bufEnd;\n    }\n   } else {\n    while (!this.eof) {\n     this.readBlock();\n    }\n    end = this.bufferLength;\n   }\n   this.pos = end;\n   return this.buffer.subarray(pos, end);\n  },\n  peekByte: function DecodeStream_peekByte() {\n   var peekedByte = this.getByte();\n   this.pos--;\n   return peekedByte;\n  },\n  peekBytes: function DecodeStream_peekBytes(length) {\n   var bytes = this.getBytes(length);\n   this.pos -= bytes.length;\n   return bytes;\n  },\n  makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\n   var end = start + length;\n   while (this.bufferLength <= end && !this.eof) {\n    this.readBlock();\n   }\n   return new Stream(this.buffer, start, length, dict);\n  },\n  skip: function DecodeStream_skip(n) {\n   if (!n) {\n    n = 1;\n   }\n   this.pos += n;\n  },\n  reset: function DecodeStream_reset() {\n   this.pos = 0;\n  },\n  getBaseStreams: function DecodeStream_getBaseStreams() {\n   if (this.str && this.str.getBaseStreams) {\n    return this.str.getBaseStreams();\n   }\n   return [];\n  }\n };\n return DecodeStream;\n}();\nvar StreamsSequenceStream = function StreamsSequenceStreamClosure() {\n function StreamsSequenceStream(streams) {\n  this.streams = streams;\n  DecodeStream.call(this, null);\n }\n StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\n StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\n  var streams = this.streams;\n  if (streams.length === 0) {\n   this.eof = true;\n   return;\n  }\n  var stream = streams.shift();\n  var chunk = stream.getBytes();\n  var bufferLength = this.bufferLength;\n  var newLength = bufferLength + chunk.length;\n  var buffer = this.ensureBuffer(newLength);\n  buffer.set(chunk, bufferLength);\n  this.bufferLength = newLength;\n };\n StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\n  var baseStreams = [];\n  for (var i = 0, ii = this.streams.length; i < ii; i++) {\n   var stream = this.streams[i];\n   if (stream.getBaseStreams) {\n    Util.appendToArray(baseStreams, stream.getBaseStreams());\n   }\n  }\n  return baseStreams;\n };\n return StreamsSequenceStream;\n}();\nvar FlateStream = function FlateStreamClosure() {\n var codeLenCodeMap = new Int32Array([\n  16,\n  17,\n  18,\n  0,\n  8,\n  7,\n  9,\n  6,\n  10,\n  5,\n  11,\n  4,\n  12,\n  3,\n  13,\n  2,\n  14,\n  1,\n  15\n ]);\n var lengthDecode = new Int32Array([\n  0x00003,\n  0x00004,\n  0x00005,\n  0x00006,\n  0x00007,\n  0x00008,\n  0x00009,\n  0x0000a,\n  0x1000b,\n  0x1000d,\n  0x1000f,\n  0x10011,\n  0x20013,\n  0x20017,\n  0x2001b,\n  0x2001f,\n  0x30023,\n  0x3002b,\n  0x30033,\n  0x3003b,\n  0x40043,\n  0x40053,\n  0x40063,\n  0x40073,\n  0x50083,\n  0x500a3,\n  0x500c3,\n  0x500e3,\n  0x00102,\n  0x00102,\n  0x00102\n ]);\n var distDecode = new Int32Array([\n  0x00001,\n  0x00002,\n  0x00003,\n  0x00004,\n  0x10005,\n  0x10007,\n  0x20009,\n  0x2000d,\n  0x30011,\n  0x30019,\n  0x40021,\n  0x40031,\n  0x50041,\n  0x50061,\n  0x60081,\n  0x600c1,\n  0x70101,\n  0x70181,\n  0x80201,\n  0x80301,\n  0x90401,\n  0x90601,\n  0xa0801,\n  0xa0c01,\n  0xb1001,\n  0xb1801,\n  0xc2001,\n  0xc3001,\n  0xd4001,\n  0xd6001\n ]);\n var fixedLitCodeTab = [\n  new Int32Array([\n   0x70100,\n   0x80050,\n   0x80010,\n   0x80118,\n   0x70110,\n   0x80070,\n   0x80030,\n   0x900c0,\n   0x70108,\n   0x80060,\n   0x80020,\n   0x900a0,\n   0x80000,\n   0x80080,\n   0x80040,\n   0x900e0,\n   0x70104,\n   0x80058,\n   0x80018,\n   0x90090,\n   0x70114,\n   0x80078,\n   0x80038,\n   0x900d0,\n   0x7010c,\n   0x80068,\n   0x80028,\n   0x900b0,\n   0x80008,\n   0x80088,\n   0x80048,\n   0x900f0,\n   0x70102,\n   0x80054,\n   0x80014,\n   0x8011c,\n   0x70112,\n   0x80074,\n   0x80034,\n   0x900c8,\n   0x7010a,\n   0x80064,\n   0x80024,\n   0x900a8,\n   0x80004,\n   0x80084,\n   0x80044,\n   0x900e8,\n   0x70106,\n   0x8005c,\n   0x8001c,\n   0x90098,\n   0x70116,\n   0x8007c,\n   0x8003c,\n   0x900d8,\n   0x7010e,\n   0x8006c,\n   0x8002c,\n   0x900b8,\n   0x8000c,\n   0x8008c,\n   0x8004c,\n   0x900f8,\n   0x70101,\n   0x80052,\n   0x80012,\n   0x8011a,\n   0x70111,\n   0x80072,\n   0x80032,\n   0x900c4,\n   0x70109,\n   0x80062,\n   0x80022,\n   0x900a4,\n   0x80002,\n   0x80082,\n   0x80042,\n   0x900e4,\n   0x70105,\n   0x8005a,\n   0x8001a,\n   0x90094,\n   0x70115,\n   0x8007a,\n   0x8003a,\n   0x900d4,\n   0x7010d,\n   0x8006a,\n   0x8002a,\n   0x900b4,\n   0x8000a,\n   0x8008a,\n   0x8004a,\n   0x900f4,\n   0x70103,\n   0x80056,\n   0x80016,\n   0x8011e,\n   0x70113,\n   0x80076,\n   0x80036,\n   0x900cc,\n   0x7010b,\n   0x80066,\n   0x80026,\n   0x900ac,\n   0x80006,\n   0x80086,\n   0x80046,\n   0x900ec,\n   0x70107,\n   0x8005e,\n   0x8001e,\n   0x9009c,\n   0x70117,\n   0x8007e,\n   0x8003e,\n   0x900dc,\n   0x7010f,\n   0x8006e,\n   0x8002e,\n   0x900bc,\n   0x8000e,\n   0x8008e,\n   0x8004e,\n   0x900fc,\n   0x70100,\n   0x80051,\n   0x80011,\n   0x80119,\n   0x70110,\n   0x80071,\n   0x80031,\n   0x900c2,\n   0x70108,\n   0x80061,\n   0x80021,\n   0x900a2,\n   0x80001,\n   0x80081,\n   0x80041,\n   0x900e2,\n   0x70104,\n   0x80059,\n   0x80019,\n   0x90092,\n   0x70114,\n   0x80079,\n   0x80039,\n   0x900d2,\n   0x7010c,\n   0x80069,\n   0x80029,\n   0x900b2,\n   0x80009,\n   0x80089,\n   0x80049,\n   0x900f2,\n   0x70102,\n   0x80055,\n   0x80015,\n   0x8011d,\n   0x70112,\n   0x80075,\n   0x80035,\n   0x900ca,\n   0x7010a,\n   0x80065,\n   0x80025,\n   0x900aa,\n   0x80005,\n   0x80085,\n   0x80045,\n   0x900ea,\n   0x70106,\n   0x8005d,\n   0x8001d,\n   0x9009a,\n   0x70116,\n   0x8007d,\n   0x8003d,\n   0x900da,\n   0x7010e,\n   0x8006d,\n   0x8002d,\n   0x900ba,\n   0x8000d,\n   0x8008d,\n   0x8004d,\n   0x900fa,\n   0x70101,\n   0x80053,\n   0x80013,\n   0x8011b,\n   0x70111,\n   0x80073,\n   0x80033,\n   0x900c6,\n   0x70109,\n   0x80063,\n   0x80023,\n   0x900a6,\n   0x80003,\n   0x80083,\n   0x80043,\n   0x900e6,\n   0x70105,\n   0x8005b,\n   0x8001b,\n   0x90096,\n   0x70115,\n   0x8007b,\n   0x8003b,\n   0x900d6,\n   0x7010d,\n   0x8006b,\n   0x8002b,\n   0x900b6,\n   0x8000b,\n   0x8008b,\n   0x8004b,\n   0x900f6,\n   0x70103,\n   0x80057,\n   0x80017,\n   0x8011f,\n   0x70113,\n   0x80077,\n   0x80037,\n   0x900ce,\n   0x7010b,\n   0x80067,\n   0x80027,\n   0x900ae,\n   0x80007,\n   0x80087,\n   0x80047,\n   0x900ee,\n   0x70107,\n   0x8005f,\n   0x8001f,\n   0x9009e,\n   0x70117,\n   0x8007f,\n   0x8003f,\n   0x900de,\n   0x7010f,\n   0x8006f,\n   0x8002f,\n   0x900be,\n   0x8000f,\n   0x8008f,\n   0x8004f,\n   0x900fe,\n   0x70100,\n   0x80050,\n   0x80010,\n   0x80118,\n   0x70110,\n   0x80070,\n   0x80030,\n   0x900c1,\n   0x70108,\n   0x80060,\n   0x80020,\n   0x900a1,\n   0x80000,\n   0x80080,\n   0x80040,\n   0x900e1,\n   0x70104,\n   0x80058,\n   0x80018,\n   0x90091,\n   0x70114,\n   0x80078,\n   0x80038,\n   0x900d1,\n   0x7010c,\n   0x80068,\n   0x80028,\n   0x900b1,\n   0x80008,\n   0x80088,\n   0x80048,\n   0x900f1,\n   0x70102,\n   0x80054,\n   0x80014,\n   0x8011c,\n   0x70112,\n   0x80074,\n   0x80034,\n   0x900c9,\n   0x7010a,\n   0x80064,\n   0x80024,\n   0x900a9,\n   0x80004,\n   0x80084,\n   0x80044,\n   0x900e9,\n   0x70106,\n   0x8005c,\n   0x8001c,\n   0x90099,\n   0x70116,\n   0x8007c,\n   0x8003c,\n   0x900d9,\n   0x7010e,\n   0x8006c,\n   0x8002c,\n   0x900b9,\n   0x8000c,\n   0x8008c,\n   0x8004c,\n   0x900f9,\n   0x70101,\n   0x80052,\n   0x80012,\n   0x8011a,\n   0x70111,\n   0x80072,\n   0x80032,\n   0x900c5,\n   0x70109,\n   0x80062,\n   0x80022,\n   0x900a5,\n   0x80002,\n   0x80082,\n   0x80042,\n   0x900e5,\n   0x70105,\n   0x8005a,\n   0x8001a,\n   0x90095,\n   0x70115,\n   0x8007a,\n   0x8003a,\n   0x900d5,\n   0x7010d,\n   0x8006a,\n   0x8002a,\n   0x900b5,\n   0x8000a,\n   0x8008a,\n   0x8004a,\n   0x900f5,\n   0x70103,\n   0x80056,\n   0x80016,\n   0x8011e,\n   0x70113,\n   0x80076,\n   0x80036,\n   0x900cd,\n   0x7010b,\n   0x80066,\n   0x80026,\n   0x900ad,\n   0x80006,\n   0x80086,\n   0x80046,\n   0x900ed,\n   0x70107,\n   0x8005e,\n   0x8001e,\n   0x9009d,\n   0x70117,\n   0x8007e,\n   0x8003e,\n   0x900dd,\n   0x7010f,\n   0x8006e,\n   0x8002e,\n   0x900bd,\n   0x8000e,\n   0x8008e,\n   0x8004e,\n   0x900fd,\n   0x70100,\n   0x80051,\n   0x80011,\n   0x80119,\n   0x70110,\n   0x80071,\n   0x80031,\n   0x900c3,\n   0x70108,\n   0x80061,\n   0x80021,\n   0x900a3,\n   0x80001,\n   0x80081,\n   0x80041,\n   0x900e3,\n   0x70104,\n   0x80059,\n   0x80019,\n   0x90093,\n   0x70114,\n   0x80079,\n   0x80039,\n   0x900d3,\n   0x7010c,\n   0x80069,\n   0x80029,\n   0x900b3,\n   0x80009,\n   0x80089,\n   0x80049,\n   0x900f3,\n   0x70102,\n   0x80055,\n   0x80015,\n   0x8011d,\n   0x70112,\n   0x80075,\n   0x80035,\n   0x900cb,\n   0x7010a,\n   0x80065,\n   0x80025,\n   0x900ab,\n   0x80005,\n   0x80085,\n   0x80045,\n   0x900eb,\n   0x70106,\n   0x8005d,\n   0x8001d,\n   0x9009b,\n   0x70116,\n   0x8007d,\n   0x8003d,\n   0x900db,\n   0x7010e,\n   0x8006d,\n   0x8002d,\n   0x900bb,\n   0x8000d,\n   0x8008d,\n   0x8004d,\n   0x900fb,\n   0x70101,\n   0x80053,\n   0x80013,\n   0x8011b,\n   0x70111,\n   0x80073,\n   0x80033,\n   0x900c7,\n   0x70109,\n   0x80063,\n   0x80023,\n   0x900a7,\n   0x80003,\n   0x80083,\n   0x80043,\n   0x900e7,\n   0x70105,\n   0x8005b,\n   0x8001b,\n   0x90097,\n   0x70115,\n   0x8007b,\n   0x8003b,\n   0x900d7,\n   0x7010d,\n   0x8006b,\n   0x8002b,\n   0x900b7,\n   0x8000b,\n   0x8008b,\n   0x8004b,\n   0x900f7,\n   0x70103,\n   0x80057,\n   0x80017,\n   0x8011f,\n   0x70113,\n   0x80077,\n   0x80037,\n   0x900cf,\n   0x7010b,\n   0x80067,\n   0x80027,\n   0x900af,\n   0x80007,\n   0x80087,\n   0x80047,\n   0x900ef,\n   0x70107,\n   0x8005f,\n   0x8001f,\n   0x9009f,\n   0x70117,\n   0x8007f,\n   0x8003f,\n   0x900df,\n   0x7010f,\n   0x8006f,\n   0x8002f,\n   0x900bf,\n   0x8000f,\n   0x8008f,\n   0x8004f,\n   0x900ff\n  ]),\n  9\n ];\n var fixedDistCodeTab = [\n  new Int32Array([\n   0x50000,\n   0x50010,\n   0x50008,\n   0x50018,\n   0x50004,\n   0x50014,\n   0x5000c,\n   0x5001c,\n   0x50002,\n   0x50012,\n   0x5000a,\n   0x5001a,\n   0x50006,\n   0x50016,\n   0x5000e,\n   0x00000,\n   0x50001,\n   0x50011,\n   0x50009,\n   0x50019,\n   0x50005,\n   0x50015,\n   0x5000d,\n   0x5001d,\n   0x50003,\n   0x50013,\n   0x5000b,\n   0x5001b,\n   0x50007,\n   0x50017,\n   0x5000f,\n   0x00000\n  ]),\n  5\n ];\n function FlateStream(str, maybeLength) {\n  this.str = str;\n  this.dict = str.dict;\n  var cmf = str.getByte();\n  var flg = str.getByte();\n  if (cmf === -1 || flg === -1) {\n   error('Invalid header in flate stream: ' + cmf + ', ' + flg);\n  }\n  if ((cmf & 0x0f) !== 0x08) {\n   error('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\n  }\n  if (((cmf << 8) + flg) % 31 !== 0) {\n   error('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\n  }\n  if (flg & 0x20) {\n   error('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\n  }\n  this.codeSize = 0;\n  this.codeBuf = 0;\n  DecodeStream.call(this, maybeLength);\n }\n FlateStream.prototype = Object.create(DecodeStream.prototype);\n FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\n  var str = this.str;\n  var codeSize = this.codeSize;\n  var codeBuf = this.codeBuf;\n  var b;\n  while (codeSize < bits) {\n   if ((b = str.getByte()) === -1) {\n    error('Bad encoding in flate stream');\n   }\n   codeBuf |= b << codeSize;\n   codeSize += 8;\n  }\n  b = codeBuf & (1 << bits) - 1;\n  this.codeBuf = codeBuf >> bits;\n  this.codeSize = codeSize -= bits;\n  return b;\n };\n FlateStream.prototype.getCode = function FlateStream_getCode(table) {\n  var str = this.str;\n  var codes = table[0];\n  var maxLen = table[1];\n  var codeSize = this.codeSize;\n  var codeBuf = this.codeBuf;\n  var b;\n  while (codeSize < maxLen) {\n   if ((b = str.getByte()) === -1) {\n    break;\n   }\n   codeBuf |= b << codeSize;\n   codeSize += 8;\n  }\n  var code = codes[codeBuf & (1 << maxLen) - 1];\n  var codeLen = code >> 16;\n  var codeVal = code & 0xffff;\n  if (codeLen < 1 || codeSize < codeLen) {\n   error('Bad encoding in flate stream');\n  }\n  this.codeBuf = codeBuf >> codeLen;\n  this.codeSize = codeSize - codeLen;\n  return codeVal;\n };\n FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\n  var n = lengths.length;\n  var maxLen = 0;\n  var i;\n  for (i = 0; i < n; ++i) {\n   if (lengths[i] > maxLen) {\n    maxLen = lengths[i];\n   }\n  }\n  var size = 1 << maxLen;\n  var codes = new Int32Array(size);\n  for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\n   for (var val = 0; val < n; ++val) {\n    if (lengths[val] === len) {\n     var code2 = 0;\n     var t = code;\n     for (i = 0; i < len; ++i) {\n      code2 = code2 << 1 | t & 1;\n      t >>= 1;\n     }\n     for (i = code2; i < size; i += skip) {\n      codes[i] = len << 16 | val;\n     }\n     ++code;\n    }\n   }\n  }\n  return [\n   codes,\n   maxLen\n  ];\n };\n FlateStream.prototype.readBlock = function FlateStream_readBlock() {\n  var buffer, len;\n  var str = this.str;\n  var hdr = this.getBits(3);\n  if (hdr & 1) {\n   this.eof = true;\n  }\n  hdr >>= 1;\n  if (hdr === 0) {\n   var b;\n   if ((b = str.getByte()) === -1) {\n    error('Bad block header in flate stream');\n   }\n   var blockLen = b;\n   if ((b = str.getByte()) === -1) {\n    error('Bad block header in flate stream');\n   }\n   blockLen |= b << 8;\n   if ((b = str.getByte()) === -1) {\n    error('Bad block header in flate stream');\n   }\n   var check = b;\n   if ((b = str.getByte()) === -1) {\n    error('Bad block header in flate stream');\n   }\n   check |= b << 8;\n   if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\n    error('Bad uncompressed block length in flate stream');\n   }\n   this.codeBuf = 0;\n   this.codeSize = 0;\n   var bufferLength = this.bufferLength;\n   buffer = this.ensureBuffer(bufferLength + blockLen);\n   var end = bufferLength + blockLen;\n   this.bufferLength = end;\n   if (blockLen === 0) {\n    if (str.peekByte() === -1) {\n     this.eof = true;\n    }\n   } else {\n    for (var n = bufferLength; n < end; ++n) {\n     if ((b = str.getByte()) === -1) {\n      this.eof = true;\n      break;\n     }\n     buffer[n] = b;\n    }\n   }\n   return;\n  }\n  var litCodeTable;\n  var distCodeTable;\n  if (hdr === 1) {\n   litCodeTable = fixedLitCodeTab;\n   distCodeTable = fixedDistCodeTab;\n  } else if (hdr === 2) {\n   var numLitCodes = this.getBits(5) + 257;\n   var numDistCodes = this.getBits(5) + 1;\n   var numCodeLenCodes = this.getBits(4) + 4;\n   var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n   var i;\n   for (i = 0; i < numCodeLenCodes; ++i) {\n    codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\n   }\n   var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n   len = 0;\n   i = 0;\n   var codes = numLitCodes + numDistCodes;\n   var codeLengths = new Uint8Array(codes);\n   var bitsLength, bitsOffset, what;\n   while (i < codes) {\n    var code = this.getCode(codeLenCodeTab);\n    if (code === 16) {\n     bitsLength = 2;\n     bitsOffset = 3;\n     what = len;\n    } else if (code === 17) {\n     bitsLength = 3;\n     bitsOffset = 3;\n     what = len = 0;\n    } else if (code === 18) {\n     bitsLength = 7;\n     bitsOffset = 11;\n     what = len = 0;\n    } else {\n     codeLengths[i++] = len = code;\n     continue;\n    }\n    var repeatLength = this.getBits(bitsLength) + bitsOffset;\n    while (repeatLength-- > 0) {\n     codeLengths[i++] = what;\n    }\n   }\n   litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n   distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n  } else {\n   error('Unknown block type in flate stream');\n  }\n  buffer = this.buffer;\n  var limit = buffer ? buffer.length : 0;\n  var pos = this.bufferLength;\n  while (true) {\n   var code1 = this.getCode(litCodeTable);\n   if (code1 < 256) {\n    if (pos + 1 >= limit) {\n     buffer = this.ensureBuffer(pos + 1);\n     limit = buffer.length;\n    }\n    buffer[pos++] = code1;\n    continue;\n   }\n   if (code1 === 256) {\n    this.bufferLength = pos;\n    return;\n   }\n   code1 -= 257;\n   code1 = lengthDecode[code1];\n   var code2 = code1 >> 16;\n   if (code2 > 0) {\n    code2 = this.getBits(code2);\n   }\n   len = (code1 & 0xffff) + code2;\n   code1 = this.getCode(distCodeTable);\n   code1 = distDecode[code1];\n   code2 = code1 >> 16;\n   if (code2 > 0) {\n    code2 = this.getBits(code2);\n   }\n   var dist = (code1 & 0xffff) + code2;\n   if (pos + len >= limit) {\n    buffer = this.ensureBuffer(pos + len);\n    limit = buffer.length;\n   }\n   for (var k = 0; k < len; ++k, ++pos) {\n    buffer[pos] = buffer[pos - dist];\n   }\n  }\n };\n return FlateStream;\n}();\nvar PredictorStream = function PredictorStreamClosure() {\n function PredictorStream(str, maybeLength, params) {\n  if (!isDict(params)) {\n   return str;\n  }\n  var predictor = this.predictor = params.get('Predictor') || 1;\n  if (predictor <= 1) {\n   return str;\n  }\n  if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n   error('Unsupported predictor: ' + predictor);\n  }\n  if (predictor === 2) {\n   this.readBlock = this.readBlockTiff;\n  } else {\n   this.readBlock = this.readBlockPng;\n  }\n  this.str = str;\n  this.dict = str.dict;\n  var colors = this.colors = params.get('Colors') || 1;\n  var bits = this.bits = params.get('BitsPerComponent') || 8;\n  var columns = this.columns = params.get('Columns') || 1;\n  this.pixBytes = colors * bits + 7 >> 3;\n  this.rowBytes = columns * colors * bits + 7 >> 3;\n  DecodeStream.call(this, maybeLength);\n  return this;\n }\n PredictorStream.prototype = Object.create(DecodeStream.prototype);\n PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\n  var rowBytes = this.rowBytes;\n  var bufferLength = this.bufferLength;\n  var buffer = this.ensureBuffer(bufferLength + rowBytes);\n  var bits = this.bits;\n  var colors = this.colors;\n  var rawBytes = this.str.getBytes(rowBytes);\n  this.eof = !rawBytes.length;\n  if (this.eof) {\n   return;\n  }\n  var inbuf = 0, outbuf = 0;\n  var inbits = 0, outbits = 0;\n  var pos = bufferLength;\n  var i;\n  if (bits === 1 && colors === 1) {\n   for (i = 0; i < rowBytes; ++i) {\n    var c = rawBytes[i] ^ inbuf;\n    c ^= c >> 1;\n    c ^= c >> 2;\n    c ^= c >> 4;\n    inbuf = (c & 1) << 7;\n    buffer[pos++] = c;\n   }\n  } else if (bits === 8) {\n   for (i = 0; i < colors; ++i) {\n    buffer[pos++] = rawBytes[i];\n   }\n   for (; i < rowBytes; ++i) {\n    buffer[pos] = buffer[pos - colors] + rawBytes[i];\n    pos++;\n   }\n  } else {\n   var compArray = new Uint8Array(colors + 1);\n   var bitMask = (1 << bits) - 1;\n   var j = 0, k = bufferLength;\n   var columns = this.columns;\n   for (i = 0; i < columns; ++i) {\n    for (var kk = 0; kk < colors; ++kk) {\n     if (inbits < bits) {\n      inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\n      inbits += 8;\n     }\n     compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\n     inbits -= bits;\n     outbuf = outbuf << bits | compArray[kk];\n     outbits += bits;\n     if (outbits >= 8) {\n      buffer[k++] = outbuf >> outbits - 8 & 0xFF;\n      outbits -= 8;\n     }\n    }\n   }\n   if (outbits > 0) {\n    buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\n   }\n  }\n  this.bufferLength += rowBytes;\n };\n PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\n  var rowBytes = this.rowBytes;\n  var pixBytes = this.pixBytes;\n  var predictor = this.str.getByte();\n  var rawBytes = this.str.getBytes(rowBytes);\n  this.eof = !rawBytes.length;\n  if (this.eof) {\n   return;\n  }\n  var bufferLength = this.bufferLength;\n  var buffer = this.ensureBuffer(bufferLength + rowBytes);\n  var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n  if (prevRow.length === 0) {\n   prevRow = new Uint8Array(rowBytes);\n  }\n  var i, j = bufferLength, up, c;\n  switch (predictor) {\n  case 0:\n   for (i = 0; i < rowBytes; ++i) {\n    buffer[j++] = rawBytes[i];\n   }\n   break;\n  case 1:\n   for (i = 0; i < pixBytes; ++i) {\n    buffer[j++] = rawBytes[i];\n   }\n   for (; i < rowBytes; ++i) {\n    buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\n    j++;\n   }\n   break;\n  case 2:\n   for (i = 0; i < rowBytes; ++i) {\n    buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\n   }\n   break;\n  case 3:\n   for (i = 0; i < pixBytes; ++i) {\n    buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\n   }\n   for (; i < rowBytes; ++i) {\n    buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\n    j++;\n   }\n   break;\n  case 4:\n   for (i = 0; i < pixBytes; ++i) {\n    up = prevRow[i];\n    c = rawBytes[i];\n    buffer[j++] = up + c;\n   }\n   for (; i < rowBytes; ++i) {\n    up = prevRow[i];\n    var upLeft = prevRow[i - pixBytes];\n    var left = buffer[j - pixBytes];\n    var p = left + up - upLeft;\n    var pa = p - left;\n    if (pa < 0) {\n     pa = -pa;\n    }\n    var pb = p - up;\n    if (pb < 0) {\n     pb = -pb;\n    }\n    var pc = p - upLeft;\n    if (pc < 0) {\n     pc = -pc;\n    }\n    c = rawBytes[i];\n    if (pa <= pb && pa <= pc) {\n     buffer[j++] = left + c;\n    } else if (pb <= pc) {\n     buffer[j++] = up + c;\n    } else {\n     buffer[j++] = upLeft + c;\n    }\n   }\n   break;\n  default:\n   error('Unsupported predictor: ' + predictor);\n  }\n  this.bufferLength += rowBytes;\n };\n return PredictorStream;\n}();\nvar JpegStream = function JpegStreamClosure() {\n function JpegStream(stream, maybeLength, dict, params) {\n  var ch;\n  while ((ch = stream.getByte()) !== -1) {\n   if (ch === 0xFF) {\n    stream.skip(-1);\n    break;\n   }\n  }\n  this.stream = stream;\n  this.maybeLength = maybeLength;\n  this.dict = dict;\n  this.params = params;\n  DecodeStream.call(this, maybeLength);\n }\n JpegStream.prototype = Object.create(DecodeStream.prototype);\n Object.defineProperty(JpegStream.prototype, 'bytes', {\n  get: function JpegStream_bytes() {\n   return shadow(this, 'bytes', this.stream.getBytes(this.maybeLength));\n  },\n  configurable: true\n });\n JpegStream.prototype.ensureBuffer = function JpegStream_ensureBuffer(req) {\n  if (this.bufferLength) {\n   return;\n  }\n  var jpegImage = new JpegImage();\n  var decodeArr = this.dict.getArray('Decode', 'D');\n  if (this.forceRGB && isArray(decodeArr)) {\n   var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\n   var decodeArrLength = decodeArr.length;\n   var transform = new Int32Array(decodeArrLength);\n   var transformNeeded = false;\n   var maxValue = (1 << bitsPerComponent) - 1;\n   for (var i = 0; i < decodeArrLength; i += 2) {\n    transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\n    transform[i + 1] = decodeArr[i] * maxValue | 0;\n    if (transform[i] !== 256 || transform[i + 1] !== 0) {\n     transformNeeded = true;\n    }\n   }\n   if (transformNeeded) {\n    jpegImage.decodeTransform = transform;\n   }\n  }\n  if (isDict(this.params)) {\n   var colorTransform = this.params.get('ColorTransform');\n   if (isInt(colorTransform)) {\n    jpegImage.colorTransform = colorTransform;\n   }\n  }\n  jpegImage.parse(this.bytes);\n  var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);\n  this.buffer = data;\n  this.bufferLength = data.length;\n  this.eof = true;\n };\n JpegStream.prototype.getBytes = function JpegStream_getBytes(length) {\n  this.ensureBuffer();\n  return this.buffer;\n };\n JpegStream.prototype.getIR = function JpegStream_getIR(forceDataSchema) {\n  return createObjectURL(this.bytes, 'image/jpeg', forceDataSchema);\n };\n return JpegStream;\n}();\nvar JpxStream = function JpxStreamClosure() {\n function JpxStream(stream, maybeLength, dict, params) {\n  this.stream = stream;\n  this.maybeLength = maybeLength;\n  this.dict = dict;\n  this.params = params;\n  DecodeStream.call(this, maybeLength);\n }\n JpxStream.prototype = Object.create(DecodeStream.prototype);\n Object.defineProperty(JpxStream.prototype, 'bytes', {\n  get: function JpxStream_bytes() {\n   return shadow(this, 'bytes', this.stream.getBytes(this.maybeLength));\n  },\n  configurable: true\n });\n JpxStream.prototype.ensureBuffer = function JpxStream_ensureBuffer(req) {\n  if (this.bufferLength) {\n   return;\n  }\n  var jpxImage = new JpxImage();\n  jpxImage.parse(this.bytes);\n  var width = jpxImage.width;\n  var height = jpxImage.height;\n  var componentsCount = jpxImage.componentsCount;\n  var tileCount = jpxImage.tiles.length;\n  if (tileCount === 1) {\n   this.buffer = jpxImage.tiles[0].items;\n  } else {\n   var data = new Uint8Array(width * height * componentsCount);\n   for (var k = 0; k < tileCount; k++) {\n    var tileComponents = jpxImage.tiles[k];\n    var tileWidth = tileComponents.width;\n    var tileHeight = tileComponents.height;\n    var tileLeft = tileComponents.left;\n    var tileTop = tileComponents.top;\n    var src = tileComponents.items;\n    var srcPosition = 0;\n    var dataPosition = (width * tileTop + tileLeft) * componentsCount;\n    var imgRowSize = width * componentsCount;\n    var tileRowSize = tileWidth * componentsCount;\n    for (var j = 0; j < tileHeight; j++) {\n     var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\n     data.set(rowBytes, dataPosition);\n     srcPosition += tileRowSize;\n     dataPosition += imgRowSize;\n    }\n   }\n   this.buffer = data;\n  }\n  this.bufferLength = this.buffer.length;\n  this.eof = true;\n };\n return JpxStream;\n}();\nvar Jbig2Stream = function Jbig2StreamClosure() {\n function Jbig2Stream(stream, maybeLength, dict, params) {\n  this.stream = stream;\n  this.maybeLength = maybeLength;\n  this.dict = dict;\n  this.params = params;\n  DecodeStream.call(this, maybeLength);\n }\n Jbig2Stream.prototype = Object.create(DecodeStream.prototype);\n Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\n  get: function Jbig2Stream_bytes() {\n   return shadow(this, 'bytes', this.stream.getBytes(this.maybeLength));\n  },\n  configurable: true\n });\n Jbig2Stream.prototype.ensureBuffer = function Jbig2Stream_ensureBuffer(req) {\n  if (this.bufferLength) {\n   return;\n  }\n  var jbig2Image = new Jbig2Image();\n  var chunks = [];\n  if (isDict(this.params)) {\n   var globalsStream = this.params.get('JBIG2Globals');\n   if (isStream(globalsStream)) {\n    var globals = globalsStream.getBytes();\n    chunks.push({\n     data: globals,\n     start: 0,\n     end: globals.length\n    });\n   }\n  }\n  chunks.push({\n   data: this.bytes,\n   start: 0,\n   end: this.bytes.length\n  });\n  var data = jbig2Image.parseChunks(chunks);\n  var dataLength = data.length;\n  for (var i = 0; i < dataLength; i++) {\n   data[i] ^= 0xFF;\n  }\n  this.buffer = data;\n  this.bufferLength = dataLength;\n  this.eof = true;\n };\n return Jbig2Stream;\n}();\nvar DecryptStream = function DecryptStreamClosure() {\n function DecryptStream(str, maybeLength, decrypt) {\n  this.str = str;\n  this.dict = str.dict;\n  this.decrypt = decrypt;\n  this.nextChunk = null;\n  this.initialized = false;\n  DecodeStream.call(this, maybeLength);\n }\n var chunkSize = 512;\n DecryptStream.prototype = Object.create(DecodeStream.prototype);\n DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\n  var chunk;\n  if (this.initialized) {\n   chunk = this.nextChunk;\n  } else {\n   chunk = this.str.getBytes(chunkSize);\n   this.initialized = true;\n  }\n  if (!chunk || chunk.length === 0) {\n   this.eof = true;\n   return;\n  }\n  this.nextChunk = this.str.getBytes(chunkSize);\n  var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\n  var decrypt = this.decrypt;\n  chunk = decrypt(chunk, !hasMoreData);\n  var bufferLength = this.bufferLength;\n  var i, n = chunk.length;\n  var buffer = this.ensureBuffer(bufferLength + n);\n  for (i = 0; i < n; i++) {\n   buffer[bufferLength++] = chunk[i];\n  }\n  this.bufferLength = bufferLength;\n };\n return DecryptStream;\n}();\nvar Ascii85Stream = function Ascii85StreamClosure() {\n function Ascii85Stream(str, maybeLength) {\n  this.str = str;\n  this.dict = str.dict;\n  this.input = new Uint8Array(5);\n  if (maybeLength) {\n   maybeLength = 0.8 * maybeLength;\n  }\n  DecodeStream.call(this, maybeLength);\n }\n Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\n Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\n  var TILDA_CHAR = 0x7E;\n  var Z_LOWER_CHAR = 0x7A;\n  var EOF = -1;\n  var str = this.str;\n  var c = str.getByte();\n  while (isSpace(c)) {\n   c = str.getByte();\n  }\n  if (c === EOF || c === TILDA_CHAR) {\n   this.eof = true;\n   return;\n  }\n  var bufferLength = this.bufferLength, buffer;\n  var i;\n  if (c === Z_LOWER_CHAR) {\n   buffer = this.ensureBuffer(bufferLength + 4);\n   for (i = 0; i < 4; ++i) {\n    buffer[bufferLength + i] = 0;\n   }\n   this.bufferLength += 4;\n  } else {\n   var input = this.input;\n   input[0] = c;\n   for (i = 1; i < 5; ++i) {\n    c = str.getByte();\n    while (isSpace(c)) {\n     c = str.getByte();\n    }\n    input[i] = c;\n    if (c === EOF || c === TILDA_CHAR) {\n     break;\n    }\n   }\n   buffer = this.ensureBuffer(bufferLength + i - 1);\n   this.bufferLength += i - 1;\n   if (i < 5) {\n    for (; i < 5; ++i) {\n     input[i] = 0x21 + 84;\n    }\n    this.eof = true;\n   }\n   var t = 0;\n   for (i = 0; i < 5; ++i) {\n    t = t * 85 + (input[i] - 0x21);\n   }\n   for (i = 3; i >= 0; --i) {\n    buffer[bufferLength + i] = t & 0xFF;\n    t >>= 8;\n   }\n  }\n };\n return Ascii85Stream;\n}();\nvar AsciiHexStream = function AsciiHexStreamClosure() {\n function AsciiHexStream(str, maybeLength) {\n  this.str = str;\n  this.dict = str.dict;\n  this.firstDigit = -1;\n  if (maybeLength) {\n   maybeLength = 0.5 * maybeLength;\n  }\n  DecodeStream.call(this, maybeLength);\n }\n AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\n AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\n  var UPSTREAM_BLOCK_SIZE = 8000;\n  var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\n  if (!bytes.length) {\n   this.eof = true;\n   return;\n  }\n  var maxDecodeLength = bytes.length + 1 >> 1;\n  var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n  var bufferLength = this.bufferLength;\n  var firstDigit = this.firstDigit;\n  for (var i = 0, ii = bytes.length; i < ii; i++) {\n   var ch = bytes[i], digit;\n   if (ch >= 0x30 && ch <= 0x39) {\n    digit = ch & 0x0F;\n   } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n    digit = (ch & 0x0F) + 9;\n   } else if (ch === 0x3E) {\n    this.eof = true;\n    break;\n   } else {\n    continue;\n   }\n   if (firstDigit < 0) {\n    firstDigit = digit;\n   } else {\n    buffer[bufferLength++] = firstDigit << 4 | digit;\n    firstDigit = -1;\n   }\n  }\n  if (firstDigit >= 0 && this.eof) {\n   buffer[bufferLength++] = firstDigit << 4;\n   firstDigit = -1;\n  }\n  this.firstDigit = firstDigit;\n  this.bufferLength = bufferLength;\n };\n return AsciiHexStream;\n}();\nvar RunLengthStream = function RunLengthStreamClosure() {\n function RunLengthStream(str, maybeLength) {\n  this.str = str;\n  this.dict = str.dict;\n  DecodeStream.call(this, maybeLength);\n }\n RunLengthStream.prototype = Object.create(DecodeStream.prototype);\n RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\n  var repeatHeader = this.str.getBytes(2);\n  if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\n   this.eof = true;\n   return;\n  }\n  var buffer;\n  var bufferLength = this.bufferLength;\n  var n = repeatHeader[0];\n  if (n < 128) {\n   buffer = this.ensureBuffer(bufferLength + n + 1);\n   buffer[bufferLength++] = repeatHeader[1];\n   if (n > 0) {\n    var source = this.str.getBytes(n);\n    buffer.set(source, bufferLength);\n    bufferLength += n;\n   }\n  } else {\n   n = 257 - n;\n   var b = repeatHeader[1];\n   buffer = this.ensureBuffer(bufferLength + n + 1);\n   for (var i = 0; i < n; i++) {\n    buffer[bufferLength++] = b;\n   }\n  }\n  this.bufferLength = bufferLength;\n };\n return RunLengthStream;\n}();\nvar CCITTFaxStream = function CCITTFaxStreamClosure() {\n var ccittEOL = -2;\n var ccittEOF = -1;\n var twoDimPass = 0;\n var twoDimHoriz = 1;\n var twoDimVert0 = 2;\n var twoDimVertR1 = 3;\n var twoDimVertL1 = 4;\n var twoDimVertR2 = 5;\n var twoDimVertL2 = 6;\n var twoDimVertR3 = 7;\n var twoDimVertL3 = 8;\n var twoDimTable = [\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   7,\n   twoDimVertL3\n  ],\n  [\n   7,\n   twoDimVertR3\n  ],\n  [\n   6,\n   twoDimVertL2\n  ],\n  [\n   6,\n   twoDimVertL2\n  ],\n  [\n   6,\n   twoDimVertR2\n  ],\n  [\n   6,\n   twoDimVertR2\n  ],\n  [\n   4,\n   twoDimPass\n  ],\n  [\n   4,\n   twoDimPass\n  ],\n  [\n   4,\n   twoDimPass\n  ],\n  [\n   4,\n   twoDimPass\n  ],\n  [\n   4,\n   twoDimPass\n  ],\n  [\n   4,\n   twoDimPass\n  ],\n  [\n   4,\n   twoDimPass\n  ],\n  [\n   4,\n   twoDimPass\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ]\n ];\n var whiteTable1 = [\n  [\n   -1,\n   -1\n  ],\n  [\n   12,\n   ccittEOL\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   11,\n   1792\n  ],\n  [\n   11,\n   1792\n  ],\n  [\n   12,\n   1984\n  ],\n  [\n   12,\n   2048\n  ],\n  [\n   12,\n   2112\n  ],\n  [\n   12,\n   2176\n  ],\n  [\n   12,\n   2240\n  ],\n  [\n   12,\n   2304\n  ],\n  [\n   11,\n   1856\n  ],\n  [\n   11,\n   1856\n  ],\n  [\n   11,\n   1920\n  ],\n  [\n   11,\n   1920\n  ],\n  [\n   12,\n   2368\n  ],\n  [\n   12,\n   2432\n  ],\n  [\n   12,\n   2496\n  ],\n  [\n   12,\n   2560\n  ]\n ];\n var whiteTable2 = [\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   8,\n   29\n  ],\n  [\n   8,\n   29\n  ],\n  [\n   8,\n   30\n  ],\n  [\n   8,\n   30\n  ],\n  [\n   8,\n   45\n  ],\n  [\n   8,\n   45\n  ],\n  [\n   8,\n   46\n  ],\n  [\n   8,\n   46\n  ],\n  [\n   7,\n   22\n  ],\n  [\n   7,\n   22\n  ],\n  [\n   7,\n   22\n  ],\n  [\n   7,\n   22\n  ],\n  [\n   7,\n   23\n  ],\n  [\n   7,\n   23\n  ],\n  [\n   7,\n   23\n  ],\n  [\n   7,\n   23\n  ],\n  [\n   8,\n   47\n  ],\n  [\n   8,\n   47\n  ],\n  [\n   8,\n   48\n  ],\n  [\n   8,\n   48\n  ],\n  [\n   6,\n   13\n  ],\n  [\n   6,\n   13\n  ],\n  [\n   6,\n   13\n  ],\n  [\n   6,\n   13\n  ],\n  [\n   6,\n   13\n  ],\n  [\n   6,\n   13\n  ],\n  [\n   6,\n   13\n  ],\n  [\n   6,\n   13\n  ],\n  [\n   7,\n   20\n  ],\n  [\n   7,\n   20\n  ],\n  [\n   7,\n   20\n  ],\n  [\n   7,\n   20\n  ],\n  [\n   8,\n   33\n  ],\n  [\n   8,\n   33\n  ],\n  [\n   8,\n   34\n  ],\n  [\n   8,\n   34\n  ],\n  [\n   8,\n   35\n  ],\n  [\n   8,\n   35\n  ],\n  [\n   8,\n   36\n  ],\n  [\n   8,\n   36\n  ],\n  [\n   8,\n   37\n  ],\n  [\n   8,\n   37\n  ],\n  [\n   8,\n   38\n  ],\n  [\n   8,\n   38\n  ],\n  [\n   7,\n   19\n  ],\n  [\n   7,\n   19\n  ],\n  [\n   7,\n   19\n  ],\n  [\n   7,\n   19\n  ],\n  [\n   8,\n   31\n  ],\n  [\n   8,\n   31\n  ],\n  [\n   8,\n   32\n  ],\n  [\n   8,\n   32\n  ],\n  [\n   6,\n   1\n  ],\n  [\n   6,\n   1\n  ],\n  [\n   6,\n   1\n  ],\n  [\n   6,\n   1\n  ],\n  [\n   6,\n   1\n  ],\n  [\n   6,\n   1\n  ],\n  [\n   6,\n   1\n  ],\n  [\n   6,\n   1\n  ],\n  [\n   6,\n   12\n  ],\n  [\n   6,\n   12\n  ],\n  [\n   6,\n   12\n  ],\n  [\n   6,\n   12\n  ],\n  [\n   6,\n   12\n  ],\n  [\n   6,\n   12\n  ],\n  [\n   6,\n   12\n  ],\n  [\n   6,\n   12\n  ],\n  [\n   8,\n   53\n  ],\n  [\n   8,\n   53\n  ],\n  [\n   8,\n   54\n  ],\n  [\n   8,\n   54\n  ],\n  [\n   7,\n   26\n  ],\n  [\n   7,\n   26\n  ],\n  [\n   7,\n   26\n  ],\n  [\n   7,\n   26\n  ],\n  [\n   8,\n   39\n  ],\n  [\n   8,\n   39\n  ],\n  [\n   8,\n   40\n  ],\n  [\n   8,\n   40\n  ],\n  [\n   8,\n   41\n  ],\n  [\n   8,\n   41\n  ],\n  [\n   8,\n   42\n  ],\n  [\n   8,\n   42\n  ],\n  [\n   8,\n   43\n  ],\n  [\n   8,\n   43\n  ],\n  [\n   8,\n   44\n  ],\n  [\n   8,\n   44\n  ],\n  [\n   7,\n   21\n  ],\n  [\n   7,\n   21\n  ],\n  [\n   7,\n   21\n  ],\n  [\n   7,\n   21\n  ],\n  [\n   7,\n   28\n  ],\n  [\n   7,\n   28\n  ],\n  [\n   7,\n   28\n  ],\n  [\n   7,\n   28\n  ],\n  [\n   8,\n   61\n  ],\n  [\n   8,\n   61\n  ],\n  [\n   8,\n   62\n  ],\n  [\n   8,\n   62\n  ],\n  [\n   8,\n   63\n  ],\n  [\n   8,\n   63\n  ],\n  [\n   8,\n   0\n  ],\n  [\n   8,\n   0\n  ],\n  [\n   8,\n   320\n  ],\n  [\n   8,\n   320\n  ],\n  [\n   8,\n   384\n  ],\n  [\n   8,\n   384\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   7,\n   27\n  ],\n  [\n   7,\n   27\n  ],\n  [\n   7,\n   27\n  ],\n  [\n   7,\n   27\n  ],\n  [\n   8,\n   59\n  ],\n  [\n   8,\n   59\n  ],\n  [\n   8,\n   60\n  ],\n  [\n   8,\n   60\n  ],\n  [\n   9,\n   1472\n  ],\n  [\n   9,\n   1536\n  ],\n  [\n   9,\n   1600\n  ],\n  [\n   9,\n   1728\n  ],\n  [\n   7,\n   18\n  ],\n  [\n   7,\n   18\n  ],\n  [\n   7,\n   18\n  ],\n  [\n   7,\n   18\n  ],\n  [\n   7,\n   24\n  ],\n  [\n   7,\n   24\n  ],\n  [\n   7,\n   24\n  ],\n  [\n   7,\n   24\n  ],\n  [\n   8,\n   49\n  ],\n  [\n   8,\n   49\n  ],\n  [\n   8,\n   50\n  ],\n  [\n   8,\n   50\n  ],\n  [\n   8,\n   51\n  ],\n  [\n   8,\n   51\n  ],\n  [\n   8,\n   52\n  ],\n  [\n   8,\n   52\n  ],\n  [\n   7,\n   25\n  ],\n  [\n   7,\n   25\n  ],\n  [\n   7,\n   25\n  ],\n  [\n   7,\n   25\n  ],\n  [\n   8,\n   55\n  ],\n  [\n   8,\n   55\n  ],\n  [\n   8,\n   56\n  ],\n  [\n   8,\n   56\n  ],\n  [\n   8,\n   57\n  ],\n  [\n   8,\n   57\n  ],\n  [\n   8,\n   58\n  ],\n  [\n   8,\n   58\n  ],\n  [\n   6,\n   192\n  ],\n  [\n   6,\n   192\n  ],\n  [\n   6,\n   192\n  ],\n  [\n   6,\n   192\n  ],\n  [\n   6,\n   192\n  ],\n  [\n   6,\n   192\n  ],\n  [\n   6,\n   192\n  ],\n  [\n   6,\n   192\n  ],\n  [\n   6,\n   1664\n  ],\n  [\n   6,\n   1664\n  ],\n  [\n   6,\n   1664\n  ],\n  [\n   6,\n   1664\n  ],\n  [\n   6,\n   1664\n  ],\n  [\n   6,\n   1664\n  ],\n  [\n   6,\n   1664\n  ],\n  [\n   6,\n   1664\n  ],\n  [\n   8,\n   448\n  ],\n  [\n   8,\n   448\n  ],\n  [\n   8,\n   512\n  ],\n  [\n   8,\n   512\n  ],\n  [\n   9,\n   704\n  ],\n  [\n   9,\n   768\n  ],\n  [\n   8,\n   640\n  ],\n  [\n   8,\n   640\n  ],\n  [\n   8,\n   576\n  ],\n  [\n   8,\n   576\n  ],\n  [\n   9,\n   832\n  ],\n  [\n   9,\n   896\n  ],\n  [\n   9,\n   960\n  ],\n  [\n   9,\n   1024\n  ],\n  [\n   9,\n   1088\n  ],\n  [\n   9,\n   1152\n  ],\n  [\n   9,\n   1216\n  ],\n  [\n   9,\n   1280\n  ],\n  [\n   9,\n   1344\n  ],\n  [\n   9,\n   1408\n  ],\n  [\n   7,\n   256\n  ],\n  [\n   7,\n   256\n  ],\n  [\n   7,\n   256\n  ],\n  [\n   7,\n   256\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   6,\n   16\n  ],\n  [\n   6,\n   16\n  ],\n  [\n   6,\n   16\n  ],\n  [\n   6,\n   16\n  ],\n  [\n   6,\n   16\n  ],\n  [\n   6,\n   16\n  ],\n  [\n   6,\n   16\n  ],\n  [\n   6,\n   16\n  ],\n  [\n   6,\n   17\n  ],\n  [\n   6,\n   17\n  ],\n  [\n   6,\n   17\n  ],\n  [\n   6,\n   17\n  ],\n  [\n   6,\n   17\n  ],\n  [\n   6,\n   17\n  ],\n  [\n   6,\n   17\n  ],\n  [\n   6,\n   17\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   6,\n   14\n  ],\n  [\n   6,\n   14\n  ],\n  [\n   6,\n   14\n  ],\n  [\n   6,\n   14\n  ],\n  [\n   6,\n   14\n  ],\n  [\n   6,\n   14\n  ],\n  [\n   6,\n   14\n  ],\n  [\n   6,\n   14\n  ],\n  [\n   6,\n   15\n  ],\n  [\n   6,\n   15\n  ],\n  [\n   6,\n   15\n  ],\n  [\n   6,\n   15\n  ],\n  [\n   6,\n   15\n  ],\n  [\n   6,\n   15\n  ],\n  [\n   6,\n   15\n  ],\n  [\n   6,\n   15\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ]\n ];\n var blackTable1 = [\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   12,\n   ccittEOL\n  ],\n  [\n   12,\n   ccittEOL\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   11,\n   1792\n  ],\n  [\n   11,\n   1792\n  ],\n  [\n   11,\n   1792\n  ],\n  [\n   11,\n   1792\n  ],\n  [\n   12,\n   1984\n  ],\n  [\n   12,\n   1984\n  ],\n  [\n   12,\n   2048\n  ],\n  [\n   12,\n   2048\n  ],\n  [\n   12,\n   2112\n  ],\n  [\n   12,\n   2112\n  ],\n  [\n   12,\n   2176\n  ],\n  [\n   12,\n   2176\n  ],\n  [\n   12,\n   2240\n  ],\n  [\n   12,\n   2240\n  ],\n  [\n   12,\n   2304\n  ],\n  [\n   12,\n   2304\n  ],\n  [\n   11,\n   1856\n  ],\n  [\n   11,\n   1856\n  ],\n  [\n   11,\n   1856\n  ],\n  [\n   11,\n   1856\n  ],\n  [\n   11,\n   1920\n  ],\n  [\n   11,\n   1920\n  ],\n  [\n   11,\n   1920\n  ],\n  [\n   11,\n   1920\n  ],\n  [\n   12,\n   2368\n  ],\n  [\n   12,\n   2368\n  ],\n  [\n   12,\n   2432\n  ],\n  [\n   12,\n   2432\n  ],\n  [\n   12,\n   2496\n  ],\n  [\n   12,\n   2496\n  ],\n  [\n   12,\n   2560\n  ],\n  [\n   12,\n   2560\n  ],\n  [\n   10,\n   18\n  ],\n  [\n   10,\n   18\n  ],\n  [\n   10,\n   18\n  ],\n  [\n   10,\n   18\n  ],\n  [\n   10,\n   18\n  ],\n  [\n   10,\n   18\n  ],\n  [\n   10,\n   18\n  ],\n  [\n   10,\n   18\n  ],\n  [\n   12,\n   52\n  ],\n  [\n   12,\n   52\n  ],\n  [\n   13,\n   640\n  ],\n  [\n   13,\n   704\n  ],\n  [\n   13,\n   768\n  ],\n  [\n   13,\n   832\n  ],\n  [\n   12,\n   55\n  ],\n  [\n   12,\n   55\n  ],\n  [\n   12,\n   56\n  ],\n  [\n   12,\n   56\n  ],\n  [\n   13,\n   1280\n  ],\n  [\n   13,\n   1344\n  ],\n  [\n   13,\n   1408\n  ],\n  [\n   13,\n   1472\n  ],\n  [\n   12,\n   59\n  ],\n  [\n   12,\n   59\n  ],\n  [\n   12,\n   60\n  ],\n  [\n   12,\n   60\n  ],\n  [\n   13,\n   1536\n  ],\n  [\n   13,\n   1600\n  ],\n  [\n   11,\n   24\n  ],\n  [\n   11,\n   24\n  ],\n  [\n   11,\n   24\n  ],\n  [\n   11,\n   24\n  ],\n  [\n   11,\n   25\n  ],\n  [\n   11,\n   25\n  ],\n  [\n   11,\n   25\n  ],\n  [\n   11,\n   25\n  ],\n  [\n   13,\n   1664\n  ],\n  [\n   13,\n   1728\n  ],\n  [\n   12,\n   320\n  ],\n  [\n   12,\n   320\n  ],\n  [\n   12,\n   384\n  ],\n  [\n   12,\n   384\n  ],\n  [\n   12,\n   448\n  ],\n  [\n   12,\n   448\n  ],\n  [\n   13,\n   512\n  ],\n  [\n   13,\n   576\n  ],\n  [\n   12,\n   53\n  ],\n  [\n   12,\n   53\n  ],\n  [\n   12,\n   54\n  ],\n  [\n   12,\n   54\n  ],\n  [\n   13,\n   896\n  ],\n  [\n   13,\n   960\n  ],\n  [\n   13,\n   1024\n  ],\n  [\n   13,\n   1088\n  ],\n  [\n   13,\n   1152\n  ],\n  [\n   13,\n   1216\n  ],\n  [\n   10,\n   64\n  ],\n  [\n   10,\n   64\n  ],\n  [\n   10,\n   64\n  ],\n  [\n   10,\n   64\n  ],\n  [\n   10,\n   64\n  ],\n  [\n   10,\n   64\n  ],\n  [\n   10,\n   64\n  ],\n  [\n   10,\n   64\n  ]\n ];\n var blackTable2 = [\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   11,\n   23\n  ],\n  [\n   11,\n   23\n  ],\n  [\n   12,\n   50\n  ],\n  [\n   12,\n   51\n  ],\n  [\n   12,\n   44\n  ],\n  [\n   12,\n   45\n  ],\n  [\n   12,\n   46\n  ],\n  [\n   12,\n   47\n  ],\n  [\n   12,\n   57\n  ],\n  [\n   12,\n   58\n  ],\n  [\n   12,\n   61\n  ],\n  [\n   12,\n   256\n  ],\n  [\n   10,\n   16\n  ],\n  [\n   10,\n   16\n  ],\n  [\n   10,\n   16\n  ],\n  [\n   10,\n   16\n  ],\n  [\n   10,\n   17\n  ],\n  [\n   10,\n   17\n  ],\n  [\n   10,\n   17\n  ],\n  [\n   10,\n   17\n  ],\n  [\n   12,\n   48\n  ],\n  [\n   12,\n   49\n  ],\n  [\n   12,\n   62\n  ],\n  [\n   12,\n   63\n  ],\n  [\n   12,\n   30\n  ],\n  [\n   12,\n   31\n  ],\n  [\n   12,\n   32\n  ],\n  [\n   12,\n   33\n  ],\n  [\n   12,\n   40\n  ],\n  [\n   12,\n   41\n  ],\n  [\n   11,\n   22\n  ],\n  [\n   11,\n   22\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   9,\n   15\n  ],\n  [\n   9,\n   15\n  ],\n  [\n   9,\n   15\n  ],\n  [\n   9,\n   15\n  ],\n  [\n   9,\n   15\n  ],\n  [\n   9,\n   15\n  ],\n  [\n   9,\n   15\n  ],\n  [\n   9,\n   15\n  ],\n  [\n   12,\n   128\n  ],\n  [\n   12,\n   192\n  ],\n  [\n   12,\n   26\n  ],\n  [\n   12,\n   27\n  ],\n  [\n   12,\n   28\n  ],\n  [\n   12,\n   29\n  ],\n  [\n   11,\n   19\n  ],\n  [\n   11,\n   19\n  ],\n  [\n   11,\n   20\n  ],\n  [\n   11,\n   20\n  ],\n  [\n   12,\n   34\n  ],\n  [\n   12,\n   35\n  ],\n  [\n   12,\n   36\n  ],\n  [\n   12,\n   37\n  ],\n  [\n   12,\n   38\n  ],\n  [\n   12,\n   39\n  ],\n  [\n   11,\n   21\n  ],\n  [\n   11,\n   21\n  ],\n  [\n   12,\n   42\n  ],\n  [\n   12,\n   43\n  ],\n  [\n   10,\n   0\n  ],\n  [\n   10,\n   0\n  ],\n  [\n   10,\n   0\n  ],\n  [\n   10,\n   0\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ]\n ];\n var blackTable3 = [\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   6,\n   9\n  ],\n  [\n   6,\n   8\n  ],\n  [\n   5,\n   7\n  ],\n  [\n   5,\n   7\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   3,\n   1\n  ],\n  [\n   3,\n   1\n  ],\n  [\n   3,\n   1\n  ],\n  [\n   3,\n   1\n  ],\n  [\n   3,\n   1\n  ],\n  [\n   3,\n   1\n  ],\n  [\n   3,\n   1\n  ],\n  [\n   3,\n   1\n  ],\n  [\n   3,\n   4\n  ],\n  [\n   3,\n   4\n  ],\n  [\n   3,\n   4\n  ],\n  [\n   3,\n   4\n  ],\n  [\n   3,\n   4\n  ],\n  [\n   3,\n   4\n  ],\n  [\n   3,\n   4\n  ],\n  [\n   3,\n   4\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ]\n ];\n function CCITTFaxStream(str, maybeLength, params) {\n  this.str = str;\n  this.dict = str.dict;\n  params = params || Dict.empty;\n  this.encoding = params.get('K') || 0;\n  this.eoline = params.get('EndOfLine') || false;\n  this.byteAlign = params.get('EncodedByteAlign') || false;\n  this.columns = params.get('Columns') || 1728;\n  this.rows = params.get('Rows') || 0;\n  var eoblock = params.get('EndOfBlock');\n  if (eoblock === null || eoblock === undefined) {\n   eoblock = true;\n  }\n  this.eoblock = eoblock;\n  this.black = params.get('BlackIs1') || false;\n  this.codingLine = new Uint32Array(this.columns + 1);\n  this.refLine = new Uint32Array(this.columns + 2);\n  this.codingLine[0] = this.columns;\n  this.codingPos = 0;\n  this.row = 0;\n  this.nextLine2D = this.encoding < 0;\n  this.inputBits = 0;\n  this.inputBuf = 0;\n  this.outputBits = 0;\n  var code1;\n  while ((code1 = this.lookBits(12)) === 0) {\n   this.eatBits(1);\n  }\n  if (code1 === 1) {\n   this.eatBits(12);\n  }\n  if (this.encoding > 0) {\n   this.nextLine2D = !this.lookBits(1);\n   this.eatBits(1);\n  }\n  DecodeStream.call(this, maybeLength);\n }\n CCITTFaxStream.prototype = Object.create(DecodeStream.prototype);\n CCITTFaxStream.prototype.readBlock = function CCITTFaxStream_readBlock() {\n  while (!this.eof) {\n   var c = this.lookChar();\n   this.ensureBuffer(this.bufferLength + 1);\n   this.buffer[this.bufferLength++] = c;\n  }\n };\n CCITTFaxStream.prototype.addPixels = function ccittFaxStreamAddPixels(a1, blackPixels) {\n  var codingLine = this.codingLine;\n  var codingPos = this.codingPos;\n  if (a1 > codingLine[codingPos]) {\n   if (a1 > this.columns) {\n    info('row is wrong length');\n    this.err = true;\n    a1 = this.columns;\n   }\n   if (codingPos & 1 ^ blackPixels) {\n    ++codingPos;\n   }\n   codingLine[codingPos] = a1;\n  }\n  this.codingPos = codingPos;\n };\n CCITTFaxStream.prototype.addPixelsNeg = function ccittFaxStreamAddPixelsNeg(a1, blackPixels) {\n  var codingLine = this.codingLine;\n  var codingPos = this.codingPos;\n  if (a1 > codingLine[codingPos]) {\n   if (a1 > this.columns) {\n    info('row is wrong length');\n    this.err = true;\n    a1 = this.columns;\n   }\n   if (codingPos & 1 ^ blackPixels) {\n    ++codingPos;\n   }\n   codingLine[codingPos] = a1;\n  } else if (a1 < codingLine[codingPos]) {\n   if (a1 < 0) {\n    info('invalid code');\n    this.err = true;\n    a1 = 0;\n   }\n   while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n    --codingPos;\n   }\n   codingLine[codingPos] = a1;\n  }\n  this.codingPos = codingPos;\n };\n CCITTFaxStream.prototype.lookChar = function CCITTFaxStream_lookChar() {\n  var refLine = this.refLine;\n  var codingLine = this.codingLine;\n  var columns = this.columns;\n  var refPos, blackPixels, bits, i;\n  if (this.outputBits === 0) {\n   if (this.eof) {\n    return null;\n   }\n   this.err = false;\n   var code1, code2, code3;\n   if (this.nextLine2D) {\n    for (i = 0; codingLine[i] < columns; ++i) {\n     refLine[i] = codingLine[i];\n    }\n    refLine[i++] = columns;\n    refLine[i] = columns;\n    codingLine[0] = 0;\n    this.codingPos = 0;\n    refPos = 0;\n    blackPixels = 0;\n    while (codingLine[this.codingPos] < columns) {\n     code1 = this.getTwoDimCode();\n     switch (code1) {\n     case twoDimPass:\n      this.addPixels(refLine[refPos + 1], blackPixels);\n      if (refLine[refPos + 1] < columns) {\n       refPos += 2;\n      }\n      break;\n     case twoDimHoriz:\n      code1 = code2 = 0;\n      if (blackPixels) {\n       do {\n        code1 += code3 = this.getBlackCode();\n       } while (code3 >= 64);\n       do {\n        code2 += code3 = this.getWhiteCode();\n       } while (code3 >= 64);\n      } else {\n       do {\n        code1 += code3 = this.getWhiteCode();\n       } while (code3 >= 64);\n       do {\n        code2 += code3 = this.getBlackCode();\n       } while (code3 >= 64);\n      }\n      this.addPixels(codingLine[this.codingPos] + code1, blackPixels);\n      if (codingLine[this.codingPos] < columns) {\n       this.addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\n      }\n      while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n       refPos += 2;\n      }\n      break;\n     case twoDimVertR3:\n      this.addPixels(refLine[refPos] + 3, blackPixels);\n      blackPixels ^= 1;\n      if (codingLine[this.codingPos] < columns) {\n       ++refPos;\n       while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n        refPos += 2;\n       }\n      }\n      break;\n     case twoDimVertR2:\n      this.addPixels(refLine[refPos] + 2, blackPixels);\n      blackPixels ^= 1;\n      if (codingLine[this.codingPos] < columns) {\n       ++refPos;\n       while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n        refPos += 2;\n       }\n      }\n      break;\n     case twoDimVertR1:\n      this.addPixels(refLine[refPos] + 1, blackPixels);\n      blackPixels ^= 1;\n      if (codingLine[this.codingPos] < columns) {\n       ++refPos;\n       while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n        refPos += 2;\n       }\n      }\n      break;\n     case twoDimVert0:\n      this.addPixels(refLine[refPos], blackPixels);\n      blackPixels ^= 1;\n      if (codingLine[this.codingPos] < columns) {\n       ++refPos;\n       while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n        refPos += 2;\n       }\n      }\n      break;\n     case twoDimVertL3:\n      this.addPixelsNeg(refLine[refPos] - 3, blackPixels);\n      blackPixels ^= 1;\n      if (codingLine[this.codingPos] < columns) {\n       if (refPos > 0) {\n        --refPos;\n       } else {\n        ++refPos;\n       }\n       while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n        refPos += 2;\n       }\n      }\n      break;\n     case twoDimVertL2:\n      this.addPixelsNeg(refLine[refPos] - 2, blackPixels);\n      blackPixels ^= 1;\n      if (codingLine[this.codingPos] < columns) {\n       if (refPos > 0) {\n        --refPos;\n       } else {\n        ++refPos;\n       }\n       while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n        refPos += 2;\n       }\n      }\n      break;\n     case twoDimVertL1:\n      this.addPixelsNeg(refLine[refPos] - 1, blackPixels);\n      blackPixels ^= 1;\n      if (codingLine[this.codingPos] < columns) {\n       if (refPos > 0) {\n        --refPos;\n       } else {\n        ++refPos;\n       }\n       while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n        refPos += 2;\n       }\n      }\n      break;\n     case ccittEOF:\n      this.addPixels(columns, 0);\n      this.eof = true;\n      break;\n     default:\n      info('bad 2d code');\n      this.addPixels(columns, 0);\n      this.err = true;\n     }\n    }\n   } else {\n    codingLine[0] = 0;\n    this.codingPos = 0;\n    blackPixels = 0;\n    while (codingLine[this.codingPos] < columns) {\n     code1 = 0;\n     if (blackPixels) {\n      do {\n       code1 += code3 = this.getBlackCode();\n      } while (code3 >= 64);\n     } else {\n      do {\n       code1 += code3 = this.getWhiteCode();\n      } while (code3 >= 64);\n     }\n     this.addPixels(codingLine[this.codingPos] + code1, blackPixels);\n     blackPixels ^= 1;\n    }\n   }\n   var gotEOL = false;\n   if (this.byteAlign) {\n    this.inputBits &= ~7;\n   }\n   if (!this.eoblock && this.row === this.rows - 1) {\n    this.eof = true;\n   } else {\n    code1 = this.lookBits(12);\n    if (this.eoline) {\n     while (code1 !== ccittEOF && code1 !== 1) {\n      this.eatBits(1);\n      code1 = this.lookBits(12);\n     }\n    } else {\n     while (code1 === 0) {\n      this.eatBits(1);\n      code1 = this.lookBits(12);\n     }\n    }\n    if (code1 === 1) {\n     this.eatBits(12);\n     gotEOL = true;\n    } else if (code1 === ccittEOF) {\n     this.eof = true;\n    }\n   }\n   if (!this.eof && this.encoding > 0) {\n    this.nextLine2D = !this.lookBits(1);\n    this.eatBits(1);\n   }\n   if (this.eoblock && gotEOL && this.byteAlign) {\n    code1 = this.lookBits(12);\n    if (code1 === 1) {\n     this.eatBits(12);\n     if (this.encoding > 0) {\n      this.lookBits(1);\n      this.eatBits(1);\n     }\n     if (this.encoding >= 0) {\n      for (i = 0; i < 4; ++i) {\n       code1 = this.lookBits(12);\n       if (code1 !== 1) {\n        info('bad rtc code: ' + code1);\n       }\n       this.eatBits(12);\n       if (this.encoding > 0) {\n        this.lookBits(1);\n        this.eatBits(1);\n       }\n      }\n     }\n     this.eof = true;\n    }\n   } else if (this.err && this.eoline) {\n    while (true) {\n     code1 = this.lookBits(13);\n     if (code1 === ccittEOF) {\n      this.eof = true;\n      return null;\n     }\n     if (code1 >> 1 === 1) {\n      break;\n     }\n     this.eatBits(1);\n    }\n    this.eatBits(12);\n    if (this.encoding > 0) {\n     this.eatBits(1);\n     this.nextLine2D = !(code1 & 1);\n    }\n   }\n   if (codingLine[0] > 0) {\n    this.outputBits = codingLine[this.codingPos = 0];\n   } else {\n    this.outputBits = codingLine[this.codingPos = 1];\n   }\n   this.row++;\n  }\n  var c;\n  if (this.outputBits >= 8) {\n   c = this.codingPos & 1 ? 0 : 0xFF;\n   this.outputBits -= 8;\n   if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n    this.codingPos++;\n    this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n   }\n  } else {\n   bits = 8;\n   c = 0;\n   do {\n    if (this.outputBits > bits) {\n     c <<= bits;\n     if (!(this.codingPos & 1)) {\n      c |= 0xFF >> 8 - bits;\n     }\n     this.outputBits -= bits;\n     bits = 0;\n    } else {\n     c <<= this.outputBits;\n     if (!(this.codingPos & 1)) {\n      c |= 0xFF >> 8 - this.outputBits;\n     }\n     bits -= this.outputBits;\n     this.outputBits = 0;\n     if (codingLine[this.codingPos] < columns) {\n      this.codingPos++;\n      this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n     } else if (bits > 0) {\n      c <<= bits;\n      bits = 0;\n     }\n    }\n   } while (bits);\n  }\n  if (this.black) {\n   c ^= 0xFF;\n  }\n  return c;\n };\n CCITTFaxStream.prototype.findTableCode = function ccittFaxStreamFindTableCode(start, end, table, limit) {\n  var limitValue = limit || 0;\n  for (var i = start; i <= end; ++i) {\n   var code = this.lookBits(i);\n   if (code === ccittEOF) {\n    return [\n     true,\n     1,\n     false\n    ];\n   }\n   if (i < end) {\n    code <<= end - i;\n   }\n   if (!limitValue || code >= limitValue) {\n    var p = table[code - limitValue];\n    if (p[0] === i) {\n     this.eatBits(i);\n     return [\n      true,\n      p[1],\n      true\n     ];\n    }\n   }\n  }\n  return [\n   false,\n   0,\n   false\n  ];\n };\n CCITTFaxStream.prototype.getTwoDimCode = function ccittFaxStreamGetTwoDimCode() {\n  var code = 0;\n  var p;\n  if (this.eoblock) {\n   code = this.lookBits(7);\n   p = twoDimTable[code];\n   if (p && p[0] > 0) {\n    this.eatBits(p[0]);\n    return p[1];\n   }\n  } else {\n   var result = this.findTableCode(1, 7, twoDimTable);\n   if (result[0] && result[2]) {\n    return result[1];\n   }\n  }\n  info('Bad two dim code');\n  return ccittEOF;\n };\n CCITTFaxStream.prototype.getWhiteCode = function ccittFaxStreamGetWhiteCode() {\n  var code = 0;\n  var p;\n  if (this.eoblock) {\n   code = this.lookBits(12);\n   if (code === ccittEOF) {\n    return 1;\n   }\n   if (code >> 5 === 0) {\n    p = whiteTable1[code];\n   } else {\n    p = whiteTable2[code >> 3];\n   }\n   if (p[0] > 0) {\n    this.eatBits(p[0]);\n    return p[1];\n   }\n  } else {\n   var result = this.findTableCode(1, 9, whiteTable2);\n   if (result[0]) {\n    return result[1];\n   }\n   result = this.findTableCode(11, 12, whiteTable1);\n   if (result[0]) {\n    return result[1];\n   }\n  }\n  info('bad white code');\n  this.eatBits(1);\n  return 1;\n };\n CCITTFaxStream.prototype.getBlackCode = function ccittFaxStreamGetBlackCode() {\n  var code, p;\n  if (this.eoblock) {\n   code = this.lookBits(13);\n   if (code === ccittEOF) {\n    return 1;\n   }\n   if (code >> 7 === 0) {\n    p = blackTable1[code];\n   } else if (code >> 9 === 0 && code >> 7 !== 0) {\n    p = blackTable2[(code >> 1) - 64];\n   } else {\n    p = blackTable3[code >> 7];\n   }\n   if (p[0] > 0) {\n    this.eatBits(p[0]);\n    return p[1];\n   }\n  } else {\n   var result = this.findTableCode(2, 6, blackTable3);\n   if (result[0]) {\n    return result[1];\n   }\n   result = this.findTableCode(7, 12, blackTable2, 64);\n   if (result[0]) {\n    return result[1];\n   }\n   result = this.findTableCode(10, 13, blackTable1);\n   if (result[0]) {\n    return result[1];\n   }\n  }\n  info('bad black code');\n  this.eatBits(1);\n  return 1;\n };\n CCITTFaxStream.prototype.lookBits = function CCITTFaxStream_lookBits(n) {\n  var c;\n  while (this.inputBits < n) {\n   if ((c = this.str.getByte()) === -1) {\n    if (this.inputBits === 0) {\n     return ccittEOF;\n    }\n    return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\n   }\n   this.inputBuf = this.inputBuf << 8 | c;\n   this.inputBits += 8;\n  }\n  return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\n };\n CCITTFaxStream.prototype.eatBits = function CCITTFaxStream_eatBits(n) {\n  if ((this.inputBits -= n) < 0) {\n   this.inputBits = 0;\n  }\n };\n return CCITTFaxStream;\n}();\nvar LZWStream = function LZWStreamClosure() {\n function LZWStream(str, maybeLength, earlyChange) {\n  this.str = str;\n  this.dict = str.dict;\n  this.cachedData = 0;\n  this.bitsCached = 0;\n  var maxLzwDictionarySize = 4096;\n  var lzwState = {\n   earlyChange: earlyChange,\n   codeLength: 9,\n   nextCode: 258,\n   dictionaryValues: new Uint8Array(maxLzwDictionarySize),\n   dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\n   dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\n   currentSequence: new Uint8Array(maxLzwDictionarySize),\n   currentSequenceLength: 0\n  };\n  for (var i = 0; i < 256; ++i) {\n   lzwState.dictionaryValues[i] = i;\n   lzwState.dictionaryLengths[i] = 1;\n  }\n  this.lzwState = lzwState;\n  DecodeStream.call(this, maybeLength);\n }\n LZWStream.prototype = Object.create(DecodeStream.prototype);\n LZWStream.prototype.readBits = function LZWStream_readBits(n) {\n  var bitsCached = this.bitsCached;\n  var cachedData = this.cachedData;\n  while (bitsCached < n) {\n   var c = this.str.getByte();\n   if (c === -1) {\n    this.eof = true;\n    return null;\n   }\n   cachedData = cachedData << 8 | c;\n   bitsCached += 8;\n  }\n  this.bitsCached = bitsCached -= n;\n  this.cachedData = cachedData;\n  this.lastCode = null;\n  return cachedData >>> bitsCached & (1 << n) - 1;\n };\n LZWStream.prototype.readBlock = function LZWStream_readBlock() {\n  var blockSize = 512;\n  var estimatedDecodedSize = blockSize * 2, decodedSizeDelta = blockSize;\n  var i, j, q;\n  var lzwState = this.lzwState;\n  if (!lzwState) {\n   return;\n  }\n  var earlyChange = lzwState.earlyChange;\n  var nextCode = lzwState.nextCode;\n  var dictionaryValues = lzwState.dictionaryValues;\n  var dictionaryLengths = lzwState.dictionaryLengths;\n  var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\n  var codeLength = lzwState.codeLength;\n  var prevCode = lzwState.prevCode;\n  var currentSequence = lzwState.currentSequence;\n  var currentSequenceLength = lzwState.currentSequenceLength;\n  var decodedLength = 0;\n  var currentBufferLength = this.bufferLength;\n  var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n  for (i = 0; i < blockSize; i++) {\n   var code = this.readBits(codeLength);\n   var hasPrev = currentSequenceLength > 0;\n   if (code < 256) {\n    currentSequence[0] = code;\n    currentSequenceLength = 1;\n   } else if (code >= 258) {\n    if (code < nextCode) {\n     currentSequenceLength = dictionaryLengths[code];\n     for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\n      currentSequence[j] = dictionaryValues[q];\n      q = dictionaryPrevCodes[q];\n     }\n    } else {\n     currentSequence[currentSequenceLength++] = currentSequence[0];\n    }\n   } else if (code === 256) {\n    codeLength = 9;\n    nextCode = 258;\n    currentSequenceLength = 0;\n    continue;\n   } else {\n    this.eof = true;\n    delete this.lzwState;\n    break;\n   }\n   if (hasPrev) {\n    dictionaryPrevCodes[nextCode] = prevCode;\n    dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\n    dictionaryValues[nextCode] = currentSequence[0];\n    nextCode++;\n    codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\n   }\n   prevCode = code;\n   decodedLength += currentSequenceLength;\n   if (estimatedDecodedSize < decodedLength) {\n    do {\n     estimatedDecodedSize += decodedSizeDelta;\n    } while (estimatedDecodedSize < decodedLength);\n    buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n   }\n   for (j = 0; j < currentSequenceLength; j++) {\n    buffer[currentBufferLength++] = currentSequence[j];\n   }\n  }\n  lzwState.nextCode = nextCode;\n  lzwState.codeLength = codeLength;\n  lzwState.prevCode = prevCode;\n  lzwState.currentSequenceLength = currentSequenceLength;\n  this.bufferLength = currentBufferLength;\n };\n return LZWStream;\n}();\nvar NullStream = function NullStreamClosure() {\n function NullStream() {\n  Stream.call(this, new Uint8Array(0));\n }\n NullStream.prototype = Stream.prototype;\n return NullStream;\n}();\nexports.Ascii85Stream = Ascii85Stream;\nexports.AsciiHexStream = AsciiHexStream;\nexports.CCITTFaxStream = CCITTFaxStream;\nexports.DecryptStream = DecryptStream;\nexports.DecodeStream = DecodeStream;\nexports.FlateStream = FlateStream;\nexports.Jbig2Stream = Jbig2Stream;\nexports.JpegStream = JpegStream;\nexports.JpxStream = JpxStream;\nexports.NullStream = NullStream;\nexports.PredictorStream = PredictorStream;\nexports.RunLengthStream = RunLengthStream;\nexports.Stream = Stream;\nexports.StreamsSequenceStream = StreamsSequenceStream;\nexports.StringStream = StringStream;\nexports.LZWStream = LZWStream;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar coreFunction = __w_pdfjs_require__(6);\nvar error = sharedUtil.error;\nvar info = sharedUtil.info;\nvar isArray = sharedUtil.isArray;\nvar isString = sharedUtil.isString;\nvar shadow = sharedUtil.shadow;\nvar warn = sharedUtil.warn;\nvar isDict = corePrimitives.isDict;\nvar isName = corePrimitives.isName;\nvar isStream = corePrimitives.isStream;\nvar PDFFunction = coreFunction.PDFFunction;\nvar ColorSpace = function ColorSpaceClosure() {\n function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {\n  var COMPONENTS = 3;\n  alpha01 = alpha01 !== 1 ? 0 : alpha01;\n  var xRatio = w1 / w2;\n  var yRatio = h1 / h2;\n  var i, j, py, newIndex = 0, oldIndex;\n  var xScaled = new Uint16Array(w2);\n  var w1Scanline = w1 * COMPONENTS;\n  for (i = 0; i < w2; i++) {\n   xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\n  }\n  for (i = 0; i < h2; i++) {\n   py = Math.floor(i * yRatio) * w1Scanline;\n   for (j = 0; j < w2; j++) {\n    oldIndex = py + xScaled[j];\n    dest[newIndex++] = src[oldIndex++];\n    dest[newIndex++] = src[oldIndex++];\n    dest[newIndex++] = src[oldIndex++];\n    newIndex += alpha01;\n   }\n  }\n }\n function ColorSpace() {\n  error('should not call ColorSpace constructor');\n }\n ColorSpace.prototype = {\n  getRgb: function ColorSpace_getRgb(src, srcOffset) {\n   var rgb = new Uint8Array(3);\n   this.getRgbItem(src, srcOffset, rgb, 0);\n   return rgb;\n  },\n  getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {\n   error('Should not call ColorSpace.getRgbItem');\n  },\n  getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n   error('Should not call ColorSpace.getRgbBuffer');\n  },\n  getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {\n   error('Should not call ColorSpace.getOutputLength');\n  },\n  isPassthrough: function ColorSpace_isPassthrough(bits) {\n   return false;\n  },\n  fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\n   var count = originalWidth * originalHeight;\n   var rgbBuf = null;\n   var numComponentColors = 1 << bpc;\n   var needsResizing = originalHeight !== height || originalWidth !== width;\n   var i, ii;\n   if (this.isPassthrough(bpc)) {\n    rgbBuf = comps;\n   } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\n    var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\n    var key;\n    for (i = 0; i < numComponentColors; i++) {\n     allColors[i] = i;\n    }\n    var colorMap = new Uint8Array(numComponentColors * 3);\n    this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\n    var destPos, rgbPos;\n    if (!needsResizing) {\n     destPos = 0;\n     for (i = 0; i < count; ++i) {\n      key = comps[i] * 3;\n      dest[destPos++] = colorMap[key];\n      dest[destPos++] = colorMap[key + 1];\n      dest[destPos++] = colorMap[key + 2];\n      destPos += alpha01;\n     }\n    } else {\n     rgbBuf = new Uint8Array(count * 3);\n     rgbPos = 0;\n     for (i = 0; i < count; ++i) {\n      key = comps[i] * 3;\n      rgbBuf[rgbPos++] = colorMap[key];\n      rgbBuf[rgbPos++] = colorMap[key + 1];\n      rgbBuf[rgbPos++] = colorMap[key + 2];\n     }\n    }\n   } else {\n    if (!needsResizing) {\n     this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\n    } else {\n     rgbBuf = new Uint8Array(count * 3);\n     this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\n    }\n   }\n   if (rgbBuf) {\n    if (needsResizing) {\n     resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);\n    } else {\n     rgbPos = 0;\n     destPos = 0;\n     for (i = 0, ii = width * actualHeight; i < ii; i++) {\n      dest[destPos++] = rgbBuf[rgbPos++];\n      dest[destPos++] = rgbBuf[rgbPos++];\n      dest[destPos++] = rgbBuf[rgbPos++];\n      destPos += alpha01;\n     }\n    }\n   }\n  },\n  usesZeroToOneRange: true\n };\n ColorSpace.parse = function ColorSpace_parse(cs, xref, res) {\n  var IR = ColorSpace.parseToIR(cs, xref, res);\n  if (IR instanceof AlternateCS) {\n   return IR;\n  }\n  return ColorSpace.fromIR(IR);\n };\n ColorSpace.fromIR = function ColorSpace_fromIR(IR) {\n  var name = isArray(IR) ? IR[0] : IR;\n  var whitePoint, blackPoint, gamma;\n  switch (name) {\n  case 'DeviceGrayCS':\n   return this.singletons.gray;\n  case 'DeviceRgbCS':\n   return this.singletons.rgb;\n  case 'DeviceCmykCS':\n   return this.singletons.cmyk;\n  case 'CalGrayCS':\n   whitePoint = IR[1];\n   blackPoint = IR[2];\n   gamma = IR[3];\n   return new CalGrayCS(whitePoint, blackPoint, gamma);\n  case 'CalRGBCS':\n   whitePoint = IR[1];\n   blackPoint = IR[2];\n   gamma = IR[3];\n   var matrix = IR[4];\n   return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\n  case 'PatternCS':\n   var basePatternCS = IR[1];\n   if (basePatternCS) {\n    basePatternCS = ColorSpace.fromIR(basePatternCS);\n   }\n   return new PatternCS(basePatternCS);\n  case 'IndexedCS':\n   var baseIndexedCS = IR[1];\n   var hiVal = IR[2];\n   var lookup = IR[3];\n   return new IndexedCS(ColorSpace.fromIR(baseIndexedCS), hiVal, lookup);\n  case 'AlternateCS':\n   var numComps = IR[1];\n   var alt = IR[2];\n   var tintFnIR = IR[3];\n   return new AlternateCS(numComps, ColorSpace.fromIR(alt), PDFFunction.fromIR(tintFnIR));\n  case 'LabCS':\n   whitePoint = IR[1];\n   blackPoint = IR[2];\n   var range = IR[3];\n   return new LabCS(whitePoint, blackPoint, range);\n  default:\n   error('Unknown name ' + name);\n  }\n  return null;\n };\n ColorSpace.parseToIR = function ColorSpace_parseToIR(cs, xref, res) {\n  if (isName(cs)) {\n   var colorSpaces = res.get('ColorSpace');\n   if (isDict(colorSpaces)) {\n    var refcs = colorSpaces.get(cs.name);\n    if (refcs) {\n     cs = refcs;\n    }\n   }\n  }\n  cs = xref.fetchIfRef(cs);\n  if (isName(cs)) {\n   switch (cs.name) {\n   case 'DeviceGray':\n   case 'G':\n    return 'DeviceGrayCS';\n   case 'DeviceRGB':\n   case 'RGB':\n    return 'DeviceRgbCS';\n   case 'DeviceCMYK':\n   case 'CMYK':\n    return 'DeviceCmykCS';\n   case 'Pattern':\n    return [\n     'PatternCS',\n     null\n    ];\n   default:\n    error('unrecognized colorspace ' + cs.name);\n   }\n  } else if (isArray(cs)) {\n   var mode = xref.fetchIfRef(cs[0]).name;\n   var numComps, params, alt, whitePoint, blackPoint, gamma;\n   switch (mode) {\n   case 'DeviceGray':\n   case 'G':\n    return 'DeviceGrayCS';\n   case 'DeviceRGB':\n   case 'RGB':\n    return 'DeviceRgbCS';\n   case 'DeviceCMYK':\n   case 'CMYK':\n    return 'DeviceCmykCS';\n   case 'CalGray':\n    params = xref.fetchIfRef(cs[1]);\n    whitePoint = params.getArray('WhitePoint');\n    blackPoint = params.getArray('BlackPoint');\n    gamma = params.get('Gamma');\n    return [\n     'CalGrayCS',\n     whitePoint,\n     blackPoint,\n     gamma\n    ];\n   case 'CalRGB':\n    params = xref.fetchIfRef(cs[1]);\n    whitePoint = params.getArray('WhitePoint');\n    blackPoint = params.getArray('BlackPoint');\n    gamma = params.getArray('Gamma');\n    var matrix = params.getArray('Matrix');\n    return [\n     'CalRGBCS',\n     whitePoint,\n     blackPoint,\n     gamma,\n     matrix\n    ];\n   case 'ICCBased':\n    var stream = xref.fetchIfRef(cs[1]);\n    var dict = stream.dict;\n    numComps = dict.get('N');\n    alt = dict.get('Alternate');\n    if (alt) {\n     var altIR = ColorSpace.parseToIR(alt, xref, res);\n     var altCS = ColorSpace.fromIR(altIR);\n     if (altCS.numComps === numComps) {\n      return altIR;\n     }\n     warn('ICCBased color space: Ignoring incorrect /Alternate entry.');\n    }\n    if (numComps === 1) {\n     return 'DeviceGrayCS';\n    } else if (numComps === 3) {\n     return 'DeviceRgbCS';\n    } else if (numComps === 4) {\n     return 'DeviceCmykCS';\n    }\n    break;\n   case 'Pattern':\n    var basePatternCS = cs[1] || null;\n    if (basePatternCS) {\n     basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res);\n    }\n    return [\n     'PatternCS',\n     basePatternCS\n    ];\n   case 'Indexed':\n   case 'I':\n    var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res);\n    var hiVal = xref.fetchIfRef(cs[2]) + 1;\n    var lookup = xref.fetchIfRef(cs[3]);\n    if (isStream(lookup)) {\n     lookup = lookup.getBytes();\n    }\n    return [\n     'IndexedCS',\n     baseIndexedCS,\n     hiVal,\n     lookup\n    ];\n   case 'Separation':\n   case 'DeviceN':\n    var name = xref.fetchIfRef(cs[1]);\n    numComps = isArray(name) ? name.length : 1;\n    alt = ColorSpace.parseToIR(cs[2], xref, res);\n    var tintFnIR = PDFFunction.getIR(xref, xref.fetchIfRef(cs[3]));\n    return [\n     'AlternateCS',\n     numComps,\n     alt,\n     tintFnIR\n    ];\n   case 'Lab':\n    params = xref.fetchIfRef(cs[1]);\n    whitePoint = params.getArray('WhitePoint');\n    blackPoint = params.getArray('BlackPoint');\n    var range = params.getArray('Range');\n    return [\n     'LabCS',\n     whitePoint,\n     blackPoint,\n     range\n    ];\n   default:\n    error('unimplemented color space object \"' + mode + '\"');\n   }\n  } else {\n   error('unrecognized color space object: \"' + cs + '\"');\n  }\n  return null;\n };\n ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\n  if (!isArray(decode)) {\n   return true;\n  }\n  if (n * 2 !== decode.length) {\n   warn('The decode map is not the correct length');\n   return true;\n  }\n  for (var i = 0, ii = decode.length; i < ii; i += 2) {\n   if (decode[i] !== 0 || decode[i + 1] !== 1) {\n    return false;\n   }\n  }\n  return true;\n };\n ColorSpace.singletons = {\n  get gray() {\n   return shadow(this, 'gray', new DeviceGrayCS());\n  },\n  get rgb() {\n   return shadow(this, 'rgb', new DeviceRgbCS());\n  },\n  get cmyk() {\n   return shadow(this, 'cmyk', new DeviceCmykCS());\n  }\n };\n return ColorSpace;\n}();\nvar AlternateCS = function AlternateCSClosure() {\n function AlternateCS(numComps, base, tintFn) {\n  this.name = 'Alternate';\n  this.numComps = numComps;\n  this.defaultColor = new Float32Array(numComps);\n  for (var i = 0; i < numComps; ++i) {\n   this.defaultColor[i] = 1;\n  }\n  this.base = base;\n  this.tintFn = tintFn;\n  this.tmpBuf = new Float32Array(base.numComps);\n }\n AlternateCS.prototype = {\n  getRgb: ColorSpace.prototype.getRgb,\n  getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {\n   var tmpBuf = this.tmpBuf;\n   this.tintFn(src, srcOffset, tmpBuf, 0);\n   this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\n  },\n  getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n   var tintFn = this.tintFn;\n   var base = this.base;\n   var scale = 1 / ((1 << bits) - 1);\n   var baseNumComps = base.numComps;\n   var usesZeroToOneRange = base.usesZeroToOneRange;\n   var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\n   var pos = isPassthrough ? destOffset : 0;\n   var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\n   var numComps = this.numComps;\n   var scaled = new Float32Array(numComps);\n   var tinted = new Float32Array(baseNumComps);\n   var i, j;\n   for (i = 0; i < count; i++) {\n    for (j = 0; j < numComps; j++) {\n     scaled[j] = src[srcOffset++] * scale;\n    }\n    tintFn(scaled, 0, tinted, 0);\n    if (usesZeroToOneRange) {\n     for (j = 0; j < baseNumComps; j++) {\n      baseBuf[pos++] = tinted[j] * 255;\n     }\n    } else {\n     base.getRgbItem(tinted, 0, baseBuf, pos);\n     pos += baseNumComps;\n    }\n   }\n   if (!isPassthrough) {\n    base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\n   }\n  },\n  getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {\n   return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\n  },\n  isPassthrough: ColorSpace.prototype.isPassthrough,\n  fillRgb: ColorSpace.prototype.fillRgb,\n  isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\n   return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n  },\n  usesZeroToOneRange: true\n };\n return AlternateCS;\n}();\nvar PatternCS = function PatternCSClosure() {\n function PatternCS(baseCS) {\n  this.name = 'Pattern';\n  this.base = baseCS;\n }\n PatternCS.prototype = {};\n return PatternCS;\n}();\nvar IndexedCS = function IndexedCSClosure() {\n function IndexedCS(base, highVal, lookup) {\n  this.name = 'Indexed';\n  this.numComps = 1;\n  this.defaultColor = new Uint8Array(this.numComps);\n  this.base = base;\n  this.highVal = highVal;\n  var baseNumComps = base.numComps;\n  var length = baseNumComps * highVal;\n  if (isStream(lookup)) {\n   this.lookup = new Uint8Array(length);\n   var bytes = lookup.getBytes(length);\n   this.lookup.set(bytes);\n  } else if (isString(lookup)) {\n   this.lookup = new Uint8Array(length);\n   for (var i = 0; i < length; ++i) {\n    this.lookup[i] = lookup.charCodeAt(i);\n   }\n  } else if (lookup instanceof Uint8Array || lookup instanceof Array) {\n   this.lookup = lookup;\n  } else {\n   error('Unrecognized lookup table: ' + lookup);\n  }\n }\n IndexedCS.prototype = {\n  getRgb: ColorSpace.prototype.getRgb,\n  getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {\n   var numComps = this.base.numComps;\n   var start = src[srcOffset] * numComps;\n   this.base.getRgbItem(this.lookup, start, dest, destOffset);\n  },\n  getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n   var base = this.base;\n   var numComps = base.numComps;\n   var outputDelta = base.getOutputLength(numComps, alpha01);\n   var lookup = this.lookup;\n   for (var i = 0; i < count; ++i) {\n    var lookupPos = src[srcOffset++] * numComps;\n    base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\n    destOffset += outputDelta;\n   }\n  },\n  getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\n   return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\n  },\n  isPassthrough: ColorSpace.prototype.isPassthrough,\n  fillRgb: ColorSpace.prototype.fillRgb,\n  isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\n   return true;\n  },\n  usesZeroToOneRange: true\n };\n return IndexedCS;\n}();\nvar DeviceGrayCS = function DeviceGrayCSClosure() {\n function DeviceGrayCS() {\n  this.name = 'DeviceGray';\n  this.numComps = 1;\n  this.defaultColor = new Float32Array(this.numComps);\n }\n DeviceGrayCS.prototype = {\n  getRgb: ColorSpace.prototype.getRgb,\n  getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n   var c = src[srcOffset] * 255 | 0;\n   c = c < 0 ? 0 : c > 255 ? 255 : c;\n   dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\n  },\n  getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n   var scale = 255 / ((1 << bits) - 1);\n   var j = srcOffset, q = destOffset;\n   for (var i = 0; i < count; ++i) {\n    var c = scale * src[j++] | 0;\n    dest[q++] = c;\n    dest[q++] = c;\n    dest[q++] = c;\n    q += alpha01;\n   }\n  },\n  getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {\n   return inputLength * (3 + alpha01);\n  },\n  isPassthrough: ColorSpace.prototype.isPassthrough,\n  fillRgb: ColorSpace.prototype.fillRgb,\n  isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\n   return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n  },\n  usesZeroToOneRange: true\n };\n return DeviceGrayCS;\n}();\nvar DeviceRgbCS = function DeviceRgbCSClosure() {\n function DeviceRgbCS() {\n  this.name = 'DeviceRGB';\n  this.numComps = 3;\n  this.defaultColor = new Float32Array(this.numComps);\n }\n DeviceRgbCS.prototype = {\n  getRgb: ColorSpace.prototype.getRgb,\n  getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {\n   var r = src[srcOffset] * 255 | 0;\n   var g = src[srcOffset + 1] * 255 | 0;\n   var b = src[srcOffset + 2] * 255 | 0;\n   dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\n   dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\n   dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\n  },\n  getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n   if (bits === 8 && alpha01 === 0) {\n    dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\n    return;\n   }\n   var scale = 255 / ((1 << bits) - 1);\n   var j = srcOffset, q = destOffset;\n   for (var i = 0; i < count; ++i) {\n    dest[q++] = scale * src[j++] | 0;\n    dest[q++] = scale * src[j++] | 0;\n    dest[q++] = scale * src[j++] | 0;\n    q += alpha01;\n   }\n  },\n  getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {\n   return inputLength * (3 + alpha01) / 3 | 0;\n  },\n  isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\n   return bits === 8;\n  },\n  fillRgb: ColorSpace.prototype.fillRgb,\n  isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\n   return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n  },\n  usesZeroToOneRange: true\n };\n return DeviceRgbCS;\n}();\nvar DeviceCmykCS = function DeviceCmykCSClosure() {\n function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\n  var c = src[srcOffset + 0] * srcScale;\n  var m = src[srcOffset + 1] * srcScale;\n  var y = src[srcOffset + 2] * srcScale;\n  var k = src[srcOffset + 3] * srcScale;\n  var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;\n  var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;\n  var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;\n  dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\n  dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n  dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n }\n function DeviceCmykCS() {\n  this.name = 'DeviceCMYK';\n  this.numComps = 4;\n  this.defaultColor = new Float32Array(this.numComps);\n  this.defaultColor[3] = 1;\n }\n DeviceCmykCS.prototype = {\n  getRgb: ColorSpace.prototype.getRgb,\n  getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {\n   convertToRgb(src, srcOffset, 1, dest, destOffset);\n  },\n  getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n   var scale = 1 / ((1 << bits) - 1);\n   for (var i = 0; i < count; i++) {\n    convertToRgb(src, srcOffset, scale, dest, destOffset);\n    srcOffset += 4;\n    destOffset += 3 + alpha01;\n   }\n  },\n  getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {\n   return inputLength / 4 * (3 + alpha01) | 0;\n  },\n  isPassthrough: ColorSpace.prototype.isPassthrough,\n  fillRgb: ColorSpace.prototype.fillRgb,\n  isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\n   return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n  },\n  usesZeroToOneRange: true\n };\n return DeviceCmykCS;\n}();\nvar CalGrayCS = function CalGrayCSClosure() {\n function CalGrayCS(whitePoint, blackPoint, gamma) {\n  this.name = 'CalGray';\n  this.numComps = 1;\n  this.defaultColor = new Float32Array(this.numComps);\n  if (!whitePoint) {\n   error('WhitePoint missing - required for color space CalGray');\n  }\n  blackPoint = blackPoint || [\n   0,\n   0,\n   0\n  ];\n  gamma = gamma || 1;\n  this.XW = whitePoint[0];\n  this.YW = whitePoint[1];\n  this.ZW = whitePoint[2];\n  this.XB = blackPoint[0];\n  this.YB = blackPoint[1];\n  this.ZB = blackPoint[2];\n  this.G = gamma;\n  if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n   error('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n  }\n  if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n   info('Invalid BlackPoint for ' + this.name + ', falling back to default');\n   this.XB = this.YB = this.ZB = 0;\n  }\n  if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\n   warn(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');\n  }\n  if (this.G < 1) {\n   info('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');\n   this.G = 1;\n  }\n }\n function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n  var A = src[srcOffset] * scale;\n  var AG = Math.pow(A, cs.G);\n  var L = cs.YW * AG;\n  var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\n  dest[destOffset] = val;\n  dest[destOffset + 1] = val;\n  dest[destOffset + 2] = val;\n }\n CalGrayCS.prototype = {\n  getRgb: ColorSpace.prototype.getRgb,\n  getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n   convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n  },\n  getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n   var scale = 1 / ((1 << bits) - 1);\n   for (var i = 0; i < count; ++i) {\n    convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n    srcOffset += 1;\n    destOffset += 3 + alpha01;\n   }\n  },\n  getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\n   return inputLength * (3 + alpha01);\n  },\n  isPassthrough: ColorSpace.prototype.isPassthrough,\n  fillRgb: ColorSpace.prototype.fillRgb,\n  isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\n   return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n  },\n  usesZeroToOneRange: true\n };\n return CalGrayCS;\n}();\nvar CalRGBCS = function CalRGBCSClosure() {\n var BRADFORD_SCALE_MATRIX = new Float32Array([\n  0.8951,\n  0.2664,\n  -0.1614,\n  -0.7502,\n  1.7135,\n  0.0367,\n  0.0389,\n  -0.0685,\n  1.0296\n ]);\n var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([\n  0.9869929,\n  -0.1470543,\n  0.1599627,\n  0.4323053,\n  0.5183603,\n  0.0492912,\n  -0.0085287,\n  0.0400428,\n  0.9684867\n ]);\n var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([\n  3.2404542,\n  -1.5371385,\n  -0.4985314,\n  -0.9692660,\n  1.8760108,\n  0.0415560,\n  0.0556434,\n  -0.2040259,\n  1.0572252\n ]);\n var FLAT_WHITEPOINT_MATRIX = new Float32Array([\n  1,\n  1,\n  1\n ]);\n var tempNormalizeMatrix = new Float32Array(3);\n var tempConvertMatrix1 = new Float32Array(3);\n var tempConvertMatrix2 = new Float32Array(3);\n var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\n function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\n  this.name = 'CalRGB';\n  this.numComps = 3;\n  this.defaultColor = new Float32Array(this.numComps);\n  if (!whitePoint) {\n   error('WhitePoint missing - required for color space CalRGB');\n  }\n  blackPoint = blackPoint || new Float32Array(3);\n  gamma = gamma || new Float32Array([\n   1,\n   1,\n   1\n  ]);\n  matrix = matrix || new Float32Array([\n   1,\n   0,\n   0,\n   0,\n   1,\n   0,\n   0,\n   0,\n   1\n  ]);\n  var XW = whitePoint[0];\n  var YW = whitePoint[1];\n  var ZW = whitePoint[2];\n  this.whitePoint = whitePoint;\n  var XB = blackPoint[0];\n  var YB = blackPoint[1];\n  var ZB = blackPoint[2];\n  this.blackPoint = blackPoint;\n  this.GR = gamma[0];\n  this.GG = gamma[1];\n  this.GB = gamma[2];\n  this.MXA = matrix[0];\n  this.MYA = matrix[1];\n  this.MZA = matrix[2];\n  this.MXB = matrix[3];\n  this.MYB = matrix[4];\n  this.MZB = matrix[5];\n  this.MXC = matrix[6];\n  this.MYC = matrix[7];\n  this.MZC = matrix[8];\n  if (XW < 0 || ZW < 0 || YW !== 1) {\n   error('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n  }\n  if (XB < 0 || YB < 0 || ZB < 0) {\n   info('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');\n   this.blackPoint = new Float32Array(3);\n  }\n  if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\n   info('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');\n   this.GR = this.GG = this.GB = 1;\n  }\n  if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\n   info('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');\n   this.MXA = this.MYB = this.MZC = 1;\n   this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\n  }\n }\n function matrixProduct(a, b, result) {\n  result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\n  result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\n }\n function convertToFlat(sourceWhitePoint, LMS, result) {\n  result[0] = LMS[0] * 1 / sourceWhitePoint[0];\n  result[1] = LMS[1] * 1 / sourceWhitePoint[1];\n  result[2] = LMS[2] * 1 / sourceWhitePoint[2];\n }\n function convertToD65(sourceWhitePoint, LMS, result) {\n  var D65X = 0.95047;\n  var D65Y = 1;\n  var D65Z = 1.08883;\n  result[0] = LMS[0] * D65X / sourceWhitePoint[0];\n  result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\n  result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\n }\n function sRGBTransferFunction(color) {\n  if (color <= 0.0031308) {\n   return adjustToRange(0, 1, 12.92 * color);\n  }\n  return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\n }\n function adjustToRange(min, max, value) {\n  return Math.max(min, Math.min(max, value));\n }\n function decodeL(L) {\n  if (L < 0) {\n   return -decodeL(-L);\n  }\n  if (L > 8.0) {\n   return Math.pow((L + 16) / 116, 3);\n  }\n  return L * DECODE_L_CONSTANT;\n }\n function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\n  if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\n   result[0] = XYZ_Flat[0];\n   result[1] = XYZ_Flat[1];\n   result[2] = XYZ_Flat[2];\n   return;\n  }\n  var zeroDecodeL = decodeL(0);\n  var X_DST = zeroDecodeL;\n  var X_SRC = decodeL(sourceBlackPoint[0]);\n  var Y_DST = zeroDecodeL;\n  var Y_SRC = decodeL(sourceBlackPoint[1]);\n  var Z_DST = zeroDecodeL;\n  var Z_SRC = decodeL(sourceBlackPoint[2]);\n  var X_Scale = (1 - X_DST) / (1 - X_SRC);\n  var X_Offset = 1 - X_Scale;\n  var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\n  var Y_Offset = 1 - Y_Scale;\n  var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\n  var Z_Offset = 1 - Z_Scale;\n  result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\n  result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\n  result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\n }\n function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\n  if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\n   result[0] = XYZ_In[0];\n   result[1] = XYZ_In[1];\n   result[2] = XYZ_In[2];\n   return;\n  }\n  var LMS = result;\n  matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n  var LMS_Flat = tempNormalizeMatrix;\n  convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\n  matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\n }\n function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\n  var LMS = result;\n  matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n  var LMS_D65 = tempNormalizeMatrix;\n  convertToD65(sourceWhitePoint, LMS, LMS_D65);\n  matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\n }\n function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n  var A = adjustToRange(0, 1, src[srcOffset] * scale);\n  var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\n  var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\n  var AGR = Math.pow(A, cs.GR);\n  var BGG = Math.pow(B, cs.GG);\n  var CGB = Math.pow(C, cs.GB);\n  var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\n  var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\n  var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\n  var XYZ = tempConvertMatrix1;\n  XYZ[0] = X;\n  XYZ[1] = Y;\n  XYZ[2] = Z;\n  var XYZ_Flat = tempConvertMatrix2;\n  normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\n  var XYZ_Black = tempConvertMatrix1;\n  compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\n  var XYZ_D65 = tempConvertMatrix2;\n  normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\n  var SRGB = tempConvertMatrix1;\n  matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\n  var sR = sRGBTransferFunction(SRGB[0]);\n  var sG = sRGBTransferFunction(SRGB[1]);\n  var sB = sRGBTransferFunction(SRGB[2]);\n  dest[destOffset] = Math.round(sR * 255);\n  dest[destOffset + 1] = Math.round(sG * 255);\n  dest[destOffset + 2] = Math.round(sB * 255);\n }\n CalRGBCS.prototype = {\n  getRgb: function CalRGBCS_getRgb(src, srcOffset) {\n   var rgb = new Uint8Array(3);\n   this.getRgbItem(src, srcOffset, rgb, 0);\n   return rgb;\n  },\n  getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {\n   convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n  },\n  getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n   var scale = 1 / ((1 << bits) - 1);\n   for (var i = 0; i < count; ++i) {\n    convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n    srcOffset += 3;\n    destOffset += 3 + alpha01;\n   }\n  },\n  getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\n   return inputLength * (3 + alpha01) / 3 | 0;\n  },\n  isPassthrough: ColorSpace.prototype.isPassthrough,\n  fillRgb: ColorSpace.prototype.fillRgb,\n  isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\n   return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n  },\n  usesZeroToOneRange: true\n };\n return CalRGBCS;\n}();\nvar LabCS = function LabCSClosure() {\n function LabCS(whitePoint, blackPoint, range) {\n  this.name = 'Lab';\n  this.numComps = 3;\n  this.defaultColor = new Float32Array(this.numComps);\n  if (!whitePoint) {\n   error('WhitePoint missing - required for color space Lab');\n  }\n  blackPoint = blackPoint || [\n   0,\n   0,\n   0\n  ];\n  range = range || [\n   -100,\n   100,\n   -100,\n   100\n  ];\n  this.XW = whitePoint[0];\n  this.YW = whitePoint[1];\n  this.ZW = whitePoint[2];\n  this.amin = range[0];\n  this.amax = range[1];\n  this.bmin = range[2];\n  this.bmax = range[3];\n  this.XB = blackPoint[0];\n  this.YB = blackPoint[1];\n  this.ZB = blackPoint[2];\n  if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n   error('Invalid WhitePoint components, no fallback available');\n  }\n  if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n   info('Invalid BlackPoint, falling back to default');\n   this.XB = this.YB = this.ZB = 0;\n  }\n  if (this.amin > this.amax || this.bmin > this.bmax) {\n   info('Invalid Range, falling back to defaults');\n   this.amin = -100;\n   this.amax = 100;\n   this.bmin = -100;\n   this.bmax = 100;\n  }\n }\n function fn_g(x) {\n  var result;\n  if (x >= 6 / 29) {\n   result = x * x * x;\n  } else {\n   result = 108 / 841 * (x - 4 / 29);\n  }\n  return result;\n }\n function decode(value, high1, low2, high2) {\n  return low2 + value * (high2 - low2) / high1;\n }\n function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\n  var Ls = src[srcOffset];\n  var as = src[srcOffset + 1];\n  var bs = src[srcOffset + 2];\n  if (maxVal !== false) {\n   Ls = decode(Ls, maxVal, 0, 100);\n   as = decode(as, maxVal, cs.amin, cs.amax);\n   bs = decode(bs, maxVal, cs.bmin, cs.bmax);\n  }\n  as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\n  bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\n  var M = (Ls + 16) / 116;\n  var L = M + as / 500;\n  var N = M - bs / 200;\n  var X = cs.XW * fn_g(L);\n  var Y = cs.YW * fn_g(M);\n  var Z = cs.ZW * fn_g(N);\n  var r, g, b;\n  if (cs.ZW < 1) {\n   r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\n   g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\n   b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\n  } else {\n   r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\n   g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\n   b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\n  }\n  dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\n  dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\n  dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\n }\n LabCS.prototype = {\n  getRgb: ColorSpace.prototype.getRgb,\n  getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\n   convertToRgb(this, src, srcOffset, false, dest, destOffset);\n  },\n  getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n   var maxVal = (1 << bits) - 1;\n   for (var i = 0; i < count; i++) {\n    convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\n    srcOffset += 3;\n    destOffset += 3 + alpha01;\n   }\n  },\n  getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\n   return inputLength * (3 + alpha01) / 3 | 0;\n  },\n  isPassthrough: ColorSpace.prototype.isPassthrough,\n  fillRgb: ColorSpace.prototype.fillRgb,\n  isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\n   return true;\n  },\n  usesZeroToOneRange: false\n };\n return LabCS;\n}();\nexports.ColorSpace = ColorSpace;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar ExpertEncoding = [\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n 'space',\n 'exclamsmall',\n 'Hungarumlautsmall',\n '',\n 'dollaroldstyle',\n 'dollarsuperior',\n 'ampersandsmall',\n 'Acutesmall',\n 'parenleftsuperior',\n 'parenrightsuperior',\n 'twodotenleader',\n 'onedotenleader',\n 'comma',\n 'hyphen',\n 'period',\n 'fraction',\n 'zerooldstyle',\n 'oneoldstyle',\n 'twooldstyle',\n 'threeoldstyle',\n 'fouroldstyle',\n 'fiveoldstyle',\n 'sixoldstyle',\n 'sevenoldstyle',\n 'eightoldstyle',\n 'nineoldstyle',\n 'colon',\n 'semicolon',\n 'commasuperior',\n 'threequartersemdash',\n 'periodsuperior',\n 'questionsmall',\n '',\n 'asuperior',\n 'bsuperior',\n 'centsuperior',\n 'dsuperior',\n 'esuperior',\n '',\n '',\n 'isuperior',\n '',\n '',\n 'lsuperior',\n 'msuperior',\n 'nsuperior',\n 'osuperior',\n '',\n '',\n 'rsuperior',\n 'ssuperior',\n 'tsuperior',\n '',\n 'ff',\n 'fi',\n 'fl',\n 'ffi',\n 'ffl',\n 'parenleftinferior',\n '',\n 'parenrightinferior',\n 'Circumflexsmall',\n 'hyphensuperior',\n 'Gravesmall',\n 'Asmall',\n 'Bsmall',\n 'Csmall',\n 'Dsmall',\n 'Esmall',\n 'Fsmall',\n 'Gsmall',\n 'Hsmall',\n 'Ismall',\n 'Jsmall',\n 'Ksmall',\n 'Lsmall',\n 'Msmall',\n 'Nsmall',\n 'Osmall',\n 'Psmall',\n 'Qsmall',\n 'Rsmall',\n 'Ssmall',\n 'Tsmall',\n 'Usmall',\n 'Vsmall',\n 'Wsmall',\n 'Xsmall',\n 'Ysmall',\n 'Zsmall',\n 'colonmonetary',\n 'onefitted',\n 'rupiah',\n 'Tildesmall',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n 'exclamdownsmall',\n 'centoldstyle',\n 'Lslashsmall',\n '',\n '',\n 'Scaronsmall',\n 'Zcaronsmall',\n 'Dieresissmall',\n 'Brevesmall',\n 'Caronsmall',\n '',\n 'Dotaccentsmall',\n '',\n '',\n 'Macronsmall',\n '',\n '',\n 'figuredash',\n 'hypheninferior',\n '',\n '',\n 'Ogoneksmall',\n 'Ringsmall',\n 'Cedillasmall',\n '',\n '',\n '',\n 'onequarter',\n 'onehalf',\n 'threequarters',\n 'questiondownsmall',\n 'oneeighth',\n 'threeeighths',\n 'fiveeighths',\n 'seveneighths',\n 'onethird',\n 'twothirds',\n '',\n '',\n 'zerosuperior',\n 'onesuperior',\n 'twosuperior',\n 'threesuperior',\n 'foursuperior',\n 'fivesuperior',\n 'sixsuperior',\n 'sevensuperior',\n 'eightsuperior',\n 'ninesuperior',\n 'zeroinferior',\n 'oneinferior',\n 'twoinferior',\n 'threeinferior',\n 'fourinferior',\n 'fiveinferior',\n 'sixinferior',\n 'seveninferior',\n 'eightinferior',\n 'nineinferior',\n 'centinferior',\n 'dollarinferior',\n 'periodinferior',\n 'commainferior',\n 'Agravesmall',\n 'Aacutesmall',\n 'Acircumflexsmall',\n 'Atildesmall',\n 'Adieresissmall',\n 'Aringsmall',\n 'AEsmall',\n 'Ccedillasmall',\n 'Egravesmall',\n 'Eacutesmall',\n 'Ecircumflexsmall',\n 'Edieresissmall',\n 'Igravesmall',\n 'Iacutesmall',\n 'Icircumflexsmall',\n 'Idieresissmall',\n 'Ethsmall',\n 'Ntildesmall',\n 'Ogravesmall',\n 'Oacutesmall',\n 'Ocircumflexsmall',\n 'Otildesmall',\n 'Odieresissmall',\n 'OEsmall',\n 'Oslashsmall',\n 'Ugravesmall',\n 'Uacutesmall',\n 'Ucircumflexsmall',\n 'Udieresissmall',\n 'Yacutesmall',\n 'Thornsmall',\n 'Ydieresissmall'\n];\nvar MacExpertEncoding = [\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n 'space',\n 'exclamsmall',\n 'Hungarumlautsmall',\n 'centoldstyle',\n 'dollaroldstyle',\n 'dollarsuperior',\n 'ampersandsmall',\n 'Acutesmall',\n 'parenleftsuperior',\n 'parenrightsuperior',\n 'twodotenleader',\n 'onedotenleader',\n 'comma',\n 'hyphen',\n 'period',\n 'fraction',\n 'zerooldstyle',\n 'oneoldstyle',\n 'twooldstyle',\n 'threeoldstyle',\n 'fouroldstyle',\n 'fiveoldstyle',\n 'sixoldstyle',\n 'sevenoldstyle',\n 'eightoldstyle',\n 'nineoldstyle',\n 'colon',\n 'semicolon',\n '',\n 'threequartersemdash',\n '',\n 'questionsmall',\n '',\n '',\n '',\n '',\n 'Ethsmall',\n '',\n '',\n 'onequarter',\n 'onehalf',\n 'threequarters',\n 'oneeighth',\n 'threeeighths',\n 'fiveeighths',\n 'seveneighths',\n 'onethird',\n 'twothirds',\n '',\n '',\n '',\n '',\n '',\n '',\n 'ff',\n 'fi',\n 'fl',\n 'ffi',\n 'ffl',\n 'parenleftinferior',\n '',\n 'parenrightinferior',\n 'Circumflexsmall',\n 'hypheninferior',\n 'Gravesmall',\n 'Asmall',\n 'Bsmall',\n 'Csmall',\n 'Dsmall',\n 'Esmall',\n 'Fsmall',\n 'Gsmall',\n 'Hsmall',\n 'Ismall',\n 'Jsmall',\n 'Ksmall',\n 'Lsmall',\n 'Msmall',\n 'Nsmall',\n 'Osmall',\n 'Psmall',\n 'Qsmall',\n 'Rsmall',\n 'Ssmall',\n 'Tsmall',\n 'Usmall',\n 'Vsmall',\n 'Wsmall',\n 'Xsmall',\n 'Ysmall',\n 'Zsmall',\n 'colonmonetary',\n 'onefitted',\n 'rupiah',\n 'Tildesmall',\n '',\n '',\n 'asuperior',\n 'centsuperior',\n '',\n '',\n '',\n '',\n 'Aacutesmall',\n 'Agravesmall',\n 'Acircumflexsmall',\n 'Adieresissmall',\n 'Atildesmall',\n 'Aringsmall',\n 'Ccedillasmall',\n 'Eacutesmall',\n 'Egravesmall',\n 'Ecircumflexsmall',\n 'Edieresissmall',\n 'Iacutesmall',\n 'Igravesmall',\n 'Icircumflexsmall',\n 'Idieresissmall',\n 'Ntildesmall',\n 'Oacutesmall',\n 'Ogravesmall',\n 'Ocircumflexsmall',\n 'Odieresissmall',\n 'Otildesmall',\n 'Uacutesmall',\n 'Ugravesmall',\n 'Ucircumflexsmall',\n 'Udieresissmall',\n '',\n 'eightsuperior',\n 'fourinferior',\n 'threeinferior',\n 'sixinferior',\n 'eightinferior',\n 'seveninferior',\n 'Scaronsmall',\n '',\n 'centinferior',\n 'twoinferior',\n '',\n 'Dieresissmall',\n '',\n 'Caronsmall',\n 'osuperior',\n 'fiveinferior',\n '',\n 'commainferior',\n 'periodinferior',\n 'Yacutesmall',\n '',\n 'dollarinferior',\n '',\n 'Thornsmall',\n '',\n 'nineinferior',\n 'zeroinferior',\n 'Zcaronsmall',\n 'AEsmall',\n 'Oslashsmall',\n 'questiondownsmall',\n 'oneinferior',\n 'Lslashsmall',\n '',\n '',\n '',\n '',\n '',\n '',\n 'Cedillasmall',\n '',\n '',\n '',\n '',\n '',\n 'OEsmall',\n 'figuredash',\n 'hyphensuperior',\n '',\n '',\n '',\n '',\n 'exclamdownsmall',\n '',\n 'Ydieresissmall',\n '',\n 'onesuperior',\n 'twosuperior',\n 'threesuperior',\n 'foursuperior',\n 'fivesuperior',\n 'sixsuperior',\n 'sevensuperior',\n 'ninesuperior',\n 'zerosuperior',\n '',\n 'esuperior',\n 'rsuperior',\n 'tsuperior',\n '',\n '',\n 'isuperior',\n 'ssuperior',\n 'dsuperior',\n '',\n '',\n '',\n '',\n '',\n 'lsuperior',\n 'Ogoneksmall',\n 'Brevesmall',\n 'Macronsmall',\n 'bsuperior',\n 'nsuperior',\n 'msuperior',\n 'commasuperior',\n 'periodsuperior',\n 'Dotaccentsmall',\n 'Ringsmall'\n];\nvar MacRomanEncoding = [\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n 'space',\n 'exclam',\n 'quotedbl',\n 'numbersign',\n 'dollar',\n 'percent',\n 'ampersand',\n 'quotesingle',\n 'parenleft',\n 'parenright',\n 'asterisk',\n 'plus',\n 'comma',\n 'hyphen',\n 'period',\n 'slash',\n 'zero',\n 'one',\n 'two',\n 'three',\n 'four',\n 'five',\n 'six',\n 'seven',\n 'eight',\n 'nine',\n 'colon',\n 'semicolon',\n 'less',\n 'equal',\n 'greater',\n 'question',\n 'at',\n 'A',\n 'B',\n 'C',\n 'D',\n 'E',\n 'F',\n 'G',\n 'H',\n 'I',\n 'J',\n 'K',\n 'L',\n 'M',\n 'N',\n 'O',\n 'P',\n 'Q',\n 'R',\n 'S',\n 'T',\n 'U',\n 'V',\n 'W',\n 'X',\n 'Y',\n 'Z',\n 'bracketleft',\n 'backslash',\n 'bracketright',\n 'asciicircum',\n 'underscore',\n 'grave',\n 'a',\n 'b',\n 'c',\n 'd',\n 'e',\n 'f',\n 'g',\n 'h',\n 'i',\n 'j',\n 'k',\n 'l',\n 'm',\n 'n',\n 'o',\n 'p',\n 'q',\n 'r',\n 's',\n 't',\n 'u',\n 'v',\n 'w',\n 'x',\n 'y',\n 'z',\n 'braceleft',\n 'bar',\n 'braceright',\n 'asciitilde',\n '',\n 'Adieresis',\n 'Aring',\n 'Ccedilla',\n 'Eacute',\n 'Ntilde',\n 'Odieresis',\n 'Udieresis',\n 'aacute',\n 'agrave',\n 'acircumflex',\n 'adieresis',\n 'atilde',\n 'aring',\n 'ccedilla',\n 'eacute',\n 'egrave',\n 'ecircumflex',\n 'edieresis',\n 'iacute',\n 'igrave',\n 'icircumflex',\n 'idieresis',\n 'ntilde',\n 'oacute',\n 'ograve',\n 'ocircumflex',\n 'odieresis',\n 'otilde',\n 'uacute',\n 'ugrave',\n 'ucircumflex',\n 'udieresis',\n 'dagger',\n 'degree',\n 'cent',\n 'sterling',\n 'section',\n 'bullet',\n 'paragraph',\n 'germandbls',\n 'registered',\n 'copyright',\n 'trademark',\n 'acute',\n 'dieresis',\n 'notequal',\n 'AE',\n 'Oslash',\n 'infinity',\n 'plusminus',\n 'lessequal',\n 'greaterequal',\n 'yen',\n 'mu',\n 'partialdiff',\n 'summation',\n 'product',\n 'pi',\n 'integral',\n 'ordfeminine',\n 'ordmasculine',\n 'Omega',\n 'ae',\n 'oslash',\n 'questiondown',\n 'exclamdown',\n 'logicalnot',\n 'radical',\n 'florin',\n 'approxequal',\n 'Delta',\n 'guillemotleft',\n 'guillemotright',\n 'ellipsis',\n 'space',\n 'Agrave',\n 'Atilde',\n 'Otilde',\n 'OE',\n 'oe',\n 'endash',\n 'emdash',\n 'quotedblleft',\n 'quotedblright',\n 'quoteleft',\n 'quoteright',\n 'divide',\n 'lozenge',\n 'ydieresis',\n 'Ydieresis',\n 'fraction',\n 'currency',\n 'guilsinglleft',\n 'guilsinglright',\n 'fi',\n 'fl',\n 'daggerdbl',\n 'periodcentered',\n 'quotesinglbase',\n 'quotedblbase',\n 'perthousand',\n 'Acircumflex',\n 'Ecircumflex',\n 'Aacute',\n 'Edieresis',\n 'Egrave',\n 'Iacute',\n 'Icircumflex',\n 'Idieresis',\n 'Igrave',\n 'Oacute',\n 'Ocircumflex',\n 'apple',\n 'Ograve',\n 'Uacute',\n 'Ucircumflex',\n 'Ugrave',\n 'dotlessi',\n 'circumflex',\n 'tilde',\n 'macron',\n 'breve',\n 'dotaccent',\n 'ring',\n 'cedilla',\n 'hungarumlaut',\n 'ogonek',\n 'caron'\n];\nvar StandardEncoding = [\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n 'space',\n 'exclam',\n 'quotedbl',\n 'numbersign',\n 'dollar',\n 'percent',\n 'ampersand',\n 'quoteright',\n 'parenleft',\n 'parenright',\n 'asterisk',\n 'plus',\n 'comma',\n 'hyphen',\n 'period',\n 'slash',\n 'zero',\n 'one',\n 'two',\n 'three',\n 'four',\n 'five',\n 'six',\n 'seven',\n 'eight',\n 'nine',\n 'colon',\n 'semicolon',\n 'less',\n 'equal',\n 'greater',\n 'question',\n 'at',\n 'A',\n 'B',\n 'C',\n 'D',\n 'E',\n 'F',\n 'G',\n 'H',\n 'I',\n 'J',\n 'K',\n 'L',\n 'M',\n 'N',\n 'O',\n 'P',\n 'Q',\n 'R',\n 'S',\n 'T',\n 'U',\n 'V',\n 'W',\n 'X',\n 'Y',\n 'Z',\n 'bracketleft',\n 'backslash',\n 'bracketright',\n 'asciicircum',\n 'underscore',\n 'quoteleft',\n 'a',\n 'b',\n 'c',\n 'd',\n 'e',\n 'f',\n 'g',\n 'h',\n 'i',\n 'j',\n 'k',\n 'l',\n 'm',\n 'n',\n 'o',\n 'p',\n 'q',\n 'r',\n 's',\n 't',\n 'u',\n 'v',\n 'w',\n 'x',\n 'y',\n 'z',\n 'braceleft',\n 'bar',\n 'braceright',\n 'asciitilde',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n 'exclamdown',\n 'cent',\n 'sterling',\n 'fraction',\n 'yen',\n 'florin',\n 'section',\n 'currency',\n 'quotesingle',\n 'quotedblleft',\n 'guillemotleft',\n 'guilsinglleft',\n 'guilsinglright',\n 'fi',\n 'fl',\n '',\n 'endash',\n 'dagger',\n 'daggerdbl',\n 'periodcentered',\n '',\n 'paragraph',\n 'bullet',\n 'quotesinglbase',\n 'quotedblbase',\n 'quotedblright',\n 'guillemotright',\n 'ellipsis',\n 'perthousand',\n '',\n 'questiondown',\n '',\n 'grave',\n 'acute',\n 'circumflex',\n 'tilde',\n 'macron',\n 'breve',\n 'dotaccent',\n 'dieresis',\n '',\n 'ring',\n 'cedilla',\n '',\n 'hungarumlaut',\n 'ogonek',\n 'caron',\n 'emdash',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n 'AE',\n '',\n 'ordfeminine',\n '',\n '',\n '',\n '',\n 'Lslash',\n 'Oslash',\n 'OE',\n 'ordmasculine',\n '',\n '',\n '',\n '',\n '',\n 'ae',\n '',\n '',\n '',\n 'dotlessi',\n '',\n '',\n 'lslash',\n 'oslash',\n 'oe',\n 'germandbls'\n];\nvar WinAnsiEncoding = [\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n 'space',\n 'exclam',\n 'quotedbl',\n 'numbersign',\n 'dollar',\n 'percent',\n 'ampersand',\n 'quotesingle',\n 'parenleft',\n 'parenright',\n 'asterisk',\n 'plus',\n 'comma',\n 'hyphen',\n 'period',\n 'slash',\n 'zero',\n 'one',\n 'two',\n 'three',\n 'four',\n 'five',\n 'six',\n 'seven',\n 'eight',\n 'nine',\n 'colon',\n 'semicolon',\n 'less',\n 'equal',\n 'greater',\n 'question',\n 'at',\n 'A',\n 'B',\n 'C',\n 'D',\n 'E',\n 'F',\n 'G',\n 'H',\n 'I',\n 'J',\n 'K',\n 'L',\n 'M',\n 'N',\n 'O',\n 'P',\n 'Q',\n 'R',\n 'S',\n 'T',\n 'U',\n 'V',\n 'W',\n 'X',\n 'Y',\n 'Z',\n 'bracketleft',\n 'backslash',\n 'bracketright',\n 'asciicircum',\n 'underscore',\n 'grave',\n 'a',\n 'b',\n 'c',\n 'd',\n 'e',\n 'f',\n 'g',\n 'h',\n 'i',\n 'j',\n 'k',\n 'l',\n 'm',\n 'n',\n 'o',\n 'p',\n 'q',\n 'r',\n 's',\n 't',\n 'u',\n 'v',\n 'w',\n 'x',\n 'y',\n 'z',\n 'braceleft',\n 'bar',\n 'braceright',\n 'asciitilde',\n 'bullet',\n 'Euro',\n 'bullet',\n 'quotesinglbase',\n 'florin',\n 'quotedblbase',\n 'ellipsis',\n 'dagger',\n 'daggerdbl',\n 'circumflex',\n 'perthousand',\n 'Scaron',\n 'guilsinglleft',\n 'OE',\n 'bullet',\n 'Zcaron',\n 'bullet',\n 'bullet',\n 'quoteleft',\n 'quoteright',\n 'quotedblleft',\n 'quotedblright',\n 'bullet',\n 'endash',\n 'emdash',\n 'tilde',\n 'trademark',\n 'scaron',\n 'guilsinglright',\n 'oe',\n 'bullet',\n 'zcaron',\n 'Ydieresis',\n 'space',\n 'exclamdown',\n 'cent',\n 'sterling',\n 'currency',\n 'yen',\n 'brokenbar',\n 'section',\n 'dieresis',\n 'copyright',\n 'ordfeminine',\n 'guillemotleft',\n 'logicalnot',\n 'hyphen',\n 'registered',\n 'macron',\n 'degree',\n 'plusminus',\n 'twosuperior',\n 'threesuperior',\n 'acute',\n 'mu',\n 'paragraph',\n 'periodcentered',\n 'cedilla',\n 'onesuperior',\n 'ordmasculine',\n 'guillemotright',\n 'onequarter',\n 'onehalf',\n 'threequarters',\n 'questiondown',\n 'Agrave',\n 'Aacute',\n 'Acircumflex',\n 'Atilde',\n 'Adieresis',\n 'Aring',\n 'AE',\n 'Ccedilla',\n 'Egrave',\n 'Eacute',\n 'Ecircumflex',\n 'Edieresis',\n 'Igrave',\n 'Iacute',\n 'Icircumflex',\n 'Idieresis',\n 'Eth',\n 'Ntilde',\n 'Ograve',\n 'Oacute',\n 'Ocircumflex',\n 'Otilde',\n 'Odieresis',\n 'multiply',\n 'Oslash',\n 'Ugrave',\n 'Uacute',\n 'Ucircumflex',\n 'Udieresis',\n 'Yacute',\n 'Thorn',\n 'germandbls',\n 'agrave',\n 'aacute',\n 'acircumflex',\n 'atilde',\n 'adieresis',\n 'aring',\n 'ae',\n 'ccedilla',\n 'egrave',\n 'eacute',\n 'ecircumflex',\n 'edieresis',\n 'igrave',\n 'iacute',\n 'icircumflex',\n 'idieresis',\n 'eth',\n 'ntilde',\n 'ograve',\n 'oacute',\n 'ocircumflex',\n 'otilde',\n 'odieresis',\n 'divide',\n 'oslash',\n 'ugrave',\n 'uacute',\n 'ucircumflex',\n 'udieresis',\n 'yacute',\n 'thorn',\n 'ydieresis'\n];\nvar SymbolSetEncoding = [\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n 'space',\n 'exclam',\n 'universal',\n 'numbersign',\n 'existential',\n 'percent',\n 'ampersand',\n 'suchthat',\n 'parenleft',\n 'parenright',\n 'asteriskmath',\n 'plus',\n 'comma',\n 'minus',\n 'period',\n 'slash',\n 'zero',\n 'one',\n 'two',\n 'three',\n 'four',\n 'five',\n 'six',\n 'seven',\n 'eight',\n 'nine',\n 'colon',\n 'semicolon',\n 'less',\n 'equal',\n 'greater',\n 'question',\n 'congruent',\n 'Alpha',\n 'Beta',\n 'Chi',\n 'Delta',\n 'Epsilon',\n 'Phi',\n 'Gamma',\n 'Eta',\n 'Iota',\n 'theta1',\n 'Kappa',\n 'Lambda',\n 'Mu',\n 'Nu',\n 'Omicron',\n 'Pi',\n 'Theta',\n 'Rho',\n 'Sigma',\n 'Tau',\n 'Upsilon',\n 'sigma1',\n 'Omega',\n 'Xi',\n 'Psi',\n 'Zeta',\n 'bracketleft',\n 'therefore',\n 'bracketright',\n 'perpendicular',\n 'underscore',\n 'radicalex',\n 'alpha',\n 'beta',\n 'chi',\n 'delta',\n 'epsilon',\n 'phi',\n 'gamma',\n 'eta',\n 'iota',\n 'phi1',\n 'kappa',\n 'lambda',\n 'mu',\n 'nu',\n 'omicron',\n 'pi',\n 'theta',\n 'rho',\n 'sigma',\n 'tau',\n 'upsilon',\n 'omega1',\n 'omega',\n 'xi',\n 'psi',\n 'zeta',\n 'braceleft',\n 'bar',\n 'braceright',\n 'similar',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n 'Euro',\n 'Upsilon1',\n 'minute',\n 'lessequal',\n 'fraction',\n 'infinity',\n 'florin',\n 'club',\n 'diamond',\n 'heart',\n 'spade',\n 'arrowboth',\n 'arrowleft',\n 'arrowup',\n 'arrowright',\n 'arrowdown',\n 'degree',\n 'plusminus',\n 'second',\n 'greaterequal',\n 'multiply',\n 'proportional',\n 'partialdiff',\n 'bullet',\n 'divide',\n 'notequal',\n 'equivalence',\n 'approxequal',\n 'ellipsis',\n 'arrowvertex',\n 'arrowhorizex',\n 'carriagereturn',\n 'aleph',\n 'Ifraktur',\n 'Rfraktur',\n 'weierstrass',\n 'circlemultiply',\n 'circleplus',\n 'emptyset',\n 'intersection',\n 'union',\n 'propersuperset',\n 'reflexsuperset',\n 'notsubset',\n 'propersubset',\n 'reflexsubset',\n 'element',\n 'notelement',\n 'angle',\n 'gradient',\n 'registerserif',\n 'copyrightserif',\n 'trademarkserif',\n 'product',\n 'radical',\n 'dotmath',\n 'logicalnot',\n 'logicaland',\n 'logicalor',\n 'arrowdblboth',\n 'arrowdblleft',\n 'arrowdblup',\n 'arrowdblright',\n 'arrowdbldown',\n 'lozenge',\n 'angleleft',\n 'registersans',\n 'copyrightsans',\n 'trademarksans',\n 'summation',\n 'parenlefttp',\n 'parenleftex',\n 'parenleftbt',\n 'bracketlefttp',\n 'bracketleftex',\n 'bracketleftbt',\n 'bracelefttp',\n 'braceleftmid',\n 'braceleftbt',\n 'braceex',\n '',\n 'angleright',\n 'integral',\n 'integraltp',\n 'integralex',\n 'integralbt',\n 'parenrighttp',\n 'parenrightex',\n 'parenrightbt',\n 'bracketrighttp',\n 'bracketrightex',\n 'bracketrightbt',\n 'bracerighttp',\n 'bracerightmid',\n 'bracerightbt'\n];\nvar ZapfDingbatsEncoding = [\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n 'space',\n 'a1',\n 'a2',\n 'a202',\n 'a3',\n 'a4',\n 'a5',\n 'a119',\n 'a118',\n 'a117',\n 'a11',\n 'a12',\n 'a13',\n 'a14',\n 'a15',\n 'a16',\n 'a105',\n 'a17',\n 'a18',\n 'a19',\n 'a20',\n 'a21',\n 'a22',\n 'a23',\n 'a24',\n 'a25',\n 'a26',\n 'a27',\n 'a28',\n 'a6',\n 'a7',\n 'a8',\n 'a9',\n 'a10',\n 'a29',\n 'a30',\n 'a31',\n 'a32',\n 'a33',\n 'a34',\n 'a35',\n 'a36',\n 'a37',\n 'a38',\n 'a39',\n 'a40',\n 'a41',\n 'a42',\n 'a43',\n 'a44',\n 'a45',\n 'a46',\n 'a47',\n 'a48',\n 'a49',\n 'a50',\n 'a51',\n 'a52',\n 'a53',\n 'a54',\n 'a55',\n 'a56',\n 'a57',\n 'a58',\n 'a59',\n 'a60',\n 'a61',\n 'a62',\n 'a63',\n 'a64',\n 'a65',\n 'a66',\n 'a67',\n 'a68',\n 'a69',\n 'a70',\n 'a71',\n 'a72',\n 'a73',\n 'a74',\n 'a203',\n 'a75',\n 'a204',\n 'a76',\n 'a77',\n 'a78',\n 'a79',\n 'a81',\n 'a82',\n 'a83',\n 'a84',\n 'a97',\n 'a98',\n 'a99',\n 'a100',\n '',\n 'a89',\n 'a90',\n 'a93',\n 'a94',\n 'a91',\n 'a92',\n 'a205',\n 'a85',\n 'a206',\n 'a86',\n 'a87',\n 'a88',\n 'a95',\n 'a96',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n 'a101',\n 'a102',\n 'a103',\n 'a104',\n 'a106',\n 'a107',\n 'a108',\n 'a112',\n 'a111',\n 'a110',\n 'a109',\n 'a120',\n 'a121',\n 'a122',\n 'a123',\n 'a124',\n 'a125',\n 'a126',\n 'a127',\n 'a128',\n 'a129',\n 'a130',\n 'a131',\n 'a132',\n 'a133',\n 'a134',\n 'a135',\n 'a136',\n 'a137',\n 'a138',\n 'a139',\n 'a140',\n 'a141',\n 'a142',\n 'a143',\n 'a144',\n 'a145',\n 'a146',\n 'a147',\n 'a148',\n 'a149',\n 'a150',\n 'a151',\n 'a152',\n 'a153',\n 'a154',\n 'a155',\n 'a156',\n 'a157',\n 'a158',\n 'a159',\n 'a160',\n 'a161',\n 'a163',\n 'a164',\n 'a196',\n 'a165',\n 'a192',\n 'a166',\n 'a167',\n 'a168',\n 'a169',\n 'a170',\n 'a171',\n 'a172',\n 'a173',\n 'a162',\n 'a174',\n 'a175',\n 'a176',\n 'a177',\n 'a178',\n 'a179',\n 'a193',\n 'a180',\n 'a199',\n 'a181',\n 'a200',\n 'a182',\n '',\n 'a201',\n 'a183',\n 'a184',\n 'a197',\n 'a185',\n 'a194',\n 'a198',\n 'a186',\n 'a195',\n 'a187',\n 'a188',\n 'a189',\n 'a190',\n 'a191'\n];\nfunction getEncoding(encodingName) {\n switch (encodingName) {\n case 'WinAnsiEncoding':\n  return WinAnsiEncoding;\n case 'StandardEncoding':\n  return StandardEncoding;\n case 'MacRomanEncoding':\n  return MacRomanEncoding;\n case 'SymbolSetEncoding':\n  return SymbolSetEncoding;\n case 'ZapfDingbatsEncoding':\n  return ZapfDingbatsEncoding;\n case 'ExpertEncoding':\n  return ExpertEncoding;\n case 'MacExpertEncoding':\n  return MacExpertEncoding;\n default:\n  return null;\n }\n}\nexports.WinAnsiEncoding = WinAnsiEncoding;\nexports.StandardEncoding = StandardEncoding;\nexports.MacRomanEncoding = MacRomanEncoding;\nexports.SymbolSetEncoding = SymbolSetEncoding;\nexports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\nexports.ExpertEncoding = ExpertEncoding;\nexports.getEncoding = getEncoding;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar coreStream = __w_pdfjs_require__(2);\nvar MissingDataException = sharedUtil.MissingDataException;\nvar StreamType = sharedUtil.StreamType;\nvar assert = sharedUtil.assert;\nvar error = sharedUtil.error;\nvar info = sharedUtil.info;\nvar isArray = sharedUtil.isArray;\nvar isInt = sharedUtil.isInt;\nvar isNum = sharedUtil.isNum;\nvar isString = sharedUtil.isString;\nvar warn = sharedUtil.warn;\nvar EOF = corePrimitives.EOF;\nvar Cmd = corePrimitives.Cmd;\nvar Dict = corePrimitives.Dict;\nvar Name = corePrimitives.Name;\nvar Ref = corePrimitives.Ref;\nvar isEOF = corePrimitives.isEOF;\nvar isCmd = corePrimitives.isCmd;\nvar isDict = corePrimitives.isDict;\nvar isName = corePrimitives.isName;\nvar Ascii85Stream = coreStream.Ascii85Stream;\nvar AsciiHexStream = coreStream.AsciiHexStream;\nvar CCITTFaxStream = coreStream.CCITTFaxStream;\nvar FlateStream = coreStream.FlateStream;\nvar Jbig2Stream = coreStream.Jbig2Stream;\nvar JpegStream = coreStream.JpegStream;\nvar JpxStream = coreStream.JpxStream;\nvar LZWStream = coreStream.LZWStream;\nvar NullStream = coreStream.NullStream;\nvar PredictorStream = coreStream.PredictorStream;\nvar RunLengthStream = coreStream.RunLengthStream;\nvar MAX_LENGTH_TO_CACHE = 1000;\nvar Parser = function ParserClosure() {\n function Parser(lexer, allowStreams, xref, recoveryMode) {\n  this.lexer = lexer;\n  this.allowStreams = allowStreams;\n  this.xref = xref;\n  this.recoveryMode = recoveryMode || false;\n  this.imageCache = Object.create(null);\n  this.refill();\n }\n Parser.prototype = {\n  refill: function Parser_refill() {\n   this.buf1 = this.lexer.getObj();\n   this.buf2 = this.lexer.getObj();\n  },\n  shift: function Parser_shift() {\n   if (isCmd(this.buf2, 'ID')) {\n    this.buf1 = this.buf2;\n    this.buf2 = null;\n   } else {\n    this.buf1 = this.buf2;\n    this.buf2 = this.lexer.getObj();\n   }\n  },\n  tryShift: function Parser_tryShift() {\n   try {\n    this.shift();\n    return true;\n   } catch (e) {\n    if (e instanceof MissingDataException) {\n     throw e;\n    }\n    return false;\n   }\n  },\n  getObj: function Parser_getObj(cipherTransform) {\n   var buf1 = this.buf1;\n   this.shift();\n   if (buf1 instanceof Cmd) {\n    switch (buf1.cmd) {\n    case 'BI':\n     return this.makeInlineImage(cipherTransform);\n    case '[':\n     var array = [];\n     while (!isCmd(this.buf1, ']') && !isEOF(this.buf1)) {\n      array.push(this.getObj(cipherTransform));\n     }\n     if (isEOF(this.buf1)) {\n      if (!this.recoveryMode) {\n       error('End of file inside array');\n      }\n      return array;\n     }\n     this.shift();\n     return array;\n    case '<<':\n     var dict = new Dict(this.xref);\n     while (!isCmd(this.buf1, '>>') && !isEOF(this.buf1)) {\n      if (!isName(this.buf1)) {\n       info('Malformed dictionary: key must be a name object');\n       this.shift();\n       continue;\n      }\n      var key = this.buf1.name;\n      this.shift();\n      if (isEOF(this.buf1)) {\n       break;\n      }\n      dict.set(key, this.getObj(cipherTransform));\n     }\n     if (isEOF(this.buf1)) {\n      if (!this.recoveryMode) {\n       error('End of file inside dictionary');\n      }\n      return dict;\n     }\n     if (isCmd(this.buf2, 'stream')) {\n      return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\n     }\n     this.shift();\n     return dict;\n    default:\n     return buf1;\n    }\n   }\n   if (isInt(buf1)) {\n    var num = buf1;\n    if (isInt(this.buf1) && isCmd(this.buf2, 'R')) {\n     var ref = new Ref(num, this.buf1);\n     this.shift();\n     this.shift();\n     return ref;\n    }\n    return num;\n   }\n   if (isString(buf1)) {\n    var str = buf1;\n    if (cipherTransform) {\n     str = cipherTransform.decryptString(str);\n    }\n    return str;\n   }\n   return buf1;\n  },\n  findDefaultInlineStreamEnd: function Parser_findDefaultInlineStreamEnd(stream) {\n   var E = 0x45, I = 0x49, SPACE = 0x20, LF = 0xA, CR = 0xD;\n   var startPos = stream.pos, state = 0, ch, i, n, followingBytes;\n   while ((ch = stream.getByte()) !== -1) {\n    if (state === 0) {\n     state = ch === E ? 1 : 0;\n    } else if (state === 1) {\n     state = ch === I ? 2 : 0;\n    } else {\n     assert(state === 2);\n     if (ch === SPACE || ch === LF || ch === CR) {\n      n = 5;\n      followingBytes = stream.peekBytes(n);\n      for (i = 0; i < n; i++) {\n       ch = followingBytes[i];\n       if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\n        state = 0;\n        break;\n       }\n      }\n      if (state === 2) {\n       break;\n      }\n     } else {\n      state = 0;\n     }\n    }\n   }\n   return stream.pos - 4 - startPos;\n  },\n  findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\n   var startPos = stream.pos, foundEOI = false, b, markerLength, length;\n   while ((b = stream.getByte()) !== -1) {\n    if (b !== 0xFF) {\n     continue;\n    }\n    switch (stream.getByte()) {\n    case 0x00:\n     break;\n    case 0xFF:\n     stream.skip(-1);\n     break;\n    case 0xD9:\n     foundEOI = true;\n     break;\n    case 0xC0:\n    case 0xC1:\n    case 0xC2:\n    case 0xC3:\n    case 0xC5:\n    case 0xC6:\n    case 0xC7:\n    case 0xC9:\n    case 0xCA:\n    case 0xCB:\n    case 0xCD:\n    case 0xCE:\n    case 0xCF:\n    case 0xC4:\n    case 0xCC:\n    case 0xDA:\n    case 0xDB:\n    case 0xDC:\n    case 0xDD:\n    case 0xDE:\n    case 0xDF:\n    case 0xE0:\n    case 0xE1:\n    case 0xE2:\n    case 0xE3:\n    case 0xE4:\n    case 0xE5:\n    case 0xE6:\n    case 0xE7:\n    case 0xE8:\n    case 0xE9:\n    case 0xEA:\n    case 0xEB:\n    case 0xEC:\n    case 0xED:\n    case 0xEE:\n    case 0xEF:\n    case 0xFE:\n     markerLength = stream.getUint16();\n     if (markerLength > 2) {\n      stream.skip(markerLength - 2);\n     } else {\n      stream.skip(-2);\n     }\n     break;\n    }\n    if (foundEOI) {\n     break;\n    }\n   }\n   length = stream.pos - startPos;\n   if (b === -1) {\n    warn('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\n    stream.skip(-length);\n    return this.findDefaultInlineStreamEnd(stream);\n   }\n   this.inlineStreamSkipEI(stream);\n   return length;\n  },\n  findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\n   var TILDE = 0x7E, GT = 0x3E;\n   var startPos = stream.pos, ch, length;\n   while ((ch = stream.getByte()) !== -1) {\n    if (ch === TILDE && stream.peekByte() === GT) {\n     stream.skip();\n     break;\n    }\n   }\n   length = stream.pos - startPos;\n   if (ch === -1) {\n    warn('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n    stream.skip(-length);\n    return this.findDefaultInlineStreamEnd(stream);\n   }\n   this.inlineStreamSkipEI(stream);\n   return length;\n  },\n  findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\n   var GT = 0x3E;\n   var startPos = stream.pos, ch, length;\n   while ((ch = stream.getByte()) !== -1) {\n    if (ch === GT) {\n     break;\n    }\n   }\n   length = stream.pos - startPos;\n   if (ch === -1) {\n    warn('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n    stream.skip(-length);\n    return this.findDefaultInlineStreamEnd(stream);\n   }\n   this.inlineStreamSkipEI(stream);\n   return length;\n  },\n  inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\n   var E = 0x45, I = 0x49;\n   var state = 0, ch;\n   while ((ch = stream.getByte()) !== -1) {\n    if (state === 0) {\n     state = ch === E ? 1 : 0;\n    } else if (state === 1) {\n     state = ch === I ? 2 : 0;\n    } else if (state === 2) {\n     break;\n    }\n   }\n  },\n  makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\n   var lexer = this.lexer;\n   var stream = lexer.stream;\n   var dict = new Dict(this.xref);\n   while (!isCmd(this.buf1, 'ID') && !isEOF(this.buf1)) {\n    if (!isName(this.buf1)) {\n     error('Dictionary key must be a name object');\n    }\n    var key = this.buf1.name;\n    this.shift();\n    if (isEOF(this.buf1)) {\n     break;\n    }\n    dict.set(key, this.getObj(cipherTransform));\n   }\n   var filter = dict.get('Filter', 'F'), filterName;\n   if (isName(filter)) {\n    filterName = filter.name;\n   } else if (isArray(filter)) {\n    var filterZero = this.xref.fetchIfRef(filter[0]);\n    if (isName(filterZero)) {\n     filterName = filterZero.name;\n    }\n   }\n   var startPos = stream.pos, length, i, ii;\n   if (filterName === 'DCTDecode' || filterName === 'DCT') {\n    length = this.findDCTDecodeInlineStreamEnd(stream);\n   } else if (filterName === 'ASCII85Decide' || filterName === 'A85') {\n    length = this.findASCII85DecodeInlineStreamEnd(stream);\n   } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\n    length = this.findASCIIHexDecodeInlineStreamEnd(stream);\n   } else {\n    length = this.findDefaultInlineStreamEnd(stream);\n   }\n   var imageStream = stream.makeSubStream(startPos, length, dict);\n   var adler32;\n   if (length < MAX_LENGTH_TO_CACHE) {\n    var imageBytes = imageStream.getBytes();\n    imageStream.reset();\n    var a = 1;\n    var b = 0;\n    for (i = 0, ii = imageBytes.length; i < ii; ++i) {\n     a += imageBytes[i] & 0xff;\n     b += a;\n    }\n    adler32 = b % 65521 << 16 | a % 65521;\n    if (this.imageCache.adler32 === adler32) {\n     this.buf2 = Cmd.get('EI');\n     this.shift();\n     this.imageCache[adler32].reset();\n     return this.imageCache[adler32];\n    }\n   }\n   if (cipherTransform) {\n    imageStream = cipherTransform.createStream(imageStream, length);\n   }\n   imageStream = this.filter(imageStream, dict, length);\n   imageStream.dict = dict;\n   if (adler32 !== undefined) {\n    imageStream.cacheKey = 'inline_' + length + '_' + adler32;\n    this.imageCache[adler32] = imageStream;\n   }\n   this.buf2 = Cmd.get('EI');\n   this.shift();\n   return imageStream;\n  },\n  makeStream: function Parser_makeStream(dict, cipherTransform) {\n   var lexer = this.lexer;\n   var stream = lexer.stream;\n   lexer.skipToNextLine();\n   var pos = stream.pos - 1;\n   var length = dict.get('Length');\n   if (!isInt(length)) {\n    info('Bad ' + length + ' attribute in stream');\n    length = 0;\n   }\n   stream.pos = pos + length;\n   lexer.nextChar();\n   if (this.tryShift() && isCmd(this.buf2, 'endstream')) {\n    this.shift();\n   } else {\n    stream.pos = pos;\n    var SCAN_BLOCK_SIZE = 2048;\n    var ENDSTREAM_SIGNATURE_LENGTH = 9;\n    var ENDSTREAM_SIGNATURE = [\n     0x65,\n     0x6E,\n     0x64,\n     0x73,\n     0x74,\n     0x72,\n     0x65,\n     0x61,\n     0x6D\n    ];\n    var skipped = 0, found = false, i, j;\n    while (stream.pos < stream.end) {\n     var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\n     var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\n     if (scanLength <= 0) {\n      break;\n     }\n     found = false;\n     i = 0;\n     while (i < scanLength) {\n      j = 0;\n      while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {\n       j++;\n      }\n      if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\n       found = true;\n       break;\n      }\n      i++;\n     }\n     if (found) {\n      skipped += i;\n      stream.pos += i;\n      break;\n     }\n     skipped += scanLength;\n     stream.pos += scanLength;\n    }\n    if (!found) {\n     error('Missing endstream');\n    }\n    length = skipped;\n    lexer.nextChar();\n    this.shift();\n    this.shift();\n   }\n   this.shift();\n   stream = stream.makeSubStream(pos, length, dict);\n   if (cipherTransform) {\n    stream = cipherTransform.createStream(stream, length);\n   }\n   stream = this.filter(stream, dict, length);\n   stream.dict = dict;\n   return stream;\n  },\n  filter: function Parser_filter(stream, dict, length) {\n   var filter = dict.get('Filter', 'F');\n   var params = dict.get('DecodeParms', 'DP');\n   if (isName(filter)) {\n    if (isArray(params)) {\n     params = this.xref.fetchIfRef(params[0]);\n    }\n    return this.makeFilter(stream, filter.name, length, params);\n   }\n   var maybeLength = length;\n   if (isArray(filter)) {\n    var filterArray = filter;\n    var paramsArray = params;\n    for (var i = 0, ii = filterArray.length; i < ii; ++i) {\n     filter = this.xref.fetchIfRef(filterArray[i]);\n     if (!isName(filter)) {\n      error('Bad filter name: ' + filter);\n     }\n     params = null;\n     if (isArray(paramsArray) && i in paramsArray) {\n      params = this.xref.fetchIfRef(paramsArray[i]);\n     }\n     stream = this.makeFilter(stream, filter.name, maybeLength, params);\n     maybeLength = null;\n    }\n   }\n   return stream;\n  },\n  makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\n   if (maybeLength === 0) {\n    warn('Empty \"' + name + '\" stream.');\n    return new NullStream(stream);\n   }\n   try {\n    var xrefStreamStats = this.xref.stats.streamTypes;\n    if (name === 'FlateDecode' || name === 'Fl') {\n     xrefStreamStats[StreamType.FLATE] = true;\n     if (params) {\n      return new PredictorStream(new FlateStream(stream, maybeLength), maybeLength, params);\n     }\n     return new FlateStream(stream, maybeLength);\n    }\n    if (name === 'LZWDecode' || name === 'LZW') {\n     xrefStreamStats[StreamType.LZW] = true;\n     var earlyChange = 1;\n     if (params) {\n      if (params.has('EarlyChange')) {\n       earlyChange = params.get('EarlyChange');\n      }\n      return new PredictorStream(new LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\n     }\n     return new LZWStream(stream, maybeLength, earlyChange);\n    }\n    if (name === 'DCTDecode' || name === 'DCT') {\n     xrefStreamStats[StreamType.DCT] = true;\n     return new JpegStream(stream, maybeLength, stream.dict, params);\n    }\n    if (name === 'JPXDecode' || name === 'JPX') {\n     xrefStreamStats[StreamType.JPX] = true;\n     return new JpxStream(stream, maybeLength, stream.dict, params);\n    }\n    if (name === 'ASCII85Decode' || name === 'A85') {\n     xrefStreamStats[StreamType.A85] = true;\n     return new Ascii85Stream(stream, maybeLength);\n    }\n    if (name === 'ASCIIHexDecode' || name === 'AHx') {\n     xrefStreamStats[StreamType.AHX] = true;\n     return new AsciiHexStream(stream, maybeLength);\n    }\n    if (name === 'CCITTFaxDecode' || name === 'CCF') {\n     xrefStreamStats[StreamType.CCF] = true;\n     return new CCITTFaxStream(stream, maybeLength, params);\n    }\n    if (name === 'RunLengthDecode' || name === 'RL') {\n     xrefStreamStats[StreamType.RL] = true;\n     return new RunLengthStream(stream, maybeLength);\n    }\n    if (name === 'JBIG2Decode') {\n     xrefStreamStats[StreamType.JBIG] = true;\n     return new Jbig2Stream(stream, maybeLength, stream.dict, params);\n    }\n    warn('filter \"' + name + '\" not supported yet');\n    return stream;\n   } catch (ex) {\n    if (ex instanceof MissingDataException) {\n     throw ex;\n    }\n    warn('Invalid stream: \\\"' + ex + '\\\"');\n    return new NullStream(stream);\n   }\n  }\n };\n return Parser;\n}();\nvar Lexer = function LexerClosure() {\n function Lexer(stream, knownCommands) {\n  this.stream = stream;\n  this.nextChar();\n  this.strBuf = [];\n  this.knownCommands = knownCommands;\n }\n var specialChars = [\n  1,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  1,\n  1,\n  0,\n  1,\n  1,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  1,\n  0,\n  0,\n  0,\n  0,\n  2,\n  0,\n  0,\n  2,\n  2,\n  0,\n  0,\n  0,\n  0,\n  0,\n  2,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  2,\n  0,\n  2,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  2,\n  0,\n  2,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  2,\n  0,\n  2,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0\n ];\n function toHexDigit(ch) {\n  if (ch >= 0x30 && ch <= 0x39) {\n   return ch & 0x0F;\n  }\n  if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n   return (ch & 0x0F) + 9;\n  }\n  return -1;\n }\n Lexer.prototype = {\n  nextChar: function Lexer_nextChar() {\n   return this.currentChar = this.stream.getByte();\n  },\n  peekChar: function Lexer_peekChar() {\n   return this.stream.peekByte();\n  },\n  getNumber: function Lexer_getNumber() {\n   var ch = this.currentChar;\n   var eNotation = false;\n   var divideBy = 0;\n   var sign = 1;\n   if (ch === 0x2D) {\n    sign = -1;\n    ch = this.nextChar();\n    if (ch === 0x2D) {\n     ch = this.nextChar();\n    }\n   } else if (ch === 0x2B) {\n    ch = this.nextChar();\n   }\n   if (ch === 0x2E) {\n    divideBy = 10;\n    ch = this.nextChar();\n   }\n   if (ch < 0x30 || ch > 0x39) {\n    error('Invalid number: ' + String.fromCharCode(ch));\n    return 0;\n   }\n   var baseValue = ch - 0x30;\n   var powerValue = 0;\n   var powerValueSign = 1;\n   while ((ch = this.nextChar()) >= 0) {\n    if (0x30 <= ch && ch <= 0x39) {\n     var currentDigit = ch - 0x30;\n     if (eNotation) {\n      powerValue = powerValue * 10 + currentDigit;\n     } else {\n      if (divideBy !== 0) {\n       divideBy *= 10;\n      }\n      baseValue = baseValue * 10 + currentDigit;\n     }\n    } else if (ch === 0x2E) {\n     if (divideBy === 0) {\n      divideBy = 1;\n     } else {\n      break;\n     }\n    } else if (ch === 0x2D) {\n     warn('Badly formatted number');\n    } else if (ch === 0x45 || ch === 0x65) {\n     ch = this.peekChar();\n     if (ch === 0x2B || ch === 0x2D) {\n      powerValueSign = ch === 0x2D ? -1 : 1;\n      this.nextChar();\n     } else if (ch < 0x30 || ch > 0x39) {\n      break;\n     }\n     eNotation = true;\n    } else {\n     break;\n    }\n   }\n   if (divideBy !== 0) {\n    baseValue /= divideBy;\n   }\n   if (eNotation) {\n    baseValue *= Math.pow(10, powerValueSign * powerValue);\n   }\n   return sign * baseValue;\n  },\n  getString: function Lexer_getString() {\n   var numParen = 1;\n   var done = false;\n   var strBuf = this.strBuf;\n   strBuf.length = 0;\n   var ch = this.nextChar();\n   while (true) {\n    var charBuffered = false;\n    switch (ch | 0) {\n    case -1:\n     warn('Unterminated string');\n     done = true;\n     break;\n    case 0x28:\n     ++numParen;\n     strBuf.push('(');\n     break;\n    case 0x29:\n     if (--numParen === 0) {\n      this.nextChar();\n      done = true;\n     } else {\n      strBuf.push(')');\n     }\n     break;\n    case 0x5C:\n     ch = this.nextChar();\n     switch (ch) {\n     case -1:\n      warn('Unterminated string');\n      done = true;\n      break;\n     case 0x6E:\n      strBuf.push('\\n');\n      break;\n     case 0x72:\n      strBuf.push('\\r');\n      break;\n     case 0x74:\n      strBuf.push('\\t');\n      break;\n     case 0x62:\n      strBuf.push('\\b');\n      break;\n     case 0x66:\n      strBuf.push('\\f');\n      break;\n     case 0x5C:\n     case 0x28:\n     case 0x29:\n      strBuf.push(String.fromCharCode(ch));\n      break;\n     case 0x30:\n     case 0x31:\n     case 0x32:\n     case 0x33:\n     case 0x34:\n     case 0x35:\n     case 0x36:\n     case 0x37:\n      var x = ch & 0x0F;\n      ch = this.nextChar();\n      charBuffered = true;\n      if (ch >= 0x30 && ch <= 0x37) {\n       x = (x << 3) + (ch & 0x0F);\n       ch = this.nextChar();\n       if (ch >= 0x30 && ch <= 0x37) {\n        charBuffered = false;\n        x = (x << 3) + (ch & 0x0F);\n       }\n      }\n      strBuf.push(String.fromCharCode(x));\n      break;\n     case 0x0D:\n      if (this.peekChar() === 0x0A) {\n       this.nextChar();\n      }\n      break;\n     case 0x0A:\n      break;\n     default:\n      strBuf.push(String.fromCharCode(ch));\n      break;\n     }\n     break;\n    default:\n     strBuf.push(String.fromCharCode(ch));\n     break;\n    }\n    if (done) {\n     break;\n    }\n    if (!charBuffered) {\n     ch = this.nextChar();\n    }\n   }\n   return strBuf.join('');\n  },\n  getName: function Lexer_getName() {\n   var ch, previousCh;\n   var strBuf = this.strBuf;\n   strBuf.length = 0;\n   while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n    if (ch === 0x23) {\n     ch = this.nextChar();\n     if (specialChars[ch]) {\n      warn('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\n      strBuf.push('#');\n      break;\n     }\n     var x = toHexDigit(ch);\n     if (x !== -1) {\n      previousCh = ch;\n      ch = this.nextChar();\n      var x2 = toHexDigit(ch);\n      if (x2 === -1) {\n       warn('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\n       strBuf.push('#', String.fromCharCode(previousCh));\n       if (specialChars[ch]) {\n        break;\n       }\n       strBuf.push(String.fromCharCode(ch));\n       continue;\n      }\n      strBuf.push(String.fromCharCode(x << 4 | x2));\n     } else {\n      strBuf.push('#', String.fromCharCode(ch));\n     }\n    } else {\n     strBuf.push(String.fromCharCode(ch));\n    }\n   }\n   if (strBuf.length > 127) {\n    warn('name token is longer than allowed by the spec: ' + strBuf.length);\n   }\n   return Name.get(strBuf.join(''));\n  },\n  getHexString: function Lexer_getHexString() {\n   var strBuf = this.strBuf;\n   strBuf.length = 0;\n   var ch = this.currentChar;\n   var isFirstHex = true;\n   var firstDigit;\n   var secondDigit;\n   while (true) {\n    if (ch < 0) {\n     warn('Unterminated hex string');\n     break;\n    } else if (ch === 0x3E) {\n     this.nextChar();\n     break;\n    } else if (specialChars[ch] === 1) {\n     ch = this.nextChar();\n     continue;\n    } else {\n     if (isFirstHex) {\n      firstDigit = toHexDigit(ch);\n      if (firstDigit === -1) {\n       warn('Ignoring invalid character \"' + ch + '\" in hex string');\n       ch = this.nextChar();\n       continue;\n      }\n     } else {\n      secondDigit = toHexDigit(ch);\n      if (secondDigit === -1) {\n       warn('Ignoring invalid character \"' + ch + '\" in hex string');\n       ch = this.nextChar();\n       continue;\n      }\n      strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\n     }\n     isFirstHex = !isFirstHex;\n     ch = this.nextChar();\n    }\n   }\n   return strBuf.join('');\n  },\n  getObj: function Lexer_getObj() {\n   var comment = false;\n   var ch = this.currentChar;\n   while (true) {\n    if (ch < 0) {\n     return EOF;\n    }\n    if (comment) {\n     if (ch === 0x0A || ch === 0x0D) {\n      comment = false;\n     }\n    } else if (ch === 0x25) {\n     comment = true;\n    } else if (specialChars[ch] !== 1) {\n     break;\n    }\n    ch = this.nextChar();\n   }\n   switch (ch | 0) {\n   case 0x30:\n   case 0x31:\n   case 0x32:\n   case 0x33:\n   case 0x34:\n   case 0x35:\n   case 0x36:\n   case 0x37:\n   case 0x38:\n   case 0x39:\n   case 0x2B:\n   case 0x2D:\n   case 0x2E:\n    return this.getNumber();\n   case 0x28:\n    return this.getString();\n   case 0x2F:\n    return this.getName();\n   case 0x5B:\n    this.nextChar();\n    return Cmd.get('[');\n   case 0x5D:\n    this.nextChar();\n    return Cmd.get(']');\n   case 0x3C:\n    ch = this.nextChar();\n    if (ch === 0x3C) {\n     this.nextChar();\n     return Cmd.get('<<');\n    }\n    return this.getHexString();\n   case 0x3E:\n    ch = this.nextChar();\n    if (ch === 0x3E) {\n     this.nextChar();\n     return Cmd.get('>>');\n    }\n    return Cmd.get('>');\n   case 0x7B:\n    this.nextChar();\n    return Cmd.get('{');\n   case 0x7D:\n    this.nextChar();\n    return Cmd.get('}');\n   case 0x29:\n    this.nextChar();\n    error('Illegal character: ' + ch);\n    break;\n   }\n   var str = String.fromCharCode(ch);\n   var knownCommands = this.knownCommands;\n   var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n   while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n    var possibleCommand = str + String.fromCharCode(ch);\n    if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\n     break;\n    }\n    if (str.length === 128) {\n     error('Command token too long: ' + str.length);\n    }\n    str = possibleCommand;\n    knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n   }\n   if (str === 'true') {\n    return true;\n   }\n   if (str === 'false') {\n    return false;\n   }\n   if (str === 'null') {\n    return null;\n   }\n   return Cmd.get(str);\n  },\n  skipToNextLine: function Lexer_skipToNextLine() {\n   var ch = this.currentChar;\n   while (ch >= 0) {\n    if (ch === 0x0D) {\n     ch = this.nextChar();\n     if (ch === 0x0A) {\n      this.nextChar();\n     }\n     break;\n    } else if (ch === 0x0A) {\n     this.nextChar();\n     break;\n    }\n    ch = this.nextChar();\n   }\n  }\n };\n return Lexer;\n}();\nvar Linearization = {\n create: function LinearizationCreate(stream) {\n  function getInt(name, allowZeroValue) {\n   var obj = linDict.get(name);\n   if (isInt(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n    return obj;\n   }\n   throw new Error('The \"' + name + '\" parameter in the linearization ' + 'dictionary is invalid.');\n  }\n  function getHints() {\n   var hints = linDict.get('H'), hintsLength, item;\n   if (isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\n    for (var index = 0; index < hintsLength; index++) {\n     if (!(isInt(item = hints[index]) && item > 0)) {\n      throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\n     }\n    }\n    return hints;\n   }\n   throw new Error('Hint array in the linearization dictionary is invalid.');\n  }\n  var parser = new Parser(new Lexer(stream), false, null);\n  var obj1 = parser.getObj();\n  var obj2 = parser.getObj();\n  var obj3 = parser.getObj();\n  var linDict = parser.getObj();\n  var obj, length;\n  if (!(isInt(obj1) && isInt(obj2) && isCmd(obj3, 'obj') && isDict(linDict) && isNum(obj = linDict.get('Linearized')) && obj > 0)) {\n   return null;\n  } else if ((length = getInt('L')) !== stream.length) {\n   throw new Error('The \"L\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\n  }\n  return {\n   length: length,\n   hints: getHints(),\n   objectNumberFirst: getInt('O'),\n   endFirst: getInt('E'),\n   numPages: getInt('N'),\n   mainXRefEntriesOffset: getInt('T'),\n   pageFirst: linDict.has('P') ? getInt('P', true) : 0\n  };\n }\n};\nexports.Lexer = Lexer;\nexports.Linearization = Linearization;\nexports.Parser = Parser;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar corePsParser = __w_pdfjs_require__(34);\nvar error = sharedUtil.error;\nvar info = sharedUtil.info;\nvar isArray = sharedUtil.isArray;\nvar isBool = sharedUtil.isBool;\nvar isDict = corePrimitives.isDict;\nvar isStream = corePrimitives.isStream;\nvar PostScriptLexer = corePsParser.PostScriptLexer;\nvar PostScriptParser = corePsParser.PostScriptParser;\nvar PDFFunction = function PDFFunctionClosure() {\n var CONSTRUCT_SAMPLED = 0;\n var CONSTRUCT_INTERPOLATED = 2;\n var CONSTRUCT_STICHED = 3;\n var CONSTRUCT_POSTSCRIPT = 4;\n return {\n  getSampleArray: function PDFFunction_getSampleArray(size, outputSize, bps, str) {\n   var i, ii;\n   var length = 1;\n   for (i = 0, ii = size.length; i < ii; i++) {\n    length *= size[i];\n   }\n   length *= outputSize;\n   var array = new Array(length);\n   var codeSize = 0;\n   var codeBuf = 0;\n   var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\n   var strBytes = str.getBytes((length * bps + 7) / 8);\n   var strIdx = 0;\n   for (i = 0; i < length; i++) {\n    while (codeSize < bps) {\n     codeBuf <<= 8;\n     codeBuf |= strBytes[strIdx++];\n     codeSize += 8;\n    }\n    codeSize -= bps;\n    array[i] = (codeBuf >> codeSize) * sampleMul;\n    codeBuf &= (1 << codeSize) - 1;\n   }\n   return array;\n  },\n  getIR: function PDFFunction_getIR(xref, fn) {\n   var dict = fn.dict;\n   if (!dict) {\n    dict = fn;\n   }\n   var types = [\n    this.constructSampled,\n    null,\n    this.constructInterpolated,\n    this.constructStiched,\n    this.constructPostScript\n   ];\n   var typeNum = dict.get('FunctionType');\n   var typeFn = types[typeNum];\n   if (!typeFn) {\n    error('Unknown type of function');\n   }\n   return typeFn.call(this, fn, dict, xref);\n  },\n  fromIR: function PDFFunction_fromIR(IR) {\n   var type = IR[0];\n   switch (type) {\n   case CONSTRUCT_SAMPLED:\n    return this.constructSampledFromIR(IR);\n   case CONSTRUCT_INTERPOLATED:\n    return this.constructInterpolatedFromIR(IR);\n   case CONSTRUCT_STICHED:\n    return this.constructStichedFromIR(IR);\n   default:\n    return this.constructPostScriptFromIR(IR);\n   }\n  },\n  parse: function PDFFunction_parse(xref, fn) {\n   var IR = this.getIR(xref, fn);\n   return this.fromIR(IR);\n  },\n  parseArray: function PDFFunction_parseArray(xref, fnObj) {\n   if (!isArray(fnObj)) {\n    return this.parse(xref, fnObj);\n   }\n   var fnArray = [];\n   for (var j = 0, jj = fnObj.length; j < jj; j++) {\n    var obj = xref.fetchIfRef(fnObj[j]);\n    fnArray.push(PDFFunction.parse(xref, obj));\n   }\n   return function (src, srcOffset, dest, destOffset) {\n    for (var i = 0, ii = fnArray.length; i < ii; i++) {\n     fnArray[i](src, srcOffset, dest, destOffset + i);\n    }\n   };\n  },\n  constructSampled: function PDFFunction_constructSampled(str, dict) {\n   function toMultiArray(arr) {\n    var inputLength = arr.length;\n    var out = [];\n    var index = 0;\n    for (var i = 0; i < inputLength; i += 2) {\n     out[index] = [\n      arr[i],\n      arr[i + 1]\n     ];\n     ++index;\n    }\n    return out;\n   }\n   var domain = dict.getArray('Domain');\n   var range = dict.getArray('Range');\n   if (!domain || !range) {\n    error('No domain or range');\n   }\n   var inputSize = domain.length / 2;\n   var outputSize = range.length / 2;\n   domain = toMultiArray(domain);\n   range = toMultiArray(range);\n   var size = dict.get('Size');\n   var bps = dict.get('BitsPerSample');\n   var order = dict.get('Order') || 1;\n   if (order !== 1) {\n    info('No support for cubic spline interpolation: ' + order);\n   }\n   var encode = dict.getArray('Encode');\n   if (!encode) {\n    encode = [];\n    for (var i = 0; i < inputSize; ++i) {\n     encode.push(0);\n     encode.push(size[i] - 1);\n    }\n   }\n   encode = toMultiArray(encode);\n   var decode = dict.getArray('Decode');\n   if (!decode) {\n    decode = range;\n   } else {\n    decode = toMultiArray(decode);\n   }\n   var samples = this.getSampleArray(size, outputSize, bps, str);\n   return [\n    CONSTRUCT_SAMPLED,\n    inputSize,\n    domain,\n    encode,\n    decode,\n    samples,\n    size,\n    outputSize,\n    Math.pow(2, bps) - 1,\n    range\n   ];\n  },\n  constructSampledFromIR: function PDFFunction_constructSampledFromIR(IR) {\n   function interpolate(x, xmin, xmax, ymin, ymax) {\n    return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\n   }\n   return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\n    var m = IR[1];\n    var domain = IR[2];\n    var encode = IR[3];\n    var decode = IR[4];\n    var samples = IR[5];\n    var size = IR[6];\n    var n = IR[7];\n    var range = IR[9];\n    var cubeVertices = 1 << m;\n    var cubeN = new Float64Array(cubeVertices);\n    var cubeVertex = new Uint32Array(cubeVertices);\n    var i, j;\n    for (j = 0; j < cubeVertices; j++) {\n     cubeN[j] = 1;\n    }\n    var k = n, pos = 1;\n    for (i = 0; i < m; ++i) {\n     var domain_2i = domain[i][0];\n     var domain_2i_1 = domain[i][1];\n     var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\n     var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\n     var size_i = size[i];\n     e = Math.min(Math.max(e, 0), size_i - 1);\n     var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\n     var n0 = e0 + 1 - e;\n     var n1 = e - e0;\n     var offset0 = e0 * k;\n     var offset1 = offset0 + k;\n     for (j = 0; j < cubeVertices; j++) {\n      if (j & pos) {\n       cubeN[j] *= n1;\n       cubeVertex[j] += offset1;\n      } else {\n       cubeN[j] *= n0;\n       cubeVertex[j] += offset0;\n      }\n     }\n     k *= size_i;\n     pos <<= 1;\n    }\n    for (j = 0; j < n; ++j) {\n     var rj = 0;\n     for (i = 0; i < cubeVertices; i++) {\n      rj += samples[cubeVertex[i] + j] * cubeN[i];\n     }\n     rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\n     dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\n    }\n   };\n  },\n  constructInterpolated: function PDFFunction_constructInterpolated(str, dict) {\n   var c0 = dict.getArray('C0') || [0];\n   var c1 = dict.getArray('C1') || [1];\n   var n = dict.get('N');\n   if (!isArray(c0) || !isArray(c1)) {\n    error('Illegal dictionary for interpolated function');\n   }\n   var length = c0.length;\n   var diff = [];\n   for (var i = 0; i < length; ++i) {\n    diff.push(c1[i] - c0[i]);\n   }\n   return [\n    CONSTRUCT_INTERPOLATED,\n    c0,\n    diff,\n    n\n   ];\n  },\n  constructInterpolatedFromIR: function PDFFunction_constructInterpolatedFromIR(IR) {\n   var c0 = IR[1];\n   var diff = IR[2];\n   var n = IR[3];\n   var length = diff.length;\n   return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\n    var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\n    for (var j = 0; j < length; ++j) {\n     dest[destOffset + j] = c0[j] + x * diff[j];\n    }\n   };\n  },\n  constructStiched: function PDFFunction_constructStiched(fn, dict, xref) {\n   var domain = dict.getArray('Domain');\n   if (!domain) {\n    error('No domain');\n   }\n   var inputSize = domain.length / 2;\n   if (inputSize !== 1) {\n    error('Bad domain for stiched function');\n   }\n   var fnRefs = dict.get('Functions');\n   var fns = [];\n   for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\n    fns.push(PDFFunction.getIR(xref, xref.fetchIfRef(fnRefs[i])));\n   }\n   var bounds = dict.getArray('Bounds');\n   var encode = dict.getArray('Encode');\n   return [\n    CONSTRUCT_STICHED,\n    domain,\n    bounds,\n    encode,\n    fns\n   ];\n  },\n  constructStichedFromIR: function PDFFunction_constructStichedFromIR(IR) {\n   var domain = IR[1];\n   var bounds = IR[2];\n   var encode = IR[3];\n   var fnsIR = IR[4];\n   var fns = [];\n   var tmpBuf = new Float32Array(1);\n   for (var i = 0, ii = fnsIR.length; i < ii; i++) {\n    fns.push(PDFFunction.fromIR(fnsIR[i]));\n   }\n   return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\n    var clip = function constructStichedFromIRClip(v, min, max) {\n     if (v > max) {\n      v = max;\n     } else if (v < min) {\n      v = min;\n     }\n     return v;\n    };\n    var v = clip(src[srcOffset], domain[0], domain[1]);\n    for (var i = 0, ii = bounds.length; i < ii; ++i) {\n     if (v < bounds[i]) {\n      break;\n     }\n    }\n    var dmin = domain[0];\n    if (i > 0) {\n     dmin = bounds[i - 1];\n    }\n    var dmax = domain[1];\n    if (i < bounds.length) {\n     dmax = bounds[i];\n    }\n    var rmin = encode[2 * i];\n    var rmax = encode[2 * i + 1];\n    tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\n    fns[i](tmpBuf, 0, dest, destOffset);\n   };\n  },\n  constructPostScript: function PDFFunction_constructPostScript(fn, dict, xref) {\n   var domain = dict.getArray('Domain');\n   var range = dict.getArray('Range');\n   if (!domain) {\n    error('No domain.');\n   }\n   if (!range) {\n    error('No range.');\n   }\n   var lexer = new PostScriptLexer(fn);\n   var parser = new PostScriptParser(lexer);\n   var code = parser.parse();\n   return [\n    CONSTRUCT_POSTSCRIPT,\n    domain,\n    range,\n    code\n   ];\n  },\n  constructPostScriptFromIR: function PDFFunction_constructPostScriptFromIR(IR) {\n   var domain = IR[1];\n   var range = IR[2];\n   var code = IR[3];\n   var compiled = new PostScriptCompiler().compile(code, domain, range);\n   if (compiled) {\n    return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\n   }\n   info('Unable to compile PS function');\n   var numOutputs = range.length >> 1;\n   var numInputs = domain.length >> 1;\n   var evaluator = new PostScriptEvaluator(code);\n   var cache = Object.create(null);\n   var MAX_CACHE_SIZE = 2048 * 4;\n   var cache_available = MAX_CACHE_SIZE;\n   var tmpBuf = new Float32Array(numInputs);\n   return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\n    var i, value;\n    var key = '';\n    var input = tmpBuf;\n    for (i = 0; i < numInputs; i++) {\n     value = src[srcOffset + i];\n     input[i] = value;\n     key += value + '_';\n    }\n    var cachedValue = cache[key];\n    if (cachedValue !== undefined) {\n     dest.set(cachedValue, destOffset);\n     return;\n    }\n    var output = new Float32Array(numOutputs);\n    var stack = evaluator.execute(input);\n    var stackIndex = stack.length - numOutputs;\n    for (i = 0; i < numOutputs; i++) {\n     value = stack[stackIndex + i];\n     var bound = range[i * 2];\n     if (value < bound) {\n      value = bound;\n     } else {\n      bound = range[i * 2 + 1];\n      if (value > bound) {\n       value = bound;\n      }\n     }\n     output[i] = value;\n    }\n    if (cache_available > 0) {\n     cache_available--;\n     cache[key] = output;\n    }\n    dest.set(output, destOffset);\n   };\n  }\n };\n}();\nfunction isPDFFunction(v) {\n var fnDict;\n if (typeof v !== 'object') {\n  return false;\n } else if (isDict(v)) {\n  fnDict = v;\n } else if (isStream(v)) {\n  fnDict = v.dict;\n } else {\n  return false;\n }\n return fnDict.has('FunctionType');\n}\nvar PostScriptStack = function PostScriptStackClosure() {\n var MAX_STACK_SIZE = 100;\n function PostScriptStack(initialStack) {\n  this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\n }\n PostScriptStack.prototype = {\n  push: function PostScriptStack_push(value) {\n   if (this.stack.length >= MAX_STACK_SIZE) {\n    error('PostScript function stack overflow.');\n   }\n   this.stack.push(value);\n  },\n  pop: function PostScriptStack_pop() {\n   if (this.stack.length <= 0) {\n    error('PostScript function stack underflow.');\n   }\n   return this.stack.pop();\n  },\n  copy: function PostScriptStack_copy(n) {\n   if (this.stack.length + n >= MAX_STACK_SIZE) {\n    error('PostScript function stack overflow.');\n   }\n   var stack = this.stack;\n   for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\n    stack.push(stack[i]);\n   }\n  },\n  index: function PostScriptStack_index(n) {\n   this.push(this.stack[this.stack.length - n - 1]);\n  },\n  roll: function PostScriptStack_roll(n, p) {\n   var stack = this.stack;\n   var l = stack.length - n;\n   var r = stack.length - 1, c = l + (p - Math.floor(p / n) * n), i, j, t;\n   for (i = l, j = r; i < j; i++, j--) {\n    t = stack[i];\n    stack[i] = stack[j];\n    stack[j] = t;\n   }\n   for (i = l, j = c - 1; i < j; i++, j--) {\n    t = stack[i];\n    stack[i] = stack[j];\n    stack[j] = t;\n   }\n   for (i = c, j = r; i < j; i++, j--) {\n    t = stack[i];\n    stack[i] = stack[j];\n    stack[j] = t;\n   }\n  }\n };\n return PostScriptStack;\n}();\nvar PostScriptEvaluator = function PostScriptEvaluatorClosure() {\n function PostScriptEvaluator(operators) {\n  this.operators = operators;\n }\n PostScriptEvaluator.prototype = {\n  execute: function PostScriptEvaluator_execute(initialStack) {\n   var stack = new PostScriptStack(initialStack);\n   var counter = 0;\n   var operators = this.operators;\n   var length = operators.length;\n   var operator, a, b;\n   while (counter < length) {\n    operator = operators[counter++];\n    if (typeof operator === 'number') {\n     stack.push(operator);\n     continue;\n    }\n    switch (operator) {\n    case 'jz':\n     b = stack.pop();\n     a = stack.pop();\n     if (!a) {\n      counter = b;\n     }\n     break;\n    case 'j':\n     a = stack.pop();\n     counter = a;\n     break;\n    case 'abs':\n     a = stack.pop();\n     stack.push(Math.abs(a));\n     break;\n    case 'add':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(a + b);\n     break;\n    case 'and':\n     b = stack.pop();\n     a = stack.pop();\n     if (isBool(a) && isBool(b)) {\n      stack.push(a && b);\n     } else {\n      stack.push(a & b);\n     }\n     break;\n    case 'atan':\n     a = stack.pop();\n     stack.push(Math.atan(a));\n     break;\n    case 'bitshift':\n     b = stack.pop();\n     a = stack.pop();\n     if (a > 0) {\n      stack.push(a << b);\n     } else {\n      stack.push(a >> b);\n     }\n     break;\n    case 'ceiling':\n     a = stack.pop();\n     stack.push(Math.ceil(a));\n     break;\n    case 'copy':\n     a = stack.pop();\n     stack.copy(a);\n     break;\n    case 'cos':\n     a = stack.pop();\n     stack.push(Math.cos(a));\n     break;\n    case 'cvi':\n     a = stack.pop() | 0;\n     stack.push(a);\n     break;\n    case 'cvr':\n     break;\n    case 'div':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(a / b);\n     break;\n    case 'dup':\n     stack.copy(1);\n     break;\n    case 'eq':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(a === b);\n     break;\n    case 'exch':\n     stack.roll(2, 1);\n     break;\n    case 'exp':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(Math.pow(a, b));\n     break;\n    case 'false':\n     stack.push(false);\n     break;\n    case 'floor':\n     a = stack.pop();\n     stack.push(Math.floor(a));\n     break;\n    case 'ge':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(a >= b);\n     break;\n    case 'gt':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(a > b);\n     break;\n    case 'idiv':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(a / b | 0);\n     break;\n    case 'index':\n     a = stack.pop();\n     stack.index(a);\n     break;\n    case 'le':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(a <= b);\n     break;\n    case 'ln':\n     a = stack.pop();\n     stack.push(Math.log(a));\n     break;\n    case 'log':\n     a = stack.pop();\n     stack.push(Math.log(a) / Math.LN10);\n     break;\n    case 'lt':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(a < b);\n     break;\n    case 'mod':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(a % b);\n     break;\n    case 'mul':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(a * b);\n     break;\n    case 'ne':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(a !== b);\n     break;\n    case 'neg':\n     a = stack.pop();\n     stack.push(-a);\n     break;\n    case 'not':\n     a = stack.pop();\n     if (isBool(a)) {\n      stack.push(!a);\n     } else {\n      stack.push(~a);\n     }\n     break;\n    case 'or':\n     b = stack.pop();\n     a = stack.pop();\n     if (isBool(a) && isBool(b)) {\n      stack.push(a || b);\n     } else {\n      stack.push(a | b);\n     }\n     break;\n    case 'pop':\n     stack.pop();\n     break;\n    case 'roll':\n     b = stack.pop();\n     a = stack.pop();\n     stack.roll(a, b);\n     break;\n    case 'round':\n     a = stack.pop();\n     stack.push(Math.round(a));\n     break;\n    case 'sin':\n     a = stack.pop();\n     stack.push(Math.sin(a));\n     break;\n    case 'sqrt':\n     a = stack.pop();\n     stack.push(Math.sqrt(a));\n     break;\n    case 'sub':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(a - b);\n     break;\n    case 'true':\n     stack.push(true);\n     break;\n    case 'truncate':\n     a = stack.pop();\n     a = a < 0 ? Math.ceil(a) : Math.floor(a);\n     stack.push(a);\n     break;\n    case 'xor':\n     b = stack.pop();\n     a = stack.pop();\n     if (isBool(a) && isBool(b)) {\n      stack.push(a !== b);\n     } else {\n      stack.push(a ^ b);\n     }\n     break;\n    default:\n     error('Unknown operator ' + operator);\n     break;\n    }\n   }\n   return stack.stack;\n  }\n };\n return PostScriptEvaluator;\n}();\nvar PostScriptCompiler = function PostScriptCompilerClosure() {\n function AstNode(type) {\n  this.type = type;\n }\n AstNode.prototype.visit = function (visitor) {\n  throw new Error('abstract method');\n };\n function AstArgument(index, min, max) {\n  AstNode.call(this, 'args');\n  this.index = index;\n  this.min = min;\n  this.max = max;\n }\n AstArgument.prototype = Object.create(AstNode.prototype);\n AstArgument.prototype.visit = function (visitor) {\n  visitor.visitArgument(this);\n };\n function AstLiteral(number) {\n  AstNode.call(this, 'literal');\n  this.number = number;\n  this.min = number;\n  this.max = number;\n }\n AstLiteral.prototype = Object.create(AstNode.prototype);\n AstLiteral.prototype.visit = function (visitor) {\n  visitor.visitLiteral(this);\n };\n function AstBinaryOperation(op, arg1, arg2, min, max) {\n  AstNode.call(this, 'binary');\n  this.op = op;\n  this.arg1 = arg1;\n  this.arg2 = arg2;\n  this.min = min;\n  this.max = max;\n }\n AstBinaryOperation.prototype = Object.create(AstNode.prototype);\n AstBinaryOperation.prototype.visit = function (visitor) {\n  visitor.visitBinaryOperation(this);\n };\n function AstMin(arg, max) {\n  AstNode.call(this, 'max');\n  this.arg = arg;\n  this.min = arg.min;\n  this.max = max;\n }\n AstMin.prototype = Object.create(AstNode.prototype);\n AstMin.prototype.visit = function (visitor) {\n  visitor.visitMin(this);\n };\n function AstVariable(index, min, max) {\n  AstNode.call(this, 'var');\n  this.index = index;\n  this.min = min;\n  this.max = max;\n }\n AstVariable.prototype = Object.create(AstNode.prototype);\n AstVariable.prototype.visit = function (visitor) {\n  visitor.visitVariable(this);\n };\n function AstVariableDefinition(variable, arg) {\n  AstNode.call(this, 'definition');\n  this.variable = variable;\n  this.arg = arg;\n }\n AstVariableDefinition.prototype = Object.create(AstNode.prototype);\n AstVariableDefinition.prototype.visit = function (visitor) {\n  visitor.visitVariableDefinition(this);\n };\n function ExpressionBuilderVisitor() {\n  this.parts = [];\n }\n ExpressionBuilderVisitor.prototype = {\n  visitArgument: function (arg) {\n   this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\n  },\n  visitVariable: function (variable) {\n   this.parts.push('v', variable.index);\n  },\n  visitLiteral: function (literal) {\n   this.parts.push(literal.number);\n  },\n  visitBinaryOperation: function (operation) {\n   this.parts.push('(');\n   operation.arg1.visit(this);\n   this.parts.push(' ', operation.op, ' ');\n   operation.arg2.visit(this);\n   this.parts.push(')');\n  },\n  visitVariableDefinition: function (definition) {\n   this.parts.push('var ');\n   definition.variable.visit(this);\n   this.parts.push(' = ');\n   definition.arg.visit(this);\n   this.parts.push(';');\n  },\n  visitMin: function (max) {\n   this.parts.push('Math.min(');\n   max.arg.visit(this);\n   this.parts.push(', ', max.max, ')');\n  },\n  toString: function () {\n   return this.parts.join('');\n  }\n };\n function buildAddOperation(num1, num2) {\n  if (num2.type === 'literal' && num2.number === 0) {\n   return num1;\n  }\n  if (num1.type === 'literal' && num1.number === 0) {\n   return num2;\n  }\n  if (num2.type === 'literal' && num1.type === 'literal') {\n   return new AstLiteral(num1.number + num2.number);\n  }\n  return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\n }\n function buildMulOperation(num1, num2) {\n  if (num2.type === 'literal') {\n   if (num2.number === 0) {\n    return new AstLiteral(0);\n   } else if (num2.number === 1) {\n    return num1;\n   } else if (num1.type === 'literal') {\n    return new AstLiteral(num1.number * num2.number);\n   }\n  }\n  if (num1.type === 'literal') {\n   if (num1.number === 0) {\n    return new AstLiteral(0);\n   } else if (num1.number === 1) {\n    return num2;\n   }\n  }\n  var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n  var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n  return new AstBinaryOperation('*', num1, num2, min, max);\n }\n function buildSubOperation(num1, num2) {\n  if (num2.type === 'literal') {\n   if (num2.number === 0) {\n    return num1;\n   } else if (num1.type === 'literal') {\n    return new AstLiteral(num1.number - num2.number);\n   }\n  }\n  if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\n   return num2.arg2;\n  }\n  return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\n }\n function buildMinOperation(num1, max) {\n  if (num1.min >= max) {\n   return new AstLiteral(max);\n  } else if (num1.max <= max) {\n   return num1;\n  }\n  return new AstMin(num1, max);\n }\n function PostScriptCompiler() {\n }\n PostScriptCompiler.prototype = {\n  compile: function PostScriptCompiler_compile(code, domain, range) {\n   var stack = [];\n   var i, ii;\n   var instructions = [];\n   var inputSize = domain.length >> 1, outputSize = range.length >> 1;\n   var lastRegister = 0;\n   var n, j;\n   var num1, num2, ast1, ast2, tmpVar, item;\n   for (i = 0; i < inputSize; i++) {\n    stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\n   }\n   for (i = 0, ii = code.length; i < ii; i++) {\n    item = code[i];\n    if (typeof item === 'number') {\n     stack.push(new AstLiteral(item));\n     continue;\n    }\n    switch (item) {\n    case 'add':\n     if (stack.length < 2) {\n      return null;\n     }\n     num2 = stack.pop();\n     num1 = stack.pop();\n     stack.push(buildAddOperation(num1, num2));\n     break;\n    case 'cvr':\n     if (stack.length < 1) {\n      return null;\n     }\n     break;\n    case 'mul':\n     if (stack.length < 2) {\n      return null;\n     }\n     num2 = stack.pop();\n     num1 = stack.pop();\n     stack.push(buildMulOperation(num1, num2));\n     break;\n    case 'sub':\n     if (stack.length < 2) {\n      return null;\n     }\n     num2 = stack.pop();\n     num1 = stack.pop();\n     stack.push(buildSubOperation(num1, num2));\n     break;\n    case 'exch':\n     if (stack.length < 2) {\n      return null;\n     }\n     ast1 = stack.pop();\n     ast2 = stack.pop();\n     stack.push(ast1, ast2);\n     break;\n    case 'pop':\n     if (stack.length < 1) {\n      return null;\n     }\n     stack.pop();\n     break;\n    case 'index':\n     if (stack.length < 1) {\n      return null;\n     }\n     num1 = stack.pop();\n     if (num1.type !== 'literal') {\n      return null;\n     }\n     n = num1.number;\n     if (n < 0 || (n | 0) !== n || stack.length < n) {\n      return null;\n     }\n     ast1 = stack[stack.length - n - 1];\n     if (ast1.type === 'literal' || ast1.type === 'var') {\n      stack.push(ast1);\n      break;\n     }\n     tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n     stack[stack.length - n - 1] = tmpVar;\n     stack.push(tmpVar);\n     instructions.push(new AstVariableDefinition(tmpVar, ast1));\n     break;\n    case 'dup':\n     if (stack.length < 1) {\n      return null;\n     }\n     if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\n      num1 = stack.pop();\n      stack.push(buildMinOperation(num1, code[i + 1]));\n      i += 6;\n      break;\n     }\n     ast1 = stack[stack.length - 1];\n     if (ast1.type === 'literal' || ast1.type === 'var') {\n      stack.push(ast1);\n      break;\n     }\n     tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n     stack[stack.length - 1] = tmpVar;\n     stack.push(tmpVar);\n     instructions.push(new AstVariableDefinition(tmpVar, ast1));\n     break;\n    case 'roll':\n     if (stack.length < 2) {\n      return null;\n     }\n     num2 = stack.pop();\n     num1 = stack.pop();\n     if (num2.type !== 'literal' || num1.type !== 'literal') {\n      return null;\n     }\n     j = num2.number;\n     n = num1.number;\n     if (n <= 0 || (n | 0) !== n || (j | 0) !== j || stack.length < n) {\n      return null;\n     }\n     j = (j % n + n) % n;\n     if (j === 0) {\n      break;\n     }\n     Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\n     break;\n    default:\n     return null;\n    }\n   }\n   if (stack.length !== outputSize) {\n    return null;\n   }\n   var result = [];\n   instructions.forEach(function (instruction) {\n    var statementBuilder = new ExpressionBuilderVisitor();\n    instruction.visit(statementBuilder);\n    result.push(statementBuilder.toString());\n   });\n   stack.forEach(function (expr, i) {\n    var statementBuilder = new ExpressionBuilderVisitor();\n    expr.visit(statementBuilder);\n    var min = range[i * 2], max = range[i * 2 + 1];\n    var out = [statementBuilder.toString()];\n    if (min > expr.min) {\n     out.unshift('Math.max(', min, ', ');\n     out.push(')');\n    }\n    if (max < expr.max) {\n     out.unshift('Math.min(', max, ', ');\n     out.push(')');\n    }\n    out.unshift('dest[destOffset + ', i, '] = ');\n    out.push(';');\n    result.push(out.join(''));\n   });\n   return result.join('\\n');\n  }\n };\n return PostScriptCompiler;\n}();\nexports.isPDFFunction = isPDFFunction;\nexports.PDFFunction = PDFFunction;\nexports.PostScriptEvaluator = PostScriptEvaluator;\nexports.PostScriptCompiler = PostScriptCompiler;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar getLookupTableFactory = sharedUtil.getLookupTableFactory;\nvar getGlyphsUnicode = getLookupTableFactory(function (t) {\n t['A'] = 0x0041;\n t['AE'] = 0x00C6;\n t['AEacute'] = 0x01FC;\n t['AEmacron'] = 0x01E2;\n t['AEsmall'] = 0xF7E6;\n t['Aacute'] = 0x00C1;\n t['Aacutesmall'] = 0xF7E1;\n t['Abreve'] = 0x0102;\n t['Abreveacute'] = 0x1EAE;\n t['Abrevecyrillic'] = 0x04D0;\n t['Abrevedotbelow'] = 0x1EB6;\n t['Abrevegrave'] = 0x1EB0;\n t['Abrevehookabove'] = 0x1EB2;\n t['Abrevetilde'] = 0x1EB4;\n t['Acaron'] = 0x01CD;\n t['Acircle'] = 0x24B6;\n t['Acircumflex'] = 0x00C2;\n t['Acircumflexacute'] = 0x1EA4;\n t['Acircumflexdotbelow'] = 0x1EAC;\n t['Acircumflexgrave'] = 0x1EA6;\n t['Acircumflexhookabove'] = 0x1EA8;\n t['Acircumflexsmall'] = 0xF7E2;\n t['Acircumflextilde'] = 0x1EAA;\n t['Acute'] = 0xF6C9;\n t['Acutesmall'] = 0xF7B4;\n t['Acyrillic'] = 0x0410;\n t['Adblgrave'] = 0x0200;\n t['Adieresis'] = 0x00C4;\n t['Adieresiscyrillic'] = 0x04D2;\n t['Adieresismacron'] = 0x01DE;\n t['Adieresissmall'] = 0xF7E4;\n t['Adotbelow'] = 0x1EA0;\n t['Adotmacron'] = 0x01E0;\n t['Agrave'] = 0x00C0;\n t['Agravesmall'] = 0xF7E0;\n t['Ahookabove'] = 0x1EA2;\n t['Aiecyrillic'] = 0x04D4;\n t['Ainvertedbreve'] = 0x0202;\n t['Alpha'] = 0x0391;\n t['Alphatonos'] = 0x0386;\n t['Amacron'] = 0x0100;\n t['Amonospace'] = 0xFF21;\n t['Aogonek'] = 0x0104;\n t['Aring'] = 0x00C5;\n t['Aringacute'] = 0x01FA;\n t['Aringbelow'] = 0x1E00;\n t['Aringsmall'] = 0xF7E5;\n t['Asmall'] = 0xF761;\n t['Atilde'] = 0x00C3;\n t['Atildesmall'] = 0xF7E3;\n t['Aybarmenian'] = 0x0531;\n t['B'] = 0x0042;\n t['Bcircle'] = 0x24B7;\n t['Bdotaccent'] = 0x1E02;\n t['Bdotbelow'] = 0x1E04;\n t['Becyrillic'] = 0x0411;\n t['Benarmenian'] = 0x0532;\n t['Beta'] = 0x0392;\n t['Bhook'] = 0x0181;\n t['Blinebelow'] = 0x1E06;\n t['Bmonospace'] = 0xFF22;\n t['Brevesmall'] = 0xF6F4;\n t['Bsmall'] = 0xF762;\n t['Btopbar'] = 0x0182;\n t['C'] = 0x0043;\n t['Caarmenian'] = 0x053E;\n t['Cacute'] = 0x0106;\n t['Caron'] = 0xF6CA;\n t['Caronsmall'] = 0xF6F5;\n t['Ccaron'] = 0x010C;\n t['Ccedilla'] = 0x00C7;\n t['Ccedillaacute'] = 0x1E08;\n t['Ccedillasmall'] = 0xF7E7;\n t['Ccircle'] = 0x24B8;\n t['Ccircumflex'] = 0x0108;\n t['Cdot'] = 0x010A;\n t['Cdotaccent'] = 0x010A;\n t['Cedillasmall'] = 0xF7B8;\n t['Chaarmenian'] = 0x0549;\n t['Cheabkhasiancyrillic'] = 0x04BC;\n t['Checyrillic'] = 0x0427;\n t['Chedescenderabkhasiancyrillic'] = 0x04BE;\n t['Chedescendercyrillic'] = 0x04B6;\n t['Chedieresiscyrillic'] = 0x04F4;\n t['Cheharmenian'] = 0x0543;\n t['Chekhakassiancyrillic'] = 0x04CB;\n t['Cheverticalstrokecyrillic'] = 0x04B8;\n t['Chi'] = 0x03A7;\n t['Chook'] = 0x0187;\n t['Circumflexsmall'] = 0xF6F6;\n t['Cmonospace'] = 0xFF23;\n t['Coarmenian'] = 0x0551;\n t['Csmall'] = 0xF763;\n t['D'] = 0x0044;\n t['DZ'] = 0x01F1;\n t['DZcaron'] = 0x01C4;\n t['Daarmenian'] = 0x0534;\n t['Dafrican'] = 0x0189;\n t['Dcaron'] = 0x010E;\n t['Dcedilla'] = 0x1E10;\n t['Dcircle'] = 0x24B9;\n t['Dcircumflexbelow'] = 0x1E12;\n t['Dcroat'] = 0x0110;\n t['Ddotaccent'] = 0x1E0A;\n t['Ddotbelow'] = 0x1E0C;\n t['Decyrillic'] = 0x0414;\n t['Deicoptic'] = 0x03EE;\n t['Delta'] = 0x2206;\n t['Deltagreek'] = 0x0394;\n t['Dhook'] = 0x018A;\n t['Dieresis'] = 0xF6CB;\n t['DieresisAcute'] = 0xF6CC;\n t['DieresisGrave'] = 0xF6CD;\n t['Dieresissmall'] = 0xF7A8;\n t['Digammagreek'] = 0x03DC;\n t['Djecyrillic'] = 0x0402;\n t['Dlinebelow'] = 0x1E0E;\n t['Dmonospace'] = 0xFF24;\n t['Dotaccentsmall'] = 0xF6F7;\n t['Dslash'] = 0x0110;\n t['Dsmall'] = 0xF764;\n t['Dtopbar'] = 0x018B;\n t['Dz'] = 0x01F2;\n t['Dzcaron'] = 0x01C5;\n t['Dzeabkhasiancyrillic'] = 0x04E0;\n t['Dzecyrillic'] = 0x0405;\n t['Dzhecyrillic'] = 0x040F;\n t['E'] = 0x0045;\n t['Eacute'] = 0x00C9;\n t['Eacutesmall'] = 0xF7E9;\n t['Ebreve'] = 0x0114;\n t['Ecaron'] = 0x011A;\n t['Ecedillabreve'] = 0x1E1C;\n t['Echarmenian'] = 0x0535;\n t['Ecircle'] = 0x24BA;\n t['Ecircumflex'] = 0x00CA;\n t['Ecircumflexacute'] = 0x1EBE;\n t['Ecircumflexbelow'] = 0x1E18;\n t['Ecircumflexdotbelow'] = 0x1EC6;\n t['Ecircumflexgrave'] = 0x1EC0;\n t['Ecircumflexhookabove'] = 0x1EC2;\n t['Ecircumflexsmall'] = 0xF7EA;\n t['Ecircumflextilde'] = 0x1EC4;\n t['Ecyrillic'] = 0x0404;\n t['Edblgrave'] = 0x0204;\n t['Edieresis'] = 0x00CB;\n t['Edieresissmall'] = 0xF7EB;\n t['Edot'] = 0x0116;\n t['Edotaccent'] = 0x0116;\n t['Edotbelow'] = 0x1EB8;\n t['Efcyrillic'] = 0x0424;\n t['Egrave'] = 0x00C8;\n t['Egravesmall'] = 0xF7E8;\n t['Eharmenian'] = 0x0537;\n t['Ehookabove'] = 0x1EBA;\n t['Eightroman'] = 0x2167;\n t['Einvertedbreve'] = 0x0206;\n t['Eiotifiedcyrillic'] = 0x0464;\n t['Elcyrillic'] = 0x041B;\n t['Elevenroman'] = 0x216A;\n t['Emacron'] = 0x0112;\n t['Emacronacute'] = 0x1E16;\n t['Emacrongrave'] = 0x1E14;\n t['Emcyrillic'] = 0x041C;\n t['Emonospace'] = 0xFF25;\n t['Encyrillic'] = 0x041D;\n t['Endescendercyrillic'] = 0x04A2;\n t['Eng'] = 0x014A;\n t['Enghecyrillic'] = 0x04A4;\n t['Enhookcyrillic'] = 0x04C7;\n t['Eogonek'] = 0x0118;\n t['Eopen'] = 0x0190;\n t['Epsilon'] = 0x0395;\n t['Epsilontonos'] = 0x0388;\n t['Ercyrillic'] = 0x0420;\n t['Ereversed'] = 0x018E;\n t['Ereversedcyrillic'] = 0x042D;\n t['Escyrillic'] = 0x0421;\n t['Esdescendercyrillic'] = 0x04AA;\n t['Esh'] = 0x01A9;\n t['Esmall'] = 0xF765;\n t['Eta'] = 0x0397;\n t['Etarmenian'] = 0x0538;\n t['Etatonos'] = 0x0389;\n t['Eth'] = 0x00D0;\n t['Ethsmall'] = 0xF7F0;\n t['Etilde'] = 0x1EBC;\n t['Etildebelow'] = 0x1E1A;\n t['Euro'] = 0x20AC;\n t['Ezh'] = 0x01B7;\n t['Ezhcaron'] = 0x01EE;\n t['Ezhreversed'] = 0x01B8;\n t['F'] = 0x0046;\n t['Fcircle'] = 0x24BB;\n t['Fdotaccent'] = 0x1E1E;\n t['Feharmenian'] = 0x0556;\n t['Feicoptic'] = 0x03E4;\n t['Fhook'] = 0x0191;\n t['Fitacyrillic'] = 0x0472;\n t['Fiveroman'] = 0x2164;\n t['Fmonospace'] = 0xFF26;\n t['Fourroman'] = 0x2163;\n t['Fsmall'] = 0xF766;\n t['G'] = 0x0047;\n t['GBsquare'] = 0x3387;\n t['Gacute'] = 0x01F4;\n t['Gamma'] = 0x0393;\n t['Gammaafrican'] = 0x0194;\n t['Gangiacoptic'] = 0x03EA;\n t['Gbreve'] = 0x011E;\n t['Gcaron'] = 0x01E6;\n t['Gcedilla'] = 0x0122;\n t['Gcircle'] = 0x24BC;\n t['Gcircumflex'] = 0x011C;\n t['Gcommaaccent'] = 0x0122;\n t['Gdot'] = 0x0120;\n t['Gdotaccent'] = 0x0120;\n t['Gecyrillic'] = 0x0413;\n t['Ghadarmenian'] = 0x0542;\n t['Ghemiddlehookcyrillic'] = 0x0494;\n t['Ghestrokecyrillic'] = 0x0492;\n t['Gheupturncyrillic'] = 0x0490;\n t['Ghook'] = 0x0193;\n t['Gimarmenian'] = 0x0533;\n t['Gjecyrillic'] = 0x0403;\n t['Gmacron'] = 0x1E20;\n t['Gmonospace'] = 0xFF27;\n t['Grave'] = 0xF6CE;\n t['Gravesmall'] = 0xF760;\n t['Gsmall'] = 0xF767;\n t['Gsmallhook'] = 0x029B;\n t['Gstroke'] = 0x01E4;\n t['H'] = 0x0048;\n t['H18533'] = 0x25CF;\n t['H18543'] = 0x25AA;\n t['H18551'] = 0x25AB;\n t['H22073'] = 0x25A1;\n t['HPsquare'] = 0x33CB;\n t['Haabkhasiancyrillic'] = 0x04A8;\n t['Hadescendercyrillic'] = 0x04B2;\n t['Hardsigncyrillic'] = 0x042A;\n t['Hbar'] = 0x0126;\n t['Hbrevebelow'] = 0x1E2A;\n t['Hcedilla'] = 0x1E28;\n t['Hcircle'] = 0x24BD;\n t['Hcircumflex'] = 0x0124;\n t['Hdieresis'] = 0x1E26;\n t['Hdotaccent'] = 0x1E22;\n t['Hdotbelow'] = 0x1E24;\n t['Hmonospace'] = 0xFF28;\n t['Hoarmenian'] = 0x0540;\n t['Horicoptic'] = 0x03E8;\n t['Hsmall'] = 0xF768;\n t['Hungarumlaut'] = 0xF6CF;\n t['Hungarumlautsmall'] = 0xF6F8;\n t['Hzsquare'] = 0x3390;\n t['I'] = 0x0049;\n t['IAcyrillic'] = 0x042F;\n t['IJ'] = 0x0132;\n t['IUcyrillic'] = 0x042E;\n t['Iacute'] = 0x00CD;\n t['Iacutesmall'] = 0xF7ED;\n t['Ibreve'] = 0x012C;\n t['Icaron'] = 0x01CF;\n t['Icircle'] = 0x24BE;\n t['Icircumflex'] = 0x00CE;\n t['Icircumflexsmall'] = 0xF7EE;\n t['Icyrillic'] = 0x0406;\n t['Idblgrave'] = 0x0208;\n t['Idieresis'] = 0x00CF;\n t['Idieresisacute'] = 0x1E2E;\n t['Idieresiscyrillic'] = 0x04E4;\n t['Idieresissmall'] = 0xF7EF;\n t['Idot'] = 0x0130;\n t['Idotaccent'] = 0x0130;\n t['Idotbelow'] = 0x1ECA;\n t['Iebrevecyrillic'] = 0x04D6;\n t['Iecyrillic'] = 0x0415;\n t['Ifraktur'] = 0x2111;\n t['Igrave'] = 0x00CC;\n t['Igravesmall'] = 0xF7EC;\n t['Ihookabove'] = 0x1EC8;\n t['Iicyrillic'] = 0x0418;\n t['Iinvertedbreve'] = 0x020A;\n t['Iishortcyrillic'] = 0x0419;\n t['Imacron'] = 0x012A;\n t['Imacroncyrillic'] = 0x04E2;\n t['Imonospace'] = 0xFF29;\n t['Iniarmenian'] = 0x053B;\n t['Iocyrillic'] = 0x0401;\n t['Iogonek'] = 0x012E;\n t['Iota'] = 0x0399;\n t['Iotaafrican'] = 0x0196;\n t['Iotadieresis'] = 0x03AA;\n t['Iotatonos'] = 0x038A;\n t['Ismall'] = 0xF769;\n t['Istroke'] = 0x0197;\n t['Itilde'] = 0x0128;\n t['Itildebelow'] = 0x1E2C;\n t['Izhitsacyrillic'] = 0x0474;\n t['Izhitsadblgravecyrillic'] = 0x0476;\n t['J'] = 0x004A;\n t['Jaarmenian'] = 0x0541;\n t['Jcircle'] = 0x24BF;\n t['Jcircumflex'] = 0x0134;\n t['Jecyrillic'] = 0x0408;\n t['Jheharmenian'] = 0x054B;\n t['Jmonospace'] = 0xFF2A;\n t['Jsmall'] = 0xF76A;\n t['K'] = 0x004B;\n t['KBsquare'] = 0x3385;\n t['KKsquare'] = 0x33CD;\n t['Kabashkircyrillic'] = 0x04A0;\n t['Kacute'] = 0x1E30;\n t['Kacyrillic'] = 0x041A;\n t['Kadescendercyrillic'] = 0x049A;\n t['Kahookcyrillic'] = 0x04C3;\n t['Kappa'] = 0x039A;\n t['Kastrokecyrillic'] = 0x049E;\n t['Kaverticalstrokecyrillic'] = 0x049C;\n t['Kcaron'] = 0x01E8;\n t['Kcedilla'] = 0x0136;\n t['Kcircle'] = 0x24C0;\n t['Kcommaaccent'] = 0x0136;\n t['Kdotbelow'] = 0x1E32;\n t['Keharmenian'] = 0x0554;\n t['Kenarmenian'] = 0x053F;\n t['Khacyrillic'] = 0x0425;\n t['Kheicoptic'] = 0x03E6;\n t['Khook'] = 0x0198;\n t['Kjecyrillic'] = 0x040C;\n t['Klinebelow'] = 0x1E34;\n t['Kmonospace'] = 0xFF2B;\n t['Koppacyrillic'] = 0x0480;\n t['Koppagreek'] = 0x03DE;\n t['Ksicyrillic'] = 0x046E;\n t['Ksmall'] = 0xF76B;\n t['L'] = 0x004C;\n t['LJ'] = 0x01C7;\n t['LL'] = 0xF6BF;\n t['Lacute'] = 0x0139;\n t['Lambda'] = 0x039B;\n t['Lcaron'] = 0x013D;\n t['Lcedilla'] = 0x013B;\n t['Lcircle'] = 0x24C1;\n t['Lcircumflexbelow'] = 0x1E3C;\n t['Lcommaaccent'] = 0x013B;\n t['Ldot'] = 0x013F;\n t['Ldotaccent'] = 0x013F;\n t['Ldotbelow'] = 0x1E36;\n t['Ldotbelowmacron'] = 0x1E38;\n t['Liwnarmenian'] = 0x053C;\n t['Lj'] = 0x01C8;\n t['Ljecyrillic'] = 0x0409;\n t['Llinebelow'] = 0x1E3A;\n t['Lmonospace'] = 0xFF2C;\n t['Lslash'] = 0x0141;\n t['Lslashsmall'] = 0xF6F9;\n t['Lsmall'] = 0xF76C;\n t['M'] = 0x004D;\n t['MBsquare'] = 0x3386;\n t['Macron'] = 0xF6D0;\n t['Macronsmall'] = 0xF7AF;\n t['Macute'] = 0x1E3E;\n t['Mcircle'] = 0x24C2;\n t['Mdotaccent'] = 0x1E40;\n t['Mdotbelow'] = 0x1E42;\n t['Menarmenian'] = 0x0544;\n t['Mmonospace'] = 0xFF2D;\n t['Msmall'] = 0xF76D;\n t['Mturned'] = 0x019C;\n t['Mu'] = 0x039C;\n t['N'] = 0x004E;\n t['NJ'] = 0x01CA;\n t['Nacute'] = 0x0143;\n t['Ncaron'] = 0x0147;\n t['Ncedilla'] = 0x0145;\n t['Ncircle'] = 0x24C3;\n t['Ncircumflexbelow'] = 0x1E4A;\n t['Ncommaaccent'] = 0x0145;\n t['Ndotaccent'] = 0x1E44;\n t['Ndotbelow'] = 0x1E46;\n t['Nhookleft'] = 0x019D;\n t['Nineroman'] = 0x2168;\n t['Nj'] = 0x01CB;\n t['Njecyrillic'] = 0x040A;\n t['Nlinebelow'] = 0x1E48;\n t['Nmonospace'] = 0xFF2E;\n t['Nowarmenian'] = 0x0546;\n t['Nsmall'] = 0xF76E;\n t['Ntilde'] = 0x00D1;\n t['Ntildesmall'] = 0xF7F1;\n t['Nu'] = 0x039D;\n t['O'] = 0x004F;\n t['OE'] = 0x0152;\n t['OEsmall'] = 0xF6FA;\n t['Oacute'] = 0x00D3;\n t['Oacutesmall'] = 0xF7F3;\n t['Obarredcyrillic'] = 0x04E8;\n t['Obarreddieresiscyrillic'] = 0x04EA;\n t['Obreve'] = 0x014E;\n t['Ocaron'] = 0x01D1;\n t['Ocenteredtilde'] = 0x019F;\n t['Ocircle'] = 0x24C4;\n t['Ocircumflex'] = 0x00D4;\n t['Ocircumflexacute'] = 0x1ED0;\n t['Ocircumflexdotbelow'] = 0x1ED8;\n t['Ocircumflexgrave'] = 0x1ED2;\n t['Ocircumflexhookabove'] = 0x1ED4;\n t['Ocircumflexsmall'] = 0xF7F4;\n t['Ocircumflextilde'] = 0x1ED6;\n t['Ocyrillic'] = 0x041E;\n t['Odblacute'] = 0x0150;\n t['Odblgrave'] = 0x020C;\n t['Odieresis'] = 0x00D6;\n t['Odieresiscyrillic'] = 0x04E6;\n t['Odieresissmall'] = 0xF7F6;\n t['Odotbelow'] = 0x1ECC;\n t['Ogoneksmall'] = 0xF6FB;\n t['Ograve'] = 0x00D2;\n t['Ogravesmall'] = 0xF7F2;\n t['Oharmenian'] = 0x0555;\n t['Ohm'] = 0x2126;\n t['Ohookabove'] = 0x1ECE;\n t['Ohorn'] = 0x01A0;\n t['Ohornacute'] = 0x1EDA;\n t['Ohorndotbelow'] = 0x1EE2;\n t['Ohorngrave'] = 0x1EDC;\n t['Ohornhookabove'] = 0x1EDE;\n t['Ohorntilde'] = 0x1EE0;\n t['Ohungarumlaut'] = 0x0150;\n t['Oi'] = 0x01A2;\n t['Oinvertedbreve'] = 0x020E;\n t['Omacron'] = 0x014C;\n t['Omacronacute'] = 0x1E52;\n t['Omacrongrave'] = 0x1E50;\n t['Omega'] = 0x2126;\n t['Omegacyrillic'] = 0x0460;\n t['Omegagreek'] = 0x03A9;\n t['Omegaroundcyrillic'] = 0x047A;\n t['Omegatitlocyrillic'] = 0x047C;\n t['Omegatonos'] = 0x038F;\n t['Omicron'] = 0x039F;\n t['Omicrontonos'] = 0x038C;\n t['Omonospace'] = 0xFF2F;\n t['Oneroman'] = 0x2160;\n t['Oogonek'] = 0x01EA;\n t['Oogonekmacron'] = 0x01EC;\n t['Oopen'] = 0x0186;\n t['Oslash'] = 0x00D8;\n t['Oslashacute'] = 0x01FE;\n t['Oslashsmall'] = 0xF7F8;\n t['Osmall'] = 0xF76F;\n t['Ostrokeacute'] = 0x01FE;\n t['Otcyrillic'] = 0x047E;\n t['Otilde'] = 0x00D5;\n t['Otildeacute'] = 0x1E4C;\n t['Otildedieresis'] = 0x1E4E;\n t['Otildesmall'] = 0xF7F5;\n t['P'] = 0x0050;\n t['Pacute'] = 0x1E54;\n t['Pcircle'] = 0x24C5;\n t['Pdotaccent'] = 0x1E56;\n t['Pecyrillic'] = 0x041F;\n t['Peharmenian'] = 0x054A;\n t['Pemiddlehookcyrillic'] = 0x04A6;\n t['Phi'] = 0x03A6;\n t['Phook'] = 0x01A4;\n t['Pi'] = 0x03A0;\n t['Piwrarmenian'] = 0x0553;\n t['Pmonospace'] = 0xFF30;\n t['Psi'] = 0x03A8;\n t['Psicyrillic'] = 0x0470;\n t['Psmall'] = 0xF770;\n t['Q'] = 0x0051;\n t['Qcircle'] = 0x24C6;\n t['Qmonospace'] = 0xFF31;\n t['Qsmall'] = 0xF771;\n t['R'] = 0x0052;\n t['Raarmenian'] = 0x054C;\n t['Racute'] = 0x0154;\n t['Rcaron'] = 0x0158;\n t['Rcedilla'] = 0x0156;\n t['Rcircle'] = 0x24C7;\n t['Rcommaaccent'] = 0x0156;\n t['Rdblgrave'] = 0x0210;\n t['Rdotaccent'] = 0x1E58;\n t['Rdotbelow'] = 0x1E5A;\n t['Rdotbelowmacron'] = 0x1E5C;\n t['Reharmenian'] = 0x0550;\n t['Rfraktur'] = 0x211C;\n t['Rho'] = 0x03A1;\n t['Ringsmall'] = 0xF6FC;\n t['Rinvertedbreve'] = 0x0212;\n t['Rlinebelow'] = 0x1E5E;\n t['Rmonospace'] = 0xFF32;\n t['Rsmall'] = 0xF772;\n t['Rsmallinverted'] = 0x0281;\n t['Rsmallinvertedsuperior'] = 0x02B6;\n t['S'] = 0x0053;\n t['SF010000'] = 0x250C;\n t['SF020000'] = 0x2514;\n t['SF030000'] = 0x2510;\n t['SF040000'] = 0x2518;\n t['SF050000'] = 0x253C;\n t['SF060000'] = 0x252C;\n t['SF070000'] = 0x2534;\n t['SF080000'] = 0x251C;\n t['SF090000'] = 0x2524;\n t['SF100000'] = 0x2500;\n t['SF110000'] = 0x2502;\n t['SF190000'] = 0x2561;\n t['SF200000'] = 0x2562;\n t['SF210000'] = 0x2556;\n t['SF220000'] = 0x2555;\n t['SF230000'] = 0x2563;\n t['SF240000'] = 0x2551;\n t['SF250000'] = 0x2557;\n t['SF260000'] = 0x255D;\n t['SF270000'] = 0x255C;\n t['SF280000'] = 0x255B;\n t['SF360000'] = 0x255E;\n t['SF370000'] = 0x255F;\n t['SF380000'] = 0x255A;\n t['SF390000'] = 0x2554;\n t['SF400000'] = 0x2569;\n t['SF410000'] = 0x2566;\n t['SF420000'] = 0x2560;\n t['SF430000'] = 0x2550;\n t['SF440000'] = 0x256C;\n t['SF450000'] = 0x2567;\n t['SF460000'] = 0x2568;\n t['SF470000'] = 0x2564;\n t['SF480000'] = 0x2565;\n t['SF490000'] = 0x2559;\n t['SF500000'] = 0x2558;\n t['SF510000'] = 0x2552;\n t['SF520000'] = 0x2553;\n t['SF530000'] = 0x256B;\n t['SF540000'] = 0x256A;\n t['Sacute'] = 0x015A;\n t['Sacutedotaccent'] = 0x1E64;\n t['Sampigreek'] = 0x03E0;\n t['Scaron'] = 0x0160;\n t['Scarondotaccent'] = 0x1E66;\n t['Scaronsmall'] = 0xF6FD;\n t['Scedilla'] = 0x015E;\n t['Schwa'] = 0x018F;\n t['Schwacyrillic'] = 0x04D8;\n t['Schwadieresiscyrillic'] = 0x04DA;\n t['Scircle'] = 0x24C8;\n t['Scircumflex'] = 0x015C;\n t['Scommaaccent'] = 0x0218;\n t['Sdotaccent'] = 0x1E60;\n t['Sdotbelow'] = 0x1E62;\n t['Sdotbelowdotaccent'] = 0x1E68;\n t['Seharmenian'] = 0x054D;\n t['Sevenroman'] = 0x2166;\n t['Shaarmenian'] = 0x0547;\n t['Shacyrillic'] = 0x0428;\n t['Shchacyrillic'] = 0x0429;\n t['Sheicoptic'] = 0x03E2;\n t['Shhacyrillic'] = 0x04BA;\n t['Shimacoptic'] = 0x03EC;\n t['Sigma'] = 0x03A3;\n t['Sixroman'] = 0x2165;\n t['Smonospace'] = 0xFF33;\n t['Softsigncyrillic'] = 0x042C;\n t['Ssmall'] = 0xF773;\n t['Stigmagreek'] = 0x03DA;\n t['T'] = 0x0054;\n t['Tau'] = 0x03A4;\n t['Tbar'] = 0x0166;\n t['Tcaron'] = 0x0164;\n t['Tcedilla'] = 0x0162;\n t['Tcircle'] = 0x24C9;\n t['Tcircumflexbelow'] = 0x1E70;\n t['Tcommaaccent'] = 0x0162;\n t['Tdotaccent'] = 0x1E6A;\n t['Tdotbelow'] = 0x1E6C;\n t['Tecyrillic'] = 0x0422;\n t['Tedescendercyrillic'] = 0x04AC;\n t['Tenroman'] = 0x2169;\n t['Tetsecyrillic'] = 0x04B4;\n t['Theta'] = 0x0398;\n t['Thook'] = 0x01AC;\n t['Thorn'] = 0x00DE;\n t['Thornsmall'] = 0xF7FE;\n t['Threeroman'] = 0x2162;\n t['Tildesmall'] = 0xF6FE;\n t['Tiwnarmenian'] = 0x054F;\n t['Tlinebelow'] = 0x1E6E;\n t['Tmonospace'] = 0xFF34;\n t['Toarmenian'] = 0x0539;\n t['Tonefive'] = 0x01BC;\n t['Tonesix'] = 0x0184;\n t['Tonetwo'] = 0x01A7;\n t['Tretroflexhook'] = 0x01AE;\n t['Tsecyrillic'] = 0x0426;\n t['Tshecyrillic'] = 0x040B;\n t['Tsmall'] = 0xF774;\n t['Twelveroman'] = 0x216B;\n t['Tworoman'] = 0x2161;\n t['U'] = 0x0055;\n t['Uacute'] = 0x00DA;\n t['Uacutesmall'] = 0xF7FA;\n t['Ubreve'] = 0x016C;\n t['Ucaron'] = 0x01D3;\n t['Ucircle'] = 0x24CA;\n t['Ucircumflex'] = 0x00DB;\n t['Ucircumflexbelow'] = 0x1E76;\n t['Ucircumflexsmall'] = 0xF7FB;\n t['Ucyrillic'] = 0x0423;\n t['Udblacute'] = 0x0170;\n t['Udblgrave'] = 0x0214;\n t['Udieresis'] = 0x00DC;\n t['Udieresisacute'] = 0x01D7;\n t['Udieresisbelow'] = 0x1E72;\n t['Udieresiscaron'] = 0x01D9;\n t['Udieresiscyrillic'] = 0x04F0;\n t['Udieresisgrave'] = 0x01DB;\n t['Udieresismacron'] = 0x01D5;\n t['Udieresissmall'] = 0xF7FC;\n t['Udotbelow'] = 0x1EE4;\n t['Ugrave'] = 0x00D9;\n t['Ugravesmall'] = 0xF7F9;\n t['Uhookabove'] = 0x1EE6;\n t['Uhorn'] = 0x01AF;\n t['Uhornacute'] = 0x1EE8;\n t['Uhorndotbelow'] = 0x1EF0;\n t['Uhorngrave'] = 0x1EEA;\n t['Uhornhookabove'] = 0x1EEC;\n t['Uhorntilde'] = 0x1EEE;\n t['Uhungarumlaut'] = 0x0170;\n t['Uhungarumlautcyrillic'] = 0x04F2;\n t['Uinvertedbreve'] = 0x0216;\n t['Ukcyrillic'] = 0x0478;\n t['Umacron'] = 0x016A;\n t['Umacroncyrillic'] = 0x04EE;\n t['Umacrondieresis'] = 0x1E7A;\n t['Umonospace'] = 0xFF35;\n t['Uogonek'] = 0x0172;\n t['Upsilon'] = 0x03A5;\n t['Upsilon1'] = 0x03D2;\n t['Upsilonacutehooksymbolgreek'] = 0x03D3;\n t['Upsilonafrican'] = 0x01B1;\n t['Upsilondieresis'] = 0x03AB;\n t['Upsilondieresishooksymbolgreek'] = 0x03D4;\n t['Upsilonhooksymbol'] = 0x03D2;\n t['Upsilontonos'] = 0x038E;\n t['Uring'] = 0x016E;\n t['Ushortcyrillic'] = 0x040E;\n t['Usmall'] = 0xF775;\n t['Ustraightcyrillic'] = 0x04AE;\n t['Ustraightstrokecyrillic'] = 0x04B0;\n t['Utilde'] = 0x0168;\n t['Utildeacute'] = 0x1E78;\n t['Utildebelow'] = 0x1E74;\n t['V'] = 0x0056;\n t['Vcircle'] = 0x24CB;\n t['Vdotbelow'] = 0x1E7E;\n t['Vecyrillic'] = 0x0412;\n t['Vewarmenian'] = 0x054E;\n t['Vhook'] = 0x01B2;\n t['Vmonospace'] = 0xFF36;\n t['Voarmenian'] = 0x0548;\n t['Vsmall'] = 0xF776;\n t['Vtilde'] = 0x1E7C;\n t['W'] = 0x0057;\n t['Wacute'] = 0x1E82;\n t['Wcircle'] = 0x24CC;\n t['Wcircumflex'] = 0x0174;\n t['Wdieresis'] = 0x1E84;\n t['Wdotaccent'] = 0x1E86;\n t['Wdotbelow'] = 0x1E88;\n t['Wgrave'] = 0x1E80;\n t['Wmonospace'] = 0xFF37;\n t['Wsmall'] = 0xF777;\n t['X'] = 0x0058;\n t['Xcircle'] = 0x24CD;\n t['Xdieresis'] = 0x1E8C;\n t['Xdotaccent'] = 0x1E8A;\n t['Xeharmenian'] = 0x053D;\n t['Xi'] = 0x039E;\n t['Xmonospace'] = 0xFF38;\n t['Xsmall'] = 0xF778;\n t['Y'] = 0x0059;\n t['Yacute'] = 0x00DD;\n t['Yacutesmall'] = 0xF7FD;\n t['Yatcyrillic'] = 0x0462;\n t['Ycircle'] = 0x24CE;\n t['Ycircumflex'] = 0x0176;\n t['Ydieresis'] = 0x0178;\n t['Ydieresissmall'] = 0xF7FF;\n t['Ydotaccent'] = 0x1E8E;\n t['Ydotbelow'] = 0x1EF4;\n t['Yericyrillic'] = 0x042B;\n t['Yerudieresiscyrillic'] = 0x04F8;\n t['Ygrave'] = 0x1EF2;\n t['Yhook'] = 0x01B3;\n t['Yhookabove'] = 0x1EF6;\n t['Yiarmenian'] = 0x0545;\n t['Yicyrillic'] = 0x0407;\n t['Yiwnarmenian'] = 0x0552;\n t['Ymonospace'] = 0xFF39;\n t['Ysmall'] = 0xF779;\n t['Ytilde'] = 0x1EF8;\n t['Yusbigcyrillic'] = 0x046A;\n t['Yusbigiotifiedcyrillic'] = 0x046C;\n t['Yuslittlecyrillic'] = 0x0466;\n t['Yuslittleiotifiedcyrillic'] = 0x0468;\n t['Z'] = 0x005A;\n t['Zaarmenian'] = 0x0536;\n t['Zacute'] = 0x0179;\n t['Zcaron'] = 0x017D;\n t['Zcaronsmall'] = 0xF6FF;\n t['Zcircle'] = 0x24CF;\n t['Zcircumflex'] = 0x1E90;\n t['Zdot'] = 0x017B;\n t['Zdotaccent'] = 0x017B;\n t['Zdotbelow'] = 0x1E92;\n t['Zecyrillic'] = 0x0417;\n t['Zedescendercyrillic'] = 0x0498;\n t['Zedieresiscyrillic'] = 0x04DE;\n t['Zeta'] = 0x0396;\n t['Zhearmenian'] = 0x053A;\n t['Zhebrevecyrillic'] = 0x04C1;\n t['Zhecyrillic'] = 0x0416;\n t['Zhedescendercyrillic'] = 0x0496;\n t['Zhedieresiscyrillic'] = 0x04DC;\n t['Zlinebelow'] = 0x1E94;\n t['Zmonospace'] = 0xFF3A;\n t['Zsmall'] = 0xF77A;\n t['Zstroke'] = 0x01B5;\n t['a'] = 0x0061;\n t['aabengali'] = 0x0986;\n t['aacute'] = 0x00E1;\n t['aadeva'] = 0x0906;\n t['aagujarati'] = 0x0A86;\n t['aagurmukhi'] = 0x0A06;\n t['aamatragurmukhi'] = 0x0A3E;\n t['aarusquare'] = 0x3303;\n t['aavowelsignbengali'] = 0x09BE;\n t['aavowelsigndeva'] = 0x093E;\n t['aavowelsigngujarati'] = 0x0ABE;\n t['abbreviationmarkarmenian'] = 0x055F;\n t['abbreviationsigndeva'] = 0x0970;\n t['abengali'] = 0x0985;\n t['abopomofo'] = 0x311A;\n t['abreve'] = 0x0103;\n t['abreveacute'] = 0x1EAF;\n t['abrevecyrillic'] = 0x04D1;\n t['abrevedotbelow'] = 0x1EB7;\n t['abrevegrave'] = 0x1EB1;\n t['abrevehookabove'] = 0x1EB3;\n t['abrevetilde'] = 0x1EB5;\n t['acaron'] = 0x01CE;\n t['acircle'] = 0x24D0;\n t['acircumflex'] = 0x00E2;\n t['acircumflexacute'] = 0x1EA5;\n t['acircumflexdotbelow'] = 0x1EAD;\n t['acircumflexgrave'] = 0x1EA7;\n t['acircumflexhookabove'] = 0x1EA9;\n t['acircumflextilde'] = 0x1EAB;\n t['acute'] = 0x00B4;\n t['acutebelowcmb'] = 0x0317;\n t['acutecmb'] = 0x0301;\n t['acutecomb'] = 0x0301;\n t['acutedeva'] = 0x0954;\n t['acutelowmod'] = 0x02CF;\n t['acutetonecmb'] = 0x0341;\n t['acyrillic'] = 0x0430;\n t['adblgrave'] = 0x0201;\n t['addakgurmukhi'] = 0x0A71;\n t['adeva'] = 0x0905;\n t['adieresis'] = 0x00E4;\n t['adieresiscyrillic'] = 0x04D3;\n t['adieresismacron'] = 0x01DF;\n t['adotbelow'] = 0x1EA1;\n t['adotmacron'] = 0x01E1;\n t['ae'] = 0x00E6;\n t['aeacute'] = 0x01FD;\n t['aekorean'] = 0x3150;\n t['aemacron'] = 0x01E3;\n t['afii00208'] = 0x2015;\n t['afii08941'] = 0x20A4;\n t['afii10017'] = 0x0410;\n t['afii10018'] = 0x0411;\n t['afii10019'] = 0x0412;\n t['afii10020'] = 0x0413;\n t['afii10021'] = 0x0414;\n t['afii10022'] = 0x0415;\n t['afii10023'] = 0x0401;\n t['afii10024'] = 0x0416;\n t['afii10025'] = 0x0417;\n t['afii10026'] = 0x0418;\n t['afii10027'] = 0x0419;\n t['afii10028'] = 0x041A;\n t['afii10029'] = 0x041B;\n t['afii10030'] = 0x041C;\n t['afii10031'] = 0x041D;\n t['afii10032'] = 0x041E;\n t['afii10033'] = 0x041F;\n t['afii10034'] = 0x0420;\n t['afii10035'] = 0x0421;\n t['afii10036'] = 0x0422;\n t['afii10037'] = 0x0423;\n t['afii10038'] = 0x0424;\n t['afii10039'] = 0x0425;\n t['afii10040'] = 0x0426;\n t['afii10041'] = 0x0427;\n t['afii10042'] = 0x0428;\n t['afii10043'] = 0x0429;\n t['afii10044'] = 0x042A;\n t['afii10045'] = 0x042B;\n t['afii10046'] = 0x042C;\n t['afii10047'] = 0x042D;\n t['afii10048'] = 0x042E;\n t['afii10049'] = 0x042F;\n t['afii10050'] = 0x0490;\n t['afii10051'] = 0x0402;\n t['afii10052'] = 0x0403;\n t['afii10053'] = 0x0404;\n t['afii10054'] = 0x0405;\n t['afii10055'] = 0x0406;\n t['afii10056'] = 0x0407;\n t['afii10057'] = 0x0408;\n t['afii10058'] = 0x0409;\n t['afii10059'] = 0x040A;\n t['afii10060'] = 0x040B;\n t['afii10061'] = 0x040C;\n t['afii10062'] = 0x040E;\n t['afii10063'] = 0xF6C4;\n t['afii10064'] = 0xF6C5;\n t['afii10065'] = 0x0430;\n t['afii10066'] = 0x0431;\n t['afii10067'] = 0x0432;\n t['afii10068'] = 0x0433;\n t['afii10069'] = 0x0434;\n t['afii10070'] = 0x0435;\n t['afii10071'] = 0x0451;\n t['afii10072'] = 0x0436;\n t['afii10073'] = 0x0437;\n t['afii10074'] = 0x0438;\n t['afii10075'] = 0x0439;\n t['afii10076'] = 0x043A;\n t['afii10077'] = 0x043B;\n t['afii10078'] = 0x043C;\n t['afii10079'] = 0x043D;\n t['afii10080'] = 0x043E;\n t['afii10081'] = 0x043F;\n t['afii10082'] = 0x0440;\n t['afii10083'] = 0x0441;\n t['afii10084'] = 0x0442;\n t['afii10085'] = 0x0443;\n t['afii10086'] = 0x0444;\n t['afii10087'] = 0x0445;\n t['afii10088'] = 0x0446;\n t['afii10089'] = 0x0447;\n t['afii10090'] = 0x0448;\n t['afii10091'] = 0x0449;\n t['afii10092'] = 0x044A;\n t['afii10093'] = 0x044B;\n t['afii10094'] = 0x044C;\n t['afii10095'] = 0x044D;\n t['afii10096'] = 0x044E;\n t['afii10097'] = 0x044F;\n t['afii10098'] = 0x0491;\n t['afii10099'] = 0x0452;\n t['afii10100'] = 0x0453;\n t['afii10101'] = 0x0454;\n t['afii10102'] = 0x0455;\n t['afii10103'] = 0x0456;\n t['afii10104'] = 0x0457;\n t['afii10105'] = 0x0458;\n t['afii10106'] = 0x0459;\n t['afii10107'] = 0x045A;\n t['afii10108'] = 0x045B;\n t['afii10109'] = 0x045C;\n t['afii10110'] = 0x045E;\n t['afii10145'] = 0x040F;\n t['afii10146'] = 0x0462;\n t['afii10147'] = 0x0472;\n t['afii10148'] = 0x0474;\n t['afii10192'] = 0xF6C6;\n t['afii10193'] = 0x045F;\n t['afii10194'] = 0x0463;\n t['afii10195'] = 0x0473;\n t['afii10196'] = 0x0475;\n t['afii10831'] = 0xF6C7;\n t['afii10832'] = 0xF6C8;\n t['afii10846'] = 0x04D9;\n t['afii299'] = 0x200E;\n t['afii300'] = 0x200F;\n t['afii301'] = 0x200D;\n t['afii57381'] = 0x066A;\n t['afii57388'] = 0x060C;\n t['afii57392'] = 0x0660;\n t['afii57393'] = 0x0661;\n t['afii57394'] = 0x0662;\n t['afii57395'] = 0x0663;\n t['afii57396'] = 0x0664;\n t['afii57397'] = 0x0665;\n t['afii57398'] = 0x0666;\n t['afii57399'] = 0x0667;\n t['afii57400'] = 0x0668;\n t['afii57401'] = 0x0669;\n t['afii57403'] = 0x061B;\n t['afii57407'] = 0x061F;\n t['afii57409'] = 0x0621;\n t['afii57410'] = 0x0622;\n t['afii57411'] = 0x0623;\n t['afii57412'] = 0x0624;\n t['afii57413'] = 0x0625;\n t['afii57414'] = 0x0626;\n t['afii57415'] = 0x0627;\n t['afii57416'] = 0x0628;\n t['afii57417'] = 0x0629;\n t['afii57418'] = 0x062A;\n t['afii57419'] = 0x062B;\n t['afii57420'] = 0x062C;\n t['afii57421'] = 0x062D;\n t['afii57422'] = 0x062E;\n t['afii57423'] = 0x062F;\n t['afii57424'] = 0x0630;\n t['afii57425'] = 0x0631;\n t['afii57426'] = 0x0632;\n t['afii57427'] = 0x0633;\n t['afii57428'] = 0x0634;\n t['afii57429'] = 0x0635;\n t['afii57430'] = 0x0636;\n t['afii57431'] = 0x0637;\n t['afii57432'] = 0x0638;\n t['afii57433'] = 0x0639;\n t['afii57434'] = 0x063A;\n t['afii57440'] = 0x0640;\n t['afii57441'] = 0x0641;\n t['afii57442'] = 0x0642;\n t['afii57443'] = 0x0643;\n t['afii57444'] = 0x0644;\n t['afii57445'] = 0x0645;\n t['afii57446'] = 0x0646;\n t['afii57448'] = 0x0648;\n t['afii57449'] = 0x0649;\n t['afii57450'] = 0x064A;\n t['afii57451'] = 0x064B;\n t['afii57452'] = 0x064C;\n t['afii57453'] = 0x064D;\n t['afii57454'] = 0x064E;\n t['afii57455'] = 0x064F;\n t['afii57456'] = 0x0650;\n t['afii57457'] = 0x0651;\n t['afii57458'] = 0x0652;\n t['afii57470'] = 0x0647;\n t['afii57505'] = 0x06A4;\n t['afii57506'] = 0x067E;\n t['afii57507'] = 0x0686;\n t['afii57508'] = 0x0698;\n t['afii57509'] = 0x06AF;\n t['afii57511'] = 0x0679;\n t['afii57512'] = 0x0688;\n t['afii57513'] = 0x0691;\n t['afii57514'] = 0x06BA;\n t['afii57519'] = 0x06D2;\n t['afii57534'] = 0x06D5;\n t['afii57636'] = 0x20AA;\n t['afii57645'] = 0x05BE;\n t['afii57658'] = 0x05C3;\n t['afii57664'] = 0x05D0;\n t['afii57665'] = 0x05D1;\n t['afii57666'] = 0x05D2;\n t['afii57667'] = 0x05D3;\n t['afii57668'] = 0x05D4;\n t['afii57669'] = 0x05D5;\n t['afii57670'] = 0x05D6;\n t['afii57671'] = 0x05D7;\n t['afii57672'] = 0x05D8;\n t['afii57673'] = 0x05D9;\n t['afii57674'] = 0x05DA;\n t['afii57675'] = 0x05DB;\n t['afii57676'] = 0x05DC;\n t['afii57677'] = 0x05DD;\n t['afii57678'] = 0x05DE;\n t['afii57679'] = 0x05DF;\n t['afii57680'] = 0x05E0;\n t['afii57681'] = 0x05E1;\n t['afii57682'] = 0x05E2;\n t['afii57683'] = 0x05E3;\n t['afii57684'] = 0x05E4;\n t['afii57685'] = 0x05E5;\n t['afii57686'] = 0x05E6;\n t['afii57687'] = 0x05E7;\n t['afii57688'] = 0x05E8;\n t['afii57689'] = 0x05E9;\n t['afii57690'] = 0x05EA;\n t['afii57694'] = 0xFB2A;\n t['afii57695'] = 0xFB2B;\n t['afii57700'] = 0xFB4B;\n t['afii57705'] = 0xFB1F;\n t['afii57716'] = 0x05F0;\n t['afii57717'] = 0x05F1;\n t['afii57718'] = 0x05F2;\n t['afii57723'] = 0xFB35;\n t['afii57793'] = 0x05B4;\n t['afii57794'] = 0x05B5;\n t['afii57795'] = 0x05B6;\n t['afii57796'] = 0x05BB;\n t['afii57797'] = 0x05B8;\n t['afii57798'] = 0x05B7;\n t['afii57799'] = 0x05B0;\n t['afii57800'] = 0x05B2;\n t['afii57801'] = 0x05B1;\n t['afii57802'] = 0x05B3;\n t['afii57803'] = 0x05C2;\n t['afii57804'] = 0x05C1;\n t['afii57806'] = 0x05B9;\n t['afii57807'] = 0x05BC;\n t['afii57839'] = 0x05BD;\n t['afii57841'] = 0x05BF;\n t['afii57842'] = 0x05C0;\n t['afii57929'] = 0x02BC;\n t['afii61248'] = 0x2105;\n t['afii61289'] = 0x2113;\n t['afii61352'] = 0x2116;\n t['afii61573'] = 0x202C;\n t['afii61574'] = 0x202D;\n t['afii61575'] = 0x202E;\n t['afii61664'] = 0x200C;\n t['afii63167'] = 0x066D;\n t['afii64937'] = 0x02BD;\n t['agrave'] = 0x00E0;\n t['agujarati'] = 0x0A85;\n t['agurmukhi'] = 0x0A05;\n t['ahiragana'] = 0x3042;\n t['ahookabove'] = 0x1EA3;\n t['aibengali'] = 0x0990;\n t['aibopomofo'] = 0x311E;\n t['aideva'] = 0x0910;\n t['aiecyrillic'] = 0x04D5;\n t['aigujarati'] = 0x0A90;\n t['aigurmukhi'] = 0x0A10;\n t['aimatragurmukhi'] = 0x0A48;\n t['ainarabic'] = 0x0639;\n t['ainfinalarabic'] = 0xFECA;\n t['aininitialarabic'] = 0xFECB;\n t['ainmedialarabic'] = 0xFECC;\n t['ainvertedbreve'] = 0x0203;\n t['aivowelsignbengali'] = 0x09C8;\n t['aivowelsigndeva'] = 0x0948;\n t['aivowelsigngujarati'] = 0x0AC8;\n t['akatakana'] = 0x30A2;\n t['akatakanahalfwidth'] = 0xFF71;\n t['akorean'] = 0x314F;\n t['alef'] = 0x05D0;\n t['alefarabic'] = 0x0627;\n t['alefdageshhebrew'] = 0xFB30;\n t['aleffinalarabic'] = 0xFE8E;\n t['alefhamzaabovearabic'] = 0x0623;\n t['alefhamzaabovefinalarabic'] = 0xFE84;\n t['alefhamzabelowarabic'] = 0x0625;\n t['alefhamzabelowfinalarabic'] = 0xFE88;\n t['alefhebrew'] = 0x05D0;\n t['aleflamedhebrew'] = 0xFB4F;\n t['alefmaddaabovearabic'] = 0x0622;\n t['alefmaddaabovefinalarabic'] = 0xFE82;\n t['alefmaksuraarabic'] = 0x0649;\n t['alefmaksurafinalarabic'] = 0xFEF0;\n t['alefmaksurainitialarabic'] = 0xFEF3;\n t['alefmaksuramedialarabic'] = 0xFEF4;\n t['alefpatahhebrew'] = 0xFB2E;\n t['alefqamatshebrew'] = 0xFB2F;\n t['aleph'] = 0x2135;\n t['allequal'] = 0x224C;\n t['alpha'] = 0x03B1;\n t['alphatonos'] = 0x03AC;\n t['amacron'] = 0x0101;\n t['amonospace'] = 0xFF41;\n t['ampersand'] = 0x0026;\n t['ampersandmonospace'] = 0xFF06;\n t['ampersandsmall'] = 0xF726;\n t['amsquare'] = 0x33C2;\n t['anbopomofo'] = 0x3122;\n t['angbopomofo'] = 0x3124;\n t['angbracketleft'] = 0x3008;\n t['angbracketright'] = 0x3009;\n t['angkhankhuthai'] = 0x0E5A;\n t['angle'] = 0x2220;\n t['anglebracketleft'] = 0x3008;\n t['anglebracketleftvertical'] = 0xFE3F;\n t['anglebracketright'] = 0x3009;\n t['anglebracketrightvertical'] = 0xFE40;\n t['angleleft'] = 0x2329;\n t['angleright'] = 0x232A;\n t['angstrom'] = 0x212B;\n t['anoteleia'] = 0x0387;\n t['anudattadeva'] = 0x0952;\n t['anusvarabengali'] = 0x0982;\n t['anusvaradeva'] = 0x0902;\n t['anusvaragujarati'] = 0x0A82;\n t['aogonek'] = 0x0105;\n t['apaatosquare'] = 0x3300;\n t['aparen'] = 0x249C;\n t['apostrophearmenian'] = 0x055A;\n t['apostrophemod'] = 0x02BC;\n t['apple'] = 0xF8FF;\n t['approaches'] = 0x2250;\n t['approxequal'] = 0x2248;\n t['approxequalorimage'] = 0x2252;\n t['approximatelyequal'] = 0x2245;\n t['araeaekorean'] = 0x318E;\n t['araeakorean'] = 0x318D;\n t['arc'] = 0x2312;\n t['arighthalfring'] = 0x1E9A;\n t['aring'] = 0x00E5;\n t['aringacute'] = 0x01FB;\n t['aringbelow'] = 0x1E01;\n t['arrowboth'] = 0x2194;\n t['arrowdashdown'] = 0x21E3;\n t['arrowdashleft'] = 0x21E0;\n t['arrowdashright'] = 0x21E2;\n t['arrowdashup'] = 0x21E1;\n t['arrowdblboth'] = 0x21D4;\n t['arrowdbldown'] = 0x21D3;\n t['arrowdblleft'] = 0x21D0;\n t['arrowdblright'] = 0x21D2;\n t['arrowdblup'] = 0x21D1;\n t['arrowdown'] = 0x2193;\n t['arrowdownleft'] = 0x2199;\n t['arrowdownright'] = 0x2198;\n t['arrowdownwhite'] = 0x21E9;\n t['arrowheaddownmod'] = 0x02C5;\n t['arrowheadleftmod'] = 0x02C2;\n t['arrowheadrightmod'] = 0x02C3;\n t['arrowheadupmod'] = 0x02C4;\n t['arrowhorizex'] = 0xF8E7;\n t['arrowleft'] = 0x2190;\n t['arrowleftdbl'] = 0x21D0;\n t['arrowleftdblstroke'] = 0x21CD;\n t['arrowleftoverright'] = 0x21C6;\n t['arrowleftwhite'] = 0x21E6;\n t['arrowright'] = 0x2192;\n t['arrowrightdblstroke'] = 0x21CF;\n t['arrowrightheavy'] = 0x279E;\n t['arrowrightoverleft'] = 0x21C4;\n t['arrowrightwhite'] = 0x21E8;\n t['arrowtableft'] = 0x21E4;\n t['arrowtabright'] = 0x21E5;\n t['arrowup'] = 0x2191;\n t['arrowupdn'] = 0x2195;\n t['arrowupdnbse'] = 0x21A8;\n t['arrowupdownbase'] = 0x21A8;\n t['arrowupleft'] = 0x2196;\n t['arrowupleftofdown'] = 0x21C5;\n t['arrowupright'] = 0x2197;\n t['arrowupwhite'] = 0x21E7;\n t['arrowvertex'] = 0xF8E6;\n t['asciicircum'] = 0x005E;\n t['asciicircummonospace'] = 0xFF3E;\n t['asciitilde'] = 0x007E;\n t['asciitildemonospace'] = 0xFF5E;\n t['ascript'] = 0x0251;\n t['ascriptturned'] = 0x0252;\n t['asmallhiragana'] = 0x3041;\n t['asmallkatakana'] = 0x30A1;\n t['asmallkatakanahalfwidth'] = 0xFF67;\n t['asterisk'] = 0x002A;\n t['asteriskaltonearabic'] = 0x066D;\n t['asteriskarabic'] = 0x066D;\n t['asteriskmath'] = 0x2217;\n t['asteriskmonospace'] = 0xFF0A;\n t['asterisksmall'] = 0xFE61;\n t['asterism'] = 0x2042;\n t['asuperior'] = 0xF6E9;\n t['asymptoticallyequal'] = 0x2243;\n t['at'] = 0x0040;\n t['atilde'] = 0x00E3;\n t['atmonospace'] = 0xFF20;\n t['atsmall'] = 0xFE6B;\n t['aturned'] = 0x0250;\n t['aubengali'] = 0x0994;\n t['aubopomofo'] = 0x3120;\n t['audeva'] = 0x0914;\n t['augujarati'] = 0x0A94;\n t['augurmukhi'] = 0x0A14;\n t['aulengthmarkbengali'] = 0x09D7;\n t['aumatragurmukhi'] = 0x0A4C;\n t['auvowelsignbengali'] = 0x09CC;\n t['auvowelsigndeva'] = 0x094C;\n t['auvowelsigngujarati'] = 0x0ACC;\n t['avagrahadeva'] = 0x093D;\n t['aybarmenian'] = 0x0561;\n t['ayin'] = 0x05E2;\n t['ayinaltonehebrew'] = 0xFB20;\n t['ayinhebrew'] = 0x05E2;\n t['b'] = 0x0062;\n t['babengali'] = 0x09AC;\n t['backslash'] = 0x005C;\n t['backslashmonospace'] = 0xFF3C;\n t['badeva'] = 0x092C;\n t['bagujarati'] = 0x0AAC;\n t['bagurmukhi'] = 0x0A2C;\n t['bahiragana'] = 0x3070;\n t['bahtthai'] = 0x0E3F;\n t['bakatakana'] = 0x30D0;\n t['bar'] = 0x007C;\n t['barmonospace'] = 0xFF5C;\n t['bbopomofo'] = 0x3105;\n t['bcircle'] = 0x24D1;\n t['bdotaccent'] = 0x1E03;\n t['bdotbelow'] = 0x1E05;\n t['beamedsixteenthnotes'] = 0x266C;\n t['because'] = 0x2235;\n t['becyrillic'] = 0x0431;\n t['beharabic'] = 0x0628;\n t['behfinalarabic'] = 0xFE90;\n t['behinitialarabic'] = 0xFE91;\n t['behiragana'] = 0x3079;\n t['behmedialarabic'] = 0xFE92;\n t['behmeeminitialarabic'] = 0xFC9F;\n t['behmeemisolatedarabic'] = 0xFC08;\n t['behnoonfinalarabic'] = 0xFC6D;\n t['bekatakana'] = 0x30D9;\n t['benarmenian'] = 0x0562;\n t['bet'] = 0x05D1;\n t['beta'] = 0x03B2;\n t['betasymbolgreek'] = 0x03D0;\n t['betdagesh'] = 0xFB31;\n t['betdageshhebrew'] = 0xFB31;\n t['bethebrew'] = 0x05D1;\n t['betrafehebrew'] = 0xFB4C;\n t['bhabengali'] = 0x09AD;\n t['bhadeva'] = 0x092D;\n t['bhagujarati'] = 0x0AAD;\n t['bhagurmukhi'] = 0x0A2D;\n t['bhook'] = 0x0253;\n t['bihiragana'] = 0x3073;\n t['bikatakana'] = 0x30D3;\n t['bilabialclick'] = 0x0298;\n t['bindigurmukhi'] = 0x0A02;\n t['birusquare'] = 0x3331;\n t['blackcircle'] = 0x25CF;\n t['blackdiamond'] = 0x25C6;\n t['blackdownpointingtriangle'] = 0x25BC;\n t['blackleftpointingpointer'] = 0x25C4;\n t['blackleftpointingtriangle'] = 0x25C0;\n t['blacklenticularbracketleft'] = 0x3010;\n t['blacklenticularbracketleftvertical'] = 0xFE3B;\n t['blacklenticularbracketright'] = 0x3011;\n t['blacklenticularbracketrightvertical'] = 0xFE3C;\n t['blacklowerlefttriangle'] = 0x25E3;\n t['blacklowerrighttriangle'] = 0x25E2;\n t['blackrectangle'] = 0x25AC;\n t['blackrightpointingpointer'] = 0x25BA;\n t['blackrightpointingtriangle'] = 0x25B6;\n t['blacksmallsquare'] = 0x25AA;\n t['blacksmilingface'] = 0x263B;\n t['blacksquare'] = 0x25A0;\n t['blackstar'] = 0x2605;\n t['blackupperlefttriangle'] = 0x25E4;\n t['blackupperrighttriangle'] = 0x25E5;\n t['blackuppointingsmalltriangle'] = 0x25B4;\n t['blackuppointingtriangle'] = 0x25B2;\n t['blank'] = 0x2423;\n t['blinebelow'] = 0x1E07;\n t['block'] = 0x2588;\n t['bmonospace'] = 0xFF42;\n t['bobaimaithai'] = 0x0E1A;\n t['bohiragana'] = 0x307C;\n t['bokatakana'] = 0x30DC;\n t['bparen'] = 0x249D;\n t['bqsquare'] = 0x33C3;\n t['braceex'] = 0xF8F4;\n t['braceleft'] = 0x007B;\n t['braceleftbt'] = 0xF8F3;\n t['braceleftmid'] = 0xF8F2;\n t['braceleftmonospace'] = 0xFF5B;\n t['braceleftsmall'] = 0xFE5B;\n t['bracelefttp'] = 0xF8F1;\n t['braceleftvertical'] = 0xFE37;\n t['braceright'] = 0x007D;\n t['bracerightbt'] = 0xF8FE;\n t['bracerightmid'] = 0xF8FD;\n t['bracerightmonospace'] = 0xFF5D;\n t['bracerightsmall'] = 0xFE5C;\n t['bracerighttp'] = 0xF8FC;\n t['bracerightvertical'] = 0xFE38;\n t['bracketleft'] = 0x005B;\n t['bracketleftbt'] = 0xF8F0;\n t['bracketleftex'] = 0xF8EF;\n t['bracketleftmonospace'] = 0xFF3B;\n t['bracketlefttp'] = 0xF8EE;\n t['bracketright'] = 0x005D;\n t['bracketrightbt'] = 0xF8FB;\n t['bracketrightex'] = 0xF8FA;\n t['bracketrightmonospace'] = 0xFF3D;\n t['bracketrighttp'] = 0xF8F9;\n t['breve'] = 0x02D8;\n t['brevebelowcmb'] = 0x032E;\n t['brevecmb'] = 0x0306;\n t['breveinvertedbelowcmb'] = 0x032F;\n t['breveinvertedcmb'] = 0x0311;\n t['breveinverteddoublecmb'] = 0x0361;\n t['bridgebelowcmb'] = 0x032A;\n t['bridgeinvertedbelowcmb'] = 0x033A;\n t['brokenbar'] = 0x00A6;\n t['bstroke'] = 0x0180;\n t['bsuperior'] = 0xF6EA;\n t['btopbar'] = 0x0183;\n t['buhiragana'] = 0x3076;\n t['bukatakana'] = 0x30D6;\n t['bullet'] = 0x2022;\n t['bulletinverse'] = 0x25D8;\n t['bulletoperator'] = 0x2219;\n t['bullseye'] = 0x25CE;\n t['c'] = 0x0063;\n t['caarmenian'] = 0x056E;\n t['cabengali'] = 0x099A;\n t['cacute'] = 0x0107;\n t['cadeva'] = 0x091A;\n t['cagujarati'] = 0x0A9A;\n t['cagurmukhi'] = 0x0A1A;\n t['calsquare'] = 0x3388;\n t['candrabindubengali'] = 0x0981;\n t['candrabinducmb'] = 0x0310;\n t['candrabindudeva'] = 0x0901;\n t['candrabindugujarati'] = 0x0A81;\n t['capslock'] = 0x21EA;\n t['careof'] = 0x2105;\n t['caron'] = 0x02C7;\n t['caronbelowcmb'] = 0x032C;\n t['caroncmb'] = 0x030C;\n t['carriagereturn'] = 0x21B5;\n t['cbopomofo'] = 0x3118;\n t['ccaron'] = 0x010D;\n t['ccedilla'] = 0x00E7;\n t['ccedillaacute'] = 0x1E09;\n t['ccircle'] = 0x24D2;\n t['ccircumflex'] = 0x0109;\n t['ccurl'] = 0x0255;\n t['cdot'] = 0x010B;\n t['cdotaccent'] = 0x010B;\n t['cdsquare'] = 0x33C5;\n t['cedilla'] = 0x00B8;\n t['cedillacmb'] = 0x0327;\n t['cent'] = 0x00A2;\n t['centigrade'] = 0x2103;\n t['centinferior'] = 0xF6DF;\n t['centmonospace'] = 0xFFE0;\n t['centoldstyle'] = 0xF7A2;\n t['centsuperior'] = 0xF6E0;\n t['chaarmenian'] = 0x0579;\n t['chabengali'] = 0x099B;\n t['chadeva'] = 0x091B;\n t['chagujarati'] = 0x0A9B;\n t['chagurmukhi'] = 0x0A1B;\n t['chbopomofo'] = 0x3114;\n t['cheabkhasiancyrillic'] = 0x04BD;\n t['checkmark'] = 0x2713;\n t['checyrillic'] = 0x0447;\n t['chedescenderabkhasiancyrillic'] = 0x04BF;\n t['chedescendercyrillic'] = 0x04B7;\n t['chedieresiscyrillic'] = 0x04F5;\n t['cheharmenian'] = 0x0573;\n t['chekhakassiancyrillic'] = 0x04CC;\n t['cheverticalstrokecyrillic'] = 0x04B9;\n t['chi'] = 0x03C7;\n t['chieuchacirclekorean'] = 0x3277;\n t['chieuchaparenkorean'] = 0x3217;\n t['chieuchcirclekorean'] = 0x3269;\n t['chieuchkorean'] = 0x314A;\n t['chieuchparenkorean'] = 0x3209;\n t['chochangthai'] = 0x0E0A;\n t['chochanthai'] = 0x0E08;\n t['chochingthai'] = 0x0E09;\n t['chochoethai'] = 0x0E0C;\n t['chook'] = 0x0188;\n t['cieucacirclekorean'] = 0x3276;\n t['cieucaparenkorean'] = 0x3216;\n t['cieuccirclekorean'] = 0x3268;\n t['cieuckorean'] = 0x3148;\n t['cieucparenkorean'] = 0x3208;\n t['cieucuparenkorean'] = 0x321C;\n t['circle'] = 0x25CB;\n t['circlecopyrt'] = 0x00A9;\n t['circlemultiply'] = 0x2297;\n t['circleot'] = 0x2299;\n t['circleplus'] = 0x2295;\n t['circlepostalmark'] = 0x3036;\n t['circlewithlefthalfblack'] = 0x25D0;\n t['circlewithrighthalfblack'] = 0x25D1;\n t['circumflex'] = 0x02C6;\n t['circumflexbelowcmb'] = 0x032D;\n t['circumflexcmb'] = 0x0302;\n t['clear'] = 0x2327;\n t['clickalveolar'] = 0x01C2;\n t['clickdental'] = 0x01C0;\n t['clicklateral'] = 0x01C1;\n t['clickretroflex'] = 0x01C3;\n t['club'] = 0x2663;\n t['clubsuitblack'] = 0x2663;\n t['clubsuitwhite'] = 0x2667;\n t['cmcubedsquare'] = 0x33A4;\n t['cmonospace'] = 0xFF43;\n t['cmsquaredsquare'] = 0x33A0;\n t['coarmenian'] = 0x0581;\n t['colon'] = 0x003A;\n t['colonmonetary'] = 0x20A1;\n t['colonmonospace'] = 0xFF1A;\n t['colonsign'] = 0x20A1;\n t['colonsmall'] = 0xFE55;\n t['colontriangularhalfmod'] = 0x02D1;\n t['colontriangularmod'] = 0x02D0;\n t['comma'] = 0x002C;\n t['commaabovecmb'] = 0x0313;\n t['commaaboverightcmb'] = 0x0315;\n t['commaaccent'] = 0xF6C3;\n t['commaarabic'] = 0x060C;\n t['commaarmenian'] = 0x055D;\n t['commainferior'] = 0xF6E1;\n t['commamonospace'] = 0xFF0C;\n t['commareversedabovecmb'] = 0x0314;\n t['commareversedmod'] = 0x02BD;\n t['commasmall'] = 0xFE50;\n t['commasuperior'] = 0xF6E2;\n t['commaturnedabovecmb'] = 0x0312;\n t['commaturnedmod'] = 0x02BB;\n t['compass'] = 0x263C;\n t['congruent'] = 0x2245;\n t['contourintegral'] = 0x222E;\n t['control'] = 0x2303;\n t['controlACK'] = 0x0006;\n t['controlBEL'] = 0x0007;\n t['controlBS'] = 0x0008;\n t['controlCAN'] = 0x0018;\n t['controlCR'] = 0x000D;\n t['controlDC1'] = 0x0011;\n t['controlDC2'] = 0x0012;\n t['controlDC3'] = 0x0013;\n t['controlDC4'] = 0x0014;\n t['controlDEL'] = 0x007F;\n t['controlDLE'] = 0x0010;\n t['controlEM'] = 0x0019;\n t['controlENQ'] = 0x0005;\n t['controlEOT'] = 0x0004;\n t['controlESC'] = 0x001B;\n t['controlETB'] = 0x0017;\n t['controlETX'] = 0x0003;\n t['controlFF'] = 0x000C;\n t['controlFS'] = 0x001C;\n t['controlGS'] = 0x001D;\n t['controlHT'] = 0x0009;\n t['controlLF'] = 0x000A;\n t['controlNAK'] = 0x0015;\n t['controlNULL'] = 0x0000;\n t['controlRS'] = 0x001E;\n t['controlSI'] = 0x000F;\n t['controlSO'] = 0x000E;\n t['controlSOT'] = 0x0002;\n t['controlSTX'] = 0x0001;\n t['controlSUB'] = 0x001A;\n t['controlSYN'] = 0x0016;\n t['controlUS'] = 0x001F;\n t['controlVT'] = 0x000B;\n t['copyright'] = 0x00A9;\n t['copyrightsans'] = 0xF8E9;\n t['copyrightserif'] = 0xF6D9;\n t['cornerbracketleft'] = 0x300C;\n t['cornerbracketlefthalfwidth'] = 0xFF62;\n t['cornerbracketleftvertical'] = 0xFE41;\n t['cornerbracketright'] = 0x300D;\n t['cornerbracketrighthalfwidth'] = 0xFF63;\n t['cornerbracketrightvertical'] = 0xFE42;\n t['corporationsquare'] = 0x337F;\n t['cosquare'] = 0x33C7;\n t['coverkgsquare'] = 0x33C6;\n t['cparen'] = 0x249E;\n t['cruzeiro'] = 0x20A2;\n t['cstretched'] = 0x0297;\n t['curlyand'] = 0x22CF;\n t['curlyor'] = 0x22CE;\n t['currency'] = 0x00A4;\n t['cyrBreve'] = 0xF6D1;\n t['cyrFlex'] = 0xF6D2;\n t['cyrbreve'] = 0xF6D4;\n t['cyrflex'] = 0xF6D5;\n t['d'] = 0x0064;\n t['daarmenian'] = 0x0564;\n t['dabengali'] = 0x09A6;\n t['dadarabic'] = 0x0636;\n t['dadeva'] = 0x0926;\n t['dadfinalarabic'] = 0xFEBE;\n t['dadinitialarabic'] = 0xFEBF;\n t['dadmedialarabic'] = 0xFEC0;\n t['dagesh'] = 0x05BC;\n t['dageshhebrew'] = 0x05BC;\n t['dagger'] = 0x2020;\n t['daggerdbl'] = 0x2021;\n t['dagujarati'] = 0x0AA6;\n t['dagurmukhi'] = 0x0A26;\n t['dahiragana'] = 0x3060;\n t['dakatakana'] = 0x30C0;\n t['dalarabic'] = 0x062F;\n t['dalet'] = 0x05D3;\n t['daletdagesh'] = 0xFB33;\n t['daletdageshhebrew'] = 0xFB33;\n t['dalethebrew'] = 0x05D3;\n t['dalfinalarabic'] = 0xFEAA;\n t['dammaarabic'] = 0x064F;\n t['dammalowarabic'] = 0x064F;\n t['dammatanaltonearabic'] = 0x064C;\n t['dammatanarabic'] = 0x064C;\n t['danda'] = 0x0964;\n t['dargahebrew'] = 0x05A7;\n t['dargalefthebrew'] = 0x05A7;\n t['dasiapneumatacyrilliccmb'] = 0x0485;\n t['dblGrave'] = 0xF6D3;\n t['dblanglebracketleft'] = 0x300A;\n t['dblanglebracketleftvertical'] = 0xFE3D;\n t['dblanglebracketright'] = 0x300B;\n t['dblanglebracketrightvertical'] = 0xFE3E;\n t['dblarchinvertedbelowcmb'] = 0x032B;\n t['dblarrowleft'] = 0x21D4;\n t['dblarrowright'] = 0x21D2;\n t['dbldanda'] = 0x0965;\n t['dblgrave'] = 0xF6D6;\n t['dblgravecmb'] = 0x030F;\n t['dblintegral'] = 0x222C;\n t['dbllowline'] = 0x2017;\n t['dbllowlinecmb'] = 0x0333;\n t['dbloverlinecmb'] = 0x033F;\n t['dblprimemod'] = 0x02BA;\n t['dblverticalbar'] = 0x2016;\n t['dblverticallineabovecmb'] = 0x030E;\n t['dbopomofo'] = 0x3109;\n t['dbsquare'] = 0x33C8;\n t['dcaron'] = 0x010F;\n t['dcedilla'] = 0x1E11;\n t['dcircle'] = 0x24D3;\n t['dcircumflexbelow'] = 0x1E13;\n t['dcroat'] = 0x0111;\n t['ddabengali'] = 0x09A1;\n t['ddadeva'] = 0x0921;\n t['ddagujarati'] = 0x0AA1;\n t['ddagurmukhi'] = 0x0A21;\n t['ddalarabic'] = 0x0688;\n t['ddalfinalarabic'] = 0xFB89;\n t['dddhadeva'] = 0x095C;\n t['ddhabengali'] = 0x09A2;\n t['ddhadeva'] = 0x0922;\n t['ddhagujarati'] = 0x0AA2;\n t['ddhagurmukhi'] = 0x0A22;\n t['ddotaccent'] = 0x1E0B;\n t['ddotbelow'] = 0x1E0D;\n t['decimalseparatorarabic'] = 0x066B;\n t['decimalseparatorpersian'] = 0x066B;\n t['decyrillic'] = 0x0434;\n t['degree'] = 0x00B0;\n t['dehihebrew'] = 0x05AD;\n t['dehiragana'] = 0x3067;\n t['deicoptic'] = 0x03EF;\n t['dekatakana'] = 0x30C7;\n t['deleteleft'] = 0x232B;\n t['deleteright'] = 0x2326;\n t['delta'] = 0x03B4;\n t['deltaturned'] = 0x018D;\n t['denominatorminusonenumeratorbengali'] = 0x09F8;\n t['dezh'] = 0x02A4;\n t['dhabengali'] = 0x09A7;\n t['dhadeva'] = 0x0927;\n t['dhagujarati'] = 0x0AA7;\n t['dhagurmukhi'] = 0x0A27;\n t['dhook'] = 0x0257;\n t['dialytikatonos'] = 0x0385;\n t['dialytikatonoscmb'] = 0x0344;\n t['diamond'] = 0x2666;\n t['diamondsuitwhite'] = 0x2662;\n t['dieresis'] = 0x00A8;\n t['dieresisacute'] = 0xF6D7;\n t['dieresisbelowcmb'] = 0x0324;\n t['dieresiscmb'] = 0x0308;\n t['dieresisgrave'] = 0xF6D8;\n t['dieresistonos'] = 0x0385;\n t['dihiragana'] = 0x3062;\n t['dikatakana'] = 0x30C2;\n t['dittomark'] = 0x3003;\n t['divide'] = 0x00F7;\n t['divides'] = 0x2223;\n t['divisionslash'] = 0x2215;\n t['djecyrillic'] = 0x0452;\n t['dkshade'] = 0x2593;\n t['dlinebelow'] = 0x1E0F;\n t['dlsquare'] = 0x3397;\n t['dmacron'] = 0x0111;\n t['dmonospace'] = 0xFF44;\n t['dnblock'] = 0x2584;\n t['dochadathai'] = 0x0E0E;\n t['dodekthai'] = 0x0E14;\n t['dohiragana'] = 0x3069;\n t['dokatakana'] = 0x30C9;\n t['dollar'] = 0x0024;\n t['dollarinferior'] = 0xF6E3;\n t['dollarmonospace'] = 0xFF04;\n t['dollaroldstyle'] = 0xF724;\n t['dollarsmall'] = 0xFE69;\n t['dollarsuperior'] = 0xF6E4;\n t['dong'] = 0x20AB;\n t['dorusquare'] = 0x3326;\n t['dotaccent'] = 0x02D9;\n t['dotaccentcmb'] = 0x0307;\n t['dotbelowcmb'] = 0x0323;\n t['dotbelowcomb'] = 0x0323;\n t['dotkatakana'] = 0x30FB;\n t['dotlessi'] = 0x0131;\n t['dotlessj'] = 0xF6BE;\n t['dotlessjstrokehook'] = 0x0284;\n t['dotmath'] = 0x22C5;\n t['dottedcircle'] = 0x25CC;\n t['doubleyodpatah'] = 0xFB1F;\n t['doubleyodpatahhebrew'] = 0xFB1F;\n t['downtackbelowcmb'] = 0x031E;\n t['downtackmod'] = 0x02D5;\n t['dparen'] = 0x249F;\n t['dsuperior'] = 0xF6EB;\n t['dtail'] = 0x0256;\n t['dtopbar'] = 0x018C;\n t['duhiragana'] = 0x3065;\n t['dukatakana'] = 0x30C5;\n t['dz'] = 0x01F3;\n t['dzaltone'] = 0x02A3;\n t['dzcaron'] = 0x01C6;\n t['dzcurl'] = 0x02A5;\n t['dzeabkhasiancyrillic'] = 0x04E1;\n t['dzecyrillic'] = 0x0455;\n t['dzhecyrillic'] = 0x045F;\n t['e'] = 0x0065;\n t['eacute'] = 0x00E9;\n t['earth'] = 0x2641;\n t['ebengali'] = 0x098F;\n t['ebopomofo'] = 0x311C;\n t['ebreve'] = 0x0115;\n t['ecandradeva'] = 0x090D;\n t['ecandragujarati'] = 0x0A8D;\n t['ecandravowelsigndeva'] = 0x0945;\n t['ecandravowelsigngujarati'] = 0x0AC5;\n t['ecaron'] = 0x011B;\n t['ecedillabreve'] = 0x1E1D;\n t['echarmenian'] = 0x0565;\n t['echyiwnarmenian'] = 0x0587;\n t['ecircle'] = 0x24D4;\n t['ecircumflex'] = 0x00EA;\n t['ecircumflexacute'] = 0x1EBF;\n t['ecircumflexbelow'] = 0x1E19;\n t['ecircumflexdotbelow'] = 0x1EC7;\n t['ecircumflexgrave'] = 0x1EC1;\n t['ecircumflexhookabove'] = 0x1EC3;\n t['ecircumflextilde'] = 0x1EC5;\n t['ecyrillic'] = 0x0454;\n t['edblgrave'] = 0x0205;\n t['edeva'] = 0x090F;\n t['edieresis'] = 0x00EB;\n t['edot'] = 0x0117;\n t['edotaccent'] = 0x0117;\n t['edotbelow'] = 0x1EB9;\n t['eegurmukhi'] = 0x0A0F;\n t['eematragurmukhi'] = 0x0A47;\n t['efcyrillic'] = 0x0444;\n t['egrave'] = 0x00E8;\n t['egujarati'] = 0x0A8F;\n t['eharmenian'] = 0x0567;\n t['ehbopomofo'] = 0x311D;\n t['ehiragana'] = 0x3048;\n t['ehookabove'] = 0x1EBB;\n t['eibopomofo'] = 0x311F;\n t['eight'] = 0x0038;\n t['eightarabic'] = 0x0668;\n t['eightbengali'] = 0x09EE;\n t['eightcircle'] = 0x2467;\n t['eightcircleinversesansserif'] = 0x2791;\n t['eightdeva'] = 0x096E;\n t['eighteencircle'] = 0x2471;\n t['eighteenparen'] = 0x2485;\n t['eighteenperiod'] = 0x2499;\n t['eightgujarati'] = 0x0AEE;\n t['eightgurmukhi'] = 0x0A6E;\n t['eighthackarabic'] = 0x0668;\n t['eighthangzhou'] = 0x3028;\n t['eighthnotebeamed'] = 0x266B;\n t['eightideographicparen'] = 0x3227;\n t['eightinferior'] = 0x2088;\n t['eightmonospace'] = 0xFF18;\n t['eightoldstyle'] = 0xF738;\n t['eightparen'] = 0x247B;\n t['eightperiod'] = 0x248F;\n t['eightpersian'] = 0x06F8;\n t['eightroman'] = 0x2177;\n t['eightsuperior'] = 0x2078;\n t['eightthai'] = 0x0E58;\n t['einvertedbreve'] = 0x0207;\n t['eiotifiedcyrillic'] = 0x0465;\n t['ekatakana'] = 0x30A8;\n t['ekatakanahalfwidth'] = 0xFF74;\n t['ekonkargurmukhi'] = 0x0A74;\n t['ekorean'] = 0x3154;\n t['elcyrillic'] = 0x043B;\n t['element'] = 0x2208;\n t['elevencircle'] = 0x246A;\n t['elevenparen'] = 0x247E;\n t['elevenperiod'] = 0x2492;\n t['elevenroman'] = 0x217A;\n t['ellipsis'] = 0x2026;\n t['ellipsisvertical'] = 0x22EE;\n t['emacron'] = 0x0113;\n t['emacronacute'] = 0x1E17;\n t['emacrongrave'] = 0x1E15;\n t['emcyrillic'] = 0x043C;\n t['emdash'] = 0x2014;\n t['emdashvertical'] = 0xFE31;\n t['emonospace'] = 0xFF45;\n t['emphasismarkarmenian'] = 0x055B;\n t['emptyset'] = 0x2205;\n t['enbopomofo'] = 0x3123;\n t['encyrillic'] = 0x043D;\n t['endash'] = 0x2013;\n t['endashvertical'] = 0xFE32;\n t['endescendercyrillic'] = 0x04A3;\n t['eng'] = 0x014B;\n t['engbopomofo'] = 0x3125;\n t['enghecyrillic'] = 0x04A5;\n t['enhookcyrillic'] = 0x04C8;\n t['enspace'] = 0x2002;\n t['eogonek'] = 0x0119;\n t['eokorean'] = 0x3153;\n t['eopen'] = 0x025B;\n t['eopenclosed'] = 0x029A;\n t['eopenreversed'] = 0x025C;\n t['eopenreversedclosed'] = 0x025E;\n t['eopenreversedhook'] = 0x025D;\n t['eparen'] = 0x24A0;\n t['epsilon'] = 0x03B5;\n t['epsilontonos'] = 0x03AD;\n t['equal'] = 0x003D;\n t['equalmonospace'] = 0xFF1D;\n t['equalsmall'] = 0xFE66;\n t['equalsuperior'] = 0x207C;\n t['equivalence'] = 0x2261;\n t['erbopomofo'] = 0x3126;\n t['ercyrillic'] = 0x0440;\n t['ereversed'] = 0x0258;\n t['ereversedcyrillic'] = 0x044D;\n t['escyrillic'] = 0x0441;\n t['esdescendercyrillic'] = 0x04AB;\n t['esh'] = 0x0283;\n t['eshcurl'] = 0x0286;\n t['eshortdeva'] = 0x090E;\n t['eshortvowelsigndeva'] = 0x0946;\n t['eshreversedloop'] = 0x01AA;\n t['eshsquatreversed'] = 0x0285;\n t['esmallhiragana'] = 0x3047;\n t['esmallkatakana'] = 0x30A7;\n t['esmallkatakanahalfwidth'] = 0xFF6A;\n t['estimated'] = 0x212E;\n t['esuperior'] = 0xF6EC;\n t['eta'] = 0x03B7;\n t['etarmenian'] = 0x0568;\n t['etatonos'] = 0x03AE;\n t['eth'] = 0x00F0;\n t['etilde'] = 0x1EBD;\n t['etildebelow'] = 0x1E1B;\n t['etnahtafoukhhebrew'] = 0x0591;\n t['etnahtafoukhlefthebrew'] = 0x0591;\n t['etnahtahebrew'] = 0x0591;\n t['etnahtalefthebrew'] = 0x0591;\n t['eturned'] = 0x01DD;\n t['eukorean'] = 0x3161;\n t['euro'] = 0x20AC;\n t['evowelsignbengali'] = 0x09C7;\n t['evowelsigndeva'] = 0x0947;\n t['evowelsigngujarati'] = 0x0AC7;\n t['exclam'] = 0x0021;\n t['exclamarmenian'] = 0x055C;\n t['exclamdbl'] = 0x203C;\n t['exclamdown'] = 0x00A1;\n t['exclamdownsmall'] = 0xF7A1;\n t['exclammonospace'] = 0xFF01;\n t['exclamsmall'] = 0xF721;\n t['existential'] = 0x2203;\n t['ezh'] = 0x0292;\n t['ezhcaron'] = 0x01EF;\n t['ezhcurl'] = 0x0293;\n t['ezhreversed'] = 0x01B9;\n t['ezhtail'] = 0x01BA;\n t['f'] = 0x0066;\n t['fadeva'] = 0x095E;\n t['fagurmukhi'] = 0x0A5E;\n t['fahrenheit'] = 0x2109;\n t['fathaarabic'] = 0x064E;\n t['fathalowarabic'] = 0x064E;\n t['fathatanarabic'] = 0x064B;\n t['fbopomofo'] = 0x3108;\n t['fcircle'] = 0x24D5;\n t['fdotaccent'] = 0x1E1F;\n t['feharabic'] = 0x0641;\n t['feharmenian'] = 0x0586;\n t['fehfinalarabic'] = 0xFED2;\n t['fehinitialarabic'] = 0xFED3;\n t['fehmedialarabic'] = 0xFED4;\n t['feicoptic'] = 0x03E5;\n t['female'] = 0x2640;\n t['ff'] = 0xFB00;\n t['ffi'] = 0xFB03;\n t['ffl'] = 0xFB04;\n t['fi'] = 0xFB01;\n t['fifteencircle'] = 0x246E;\n t['fifteenparen'] = 0x2482;\n t['fifteenperiod'] = 0x2496;\n t['figuredash'] = 0x2012;\n t['filledbox'] = 0x25A0;\n t['filledrect'] = 0x25AC;\n t['finalkaf'] = 0x05DA;\n t['finalkafdagesh'] = 0xFB3A;\n t['finalkafdageshhebrew'] = 0xFB3A;\n t['finalkafhebrew'] = 0x05DA;\n t['finalmem'] = 0x05DD;\n t['finalmemhebrew'] = 0x05DD;\n t['finalnun'] = 0x05DF;\n t['finalnunhebrew'] = 0x05DF;\n t['finalpe'] = 0x05E3;\n t['finalpehebrew'] = 0x05E3;\n t['finaltsadi'] = 0x05E5;\n t['finaltsadihebrew'] = 0x05E5;\n t['firsttonechinese'] = 0x02C9;\n t['fisheye'] = 0x25C9;\n t['fitacyrillic'] = 0x0473;\n t['five'] = 0x0035;\n t['fivearabic'] = 0x0665;\n t['fivebengali'] = 0x09EB;\n t['fivecircle'] = 0x2464;\n t['fivecircleinversesansserif'] = 0x278E;\n t['fivedeva'] = 0x096B;\n t['fiveeighths'] = 0x215D;\n t['fivegujarati'] = 0x0AEB;\n t['fivegurmukhi'] = 0x0A6B;\n t['fivehackarabic'] = 0x0665;\n t['fivehangzhou'] = 0x3025;\n t['fiveideographicparen'] = 0x3224;\n t['fiveinferior'] = 0x2085;\n t['fivemonospace'] = 0xFF15;\n t['fiveoldstyle'] = 0xF735;\n t['fiveparen'] = 0x2478;\n t['fiveperiod'] = 0x248C;\n t['fivepersian'] = 0x06F5;\n t['fiveroman'] = 0x2174;\n t['fivesuperior'] = 0x2075;\n t['fivethai'] = 0x0E55;\n t['fl'] = 0xFB02;\n t['florin'] = 0x0192;\n t['fmonospace'] = 0xFF46;\n t['fmsquare'] = 0x3399;\n t['fofanthai'] = 0x0E1F;\n t['fofathai'] = 0x0E1D;\n t['fongmanthai'] = 0x0E4F;\n t['forall'] = 0x2200;\n t['four'] = 0x0034;\n t['fourarabic'] = 0x0664;\n t['fourbengali'] = 0x09EA;\n t['fourcircle'] = 0x2463;\n t['fourcircleinversesansserif'] = 0x278D;\n t['fourdeva'] = 0x096A;\n t['fourgujarati'] = 0x0AEA;\n t['fourgurmukhi'] = 0x0A6A;\n t['fourhackarabic'] = 0x0664;\n t['fourhangzhou'] = 0x3024;\n t['fourideographicparen'] = 0x3223;\n t['fourinferior'] = 0x2084;\n t['fourmonospace'] = 0xFF14;\n t['fournumeratorbengali'] = 0x09F7;\n t['fouroldstyle'] = 0xF734;\n t['fourparen'] = 0x2477;\n t['fourperiod'] = 0x248B;\n t['fourpersian'] = 0x06F4;\n t['fourroman'] = 0x2173;\n t['foursuperior'] = 0x2074;\n t['fourteencircle'] = 0x246D;\n t['fourteenparen'] = 0x2481;\n t['fourteenperiod'] = 0x2495;\n t['fourthai'] = 0x0E54;\n t['fourthtonechinese'] = 0x02CB;\n t['fparen'] = 0x24A1;\n t['fraction'] = 0x2044;\n t['franc'] = 0x20A3;\n t['g'] = 0x0067;\n t['gabengali'] = 0x0997;\n t['gacute'] = 0x01F5;\n t['gadeva'] = 0x0917;\n t['gafarabic'] = 0x06AF;\n t['gaffinalarabic'] = 0xFB93;\n t['gafinitialarabic'] = 0xFB94;\n t['gafmedialarabic'] = 0xFB95;\n t['gagujarati'] = 0x0A97;\n t['gagurmukhi'] = 0x0A17;\n t['gahiragana'] = 0x304C;\n t['gakatakana'] = 0x30AC;\n t['gamma'] = 0x03B3;\n t['gammalatinsmall'] = 0x0263;\n t['gammasuperior'] = 0x02E0;\n t['gangiacoptic'] = 0x03EB;\n t['gbopomofo'] = 0x310D;\n t['gbreve'] = 0x011F;\n t['gcaron'] = 0x01E7;\n t['gcedilla'] = 0x0123;\n t['gcircle'] = 0x24D6;\n t['gcircumflex'] = 0x011D;\n t['gcommaaccent'] = 0x0123;\n t['gdot'] = 0x0121;\n t['gdotaccent'] = 0x0121;\n t['gecyrillic'] = 0x0433;\n t['gehiragana'] = 0x3052;\n t['gekatakana'] = 0x30B2;\n t['geometricallyequal'] = 0x2251;\n t['gereshaccenthebrew'] = 0x059C;\n t['gereshhebrew'] = 0x05F3;\n t['gereshmuqdamhebrew'] = 0x059D;\n t['germandbls'] = 0x00DF;\n t['gershayimaccenthebrew'] = 0x059E;\n t['gershayimhebrew'] = 0x05F4;\n t['getamark'] = 0x3013;\n t['ghabengali'] = 0x0998;\n t['ghadarmenian'] = 0x0572;\n t['ghadeva'] = 0x0918;\n t['ghagujarati'] = 0x0A98;\n t['ghagurmukhi'] = 0x0A18;\n t['ghainarabic'] = 0x063A;\n t['ghainfinalarabic'] = 0xFECE;\n t['ghaininitialarabic'] = 0xFECF;\n t['ghainmedialarabic'] = 0xFED0;\n t['ghemiddlehookcyrillic'] = 0x0495;\n t['ghestrokecyrillic'] = 0x0493;\n t['gheupturncyrillic'] = 0x0491;\n t['ghhadeva'] = 0x095A;\n t['ghhagurmukhi'] = 0x0A5A;\n t['ghook'] = 0x0260;\n t['ghzsquare'] = 0x3393;\n t['gihiragana'] = 0x304E;\n t['gikatakana'] = 0x30AE;\n t['gimarmenian'] = 0x0563;\n t['gimel'] = 0x05D2;\n t['gimeldagesh'] = 0xFB32;\n t['gimeldageshhebrew'] = 0xFB32;\n t['gimelhebrew'] = 0x05D2;\n t['gjecyrillic'] = 0x0453;\n t['glottalinvertedstroke'] = 0x01BE;\n t['glottalstop'] = 0x0294;\n t['glottalstopinverted'] = 0x0296;\n t['glottalstopmod'] = 0x02C0;\n t['glottalstopreversed'] = 0x0295;\n t['glottalstopreversedmod'] = 0x02C1;\n t['glottalstopreversedsuperior'] = 0x02E4;\n t['glottalstopstroke'] = 0x02A1;\n t['glottalstopstrokereversed'] = 0x02A2;\n t['gmacron'] = 0x1E21;\n t['gmonospace'] = 0xFF47;\n t['gohiragana'] = 0x3054;\n t['gokatakana'] = 0x30B4;\n t['gparen'] = 0x24A2;\n t['gpasquare'] = 0x33AC;\n t['gradient'] = 0x2207;\n t['grave'] = 0x0060;\n t['gravebelowcmb'] = 0x0316;\n t['gravecmb'] = 0x0300;\n t['gravecomb'] = 0x0300;\n t['gravedeva'] = 0x0953;\n t['gravelowmod'] = 0x02CE;\n t['gravemonospace'] = 0xFF40;\n t['gravetonecmb'] = 0x0340;\n t['greater'] = 0x003E;\n t['greaterequal'] = 0x2265;\n t['greaterequalorless'] = 0x22DB;\n t['greatermonospace'] = 0xFF1E;\n t['greaterorequivalent'] = 0x2273;\n t['greaterorless'] = 0x2277;\n t['greateroverequal'] = 0x2267;\n t['greatersmall'] = 0xFE65;\n t['gscript'] = 0x0261;\n t['gstroke'] = 0x01E5;\n t['guhiragana'] = 0x3050;\n t['guillemotleft'] = 0x00AB;\n t['guillemotright'] = 0x00BB;\n t['guilsinglleft'] = 0x2039;\n t['guilsinglright'] = 0x203A;\n t['gukatakana'] = 0x30B0;\n t['guramusquare'] = 0x3318;\n t['gysquare'] = 0x33C9;\n t['h'] = 0x0068;\n t['haabkhasiancyrillic'] = 0x04A9;\n t['haaltonearabic'] = 0x06C1;\n t['habengali'] = 0x09B9;\n t['hadescendercyrillic'] = 0x04B3;\n t['hadeva'] = 0x0939;\n t['hagujarati'] = 0x0AB9;\n t['hagurmukhi'] = 0x0A39;\n t['haharabic'] = 0x062D;\n t['hahfinalarabic'] = 0xFEA2;\n t['hahinitialarabic'] = 0xFEA3;\n t['hahiragana'] = 0x306F;\n t['hahmedialarabic'] = 0xFEA4;\n t['haitusquare'] = 0x332A;\n t['hakatakana'] = 0x30CF;\n t['hakatakanahalfwidth'] = 0xFF8A;\n t['halantgurmukhi'] = 0x0A4D;\n t['hamzaarabic'] = 0x0621;\n t['hamzalowarabic'] = 0x0621;\n t['hangulfiller'] = 0x3164;\n t['hardsigncyrillic'] = 0x044A;\n t['harpoonleftbarbup'] = 0x21BC;\n t['harpoonrightbarbup'] = 0x21C0;\n t['hasquare'] = 0x33CA;\n t['hatafpatah'] = 0x05B2;\n t['hatafpatah16'] = 0x05B2;\n t['hatafpatah23'] = 0x05B2;\n t['hatafpatah2f'] = 0x05B2;\n t['hatafpatahhebrew'] = 0x05B2;\n t['hatafpatahnarrowhebrew'] = 0x05B2;\n t['hatafpatahquarterhebrew'] = 0x05B2;\n t['hatafpatahwidehebrew'] = 0x05B2;\n t['hatafqamats'] = 0x05B3;\n t['hatafqamats1b'] = 0x05B3;\n t['hatafqamats28'] = 0x05B3;\n t['hatafqamats34'] = 0x05B3;\n t['hatafqamatshebrew'] = 0x05B3;\n t['hatafqamatsnarrowhebrew'] = 0x05B3;\n t['hatafqamatsquarterhebrew'] = 0x05B3;\n t['hatafqamatswidehebrew'] = 0x05B3;\n t['hatafsegol'] = 0x05B1;\n t['hatafsegol17'] = 0x05B1;\n t['hatafsegol24'] = 0x05B1;\n t['hatafsegol30'] = 0x05B1;\n t['hatafsegolhebrew'] = 0x05B1;\n t['hatafsegolnarrowhebrew'] = 0x05B1;\n t['hatafsegolquarterhebrew'] = 0x05B1;\n t['hatafsegolwidehebrew'] = 0x05B1;\n t['hbar'] = 0x0127;\n t['hbopomofo'] = 0x310F;\n t['hbrevebelow'] = 0x1E2B;\n t['hcedilla'] = 0x1E29;\n t['hcircle'] = 0x24D7;\n t['hcircumflex'] = 0x0125;\n t['hdieresis'] = 0x1E27;\n t['hdotaccent'] = 0x1E23;\n t['hdotbelow'] = 0x1E25;\n t['he'] = 0x05D4;\n t['heart'] = 0x2665;\n t['heartsuitblack'] = 0x2665;\n t['heartsuitwhite'] = 0x2661;\n t['hedagesh'] = 0xFB34;\n t['hedageshhebrew'] = 0xFB34;\n t['hehaltonearabic'] = 0x06C1;\n t['heharabic'] = 0x0647;\n t['hehebrew'] = 0x05D4;\n t['hehfinalaltonearabic'] = 0xFBA7;\n t['hehfinalalttwoarabic'] = 0xFEEA;\n t['hehfinalarabic'] = 0xFEEA;\n t['hehhamzaabovefinalarabic'] = 0xFBA5;\n t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\n t['hehinitialaltonearabic'] = 0xFBA8;\n t['hehinitialarabic'] = 0xFEEB;\n t['hehiragana'] = 0x3078;\n t['hehmedialaltonearabic'] = 0xFBA9;\n t['hehmedialarabic'] = 0xFEEC;\n t['heiseierasquare'] = 0x337B;\n t['hekatakana'] = 0x30D8;\n t['hekatakanahalfwidth'] = 0xFF8D;\n t['hekutaarusquare'] = 0x3336;\n t['henghook'] = 0x0267;\n t['herutusquare'] = 0x3339;\n t['het'] = 0x05D7;\n t['hethebrew'] = 0x05D7;\n t['hhook'] = 0x0266;\n t['hhooksuperior'] = 0x02B1;\n t['hieuhacirclekorean'] = 0x327B;\n t['hieuhaparenkorean'] = 0x321B;\n t['hieuhcirclekorean'] = 0x326D;\n t['hieuhkorean'] = 0x314E;\n t['hieuhparenkorean'] = 0x320D;\n t['hihiragana'] = 0x3072;\n t['hikatakana'] = 0x30D2;\n t['hikatakanahalfwidth'] = 0xFF8B;\n t['hiriq'] = 0x05B4;\n t['hiriq14'] = 0x05B4;\n t['hiriq21'] = 0x05B4;\n t['hiriq2d'] = 0x05B4;\n t['hiriqhebrew'] = 0x05B4;\n t['hiriqnarrowhebrew'] = 0x05B4;\n t['hiriqquarterhebrew'] = 0x05B4;\n t['hiriqwidehebrew'] = 0x05B4;\n t['hlinebelow'] = 0x1E96;\n t['hmonospace'] = 0xFF48;\n t['hoarmenian'] = 0x0570;\n t['hohipthai'] = 0x0E2B;\n t['hohiragana'] = 0x307B;\n t['hokatakana'] = 0x30DB;\n t['hokatakanahalfwidth'] = 0xFF8E;\n t['holam'] = 0x05B9;\n t['holam19'] = 0x05B9;\n t['holam26'] = 0x05B9;\n t['holam32'] = 0x05B9;\n t['holamhebrew'] = 0x05B9;\n t['holamnarrowhebrew'] = 0x05B9;\n t['holamquarterhebrew'] = 0x05B9;\n t['holamwidehebrew'] = 0x05B9;\n t['honokhukthai'] = 0x0E2E;\n t['hookabovecomb'] = 0x0309;\n t['hookcmb'] = 0x0309;\n t['hookpalatalizedbelowcmb'] = 0x0321;\n t['hookretroflexbelowcmb'] = 0x0322;\n t['hoonsquare'] = 0x3342;\n t['horicoptic'] = 0x03E9;\n t['horizontalbar'] = 0x2015;\n t['horncmb'] = 0x031B;\n t['hotsprings'] = 0x2668;\n t['house'] = 0x2302;\n t['hparen'] = 0x24A3;\n t['hsuperior'] = 0x02B0;\n t['hturned'] = 0x0265;\n t['huhiragana'] = 0x3075;\n t['huiitosquare'] = 0x3333;\n t['hukatakana'] = 0x30D5;\n t['hukatakanahalfwidth'] = 0xFF8C;\n t['hungarumlaut'] = 0x02DD;\n t['hungarumlautcmb'] = 0x030B;\n t['hv'] = 0x0195;\n t['hyphen'] = 0x002D;\n t['hypheninferior'] = 0xF6E5;\n t['hyphenmonospace'] = 0xFF0D;\n t['hyphensmall'] = 0xFE63;\n t['hyphensuperior'] = 0xF6E6;\n t['hyphentwo'] = 0x2010;\n t['i'] = 0x0069;\n t['iacute'] = 0x00ED;\n t['iacyrillic'] = 0x044F;\n t['ibengali'] = 0x0987;\n t['ibopomofo'] = 0x3127;\n t['ibreve'] = 0x012D;\n t['icaron'] = 0x01D0;\n t['icircle'] = 0x24D8;\n t['icircumflex'] = 0x00EE;\n t['icyrillic'] = 0x0456;\n t['idblgrave'] = 0x0209;\n t['ideographearthcircle'] = 0x328F;\n t['ideographfirecircle'] = 0x328B;\n t['ideographicallianceparen'] = 0x323F;\n t['ideographiccallparen'] = 0x323A;\n t['ideographiccentrecircle'] = 0x32A5;\n t['ideographicclose'] = 0x3006;\n t['ideographiccomma'] = 0x3001;\n t['ideographiccommaleft'] = 0xFF64;\n t['ideographiccongratulationparen'] = 0x3237;\n t['ideographiccorrectcircle'] = 0x32A3;\n t['ideographicearthparen'] = 0x322F;\n t['ideographicenterpriseparen'] = 0x323D;\n t['ideographicexcellentcircle'] = 0x329D;\n t['ideographicfestivalparen'] = 0x3240;\n t['ideographicfinancialcircle'] = 0x3296;\n t['ideographicfinancialparen'] = 0x3236;\n t['ideographicfireparen'] = 0x322B;\n t['ideographichaveparen'] = 0x3232;\n t['ideographichighcircle'] = 0x32A4;\n t['ideographiciterationmark'] = 0x3005;\n t['ideographiclaborcircle'] = 0x3298;\n t['ideographiclaborparen'] = 0x3238;\n t['ideographicleftcircle'] = 0x32A7;\n t['ideographiclowcircle'] = 0x32A6;\n t['ideographicmedicinecircle'] = 0x32A9;\n t['ideographicmetalparen'] = 0x322E;\n t['ideographicmoonparen'] = 0x322A;\n t['ideographicnameparen'] = 0x3234;\n t['ideographicperiod'] = 0x3002;\n t['ideographicprintcircle'] = 0x329E;\n t['ideographicreachparen'] = 0x3243;\n t['ideographicrepresentparen'] = 0x3239;\n t['ideographicresourceparen'] = 0x323E;\n t['ideographicrightcircle'] = 0x32A8;\n t['ideographicsecretcircle'] = 0x3299;\n t['ideographicselfparen'] = 0x3242;\n t['ideographicsocietyparen'] = 0x3233;\n t['ideographicspace'] = 0x3000;\n t['ideographicspecialparen'] = 0x3235;\n t['ideographicstockparen'] = 0x3231;\n t['ideographicstudyparen'] = 0x323B;\n t['ideographicsunparen'] = 0x3230;\n t['ideographicsuperviseparen'] = 0x323C;\n t['ideographicwaterparen'] = 0x322C;\n t['ideographicwoodparen'] = 0x322D;\n t['ideographiczero'] = 0x3007;\n t['ideographmetalcircle'] = 0x328E;\n t['ideographmooncircle'] = 0x328A;\n t['ideographnamecircle'] = 0x3294;\n t['ideographsuncircle'] = 0x3290;\n t['ideographwatercircle'] = 0x328C;\n t['ideographwoodcircle'] = 0x328D;\n t['ideva'] = 0x0907;\n t['idieresis'] = 0x00EF;\n t['idieresisacute'] = 0x1E2F;\n t['idieresiscyrillic'] = 0x04E5;\n t['idotbelow'] = 0x1ECB;\n t['iebrevecyrillic'] = 0x04D7;\n t['iecyrillic'] = 0x0435;\n t['ieungacirclekorean'] = 0x3275;\n t['ieungaparenkorean'] = 0x3215;\n t['ieungcirclekorean'] = 0x3267;\n t['ieungkorean'] = 0x3147;\n t['ieungparenkorean'] = 0x3207;\n t['igrave'] = 0x00EC;\n t['igujarati'] = 0x0A87;\n t['igurmukhi'] = 0x0A07;\n t['ihiragana'] = 0x3044;\n t['ihookabove'] = 0x1EC9;\n t['iibengali'] = 0x0988;\n t['iicyrillic'] = 0x0438;\n t['iideva'] = 0x0908;\n t['iigujarati'] = 0x0A88;\n t['iigurmukhi'] = 0x0A08;\n t['iimatragurmukhi'] = 0x0A40;\n t['iinvertedbreve'] = 0x020B;\n t['iishortcyrillic'] = 0x0439;\n t['iivowelsignbengali'] = 0x09C0;\n t['iivowelsigndeva'] = 0x0940;\n t['iivowelsigngujarati'] = 0x0AC0;\n t['ij'] = 0x0133;\n t['ikatakana'] = 0x30A4;\n t['ikatakanahalfwidth'] = 0xFF72;\n t['ikorean'] = 0x3163;\n t['ilde'] = 0x02DC;\n t['iluyhebrew'] = 0x05AC;\n t['imacron'] = 0x012B;\n t['imacroncyrillic'] = 0x04E3;\n t['imageorapproximatelyequal'] = 0x2253;\n t['imatragurmukhi'] = 0x0A3F;\n t['imonospace'] = 0xFF49;\n t['increment'] = 0x2206;\n t['infinity'] = 0x221E;\n t['iniarmenian'] = 0x056B;\n t['integral'] = 0x222B;\n t['integralbottom'] = 0x2321;\n t['integralbt'] = 0x2321;\n t['integralex'] = 0xF8F5;\n t['integraltop'] = 0x2320;\n t['integraltp'] = 0x2320;\n t['intersection'] = 0x2229;\n t['intisquare'] = 0x3305;\n t['invbullet'] = 0x25D8;\n t['invcircle'] = 0x25D9;\n t['invsmileface'] = 0x263B;\n t['iocyrillic'] = 0x0451;\n t['iogonek'] = 0x012F;\n t['iota'] = 0x03B9;\n t['iotadieresis'] = 0x03CA;\n t['iotadieresistonos'] = 0x0390;\n t['iotalatin'] = 0x0269;\n t['iotatonos'] = 0x03AF;\n t['iparen'] = 0x24A4;\n t['irigurmukhi'] = 0x0A72;\n t['ismallhiragana'] = 0x3043;\n t['ismallkatakana'] = 0x30A3;\n t['ismallkatakanahalfwidth'] = 0xFF68;\n t['issharbengali'] = 0x09FA;\n t['istroke'] = 0x0268;\n t['isuperior'] = 0xF6ED;\n t['iterationhiragana'] = 0x309D;\n t['iterationkatakana'] = 0x30FD;\n t['itilde'] = 0x0129;\n t['itildebelow'] = 0x1E2D;\n t['iubopomofo'] = 0x3129;\n t['iucyrillic'] = 0x044E;\n t['ivowelsignbengali'] = 0x09BF;\n t['ivowelsigndeva'] = 0x093F;\n t['ivowelsigngujarati'] = 0x0ABF;\n t['izhitsacyrillic'] = 0x0475;\n t['izhitsadblgravecyrillic'] = 0x0477;\n t['j'] = 0x006A;\n t['jaarmenian'] = 0x0571;\n t['jabengali'] = 0x099C;\n t['jadeva'] = 0x091C;\n t['jagujarati'] = 0x0A9C;\n t['jagurmukhi'] = 0x0A1C;\n t['jbopomofo'] = 0x3110;\n t['jcaron'] = 0x01F0;\n t['jcircle'] = 0x24D9;\n t['jcircumflex'] = 0x0135;\n t['jcrossedtail'] = 0x029D;\n t['jdotlessstroke'] = 0x025F;\n t['jecyrillic'] = 0x0458;\n t['jeemarabic'] = 0x062C;\n t['jeemfinalarabic'] = 0xFE9E;\n t['jeeminitialarabic'] = 0xFE9F;\n t['jeemmedialarabic'] = 0xFEA0;\n t['jeharabic'] = 0x0698;\n t['jehfinalarabic'] = 0xFB8B;\n t['jhabengali'] = 0x099D;\n t['jhadeva'] = 0x091D;\n t['jhagujarati'] = 0x0A9D;\n t['jhagurmukhi'] = 0x0A1D;\n t['jheharmenian'] = 0x057B;\n t['jis'] = 0x3004;\n t['jmonospace'] = 0xFF4A;\n t['jparen'] = 0x24A5;\n t['jsuperior'] = 0x02B2;\n t['k'] = 0x006B;\n t['kabashkircyrillic'] = 0x04A1;\n t['kabengali'] = 0x0995;\n t['kacute'] = 0x1E31;\n t['kacyrillic'] = 0x043A;\n t['kadescendercyrillic'] = 0x049B;\n t['kadeva'] = 0x0915;\n t['kaf'] = 0x05DB;\n t['kafarabic'] = 0x0643;\n t['kafdagesh'] = 0xFB3B;\n t['kafdageshhebrew'] = 0xFB3B;\n t['kaffinalarabic'] = 0xFEDA;\n t['kafhebrew'] = 0x05DB;\n t['kafinitialarabic'] = 0xFEDB;\n t['kafmedialarabic'] = 0xFEDC;\n t['kafrafehebrew'] = 0xFB4D;\n t['kagujarati'] = 0x0A95;\n t['kagurmukhi'] = 0x0A15;\n t['kahiragana'] = 0x304B;\n t['kahookcyrillic'] = 0x04C4;\n t['kakatakana'] = 0x30AB;\n t['kakatakanahalfwidth'] = 0xFF76;\n t['kappa'] = 0x03BA;\n t['kappasymbolgreek'] = 0x03F0;\n t['kapyeounmieumkorean'] = 0x3171;\n t['kapyeounphieuphkorean'] = 0x3184;\n t['kapyeounpieupkorean'] = 0x3178;\n t['kapyeounssangpieupkorean'] = 0x3179;\n t['karoriisquare'] = 0x330D;\n t['kashidaautoarabic'] = 0x0640;\n t['kashidaautonosidebearingarabic'] = 0x0640;\n t['kasmallkatakana'] = 0x30F5;\n t['kasquare'] = 0x3384;\n t['kasraarabic'] = 0x0650;\n t['kasratanarabic'] = 0x064D;\n t['kastrokecyrillic'] = 0x049F;\n t['katahiraprolongmarkhalfwidth'] = 0xFF70;\n t['kaverticalstrokecyrillic'] = 0x049D;\n t['kbopomofo'] = 0x310E;\n t['kcalsquare'] = 0x3389;\n t['kcaron'] = 0x01E9;\n t['kcedilla'] = 0x0137;\n t['kcircle'] = 0x24DA;\n t['kcommaaccent'] = 0x0137;\n t['kdotbelow'] = 0x1E33;\n t['keharmenian'] = 0x0584;\n t['kehiragana'] = 0x3051;\n t['kekatakana'] = 0x30B1;\n t['kekatakanahalfwidth'] = 0xFF79;\n t['kenarmenian'] = 0x056F;\n t['kesmallkatakana'] = 0x30F6;\n t['kgreenlandic'] = 0x0138;\n t['khabengali'] = 0x0996;\n t['khacyrillic'] = 0x0445;\n t['khadeva'] = 0x0916;\n t['khagujarati'] = 0x0A96;\n t['khagurmukhi'] = 0x0A16;\n t['khaharabic'] = 0x062E;\n t['khahfinalarabic'] = 0xFEA6;\n t['khahinitialarabic'] = 0xFEA7;\n t['khahmedialarabic'] = 0xFEA8;\n t['kheicoptic'] = 0x03E7;\n t['khhadeva'] = 0x0959;\n t['khhagurmukhi'] = 0x0A59;\n t['khieukhacirclekorean'] = 0x3278;\n t['khieukhaparenkorean'] = 0x3218;\n t['khieukhcirclekorean'] = 0x326A;\n t['khieukhkorean'] = 0x314B;\n t['khieukhparenkorean'] = 0x320A;\n t['khokhaithai'] = 0x0E02;\n t['khokhonthai'] = 0x0E05;\n t['khokhuatthai'] = 0x0E03;\n t['khokhwaithai'] = 0x0E04;\n t['khomutthai'] = 0x0E5B;\n t['khook'] = 0x0199;\n t['khorakhangthai'] = 0x0E06;\n t['khzsquare'] = 0x3391;\n t['kihiragana'] = 0x304D;\n t['kikatakana'] = 0x30AD;\n t['kikatakanahalfwidth'] = 0xFF77;\n t['kiroguramusquare'] = 0x3315;\n t['kiromeetorusquare'] = 0x3316;\n t['kirosquare'] = 0x3314;\n t['kiyeokacirclekorean'] = 0x326E;\n t['kiyeokaparenkorean'] = 0x320E;\n t['kiyeokcirclekorean'] = 0x3260;\n t['kiyeokkorean'] = 0x3131;\n t['kiyeokparenkorean'] = 0x3200;\n t['kiyeoksioskorean'] = 0x3133;\n t['kjecyrillic'] = 0x045C;\n t['klinebelow'] = 0x1E35;\n t['klsquare'] = 0x3398;\n t['kmcubedsquare'] = 0x33A6;\n t['kmonospace'] = 0xFF4B;\n t['kmsquaredsquare'] = 0x33A2;\n t['kohiragana'] = 0x3053;\n t['kohmsquare'] = 0x33C0;\n t['kokaithai'] = 0x0E01;\n t['kokatakana'] = 0x30B3;\n t['kokatakanahalfwidth'] = 0xFF7A;\n t['kooposquare'] = 0x331E;\n t['koppacyrillic'] = 0x0481;\n t['koreanstandardsymbol'] = 0x327F;\n t['koroniscmb'] = 0x0343;\n t['kparen'] = 0x24A6;\n t['kpasquare'] = 0x33AA;\n t['ksicyrillic'] = 0x046F;\n t['ktsquare'] = 0x33CF;\n t['kturned'] = 0x029E;\n t['kuhiragana'] = 0x304F;\n t['kukatakana'] = 0x30AF;\n t['kukatakanahalfwidth'] = 0xFF78;\n t['kvsquare'] = 0x33B8;\n t['kwsquare'] = 0x33BE;\n t['l'] = 0x006C;\n t['labengali'] = 0x09B2;\n t['lacute'] = 0x013A;\n t['ladeva'] = 0x0932;\n t['lagujarati'] = 0x0AB2;\n t['lagurmukhi'] = 0x0A32;\n t['lakkhangyaothai'] = 0x0E45;\n t['lamaleffinalarabic'] = 0xFEFC;\n t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\n t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\n t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\n t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\n t['lamalefisolatedarabic'] = 0xFEFB;\n t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\n t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\n t['lamarabic'] = 0x0644;\n t['lambda'] = 0x03BB;\n t['lambdastroke'] = 0x019B;\n t['lamed'] = 0x05DC;\n t['lameddagesh'] = 0xFB3C;\n t['lameddageshhebrew'] = 0xFB3C;\n t['lamedhebrew'] = 0x05DC;\n t['lamfinalarabic'] = 0xFEDE;\n t['lamhahinitialarabic'] = 0xFCCA;\n t['laminitialarabic'] = 0xFEDF;\n t['lamjeeminitialarabic'] = 0xFCC9;\n t['lamkhahinitialarabic'] = 0xFCCB;\n t['lamlamhehisolatedarabic'] = 0xFDF2;\n t['lammedialarabic'] = 0xFEE0;\n t['lammeemhahinitialarabic'] = 0xFD88;\n t['lammeeminitialarabic'] = 0xFCCC;\n t['largecircle'] = 0x25EF;\n t['lbar'] = 0x019A;\n t['lbelt'] = 0x026C;\n t['lbopomofo'] = 0x310C;\n t['lcaron'] = 0x013E;\n t['lcedilla'] = 0x013C;\n t['lcircle'] = 0x24DB;\n t['lcircumflexbelow'] = 0x1E3D;\n t['lcommaaccent'] = 0x013C;\n t['ldot'] = 0x0140;\n t['ldotaccent'] = 0x0140;\n t['ldotbelow'] = 0x1E37;\n t['ldotbelowmacron'] = 0x1E39;\n t['leftangleabovecmb'] = 0x031A;\n t['lefttackbelowcmb'] = 0x0318;\n t['less'] = 0x003C;\n t['lessequal'] = 0x2264;\n t['lessequalorgreater'] = 0x22DA;\n t['lessmonospace'] = 0xFF1C;\n t['lessorequivalent'] = 0x2272;\n t['lessorgreater'] = 0x2276;\n t['lessoverequal'] = 0x2266;\n t['lesssmall'] = 0xFE64;\n t['lezh'] = 0x026E;\n t['lfblock'] = 0x258C;\n t['lhookretroflex'] = 0x026D;\n t['lira'] = 0x20A4;\n t['liwnarmenian'] = 0x056C;\n t['lj'] = 0x01C9;\n t['ljecyrillic'] = 0x0459;\n t['ll'] = 0xF6C0;\n t['lladeva'] = 0x0933;\n t['llagujarati'] = 0x0AB3;\n t['llinebelow'] = 0x1E3B;\n t['llladeva'] = 0x0934;\n t['llvocalicbengali'] = 0x09E1;\n t['llvocalicdeva'] = 0x0961;\n t['llvocalicvowelsignbengali'] = 0x09E3;\n t['llvocalicvowelsigndeva'] = 0x0963;\n t['lmiddletilde'] = 0x026B;\n t['lmonospace'] = 0xFF4C;\n t['lmsquare'] = 0x33D0;\n t['lochulathai'] = 0x0E2C;\n t['logicaland'] = 0x2227;\n t['logicalnot'] = 0x00AC;\n t['logicalnotreversed'] = 0x2310;\n t['logicalor'] = 0x2228;\n t['lolingthai'] = 0x0E25;\n t['longs'] = 0x017F;\n t['lowlinecenterline'] = 0xFE4E;\n t['lowlinecmb'] = 0x0332;\n t['lowlinedashed'] = 0xFE4D;\n t['lozenge'] = 0x25CA;\n t['lparen'] = 0x24A7;\n t['lslash'] = 0x0142;\n t['lsquare'] = 0x2113;\n t['lsuperior'] = 0xF6EE;\n t['ltshade'] = 0x2591;\n t['luthai'] = 0x0E26;\n t['lvocalicbengali'] = 0x098C;\n t['lvocalicdeva'] = 0x090C;\n t['lvocalicvowelsignbengali'] = 0x09E2;\n t['lvocalicvowelsigndeva'] = 0x0962;\n t['lxsquare'] = 0x33D3;\n t['m'] = 0x006D;\n t['mabengali'] = 0x09AE;\n t['macron'] = 0x00AF;\n t['macronbelowcmb'] = 0x0331;\n t['macroncmb'] = 0x0304;\n t['macronlowmod'] = 0x02CD;\n t['macronmonospace'] = 0xFFE3;\n t['macute'] = 0x1E3F;\n t['madeva'] = 0x092E;\n t['magujarati'] = 0x0AAE;\n t['magurmukhi'] = 0x0A2E;\n t['mahapakhhebrew'] = 0x05A4;\n t['mahapakhlefthebrew'] = 0x05A4;\n t['mahiragana'] = 0x307E;\n t['maichattawalowleftthai'] = 0xF895;\n t['maichattawalowrightthai'] = 0xF894;\n t['maichattawathai'] = 0x0E4B;\n t['maichattawaupperleftthai'] = 0xF893;\n t['maieklowleftthai'] = 0xF88C;\n t['maieklowrightthai'] = 0xF88B;\n t['maiekthai'] = 0x0E48;\n t['maiekupperleftthai'] = 0xF88A;\n t['maihanakatleftthai'] = 0xF884;\n t['maihanakatthai'] = 0x0E31;\n t['maitaikhuleftthai'] = 0xF889;\n t['maitaikhuthai'] = 0x0E47;\n t['maitholowleftthai'] = 0xF88F;\n t['maitholowrightthai'] = 0xF88E;\n t['maithothai'] = 0x0E49;\n t['maithoupperleftthai'] = 0xF88D;\n t['maitrilowleftthai'] = 0xF892;\n t['maitrilowrightthai'] = 0xF891;\n t['maitrithai'] = 0x0E4A;\n t['maitriupperleftthai'] = 0xF890;\n t['maiyamokthai'] = 0x0E46;\n t['makatakana'] = 0x30DE;\n t['makatakanahalfwidth'] = 0xFF8F;\n t['male'] = 0x2642;\n t['mansyonsquare'] = 0x3347;\n t['maqafhebrew'] = 0x05BE;\n t['mars'] = 0x2642;\n t['masoracirclehebrew'] = 0x05AF;\n t['masquare'] = 0x3383;\n t['mbopomofo'] = 0x3107;\n t['mbsquare'] = 0x33D4;\n t['mcircle'] = 0x24DC;\n t['mcubedsquare'] = 0x33A5;\n t['mdotaccent'] = 0x1E41;\n t['mdotbelow'] = 0x1E43;\n t['meemarabic'] = 0x0645;\n t['meemfinalarabic'] = 0xFEE2;\n t['meeminitialarabic'] = 0xFEE3;\n t['meemmedialarabic'] = 0xFEE4;\n t['meemmeeminitialarabic'] = 0xFCD1;\n t['meemmeemisolatedarabic'] = 0xFC48;\n t['meetorusquare'] = 0x334D;\n t['mehiragana'] = 0x3081;\n t['meizierasquare'] = 0x337E;\n t['mekatakana'] = 0x30E1;\n t['mekatakanahalfwidth'] = 0xFF92;\n t['mem'] = 0x05DE;\n t['memdagesh'] = 0xFB3E;\n t['memdageshhebrew'] = 0xFB3E;\n t['memhebrew'] = 0x05DE;\n t['menarmenian'] = 0x0574;\n t['merkhahebrew'] = 0x05A5;\n t['merkhakefulahebrew'] = 0x05A6;\n t['merkhakefulalefthebrew'] = 0x05A6;\n t['merkhalefthebrew'] = 0x05A5;\n t['mhook'] = 0x0271;\n t['mhzsquare'] = 0x3392;\n t['middledotkatakanahalfwidth'] = 0xFF65;\n t['middot'] = 0x00B7;\n t['mieumacirclekorean'] = 0x3272;\n t['mieumaparenkorean'] = 0x3212;\n t['mieumcirclekorean'] = 0x3264;\n t['mieumkorean'] = 0x3141;\n t['mieumpansioskorean'] = 0x3170;\n t['mieumparenkorean'] = 0x3204;\n t['mieumpieupkorean'] = 0x316E;\n t['mieumsioskorean'] = 0x316F;\n t['mihiragana'] = 0x307F;\n t['mikatakana'] = 0x30DF;\n t['mikatakanahalfwidth'] = 0xFF90;\n t['minus'] = 0x2212;\n t['minusbelowcmb'] = 0x0320;\n t['minuscircle'] = 0x2296;\n t['minusmod'] = 0x02D7;\n t['minusplus'] = 0x2213;\n t['minute'] = 0x2032;\n t['miribaarusquare'] = 0x334A;\n t['mirisquare'] = 0x3349;\n t['mlonglegturned'] = 0x0270;\n t['mlsquare'] = 0x3396;\n t['mmcubedsquare'] = 0x33A3;\n t['mmonospace'] = 0xFF4D;\n t['mmsquaredsquare'] = 0x339F;\n t['mohiragana'] = 0x3082;\n t['mohmsquare'] = 0x33C1;\n t['mokatakana'] = 0x30E2;\n t['mokatakanahalfwidth'] = 0xFF93;\n t['molsquare'] = 0x33D6;\n t['momathai'] = 0x0E21;\n t['moverssquare'] = 0x33A7;\n t['moverssquaredsquare'] = 0x33A8;\n t['mparen'] = 0x24A8;\n t['mpasquare'] = 0x33AB;\n t['mssquare'] = 0x33B3;\n t['msuperior'] = 0xF6EF;\n t['mturned'] = 0x026F;\n t['mu'] = 0x00B5;\n t['mu1'] = 0x00B5;\n t['muasquare'] = 0x3382;\n t['muchgreater'] = 0x226B;\n t['muchless'] = 0x226A;\n t['mufsquare'] = 0x338C;\n t['mugreek'] = 0x03BC;\n t['mugsquare'] = 0x338D;\n t['muhiragana'] = 0x3080;\n t['mukatakana'] = 0x30E0;\n t['mukatakanahalfwidth'] = 0xFF91;\n t['mulsquare'] = 0x3395;\n t['multiply'] = 0x00D7;\n t['mumsquare'] = 0x339B;\n t['munahhebrew'] = 0x05A3;\n t['munahlefthebrew'] = 0x05A3;\n t['musicalnote'] = 0x266A;\n t['musicalnotedbl'] = 0x266B;\n t['musicflatsign'] = 0x266D;\n t['musicsharpsign'] = 0x266F;\n t['mussquare'] = 0x33B2;\n t['muvsquare'] = 0x33B6;\n t['muwsquare'] = 0x33BC;\n t['mvmegasquare'] = 0x33B9;\n t['mvsquare'] = 0x33B7;\n t['mwmegasquare'] = 0x33BF;\n t['mwsquare'] = 0x33BD;\n t['n'] = 0x006E;\n t['nabengali'] = 0x09A8;\n t['nabla'] = 0x2207;\n t['nacute'] = 0x0144;\n t['nadeva'] = 0x0928;\n t['nagujarati'] = 0x0AA8;\n t['nagurmukhi'] = 0x0A28;\n t['nahiragana'] = 0x306A;\n t['nakatakana'] = 0x30CA;\n t['nakatakanahalfwidth'] = 0xFF85;\n t['napostrophe'] = 0x0149;\n t['nasquare'] = 0x3381;\n t['nbopomofo'] = 0x310B;\n t['nbspace'] = 0x00A0;\n t['ncaron'] = 0x0148;\n t['ncedilla'] = 0x0146;\n t['ncircle'] = 0x24DD;\n t['ncircumflexbelow'] = 0x1E4B;\n t['ncommaaccent'] = 0x0146;\n t['ndotaccent'] = 0x1E45;\n t['ndotbelow'] = 0x1E47;\n t['nehiragana'] = 0x306D;\n t['nekatakana'] = 0x30CD;\n t['nekatakanahalfwidth'] = 0xFF88;\n t['newsheqelsign'] = 0x20AA;\n t['nfsquare'] = 0x338B;\n t['ngabengali'] = 0x0999;\n t['ngadeva'] = 0x0919;\n t['ngagujarati'] = 0x0A99;\n t['ngagurmukhi'] = 0x0A19;\n t['ngonguthai'] = 0x0E07;\n t['nhiragana'] = 0x3093;\n t['nhookleft'] = 0x0272;\n t['nhookretroflex'] = 0x0273;\n t['nieunacirclekorean'] = 0x326F;\n t['nieunaparenkorean'] = 0x320F;\n t['nieuncieuckorean'] = 0x3135;\n t['nieuncirclekorean'] = 0x3261;\n t['nieunhieuhkorean'] = 0x3136;\n t['nieunkorean'] = 0x3134;\n t['nieunpansioskorean'] = 0x3168;\n t['nieunparenkorean'] = 0x3201;\n t['nieunsioskorean'] = 0x3167;\n t['nieuntikeutkorean'] = 0x3166;\n t['nihiragana'] = 0x306B;\n t['nikatakana'] = 0x30CB;\n t['nikatakanahalfwidth'] = 0xFF86;\n t['nikhahitleftthai'] = 0xF899;\n t['nikhahitthai'] = 0x0E4D;\n t['nine'] = 0x0039;\n t['ninearabic'] = 0x0669;\n t['ninebengali'] = 0x09EF;\n t['ninecircle'] = 0x2468;\n t['ninecircleinversesansserif'] = 0x2792;\n t['ninedeva'] = 0x096F;\n t['ninegujarati'] = 0x0AEF;\n t['ninegurmukhi'] = 0x0A6F;\n t['ninehackarabic'] = 0x0669;\n t['ninehangzhou'] = 0x3029;\n t['nineideographicparen'] = 0x3228;\n t['nineinferior'] = 0x2089;\n t['ninemonospace'] = 0xFF19;\n t['nineoldstyle'] = 0xF739;\n t['nineparen'] = 0x247C;\n t['nineperiod'] = 0x2490;\n t['ninepersian'] = 0x06F9;\n t['nineroman'] = 0x2178;\n t['ninesuperior'] = 0x2079;\n t['nineteencircle'] = 0x2472;\n t['nineteenparen'] = 0x2486;\n t['nineteenperiod'] = 0x249A;\n t['ninethai'] = 0x0E59;\n t['nj'] = 0x01CC;\n t['njecyrillic'] = 0x045A;\n t['nkatakana'] = 0x30F3;\n t['nkatakanahalfwidth'] = 0xFF9D;\n t['nlegrightlong'] = 0x019E;\n t['nlinebelow'] = 0x1E49;\n t['nmonospace'] = 0xFF4E;\n t['nmsquare'] = 0x339A;\n t['nnabengali'] = 0x09A3;\n t['nnadeva'] = 0x0923;\n t['nnagujarati'] = 0x0AA3;\n t['nnagurmukhi'] = 0x0A23;\n t['nnnadeva'] = 0x0929;\n t['nohiragana'] = 0x306E;\n t['nokatakana'] = 0x30CE;\n t['nokatakanahalfwidth'] = 0xFF89;\n t['nonbreakingspace'] = 0x00A0;\n t['nonenthai'] = 0x0E13;\n t['nonuthai'] = 0x0E19;\n t['noonarabic'] = 0x0646;\n t['noonfinalarabic'] = 0xFEE6;\n t['noonghunnaarabic'] = 0x06BA;\n t['noonghunnafinalarabic'] = 0xFB9F;\n t['nooninitialarabic'] = 0xFEE7;\n t['noonjeeminitialarabic'] = 0xFCD2;\n t['noonjeemisolatedarabic'] = 0xFC4B;\n t['noonmedialarabic'] = 0xFEE8;\n t['noonmeeminitialarabic'] = 0xFCD5;\n t['noonmeemisolatedarabic'] = 0xFC4E;\n t['noonnoonfinalarabic'] = 0xFC8D;\n t['notcontains'] = 0x220C;\n t['notelement'] = 0x2209;\n t['notelementof'] = 0x2209;\n t['notequal'] = 0x2260;\n t['notgreater'] = 0x226F;\n t['notgreaternorequal'] = 0x2271;\n t['notgreaternorless'] = 0x2279;\n t['notidentical'] = 0x2262;\n t['notless'] = 0x226E;\n t['notlessnorequal'] = 0x2270;\n t['notparallel'] = 0x2226;\n t['notprecedes'] = 0x2280;\n t['notsubset'] = 0x2284;\n t['notsucceeds'] = 0x2281;\n t['notsuperset'] = 0x2285;\n t['nowarmenian'] = 0x0576;\n t['nparen'] = 0x24A9;\n t['nssquare'] = 0x33B1;\n t['nsuperior'] = 0x207F;\n t['ntilde'] = 0x00F1;\n t['nu'] = 0x03BD;\n t['nuhiragana'] = 0x306C;\n t['nukatakana'] = 0x30CC;\n t['nukatakanahalfwidth'] = 0xFF87;\n t['nuktabengali'] = 0x09BC;\n t['nuktadeva'] = 0x093C;\n t['nuktagujarati'] = 0x0ABC;\n t['nuktagurmukhi'] = 0x0A3C;\n t['numbersign'] = 0x0023;\n t['numbersignmonospace'] = 0xFF03;\n t['numbersignsmall'] = 0xFE5F;\n t['numeralsigngreek'] = 0x0374;\n t['numeralsignlowergreek'] = 0x0375;\n t['numero'] = 0x2116;\n t['nun'] = 0x05E0;\n t['nundagesh'] = 0xFB40;\n t['nundageshhebrew'] = 0xFB40;\n t['nunhebrew'] = 0x05E0;\n t['nvsquare'] = 0x33B5;\n t['nwsquare'] = 0x33BB;\n t['nyabengali'] = 0x099E;\n t['nyadeva'] = 0x091E;\n t['nyagujarati'] = 0x0A9E;\n t['nyagurmukhi'] = 0x0A1E;\n t['o'] = 0x006F;\n t['oacute'] = 0x00F3;\n t['oangthai'] = 0x0E2D;\n t['obarred'] = 0x0275;\n t['obarredcyrillic'] = 0x04E9;\n t['obarreddieresiscyrillic'] = 0x04EB;\n t['obengali'] = 0x0993;\n t['obopomofo'] = 0x311B;\n t['obreve'] = 0x014F;\n t['ocandradeva'] = 0x0911;\n t['ocandragujarati'] = 0x0A91;\n t['ocandravowelsigndeva'] = 0x0949;\n t['ocandravowelsigngujarati'] = 0x0AC9;\n t['ocaron'] = 0x01D2;\n t['ocircle'] = 0x24DE;\n t['ocircumflex'] = 0x00F4;\n t['ocircumflexacute'] = 0x1ED1;\n t['ocircumflexdotbelow'] = 0x1ED9;\n t['ocircumflexgrave'] = 0x1ED3;\n t['ocircumflexhookabove'] = 0x1ED5;\n t['ocircumflextilde'] = 0x1ED7;\n t['ocyrillic'] = 0x043E;\n t['odblacute'] = 0x0151;\n t['odblgrave'] = 0x020D;\n t['odeva'] = 0x0913;\n t['odieresis'] = 0x00F6;\n t['odieresiscyrillic'] = 0x04E7;\n t['odotbelow'] = 0x1ECD;\n t['oe'] = 0x0153;\n t['oekorean'] = 0x315A;\n t['ogonek'] = 0x02DB;\n t['ogonekcmb'] = 0x0328;\n t['ograve'] = 0x00F2;\n t['ogujarati'] = 0x0A93;\n t['oharmenian'] = 0x0585;\n t['ohiragana'] = 0x304A;\n t['ohookabove'] = 0x1ECF;\n t['ohorn'] = 0x01A1;\n t['ohornacute'] = 0x1EDB;\n t['ohorndotbelow'] = 0x1EE3;\n t['ohorngrave'] = 0x1EDD;\n t['ohornhookabove'] = 0x1EDF;\n t['ohorntilde'] = 0x1EE1;\n t['ohungarumlaut'] = 0x0151;\n t['oi'] = 0x01A3;\n t['oinvertedbreve'] = 0x020F;\n t['okatakana'] = 0x30AA;\n t['okatakanahalfwidth'] = 0xFF75;\n t['okorean'] = 0x3157;\n t['olehebrew'] = 0x05AB;\n t['omacron'] = 0x014D;\n t['omacronacute'] = 0x1E53;\n t['omacrongrave'] = 0x1E51;\n t['omdeva'] = 0x0950;\n t['omega'] = 0x03C9;\n t['omega1'] = 0x03D6;\n t['omegacyrillic'] = 0x0461;\n t['omegalatinclosed'] = 0x0277;\n t['omegaroundcyrillic'] = 0x047B;\n t['omegatitlocyrillic'] = 0x047D;\n t['omegatonos'] = 0x03CE;\n t['omgujarati'] = 0x0AD0;\n t['omicron'] = 0x03BF;\n t['omicrontonos'] = 0x03CC;\n t['omonospace'] = 0xFF4F;\n t['one'] = 0x0031;\n t['onearabic'] = 0x0661;\n t['onebengali'] = 0x09E7;\n t['onecircle'] = 0x2460;\n t['onecircleinversesansserif'] = 0x278A;\n t['onedeva'] = 0x0967;\n t['onedotenleader'] = 0x2024;\n t['oneeighth'] = 0x215B;\n t['onefitted'] = 0xF6DC;\n t['onegujarati'] = 0x0AE7;\n t['onegurmukhi'] = 0x0A67;\n t['onehackarabic'] = 0x0661;\n t['onehalf'] = 0x00BD;\n t['onehangzhou'] = 0x3021;\n t['oneideographicparen'] = 0x3220;\n t['oneinferior'] = 0x2081;\n t['onemonospace'] = 0xFF11;\n t['onenumeratorbengali'] = 0x09F4;\n t['oneoldstyle'] = 0xF731;\n t['oneparen'] = 0x2474;\n t['oneperiod'] = 0x2488;\n t['onepersian'] = 0x06F1;\n t['onequarter'] = 0x00BC;\n t['oneroman'] = 0x2170;\n t['onesuperior'] = 0x00B9;\n t['onethai'] = 0x0E51;\n t['onethird'] = 0x2153;\n t['oogonek'] = 0x01EB;\n t['oogonekmacron'] = 0x01ED;\n t['oogurmukhi'] = 0x0A13;\n t['oomatragurmukhi'] = 0x0A4B;\n t['oopen'] = 0x0254;\n t['oparen'] = 0x24AA;\n t['openbullet'] = 0x25E6;\n t['option'] = 0x2325;\n t['ordfeminine'] = 0x00AA;\n t['ordmasculine'] = 0x00BA;\n t['orthogonal'] = 0x221F;\n t['oshortdeva'] = 0x0912;\n t['oshortvowelsigndeva'] = 0x094A;\n t['oslash'] = 0x00F8;\n t['oslashacute'] = 0x01FF;\n t['osmallhiragana'] = 0x3049;\n t['osmallkatakana'] = 0x30A9;\n t['osmallkatakanahalfwidth'] = 0xFF6B;\n t['ostrokeacute'] = 0x01FF;\n t['osuperior'] = 0xF6F0;\n t['otcyrillic'] = 0x047F;\n t['otilde'] = 0x00F5;\n t['otildeacute'] = 0x1E4D;\n t['otildedieresis'] = 0x1E4F;\n t['oubopomofo'] = 0x3121;\n t['overline'] = 0x203E;\n t['overlinecenterline'] = 0xFE4A;\n t['overlinecmb'] = 0x0305;\n t['overlinedashed'] = 0xFE49;\n t['overlinedblwavy'] = 0xFE4C;\n t['overlinewavy'] = 0xFE4B;\n t['overscore'] = 0x00AF;\n t['ovowelsignbengali'] = 0x09CB;\n t['ovowelsigndeva'] = 0x094B;\n t['ovowelsigngujarati'] = 0x0ACB;\n t['p'] = 0x0070;\n t['paampssquare'] = 0x3380;\n t['paasentosquare'] = 0x332B;\n t['pabengali'] = 0x09AA;\n t['pacute'] = 0x1E55;\n t['padeva'] = 0x092A;\n t['pagedown'] = 0x21DF;\n t['pageup'] = 0x21DE;\n t['pagujarati'] = 0x0AAA;\n t['pagurmukhi'] = 0x0A2A;\n t['pahiragana'] = 0x3071;\n t['paiyannoithai'] = 0x0E2F;\n t['pakatakana'] = 0x30D1;\n t['palatalizationcyrilliccmb'] = 0x0484;\n t['palochkacyrillic'] = 0x04C0;\n t['pansioskorean'] = 0x317F;\n t['paragraph'] = 0x00B6;\n t['parallel'] = 0x2225;\n t['parenleft'] = 0x0028;\n t['parenleftaltonearabic'] = 0xFD3E;\n t['parenleftbt'] = 0xF8ED;\n t['parenleftex'] = 0xF8EC;\n t['parenleftinferior'] = 0x208D;\n t['parenleftmonospace'] = 0xFF08;\n t['parenleftsmall'] = 0xFE59;\n t['parenleftsuperior'] = 0x207D;\n t['parenlefttp'] = 0xF8EB;\n t['parenleftvertical'] = 0xFE35;\n t['parenright'] = 0x0029;\n t['parenrightaltonearabic'] = 0xFD3F;\n t['parenrightbt'] = 0xF8F8;\n t['parenrightex'] = 0xF8F7;\n t['parenrightinferior'] = 0x208E;\n t['parenrightmonospace'] = 0xFF09;\n t['parenrightsmall'] = 0xFE5A;\n t['parenrightsuperior'] = 0x207E;\n t['parenrighttp'] = 0xF8F6;\n t['parenrightvertical'] = 0xFE36;\n t['partialdiff'] = 0x2202;\n t['paseqhebrew'] = 0x05C0;\n t['pashtahebrew'] = 0x0599;\n t['pasquare'] = 0x33A9;\n t['patah'] = 0x05B7;\n t['patah11'] = 0x05B7;\n t['patah1d'] = 0x05B7;\n t['patah2a'] = 0x05B7;\n t['patahhebrew'] = 0x05B7;\n t['patahnarrowhebrew'] = 0x05B7;\n t['patahquarterhebrew'] = 0x05B7;\n t['patahwidehebrew'] = 0x05B7;\n t['pazerhebrew'] = 0x05A1;\n t['pbopomofo'] = 0x3106;\n t['pcircle'] = 0x24DF;\n t['pdotaccent'] = 0x1E57;\n t['pe'] = 0x05E4;\n t['pecyrillic'] = 0x043F;\n t['pedagesh'] = 0xFB44;\n t['pedageshhebrew'] = 0xFB44;\n t['peezisquare'] = 0x333B;\n t['pefinaldageshhebrew'] = 0xFB43;\n t['peharabic'] = 0x067E;\n t['peharmenian'] = 0x057A;\n t['pehebrew'] = 0x05E4;\n t['pehfinalarabic'] = 0xFB57;\n t['pehinitialarabic'] = 0xFB58;\n t['pehiragana'] = 0x307A;\n t['pehmedialarabic'] = 0xFB59;\n t['pekatakana'] = 0x30DA;\n t['pemiddlehookcyrillic'] = 0x04A7;\n t['perafehebrew'] = 0xFB4E;\n t['percent'] = 0x0025;\n t['percentarabic'] = 0x066A;\n t['percentmonospace'] = 0xFF05;\n t['percentsmall'] = 0xFE6A;\n t['period'] = 0x002E;\n t['periodarmenian'] = 0x0589;\n t['periodcentered'] = 0x00B7;\n t['periodhalfwidth'] = 0xFF61;\n t['periodinferior'] = 0xF6E7;\n t['periodmonospace'] = 0xFF0E;\n t['periodsmall'] = 0xFE52;\n t['periodsuperior'] = 0xF6E8;\n t['perispomenigreekcmb'] = 0x0342;\n t['perpendicular'] = 0x22A5;\n t['perthousand'] = 0x2030;\n t['peseta'] = 0x20A7;\n t['pfsquare'] = 0x338A;\n t['phabengali'] = 0x09AB;\n t['phadeva'] = 0x092B;\n t['phagujarati'] = 0x0AAB;\n t['phagurmukhi'] = 0x0A2B;\n t['phi'] = 0x03C6;\n t['phi1'] = 0x03D5;\n t['phieuphacirclekorean'] = 0x327A;\n t['phieuphaparenkorean'] = 0x321A;\n t['phieuphcirclekorean'] = 0x326C;\n t['phieuphkorean'] = 0x314D;\n t['phieuphparenkorean'] = 0x320C;\n t['philatin'] = 0x0278;\n t['phinthuthai'] = 0x0E3A;\n t['phisymbolgreek'] = 0x03D5;\n t['phook'] = 0x01A5;\n t['phophanthai'] = 0x0E1E;\n t['phophungthai'] = 0x0E1C;\n t['phosamphaothai'] = 0x0E20;\n t['pi'] = 0x03C0;\n t['pieupacirclekorean'] = 0x3273;\n t['pieupaparenkorean'] = 0x3213;\n t['pieupcieuckorean'] = 0x3176;\n t['pieupcirclekorean'] = 0x3265;\n t['pieupkiyeokkorean'] = 0x3172;\n t['pieupkorean'] = 0x3142;\n t['pieupparenkorean'] = 0x3205;\n t['pieupsioskiyeokkorean'] = 0x3174;\n t['pieupsioskorean'] = 0x3144;\n t['pieupsiostikeutkorean'] = 0x3175;\n t['pieupthieuthkorean'] = 0x3177;\n t['pieuptikeutkorean'] = 0x3173;\n t['pihiragana'] = 0x3074;\n t['pikatakana'] = 0x30D4;\n t['pisymbolgreek'] = 0x03D6;\n t['piwrarmenian'] = 0x0583;\n t['plus'] = 0x002B;\n t['plusbelowcmb'] = 0x031F;\n t['pluscircle'] = 0x2295;\n t['plusminus'] = 0x00B1;\n t['plusmod'] = 0x02D6;\n t['plusmonospace'] = 0xFF0B;\n t['plussmall'] = 0xFE62;\n t['plussuperior'] = 0x207A;\n t['pmonospace'] = 0xFF50;\n t['pmsquare'] = 0x33D8;\n t['pohiragana'] = 0x307D;\n t['pointingindexdownwhite'] = 0x261F;\n t['pointingindexleftwhite'] = 0x261C;\n t['pointingindexrightwhite'] = 0x261E;\n t['pointingindexupwhite'] = 0x261D;\n t['pokatakana'] = 0x30DD;\n t['poplathai'] = 0x0E1B;\n t['postalmark'] = 0x3012;\n t['postalmarkface'] = 0x3020;\n t['pparen'] = 0x24AB;\n t['precedes'] = 0x227A;\n t['prescription'] = 0x211E;\n t['primemod'] = 0x02B9;\n t['primereversed'] = 0x2035;\n t['product'] = 0x220F;\n t['projective'] = 0x2305;\n t['prolongedkana'] = 0x30FC;\n t['propellor'] = 0x2318;\n t['propersubset'] = 0x2282;\n t['propersuperset'] = 0x2283;\n t['proportion'] = 0x2237;\n t['proportional'] = 0x221D;\n t['psi'] = 0x03C8;\n t['psicyrillic'] = 0x0471;\n t['psilipneumatacyrilliccmb'] = 0x0486;\n t['pssquare'] = 0x33B0;\n t['puhiragana'] = 0x3077;\n t['pukatakana'] = 0x30D7;\n t['pvsquare'] = 0x33B4;\n t['pwsquare'] = 0x33BA;\n t['q'] = 0x0071;\n t['qadeva'] = 0x0958;\n t['qadmahebrew'] = 0x05A8;\n t['qafarabic'] = 0x0642;\n t['qaffinalarabic'] = 0xFED6;\n t['qafinitialarabic'] = 0xFED7;\n t['qafmedialarabic'] = 0xFED8;\n t['qamats'] = 0x05B8;\n t['qamats10'] = 0x05B8;\n t['qamats1a'] = 0x05B8;\n t['qamats1c'] = 0x05B8;\n t['qamats27'] = 0x05B8;\n t['qamats29'] = 0x05B8;\n t['qamats33'] = 0x05B8;\n t['qamatsde'] = 0x05B8;\n t['qamatshebrew'] = 0x05B8;\n t['qamatsnarrowhebrew'] = 0x05B8;\n t['qamatsqatanhebrew'] = 0x05B8;\n t['qamatsqatannarrowhebrew'] = 0x05B8;\n t['qamatsqatanquarterhebrew'] = 0x05B8;\n t['qamatsqatanwidehebrew'] = 0x05B8;\n t['qamatsquarterhebrew'] = 0x05B8;\n t['qamatswidehebrew'] = 0x05B8;\n t['qarneyparahebrew'] = 0x059F;\n t['qbopomofo'] = 0x3111;\n t['qcircle'] = 0x24E0;\n t['qhook'] = 0x02A0;\n t['qmonospace'] = 0xFF51;\n t['qof'] = 0x05E7;\n t['qofdagesh'] = 0xFB47;\n t['qofdageshhebrew'] = 0xFB47;\n t['qofhebrew'] = 0x05E7;\n t['qparen'] = 0x24AC;\n t['quarternote'] = 0x2669;\n t['qubuts'] = 0x05BB;\n t['qubuts18'] = 0x05BB;\n t['qubuts25'] = 0x05BB;\n t['qubuts31'] = 0x05BB;\n t['qubutshebrew'] = 0x05BB;\n t['qubutsnarrowhebrew'] = 0x05BB;\n t['qubutsquarterhebrew'] = 0x05BB;\n t['qubutswidehebrew'] = 0x05BB;\n t['question'] = 0x003F;\n t['questionarabic'] = 0x061F;\n t['questionarmenian'] = 0x055E;\n t['questiondown'] = 0x00BF;\n t['questiondownsmall'] = 0xF7BF;\n t['questiongreek'] = 0x037E;\n t['questionmonospace'] = 0xFF1F;\n t['questionsmall'] = 0xF73F;\n t['quotedbl'] = 0x0022;\n t['quotedblbase'] = 0x201E;\n t['quotedblleft'] = 0x201C;\n t['quotedblmonospace'] = 0xFF02;\n t['quotedblprime'] = 0x301E;\n t['quotedblprimereversed'] = 0x301D;\n t['quotedblright'] = 0x201D;\n t['quoteleft'] = 0x2018;\n t['quoteleftreversed'] = 0x201B;\n t['quotereversed'] = 0x201B;\n t['quoteright'] = 0x2019;\n t['quoterightn'] = 0x0149;\n t['quotesinglbase'] = 0x201A;\n t['quotesingle'] = 0x0027;\n t['quotesinglemonospace'] = 0xFF07;\n t['r'] = 0x0072;\n t['raarmenian'] = 0x057C;\n t['rabengali'] = 0x09B0;\n t['racute'] = 0x0155;\n t['radeva'] = 0x0930;\n t['radical'] = 0x221A;\n t['radicalex'] = 0xF8E5;\n t['radoverssquare'] = 0x33AE;\n t['radoverssquaredsquare'] = 0x33AF;\n t['radsquare'] = 0x33AD;\n t['rafe'] = 0x05BF;\n t['rafehebrew'] = 0x05BF;\n t['ragujarati'] = 0x0AB0;\n t['ragurmukhi'] = 0x0A30;\n t['rahiragana'] = 0x3089;\n t['rakatakana'] = 0x30E9;\n t['rakatakanahalfwidth'] = 0xFF97;\n t['ralowerdiagonalbengali'] = 0x09F1;\n t['ramiddlediagonalbengali'] = 0x09F0;\n t['ramshorn'] = 0x0264;\n t['ratio'] = 0x2236;\n t['rbopomofo'] = 0x3116;\n t['rcaron'] = 0x0159;\n t['rcedilla'] = 0x0157;\n t['rcircle'] = 0x24E1;\n t['rcommaaccent'] = 0x0157;\n t['rdblgrave'] = 0x0211;\n t['rdotaccent'] = 0x1E59;\n t['rdotbelow'] = 0x1E5B;\n t['rdotbelowmacron'] = 0x1E5D;\n t['referencemark'] = 0x203B;\n t['reflexsubset'] = 0x2286;\n t['reflexsuperset'] = 0x2287;\n t['registered'] = 0x00AE;\n t['registersans'] = 0xF8E8;\n t['registerserif'] = 0xF6DA;\n t['reharabic'] = 0x0631;\n t['reharmenian'] = 0x0580;\n t['rehfinalarabic'] = 0xFEAE;\n t['rehiragana'] = 0x308C;\n t['rekatakana'] = 0x30EC;\n t['rekatakanahalfwidth'] = 0xFF9A;\n t['resh'] = 0x05E8;\n t['reshdageshhebrew'] = 0xFB48;\n t['reshhebrew'] = 0x05E8;\n t['reversedtilde'] = 0x223D;\n t['reviahebrew'] = 0x0597;\n t['reviamugrashhebrew'] = 0x0597;\n t['revlogicalnot'] = 0x2310;\n t['rfishhook'] = 0x027E;\n t['rfishhookreversed'] = 0x027F;\n t['rhabengali'] = 0x09DD;\n t['rhadeva'] = 0x095D;\n t['rho'] = 0x03C1;\n t['rhook'] = 0x027D;\n t['rhookturned'] = 0x027B;\n t['rhookturnedsuperior'] = 0x02B5;\n t['rhosymbolgreek'] = 0x03F1;\n t['rhotichookmod'] = 0x02DE;\n t['rieulacirclekorean'] = 0x3271;\n t['rieulaparenkorean'] = 0x3211;\n t['rieulcirclekorean'] = 0x3263;\n t['rieulhieuhkorean'] = 0x3140;\n t['rieulkiyeokkorean'] = 0x313A;\n t['rieulkiyeoksioskorean'] = 0x3169;\n t['rieulkorean'] = 0x3139;\n t['rieulmieumkorean'] = 0x313B;\n t['rieulpansioskorean'] = 0x316C;\n t['rieulparenkorean'] = 0x3203;\n t['rieulphieuphkorean'] = 0x313F;\n t['rieulpieupkorean'] = 0x313C;\n t['rieulpieupsioskorean'] = 0x316B;\n t['rieulsioskorean'] = 0x313D;\n t['rieulthieuthkorean'] = 0x313E;\n t['rieultikeutkorean'] = 0x316A;\n t['rieulyeorinhieuhkorean'] = 0x316D;\n t['rightangle'] = 0x221F;\n t['righttackbelowcmb'] = 0x0319;\n t['righttriangle'] = 0x22BF;\n t['rihiragana'] = 0x308A;\n t['rikatakana'] = 0x30EA;\n t['rikatakanahalfwidth'] = 0xFF98;\n t['ring'] = 0x02DA;\n t['ringbelowcmb'] = 0x0325;\n t['ringcmb'] = 0x030A;\n t['ringhalfleft'] = 0x02BF;\n t['ringhalfleftarmenian'] = 0x0559;\n t['ringhalfleftbelowcmb'] = 0x031C;\n t['ringhalfleftcentered'] = 0x02D3;\n t['ringhalfright'] = 0x02BE;\n t['ringhalfrightbelowcmb'] = 0x0339;\n t['ringhalfrightcentered'] = 0x02D2;\n t['rinvertedbreve'] = 0x0213;\n t['rittorusquare'] = 0x3351;\n t['rlinebelow'] = 0x1E5F;\n t['rlongleg'] = 0x027C;\n t['rlonglegturned'] = 0x027A;\n t['rmonospace'] = 0xFF52;\n t['rohiragana'] = 0x308D;\n t['rokatakana'] = 0x30ED;\n t['rokatakanahalfwidth'] = 0xFF9B;\n t['roruathai'] = 0x0E23;\n t['rparen'] = 0x24AD;\n t['rrabengali'] = 0x09DC;\n t['rradeva'] = 0x0931;\n t['rragurmukhi'] = 0x0A5C;\n t['rreharabic'] = 0x0691;\n t['rrehfinalarabic'] = 0xFB8D;\n t['rrvocalicbengali'] = 0x09E0;\n t['rrvocalicdeva'] = 0x0960;\n t['rrvocalicgujarati'] = 0x0AE0;\n t['rrvocalicvowelsignbengali'] = 0x09C4;\n t['rrvocalicvowelsigndeva'] = 0x0944;\n t['rrvocalicvowelsigngujarati'] = 0x0AC4;\n t['rsuperior'] = 0xF6F1;\n t['rtblock'] = 0x2590;\n t['rturned'] = 0x0279;\n t['rturnedsuperior'] = 0x02B4;\n t['ruhiragana'] = 0x308B;\n t['rukatakana'] = 0x30EB;\n t['rukatakanahalfwidth'] = 0xFF99;\n t['rupeemarkbengali'] = 0x09F2;\n t['rupeesignbengali'] = 0x09F3;\n t['rupiah'] = 0xF6DD;\n t['ruthai'] = 0x0E24;\n t['rvocalicbengali'] = 0x098B;\n t['rvocalicdeva'] = 0x090B;\n t['rvocalicgujarati'] = 0x0A8B;\n t['rvocalicvowelsignbengali'] = 0x09C3;\n t['rvocalicvowelsigndeva'] = 0x0943;\n t['rvocalicvowelsigngujarati'] = 0x0AC3;\n t['s'] = 0x0073;\n t['sabengali'] = 0x09B8;\n t['sacute'] = 0x015B;\n t['sacutedotaccent'] = 0x1E65;\n t['sadarabic'] = 0x0635;\n t['sadeva'] = 0x0938;\n t['sadfinalarabic'] = 0xFEBA;\n t['sadinitialarabic'] = 0xFEBB;\n t['sadmedialarabic'] = 0xFEBC;\n t['sagujarati'] = 0x0AB8;\n t['sagurmukhi'] = 0x0A38;\n t['sahiragana'] = 0x3055;\n t['sakatakana'] = 0x30B5;\n t['sakatakanahalfwidth'] = 0xFF7B;\n t['sallallahoualayhewasallamarabic'] = 0xFDFA;\n t['samekh'] = 0x05E1;\n t['samekhdagesh'] = 0xFB41;\n t['samekhdageshhebrew'] = 0xFB41;\n t['samekhhebrew'] = 0x05E1;\n t['saraaathai'] = 0x0E32;\n t['saraaethai'] = 0x0E41;\n t['saraaimaimalaithai'] = 0x0E44;\n t['saraaimaimuanthai'] = 0x0E43;\n t['saraamthai'] = 0x0E33;\n t['saraathai'] = 0x0E30;\n t['saraethai'] = 0x0E40;\n t['saraiileftthai'] = 0xF886;\n t['saraiithai'] = 0x0E35;\n t['saraileftthai'] = 0xF885;\n t['saraithai'] = 0x0E34;\n t['saraothai'] = 0x0E42;\n t['saraueeleftthai'] = 0xF888;\n t['saraueethai'] = 0x0E37;\n t['saraueleftthai'] = 0xF887;\n t['sarauethai'] = 0x0E36;\n t['sarauthai'] = 0x0E38;\n t['sarauuthai'] = 0x0E39;\n t['sbopomofo'] = 0x3119;\n t['scaron'] = 0x0161;\n t['scarondotaccent'] = 0x1E67;\n t['scedilla'] = 0x015F;\n t['schwa'] = 0x0259;\n t['schwacyrillic'] = 0x04D9;\n t['schwadieresiscyrillic'] = 0x04DB;\n t['schwahook'] = 0x025A;\n t['scircle'] = 0x24E2;\n t['scircumflex'] = 0x015D;\n t['scommaaccent'] = 0x0219;\n t['sdotaccent'] = 0x1E61;\n t['sdotbelow'] = 0x1E63;\n t['sdotbelowdotaccent'] = 0x1E69;\n t['seagullbelowcmb'] = 0x033C;\n t['second'] = 0x2033;\n t['secondtonechinese'] = 0x02CA;\n t['section'] = 0x00A7;\n t['seenarabic'] = 0x0633;\n t['seenfinalarabic'] = 0xFEB2;\n t['seeninitialarabic'] = 0xFEB3;\n t['seenmedialarabic'] = 0xFEB4;\n t['segol'] = 0x05B6;\n t['segol13'] = 0x05B6;\n t['segol1f'] = 0x05B6;\n t['segol2c'] = 0x05B6;\n t['segolhebrew'] = 0x05B6;\n t['segolnarrowhebrew'] = 0x05B6;\n t['segolquarterhebrew'] = 0x05B6;\n t['segoltahebrew'] = 0x0592;\n t['segolwidehebrew'] = 0x05B6;\n t['seharmenian'] = 0x057D;\n t['sehiragana'] = 0x305B;\n t['sekatakana'] = 0x30BB;\n t['sekatakanahalfwidth'] = 0xFF7E;\n t['semicolon'] = 0x003B;\n t['semicolonarabic'] = 0x061B;\n t['semicolonmonospace'] = 0xFF1B;\n t['semicolonsmall'] = 0xFE54;\n t['semivoicedmarkkana'] = 0x309C;\n t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\n t['sentisquare'] = 0x3322;\n t['sentosquare'] = 0x3323;\n t['seven'] = 0x0037;\n t['sevenarabic'] = 0x0667;\n t['sevenbengali'] = 0x09ED;\n t['sevencircle'] = 0x2466;\n t['sevencircleinversesansserif'] = 0x2790;\n t['sevendeva'] = 0x096D;\n t['seveneighths'] = 0x215E;\n t['sevengujarati'] = 0x0AED;\n t['sevengurmukhi'] = 0x0A6D;\n t['sevenhackarabic'] = 0x0667;\n t['sevenhangzhou'] = 0x3027;\n t['sevenideographicparen'] = 0x3226;\n t['seveninferior'] = 0x2087;\n t['sevenmonospace'] = 0xFF17;\n t['sevenoldstyle'] = 0xF737;\n t['sevenparen'] = 0x247A;\n t['sevenperiod'] = 0x248E;\n t['sevenpersian'] = 0x06F7;\n t['sevenroman'] = 0x2176;\n t['sevensuperior'] = 0x2077;\n t['seventeencircle'] = 0x2470;\n t['seventeenparen'] = 0x2484;\n t['seventeenperiod'] = 0x2498;\n t['seventhai'] = 0x0E57;\n t['sfthyphen'] = 0x00AD;\n t['shaarmenian'] = 0x0577;\n t['shabengali'] = 0x09B6;\n t['shacyrillic'] = 0x0448;\n t['shaddaarabic'] = 0x0651;\n t['shaddadammaarabic'] = 0xFC61;\n t['shaddadammatanarabic'] = 0xFC5E;\n t['shaddafathaarabic'] = 0xFC60;\n t['shaddakasraarabic'] = 0xFC62;\n t['shaddakasratanarabic'] = 0xFC5F;\n t['shade'] = 0x2592;\n t['shadedark'] = 0x2593;\n t['shadelight'] = 0x2591;\n t['shademedium'] = 0x2592;\n t['shadeva'] = 0x0936;\n t['shagujarati'] = 0x0AB6;\n t['shagurmukhi'] = 0x0A36;\n t['shalshelethebrew'] = 0x0593;\n t['shbopomofo'] = 0x3115;\n t['shchacyrillic'] = 0x0449;\n t['sheenarabic'] = 0x0634;\n t['sheenfinalarabic'] = 0xFEB6;\n t['sheeninitialarabic'] = 0xFEB7;\n t['sheenmedialarabic'] = 0xFEB8;\n t['sheicoptic'] = 0x03E3;\n t['sheqel'] = 0x20AA;\n t['sheqelhebrew'] = 0x20AA;\n t['sheva'] = 0x05B0;\n t['sheva115'] = 0x05B0;\n t['sheva15'] = 0x05B0;\n t['sheva22'] = 0x05B0;\n t['sheva2e'] = 0x05B0;\n t['shevahebrew'] = 0x05B0;\n t['shevanarrowhebrew'] = 0x05B0;\n t['shevaquarterhebrew'] = 0x05B0;\n t['shevawidehebrew'] = 0x05B0;\n t['shhacyrillic'] = 0x04BB;\n t['shimacoptic'] = 0x03ED;\n t['shin'] = 0x05E9;\n t['shindagesh'] = 0xFB49;\n t['shindageshhebrew'] = 0xFB49;\n t['shindageshshindot'] = 0xFB2C;\n t['shindageshshindothebrew'] = 0xFB2C;\n t['shindageshsindot'] = 0xFB2D;\n t['shindageshsindothebrew'] = 0xFB2D;\n t['shindothebrew'] = 0x05C1;\n t['shinhebrew'] = 0x05E9;\n t['shinshindot'] = 0xFB2A;\n t['shinshindothebrew'] = 0xFB2A;\n t['shinsindot'] = 0xFB2B;\n t['shinsindothebrew'] = 0xFB2B;\n t['shook'] = 0x0282;\n t['sigma'] = 0x03C3;\n t['sigma1'] = 0x03C2;\n t['sigmafinal'] = 0x03C2;\n t['sigmalunatesymbolgreek'] = 0x03F2;\n t['sihiragana'] = 0x3057;\n t['sikatakana'] = 0x30B7;\n t['sikatakanahalfwidth'] = 0xFF7C;\n t['siluqhebrew'] = 0x05BD;\n t['siluqlefthebrew'] = 0x05BD;\n t['similar'] = 0x223C;\n t['sindothebrew'] = 0x05C2;\n t['siosacirclekorean'] = 0x3274;\n t['siosaparenkorean'] = 0x3214;\n t['sioscieuckorean'] = 0x317E;\n t['sioscirclekorean'] = 0x3266;\n t['sioskiyeokkorean'] = 0x317A;\n t['sioskorean'] = 0x3145;\n t['siosnieunkorean'] = 0x317B;\n t['siosparenkorean'] = 0x3206;\n t['siospieupkorean'] = 0x317D;\n t['siostikeutkorean'] = 0x317C;\n t['six'] = 0x0036;\n t['sixarabic'] = 0x0666;\n t['sixbengali'] = 0x09EC;\n t['sixcircle'] = 0x2465;\n t['sixcircleinversesansserif'] = 0x278F;\n t['sixdeva'] = 0x096C;\n t['sixgujarati'] = 0x0AEC;\n t['sixgurmukhi'] = 0x0A6C;\n t['sixhackarabic'] = 0x0666;\n t['sixhangzhou'] = 0x3026;\n t['sixideographicparen'] = 0x3225;\n t['sixinferior'] = 0x2086;\n t['sixmonospace'] = 0xFF16;\n t['sixoldstyle'] = 0xF736;\n t['sixparen'] = 0x2479;\n t['sixperiod'] = 0x248D;\n t['sixpersian'] = 0x06F6;\n t['sixroman'] = 0x2175;\n t['sixsuperior'] = 0x2076;\n t['sixteencircle'] = 0x246F;\n t['sixteencurrencydenominatorbengali'] = 0x09F9;\n t['sixteenparen'] = 0x2483;\n t['sixteenperiod'] = 0x2497;\n t['sixthai'] = 0x0E56;\n t['slash'] = 0x002F;\n t['slashmonospace'] = 0xFF0F;\n t['slong'] = 0x017F;\n t['slongdotaccent'] = 0x1E9B;\n t['smileface'] = 0x263A;\n t['smonospace'] = 0xFF53;\n t['sofpasuqhebrew'] = 0x05C3;\n t['softhyphen'] = 0x00AD;\n t['softsigncyrillic'] = 0x044C;\n t['sohiragana'] = 0x305D;\n t['sokatakana'] = 0x30BD;\n t['sokatakanahalfwidth'] = 0xFF7F;\n t['soliduslongoverlaycmb'] = 0x0338;\n t['solidusshortoverlaycmb'] = 0x0337;\n t['sorusithai'] = 0x0E29;\n t['sosalathai'] = 0x0E28;\n t['sosothai'] = 0x0E0B;\n t['sosuathai'] = 0x0E2A;\n t['space'] = 0x0020;\n t['spacehackarabic'] = 0x0020;\n t['spade'] = 0x2660;\n t['spadesuitblack'] = 0x2660;\n t['spadesuitwhite'] = 0x2664;\n t['sparen'] = 0x24AE;\n t['squarebelowcmb'] = 0x033B;\n t['squarecc'] = 0x33C4;\n t['squarecm'] = 0x339D;\n t['squarediagonalcrosshatchfill'] = 0x25A9;\n t['squarehorizontalfill'] = 0x25A4;\n t['squarekg'] = 0x338F;\n t['squarekm'] = 0x339E;\n t['squarekmcapital'] = 0x33CE;\n t['squareln'] = 0x33D1;\n t['squarelog'] = 0x33D2;\n t['squaremg'] = 0x338E;\n t['squaremil'] = 0x33D5;\n t['squaremm'] = 0x339C;\n t['squaremsquared'] = 0x33A1;\n t['squareorthogonalcrosshatchfill'] = 0x25A6;\n t['squareupperlefttolowerrightfill'] = 0x25A7;\n t['squareupperrighttolowerleftfill'] = 0x25A8;\n t['squareverticalfill'] = 0x25A5;\n t['squarewhitewithsmallblack'] = 0x25A3;\n t['srsquare'] = 0x33DB;\n t['ssabengali'] = 0x09B7;\n t['ssadeva'] = 0x0937;\n t['ssagujarati'] = 0x0AB7;\n t['ssangcieuckorean'] = 0x3149;\n t['ssanghieuhkorean'] = 0x3185;\n t['ssangieungkorean'] = 0x3180;\n t['ssangkiyeokkorean'] = 0x3132;\n t['ssangnieunkorean'] = 0x3165;\n t['ssangpieupkorean'] = 0x3143;\n t['ssangsioskorean'] = 0x3146;\n t['ssangtikeutkorean'] = 0x3138;\n t['ssuperior'] = 0xF6F2;\n t['sterling'] = 0x00A3;\n t['sterlingmonospace'] = 0xFFE1;\n t['strokelongoverlaycmb'] = 0x0336;\n t['strokeshortoverlaycmb'] = 0x0335;\n t['subset'] = 0x2282;\n t['subsetnotequal'] = 0x228A;\n t['subsetorequal'] = 0x2286;\n t['succeeds'] = 0x227B;\n t['suchthat'] = 0x220B;\n t['suhiragana'] = 0x3059;\n t['sukatakana'] = 0x30B9;\n t['sukatakanahalfwidth'] = 0xFF7D;\n t['sukunarabic'] = 0x0652;\n t['summation'] = 0x2211;\n t['sun'] = 0x263C;\n t['superset'] = 0x2283;\n t['supersetnotequal'] = 0x228B;\n t['supersetorequal'] = 0x2287;\n t['svsquare'] = 0x33DC;\n t['syouwaerasquare'] = 0x337C;\n t['t'] = 0x0074;\n t['tabengali'] = 0x09A4;\n t['tackdown'] = 0x22A4;\n t['tackleft'] = 0x22A3;\n t['tadeva'] = 0x0924;\n t['tagujarati'] = 0x0AA4;\n t['tagurmukhi'] = 0x0A24;\n t['taharabic'] = 0x0637;\n t['tahfinalarabic'] = 0xFEC2;\n t['tahinitialarabic'] = 0xFEC3;\n t['tahiragana'] = 0x305F;\n t['tahmedialarabic'] = 0xFEC4;\n t['taisyouerasquare'] = 0x337D;\n t['takatakana'] = 0x30BF;\n t['takatakanahalfwidth'] = 0xFF80;\n t['tatweelarabic'] = 0x0640;\n t['tau'] = 0x03C4;\n t['tav'] = 0x05EA;\n t['tavdages'] = 0xFB4A;\n t['tavdagesh'] = 0xFB4A;\n t['tavdageshhebrew'] = 0xFB4A;\n t['tavhebrew'] = 0x05EA;\n t['tbar'] = 0x0167;\n t['tbopomofo'] = 0x310A;\n t['tcaron'] = 0x0165;\n t['tccurl'] = 0x02A8;\n t['tcedilla'] = 0x0163;\n t['tcheharabic'] = 0x0686;\n t['tchehfinalarabic'] = 0xFB7B;\n t['tchehinitialarabic'] = 0xFB7C;\n t['tchehmedialarabic'] = 0xFB7D;\n t['tcircle'] = 0x24E3;\n t['tcircumflexbelow'] = 0x1E71;\n t['tcommaaccent'] = 0x0163;\n t['tdieresis'] = 0x1E97;\n t['tdotaccent'] = 0x1E6B;\n t['tdotbelow'] = 0x1E6D;\n t['tecyrillic'] = 0x0442;\n t['tedescendercyrillic'] = 0x04AD;\n t['teharabic'] = 0x062A;\n t['tehfinalarabic'] = 0xFE96;\n t['tehhahinitialarabic'] = 0xFCA2;\n t['tehhahisolatedarabic'] = 0xFC0C;\n t['tehinitialarabic'] = 0xFE97;\n t['tehiragana'] = 0x3066;\n t['tehjeeminitialarabic'] = 0xFCA1;\n t['tehjeemisolatedarabic'] = 0xFC0B;\n t['tehmarbutaarabic'] = 0x0629;\n t['tehmarbutafinalarabic'] = 0xFE94;\n t['tehmedialarabic'] = 0xFE98;\n t['tehmeeminitialarabic'] = 0xFCA4;\n t['tehmeemisolatedarabic'] = 0xFC0E;\n t['tehnoonfinalarabic'] = 0xFC73;\n t['tekatakana'] = 0x30C6;\n t['tekatakanahalfwidth'] = 0xFF83;\n t['telephone'] = 0x2121;\n t['telephoneblack'] = 0x260E;\n t['telishagedolahebrew'] = 0x05A0;\n t['telishaqetanahebrew'] = 0x05A9;\n t['tencircle'] = 0x2469;\n t['tenideographicparen'] = 0x3229;\n t['tenparen'] = 0x247D;\n t['tenperiod'] = 0x2491;\n t['tenroman'] = 0x2179;\n t['tesh'] = 0x02A7;\n t['tet'] = 0x05D8;\n t['tetdagesh'] = 0xFB38;\n t['tetdageshhebrew'] = 0xFB38;\n t['tethebrew'] = 0x05D8;\n t['tetsecyrillic'] = 0x04B5;\n t['tevirhebrew'] = 0x059B;\n t['tevirlefthebrew'] = 0x059B;\n t['thabengali'] = 0x09A5;\n t['thadeva'] = 0x0925;\n t['thagujarati'] = 0x0AA5;\n t['thagurmukhi'] = 0x0A25;\n t['thalarabic'] = 0x0630;\n t['thalfinalarabic'] = 0xFEAC;\n t['thanthakhatlowleftthai'] = 0xF898;\n t['thanthakhatlowrightthai'] = 0xF897;\n t['thanthakhatthai'] = 0x0E4C;\n t['thanthakhatupperleftthai'] = 0xF896;\n t['theharabic'] = 0x062B;\n t['thehfinalarabic'] = 0xFE9A;\n t['thehinitialarabic'] = 0xFE9B;\n t['thehmedialarabic'] = 0xFE9C;\n t['thereexists'] = 0x2203;\n t['therefore'] = 0x2234;\n t['theta'] = 0x03B8;\n t['theta1'] = 0x03D1;\n t['thetasymbolgreek'] = 0x03D1;\n t['thieuthacirclekorean'] = 0x3279;\n t['thieuthaparenkorean'] = 0x3219;\n t['thieuthcirclekorean'] = 0x326B;\n t['thieuthkorean'] = 0x314C;\n t['thieuthparenkorean'] = 0x320B;\n t['thirteencircle'] = 0x246C;\n t['thirteenparen'] = 0x2480;\n t['thirteenperiod'] = 0x2494;\n t['thonangmonthothai'] = 0x0E11;\n t['thook'] = 0x01AD;\n t['thophuthaothai'] = 0x0E12;\n t['thorn'] = 0x00FE;\n t['thothahanthai'] = 0x0E17;\n t['thothanthai'] = 0x0E10;\n t['thothongthai'] = 0x0E18;\n t['thothungthai'] = 0x0E16;\n t['thousandcyrillic'] = 0x0482;\n t['thousandsseparatorarabic'] = 0x066C;\n t['thousandsseparatorpersian'] = 0x066C;\n t['three'] = 0x0033;\n t['threearabic'] = 0x0663;\n t['threebengali'] = 0x09E9;\n t['threecircle'] = 0x2462;\n t['threecircleinversesansserif'] = 0x278C;\n t['threedeva'] = 0x0969;\n t['threeeighths'] = 0x215C;\n t['threegujarati'] = 0x0AE9;\n t['threegurmukhi'] = 0x0A69;\n t['threehackarabic'] = 0x0663;\n t['threehangzhou'] = 0x3023;\n t['threeideographicparen'] = 0x3222;\n t['threeinferior'] = 0x2083;\n t['threemonospace'] = 0xFF13;\n t['threenumeratorbengali'] = 0x09F6;\n t['threeoldstyle'] = 0xF733;\n t['threeparen'] = 0x2476;\n t['threeperiod'] = 0x248A;\n t['threepersian'] = 0x06F3;\n t['threequarters'] = 0x00BE;\n t['threequartersemdash'] = 0xF6DE;\n t['threeroman'] = 0x2172;\n t['threesuperior'] = 0x00B3;\n t['threethai'] = 0x0E53;\n t['thzsquare'] = 0x3394;\n t['tihiragana'] = 0x3061;\n t['tikatakana'] = 0x30C1;\n t['tikatakanahalfwidth'] = 0xFF81;\n t['tikeutacirclekorean'] = 0x3270;\n t['tikeutaparenkorean'] = 0x3210;\n t['tikeutcirclekorean'] = 0x3262;\n t['tikeutkorean'] = 0x3137;\n t['tikeutparenkorean'] = 0x3202;\n t['tilde'] = 0x02DC;\n t['tildebelowcmb'] = 0x0330;\n t['tildecmb'] = 0x0303;\n t['tildecomb'] = 0x0303;\n t['tildedoublecmb'] = 0x0360;\n t['tildeoperator'] = 0x223C;\n t['tildeoverlaycmb'] = 0x0334;\n t['tildeverticalcmb'] = 0x033E;\n t['timescircle'] = 0x2297;\n t['tipehahebrew'] = 0x0596;\n t['tipehalefthebrew'] = 0x0596;\n t['tippigurmukhi'] = 0x0A70;\n t['titlocyrilliccmb'] = 0x0483;\n t['tiwnarmenian'] = 0x057F;\n t['tlinebelow'] = 0x1E6F;\n t['tmonospace'] = 0xFF54;\n t['toarmenian'] = 0x0569;\n t['tohiragana'] = 0x3068;\n t['tokatakana'] = 0x30C8;\n t['tokatakanahalfwidth'] = 0xFF84;\n t['tonebarextrahighmod'] = 0x02E5;\n t['tonebarextralowmod'] = 0x02E9;\n t['tonebarhighmod'] = 0x02E6;\n t['tonebarlowmod'] = 0x02E8;\n t['tonebarmidmod'] = 0x02E7;\n t['tonefive'] = 0x01BD;\n t['tonesix'] = 0x0185;\n t['tonetwo'] = 0x01A8;\n t['tonos'] = 0x0384;\n t['tonsquare'] = 0x3327;\n t['topatakthai'] = 0x0E0F;\n t['tortoiseshellbracketleft'] = 0x3014;\n t['tortoiseshellbracketleftsmall'] = 0xFE5D;\n t['tortoiseshellbracketleftvertical'] = 0xFE39;\n t['tortoiseshellbracketright'] = 0x3015;\n t['tortoiseshellbracketrightsmall'] = 0xFE5E;\n t['tortoiseshellbracketrightvertical'] = 0xFE3A;\n t['totaothai'] = 0x0E15;\n t['tpalatalhook'] = 0x01AB;\n t['tparen'] = 0x24AF;\n t['trademark'] = 0x2122;\n t['trademarksans'] = 0xF8EA;\n t['trademarkserif'] = 0xF6DB;\n t['tretroflexhook'] = 0x0288;\n t['triagdn'] = 0x25BC;\n t['triaglf'] = 0x25C4;\n t['triagrt'] = 0x25BA;\n t['triagup'] = 0x25B2;\n t['ts'] = 0x02A6;\n t['tsadi'] = 0x05E6;\n t['tsadidagesh'] = 0xFB46;\n t['tsadidageshhebrew'] = 0xFB46;\n t['tsadihebrew'] = 0x05E6;\n t['tsecyrillic'] = 0x0446;\n t['tsere'] = 0x05B5;\n t['tsere12'] = 0x05B5;\n t['tsere1e'] = 0x05B5;\n t['tsere2b'] = 0x05B5;\n t['tserehebrew'] = 0x05B5;\n t['tserenarrowhebrew'] = 0x05B5;\n t['tserequarterhebrew'] = 0x05B5;\n t['tserewidehebrew'] = 0x05B5;\n t['tshecyrillic'] = 0x045B;\n t['tsuperior'] = 0xF6F3;\n t['ttabengali'] = 0x099F;\n t['ttadeva'] = 0x091F;\n t['ttagujarati'] = 0x0A9F;\n t['ttagurmukhi'] = 0x0A1F;\n t['tteharabic'] = 0x0679;\n t['ttehfinalarabic'] = 0xFB67;\n t['ttehinitialarabic'] = 0xFB68;\n t['ttehmedialarabic'] = 0xFB69;\n t['tthabengali'] = 0x09A0;\n t['tthadeva'] = 0x0920;\n t['tthagujarati'] = 0x0AA0;\n t['tthagurmukhi'] = 0x0A20;\n t['tturned'] = 0x0287;\n t['tuhiragana'] = 0x3064;\n t['tukatakana'] = 0x30C4;\n t['tukatakanahalfwidth'] = 0xFF82;\n t['tusmallhiragana'] = 0x3063;\n t['tusmallkatakana'] = 0x30C3;\n t['tusmallkatakanahalfwidth'] = 0xFF6F;\n t['twelvecircle'] = 0x246B;\n t['twelveparen'] = 0x247F;\n t['twelveperiod'] = 0x2493;\n t['twelveroman'] = 0x217B;\n t['twentycircle'] = 0x2473;\n t['twentyhangzhou'] = 0x5344;\n t['twentyparen'] = 0x2487;\n t['twentyperiod'] = 0x249B;\n t['two'] = 0x0032;\n t['twoarabic'] = 0x0662;\n t['twobengali'] = 0x09E8;\n t['twocircle'] = 0x2461;\n t['twocircleinversesansserif'] = 0x278B;\n t['twodeva'] = 0x0968;\n t['twodotenleader'] = 0x2025;\n t['twodotleader'] = 0x2025;\n t['twodotleadervertical'] = 0xFE30;\n t['twogujarati'] = 0x0AE8;\n t['twogurmukhi'] = 0x0A68;\n t['twohackarabic'] = 0x0662;\n t['twohangzhou'] = 0x3022;\n t['twoideographicparen'] = 0x3221;\n t['twoinferior'] = 0x2082;\n t['twomonospace'] = 0xFF12;\n t['twonumeratorbengali'] = 0x09F5;\n t['twooldstyle'] = 0xF732;\n t['twoparen'] = 0x2475;\n t['twoperiod'] = 0x2489;\n t['twopersian'] = 0x06F2;\n t['tworoman'] = 0x2171;\n t['twostroke'] = 0x01BB;\n t['twosuperior'] = 0x00B2;\n t['twothai'] = 0x0E52;\n t['twothirds'] = 0x2154;\n t['u'] = 0x0075;\n t['uacute'] = 0x00FA;\n t['ubar'] = 0x0289;\n t['ubengali'] = 0x0989;\n t['ubopomofo'] = 0x3128;\n t['ubreve'] = 0x016D;\n t['ucaron'] = 0x01D4;\n t['ucircle'] = 0x24E4;\n t['ucircumflex'] = 0x00FB;\n t['ucircumflexbelow'] = 0x1E77;\n t['ucyrillic'] = 0x0443;\n t['udattadeva'] = 0x0951;\n t['udblacute'] = 0x0171;\n t['udblgrave'] = 0x0215;\n t['udeva'] = 0x0909;\n t['udieresis'] = 0x00FC;\n t['udieresisacute'] = 0x01D8;\n t['udieresisbelow'] = 0x1E73;\n t['udieresiscaron'] = 0x01DA;\n t['udieresiscyrillic'] = 0x04F1;\n t['udieresisgrave'] = 0x01DC;\n t['udieresismacron'] = 0x01D6;\n t['udotbelow'] = 0x1EE5;\n t['ugrave'] = 0x00F9;\n t['ugujarati'] = 0x0A89;\n t['ugurmukhi'] = 0x0A09;\n t['uhiragana'] = 0x3046;\n t['uhookabove'] = 0x1EE7;\n t['uhorn'] = 0x01B0;\n t['uhornacute'] = 0x1EE9;\n t['uhorndotbelow'] = 0x1EF1;\n t['uhorngrave'] = 0x1EEB;\n t['uhornhookabove'] = 0x1EED;\n t['uhorntilde'] = 0x1EEF;\n t['uhungarumlaut'] = 0x0171;\n t['uhungarumlautcyrillic'] = 0x04F3;\n t['uinvertedbreve'] = 0x0217;\n t['ukatakana'] = 0x30A6;\n t['ukatakanahalfwidth'] = 0xFF73;\n t['ukcyrillic'] = 0x0479;\n t['ukorean'] = 0x315C;\n t['umacron'] = 0x016B;\n t['umacroncyrillic'] = 0x04EF;\n t['umacrondieresis'] = 0x1E7B;\n t['umatragurmukhi'] = 0x0A41;\n t['umonospace'] = 0xFF55;\n t['underscore'] = 0x005F;\n t['underscoredbl'] = 0x2017;\n t['underscoremonospace'] = 0xFF3F;\n t['underscorevertical'] = 0xFE33;\n t['underscorewavy'] = 0xFE4F;\n t['union'] = 0x222A;\n t['universal'] = 0x2200;\n t['uogonek'] = 0x0173;\n t['uparen'] = 0x24B0;\n t['upblock'] = 0x2580;\n t['upperdothebrew'] = 0x05C4;\n t['upsilon'] = 0x03C5;\n t['upsilondieresis'] = 0x03CB;\n t['upsilondieresistonos'] = 0x03B0;\n t['upsilonlatin'] = 0x028A;\n t['upsilontonos'] = 0x03CD;\n t['uptackbelowcmb'] = 0x031D;\n t['uptackmod'] = 0x02D4;\n t['uragurmukhi'] = 0x0A73;\n t['uring'] = 0x016F;\n t['ushortcyrillic'] = 0x045E;\n t['usmallhiragana'] = 0x3045;\n t['usmallkatakana'] = 0x30A5;\n t['usmallkatakanahalfwidth'] = 0xFF69;\n t['ustraightcyrillic'] = 0x04AF;\n t['ustraightstrokecyrillic'] = 0x04B1;\n t['utilde'] = 0x0169;\n t['utildeacute'] = 0x1E79;\n t['utildebelow'] = 0x1E75;\n t['uubengali'] = 0x098A;\n t['uudeva'] = 0x090A;\n t['uugujarati'] = 0x0A8A;\n t['uugurmukhi'] = 0x0A0A;\n t['uumatragurmukhi'] = 0x0A42;\n t['uuvowelsignbengali'] = 0x09C2;\n t['uuvowelsigndeva'] = 0x0942;\n t['uuvowelsigngujarati'] = 0x0AC2;\n t['uvowelsignbengali'] = 0x09C1;\n t['uvowelsigndeva'] = 0x0941;\n t['uvowelsigngujarati'] = 0x0AC1;\n t['v'] = 0x0076;\n t['vadeva'] = 0x0935;\n t['vagujarati'] = 0x0AB5;\n t['vagurmukhi'] = 0x0A35;\n t['vakatakana'] = 0x30F7;\n t['vav'] = 0x05D5;\n t['vavdagesh'] = 0xFB35;\n t['vavdagesh65'] = 0xFB35;\n t['vavdageshhebrew'] = 0xFB35;\n t['vavhebrew'] = 0x05D5;\n t['vavholam'] = 0xFB4B;\n t['vavholamhebrew'] = 0xFB4B;\n t['vavvavhebrew'] = 0x05F0;\n t['vavyodhebrew'] = 0x05F1;\n t['vcircle'] = 0x24E5;\n t['vdotbelow'] = 0x1E7F;\n t['vecyrillic'] = 0x0432;\n t['veharabic'] = 0x06A4;\n t['vehfinalarabic'] = 0xFB6B;\n t['vehinitialarabic'] = 0xFB6C;\n t['vehmedialarabic'] = 0xFB6D;\n t['vekatakana'] = 0x30F9;\n t['venus'] = 0x2640;\n t['verticalbar'] = 0x007C;\n t['verticallineabovecmb'] = 0x030D;\n t['verticallinebelowcmb'] = 0x0329;\n t['verticallinelowmod'] = 0x02CC;\n t['verticallinemod'] = 0x02C8;\n t['vewarmenian'] = 0x057E;\n t['vhook'] = 0x028B;\n t['vikatakana'] = 0x30F8;\n t['viramabengali'] = 0x09CD;\n t['viramadeva'] = 0x094D;\n t['viramagujarati'] = 0x0ACD;\n t['visargabengali'] = 0x0983;\n t['visargadeva'] = 0x0903;\n t['visargagujarati'] = 0x0A83;\n t['vmonospace'] = 0xFF56;\n t['voarmenian'] = 0x0578;\n t['voicediterationhiragana'] = 0x309E;\n t['voicediterationkatakana'] = 0x30FE;\n t['voicedmarkkana'] = 0x309B;\n t['voicedmarkkanahalfwidth'] = 0xFF9E;\n t['vokatakana'] = 0x30FA;\n t['vparen'] = 0x24B1;\n t['vtilde'] = 0x1E7D;\n t['vturned'] = 0x028C;\n t['vuhiragana'] = 0x3094;\n t['vukatakana'] = 0x30F4;\n t['w'] = 0x0077;\n t['wacute'] = 0x1E83;\n t['waekorean'] = 0x3159;\n t['wahiragana'] = 0x308F;\n t['wakatakana'] = 0x30EF;\n t['wakatakanahalfwidth'] = 0xFF9C;\n t['wakorean'] = 0x3158;\n t['wasmallhiragana'] = 0x308E;\n t['wasmallkatakana'] = 0x30EE;\n t['wattosquare'] = 0x3357;\n t['wavedash'] = 0x301C;\n t['wavyunderscorevertical'] = 0xFE34;\n t['wawarabic'] = 0x0648;\n t['wawfinalarabic'] = 0xFEEE;\n t['wawhamzaabovearabic'] = 0x0624;\n t['wawhamzaabovefinalarabic'] = 0xFE86;\n t['wbsquare'] = 0x33DD;\n t['wcircle'] = 0x24E6;\n t['wcircumflex'] = 0x0175;\n t['wdieresis'] = 0x1E85;\n t['wdotaccent'] = 0x1E87;\n t['wdotbelow'] = 0x1E89;\n t['wehiragana'] = 0x3091;\n t['weierstrass'] = 0x2118;\n t['wekatakana'] = 0x30F1;\n t['wekorean'] = 0x315E;\n t['weokorean'] = 0x315D;\n t['wgrave'] = 0x1E81;\n t['whitebullet'] = 0x25E6;\n t['whitecircle'] = 0x25CB;\n t['whitecircleinverse'] = 0x25D9;\n t['whitecornerbracketleft'] = 0x300E;\n t['whitecornerbracketleftvertical'] = 0xFE43;\n t['whitecornerbracketright'] = 0x300F;\n t['whitecornerbracketrightvertical'] = 0xFE44;\n t['whitediamond'] = 0x25C7;\n t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\n t['whitedownpointingsmalltriangle'] = 0x25BF;\n t['whitedownpointingtriangle'] = 0x25BD;\n t['whiteleftpointingsmalltriangle'] = 0x25C3;\n t['whiteleftpointingtriangle'] = 0x25C1;\n t['whitelenticularbracketleft'] = 0x3016;\n t['whitelenticularbracketright'] = 0x3017;\n t['whiterightpointingsmalltriangle'] = 0x25B9;\n t['whiterightpointingtriangle'] = 0x25B7;\n t['whitesmallsquare'] = 0x25AB;\n t['whitesmilingface'] = 0x263A;\n t['whitesquare'] = 0x25A1;\n t['whitestar'] = 0x2606;\n t['whitetelephone'] = 0x260F;\n t['whitetortoiseshellbracketleft'] = 0x3018;\n t['whitetortoiseshellbracketright'] = 0x3019;\n t['whiteuppointingsmalltriangle'] = 0x25B5;\n t['whiteuppointingtriangle'] = 0x25B3;\n t['wihiragana'] = 0x3090;\n t['wikatakana'] = 0x30F0;\n t['wikorean'] = 0x315F;\n t['wmonospace'] = 0xFF57;\n t['wohiragana'] = 0x3092;\n t['wokatakana'] = 0x30F2;\n t['wokatakanahalfwidth'] = 0xFF66;\n t['won'] = 0x20A9;\n t['wonmonospace'] = 0xFFE6;\n t['wowaenthai'] = 0x0E27;\n t['wparen'] = 0x24B2;\n t['wring'] = 0x1E98;\n t['wsuperior'] = 0x02B7;\n t['wturned'] = 0x028D;\n t['wynn'] = 0x01BF;\n t['x'] = 0x0078;\n t['xabovecmb'] = 0x033D;\n t['xbopomofo'] = 0x3112;\n t['xcircle'] = 0x24E7;\n t['xdieresis'] = 0x1E8D;\n t['xdotaccent'] = 0x1E8B;\n t['xeharmenian'] = 0x056D;\n t['xi'] = 0x03BE;\n t['xmonospace'] = 0xFF58;\n t['xparen'] = 0x24B3;\n t['xsuperior'] = 0x02E3;\n t['y'] = 0x0079;\n t['yaadosquare'] = 0x334E;\n t['yabengali'] = 0x09AF;\n t['yacute'] = 0x00FD;\n t['yadeva'] = 0x092F;\n t['yaekorean'] = 0x3152;\n t['yagujarati'] = 0x0AAF;\n t['yagurmukhi'] = 0x0A2F;\n t['yahiragana'] = 0x3084;\n t['yakatakana'] = 0x30E4;\n t['yakatakanahalfwidth'] = 0xFF94;\n t['yakorean'] = 0x3151;\n t['yamakkanthai'] = 0x0E4E;\n t['yasmallhiragana'] = 0x3083;\n t['yasmallkatakana'] = 0x30E3;\n t['yasmallkatakanahalfwidth'] = 0xFF6C;\n t['yatcyrillic'] = 0x0463;\n t['ycircle'] = 0x24E8;\n t['ycircumflex'] = 0x0177;\n t['ydieresis'] = 0x00FF;\n t['ydotaccent'] = 0x1E8F;\n t['ydotbelow'] = 0x1EF5;\n t['yeharabic'] = 0x064A;\n t['yehbarreearabic'] = 0x06D2;\n t['yehbarreefinalarabic'] = 0xFBAF;\n t['yehfinalarabic'] = 0xFEF2;\n t['yehhamzaabovearabic'] = 0x0626;\n t['yehhamzaabovefinalarabic'] = 0xFE8A;\n t['yehhamzaaboveinitialarabic'] = 0xFE8B;\n t['yehhamzaabovemedialarabic'] = 0xFE8C;\n t['yehinitialarabic'] = 0xFEF3;\n t['yehmedialarabic'] = 0xFEF4;\n t['yehmeeminitialarabic'] = 0xFCDD;\n t['yehmeemisolatedarabic'] = 0xFC58;\n t['yehnoonfinalarabic'] = 0xFC94;\n t['yehthreedotsbelowarabic'] = 0x06D1;\n t['yekorean'] = 0x3156;\n t['yen'] = 0x00A5;\n t['yenmonospace'] = 0xFFE5;\n t['yeokorean'] = 0x3155;\n t['yeorinhieuhkorean'] = 0x3186;\n t['yerahbenyomohebrew'] = 0x05AA;\n t['yerahbenyomolefthebrew'] = 0x05AA;\n t['yericyrillic'] = 0x044B;\n t['yerudieresiscyrillic'] = 0x04F9;\n t['yesieungkorean'] = 0x3181;\n t['yesieungpansioskorean'] = 0x3183;\n t['yesieungsioskorean'] = 0x3182;\n t['yetivhebrew'] = 0x059A;\n t['ygrave'] = 0x1EF3;\n t['yhook'] = 0x01B4;\n t['yhookabove'] = 0x1EF7;\n t['yiarmenian'] = 0x0575;\n t['yicyrillic'] = 0x0457;\n t['yikorean'] = 0x3162;\n t['yinyang'] = 0x262F;\n t['yiwnarmenian'] = 0x0582;\n t['ymonospace'] = 0xFF59;\n t['yod'] = 0x05D9;\n t['yoddagesh'] = 0xFB39;\n t['yoddageshhebrew'] = 0xFB39;\n t['yodhebrew'] = 0x05D9;\n t['yodyodhebrew'] = 0x05F2;\n t['yodyodpatahhebrew'] = 0xFB1F;\n t['yohiragana'] = 0x3088;\n t['yoikorean'] = 0x3189;\n t['yokatakana'] = 0x30E8;\n t['yokatakanahalfwidth'] = 0xFF96;\n t['yokorean'] = 0x315B;\n t['yosmallhiragana'] = 0x3087;\n t['yosmallkatakana'] = 0x30E7;\n t['yosmallkatakanahalfwidth'] = 0xFF6E;\n t['yotgreek'] = 0x03F3;\n t['yoyaekorean'] = 0x3188;\n t['yoyakorean'] = 0x3187;\n t['yoyakthai'] = 0x0E22;\n t['yoyingthai'] = 0x0E0D;\n t['yparen'] = 0x24B4;\n t['ypogegrammeni'] = 0x037A;\n t['ypogegrammenigreekcmb'] = 0x0345;\n t['yr'] = 0x01A6;\n t['yring'] = 0x1E99;\n t['ysuperior'] = 0x02B8;\n t['ytilde'] = 0x1EF9;\n t['yturned'] = 0x028E;\n t['yuhiragana'] = 0x3086;\n t['yuikorean'] = 0x318C;\n t['yukatakana'] = 0x30E6;\n t['yukatakanahalfwidth'] = 0xFF95;\n t['yukorean'] = 0x3160;\n t['yusbigcyrillic'] = 0x046B;\n t['yusbigiotifiedcyrillic'] = 0x046D;\n t['yuslittlecyrillic'] = 0x0467;\n t['yuslittleiotifiedcyrillic'] = 0x0469;\n t['yusmallhiragana'] = 0x3085;\n t['yusmallkatakana'] = 0x30E5;\n t['yusmallkatakanahalfwidth'] = 0xFF6D;\n t['yuyekorean'] = 0x318B;\n t['yuyeokorean'] = 0x318A;\n t['yyabengali'] = 0x09DF;\n t['yyadeva'] = 0x095F;\n t['z'] = 0x007A;\n t['zaarmenian'] = 0x0566;\n t['zacute'] = 0x017A;\n t['zadeva'] = 0x095B;\n t['zagurmukhi'] = 0x0A5B;\n t['zaharabic'] = 0x0638;\n t['zahfinalarabic'] = 0xFEC6;\n t['zahinitialarabic'] = 0xFEC7;\n t['zahiragana'] = 0x3056;\n t['zahmedialarabic'] = 0xFEC8;\n t['zainarabic'] = 0x0632;\n t['zainfinalarabic'] = 0xFEB0;\n t['zakatakana'] = 0x30B6;\n t['zaqefgadolhebrew'] = 0x0595;\n t['zaqefqatanhebrew'] = 0x0594;\n t['zarqahebrew'] = 0x0598;\n t['zayin'] = 0x05D6;\n t['zayindagesh'] = 0xFB36;\n t['zayindageshhebrew'] = 0xFB36;\n t['zayinhebrew'] = 0x05D6;\n t['zbopomofo'] = 0x3117;\n t['zcaron'] = 0x017E;\n t['zcircle'] = 0x24E9;\n t['zcircumflex'] = 0x1E91;\n t['zcurl'] = 0x0291;\n t['zdot'] = 0x017C;\n t['zdotaccent'] = 0x017C;\n t['zdotbelow'] = 0x1E93;\n t['zecyrillic'] = 0x0437;\n t['zedescendercyrillic'] = 0x0499;\n t['zedieresiscyrillic'] = 0x04DF;\n t['zehiragana'] = 0x305C;\n t['zekatakana'] = 0x30BC;\n t['zero'] = 0x0030;\n t['zeroarabic'] = 0x0660;\n t['zerobengali'] = 0x09E6;\n t['zerodeva'] = 0x0966;\n t['zerogujarati'] = 0x0AE6;\n t['zerogurmukhi'] = 0x0A66;\n t['zerohackarabic'] = 0x0660;\n t['zeroinferior'] = 0x2080;\n t['zeromonospace'] = 0xFF10;\n t['zerooldstyle'] = 0xF730;\n t['zeropersian'] = 0x06F0;\n t['zerosuperior'] = 0x2070;\n t['zerothai'] = 0x0E50;\n t['zerowidthjoiner'] = 0xFEFF;\n t['zerowidthnonjoiner'] = 0x200C;\n t['zerowidthspace'] = 0x200B;\n t['zeta'] = 0x03B6;\n t['zhbopomofo'] = 0x3113;\n t['zhearmenian'] = 0x056A;\n t['zhebrevecyrillic'] = 0x04C2;\n t['zhecyrillic'] = 0x0436;\n t['zhedescendercyrillic'] = 0x0497;\n t['zhedieresiscyrillic'] = 0x04DD;\n t['zihiragana'] = 0x3058;\n t['zikatakana'] = 0x30B8;\n t['zinorhebrew'] = 0x05AE;\n t['zlinebelow'] = 0x1E95;\n t['zmonospace'] = 0xFF5A;\n t['zohiragana'] = 0x305E;\n t['zokatakana'] = 0x30BE;\n t['zparen'] = 0x24B5;\n t['zretroflexhook'] = 0x0290;\n t['zstroke'] = 0x01B6;\n t['zuhiragana'] = 0x305A;\n t['zukatakana'] = 0x30BA;\n t['.notdef'] = 0x0000;\n t['angbracketleftbig'] = 0x2329;\n t['angbracketleftBig'] = 0x2329;\n t['angbracketleftbigg'] = 0x2329;\n t['angbracketleftBigg'] = 0x2329;\n t['angbracketrightBig'] = 0x232A;\n t['angbracketrightbig'] = 0x232A;\n t['angbracketrightBigg'] = 0x232A;\n t['angbracketrightbigg'] = 0x232A;\n t['arrowhookleft'] = 0x21AA;\n t['arrowhookright'] = 0x21A9;\n t['arrowlefttophalf'] = 0x21BC;\n t['arrowleftbothalf'] = 0x21BD;\n t['arrownortheast'] = 0x2197;\n t['arrownorthwest'] = 0x2196;\n t['arrowrighttophalf'] = 0x21C0;\n t['arrowrightbothalf'] = 0x21C1;\n t['arrowsoutheast'] = 0x2198;\n t['arrowsouthwest'] = 0x2199;\n t['backslashbig'] = 0x2216;\n t['backslashBig'] = 0x2216;\n t['backslashBigg'] = 0x2216;\n t['backslashbigg'] = 0x2216;\n t['bardbl'] = 0x2016;\n t['bracehtipdownleft'] = 0xFE37;\n t['bracehtipdownright'] = 0xFE37;\n t['bracehtipupleft'] = 0xFE38;\n t['bracehtipupright'] = 0xFE38;\n t['braceleftBig'] = 0x007B;\n t['braceleftbig'] = 0x007B;\n t['braceleftbigg'] = 0x007B;\n t['braceleftBigg'] = 0x007B;\n t['bracerightBig'] = 0x007D;\n t['bracerightbig'] = 0x007D;\n t['bracerightbigg'] = 0x007D;\n t['bracerightBigg'] = 0x007D;\n t['bracketleftbig'] = 0x005B;\n t['bracketleftBig'] = 0x005B;\n t['bracketleftbigg'] = 0x005B;\n t['bracketleftBigg'] = 0x005B;\n t['bracketrightBig'] = 0x005D;\n t['bracketrightbig'] = 0x005D;\n t['bracketrightbigg'] = 0x005D;\n t['bracketrightBigg'] = 0x005D;\n t['ceilingleftbig'] = 0x2308;\n t['ceilingleftBig'] = 0x2308;\n t['ceilingleftBigg'] = 0x2308;\n t['ceilingleftbigg'] = 0x2308;\n t['ceilingrightbig'] = 0x2309;\n t['ceilingrightBig'] = 0x2309;\n t['ceilingrightbigg'] = 0x2309;\n t['ceilingrightBigg'] = 0x2309;\n t['circledotdisplay'] = 0x2299;\n t['circledottext'] = 0x2299;\n t['circlemultiplydisplay'] = 0x2297;\n t['circlemultiplytext'] = 0x2297;\n t['circleplusdisplay'] = 0x2295;\n t['circleplustext'] = 0x2295;\n t['contintegraldisplay'] = 0x222E;\n t['contintegraltext'] = 0x222E;\n t['coproductdisplay'] = 0x2210;\n t['coproducttext'] = 0x2210;\n t['floorleftBig'] = 0x230A;\n t['floorleftbig'] = 0x230A;\n t['floorleftbigg'] = 0x230A;\n t['floorleftBigg'] = 0x230A;\n t['floorrightbig'] = 0x230B;\n t['floorrightBig'] = 0x230B;\n t['floorrightBigg'] = 0x230B;\n t['floorrightbigg'] = 0x230B;\n t['hatwide'] = 0x0302;\n t['hatwider'] = 0x0302;\n t['hatwidest'] = 0x0302;\n t['intercal'] = 0x1D40;\n t['integraldisplay'] = 0x222B;\n t['integraltext'] = 0x222B;\n t['intersectiondisplay'] = 0x22C2;\n t['intersectiontext'] = 0x22C2;\n t['logicalanddisplay'] = 0x2227;\n t['logicalandtext'] = 0x2227;\n t['logicalordisplay'] = 0x2228;\n t['logicalortext'] = 0x2228;\n t['parenleftBig'] = 0x0028;\n t['parenleftbig'] = 0x0028;\n t['parenleftBigg'] = 0x0028;\n t['parenleftbigg'] = 0x0028;\n t['parenrightBig'] = 0x0029;\n t['parenrightbig'] = 0x0029;\n t['parenrightBigg'] = 0x0029;\n t['parenrightbigg'] = 0x0029;\n t['prime'] = 0x2032;\n t['productdisplay'] = 0x220F;\n t['producttext'] = 0x220F;\n t['radicalbig'] = 0x221A;\n t['radicalBig'] = 0x221A;\n t['radicalBigg'] = 0x221A;\n t['radicalbigg'] = 0x221A;\n t['radicalbt'] = 0x221A;\n t['radicaltp'] = 0x221A;\n t['radicalvertex'] = 0x221A;\n t['slashbig'] = 0x002F;\n t['slashBig'] = 0x002F;\n t['slashBigg'] = 0x002F;\n t['slashbigg'] = 0x002F;\n t['summationdisplay'] = 0x2211;\n t['summationtext'] = 0x2211;\n t['tildewide'] = 0x02DC;\n t['tildewider'] = 0x02DC;\n t['tildewidest'] = 0x02DC;\n t['uniondisplay'] = 0x22C3;\n t['unionmultidisplay'] = 0x228E;\n t['unionmultitext'] = 0x228E;\n t['unionsqdisplay'] = 0x2294;\n t['unionsqtext'] = 0x2294;\n t['uniontext'] = 0x22C3;\n t['vextenddouble'] = 0x2225;\n t['vextendsingle'] = 0x2223;\n});\nvar getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\n t['space'] = 0x0020;\n t['a1'] = 0x2701;\n t['a2'] = 0x2702;\n t['a202'] = 0x2703;\n t['a3'] = 0x2704;\n t['a4'] = 0x260E;\n t['a5'] = 0x2706;\n t['a119'] = 0x2707;\n t['a118'] = 0x2708;\n t['a117'] = 0x2709;\n t['a11'] = 0x261B;\n t['a12'] = 0x261E;\n t['a13'] = 0x270C;\n t['a14'] = 0x270D;\n t['a15'] = 0x270E;\n t['a16'] = 0x270F;\n t['a105'] = 0x2710;\n t['a17'] = 0x2711;\n t['a18'] = 0x2712;\n t['a19'] = 0x2713;\n t['a20'] = 0x2714;\n t['a21'] = 0x2715;\n t['a22'] = 0x2716;\n t['a23'] = 0x2717;\n t['a24'] = 0x2718;\n t['a25'] = 0x2719;\n t['a26'] = 0x271A;\n t['a27'] = 0x271B;\n t['a28'] = 0x271C;\n t['a6'] = 0x271D;\n t['a7'] = 0x271E;\n t['a8'] = 0x271F;\n t['a9'] = 0x2720;\n t['a10'] = 0x2721;\n t['a29'] = 0x2722;\n t['a30'] = 0x2723;\n t['a31'] = 0x2724;\n t['a32'] = 0x2725;\n t['a33'] = 0x2726;\n t['a34'] = 0x2727;\n t['a35'] = 0x2605;\n t['a36'] = 0x2729;\n t['a37'] = 0x272A;\n t['a38'] = 0x272B;\n t['a39'] = 0x272C;\n t['a40'] = 0x272D;\n t['a41'] = 0x272E;\n t['a42'] = 0x272F;\n t['a43'] = 0x2730;\n t['a44'] = 0x2731;\n t['a45'] = 0x2732;\n t['a46'] = 0x2733;\n t['a47'] = 0x2734;\n t['a48'] = 0x2735;\n t['a49'] = 0x2736;\n t['a50'] = 0x2737;\n t['a51'] = 0x2738;\n t['a52'] = 0x2739;\n t['a53'] = 0x273A;\n t['a54'] = 0x273B;\n t['a55'] = 0x273C;\n t['a56'] = 0x273D;\n t['a57'] = 0x273E;\n t['a58'] = 0x273F;\n t['a59'] = 0x2740;\n t['a60'] = 0x2741;\n t['a61'] = 0x2742;\n t['a62'] = 0x2743;\n t['a63'] = 0x2744;\n t['a64'] = 0x2745;\n t['a65'] = 0x2746;\n t['a66'] = 0x2747;\n t['a67'] = 0x2748;\n t['a68'] = 0x2749;\n t['a69'] = 0x274A;\n t['a70'] = 0x274B;\n t['a71'] = 0x25CF;\n t['a72'] = 0x274D;\n t['a73'] = 0x25A0;\n t['a74'] = 0x274F;\n t['a203'] = 0x2750;\n t['a75'] = 0x2751;\n t['a204'] = 0x2752;\n t['a76'] = 0x25B2;\n t['a77'] = 0x25BC;\n t['a78'] = 0x25C6;\n t['a79'] = 0x2756;\n t['a81'] = 0x25D7;\n t['a82'] = 0x2758;\n t['a83'] = 0x2759;\n t['a84'] = 0x275A;\n t['a97'] = 0x275B;\n t['a98'] = 0x275C;\n t['a99'] = 0x275D;\n t['a100'] = 0x275E;\n t['a101'] = 0x2761;\n t['a102'] = 0x2762;\n t['a103'] = 0x2763;\n t['a104'] = 0x2764;\n t['a106'] = 0x2765;\n t['a107'] = 0x2766;\n t['a108'] = 0x2767;\n t['a112'] = 0x2663;\n t['a111'] = 0x2666;\n t['a110'] = 0x2665;\n t['a109'] = 0x2660;\n t['a120'] = 0x2460;\n t['a121'] = 0x2461;\n t['a122'] = 0x2462;\n t['a123'] = 0x2463;\n t['a124'] = 0x2464;\n t['a125'] = 0x2465;\n t['a126'] = 0x2466;\n t['a127'] = 0x2467;\n t['a128'] = 0x2468;\n t['a129'] = 0x2469;\n t['a130'] = 0x2776;\n t['a131'] = 0x2777;\n t['a132'] = 0x2778;\n t['a133'] = 0x2779;\n t['a134'] = 0x277A;\n t['a135'] = 0x277B;\n t['a136'] = 0x277C;\n t['a137'] = 0x277D;\n t['a138'] = 0x277E;\n t['a139'] = 0x277F;\n t['a140'] = 0x2780;\n t['a141'] = 0x2781;\n t['a142'] = 0x2782;\n t['a143'] = 0x2783;\n t['a144'] = 0x2784;\n t['a145'] = 0x2785;\n t['a146'] = 0x2786;\n t['a147'] = 0x2787;\n t['a148'] = 0x2788;\n t['a149'] = 0x2789;\n t['a150'] = 0x278A;\n t['a151'] = 0x278B;\n t['a152'] = 0x278C;\n t['a153'] = 0x278D;\n t['a154'] = 0x278E;\n t['a155'] = 0x278F;\n t['a156'] = 0x2790;\n t['a157'] = 0x2791;\n t['a158'] = 0x2792;\n t['a159'] = 0x2793;\n t['a160'] = 0x2794;\n t['a161'] = 0x2192;\n t['a163'] = 0x2194;\n t['a164'] = 0x2195;\n t['a196'] = 0x2798;\n t['a165'] = 0x2799;\n t['a192'] = 0x279A;\n t['a166'] = 0x279B;\n t['a167'] = 0x279C;\n t['a168'] = 0x279D;\n t['a169'] = 0x279E;\n t['a170'] = 0x279F;\n t['a171'] = 0x27A0;\n t['a172'] = 0x27A1;\n t['a173'] = 0x27A2;\n t['a162'] = 0x27A3;\n t['a174'] = 0x27A4;\n t['a175'] = 0x27A5;\n t['a176'] = 0x27A6;\n t['a177'] = 0x27A7;\n t['a178'] = 0x27A8;\n t['a179'] = 0x27A9;\n t['a193'] = 0x27AA;\n t['a180'] = 0x27AB;\n t['a199'] = 0x27AC;\n t['a181'] = 0x27AD;\n t['a200'] = 0x27AE;\n t['a182'] = 0x27AF;\n t['a201'] = 0x27B1;\n t['a183'] = 0x27B2;\n t['a184'] = 0x27B3;\n t['a197'] = 0x27B4;\n t['a185'] = 0x27B5;\n t['a194'] = 0x27B6;\n t['a198'] = 0x27B7;\n t['a186'] = 0x27B8;\n t['a195'] = 0x27B9;\n t['a187'] = 0x27BA;\n t['a188'] = 0x27BB;\n t['a189'] = 0x27BC;\n t['a190'] = 0x27BD;\n t['a191'] = 0x27BE;\n t['a89'] = 0x2768;\n t['a90'] = 0x2769;\n t['a93'] = 0x276A;\n t['a94'] = 0x276B;\n t['a91'] = 0x276C;\n t['a92'] = 0x276D;\n t['a205'] = 0x276E;\n t['a85'] = 0x276F;\n t['a206'] = 0x2770;\n t['a86'] = 0x2771;\n t['a87'] = 0x2772;\n t['a88'] = 0x2773;\n t['a95'] = 0x2774;\n t['a96'] = 0x2775;\n t['.notdef'] = 0x0000;\n});\nexports.getGlyphsUnicode = getGlyphsUnicode;\nexports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar corePdfManager = __w_pdfjs_require__(33);\nvar UNSUPPORTED_FEATURES = sharedUtil.UNSUPPORTED_FEATURES;\nvar InvalidPDFException = sharedUtil.InvalidPDFException;\nvar MessageHandler = sharedUtil.MessageHandler;\nvar MissingPDFException = sharedUtil.MissingPDFException;\nvar UnexpectedResponseException = sharedUtil.UnexpectedResponseException;\nvar PasswordException = sharedUtil.PasswordException;\nvar UnknownErrorException = sharedUtil.UnknownErrorException;\nvar XRefParseException = sharedUtil.XRefParseException;\nvar arrayByteLength = sharedUtil.arrayByteLength;\nvar arraysToBytes = sharedUtil.arraysToBytes;\nvar assert = sharedUtil.assert;\nvar createPromiseCapability = sharedUtil.createPromiseCapability;\nvar info = sharedUtil.info;\nvar warn = sharedUtil.warn;\nvar setVerbosityLevel = sharedUtil.setVerbosityLevel;\nvar isNodeJS = sharedUtil.isNodeJS;\nvar Ref = corePrimitives.Ref;\nvar LocalPdfManager = corePdfManager.LocalPdfManager;\nvar NetworkPdfManager = corePdfManager.NetworkPdfManager;\nvar WorkerTask = function WorkerTaskClosure() {\n function WorkerTask(name) {\n  this.name = name;\n  this.terminated = false;\n  this._capability = createPromiseCapability();\n }\n WorkerTask.prototype = {\n  get finished() {\n   return this._capability.promise;\n  },\n  finish: function () {\n   this._capability.resolve();\n  },\n  terminate: function () {\n   this.terminated = true;\n  },\n  ensureNotTerminated: function () {\n   if (this.terminated) {\n    throw new Error('Worker task was terminated');\n   }\n  }\n };\n return WorkerTask;\n}();\nvar PDFWorkerStream = function PDFWorkerStreamClosure() {\n function PDFWorkerStream(params, msgHandler) {\n  this._queuedChunks = [];\n  var initialData = params.initialData;\n  if (initialData && initialData.length > 0) {\n   this._queuedChunks.push(initialData);\n  }\n  this._msgHandler = msgHandler;\n  this._isRangeSupported = !params.disableRange;\n  this._isStreamingSupported = !params.disableStream;\n  this._contentLength = params.length;\n  this._fullRequestReader = null;\n  this._rangeReaders = [];\n  msgHandler.on('OnDataRange', this._onReceiveData.bind(this));\n  msgHandler.on('OnDataProgress', this._onProgress.bind(this));\n }\n PDFWorkerStream.prototype = {\n  _onReceiveData: function PDFWorkerStream_onReceiveData(args) {\n   if (args.begin === undefined) {\n    if (this._fullRequestReader) {\n     this._fullRequestReader._enqueue(args.chunk);\n    } else {\n     this._queuedChunks.push(args.chunk);\n    }\n   } else {\n    var found = this._rangeReaders.some(function (rangeReader) {\n     if (rangeReader._begin !== args.begin) {\n      return false;\n     }\n     rangeReader._enqueue(args.chunk);\n     return true;\n    });\n    assert(found);\n   }\n  },\n  _onProgress: function PDFWorkerStream_onProgress(evt) {\n   if (this._rangeReaders.length > 0) {\n    var firstReader = this._rangeReaders[0];\n    if (firstReader.onProgress) {\n     firstReader.onProgress({ loaded: evt.loaded });\n    }\n   }\n  },\n  _removeRangeReader: function PDFWorkerStream_removeRangeReader(reader) {\n   var i = this._rangeReaders.indexOf(reader);\n   if (i >= 0) {\n    this._rangeReaders.splice(i, 1);\n   }\n  },\n  getFullReader: function PDFWorkerStream_getFullReader() {\n   assert(!this._fullRequestReader);\n   var queuedChunks = this._queuedChunks;\n   this._queuedChunks = null;\n   return new PDFWorkerStreamReader(this, queuedChunks);\n  },\n  getRangeReader: function PDFWorkerStream_getRangeReader(begin, end) {\n   var reader = new PDFWorkerStreamRangeReader(this, begin, end);\n   this._msgHandler.send('RequestDataRange', {\n    begin: begin,\n    end: end\n   });\n   this._rangeReaders.push(reader);\n   return reader;\n  },\n  cancelAllRequests: function PDFWorkerStream_cancelAllRequests(reason) {\n   if (this._fullRequestReader) {\n    this._fullRequestReader.cancel(reason);\n   }\n   var readers = this._rangeReaders.slice(0);\n   readers.forEach(function (rangeReader) {\n    rangeReader.cancel(reason);\n   });\n  }\n };\n function PDFWorkerStreamReader(stream, queuedChunks) {\n  this._stream = stream;\n  this._done = false;\n  this._queuedChunks = queuedChunks || [];\n  this._requests = [];\n  this._headersReady = Promise.resolve();\n  stream._fullRequestReader = this;\n  this.onProgress = null;\n }\n PDFWorkerStreamReader.prototype = {\n  _enqueue: function PDFWorkerStreamReader_enqueue(chunk) {\n   if (this._done) {\n    return;\n   }\n   if (this._requests.length > 0) {\n    var requestCapability = this._requests.shift();\n    requestCapability.resolve({\n     value: chunk,\n     done: false\n    });\n    return;\n   }\n   this._queuedChunks.push(chunk);\n  },\n  get headersReady() {\n   return this._headersReady;\n  },\n  get isRangeSupported() {\n   return this._stream._isRangeSupported;\n  },\n  get isStreamingSupported() {\n   return this._stream._isStreamingSupported;\n  },\n  get contentLength() {\n   return this._stream._contentLength;\n  },\n  read: function PDFWorkerStreamReader_read() {\n   if (this._queuedChunks.length > 0) {\n    var chunk = this._queuedChunks.shift();\n    return Promise.resolve({\n     value: chunk,\n     done: false\n    });\n   }\n   if (this._done) {\n    return Promise.resolve({\n     value: undefined,\n     done: true\n    });\n   }\n   var requestCapability = createPromiseCapability();\n   this._requests.push(requestCapability);\n   return requestCapability.promise;\n  },\n  cancel: function PDFWorkerStreamReader_cancel(reason) {\n   this._done = true;\n   this._requests.forEach(function (requestCapability) {\n    requestCapability.resolve({\n     value: undefined,\n     done: true\n    });\n   });\n   this._requests = [];\n  }\n };\n function PDFWorkerStreamRangeReader(stream, begin, end) {\n  this._stream = stream;\n  this._begin = begin;\n  this._end = end;\n  this._queuedChunk = null;\n  this._requests = [];\n  this._done = false;\n  this.onProgress = null;\n }\n PDFWorkerStreamRangeReader.prototype = {\n  _enqueue: function PDFWorkerStreamRangeReader_enqueue(chunk) {\n   if (this._done) {\n    return;\n   }\n   if (this._requests.length === 0) {\n    this._queuedChunk = chunk;\n   } else {\n    var requestsCapability = this._requests.shift();\n    requestsCapability.resolve({\n     value: chunk,\n     done: false\n    });\n    this._requests.forEach(function (requestCapability) {\n     requestCapability.resolve({\n      value: undefined,\n      done: true\n     });\n    });\n    this._requests = [];\n   }\n   this._done = true;\n   this._stream._removeRangeReader(this);\n  },\n  get isStreamingSupported() {\n   return false;\n  },\n  read: function PDFWorkerStreamRangeReader_read() {\n   if (this._queuedChunk) {\n    return Promise.resolve({\n     value: this._queuedChunk,\n     done: false\n    });\n   }\n   if (this._done) {\n    return Promise.resolve({\n     value: undefined,\n     done: true\n    });\n   }\n   var requestCapability = createPromiseCapability();\n   this._requests.push(requestCapability);\n   return requestCapability.promise;\n  },\n  cancel: function PDFWorkerStreamRangeReader_cancel(reason) {\n   this._done = true;\n   this._requests.forEach(function (requestCapability) {\n    requestCapability.resolve({\n     value: undefined,\n     done: true\n    });\n   });\n   this._requests = [];\n   this._stream._removeRangeReader(this);\n  }\n };\n return PDFWorkerStream;\n}();\nvar PDFNetworkStream;\nfunction setPDFNetworkStreamClass(cls) {\n PDFNetworkStream = cls;\n}\nvar WorkerMessageHandler = {\n setup: function wphSetup(handler, port) {\n  var testMessageProcessed = false;\n  handler.on('test', function wphSetupTest(data) {\n   if (testMessageProcessed) {\n    return;\n   }\n   testMessageProcessed = true;\n   if (!(data instanceof Uint8Array)) {\n    handler.send('test', 'main', false);\n    return;\n   }\n   var supportTransfers = data[0] === 255;\n   handler.postMessageTransfers = supportTransfers;\n   var xhr = new XMLHttpRequest();\n   var responseExists = 'response' in xhr;\n   try {\n    xhr.responseType;\n   } catch (e) {\n    responseExists = false;\n   }\n   if (!responseExists) {\n    handler.send('test', false);\n    return;\n   }\n   handler.send('test', {\n    supportTypedArray: true,\n    supportTransfers: supportTransfers\n   });\n  });\n  handler.on('configure', function wphConfigure(data) {\n   setVerbosityLevel(data.verbosity);\n  });\n  handler.on('GetDocRequest', function wphSetupDoc(data) {\n   return WorkerMessageHandler.createDocumentHandler(data, port);\n  });\n },\n createDocumentHandler: function wphCreateDocumentHandler(docParams, port) {\n  var pdfManager;\n  var terminated = false;\n  var cancelXHRs = null;\n  var WorkerTasks = [];\n  var docId = docParams.docId;\n  var docBaseUrl = docParams.docBaseUrl;\n  var workerHandlerName = docParams.docId + '_worker';\n  var handler = new MessageHandler(workerHandlerName, docId, port);\n  handler.postMessageTransfers = docParams.postMessageTransfers;\n  function ensureNotTerminated() {\n   if (terminated) {\n    throw new Error('Worker was terminated');\n   }\n  }\n  function startWorkerTask(task) {\n   WorkerTasks.push(task);\n  }\n  function finishWorkerTask(task) {\n   task.finish();\n   var i = WorkerTasks.indexOf(task);\n   WorkerTasks.splice(i, 1);\n  }\n  function loadDocument(recoveryMode) {\n   var loadDocumentCapability = createPromiseCapability();\n   var parseSuccess = function parseSuccess() {\n    var numPagesPromise = pdfManager.ensureDoc('numPages');\n    var fingerprintPromise = pdfManager.ensureDoc('fingerprint');\n    var encryptedPromise = pdfManager.ensureXRef('encrypt');\n    Promise.all([\n     numPagesPromise,\n     fingerprintPromise,\n     encryptedPromise\n    ]).then(function onDocReady(results) {\n     var doc = {\n      numPages: results[0],\n      fingerprint: results[1],\n      encrypted: !!results[2]\n     };\n     loadDocumentCapability.resolve(doc);\n    }, parseFailure);\n   };\n   var parseFailure = function parseFailure(e) {\n    loadDocumentCapability.reject(e);\n   };\n   pdfManager.ensureDoc('checkHeader', []).then(function () {\n    pdfManager.ensureDoc('parseStartXRef', []).then(function () {\n     pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);\n    }, parseFailure);\n   }, parseFailure);\n   return loadDocumentCapability.promise;\n  }\n  function getPdfManager(data, evaluatorOptions) {\n   var pdfManagerCapability = createPromiseCapability();\n   var pdfManager;\n   var source = data.source;\n   if (source.data) {\n    try {\n     pdfManager = new LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\n     pdfManagerCapability.resolve(pdfManager);\n    } catch (ex) {\n     pdfManagerCapability.reject(ex);\n    }\n    return pdfManagerCapability.promise;\n   }\n   var pdfStream;\n   try {\n    if (source.chunkedViewerLoading) {\n     pdfStream = new PDFWorkerStream(source, handler);\n    } else {\n     assert(PDFNetworkStream, 'pdfjs/core/network module is not loaded');\n     pdfStream = new PDFNetworkStream(data);\n    }\n   } catch (ex) {\n    pdfManagerCapability.reject(ex);\n    return pdfManagerCapability.promise;\n   }\n   var fullRequest = pdfStream.getFullReader();\n   fullRequest.headersReady.then(function () {\n    if (!fullRequest.isStreamingSupported || !fullRequest.isRangeSupported) {\n     fullRequest.onProgress = function (evt) {\n      handler.send('DocProgress', {\n       loaded: evt.loaded,\n       total: evt.total\n      });\n     };\n    }\n    if (!fullRequest.isRangeSupported) {\n     return;\n    }\n    var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\n    pdfManager = new NetworkPdfManager(docId, pdfStream, {\n     msgHandler: handler,\n     url: source.url,\n     password: source.password,\n     length: fullRequest.contentLength,\n     disableAutoFetch: disableAutoFetch,\n     rangeChunkSize: source.rangeChunkSize\n    }, evaluatorOptions, docBaseUrl);\n    pdfManagerCapability.resolve(pdfManager);\n    cancelXHRs = null;\n   }).catch(function (reason) {\n    pdfManagerCapability.reject(reason);\n    cancelXHRs = null;\n   });\n   var cachedChunks = [], loaded = 0;\n   var flushChunks = function () {\n    var pdfFile = arraysToBytes(cachedChunks);\n    if (source.length && pdfFile.length !== source.length) {\n     warn('reported HTTP length is different from actual');\n    }\n    try {\n     pdfManager = new LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\n     pdfManagerCapability.resolve(pdfManager);\n    } catch (ex) {\n     pdfManagerCapability.reject(ex);\n    }\n    cachedChunks = [];\n   };\n   var readPromise = new Promise(function (resolve, reject) {\n    var readChunk = function (chunk) {\n     try {\n      ensureNotTerminated();\n      if (chunk.done) {\n       if (!pdfManager) {\n        flushChunks();\n       }\n       cancelXHRs = null;\n       return;\n      }\n      var data = chunk.value;\n      loaded += arrayByteLength(data);\n      if (!fullRequest.isStreamingSupported) {\n       handler.send('DocProgress', {\n        loaded: loaded,\n        total: Math.max(loaded, fullRequest.contentLength || 0)\n       });\n      }\n      if (pdfManager) {\n       pdfManager.sendProgressiveData(data);\n      } else {\n       cachedChunks.push(data);\n      }\n      fullRequest.read().then(readChunk, reject);\n     } catch (e) {\n      reject(e);\n     }\n    };\n    fullRequest.read().then(readChunk, reject);\n   });\n   readPromise.catch(function (e) {\n    pdfManagerCapability.reject(e);\n    cancelXHRs = null;\n   });\n   cancelXHRs = function () {\n    pdfStream.cancelAllRequests('abort');\n   };\n   return pdfManagerCapability.promise;\n  }\n  function setupDoc(data) {\n   function onSuccess(doc) {\n    ensureNotTerminated();\n    handler.send('GetDoc', { pdfInfo: doc });\n   }\n   function onFailure(e) {\n    if (e instanceof PasswordException) {\n     var task = new WorkerTask('PasswordException: response ' + e.code);\n     startWorkerTask(task);\n     handler.sendWithPromise('PasswordRequest', e).then(function (data) {\n      finishWorkerTask(task);\n      pdfManager.updatePassword(data.password);\n      pdfManagerReady();\n     }).catch(function (ex) {\n      finishWorkerTask(task);\n      handler.send('PasswordException', ex);\n     }.bind(null, e));\n    } else if (e instanceof InvalidPDFException) {\n     handler.send('InvalidPDF', e);\n    } else if (e instanceof MissingPDFException) {\n     handler.send('MissingPDF', e);\n    } else if (e instanceof UnexpectedResponseException) {\n     handler.send('UnexpectedResponse', e);\n    } else {\n     handler.send('UnknownError', new UnknownErrorException(e.message, e.toString()));\n    }\n   }\n   function pdfManagerReady() {\n    ensureNotTerminated();\n    loadDocument(false).then(onSuccess, function loadFailure(ex) {\n     ensureNotTerminated();\n     if (!(ex instanceof XRefParseException)) {\n      onFailure(ex);\n      return;\n     }\n     pdfManager.requestLoadedStream();\n     pdfManager.onLoadedStream().then(function () {\n      ensureNotTerminated();\n      loadDocument(true).then(onSuccess, onFailure);\n     });\n    }, onFailure);\n   }\n   ensureNotTerminated();\n   var evaluatorOptions = {\n    forceDataSchema: data.disableCreateObjectURL,\n    maxImageSize: data.maxImageSize === undefined ? -1 : data.maxImageSize,\n    disableFontFace: data.disableFontFace,\n    disableNativeImageDecoder: data.disableNativeImageDecoder\n   };\n   getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\n    if (terminated) {\n     newPdfManager.terminate();\n     throw new Error('Worker was terminated');\n    }\n    pdfManager = newPdfManager;\n    handler.send('PDFManagerReady', null);\n    pdfManager.onLoadedStream().then(function (stream) {\n     handler.send('DataLoaded', { length: stream.bytes.byteLength });\n    });\n   }).then(pdfManagerReady, onFailure);\n  }\n  handler.on('GetPage', function wphSetupGetPage(data) {\n   return pdfManager.getPage(data.pageIndex).then(function (page) {\n    var rotatePromise = pdfManager.ensure(page, 'rotate');\n    var refPromise = pdfManager.ensure(page, 'ref');\n    var userUnitPromise = pdfManager.ensure(page, 'userUnit');\n    var viewPromise = pdfManager.ensure(page, 'view');\n    return Promise.all([\n     rotatePromise,\n     refPromise,\n     userUnitPromise,\n     viewPromise\n    ]).then(function (results) {\n     return {\n      rotate: results[0],\n      ref: results[1],\n      userUnit: results[2],\n      view: results[3]\n     };\n    });\n   });\n  });\n  handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\n   var ref = new Ref(data.ref.num, data.ref.gen);\n   var catalog = pdfManager.pdfDocument.catalog;\n   return catalog.getPageIndex(ref);\n  });\n  handler.on('GetDestinations', function wphSetupGetDestinations(data) {\n   return pdfManager.ensureCatalog('destinations');\n  });\n  handler.on('GetDestination', function wphSetupGetDestination(data) {\n   return pdfManager.ensureCatalog('getDestination', [data.id]);\n  });\n  handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\n   return pdfManager.ensureCatalog('pageLabels');\n  });\n  handler.on('GetAttachments', function wphSetupGetAttachments(data) {\n   return pdfManager.ensureCatalog('attachments');\n  });\n  handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\n   return pdfManager.ensureCatalog('javaScript');\n  });\n  handler.on('GetOutline', function wphSetupGetOutline(data) {\n   return pdfManager.ensureCatalog('documentOutline');\n  });\n  handler.on('GetMetadata', function wphSetupGetMetadata(data) {\n   return Promise.all([\n    pdfManager.ensureDoc('documentInfo'),\n    pdfManager.ensureCatalog('metadata')\n   ]);\n  });\n  handler.on('GetData', function wphSetupGetData(data) {\n   pdfManager.requestLoadedStream();\n   return pdfManager.onLoadedStream().then(function (stream) {\n    return stream.bytes;\n   });\n  });\n  handler.on('GetStats', function wphSetupGetStats(data) {\n   return pdfManager.pdfDocument.xref.stats;\n  });\n  handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\n   return pdfManager.getPage(data.pageIndex).then(function (page) {\n    return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);\n   });\n  });\n  handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\n   var pageIndex = data.pageIndex;\n   pdfManager.getPage(pageIndex).then(function (page) {\n    var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\n    startWorkerTask(task);\n    var pageNum = pageIndex + 1;\n    var start = Date.now();\n    page.getOperatorList(handler, task, data.intent, data.renderInteractiveForms).then(function (operatorList) {\n     finishWorkerTask(task);\n     info('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\n    }, function (e) {\n     finishWorkerTask(task);\n     if (task.terminated) {\n      return;\n     }\n     handler.send('UnsupportedFeature', { featureId: UNSUPPORTED_FEATURES.unknown });\n     var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\n     var wrappedException;\n     if (typeof e === 'string') {\n      wrappedException = {\n       message: e,\n       stack: minimumStackMessage\n      };\n     } else if (typeof e === 'object') {\n      wrappedException = {\n       message: e.message || e.toString(),\n       stack: e.stack || minimumStackMessage\n      };\n     } else {\n      wrappedException = {\n       message: 'Unknown exception type: ' + typeof e,\n       stack: minimumStackMessage\n      };\n     }\n     handler.send('PageError', {\n      pageNum: pageNum,\n      error: wrappedException,\n      intent: data.intent\n     });\n    });\n   });\n  }, this);\n  handler.on('GetTextContent', function wphExtractText(data) {\n   var pageIndex = data.pageIndex;\n   var normalizeWhitespace = data.normalizeWhitespace;\n   var combineTextItems = data.combineTextItems;\n   return pdfManager.getPage(pageIndex).then(function (page) {\n    var task = new WorkerTask('GetTextContent: page ' + pageIndex);\n    startWorkerTask(task);\n    var pageNum = pageIndex + 1;\n    var start = Date.now();\n    return page.extractTextContent(task, normalizeWhitespace, combineTextItems).then(function (textContent) {\n     finishWorkerTask(task);\n     info('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\n     return textContent;\n    }, function (reason) {\n     finishWorkerTask(task);\n     if (task.terminated) {\n      return;\n     }\n     throw reason;\n    });\n   });\n  });\n  handler.on('Cleanup', function wphCleanup(data) {\n   return pdfManager.cleanup();\n  });\n  handler.on('Terminate', function wphTerminate(data) {\n   terminated = true;\n   if (pdfManager) {\n    pdfManager.terminate();\n    pdfManager = null;\n   }\n   if (cancelXHRs) {\n    cancelXHRs();\n   }\n   var waitOn = [];\n   WorkerTasks.forEach(function (task) {\n    waitOn.push(task.finished);\n    task.terminate();\n   });\n   return Promise.all(waitOn).then(function () {\n    handler.destroy();\n    handler = null;\n   });\n  });\n  handler.on('Ready', function wphReady(data) {\n   setupDoc(docParams);\n   docParams = null;\n  });\n  return workerHandlerName;\n }\n};\nfunction initializeWorker() {\n var handler = new MessageHandler('worker', 'main', self);\n WorkerMessageHandler.setup(handler, self);\n handler.send('ready', null);\n}\nif (typeof window === 'undefined' && !isNodeJS()) {\n initializeWorker();\n}\nexports.setPDFNetworkStreamClass = setPDFNetworkStreamClass;\nexports.WorkerTask = WorkerTask;\nexports.WorkerMessageHandler = WorkerMessageHandler;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\nvar g;\ng = function () {\n return this;\n}();\ntry {\n g = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n if (typeof window === \"object\")\n  g = window;\n}\nmodule.exports = g;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar ArithmeticDecoder = function ArithmeticDecoderClosure() {\n var QeTable = [\n  {\n   qe: 0x5601,\n   nmps: 1,\n   nlps: 1,\n   switchFlag: 1\n  },\n  {\n   qe: 0x3401,\n   nmps: 2,\n   nlps: 6,\n   switchFlag: 0\n  },\n  {\n   qe: 0x1801,\n   nmps: 3,\n   nlps: 9,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0AC1,\n   nmps: 4,\n   nlps: 12,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0521,\n   nmps: 5,\n   nlps: 29,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0221,\n   nmps: 38,\n   nlps: 33,\n   switchFlag: 0\n  },\n  {\n   qe: 0x5601,\n   nmps: 7,\n   nlps: 6,\n   switchFlag: 1\n  },\n  {\n   qe: 0x5401,\n   nmps: 8,\n   nlps: 14,\n   switchFlag: 0\n  },\n  {\n   qe: 0x4801,\n   nmps: 9,\n   nlps: 14,\n   switchFlag: 0\n  },\n  {\n   qe: 0x3801,\n   nmps: 10,\n   nlps: 14,\n   switchFlag: 0\n  },\n  {\n   qe: 0x3001,\n   nmps: 11,\n   nlps: 17,\n   switchFlag: 0\n  },\n  {\n   qe: 0x2401,\n   nmps: 12,\n   nlps: 18,\n   switchFlag: 0\n  },\n  {\n   qe: 0x1C01,\n   nmps: 13,\n   nlps: 20,\n   switchFlag: 0\n  },\n  {\n   qe: 0x1601,\n   nmps: 29,\n   nlps: 21,\n   switchFlag: 0\n  },\n  {\n   qe: 0x5601,\n   nmps: 15,\n   nlps: 14,\n   switchFlag: 1\n  },\n  {\n   qe: 0x5401,\n   nmps: 16,\n   nlps: 14,\n   switchFlag: 0\n  },\n  {\n   qe: 0x5101,\n   nmps: 17,\n   nlps: 15,\n   switchFlag: 0\n  },\n  {\n   qe: 0x4801,\n   nmps: 18,\n   nlps: 16,\n   switchFlag: 0\n  },\n  {\n   qe: 0x3801,\n   nmps: 19,\n   nlps: 17,\n   switchFlag: 0\n  },\n  {\n   qe: 0x3401,\n   nmps: 20,\n   nlps: 18,\n   switchFlag: 0\n  },\n  {\n   qe: 0x3001,\n   nmps: 21,\n   nlps: 19,\n   switchFlag: 0\n  },\n  {\n   qe: 0x2801,\n   nmps: 22,\n   nlps: 19,\n   switchFlag: 0\n  },\n  {\n   qe: 0x2401,\n   nmps: 23,\n   nlps: 20,\n   switchFlag: 0\n  },\n  {\n   qe: 0x2201,\n   nmps: 24,\n   nlps: 21,\n   switchFlag: 0\n  },\n  {\n   qe: 0x1C01,\n   nmps: 25,\n   nlps: 22,\n   switchFlag: 0\n  },\n  {\n   qe: 0x1801,\n   nmps: 26,\n   nlps: 23,\n   switchFlag: 0\n  },\n  {\n   qe: 0x1601,\n   nmps: 27,\n   nlps: 24,\n   switchFlag: 0\n  },\n  {\n   qe: 0x1401,\n   nmps: 28,\n   nlps: 25,\n   switchFlag: 0\n  },\n  {\n   qe: 0x1201,\n   nmps: 29,\n   nlps: 26,\n   switchFlag: 0\n  },\n  {\n   qe: 0x1101,\n   nmps: 30,\n   nlps: 27,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0AC1,\n   nmps: 31,\n   nlps: 28,\n   switchFlag: 0\n  },\n  {\n   qe: 0x09C1,\n   nmps: 32,\n   nlps: 29,\n   switchFlag: 0\n  },\n  {\n   qe: 0x08A1,\n   nmps: 33,\n   nlps: 30,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0521,\n   nmps: 34,\n   nlps: 31,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0441,\n   nmps: 35,\n   nlps: 32,\n   switchFlag: 0\n  },\n  {\n   qe: 0x02A1,\n   nmps: 36,\n   nlps: 33,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0221,\n   nmps: 37,\n   nlps: 34,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0141,\n   nmps: 38,\n   nlps: 35,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0111,\n   nmps: 39,\n   nlps: 36,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0085,\n   nmps: 40,\n   nlps: 37,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0049,\n   nmps: 41,\n   nlps: 38,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0025,\n   nmps: 42,\n   nlps: 39,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0015,\n   nmps: 43,\n   nlps: 40,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0009,\n   nmps: 44,\n   nlps: 41,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0005,\n   nmps: 45,\n   nlps: 42,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0001,\n   nmps: 45,\n   nlps: 43,\n   switchFlag: 0\n  },\n  {\n   qe: 0x5601,\n   nmps: 46,\n   nlps: 46,\n   switchFlag: 0\n  }\n ];\n function ArithmeticDecoder(data, start, end) {\n  this.data = data;\n  this.bp = start;\n  this.dataEnd = end;\n  this.chigh = data[start];\n  this.clow = 0;\n  this.byteIn();\n  this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\n  this.clow = this.clow << 7 & 0xFFFF;\n  this.ct -= 7;\n  this.a = 0x8000;\n }\n ArithmeticDecoder.prototype = {\n  byteIn: function ArithmeticDecoder_byteIn() {\n   var data = this.data;\n   var bp = this.bp;\n   if (data[bp] === 0xFF) {\n    var b1 = data[bp + 1];\n    if (b1 > 0x8F) {\n     this.clow += 0xFF00;\n     this.ct = 8;\n    } else {\n     bp++;\n     this.clow += data[bp] << 9;\n     this.ct = 7;\n     this.bp = bp;\n    }\n   } else {\n    bp++;\n    this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\n    this.ct = 8;\n    this.bp = bp;\n   }\n   if (this.clow > 0xFFFF) {\n    this.chigh += this.clow >> 16;\n    this.clow &= 0xFFFF;\n   }\n  },\n  readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n   var cx_index = contexts[pos] >> 1, cx_mps = contexts[pos] & 1;\n   var qeTableIcx = QeTable[cx_index];\n   var qeIcx = qeTableIcx.qe;\n   var d;\n   var a = this.a - qeIcx;\n   if (this.chigh < qeIcx) {\n    if (a < qeIcx) {\n     a = qeIcx;\n     d = cx_mps;\n     cx_index = qeTableIcx.nmps;\n    } else {\n     a = qeIcx;\n     d = 1 ^ cx_mps;\n     if (qeTableIcx.switchFlag === 1) {\n      cx_mps = d;\n     }\n     cx_index = qeTableIcx.nlps;\n    }\n   } else {\n    this.chigh -= qeIcx;\n    if ((a & 0x8000) !== 0) {\n     this.a = a;\n     return cx_mps;\n    }\n    if (a < qeIcx) {\n     d = 1 ^ cx_mps;\n     if (qeTableIcx.switchFlag === 1) {\n      cx_mps = d;\n     }\n     cx_index = qeTableIcx.nlps;\n    } else {\n     d = cx_mps;\n     cx_index = qeTableIcx.nmps;\n    }\n   }\n   do {\n    if (this.ct === 0) {\n     this.byteIn();\n    }\n    a <<= 1;\n    this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\n    this.clow = this.clow << 1 & 0xFFFF;\n    this.ct--;\n   } while ((a & 0x8000) === 0);\n   this.a = a;\n   contexts[pos] = cx_index << 1 | cx_mps;\n   return d;\n  }\n };\n return ArithmeticDecoder;\n}();\nexports.ArithmeticDecoder = ArithmeticDecoder;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar coreCharsets = __w_pdfjs_require__(22);\nvar coreEncodings = __w_pdfjs_require__(4);\nvar error = sharedUtil.error;\nvar info = sharedUtil.info;\nvar bytesToString = sharedUtil.bytesToString;\nvar warn = sharedUtil.warn;\nvar isArray = sharedUtil.isArray;\nvar Util = sharedUtil.Util;\nvar stringToBytes = sharedUtil.stringToBytes;\nvar assert = sharedUtil.assert;\nvar ISOAdobeCharset = coreCharsets.ISOAdobeCharset;\nvar ExpertCharset = coreCharsets.ExpertCharset;\nvar ExpertSubsetCharset = coreCharsets.ExpertSubsetCharset;\nvar StandardEncoding = coreEncodings.StandardEncoding;\nvar ExpertEncoding = coreEncodings.ExpertEncoding;\nvar MAX_SUBR_NESTING = 10;\nvar CFFStandardStrings = [\n '.notdef',\n 'space',\n 'exclam',\n 'quotedbl',\n 'numbersign',\n 'dollar',\n 'percent',\n 'ampersand',\n 'quoteright',\n 'parenleft',\n 'parenright',\n 'asterisk',\n 'plus',\n 'comma',\n 'hyphen',\n 'period',\n 'slash',\n 'zero',\n 'one',\n 'two',\n 'three',\n 'four',\n 'five',\n 'six',\n 'seven',\n 'eight',\n 'nine',\n 'colon',\n 'semicolon',\n 'less',\n 'equal',\n 'greater',\n 'question',\n 'at',\n 'A',\n 'B',\n 'C',\n 'D',\n 'E',\n 'F',\n 'G',\n 'H',\n 'I',\n 'J',\n 'K',\n 'L',\n 'M',\n 'N',\n 'O',\n 'P',\n 'Q',\n 'R',\n 'S',\n 'T',\n 'U',\n 'V',\n 'W',\n 'X',\n 'Y',\n 'Z',\n 'bracketleft',\n 'backslash',\n 'bracketright',\n 'asciicircum',\n 'underscore',\n 'quoteleft',\n 'a',\n 'b',\n 'c',\n 'd',\n 'e',\n 'f',\n 'g',\n 'h',\n 'i',\n 'j',\n 'k',\n 'l',\n 'm',\n 'n',\n 'o',\n 'p',\n 'q',\n 'r',\n 's',\n 't',\n 'u',\n 'v',\n 'w',\n 'x',\n 'y',\n 'z',\n 'braceleft',\n 'bar',\n 'braceright',\n 'asciitilde',\n 'exclamdown',\n 'cent',\n 'sterling',\n 'fraction',\n 'yen',\n 'florin',\n 'section',\n 'currency',\n 'quotesingle',\n 'quotedblleft',\n 'guillemotleft',\n 'guilsinglleft',\n 'guilsinglright',\n 'fi',\n 'fl',\n 'endash',\n 'dagger',\n 'daggerdbl',\n 'periodcentered',\n 'paragraph',\n 'bullet',\n 'quotesinglbase',\n 'quotedblbase',\n 'quotedblright',\n 'guillemotright',\n 'ellipsis',\n 'perthousand',\n 'questiondown',\n 'grave',\n 'acute',\n 'circumflex',\n 'tilde',\n 'macron',\n 'breve',\n 'dotaccent',\n 'dieresis',\n 'ring',\n 'cedilla',\n 'hungarumlaut',\n 'ogonek',\n 'caron',\n 'emdash',\n 'AE',\n 'ordfeminine',\n 'Lslash',\n 'Oslash',\n 'OE',\n 'ordmasculine',\n 'ae',\n 'dotlessi',\n 'lslash',\n 'oslash',\n 'oe',\n 'germandbls',\n 'onesuperior',\n 'logicalnot',\n 'mu',\n 'trademark',\n 'Eth',\n 'onehalf',\n 'plusminus',\n 'Thorn',\n 'onequarter',\n 'divide',\n 'brokenbar',\n 'degree',\n 'thorn',\n 'threequarters',\n 'twosuperior',\n 'registered',\n 'minus',\n 'eth',\n 'multiply',\n 'threesuperior',\n 'copyright',\n 'Aacute',\n 'Acircumflex',\n 'Adieresis',\n 'Agrave',\n 'Aring',\n 'Atilde',\n 'Ccedilla',\n 'Eacute',\n 'Ecircumflex',\n 'Edieresis',\n 'Egrave',\n 'Iacute',\n 'Icircumflex',\n 'Idieresis',\n 'Igrave',\n 'Ntilde',\n 'Oacute',\n 'Ocircumflex',\n 'Odieresis',\n 'Ograve',\n 'Otilde',\n 'Scaron',\n 'Uacute',\n 'Ucircumflex',\n 'Udieresis',\n 'Ugrave',\n 'Yacute',\n 'Ydieresis',\n 'Zcaron',\n 'aacute',\n 'acircumflex',\n 'adieresis',\n 'agrave',\n 'aring',\n 'atilde',\n 'ccedilla',\n 'eacute',\n 'ecircumflex',\n 'edieresis',\n 'egrave',\n 'iacute',\n 'icircumflex',\n 'idieresis',\n 'igrave',\n 'ntilde',\n 'oacute',\n 'ocircumflex',\n 'odieresis',\n 'ograve',\n 'otilde',\n 'scaron',\n 'uacute',\n 'ucircumflex',\n 'udieresis',\n 'ugrave',\n 'yacute',\n 'ydieresis',\n 'zcaron',\n 'exclamsmall',\n 'Hungarumlautsmall',\n 'dollaroldstyle',\n 'dollarsuperior',\n 'ampersandsmall',\n 'Acutesmall',\n 'parenleftsuperior',\n 'parenrightsuperior',\n 'twodotenleader',\n 'onedotenleader',\n 'zerooldstyle',\n 'oneoldstyle',\n 'twooldstyle',\n 'threeoldstyle',\n 'fouroldstyle',\n 'fiveoldstyle',\n 'sixoldstyle',\n 'sevenoldstyle',\n 'eightoldstyle',\n 'nineoldstyle',\n 'commasuperior',\n 'threequartersemdash',\n 'periodsuperior',\n 'questionsmall',\n 'asuperior',\n 'bsuperior',\n 'centsuperior',\n 'dsuperior',\n 'esuperior',\n 'isuperior',\n 'lsuperior',\n 'msuperior',\n 'nsuperior',\n 'osuperior',\n 'rsuperior',\n 'ssuperior',\n 'tsuperior',\n 'ff',\n 'ffi',\n 'ffl',\n 'parenleftinferior',\n 'parenrightinferior',\n 'Circumflexsmall',\n 'hyphensuperior',\n 'Gravesmall',\n 'Asmall',\n 'Bsmall',\n 'Csmall',\n 'Dsmall',\n 'Esmall',\n 'Fsmall',\n 'Gsmall',\n 'Hsmall',\n 'Ismall',\n 'Jsmall',\n 'Ksmall',\n 'Lsmall',\n 'Msmall',\n 'Nsmall',\n 'Osmall',\n 'Psmall',\n 'Qsmall',\n 'Rsmall',\n 'Ssmall',\n 'Tsmall',\n 'Usmall',\n 'Vsmall',\n 'Wsmall',\n 'Xsmall',\n 'Ysmall',\n 'Zsmall',\n 'colonmonetary',\n 'onefitted',\n 'rupiah',\n 'Tildesmall',\n 'exclamdownsmall',\n 'centoldstyle',\n 'Lslashsmall',\n 'Scaronsmall',\n 'Zcaronsmall',\n 'Dieresissmall',\n 'Brevesmall',\n 'Caronsmall',\n 'Dotaccentsmall',\n 'Macronsmall',\n 'figuredash',\n 'hypheninferior',\n 'Ogoneksmall',\n 'Ringsmall',\n 'Cedillasmall',\n 'questiondownsmall',\n 'oneeighth',\n 'threeeighths',\n 'fiveeighths',\n 'seveneighths',\n 'onethird',\n 'twothirds',\n 'zerosuperior',\n 'foursuperior',\n 'fivesuperior',\n 'sixsuperior',\n 'sevensuperior',\n 'eightsuperior',\n 'ninesuperior',\n 'zeroinferior',\n 'oneinferior',\n 'twoinferior',\n 'threeinferior',\n 'fourinferior',\n 'fiveinferior',\n 'sixinferior',\n 'seveninferior',\n 'eightinferior',\n 'nineinferior',\n 'centinferior',\n 'dollarinferior',\n 'periodinferior',\n 'commainferior',\n 'Agravesmall',\n 'Aacutesmall',\n 'Acircumflexsmall',\n 'Atildesmall',\n 'Adieresissmall',\n 'Aringsmall',\n 'AEsmall',\n 'Ccedillasmall',\n 'Egravesmall',\n 'Eacutesmall',\n 'Ecircumflexsmall',\n 'Edieresissmall',\n 'Igravesmall',\n 'Iacutesmall',\n 'Icircumflexsmall',\n 'Idieresissmall',\n 'Ethsmall',\n 'Ntildesmall',\n 'Ogravesmall',\n 'Oacutesmall',\n 'Ocircumflexsmall',\n 'Otildesmall',\n 'Odieresissmall',\n 'OEsmall',\n 'Oslashsmall',\n 'Ugravesmall',\n 'Uacutesmall',\n 'Ucircumflexsmall',\n 'Udieresissmall',\n 'Yacutesmall',\n 'Thornsmall',\n 'Ydieresissmall',\n '001.000',\n '001.001',\n '001.002',\n '001.003',\n 'Black',\n 'Bold',\n 'Book',\n 'Light',\n 'Medium',\n 'Regular',\n 'Roman',\n 'Semibold'\n];\nvar CFFParser = function CFFParserClosure() {\n var CharstringValidationData = [\n  null,\n  {\n   id: 'hstem',\n   min: 2,\n   stackClearing: true,\n   stem: true\n  },\n  null,\n  {\n   id: 'vstem',\n   min: 2,\n   stackClearing: true,\n   stem: true\n  },\n  {\n   id: 'vmoveto',\n   min: 1,\n   stackClearing: true\n  },\n  {\n   id: 'rlineto',\n   min: 2,\n   resetStack: true\n  },\n  {\n   id: 'hlineto',\n   min: 1,\n   resetStack: true\n  },\n  {\n   id: 'vlineto',\n   min: 1,\n   resetStack: true\n  },\n  {\n   id: 'rrcurveto',\n   min: 6,\n   resetStack: true\n  },\n  null,\n  {\n   id: 'callsubr',\n   min: 1,\n   undefStack: true\n  },\n  {\n   id: 'return',\n   min: 0,\n   undefStack: true\n  },\n  null,\n  null,\n  {\n   id: 'endchar',\n   min: 0,\n   stackClearing: true\n  },\n  null,\n  null,\n  null,\n  {\n   id: 'hstemhm',\n   min: 2,\n   stackClearing: true,\n   stem: true\n  },\n  {\n   id: 'hintmask',\n   min: 0,\n   stackClearing: true\n  },\n  {\n   id: 'cntrmask',\n   min: 0,\n   stackClearing: true\n  },\n  {\n   id: 'rmoveto',\n   min: 2,\n   stackClearing: true\n  },\n  {\n   id: 'hmoveto',\n   min: 1,\n   stackClearing: true\n  },\n  {\n   id: 'vstemhm',\n   min: 2,\n   stackClearing: true,\n   stem: true\n  },\n  {\n   id: 'rcurveline',\n   min: 8,\n   resetStack: true\n  },\n  {\n   id: 'rlinecurve',\n   min: 8,\n   resetStack: true\n  },\n  {\n   id: 'vvcurveto',\n   min: 4,\n   resetStack: true\n  },\n  {\n   id: 'hhcurveto',\n   min: 4,\n   resetStack: true\n  },\n  null,\n  {\n   id: 'callgsubr',\n   min: 1,\n   undefStack: true\n  },\n  {\n   id: 'vhcurveto',\n   min: 4,\n   resetStack: true\n  },\n  {\n   id: 'hvcurveto',\n   min: 4,\n   resetStack: true\n  }\n ];\n var CharstringValidationData12 = [\n  null,\n  null,\n  null,\n  {\n   id: 'and',\n   min: 2,\n   stackDelta: -1\n  },\n  {\n   id: 'or',\n   min: 2,\n   stackDelta: -1\n  },\n  {\n   id: 'not',\n   min: 1,\n   stackDelta: 0\n  },\n  null,\n  null,\n  null,\n  {\n   id: 'abs',\n   min: 1,\n   stackDelta: 0\n  },\n  {\n   id: 'add',\n   min: 2,\n   stackDelta: -1,\n   stackFn: function stack_div(stack, index) {\n    stack[index - 2] = stack[index - 2] + stack[index - 1];\n   }\n  },\n  {\n   id: 'sub',\n   min: 2,\n   stackDelta: -1,\n   stackFn: function stack_div(stack, index) {\n    stack[index - 2] = stack[index - 2] - stack[index - 1];\n   }\n  },\n  {\n   id: 'div',\n   min: 2,\n   stackDelta: -1,\n   stackFn: function stack_div(stack, index) {\n    stack[index - 2] = stack[index - 2] / stack[index - 1];\n   }\n  },\n  null,\n  {\n   id: 'neg',\n   min: 1,\n   stackDelta: 0,\n   stackFn: function stack_div(stack, index) {\n    stack[index - 1] = -stack[index - 1];\n   }\n  },\n  {\n   id: 'eq',\n   min: 2,\n   stackDelta: -1\n  },\n  null,\n  null,\n  {\n   id: 'drop',\n   min: 1,\n   stackDelta: -1\n  },\n  null,\n  {\n   id: 'put',\n   min: 2,\n   stackDelta: -2\n  },\n  {\n   id: 'get',\n   min: 1,\n   stackDelta: 0\n  },\n  {\n   id: 'ifelse',\n   min: 4,\n   stackDelta: -3\n  },\n  {\n   id: 'random',\n   min: 0,\n   stackDelta: 1\n  },\n  {\n   id: 'mul',\n   min: 2,\n   stackDelta: -1,\n   stackFn: function stack_div(stack, index) {\n    stack[index - 2] = stack[index - 2] * stack[index - 1];\n   }\n  },\n  null,\n  {\n   id: 'sqrt',\n   min: 1,\n   stackDelta: 0\n  },\n  {\n   id: 'dup',\n   min: 1,\n   stackDelta: 1\n  },\n  {\n   id: 'exch',\n   min: 2,\n   stackDelta: 0\n  },\n  {\n   id: 'index',\n   min: 2,\n   stackDelta: 0\n  },\n  {\n   id: 'roll',\n   min: 3,\n   stackDelta: -2\n  },\n  null,\n  null,\n  null,\n  {\n   id: 'hflex',\n   min: 7,\n   resetStack: true\n  },\n  {\n   id: 'flex',\n   min: 13,\n   resetStack: true\n  },\n  {\n   id: 'hflex1',\n   min: 9,\n   resetStack: true\n  },\n  {\n   id: 'flex1',\n   min: 11,\n   resetStack: true\n  }\n ];\n function CFFParser(file, properties, seacAnalysisEnabled) {\n  this.bytes = file.getBytes();\n  this.properties = properties;\n  this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n }\n CFFParser.prototype = {\n  parse: function CFFParser_parse() {\n   var properties = this.properties;\n   var cff = new CFF();\n   this.cff = cff;\n   var header = this.parseHeader();\n   var nameIndex = this.parseIndex(header.endPos);\n   var topDictIndex = this.parseIndex(nameIndex.endPos);\n   var stringIndex = this.parseIndex(topDictIndex.endPos);\n   var globalSubrIndex = this.parseIndex(stringIndex.endPos);\n   var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\n   var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\n   cff.header = header.obj;\n   cff.names = this.parseNameIndex(nameIndex.obj);\n   cff.strings = this.parseStringIndex(stringIndex.obj);\n   cff.topDict = topDict;\n   cff.globalSubrIndex = globalSubrIndex.obj;\n   this.parsePrivateDict(cff.topDict);\n   cff.isCIDFont = topDict.hasName('ROS');\n   var charStringOffset = topDict.getByName('CharStrings');\n   var charStringIndex = this.parseIndex(charStringOffset).obj;\n   var fontMatrix = topDict.getByName('FontMatrix');\n   if (fontMatrix) {\n    properties.fontMatrix = fontMatrix;\n   }\n   var fontBBox = topDict.getByName('FontBBox');\n   if (fontBBox) {\n    properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n    properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n    properties.ascentScaled = true;\n   }\n   var charset, encoding;\n   if (cff.isCIDFont) {\n    var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\n    for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\n     var dictRaw = fdArrayIndex.get(i);\n     var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\n     this.parsePrivateDict(fontDict);\n     cff.fdArray.push(fontDict);\n    }\n    encoding = null;\n    charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\n    cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\n   } else {\n    charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\n    encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\n   }\n   cff.charset = charset;\n   cff.encoding = encoding;\n   var charStringsAndSeacs = this.parseCharStrings(charStringIndex, topDict.privateDict.subrsIndex, globalSubrIndex.obj, cff.fdSelect, cff.fdArray);\n   cff.charStrings = charStringsAndSeacs.charStrings;\n   cff.seacs = charStringsAndSeacs.seacs;\n   cff.widths = charStringsAndSeacs.widths;\n   return cff;\n  },\n  parseHeader: function CFFParser_parseHeader() {\n   var bytes = this.bytes;\n   var bytesLength = bytes.length;\n   var offset = 0;\n   while (offset < bytesLength && bytes[offset] !== 1) {\n    ++offset;\n   }\n   if (offset >= bytesLength) {\n    error('Invalid CFF header');\n   } else if (offset !== 0) {\n    info('cff data is shifted');\n    bytes = bytes.subarray(offset);\n    this.bytes = bytes;\n   }\n   var major = bytes[0];\n   var minor = bytes[1];\n   var hdrSize = bytes[2];\n   var offSize = bytes[3];\n   var header = new CFFHeader(major, minor, hdrSize, offSize);\n   return {\n    obj: header,\n    endPos: hdrSize\n   };\n  },\n  parseDict: function CFFParser_parseDict(dict) {\n   var pos = 0;\n   function parseOperand() {\n    var value = dict[pos++];\n    if (value === 30) {\n     return parseFloatOperand();\n    } else if (value === 28) {\n     value = dict[pos++];\n     value = (value << 24 | dict[pos++] << 16) >> 16;\n     return value;\n    } else if (value === 29) {\n     value = dict[pos++];\n     value = value << 8 | dict[pos++];\n     value = value << 8 | dict[pos++];\n     value = value << 8 | dict[pos++];\n     return value;\n    } else if (value >= 32 && value <= 246) {\n     return value - 139;\n    } else if (value >= 247 && value <= 250) {\n     return (value - 247) * 256 + dict[pos++] + 108;\n    } else if (value >= 251 && value <= 254) {\n     return -((value - 251) * 256) - dict[pos++] - 108;\n    }\n    warn('CFFParser_parseDict: \"' + value + '\" is a reserved command.');\n    return NaN;\n   }\n   function parseFloatOperand() {\n    var str = '';\n    var eof = 15;\n    var lookup = [\n     '0',\n     '1',\n     '2',\n     '3',\n     '4',\n     '5',\n     '6',\n     '7',\n     '8',\n     '9',\n     '.',\n     'E',\n     'E-',\n     null,\n     '-'\n    ];\n    var length = dict.length;\n    while (pos < length) {\n     var b = dict[pos++];\n     var b1 = b >> 4;\n     var b2 = b & 15;\n     if (b1 === eof) {\n      break;\n     }\n     str += lookup[b1];\n     if (b2 === eof) {\n      break;\n     }\n     str += lookup[b2];\n    }\n    return parseFloat(str);\n   }\n   var operands = [];\n   var entries = [];\n   pos = 0;\n   var end = dict.length;\n   while (pos < end) {\n    var b = dict[pos];\n    if (b <= 21) {\n     if (b === 12) {\n      b = b << 8 | dict[++pos];\n     }\n     entries.push([\n      b,\n      operands\n     ]);\n     operands = [];\n     ++pos;\n    } else {\n     operands.push(parseOperand());\n    }\n   }\n   return entries;\n  },\n  parseIndex: function CFFParser_parseIndex(pos) {\n   var cffIndex = new CFFIndex();\n   var bytes = this.bytes;\n   var count = bytes[pos++] << 8 | bytes[pos++];\n   var offsets = [];\n   var end = pos;\n   var i, ii;\n   if (count !== 0) {\n    var offsetSize = bytes[pos++];\n    var startPos = pos + (count + 1) * offsetSize - 1;\n    for (i = 0, ii = count + 1; i < ii; ++i) {\n     var offset = 0;\n     for (var j = 0; j < offsetSize; ++j) {\n      offset <<= 8;\n      offset += bytes[pos++];\n     }\n     offsets.push(startPos + offset);\n    }\n    end = offsets[count];\n   }\n   for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\n    var offsetStart = offsets[i];\n    var offsetEnd = offsets[i + 1];\n    cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\n   }\n   return {\n    obj: cffIndex,\n    endPos: end\n   };\n  },\n  parseNameIndex: function CFFParser_parseNameIndex(index) {\n   var names = [];\n   for (var i = 0, ii = index.count; i < ii; ++i) {\n    var name = index.get(i);\n    var length = Math.min(name.length, 127);\n    var data = [];\n    for (var j = 0; j < length; ++j) {\n     var c = name[j];\n     if (j === 0 && c === 0) {\n      data[j] = c;\n      continue;\n     }\n     if (c < 33 || c > 126 || c === 91 || c === 93 || c === 40 || c === 41 || c === 123 || c === 125 || c === 60 || c === 62 || c === 47 || c === 37 || c === 35) {\n      data[j] = 95;\n      continue;\n     }\n     data[j] = c;\n    }\n    names.push(bytesToString(data));\n   }\n   return names;\n  },\n  parseStringIndex: function CFFParser_parseStringIndex(index) {\n   var strings = new CFFStrings();\n   for (var i = 0, ii = index.count; i < ii; ++i) {\n    var data = index.get(i);\n    strings.add(bytesToString(data));\n   }\n   return strings;\n  },\n  createDict: function CFFParser_createDict(Type, dict, strings) {\n   var cffDict = new Type(strings);\n   for (var i = 0, ii = dict.length; i < ii; ++i) {\n    var pair = dict[i];\n    var key = pair[0];\n    var value = pair[1];\n    cffDict.setByKey(key, value);\n   }\n   return cffDict;\n  },\n  parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\n   if (!data || state.callDepth > MAX_SUBR_NESTING) {\n    return false;\n   }\n   var stackSize = state.stackSize;\n   var stack = state.stack;\n   var length = data.length;\n   for (var j = 0; j < length;) {\n    var value = data[j++];\n    var validationCommand = null;\n    if (value === 12) {\n     var q = data[j++];\n     if (q === 0) {\n      data[j - 2] = 139;\n      data[j - 1] = 22;\n      stackSize = 0;\n     } else {\n      validationCommand = CharstringValidationData12[q];\n     }\n    } else if (value === 28) {\n     stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\n     j += 2;\n     stackSize++;\n    } else if (value === 14) {\n     if (stackSize >= 4) {\n      stackSize -= 4;\n      if (this.seacAnalysisEnabled) {\n       state.seac = stack.slice(stackSize, stackSize + 4);\n       return false;\n      }\n     }\n     validationCommand = CharstringValidationData[value];\n    } else if (value >= 32 && value <= 246) {\n     stack[stackSize] = value - 139;\n     stackSize++;\n    } else if (value >= 247 && value <= 254) {\n     stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\n     j++;\n     stackSize++;\n    } else if (value === 255) {\n     stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\n     j += 4;\n     stackSize++;\n    } else if (value === 19 || value === 20) {\n     state.hints += stackSize >> 1;\n     j += state.hints + 7 >> 3;\n     stackSize %= 2;\n     validationCommand = CharstringValidationData[value];\n    } else if (value === 10 || value === 29) {\n     var subrsIndex;\n     if (value === 10) {\n      subrsIndex = localSubrIndex;\n     } else {\n      subrsIndex = globalSubrIndex;\n     }\n     if (!subrsIndex) {\n      validationCommand = CharstringValidationData[value];\n      warn('Missing subrsIndex for ' + validationCommand.id);\n      return false;\n     }\n     var bias = 32768;\n     if (subrsIndex.count < 1240) {\n      bias = 107;\n     } else if (subrsIndex.count < 33900) {\n      bias = 1131;\n     }\n     var subrNumber = stack[--stackSize] + bias;\n     if (subrNumber < 0 || subrNumber >= subrsIndex.count || isNaN(subrNumber)) {\n      validationCommand = CharstringValidationData[value];\n      warn('Out of bounds subrIndex for ' + validationCommand.id);\n      return false;\n     }\n     state.stackSize = stackSize;\n     state.callDepth++;\n     var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\n     if (!valid) {\n      return false;\n     }\n     state.callDepth--;\n     stackSize = state.stackSize;\n     continue;\n    } else if (value === 11) {\n     state.stackSize = stackSize;\n     return true;\n    } else {\n     validationCommand = CharstringValidationData[value];\n    }\n    if (validationCommand) {\n     if (validationCommand.stem) {\n      state.hints += stackSize >> 1;\n     }\n     if ('min' in validationCommand) {\n      if (!state.undefStack && stackSize < validationCommand.min) {\n       warn('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\n       return false;\n      }\n     }\n     if (state.firstStackClearing && validationCommand.stackClearing) {\n      state.firstStackClearing = false;\n      stackSize -= validationCommand.min;\n      if (stackSize >= 2 && validationCommand.stem) {\n       stackSize %= 2;\n      } else if (stackSize > 1) {\n       warn('Found too many parameters for stack-clearing command');\n      }\n      if (stackSize > 0 && stack[stackSize - 1] >= 0) {\n       state.width = stack[stackSize - 1];\n      }\n     }\n     if ('stackDelta' in validationCommand) {\n      if ('stackFn' in validationCommand) {\n       validationCommand.stackFn(stack, stackSize);\n      }\n      stackSize += validationCommand.stackDelta;\n     } else if (validationCommand.stackClearing) {\n      stackSize = 0;\n     } else if (validationCommand.resetStack) {\n      stackSize = 0;\n      state.undefStack = false;\n     } else if (validationCommand.undefStack) {\n      stackSize = 0;\n      state.undefStack = true;\n      state.firstStackClearing = false;\n     }\n    }\n   }\n   state.stackSize = stackSize;\n   return true;\n  },\n  parseCharStrings: function CFFParser_parseCharStrings(charStrings, localSubrIndex, globalSubrIndex, fdSelect, fdArray) {\n   var seacs = [];\n   var widths = [];\n   var count = charStrings.count;\n   for (var i = 0; i < count; i++) {\n    var charstring = charStrings.get(i);\n    var state = {\n     callDepth: 0,\n     stackSize: 0,\n     stack: [],\n     undefStack: true,\n     hints: 0,\n     firstStackClearing: true,\n     seac: null,\n     width: null\n    };\n    var valid = true;\n    var localSubrToUse = null;\n    if (fdSelect && fdArray.length) {\n     var fdIndex = fdSelect.getFDIndex(i);\n     if (fdIndex === -1) {\n      warn('Glyph index is not in fd select.');\n      valid = false;\n     }\n     if (fdIndex >= fdArray.length) {\n      warn('Invalid fd index for glyph index.');\n      valid = false;\n     }\n     if (valid) {\n      localSubrToUse = fdArray[fdIndex].privateDict.subrsIndex;\n     }\n    } else if (localSubrIndex) {\n     localSubrToUse = localSubrIndex;\n    }\n    if (valid) {\n     valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\n    }\n    if (state.width !== null) {\n     widths[i] = state.width;\n    }\n    if (state.seac !== null) {\n     seacs[i] = state.seac;\n    }\n    if (!valid) {\n     charStrings.set(i, new Uint8Array([14]));\n    }\n   }\n   return {\n    charStrings: charStrings,\n    seacs: seacs,\n    widths: widths\n   };\n  },\n  emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\n   var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\n   parentDict.setByKey(18, [\n    0,\n    0\n   ]);\n   parentDict.privateDict = privateDict;\n  },\n  parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\n   if (!parentDict.hasName('Private')) {\n    this.emptyPrivateDictionary(parentDict);\n    return;\n   }\n   var privateOffset = parentDict.getByName('Private');\n   if (!isArray(privateOffset) || privateOffset.length !== 2) {\n    parentDict.removeByName('Private');\n    return;\n   }\n   var size = privateOffset[0];\n   var offset = privateOffset[1];\n   if (size === 0 || offset >= this.bytes.length) {\n    this.emptyPrivateDictionary(parentDict);\n    return;\n   }\n   var privateDictEnd = offset + size;\n   var dictData = this.bytes.subarray(offset, privateDictEnd);\n   var dict = this.parseDict(dictData);\n   var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\n   parentDict.privateDict = privateDict;\n   if (!privateDict.getByName('Subrs')) {\n    return;\n   }\n   var subrsOffset = privateDict.getByName('Subrs');\n   var relativeOffset = offset + subrsOffset;\n   if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\n    this.emptyPrivateDictionary(parentDict);\n    return;\n   }\n   var subrsIndex = this.parseIndex(relativeOffset);\n   privateDict.subrsIndex = subrsIndex.obj;\n  },\n  parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\n   if (pos === 0) {\n    return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, ISOAdobeCharset);\n   } else if (pos === 1) {\n    return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, ExpertCharset);\n   } else if (pos === 2) {\n    return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, ExpertSubsetCharset);\n   }\n   var bytes = this.bytes;\n   var start = pos;\n   var format = bytes[pos++];\n   var charset = ['.notdef'];\n   var id, count, i;\n   length -= 1;\n   switch (format) {\n   case 0:\n    for (i = 0; i < length; i++) {\n     id = bytes[pos++] << 8 | bytes[pos++];\n     charset.push(cid ? id : strings.get(id));\n    }\n    break;\n   case 1:\n    while (charset.length <= length) {\n     id = bytes[pos++] << 8 | bytes[pos++];\n     count = bytes[pos++];\n     for (i = 0; i <= count; i++) {\n      charset.push(cid ? id++ : strings.get(id++));\n     }\n    }\n    break;\n   case 2:\n    while (charset.length <= length) {\n     id = bytes[pos++] << 8 | bytes[pos++];\n     count = bytes[pos++] << 8 | bytes[pos++];\n     for (i = 0; i <= count; i++) {\n      charset.push(cid ? id++ : strings.get(id++));\n     }\n    }\n    break;\n   default:\n    error('Unknown charset format');\n   }\n   var end = pos;\n   var raw = bytes.subarray(start, end);\n   return new CFFCharset(false, format, charset, raw);\n  },\n  parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\n   var encoding = Object.create(null);\n   var bytes = this.bytes;\n   var predefined = false;\n   var format, i, ii;\n   var raw = null;\n   function readSupplement() {\n    var supplementsCount = bytes[pos++];\n    for (i = 0; i < supplementsCount; i++) {\n     var code = bytes[pos++];\n     var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\n     encoding[code] = charset.indexOf(strings.get(sid));\n    }\n   }\n   if (pos === 0 || pos === 1) {\n    predefined = true;\n    format = pos;\n    var baseEncoding = pos ? ExpertEncoding : StandardEncoding;\n    for (i = 0, ii = charset.length; i < ii; i++) {\n     var index = baseEncoding.indexOf(charset[i]);\n     if (index !== -1) {\n      encoding[index] = i;\n     }\n    }\n   } else {\n    var dataStart = pos;\n    format = bytes[pos++];\n    switch (format & 0x7f) {\n    case 0:\n     var glyphsCount = bytes[pos++];\n     for (i = 1; i <= glyphsCount; i++) {\n      encoding[bytes[pos++]] = i;\n     }\n     break;\n    case 1:\n     var rangesCount = bytes[pos++];\n     var gid = 1;\n     for (i = 0; i < rangesCount; i++) {\n      var start = bytes[pos++];\n      var left = bytes[pos++];\n      for (var j = start; j <= start + left; j++) {\n       encoding[j] = gid++;\n      }\n     }\n     break;\n    default:\n     error('Unknown encoding format: ' + format + ' in CFF');\n     break;\n    }\n    var dataEnd = pos;\n    if (format & 0x80) {\n     bytes[dataStart] &= 0x7f;\n     readSupplement();\n    }\n    raw = bytes.subarray(dataStart, dataEnd);\n   }\n   format = format & 0x7f;\n   return new CFFEncoding(predefined, format, encoding, raw);\n  },\n  parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\n   var start = pos;\n   var bytes = this.bytes;\n   var format = bytes[pos++];\n   var fdSelect = [], rawBytes;\n   var i, invalidFirstGID = false;\n   switch (format) {\n   case 0:\n    for (i = 0; i < length; ++i) {\n     var id = bytes[pos++];\n     fdSelect.push(id);\n    }\n    rawBytes = bytes.subarray(start, pos);\n    break;\n   case 3:\n    var rangesCount = bytes[pos++] << 8 | bytes[pos++];\n    for (i = 0; i < rangesCount; ++i) {\n     var first = bytes[pos++] << 8 | bytes[pos++];\n     if (i === 0 && first !== 0) {\n      warn('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\n      invalidFirstGID = true;\n      first = 0;\n     }\n     var fdIndex = bytes[pos++];\n     var next = bytes[pos] << 8 | bytes[pos + 1];\n     for (var j = first; j < next; ++j) {\n      fdSelect.push(fdIndex);\n     }\n    }\n    pos += 2;\n    rawBytes = bytes.subarray(start, pos);\n    if (invalidFirstGID) {\n     rawBytes[3] = rawBytes[4] = 0;\n    }\n    break;\n   default:\n    error('parseFDSelect: Unknown format \"' + format + '\".');\n    break;\n   }\n   assert(fdSelect.length === length, 'parseFDSelect: Invalid font data.');\n   return new CFFFDSelect(fdSelect, rawBytes);\n  }\n };\n return CFFParser;\n}();\nvar CFF = function CFFClosure() {\n function CFF() {\n  this.header = null;\n  this.names = [];\n  this.topDict = null;\n  this.strings = new CFFStrings();\n  this.globalSubrIndex = null;\n  this.encoding = null;\n  this.charset = null;\n  this.charStrings = null;\n  this.fdArray = [];\n  this.fdSelect = null;\n  this.isCIDFont = false;\n }\n return CFF;\n}();\nvar CFFHeader = function CFFHeaderClosure() {\n function CFFHeader(major, minor, hdrSize, offSize) {\n  this.major = major;\n  this.minor = minor;\n  this.hdrSize = hdrSize;\n  this.offSize = offSize;\n }\n return CFFHeader;\n}();\nvar CFFStrings = function CFFStringsClosure() {\n function CFFStrings() {\n  this.strings = [];\n }\n CFFStrings.prototype = {\n  get: function CFFStrings_get(index) {\n   if (index >= 0 && index <= 390) {\n    return CFFStandardStrings[index];\n   }\n   if (index - 391 <= this.strings.length) {\n    return this.strings[index - 391];\n   }\n   return CFFStandardStrings[0];\n  },\n  add: function CFFStrings_add(value) {\n   this.strings.push(value);\n  },\n  get count() {\n   return this.strings.length;\n  }\n };\n return CFFStrings;\n}();\nvar CFFIndex = function CFFIndexClosure() {\n function CFFIndex() {\n  this.objects = [];\n  this.length = 0;\n }\n CFFIndex.prototype = {\n  add: function CFFIndex_add(data) {\n   this.length += data.length;\n   this.objects.push(data);\n  },\n  set: function CFFIndex_set(index, data) {\n   this.length += data.length - this.objects[index].length;\n   this.objects[index] = data;\n  },\n  get: function CFFIndex_get(index) {\n   return this.objects[index];\n  },\n  get count() {\n   return this.objects.length;\n  }\n };\n return CFFIndex;\n}();\nvar CFFDict = function CFFDictClosure() {\n function CFFDict(tables, strings) {\n  this.keyToNameMap = tables.keyToNameMap;\n  this.nameToKeyMap = tables.nameToKeyMap;\n  this.defaults = tables.defaults;\n  this.types = tables.types;\n  this.opcodes = tables.opcodes;\n  this.order = tables.order;\n  this.strings = strings;\n  this.values = Object.create(null);\n }\n CFFDict.prototype = {\n  setByKey: function CFFDict_setByKey(key, value) {\n   if (!(key in this.keyToNameMap)) {\n    return false;\n   }\n   var valueLength = value.length;\n   if (valueLength === 0) {\n    return true;\n   }\n   for (var i = 0; i < valueLength; i++) {\n    if (isNaN(value[i])) {\n     warn('Invalid CFFDict value: \"' + value + '\" for key \"' + key + '\".');\n     return true;\n    }\n   }\n   var type = this.types[key];\n   if (type === 'num' || type === 'sid' || type === 'offset') {\n    value = value[0];\n   }\n   this.values[key] = value;\n   return true;\n  },\n  setByName: function CFFDict_setByName(name, value) {\n   if (!(name in this.nameToKeyMap)) {\n    error('Invalid dictionary name \"' + name + '\"');\n   }\n   this.values[this.nameToKeyMap[name]] = value;\n  },\n  hasName: function CFFDict_hasName(name) {\n   return this.nameToKeyMap[name] in this.values;\n  },\n  getByName: function CFFDict_getByName(name) {\n   if (!(name in this.nameToKeyMap)) {\n    error('Invalid dictionary name \"' + name + '\"');\n   }\n   var key = this.nameToKeyMap[name];\n   if (!(key in this.values)) {\n    return this.defaults[key];\n   }\n   return this.values[key];\n  },\n  removeByName: function CFFDict_removeByName(name) {\n   delete this.values[this.nameToKeyMap[name]];\n  }\n };\n CFFDict.createTables = function CFFDict_createTables(layout) {\n  var tables = {\n   keyToNameMap: {},\n   nameToKeyMap: {},\n   defaults: {},\n   types: {},\n   opcodes: {},\n   order: []\n  };\n  for (var i = 0, ii = layout.length; i < ii; ++i) {\n   var entry = layout[i];\n   var key = isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\n   tables.keyToNameMap[key] = entry[1];\n   tables.nameToKeyMap[entry[1]] = key;\n   tables.types[key] = entry[2];\n   tables.defaults[key] = entry[3];\n   tables.opcodes[key] = isArray(entry[0]) ? entry[0] : [entry[0]];\n   tables.order.push(key);\n  }\n  return tables;\n };\n return CFFDict;\n}();\nvar CFFTopDict = function CFFTopDictClosure() {\n var layout = [\n  [\n   [\n    12,\n    30\n   ],\n   'ROS',\n   [\n    'sid',\n    'sid',\n    'num'\n   ],\n   null\n  ],\n  [\n   [\n    12,\n    20\n   ],\n   'SyntheticBase',\n   'num',\n   null\n  ],\n  [\n   0,\n   'version',\n   'sid',\n   null\n  ],\n  [\n   1,\n   'Notice',\n   'sid',\n   null\n  ],\n  [\n   [\n    12,\n    0\n   ],\n   'Copyright',\n   'sid',\n   null\n  ],\n  [\n   2,\n   'FullName',\n   'sid',\n   null\n  ],\n  [\n   3,\n   'FamilyName',\n   'sid',\n   null\n  ],\n  [\n   4,\n   'Weight',\n   'sid',\n   null\n  ],\n  [\n   [\n    12,\n    1\n   ],\n   'isFixedPitch',\n   'num',\n   0\n  ],\n  [\n   [\n    12,\n    2\n   ],\n   'ItalicAngle',\n   'num',\n   0\n  ],\n  [\n   [\n    12,\n    3\n   ],\n   'UnderlinePosition',\n   'num',\n   -100\n  ],\n  [\n   [\n    12,\n    4\n   ],\n   'UnderlineThickness',\n   'num',\n   50\n  ],\n  [\n   [\n    12,\n    5\n   ],\n   'PaintType',\n   'num',\n   0\n  ],\n  [\n   [\n    12,\n    6\n   ],\n   'CharstringType',\n   'num',\n   2\n  ],\n  [\n   [\n    12,\n    7\n   ],\n   'FontMatrix',\n   [\n    'num',\n    'num',\n    'num',\n    'num',\n    'num',\n    'num'\n   ],\n   [\n    0.001,\n    0,\n    0,\n    0.001,\n    0,\n    0\n   ]\n  ],\n  [\n   13,\n   'UniqueID',\n   'num',\n   null\n  ],\n  [\n   5,\n   'FontBBox',\n   [\n    'num',\n    'num',\n    'num',\n    'num'\n   ],\n   [\n    0,\n    0,\n    0,\n    0\n   ]\n  ],\n  [\n   [\n    12,\n    8\n   ],\n   'StrokeWidth',\n   'num',\n   0\n  ],\n  [\n   14,\n   'XUID',\n   'array',\n   null\n  ],\n  [\n   15,\n   'charset',\n   'offset',\n   0\n  ],\n  [\n   16,\n   'Encoding',\n   'offset',\n   0\n  ],\n  [\n   17,\n   'CharStrings',\n   'offset',\n   0\n  ],\n  [\n   18,\n   'Private',\n   [\n    'offset',\n    'offset'\n   ],\n   null\n  ],\n  [\n   [\n    12,\n    21\n   ],\n   'PostScript',\n   'sid',\n   null\n  ],\n  [\n   [\n    12,\n    22\n   ],\n   'BaseFontName',\n   'sid',\n   null\n  ],\n  [\n   [\n    12,\n    23\n   ],\n   'BaseFontBlend',\n   'delta',\n   null\n  ],\n  [\n   [\n    12,\n    31\n   ],\n   'CIDFontVersion',\n   'num',\n   0\n  ],\n  [\n   [\n    12,\n    32\n   ],\n   'CIDFontRevision',\n   'num',\n   0\n  ],\n  [\n   [\n    12,\n    33\n   ],\n   'CIDFontType',\n   'num',\n   0\n  ],\n  [\n   [\n    12,\n    34\n   ],\n   'CIDCount',\n   'num',\n   8720\n  ],\n  [\n   [\n    12,\n    35\n   ],\n   'UIDBase',\n   'num',\n   null\n  ],\n  [\n   [\n    12,\n    37\n   ],\n   'FDSelect',\n   'offset',\n   null\n  ],\n  [\n   [\n    12,\n    36\n   ],\n   'FDArray',\n   'offset',\n   null\n  ],\n  [\n   [\n    12,\n    38\n   ],\n   'FontName',\n   'sid',\n   null\n  ]\n ];\n var tables = null;\n function CFFTopDict(strings) {\n  if (tables === null) {\n   tables = CFFDict.createTables(layout);\n  }\n  CFFDict.call(this, tables, strings);\n  this.privateDict = null;\n }\n CFFTopDict.prototype = Object.create(CFFDict.prototype);\n return CFFTopDict;\n}();\nvar CFFPrivateDict = function CFFPrivateDictClosure() {\n var layout = [\n  [\n   6,\n   'BlueValues',\n   'delta',\n   null\n  ],\n  [\n   7,\n   'OtherBlues',\n   'delta',\n   null\n  ],\n  [\n   8,\n   'FamilyBlues',\n   'delta',\n   null\n  ],\n  [\n   9,\n   'FamilyOtherBlues',\n   'delta',\n   null\n  ],\n  [\n   [\n    12,\n    9\n   ],\n   'BlueScale',\n   'num',\n   0.039625\n  ],\n  [\n   [\n    12,\n    10\n   ],\n   'BlueShift',\n   'num',\n   7\n  ],\n  [\n   [\n    12,\n    11\n   ],\n   'BlueFuzz',\n   'num',\n   1\n  ],\n  [\n   10,\n   'StdHW',\n   'num',\n   null\n  ],\n  [\n   11,\n   'StdVW',\n   'num',\n   null\n  ],\n  [\n   [\n    12,\n    12\n   ],\n   'StemSnapH',\n   'delta',\n   null\n  ],\n  [\n   [\n    12,\n    13\n   ],\n   'StemSnapV',\n   'delta',\n   null\n  ],\n  [\n   [\n    12,\n    14\n   ],\n   'ForceBold',\n   'num',\n   0\n  ],\n  [\n   [\n    12,\n    17\n   ],\n   'LanguageGroup',\n   'num',\n   0\n  ],\n  [\n   [\n    12,\n    18\n   ],\n   'ExpansionFactor',\n   'num',\n   0.06\n  ],\n  [\n   [\n    12,\n    19\n   ],\n   'initialRandomSeed',\n   'num',\n   0\n  ],\n  [\n   20,\n   'defaultWidthX',\n   'num',\n   0\n  ],\n  [\n   21,\n   'nominalWidthX',\n   'num',\n   0\n  ],\n  [\n   19,\n   'Subrs',\n   'offset',\n   null\n  ]\n ];\n var tables = null;\n function CFFPrivateDict(strings) {\n  if (tables === null) {\n   tables = CFFDict.createTables(layout);\n  }\n  CFFDict.call(this, tables, strings);\n  this.subrsIndex = null;\n }\n CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\n return CFFPrivateDict;\n}();\nvar CFFCharsetPredefinedTypes = {\n ISO_ADOBE: 0,\n EXPERT: 1,\n EXPERT_SUBSET: 2\n};\nvar CFFCharset = function CFFCharsetClosure() {\n function CFFCharset(predefined, format, charset, raw) {\n  this.predefined = predefined;\n  this.format = format;\n  this.charset = charset;\n  this.raw = raw;\n }\n return CFFCharset;\n}();\nvar CFFEncoding = function CFFEncodingClosure() {\n function CFFEncoding(predefined, format, encoding, raw) {\n  this.predefined = predefined;\n  this.format = format;\n  this.encoding = encoding;\n  this.raw = raw;\n }\n return CFFEncoding;\n}();\nvar CFFFDSelect = function CFFFDSelectClosure() {\n function CFFFDSelect(fdSelect, raw) {\n  this.fdSelect = fdSelect;\n  this.raw = raw;\n }\n CFFFDSelect.prototype = {\n  getFDIndex: function CFFFDSelect_get(glyphIndex) {\n   if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\n    return -1;\n   }\n   return this.fdSelect[glyphIndex];\n  }\n };\n return CFFFDSelect;\n}();\nvar CFFOffsetTracker = function CFFOffsetTrackerClosure() {\n function CFFOffsetTracker() {\n  this.offsets = Object.create(null);\n }\n CFFOffsetTracker.prototype = {\n  isTracking: function CFFOffsetTracker_isTracking(key) {\n   return key in this.offsets;\n  },\n  track: function CFFOffsetTracker_track(key, location) {\n   if (key in this.offsets) {\n    error('Already tracking location of ' + key);\n   }\n   this.offsets[key] = location;\n  },\n  offset: function CFFOffsetTracker_offset(value) {\n   for (var key in this.offsets) {\n    this.offsets[key] += value;\n   }\n  },\n  setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\n   if (!(key in this.offsets)) {\n    error('Not tracking location of ' + key);\n   }\n   var data = output.data;\n   var dataOffset = this.offsets[key];\n   var size = 5;\n   for (var i = 0, ii = values.length; i < ii; ++i) {\n    var offset0 = i * size + dataOffset;\n    var offset1 = offset0 + 1;\n    var offset2 = offset0 + 2;\n    var offset3 = offset0 + 3;\n    var offset4 = offset0 + 4;\n    if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\n     error('writing to an offset that is not empty');\n    }\n    var value = values[i];\n    data[offset0] = 0x1d;\n    data[offset1] = value >> 24 & 0xFF;\n    data[offset2] = value >> 16 & 0xFF;\n    data[offset3] = value >> 8 & 0xFF;\n    data[offset4] = value & 0xFF;\n   }\n  }\n };\n return CFFOffsetTracker;\n}();\nvar CFFCompiler = function CFFCompilerClosure() {\n function CFFCompiler(cff) {\n  this.cff = cff;\n }\n CFFCompiler.prototype = {\n  compile: function CFFCompiler_compile() {\n   var cff = this.cff;\n   var output = {\n    data: [],\n    length: 0,\n    add: function CFFCompiler_add(data) {\n     this.data = this.data.concat(data);\n     this.length = this.data.length;\n    }\n   };\n   var header = this.compileHeader(cff.header);\n   output.add(header);\n   var nameIndex = this.compileNameIndex(cff.names);\n   output.add(nameIndex);\n   if (cff.isCIDFont) {\n    if (cff.topDict.hasName('FontMatrix')) {\n     var base = cff.topDict.getByName('FontMatrix');\n     cff.topDict.removeByName('FontMatrix');\n     for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\n      var subDict = cff.fdArray[i];\n      var matrix = base.slice(0);\n      if (subDict.hasName('FontMatrix')) {\n       matrix = Util.transform(matrix, subDict.getByName('FontMatrix'));\n      }\n      subDict.setByName('FontMatrix', matrix);\n     }\n    }\n   }\n   var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\n   output.add(compiled.output);\n   var topDictTracker = compiled.trackers[0];\n   var stringIndex = this.compileStringIndex(cff.strings.strings);\n   output.add(stringIndex);\n   var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\n   output.add(globalSubrIndex);\n   if (cff.encoding && cff.topDict.hasName('Encoding')) {\n    if (cff.encoding.predefined) {\n     topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\n    } else {\n     var encoding = this.compileEncoding(cff.encoding);\n     topDictTracker.setEntryLocation('Encoding', [output.length], output);\n     output.add(encoding);\n    }\n   }\n   if (cff.charset && cff.topDict.hasName('charset')) {\n    if (cff.charset.predefined) {\n     topDictTracker.setEntryLocation('charset', [cff.charset.format], output);\n    } else {\n     var charset = this.compileCharset(cff.charset);\n     topDictTracker.setEntryLocation('charset', [output.length], output);\n     output.add(charset);\n    }\n   }\n   var charStrings = this.compileCharStrings(cff.charStrings);\n   topDictTracker.setEntryLocation('CharStrings', [output.length], output);\n   output.add(charStrings);\n   if (cff.isCIDFont) {\n    topDictTracker.setEntryLocation('FDSelect', [output.length], output);\n    var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\n    output.add(fdSelect);\n    compiled = this.compileTopDicts(cff.fdArray, output.length, true);\n    topDictTracker.setEntryLocation('FDArray', [output.length], output);\n    output.add(compiled.output);\n    var fontDictTrackers = compiled.trackers;\n    this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\n   }\n   this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\n   output.add([0]);\n   return output.data;\n  },\n  encodeNumber: function CFFCompiler_encodeNumber(value) {\n   if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\n    return this.encodeInteger(value);\n   }\n   return this.encodeFloat(value);\n  },\n  encodeFloat: function CFFCompiler_encodeFloat(num) {\n   var value = num.toString();\n   var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n   if (m) {\n    var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n    value = (Math.round(num * epsilon) / epsilon).toString();\n   }\n   var nibbles = '';\n   var i, ii;\n   for (i = 0, ii = value.length; i < ii; ++i) {\n    var a = value[i];\n    if (a === 'e') {\n     nibbles += value[++i] === '-' ? 'c' : 'b';\n    } else if (a === '.') {\n     nibbles += 'a';\n    } else if (a === '-') {\n     nibbles += 'e';\n    } else {\n     nibbles += a;\n    }\n   }\n   nibbles += nibbles.length & 1 ? 'f' : 'ff';\n   var out = [30];\n   for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n    out.push(parseInt(nibbles.substr(i, 2), 16));\n   }\n   return out;\n  },\n  encodeInteger: function CFFCompiler_encodeInteger(value) {\n   var code;\n   if (value >= -107 && value <= 107) {\n    code = [value + 139];\n   } else if (value >= 108 && value <= 1131) {\n    value = value - 108;\n    code = [\n     (value >> 8) + 247,\n     value & 0xFF\n    ];\n   } else if (value >= -1131 && value <= -108) {\n    value = -value - 108;\n    code = [\n     (value >> 8) + 251,\n     value & 0xFF\n    ];\n   } else if (value >= -32768 && value <= 32767) {\n    code = [\n     0x1c,\n     value >> 8 & 0xFF,\n     value & 0xFF\n    ];\n   } else {\n    code = [\n     0x1d,\n     value >> 24 & 0xFF,\n     value >> 16 & 0xFF,\n     value >> 8 & 0xFF,\n     value & 0xFF\n    ];\n   }\n   return code;\n  },\n  compileHeader: function CFFCompiler_compileHeader(header) {\n   return [\n    header.major,\n    header.minor,\n    header.hdrSize,\n    header.offSize\n   ];\n  },\n  compileNameIndex: function CFFCompiler_compileNameIndex(names) {\n   var nameIndex = new CFFIndex();\n   for (var i = 0, ii = names.length; i < ii; ++i) {\n    nameIndex.add(stringToBytes(names[i]));\n   }\n   return this.compileIndex(nameIndex);\n  },\n  compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\n   var fontDictTrackers = [];\n   var fdArrayIndex = new CFFIndex();\n   for (var i = 0, ii = dicts.length; i < ii; ++i) {\n    var fontDict = dicts[i];\n    if (removeCidKeys) {\n     fontDict.removeByName('CIDFontVersion');\n     fontDict.removeByName('CIDFontRevision');\n     fontDict.removeByName('CIDFontType');\n     fontDict.removeByName('CIDCount');\n     fontDict.removeByName('UIDBase');\n    }\n    var fontDictTracker = new CFFOffsetTracker();\n    var fontDictData = this.compileDict(fontDict, fontDictTracker);\n    fontDictTrackers.push(fontDictTracker);\n    fdArrayIndex.add(fontDictData);\n    fontDictTracker.offset(length);\n   }\n   fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\n   return {\n    trackers: fontDictTrackers,\n    output: fdArrayIndex\n   };\n  },\n  compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\n   for (var i = 0, ii = dicts.length; i < ii; ++i) {\n    var fontDict = dicts[i];\n    assert(fontDict.privateDict && fontDict.hasName('Private'), 'There must be an private dictionary.');\n    var privateDict = fontDict.privateDict;\n    var privateDictTracker = new CFFOffsetTracker();\n    var privateDictData = this.compileDict(privateDict, privateDictTracker);\n    var outputLength = output.length;\n    privateDictTracker.offset(outputLength);\n    if (!privateDictData.length) {\n     outputLength = 0;\n    }\n    trackers[i].setEntryLocation('Private', [\n     privateDictData.length,\n     outputLength\n    ], output);\n    output.add(privateDictData);\n    if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\n     var subrs = this.compileIndex(privateDict.subrsIndex);\n     privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\n     output.add(subrs);\n    }\n   }\n  },\n  compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\n   var out = [];\n   var order = dict.order;\n   for (var i = 0; i < order.length; ++i) {\n    var key = order[i];\n    if (!(key in dict.values)) {\n     continue;\n    }\n    var values = dict.values[key];\n    var types = dict.types[key];\n    if (!isArray(types)) {\n     types = [types];\n    }\n    if (!isArray(values)) {\n     values = [values];\n    }\n    if (values.length === 0) {\n     continue;\n    }\n    for (var j = 0, jj = types.length; j < jj; ++j) {\n     var type = types[j];\n     var value = values[j];\n     switch (type) {\n     case 'num':\n     case 'sid':\n      out = out.concat(this.encodeNumber(value));\n      break;\n     case 'offset':\n      var name = dict.keyToNameMap[key];\n      if (!offsetTracker.isTracking(name)) {\n       offsetTracker.track(name, out.length);\n      }\n      out = out.concat([\n       0x1d,\n       0,\n       0,\n       0,\n       0\n      ]);\n      break;\n     case 'array':\n     case 'delta':\n      out = out.concat(this.encodeNumber(value));\n      for (var k = 1, kk = values.length; k < kk; ++k) {\n       out = out.concat(this.encodeNumber(values[k]));\n      }\n      break;\n     default:\n      error('Unknown data type of ' + type);\n      break;\n     }\n    }\n    out = out.concat(dict.opcodes[key]);\n   }\n   return out;\n  },\n  compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\n   var stringIndex = new CFFIndex();\n   for (var i = 0, ii = strings.length; i < ii; ++i) {\n    stringIndex.add(stringToBytes(strings[i]));\n   }\n   return this.compileIndex(stringIndex);\n  },\n  compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\n   var globalSubrIndex = this.cff.globalSubrIndex;\n   this.out.writeByteArray(this.compileIndex(globalSubrIndex));\n  },\n  compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\n   return this.compileIndex(charStrings);\n  },\n  compileCharset: function CFFCompiler_compileCharset(charset) {\n   return this.compileTypedArray(charset.raw);\n  },\n  compileEncoding: function CFFCompiler_compileEncoding(encoding) {\n   return this.compileTypedArray(encoding.raw);\n  },\n  compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\n   return this.compileTypedArray(fdSelect);\n  },\n  compileTypedArray: function CFFCompiler_compileTypedArray(data) {\n   var out = [];\n   for (var i = 0, ii = data.length; i < ii; ++i) {\n    out[i] = data[i];\n   }\n   return out;\n  },\n  compileIndex: function CFFCompiler_compileIndex(index, trackers) {\n   trackers = trackers || [];\n   var objects = index.objects;\n   var count = objects.length;\n   if (count === 0) {\n    return [\n     0,\n     0,\n     0\n    ];\n   }\n   var data = [\n    count >> 8 & 0xFF,\n    count & 0xff\n   ];\n   var lastOffset = 1, i;\n   for (i = 0; i < count; ++i) {\n    lastOffset += objects[i].length;\n   }\n   var offsetSize;\n   if (lastOffset < 0x100) {\n    offsetSize = 1;\n   } else if (lastOffset < 0x10000) {\n    offsetSize = 2;\n   } else if (lastOffset < 0x1000000) {\n    offsetSize = 3;\n   } else {\n    offsetSize = 4;\n   }\n   data.push(offsetSize);\n   var relativeOffset = 1;\n   for (i = 0; i < count + 1; i++) {\n    if (offsetSize === 1) {\n     data.push(relativeOffset & 0xFF);\n    } else if (offsetSize === 2) {\n     data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n    } else if (offsetSize === 3) {\n     data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n    } else {\n     data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n    }\n    if (objects[i]) {\n     relativeOffset += objects[i].length;\n    }\n   }\n   for (i = 0; i < count; i++) {\n    if (trackers[i]) {\n     trackers[i].offset(data.length);\n    }\n    for (var j = 0, jj = objects[i].length; j < jj; j++) {\n     data.push(objects[i][j]);\n    }\n   }\n   return data;\n  }\n };\n return CFFCompiler;\n}();\nexports.CFFStandardStrings = CFFStandardStrings;\nexports.CFFParser = CFFParser;\nexports.CFF = CFF;\nexports.CFFHeader = CFFHeader;\nexports.CFFStrings = CFFStrings;\nexports.CFFIndex = CFFIndex;\nexports.CFFCharset = CFFCharset;\nexports.CFFTopDict = CFFTopDict;\nexports.CFFPrivateDict = CFFPrivateDict;\nexports.CFFCompiler = CFFCompiler;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar MissingDataException = sharedUtil.MissingDataException;\nvar arrayByteLength = sharedUtil.arrayByteLength;\nvar arraysToBytes = sharedUtil.arraysToBytes;\nvar assert = sharedUtil.assert;\nvar createPromiseCapability = sharedUtil.createPromiseCapability;\nvar isInt = sharedUtil.isInt;\nvar isEmptyObj = sharedUtil.isEmptyObj;\nvar ChunkedStream = function ChunkedStreamClosure() {\n function ChunkedStream(length, chunkSize, manager) {\n  this.bytes = new Uint8Array(length);\n  this.start = 0;\n  this.pos = 0;\n  this.end = length;\n  this.chunkSize = chunkSize;\n  this.loadedChunks = [];\n  this.numChunksLoaded = 0;\n  this.numChunks = Math.ceil(length / chunkSize);\n  this.manager = manager;\n  this.progressiveDataLength = 0;\n  this.lastSuccessfulEnsureByteChunk = -1;\n }\n ChunkedStream.prototype = {\n  getMissingChunks: function ChunkedStream_getMissingChunks() {\n   var chunks = [];\n   for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\n    if (!this.loadedChunks[chunk]) {\n     chunks.push(chunk);\n    }\n   }\n   return chunks;\n  },\n  getBaseStreams: function ChunkedStream_getBaseStreams() {\n   return [this];\n  },\n  allChunksLoaded: function ChunkedStream_allChunksLoaded() {\n   return this.numChunksLoaded === this.numChunks;\n  },\n  onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\n   var end = begin + chunk.byteLength;\n   assert(begin % this.chunkSize === 0, 'Bad begin offset: ' + begin);\n   var length = this.bytes.length;\n   assert(end % this.chunkSize === 0 || end === length, 'Bad end offset: ' + end);\n   this.bytes.set(new Uint8Array(chunk), begin);\n   var chunkSize = this.chunkSize;\n   var beginChunk = Math.floor(begin / chunkSize);\n   var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n   var curChunk;\n   for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n    if (!this.loadedChunks[curChunk]) {\n     this.loadedChunks[curChunk] = true;\n     ++this.numChunksLoaded;\n    }\n   }\n  },\n  onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {\n   var position = this.progressiveDataLength;\n   var beginChunk = Math.floor(position / this.chunkSize);\n   this.bytes.set(new Uint8Array(data), position);\n   position += data.byteLength;\n   this.progressiveDataLength = position;\n   var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\n   var curChunk;\n   for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n    if (!this.loadedChunks[curChunk]) {\n     this.loadedChunks[curChunk] = true;\n     ++this.numChunksLoaded;\n    }\n   }\n  },\n  ensureByte: function ChunkedStream_ensureByte(pos) {\n   var chunk = Math.floor(pos / this.chunkSize);\n   if (chunk === this.lastSuccessfulEnsureByteChunk) {\n    return;\n   }\n   if (!this.loadedChunks[chunk]) {\n    throw new MissingDataException(pos, pos + 1);\n   }\n   this.lastSuccessfulEnsureByteChunk = chunk;\n  },\n  ensureRange: function ChunkedStream_ensureRange(begin, end) {\n   if (begin >= end) {\n    return;\n   }\n   if (end <= this.progressiveDataLength) {\n    return;\n   }\n   var chunkSize = this.chunkSize;\n   var beginChunk = Math.floor(begin / chunkSize);\n   var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n   for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n    if (!this.loadedChunks[chunk]) {\n     throw new MissingDataException(begin, end);\n    }\n   }\n  },\n  nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\n   var chunk, numChunks = this.numChunks;\n   for (var i = 0; i < numChunks; ++i) {\n    chunk = (beginChunk + i) % numChunks;\n    if (!this.loadedChunks[chunk]) {\n     return chunk;\n    }\n   }\n   return null;\n  },\n  hasChunk: function ChunkedStream_hasChunk(chunk) {\n   return !!this.loadedChunks[chunk];\n  },\n  get length() {\n   return this.end - this.start;\n  },\n  get isEmpty() {\n   return this.length === 0;\n  },\n  getByte: function ChunkedStream_getByte() {\n   var pos = this.pos;\n   if (pos >= this.end) {\n    return -1;\n   }\n   this.ensureByte(pos);\n   return this.bytes[this.pos++];\n  },\n  getUint16: function ChunkedStream_getUint16() {\n   var b0 = this.getByte();\n   var b1 = this.getByte();\n   if (b0 === -1 || b1 === -1) {\n    return -1;\n   }\n   return (b0 << 8) + b1;\n  },\n  getInt32: function ChunkedStream_getInt32() {\n   var b0 = this.getByte();\n   var b1 = this.getByte();\n   var b2 = this.getByte();\n   var b3 = this.getByte();\n   return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  },\n  getBytes: function ChunkedStream_getBytes(length) {\n   var bytes = this.bytes;\n   var pos = this.pos;\n   var strEnd = this.end;\n   if (!length) {\n    this.ensureRange(pos, strEnd);\n    return bytes.subarray(pos, strEnd);\n   }\n   var end = pos + length;\n   if (end > strEnd) {\n    end = strEnd;\n   }\n   this.ensureRange(pos, end);\n   this.pos = end;\n   return bytes.subarray(pos, end);\n  },\n  peekByte: function ChunkedStream_peekByte() {\n   var peekedByte = this.getByte();\n   this.pos--;\n   return peekedByte;\n  },\n  peekBytes: function ChunkedStream_peekBytes(length) {\n   var bytes = this.getBytes(length);\n   this.pos -= bytes.length;\n   return bytes;\n  },\n  getByteRange: function ChunkedStream_getBytes(begin, end) {\n   this.ensureRange(begin, end);\n   return this.bytes.subarray(begin, end);\n  },\n  skip: function ChunkedStream_skip(n) {\n   if (!n) {\n    n = 1;\n   }\n   this.pos += n;\n  },\n  reset: function ChunkedStream_reset() {\n   this.pos = this.start;\n  },\n  moveStart: function ChunkedStream_moveStart() {\n   this.start = this.pos;\n  },\n  makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\n   this.ensureRange(start, start + length);\n   function ChunkedStreamSubstream() {\n   }\n   ChunkedStreamSubstream.prototype = Object.create(this);\n   ChunkedStreamSubstream.prototype.getMissingChunks = function () {\n    var chunkSize = this.chunkSize;\n    var beginChunk = Math.floor(this.start / chunkSize);\n    var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\n    var missingChunks = [];\n    for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n     if (!this.loadedChunks[chunk]) {\n      missingChunks.push(chunk);\n     }\n    }\n    return missingChunks;\n   };\n   var subStream = new ChunkedStreamSubstream();\n   subStream.pos = subStream.start = start;\n   subStream.end = start + length || this.end;\n   subStream.dict = dict;\n   return subStream;\n  }\n };\n return ChunkedStream;\n}();\nvar ChunkedStreamManager = function ChunkedStreamManagerClosure() {\n function ChunkedStreamManager(pdfNetworkStream, args) {\n  var chunkSize = args.rangeChunkSize;\n  var length = args.length;\n  this.stream = new ChunkedStream(length, chunkSize, this);\n  this.length = length;\n  this.chunkSize = chunkSize;\n  this.pdfNetworkStream = pdfNetworkStream;\n  this.url = args.url;\n  this.disableAutoFetch = args.disableAutoFetch;\n  this.msgHandler = args.msgHandler;\n  this.currRequestId = 0;\n  this.chunksNeededByRequest = Object.create(null);\n  this.requestsByChunk = Object.create(null);\n  this.promisesByRequest = Object.create(null);\n  this.progressiveDataLength = 0;\n  this.aborted = false;\n  this._loadedStreamCapability = createPromiseCapability();\n }\n ChunkedStreamManager.prototype = {\n  onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\n   return this._loadedStreamCapability.promise;\n  },\n  sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {\n   var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\n   if (!rangeReader.isStreamingSupported) {\n    rangeReader.onProgress = this.onProgress.bind(this);\n   }\n   var chunks = [], loaded = 0;\n   var manager = this;\n   var promise = new Promise(function (resolve, reject) {\n    var readChunk = function (chunk) {\n     try {\n      if (!chunk.done) {\n       var data = chunk.value;\n       chunks.push(data);\n       loaded += arrayByteLength(data);\n       if (rangeReader.isStreamingSupported) {\n        manager.onProgress({ loaded: loaded });\n       }\n       rangeReader.read().then(readChunk, reject);\n       return;\n      }\n      var chunkData = arraysToBytes(chunks);\n      chunks = null;\n      resolve(chunkData);\n     } catch (e) {\n      reject(e);\n     }\n    };\n    rangeReader.read().then(readChunk, reject);\n   });\n   promise.then(function (data) {\n    if (this.aborted) {\n     return;\n    }\n    this.onReceiveData({\n     chunk: data,\n     begin: begin\n    });\n   }.bind(this));\n  },\n  requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\n   var missingChunks = this.stream.getMissingChunks();\n   this._requestChunks(missingChunks);\n   return this._loadedStreamCapability.promise;\n  },\n  _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {\n   var requestId = this.currRequestId++;\n   var i, ii;\n   var chunksNeeded = Object.create(null);\n   this.chunksNeededByRequest[requestId] = chunksNeeded;\n   for (i = 0, ii = chunks.length; i < ii; i++) {\n    if (!this.stream.hasChunk(chunks[i])) {\n     chunksNeeded[chunks[i]] = true;\n    }\n   }\n   if (isEmptyObj(chunksNeeded)) {\n    return Promise.resolve();\n   }\n   var capability = createPromiseCapability();\n   this.promisesByRequest[requestId] = capability;\n   var chunksToRequest = [];\n   for (var chunk in chunksNeeded) {\n    chunk = chunk | 0;\n    if (!(chunk in this.requestsByChunk)) {\n     this.requestsByChunk[chunk] = [];\n     chunksToRequest.push(chunk);\n    }\n    this.requestsByChunk[chunk].push(requestId);\n   }\n   if (!chunksToRequest.length) {\n    return capability.promise;\n   }\n   var groupedChunksToRequest = this.groupChunks(chunksToRequest);\n   for (i = 0; i < groupedChunksToRequest.length; ++i) {\n    var groupedChunk = groupedChunksToRequest[i];\n    var begin = groupedChunk.beginChunk * this.chunkSize;\n    var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\n    this.sendRequest(begin, end);\n   }\n   return capability.promise;\n  },\n  getStream: function ChunkedStreamManager_getStream() {\n   return this.stream;\n  },\n  requestRange: function ChunkedStreamManager_requestRange(begin, end) {\n   end = Math.min(end, this.length);\n   var beginChunk = this.getBeginChunk(begin);\n   var endChunk = this.getEndChunk(end);\n   var chunks = [];\n   for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n    chunks.push(chunk);\n   }\n   return this._requestChunks(chunks);\n  },\n  requestRanges: function ChunkedStreamManager_requestRanges(ranges) {\n   ranges = ranges || [];\n   var chunksToRequest = [];\n   for (var i = 0; i < ranges.length; i++) {\n    var beginChunk = this.getBeginChunk(ranges[i].begin);\n    var endChunk = this.getEndChunk(ranges[i].end);\n    for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n     if (chunksToRequest.indexOf(chunk) < 0) {\n      chunksToRequest.push(chunk);\n     }\n    }\n   }\n   chunksToRequest.sort(function (a, b) {\n    return a - b;\n   });\n   return this._requestChunks(chunksToRequest);\n  },\n  groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\n   var groupedChunks = [];\n   var beginChunk = -1;\n   var prevChunk = -1;\n   for (var i = 0; i < chunks.length; ++i) {\n    var chunk = chunks[i];\n    if (beginChunk < 0) {\n     beginChunk = chunk;\n    }\n    if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\n     groupedChunks.push({\n      beginChunk: beginChunk,\n      endChunk: prevChunk + 1\n     });\n     beginChunk = chunk;\n    }\n    if (i + 1 === chunks.length) {\n     groupedChunks.push({\n      beginChunk: beginChunk,\n      endChunk: chunk + 1\n     });\n    }\n    prevChunk = chunk;\n   }\n   return groupedChunks;\n  },\n  onProgress: function ChunkedStreamManager_onProgress(args) {\n   var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;\n   this.msgHandler.send('DocProgress', {\n    loaded: bytesLoaded,\n    total: this.length\n   });\n  },\n  onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\n   var chunk = args.chunk;\n   var isProgressive = args.begin === undefined;\n   var begin = isProgressive ? this.progressiveDataLength : args.begin;\n   var end = begin + chunk.byteLength;\n   var beginChunk = Math.floor(begin / this.chunkSize);\n   var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\n   if (isProgressive) {\n    this.stream.onReceiveProgressiveData(chunk);\n    this.progressiveDataLength = end;\n   } else {\n    this.stream.onReceiveData(begin, chunk);\n   }\n   if (this.stream.allChunksLoaded()) {\n    this._loadedStreamCapability.resolve(this.stream);\n   }\n   var loadedRequests = [];\n   var i, requestId;\n   for (chunk = beginChunk; chunk < endChunk; ++chunk) {\n    var requestIds = this.requestsByChunk[chunk] || [];\n    delete this.requestsByChunk[chunk];\n    for (i = 0; i < requestIds.length; ++i) {\n     requestId = requestIds[i];\n     var chunksNeeded = this.chunksNeededByRequest[requestId];\n     if (chunk in chunksNeeded) {\n      delete chunksNeeded[chunk];\n     }\n     if (!isEmptyObj(chunksNeeded)) {\n      continue;\n     }\n     loadedRequests.push(requestId);\n    }\n   }\n   if (!this.disableAutoFetch && isEmptyObj(this.requestsByChunk)) {\n    var nextEmptyChunk;\n    if (this.stream.numChunksLoaded === 1) {\n     var lastChunk = this.stream.numChunks - 1;\n     if (!this.stream.hasChunk(lastChunk)) {\n      nextEmptyChunk = lastChunk;\n     }\n    } else {\n     nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\n    }\n    if (isInt(nextEmptyChunk)) {\n     this._requestChunks([nextEmptyChunk]);\n    }\n   }\n   for (i = 0; i < loadedRequests.length; ++i) {\n    requestId = loadedRequests[i];\n    var capability = this.promisesByRequest[requestId];\n    delete this.promisesByRequest[requestId];\n    capability.resolve();\n   }\n   this.msgHandler.send('DocProgress', {\n    loaded: this.stream.numChunksLoaded * this.chunkSize,\n    total: this.length\n   });\n  },\n  onError: function ChunkedStreamManager_onError(err) {\n   this._loadedStreamCapability.reject(err);\n  },\n  getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\n   var chunk = Math.floor(begin / this.chunkSize);\n   return chunk;\n  },\n  getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\n   var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\n   return chunk;\n  },\n  abort: function ChunkedStreamManager_abort() {\n   this.aborted = true;\n   if (this.pdfNetworkStream) {\n    this.pdfNetworkStream.cancelAllRequests('abort');\n   }\n   for (var requestId in this.promisesByRequest) {\n    var capability = this.promisesByRequest[requestId];\n    capability.reject(new Error('Request was aborted'));\n   }\n  }\n };\n return ChunkedStreamManager;\n}();\nexports.ChunkedStream = ChunkedStream;\nexports.ChunkedStreamManager = ChunkedStreamManager;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar coreStream = __w_pdfjs_require__(2);\nvar PasswordException = sharedUtil.PasswordException;\nvar PasswordResponses = sharedUtil.PasswordResponses;\nvar bytesToString = sharedUtil.bytesToString;\nvar warn = sharedUtil.warn;\nvar error = sharedUtil.error;\nvar assert = sharedUtil.assert;\nvar isInt = sharedUtil.isInt;\nvar stringToBytes = sharedUtil.stringToBytes;\nvar utf8StringToString = sharedUtil.utf8StringToString;\nvar Name = corePrimitives.Name;\nvar isName = corePrimitives.isName;\nvar isDict = corePrimitives.isDict;\nvar DecryptStream = coreStream.DecryptStream;\nvar ARCFourCipher = function ARCFourCipherClosure() {\n function ARCFourCipher(key) {\n  this.a = 0;\n  this.b = 0;\n  var s = new Uint8Array(256);\n  var i, j = 0, tmp, keyLength = key.length;\n  for (i = 0; i < 256; ++i) {\n   s[i] = i;\n  }\n  for (i = 0; i < 256; ++i) {\n   tmp = s[i];\n   j = j + tmp + key[i % keyLength] & 0xFF;\n   s[i] = s[j];\n   s[j] = tmp;\n  }\n  this.s = s;\n }\n ARCFourCipher.prototype = {\n  encryptBlock: function ARCFourCipher_encryptBlock(data) {\n   var i, n = data.length, tmp, tmp2;\n   var a = this.a, b = this.b, s = this.s;\n   var output = new Uint8Array(n);\n   for (i = 0; i < n; ++i) {\n    a = a + 1 & 0xFF;\n    tmp = s[a];\n    b = b + tmp & 0xFF;\n    tmp2 = s[b];\n    s[a] = tmp2;\n    s[b] = tmp;\n    output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\n   }\n   this.a = a;\n   this.b = b;\n   return output;\n  }\n };\n ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\n return ARCFourCipher;\n}();\nvar calculateMD5 = function calculateMD5Closure() {\n var r = new Uint8Array([\n  7,\n  12,\n  17,\n  22,\n  7,\n  12,\n  17,\n  22,\n  7,\n  12,\n  17,\n  22,\n  7,\n  12,\n  17,\n  22,\n  5,\n  9,\n  14,\n  20,\n  5,\n  9,\n  14,\n  20,\n  5,\n  9,\n  14,\n  20,\n  5,\n  9,\n  14,\n  20,\n  4,\n  11,\n  16,\n  23,\n  4,\n  11,\n  16,\n  23,\n  4,\n  11,\n  16,\n  23,\n  4,\n  11,\n  16,\n  23,\n  6,\n  10,\n  15,\n  21,\n  6,\n  10,\n  15,\n  21,\n  6,\n  10,\n  15,\n  21,\n  6,\n  10,\n  15,\n  21\n ]);\n var k = new Int32Array([\n  -680876936,\n  -389564586,\n  606105819,\n  -1044525330,\n  -176418897,\n  1200080426,\n  -1473231341,\n  -45705983,\n  1770035416,\n  -1958414417,\n  -42063,\n  -1990404162,\n  1804603682,\n  -40341101,\n  -1502002290,\n  1236535329,\n  -165796510,\n  -1069501632,\n  643717713,\n  -373897302,\n  -701558691,\n  38016083,\n  -660478335,\n  -405537848,\n  568446438,\n  -1019803690,\n  -187363961,\n  1163531501,\n  -1444681467,\n  -51403784,\n  1735328473,\n  -1926607734,\n  -378558,\n  -2022574463,\n  1839030562,\n  -35309556,\n  -1530992060,\n  1272893353,\n  -155497632,\n  -1094730640,\n  681279174,\n  -358537222,\n  -722521979,\n  76029189,\n  -640364487,\n  -421815835,\n  530742520,\n  -995338651,\n  -198630844,\n  1126891415,\n  -1416354905,\n  -57434055,\n  1700485571,\n  -1894986606,\n  -1051523,\n  -2054922799,\n  1873313359,\n  -30611744,\n  -1560198380,\n  1309151649,\n  -145523070,\n  -1120210379,\n  718787259,\n  -343485551\n ]);\n function hash(data, offset, length) {\n  var h0 = 1732584193, h1 = -271733879, h2 = -1732584194, h3 = 271733878;\n  var paddedLength = length + 72 & ~63;\n  var padded = new Uint8Array(paddedLength);\n  var i, j, n;\n  for (i = 0; i < length; ++i) {\n   padded[i] = data[offset++];\n  }\n  padded[i++] = 0x80;\n  n = paddedLength - 8;\n  while (i < n) {\n   padded[i++] = 0;\n  }\n  padded[i++] = length << 3 & 0xFF;\n  padded[i++] = length >> 5 & 0xFF;\n  padded[i++] = length >> 13 & 0xFF;\n  padded[i++] = length >> 21 & 0xFF;\n  padded[i++] = length >>> 29 & 0xFF;\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = 0;\n  var w = new Int32Array(16);\n  for (i = 0; i < paddedLength;) {\n   for (j = 0; j < 16; ++j, i += 4) {\n    w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\n   }\n   var a = h0, b = h1, c = h2, d = h3, f, g;\n   for (j = 0; j < 64; ++j) {\n    if (j < 16) {\n     f = b & c | ~b & d;\n     g = j;\n    } else if (j < 32) {\n     f = d & b | ~d & c;\n     g = 5 * j + 1 & 15;\n    } else if (j < 48) {\n     f = b ^ c ^ d;\n     g = 3 * j + 5 & 15;\n    } else {\n     f = c ^ (b | ~d);\n     g = 7 * j & 15;\n    }\n    var tmp = d, rotateArg = a + f + k[j] + w[g] | 0, rotate = r[j];\n    d = c;\n    c = b;\n    b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\n    a = tmp;\n   }\n   h0 = h0 + a | 0;\n   h1 = h1 + b | 0;\n   h2 = h2 + c | 0;\n   h3 = h3 + d | 0;\n  }\n  return new Uint8Array([\n   h0 & 0xFF,\n   h0 >> 8 & 0xFF,\n   h0 >> 16 & 0xFF,\n   h0 >>> 24 & 0xFF,\n   h1 & 0xFF,\n   h1 >> 8 & 0xFF,\n   h1 >> 16 & 0xFF,\n   h1 >>> 24 & 0xFF,\n   h2 & 0xFF,\n   h2 >> 8 & 0xFF,\n   h2 >> 16 & 0xFF,\n   h2 >>> 24 & 0xFF,\n   h3 & 0xFF,\n   h3 >> 8 & 0xFF,\n   h3 >> 16 & 0xFF,\n   h3 >>> 24 & 0xFF\n  ]);\n }\n return hash;\n}();\nvar Word64 = function Word64Closure() {\n function Word64(highInteger, lowInteger) {\n  this.high = highInteger | 0;\n  this.low = lowInteger | 0;\n }\n Word64.prototype = {\n  and: function Word64_and(word) {\n   this.high &= word.high;\n   this.low &= word.low;\n  },\n  xor: function Word64_xor(word) {\n   this.high ^= word.high;\n   this.low ^= word.low;\n  },\n  or: function Word64_or(word) {\n   this.high |= word.high;\n   this.low |= word.low;\n  },\n  shiftRight: function Word64_shiftRight(places) {\n   if (places >= 32) {\n    this.low = this.high >>> places - 32 | 0;\n    this.high = 0;\n   } else {\n    this.low = this.low >>> places | this.high << 32 - places;\n    this.high = this.high >>> places | 0;\n   }\n  },\n  shiftLeft: function Word64_shiftLeft(places) {\n   if (places >= 32) {\n    this.high = this.low << places - 32;\n    this.low = 0;\n   } else {\n    this.high = this.high << places | this.low >>> 32 - places;\n    this.low = this.low << places;\n   }\n  },\n  rotateRight: function Word64_rotateRight(places) {\n   var low, high;\n   if (places & 32) {\n    high = this.low;\n    low = this.high;\n   } else {\n    low = this.low;\n    high = this.high;\n   }\n   places &= 31;\n   this.low = low >>> places | high << 32 - places;\n   this.high = high >>> places | low << 32 - places;\n  },\n  not: function Word64_not() {\n   this.high = ~this.high;\n   this.low = ~this.low;\n  },\n  add: function Word64_add(word) {\n   var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n   var highAdd = (this.high >>> 0) + (word.high >>> 0);\n   if (lowAdd > 0xFFFFFFFF) {\n    highAdd += 1;\n   }\n   this.low = lowAdd | 0;\n   this.high = highAdd | 0;\n  },\n  copyTo: function Word64_copyTo(bytes, offset) {\n   bytes[offset] = this.high >>> 24 & 0xFF;\n   bytes[offset + 1] = this.high >> 16 & 0xFF;\n   bytes[offset + 2] = this.high >> 8 & 0xFF;\n   bytes[offset + 3] = this.high & 0xFF;\n   bytes[offset + 4] = this.low >>> 24 & 0xFF;\n   bytes[offset + 5] = this.low >> 16 & 0xFF;\n   bytes[offset + 6] = this.low >> 8 & 0xFF;\n   bytes[offset + 7] = this.low & 0xFF;\n  },\n  assign: function Word64_assign(word) {\n   this.high = word.high;\n   this.low = word.low;\n  }\n };\n return Word64;\n}();\nvar calculateSHA256 = function calculateSHA256Closure() {\n function rotr(x, n) {\n  return x >>> n | x << 32 - n;\n }\n function ch(x, y, z) {\n  return x & y ^ ~x & z;\n }\n function maj(x, y, z) {\n  return x & y ^ x & z ^ y & z;\n }\n function sigma(x) {\n  return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\n }\n function sigmaPrime(x) {\n  return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\n }\n function littleSigma(x) {\n  return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\n }\n function littleSigmaPrime(x) {\n  return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\n }\n var k = [\n  0x428a2f98,\n  0x71374491,\n  0xb5c0fbcf,\n  0xe9b5dba5,\n  0x3956c25b,\n  0x59f111f1,\n  0x923f82a4,\n  0xab1c5ed5,\n  0xd807aa98,\n  0x12835b01,\n  0x243185be,\n  0x550c7dc3,\n  0x72be5d74,\n  0x80deb1fe,\n  0x9bdc06a7,\n  0xc19bf174,\n  0xe49b69c1,\n  0xefbe4786,\n  0x0fc19dc6,\n  0x240ca1cc,\n  0x2de92c6f,\n  0x4a7484aa,\n  0x5cb0a9dc,\n  0x76f988da,\n  0x983e5152,\n  0xa831c66d,\n  0xb00327c8,\n  0xbf597fc7,\n  0xc6e00bf3,\n  0xd5a79147,\n  0x06ca6351,\n  0x14292967,\n  0x27b70a85,\n  0x2e1b2138,\n  0x4d2c6dfc,\n  0x53380d13,\n  0x650a7354,\n  0x766a0abb,\n  0x81c2c92e,\n  0x92722c85,\n  0xa2bfe8a1,\n  0xa81a664b,\n  0xc24b8b70,\n  0xc76c51a3,\n  0xd192e819,\n  0xd6990624,\n  0xf40e3585,\n  0x106aa070,\n  0x19a4c116,\n  0x1e376c08,\n  0x2748774c,\n  0x34b0bcb5,\n  0x391c0cb3,\n  0x4ed8aa4a,\n  0x5b9cca4f,\n  0x682e6ff3,\n  0x748f82ee,\n  0x78a5636f,\n  0x84c87814,\n  0x8cc70208,\n  0x90befffa,\n  0xa4506ceb,\n  0xbef9a3f7,\n  0xc67178f2\n ];\n function hash(data, offset, length) {\n  var h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a, h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19;\n  var paddedLength = Math.ceil((length + 9) / 64) * 64;\n  var padded = new Uint8Array(paddedLength);\n  var i, j, n;\n  for (i = 0; i < length; ++i) {\n   padded[i] = data[offset++];\n  }\n  padded[i++] = 0x80;\n  n = paddedLength - 8;\n  while (i < n) {\n   padded[i++] = 0;\n  }\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = length >>> 29 & 0xFF;\n  padded[i++] = length >> 21 & 0xFF;\n  padded[i++] = length >> 13 & 0xFF;\n  padded[i++] = length >> 5 & 0xFF;\n  padded[i++] = length << 3 & 0xFF;\n  var w = new Uint32Array(64);\n  for (i = 0; i < paddedLength;) {\n   for (j = 0; j < 16; ++j) {\n    w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n    i += 4;\n   }\n   for (j = 16; j < 64; ++j) {\n    w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\n   }\n   var a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, t1, t2;\n   for (j = 0; j < 64; ++j) {\n    t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\n    t2 = sigma(a) + maj(a, b, c);\n    h = g;\n    g = f;\n    f = e;\n    e = d + t1 | 0;\n    d = c;\n    c = b;\n    b = a;\n    a = t1 + t2 | 0;\n   }\n   h0 = h0 + a | 0;\n   h1 = h1 + b | 0;\n   h2 = h2 + c | 0;\n   h3 = h3 + d | 0;\n   h4 = h4 + e | 0;\n   h5 = h5 + f | 0;\n   h6 = h6 + g | 0;\n   h7 = h7 + h | 0;\n  }\n  return new Uint8Array([\n   h0 >> 24 & 0xFF,\n   h0 >> 16 & 0xFF,\n   h0 >> 8 & 0xFF,\n   h0 & 0xFF,\n   h1 >> 24 & 0xFF,\n   h1 >> 16 & 0xFF,\n   h1 >> 8 & 0xFF,\n   h1 & 0xFF,\n   h2 >> 24 & 0xFF,\n   h2 >> 16 & 0xFF,\n   h2 >> 8 & 0xFF,\n   h2 & 0xFF,\n   h3 >> 24 & 0xFF,\n   h3 >> 16 & 0xFF,\n   h3 >> 8 & 0xFF,\n   h3 & 0xFF,\n   h4 >> 24 & 0xFF,\n   h4 >> 16 & 0xFF,\n   h4 >> 8 & 0xFF,\n   h4 & 0xFF,\n   h5 >> 24 & 0xFF,\n   h5 >> 16 & 0xFF,\n   h5 >> 8 & 0xFF,\n   h5 & 0xFF,\n   h6 >> 24 & 0xFF,\n   h6 >> 16 & 0xFF,\n   h6 >> 8 & 0xFF,\n   h6 & 0xFF,\n   h7 >> 24 & 0xFF,\n   h7 >> 16 & 0xFF,\n   h7 >> 8 & 0xFF,\n   h7 & 0xFF\n  ]);\n }\n return hash;\n}();\nvar calculateSHA512 = function calculateSHA512Closure() {\n function ch(result, x, y, z, tmp) {\n  result.assign(x);\n  result.and(y);\n  tmp.assign(x);\n  tmp.not();\n  tmp.and(z);\n  result.xor(tmp);\n }\n function maj(result, x, y, z, tmp) {\n  result.assign(x);\n  result.and(y);\n  tmp.assign(x);\n  tmp.and(z);\n  result.xor(tmp);\n  tmp.assign(y);\n  tmp.and(z);\n  result.xor(tmp);\n }\n function sigma(result, x, tmp) {\n  result.assign(x);\n  result.rotateRight(28);\n  tmp.assign(x);\n  tmp.rotateRight(34);\n  result.xor(tmp);\n  tmp.assign(x);\n  tmp.rotateRight(39);\n  result.xor(tmp);\n }\n function sigmaPrime(result, x, tmp) {\n  result.assign(x);\n  result.rotateRight(14);\n  tmp.assign(x);\n  tmp.rotateRight(18);\n  result.xor(tmp);\n  tmp.assign(x);\n  tmp.rotateRight(41);\n  result.xor(tmp);\n }\n function littleSigma(result, x, tmp) {\n  result.assign(x);\n  result.rotateRight(1);\n  tmp.assign(x);\n  tmp.rotateRight(8);\n  result.xor(tmp);\n  tmp.assign(x);\n  tmp.shiftRight(7);\n  result.xor(tmp);\n }\n function littleSigmaPrime(result, x, tmp) {\n  result.assign(x);\n  result.rotateRight(19);\n  tmp.assign(x);\n  tmp.rotateRight(61);\n  result.xor(tmp);\n  tmp.assign(x);\n  tmp.shiftRight(6);\n  result.xor(tmp);\n }\n var k = [\n  new Word64(0x428a2f98, 0xd728ae22),\n  new Word64(0x71374491, 0x23ef65cd),\n  new Word64(0xb5c0fbcf, 0xec4d3b2f),\n  new Word64(0xe9b5dba5, 0x8189dbbc),\n  new Word64(0x3956c25b, 0xf348b538),\n  new Word64(0x59f111f1, 0xb605d019),\n  new Word64(0x923f82a4, 0xaf194f9b),\n  new Word64(0xab1c5ed5, 0xda6d8118),\n  new Word64(0xd807aa98, 0xa3030242),\n  new Word64(0x12835b01, 0x45706fbe),\n  new Word64(0x243185be, 0x4ee4b28c),\n  new Word64(0x550c7dc3, 0xd5ffb4e2),\n  new Word64(0x72be5d74, 0xf27b896f),\n  new Word64(0x80deb1fe, 0x3b1696b1),\n  new Word64(0x9bdc06a7, 0x25c71235),\n  new Word64(0xc19bf174, 0xcf692694),\n  new Word64(0xe49b69c1, 0x9ef14ad2),\n  new Word64(0xefbe4786, 0x384f25e3),\n  new Word64(0x0fc19dc6, 0x8b8cd5b5),\n  new Word64(0x240ca1cc, 0x77ac9c65),\n  new Word64(0x2de92c6f, 0x592b0275),\n  new Word64(0x4a7484aa, 0x6ea6e483),\n  new Word64(0x5cb0a9dc, 0xbd41fbd4),\n  new Word64(0x76f988da, 0x831153b5),\n  new Word64(0x983e5152, 0xee66dfab),\n  new Word64(0xa831c66d, 0x2db43210),\n  new Word64(0xb00327c8, 0x98fb213f),\n  new Word64(0xbf597fc7, 0xbeef0ee4),\n  new Word64(0xc6e00bf3, 0x3da88fc2),\n  new Word64(0xd5a79147, 0x930aa725),\n  new Word64(0x06ca6351, 0xe003826f),\n  new Word64(0x14292967, 0x0a0e6e70),\n  new Word64(0x27b70a85, 0x46d22ffc),\n  new Word64(0x2e1b2138, 0x5c26c926),\n  new Word64(0x4d2c6dfc, 0x5ac42aed),\n  new Word64(0x53380d13, 0x9d95b3df),\n  new Word64(0x650a7354, 0x8baf63de),\n  new Word64(0x766a0abb, 0x3c77b2a8),\n  new Word64(0x81c2c92e, 0x47edaee6),\n  new Word64(0x92722c85, 0x1482353b),\n  new Word64(0xa2bfe8a1, 0x4cf10364),\n  new Word64(0xa81a664b, 0xbc423001),\n  new Word64(0xc24b8b70, 0xd0f89791),\n  new Word64(0xc76c51a3, 0x0654be30),\n  new Word64(0xd192e819, 0xd6ef5218),\n  new Word64(0xd6990624, 0x5565a910),\n  new Word64(0xf40e3585, 0x5771202a),\n  new Word64(0x106aa070, 0x32bbd1b8),\n  new Word64(0x19a4c116, 0xb8d2d0c8),\n  new Word64(0x1e376c08, 0x5141ab53),\n  new Word64(0x2748774c, 0xdf8eeb99),\n  new Word64(0x34b0bcb5, 0xe19b48a8),\n  new Word64(0x391c0cb3, 0xc5c95a63),\n  new Word64(0x4ed8aa4a, 0xe3418acb),\n  new Word64(0x5b9cca4f, 0x7763e373),\n  new Word64(0x682e6ff3, 0xd6b2b8a3),\n  new Word64(0x748f82ee, 0x5defb2fc),\n  new Word64(0x78a5636f, 0x43172f60),\n  new Word64(0x84c87814, 0xa1f0ab72),\n  new Word64(0x8cc70208, 0x1a6439ec),\n  new Word64(0x90befffa, 0x23631e28),\n  new Word64(0xa4506ceb, 0xde82bde9),\n  new Word64(0xbef9a3f7, 0xb2c67915),\n  new Word64(0xc67178f2, 0xe372532b),\n  new Word64(0xca273ece, 0xea26619c),\n  new Word64(0xd186b8c7, 0x21c0c207),\n  new Word64(0xeada7dd6, 0xcde0eb1e),\n  new Word64(0xf57d4f7f, 0xee6ed178),\n  new Word64(0x06f067aa, 0x72176fba),\n  new Word64(0x0a637dc5, 0xa2c898a6),\n  new Word64(0x113f9804, 0xbef90dae),\n  new Word64(0x1b710b35, 0x131c471b),\n  new Word64(0x28db77f5, 0x23047d84),\n  new Word64(0x32caab7b, 0x40c72493),\n  new Word64(0x3c9ebe0a, 0x15c9bebc),\n  new Word64(0x431d67c4, 0x9c100d4c),\n  new Word64(0x4cc5d4be, 0xcb3e42b6),\n  new Word64(0x597f299c, 0xfc657e2a),\n  new Word64(0x5fcb6fab, 0x3ad6faec),\n  new Word64(0x6c44198c, 0x4a475817)\n ];\n function hash(data, offset, length, mode384) {\n  mode384 = !!mode384;\n  var h0, h1, h2, h3, h4, h5, h6, h7;\n  if (!mode384) {\n   h0 = new Word64(0x6a09e667, 0xf3bcc908);\n   h1 = new Word64(0xbb67ae85, 0x84caa73b);\n   h2 = new Word64(0x3c6ef372, 0xfe94f82b);\n   h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\n   h4 = new Word64(0x510e527f, 0xade682d1);\n   h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\n   h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\n   h7 = new Word64(0x5be0cd19, 0x137e2179);\n  } else {\n   h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\n   h1 = new Word64(0x629a292a, 0x367cd507);\n   h2 = new Word64(0x9159015a, 0x3070dd17);\n   h3 = new Word64(0x152fecd8, 0xf70e5939);\n   h4 = new Word64(0x67332667, 0xffc00b31);\n   h5 = new Word64(0x8eb44a87, 0x68581511);\n   h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\n   h7 = new Word64(0x47b5481d, 0xbefa4fa4);\n  }\n  var paddedLength = Math.ceil((length + 17) / 128) * 128;\n  var padded = new Uint8Array(paddedLength);\n  var i, j, n;\n  for (i = 0; i < length; ++i) {\n   padded[i] = data[offset++];\n  }\n  padded[i++] = 0x80;\n  n = paddedLength - 16;\n  while (i < n) {\n   padded[i++] = 0;\n  }\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = length >>> 29 & 0xFF;\n  padded[i++] = length >> 21 & 0xFF;\n  padded[i++] = length >> 13 & 0xFF;\n  padded[i++] = length >> 5 & 0xFF;\n  padded[i++] = length << 3 & 0xFF;\n  var w = new Array(80);\n  for (i = 0; i < 80; i++) {\n   w[i] = new Word64(0, 0);\n  }\n  var a = new Word64(0, 0), b = new Word64(0, 0), c = new Word64(0, 0);\n  var d = new Word64(0, 0), e = new Word64(0, 0), f = new Word64(0, 0);\n  var g = new Word64(0, 0), h = new Word64(0, 0);\n  var t1 = new Word64(0, 0), t2 = new Word64(0, 0);\n  var tmp1 = new Word64(0, 0), tmp2 = new Word64(0, 0), tmp3;\n  for (i = 0; i < paddedLength;) {\n   for (j = 0; j < 16; ++j) {\n    w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n    w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\n    i += 8;\n   }\n   for (j = 16; j < 80; ++j) {\n    tmp3 = w[j];\n    littleSigmaPrime(tmp3, w[j - 2], tmp2);\n    tmp3.add(w[j - 7]);\n    littleSigma(tmp1, w[j - 15], tmp2);\n    tmp3.add(tmp1);\n    tmp3.add(w[j - 16]);\n   }\n   a.assign(h0);\n   b.assign(h1);\n   c.assign(h2);\n   d.assign(h3);\n   e.assign(h4);\n   f.assign(h5);\n   g.assign(h6);\n   h.assign(h7);\n   for (j = 0; j < 80; ++j) {\n    t1.assign(h);\n    sigmaPrime(tmp1, e, tmp2);\n    t1.add(tmp1);\n    ch(tmp1, e, f, g, tmp2);\n    t1.add(tmp1);\n    t1.add(k[j]);\n    t1.add(w[j]);\n    sigma(t2, a, tmp2);\n    maj(tmp1, a, b, c, tmp2);\n    t2.add(tmp1);\n    tmp3 = h;\n    h = g;\n    g = f;\n    f = e;\n    d.add(t1);\n    e = d;\n    d = c;\n    c = b;\n    b = a;\n    tmp3.assign(t1);\n    tmp3.add(t2);\n    a = tmp3;\n   }\n   h0.add(a);\n   h1.add(b);\n   h2.add(c);\n   h3.add(d);\n   h4.add(e);\n   h5.add(f);\n   h6.add(g);\n   h7.add(h);\n  }\n  var result;\n  if (!mode384) {\n   result = new Uint8Array(64);\n   h0.copyTo(result, 0);\n   h1.copyTo(result, 8);\n   h2.copyTo(result, 16);\n   h3.copyTo(result, 24);\n   h4.copyTo(result, 32);\n   h5.copyTo(result, 40);\n   h6.copyTo(result, 48);\n   h7.copyTo(result, 56);\n  } else {\n   result = new Uint8Array(48);\n   h0.copyTo(result, 0);\n   h1.copyTo(result, 8);\n   h2.copyTo(result, 16);\n   h3.copyTo(result, 24);\n   h4.copyTo(result, 32);\n   h5.copyTo(result, 40);\n  }\n  return result;\n }\n return hash;\n}();\nvar calculateSHA384 = function calculateSHA384Closure() {\n function hash(data, offset, length) {\n  return calculateSHA512(data, offset, length, true);\n }\n return hash;\n}();\nvar NullCipher = function NullCipherClosure() {\n function NullCipher() {\n }\n NullCipher.prototype = {\n  decryptBlock: function NullCipher_decryptBlock(data) {\n   return data;\n  }\n };\n return NullCipher;\n}();\nvar AES128Cipher = function AES128CipherClosure() {\n var rcon = new Uint8Array([\n  0x8d,\n  0x01,\n  0x02,\n  0x04,\n  0x08,\n  0x10,\n  0x20,\n  0x40,\n  0x80,\n  0x1b,\n  0x36,\n  0x6c,\n  0xd8,\n  0xab,\n  0x4d,\n  0x9a,\n  0x2f,\n  0x5e,\n  0xbc,\n  0x63,\n  0xc6,\n  0x97,\n  0x35,\n  0x6a,\n  0xd4,\n  0xb3,\n  0x7d,\n  0xfa,\n  0xef,\n  0xc5,\n  0x91,\n  0x39,\n  0x72,\n  0xe4,\n  0xd3,\n  0xbd,\n  0x61,\n  0xc2,\n  0x9f,\n  0x25,\n  0x4a,\n  0x94,\n  0x33,\n  0x66,\n  0xcc,\n  0x83,\n  0x1d,\n  0x3a,\n  0x74,\n  0xe8,\n  0xcb,\n  0x8d,\n  0x01,\n  0x02,\n  0x04,\n  0x08,\n  0x10,\n  0x20,\n  0x40,\n  0x80,\n  0x1b,\n  0x36,\n  0x6c,\n  0xd8,\n  0xab,\n  0x4d,\n  0x9a,\n  0x2f,\n  0x5e,\n  0xbc,\n  0x63,\n  0xc6,\n  0x97,\n  0x35,\n  0x6a,\n  0xd4,\n  0xb3,\n  0x7d,\n  0xfa,\n  0xef,\n  0xc5,\n  0x91,\n  0x39,\n  0x72,\n  0xe4,\n  0xd3,\n  0xbd,\n  0x61,\n  0xc2,\n  0x9f,\n  0x25,\n  0x4a,\n  0x94,\n  0x33,\n  0x66,\n  0xcc,\n  0x83,\n  0x1d,\n  0x3a,\n  0x74,\n  0xe8,\n  0xcb,\n  0x8d,\n  0x01,\n  0x02,\n  0x04,\n  0x08,\n  0x10,\n  0x20,\n  0x40,\n  0x80,\n  0x1b,\n  0x36,\n  0x6c,\n  0xd8,\n  0xab,\n  0x4d,\n  0x9a,\n  0x2f,\n  0x5e,\n  0xbc,\n  0x63,\n  0xc6,\n  0x97,\n  0x35,\n  0x6a,\n  0xd4,\n  0xb3,\n  0x7d,\n  0xfa,\n  0xef,\n  0xc5,\n  0x91,\n  0x39,\n  0x72,\n  0xe4,\n  0xd3,\n  0xbd,\n  0x61,\n  0xc2,\n  0x9f,\n  0x25,\n  0x4a,\n  0x94,\n  0x33,\n  0x66,\n  0xcc,\n  0x83,\n  0x1d,\n  0x3a,\n  0x74,\n  0xe8,\n  0xcb,\n  0x8d,\n  0x01,\n  0x02,\n  0x04,\n  0x08,\n  0x10,\n  0x20,\n  0x40,\n  0x80,\n  0x1b,\n  0x36,\n  0x6c,\n  0xd8,\n  0xab,\n  0x4d,\n  0x9a,\n  0x2f,\n  0x5e,\n  0xbc,\n  0x63,\n  0xc6,\n  0x97,\n  0x35,\n  0x6a,\n  0xd4,\n  0xb3,\n  0x7d,\n  0xfa,\n  0xef,\n  0xc5,\n  0x91,\n  0x39,\n  0x72,\n  0xe4,\n  0xd3,\n  0xbd,\n  0x61,\n  0xc2,\n  0x9f,\n  0x25,\n  0x4a,\n  0x94,\n  0x33,\n  0x66,\n  0xcc,\n  0x83,\n  0x1d,\n  0x3a,\n  0x74,\n  0xe8,\n  0xcb,\n  0x8d,\n  0x01,\n  0x02,\n  0x04,\n  0x08,\n  0x10,\n  0x20,\n  0x40,\n  0x80,\n  0x1b,\n  0x36,\n  0x6c,\n  0xd8,\n  0xab,\n  0x4d,\n  0x9a,\n  0x2f,\n  0x5e,\n  0xbc,\n  0x63,\n  0xc6,\n  0x97,\n  0x35,\n  0x6a,\n  0xd4,\n  0xb3,\n  0x7d,\n  0xfa,\n  0xef,\n  0xc5,\n  0x91,\n  0x39,\n  0x72,\n  0xe4,\n  0xd3,\n  0xbd,\n  0x61,\n  0xc2,\n  0x9f,\n  0x25,\n  0x4a,\n  0x94,\n  0x33,\n  0x66,\n  0xcc,\n  0x83,\n  0x1d,\n  0x3a,\n  0x74,\n  0xe8,\n  0xcb,\n  0x8d\n ]);\n var s = new Uint8Array([\n  0x63,\n  0x7c,\n  0x77,\n  0x7b,\n  0xf2,\n  0x6b,\n  0x6f,\n  0xc5,\n  0x30,\n  0x01,\n  0x67,\n  0x2b,\n  0xfe,\n  0xd7,\n  0xab,\n  0x76,\n  0xca,\n  0x82,\n  0xc9,\n  0x7d,\n  0xfa,\n  0x59,\n  0x47,\n  0xf0,\n  0xad,\n  0xd4,\n  0xa2,\n  0xaf,\n  0x9c,\n  0xa4,\n  0x72,\n  0xc0,\n  0xb7,\n  0xfd,\n  0x93,\n  0x26,\n  0x36,\n  0x3f,\n  0xf7,\n  0xcc,\n  0x34,\n  0xa5,\n  0xe5,\n  0xf1,\n  0x71,\n  0xd8,\n  0x31,\n  0x15,\n  0x04,\n  0xc7,\n  0x23,\n  0xc3,\n  0x18,\n  0x96,\n  0x05,\n  0x9a,\n  0x07,\n  0x12,\n  0x80,\n  0xe2,\n  0xeb,\n  0x27,\n  0xb2,\n  0x75,\n  0x09,\n  0x83,\n  0x2c,\n  0x1a,\n  0x1b,\n  0x6e,\n  0x5a,\n  0xa0,\n  0x52,\n  0x3b,\n  0xd6,\n  0xb3,\n  0x29,\n  0xe3,\n  0x2f,\n  0x84,\n  0x53,\n  0xd1,\n  0x00,\n  0xed,\n  0x20,\n  0xfc,\n  0xb1,\n  0x5b,\n  0x6a,\n  0xcb,\n  0xbe,\n  0x39,\n  0x4a,\n  0x4c,\n  0x58,\n  0xcf,\n  0xd0,\n  0xef,\n  0xaa,\n  0xfb,\n  0x43,\n  0x4d,\n  0x33,\n  0x85,\n  0x45,\n  0xf9,\n  0x02,\n  0x7f,\n  0x50,\n  0x3c,\n  0x9f,\n  0xa8,\n  0x51,\n  0xa3,\n  0x40,\n  0x8f,\n  0x92,\n  0x9d,\n  0x38,\n  0xf5,\n  0xbc,\n  0xb6,\n  0xda,\n  0x21,\n  0x10,\n  0xff,\n  0xf3,\n  0xd2,\n  0xcd,\n  0x0c,\n  0x13,\n  0xec,\n  0x5f,\n  0x97,\n  0x44,\n  0x17,\n  0xc4,\n  0xa7,\n  0x7e,\n  0x3d,\n  0x64,\n  0x5d,\n  0x19,\n  0x73,\n  0x60,\n  0x81,\n  0x4f,\n  0xdc,\n  0x22,\n  0x2a,\n  0x90,\n  0x88,\n  0x46,\n  0xee,\n  0xb8,\n  0x14,\n  0xde,\n  0x5e,\n  0x0b,\n  0xdb,\n  0xe0,\n  0x32,\n  0x3a,\n  0x0a,\n  0x49,\n  0x06,\n  0x24,\n  0x5c,\n  0xc2,\n  0xd3,\n  0xac,\n  0x62,\n  0x91,\n  0x95,\n  0xe4,\n  0x79,\n  0xe7,\n  0xc8,\n  0x37,\n  0x6d,\n  0x8d,\n  0xd5,\n  0x4e,\n  0xa9,\n  0x6c,\n  0x56,\n  0xf4,\n  0xea,\n  0x65,\n  0x7a,\n  0xae,\n  0x08,\n  0xba,\n  0x78,\n  0x25,\n  0x2e,\n  0x1c,\n  0xa6,\n  0xb4,\n  0xc6,\n  0xe8,\n  0xdd,\n  0x74,\n  0x1f,\n  0x4b,\n  0xbd,\n  0x8b,\n  0x8a,\n  0x70,\n  0x3e,\n  0xb5,\n  0x66,\n  0x48,\n  0x03,\n  0xf6,\n  0x0e,\n  0x61,\n  0x35,\n  0x57,\n  0xb9,\n  0x86,\n  0xc1,\n  0x1d,\n  0x9e,\n  0xe1,\n  0xf8,\n  0x98,\n  0x11,\n  0x69,\n  0xd9,\n  0x8e,\n  0x94,\n  0x9b,\n  0x1e,\n  0x87,\n  0xe9,\n  0xce,\n  0x55,\n  0x28,\n  0xdf,\n  0x8c,\n  0xa1,\n  0x89,\n  0x0d,\n  0xbf,\n  0xe6,\n  0x42,\n  0x68,\n  0x41,\n  0x99,\n  0x2d,\n  0x0f,\n  0xb0,\n  0x54,\n  0xbb,\n  0x16\n ]);\n var inv_s = new Uint8Array([\n  0x52,\n  0x09,\n  0x6a,\n  0xd5,\n  0x30,\n  0x36,\n  0xa5,\n  0x38,\n  0xbf,\n  0x40,\n  0xa3,\n  0x9e,\n  0x81,\n  0xf3,\n  0xd7,\n  0xfb,\n  0x7c,\n  0xe3,\n  0x39,\n  0x82,\n  0x9b,\n  0x2f,\n  0xff,\n  0x87,\n  0x34,\n  0x8e,\n  0x43,\n  0x44,\n  0xc4,\n  0xde,\n  0xe9,\n  0xcb,\n  0x54,\n  0x7b,\n  0x94,\n  0x32,\n  0xa6,\n  0xc2,\n  0x23,\n  0x3d,\n  0xee,\n  0x4c,\n  0x95,\n  0x0b,\n  0x42,\n  0xfa,\n  0xc3,\n  0x4e,\n  0x08,\n  0x2e,\n  0xa1,\n  0x66,\n  0x28,\n  0xd9,\n  0x24,\n  0xb2,\n  0x76,\n  0x5b,\n  0xa2,\n  0x49,\n  0x6d,\n  0x8b,\n  0xd1,\n  0x25,\n  0x72,\n  0xf8,\n  0xf6,\n  0x64,\n  0x86,\n  0x68,\n  0x98,\n  0x16,\n  0xd4,\n  0xa4,\n  0x5c,\n  0xcc,\n  0x5d,\n  0x65,\n  0xb6,\n  0x92,\n  0x6c,\n  0x70,\n  0x48,\n  0x50,\n  0xfd,\n  0xed,\n  0xb9,\n  0xda,\n  0x5e,\n  0x15,\n  0x46,\n  0x57,\n  0xa7,\n  0x8d,\n  0x9d,\n  0x84,\n  0x90,\n  0xd8,\n  0xab,\n  0x00,\n  0x8c,\n  0xbc,\n  0xd3,\n  0x0a,\n  0xf7,\n  0xe4,\n  0x58,\n  0x05,\n  0xb8,\n  0xb3,\n  0x45,\n  0x06,\n  0xd0,\n  0x2c,\n  0x1e,\n  0x8f,\n  0xca,\n  0x3f,\n  0x0f,\n  0x02,\n  0xc1,\n  0xaf,\n  0xbd,\n  0x03,\n  0x01,\n  0x13,\n  0x8a,\n  0x6b,\n  0x3a,\n  0x91,\n  0x11,\n  0x41,\n  0x4f,\n  0x67,\n  0xdc,\n  0xea,\n  0x97,\n  0xf2,\n  0xcf,\n  0xce,\n  0xf0,\n  0xb4,\n  0xe6,\n  0x73,\n  0x96,\n  0xac,\n  0x74,\n  0x22,\n  0xe7,\n  0xad,\n  0x35,\n  0x85,\n  0xe2,\n  0xf9,\n  0x37,\n  0xe8,\n  0x1c,\n  0x75,\n  0xdf,\n  0x6e,\n  0x47,\n  0xf1,\n  0x1a,\n  0x71,\n  0x1d,\n  0x29,\n  0xc5,\n  0x89,\n  0x6f,\n  0xb7,\n  0x62,\n  0x0e,\n  0xaa,\n  0x18,\n  0xbe,\n  0x1b,\n  0xfc,\n  0x56,\n  0x3e,\n  0x4b,\n  0xc6,\n  0xd2,\n  0x79,\n  0x20,\n  0x9a,\n  0xdb,\n  0xc0,\n  0xfe,\n  0x78,\n  0xcd,\n  0x5a,\n  0xf4,\n  0x1f,\n  0xdd,\n  0xa8,\n  0x33,\n  0x88,\n  0x07,\n  0xc7,\n  0x31,\n  0xb1,\n  0x12,\n  0x10,\n  0x59,\n  0x27,\n  0x80,\n  0xec,\n  0x5f,\n  0x60,\n  0x51,\n  0x7f,\n  0xa9,\n  0x19,\n  0xb5,\n  0x4a,\n  0x0d,\n  0x2d,\n  0xe5,\n  0x7a,\n  0x9f,\n  0x93,\n  0xc9,\n  0x9c,\n  0xef,\n  0xa0,\n  0xe0,\n  0x3b,\n  0x4d,\n  0xae,\n  0x2a,\n  0xf5,\n  0xb0,\n  0xc8,\n  0xeb,\n  0xbb,\n  0x3c,\n  0x83,\n  0x53,\n  0x99,\n  0x61,\n  0x17,\n  0x2b,\n  0x04,\n  0x7e,\n  0xba,\n  0x77,\n  0xd6,\n  0x26,\n  0xe1,\n  0x69,\n  0x14,\n  0x63,\n  0x55,\n  0x21,\n  0x0c,\n  0x7d\n ]);\n var mixCol = new Uint8Array(256);\n for (var i = 0; i < 256; i++) {\n  if (i < 128) {\n   mixCol[i] = i << 1;\n  } else {\n   mixCol[i] = i << 1 ^ 0x1b;\n  }\n }\n var mix = new Uint32Array([\n  0x00000000,\n  0x0e090d0b,\n  0x1c121a16,\n  0x121b171d,\n  0x3824342c,\n  0x362d3927,\n  0x24362e3a,\n  0x2a3f2331,\n  0x70486858,\n  0x7e416553,\n  0x6c5a724e,\n  0x62537f45,\n  0x486c5c74,\n  0x4665517f,\n  0x547e4662,\n  0x5a774b69,\n  0xe090d0b0,\n  0xee99ddbb,\n  0xfc82caa6,\n  0xf28bc7ad,\n  0xd8b4e49c,\n  0xd6bde997,\n  0xc4a6fe8a,\n  0xcaaff381,\n  0x90d8b8e8,\n  0x9ed1b5e3,\n  0x8ccaa2fe,\n  0x82c3aff5,\n  0xa8fc8cc4,\n  0xa6f581cf,\n  0xb4ee96d2,\n  0xbae79bd9,\n  0xdb3bbb7b,\n  0xd532b670,\n  0xc729a16d,\n  0xc920ac66,\n  0xe31f8f57,\n  0xed16825c,\n  0xff0d9541,\n  0xf104984a,\n  0xab73d323,\n  0xa57ade28,\n  0xb761c935,\n  0xb968c43e,\n  0x9357e70f,\n  0x9d5eea04,\n  0x8f45fd19,\n  0x814cf012,\n  0x3bab6bcb,\n  0x35a266c0,\n  0x27b971dd,\n  0x29b07cd6,\n  0x038f5fe7,\n  0x0d8652ec,\n  0x1f9d45f1,\n  0x119448fa,\n  0x4be30393,\n  0x45ea0e98,\n  0x57f11985,\n  0x59f8148e,\n  0x73c737bf,\n  0x7dce3ab4,\n  0x6fd52da9,\n  0x61dc20a2,\n  0xad766df6,\n  0xa37f60fd,\n  0xb16477e0,\n  0xbf6d7aeb,\n  0x955259da,\n  0x9b5b54d1,\n  0x894043cc,\n  0x87494ec7,\n  0xdd3e05ae,\n  0xd33708a5,\n  0xc12c1fb8,\n  0xcf2512b3,\n  0xe51a3182,\n  0xeb133c89,\n  0xf9082b94,\n  0xf701269f,\n  0x4de6bd46,\n  0x43efb04d,\n  0x51f4a750,\n  0x5ffdaa5b,\n  0x75c2896a,\n  0x7bcb8461,\n  0x69d0937c,\n  0x67d99e77,\n  0x3daed51e,\n  0x33a7d815,\n  0x21bccf08,\n  0x2fb5c203,\n  0x058ae132,\n  0x0b83ec39,\n  0x1998fb24,\n  0x1791f62f,\n  0x764dd68d,\n  0x7844db86,\n  0x6a5fcc9b,\n  0x6456c190,\n  0x4e69e2a1,\n  0x4060efaa,\n  0x527bf8b7,\n  0x5c72f5bc,\n  0x0605bed5,\n  0x080cb3de,\n  0x1a17a4c3,\n  0x141ea9c8,\n  0x3e218af9,\n  0x302887f2,\n  0x223390ef,\n  0x2c3a9de4,\n  0x96dd063d,\n  0x98d40b36,\n  0x8acf1c2b,\n  0x84c61120,\n  0xaef93211,\n  0xa0f03f1a,\n  0xb2eb2807,\n  0xbce2250c,\n  0xe6956e65,\n  0xe89c636e,\n  0xfa877473,\n  0xf48e7978,\n  0xdeb15a49,\n  0xd0b85742,\n  0xc2a3405f,\n  0xccaa4d54,\n  0x41ecdaf7,\n  0x4fe5d7fc,\n  0x5dfec0e1,\n  0x53f7cdea,\n  0x79c8eedb,\n  0x77c1e3d0,\n  0x65daf4cd,\n  0x6bd3f9c6,\n  0x31a4b2af,\n  0x3fadbfa4,\n  0x2db6a8b9,\n  0x23bfa5b2,\n  0x09808683,\n  0x07898b88,\n  0x15929c95,\n  0x1b9b919e,\n  0xa17c0a47,\n  0xaf75074c,\n  0xbd6e1051,\n  0xb3671d5a,\n  0x99583e6b,\n  0x97513360,\n  0x854a247d,\n  0x8b432976,\n  0xd134621f,\n  0xdf3d6f14,\n  0xcd267809,\n  0xc32f7502,\n  0xe9105633,\n  0xe7195b38,\n  0xf5024c25,\n  0xfb0b412e,\n  0x9ad7618c,\n  0x94de6c87,\n  0x86c57b9a,\n  0x88cc7691,\n  0xa2f355a0,\n  0xacfa58ab,\n  0xbee14fb6,\n  0xb0e842bd,\n  0xea9f09d4,\n  0xe49604df,\n  0xf68d13c2,\n  0xf8841ec9,\n  0xd2bb3df8,\n  0xdcb230f3,\n  0xcea927ee,\n  0xc0a02ae5,\n  0x7a47b13c,\n  0x744ebc37,\n  0x6655ab2a,\n  0x685ca621,\n  0x42638510,\n  0x4c6a881b,\n  0x5e719f06,\n  0x5078920d,\n  0x0a0fd964,\n  0x0406d46f,\n  0x161dc372,\n  0x1814ce79,\n  0x322bed48,\n  0x3c22e043,\n  0x2e39f75e,\n  0x2030fa55,\n  0xec9ab701,\n  0xe293ba0a,\n  0xf088ad17,\n  0xfe81a01c,\n  0xd4be832d,\n  0xdab78e26,\n  0xc8ac993b,\n  0xc6a59430,\n  0x9cd2df59,\n  0x92dbd252,\n  0x80c0c54f,\n  0x8ec9c844,\n  0xa4f6eb75,\n  0xaaffe67e,\n  0xb8e4f163,\n  0xb6edfc68,\n  0x0c0a67b1,\n  0x02036aba,\n  0x10187da7,\n  0x1e1170ac,\n  0x342e539d,\n  0x3a275e96,\n  0x283c498b,\n  0x26354480,\n  0x7c420fe9,\n  0x724b02e2,\n  0x605015ff,\n  0x6e5918f4,\n  0x44663bc5,\n  0x4a6f36ce,\n  0x587421d3,\n  0x567d2cd8,\n  0x37a10c7a,\n  0x39a80171,\n  0x2bb3166c,\n  0x25ba1b67,\n  0x0f853856,\n  0x018c355d,\n  0x13972240,\n  0x1d9e2f4b,\n  0x47e96422,\n  0x49e06929,\n  0x5bfb7e34,\n  0x55f2733f,\n  0x7fcd500e,\n  0x71c45d05,\n  0x63df4a18,\n  0x6dd64713,\n  0xd731dcca,\n  0xd938d1c1,\n  0xcb23c6dc,\n  0xc52acbd7,\n  0xef15e8e6,\n  0xe11ce5ed,\n  0xf307f2f0,\n  0xfd0efffb,\n  0xa779b492,\n  0xa970b999,\n  0xbb6bae84,\n  0xb562a38f,\n  0x9f5d80be,\n  0x91548db5,\n  0x834f9aa8,\n  0x8d4697a3\n ]);\n function expandKey128(cipherKey) {\n  var b = 176, result = new Uint8Array(b);\n  result.set(cipherKey);\n  for (var j = 16, i = 1; j < b; ++i) {\n   var t1 = result[j - 3], t2 = result[j - 2], t3 = result[j - 1], t4 = result[j - 4];\n   t1 = s[t1];\n   t2 = s[t2];\n   t3 = s[t3];\n   t4 = s[t4];\n   t1 = t1 ^ rcon[i];\n   for (var n = 0; n < 4; ++n) {\n    result[j] = t1 ^= result[j - 16];\n    j++;\n    result[j] = t2 ^= result[j - 16];\n    j++;\n    result[j] = t3 ^= result[j - 16];\n    j++;\n    result[j] = t4 ^= result[j - 16];\n    j++;\n   }\n  }\n  return result;\n }\n function decrypt128(input, key) {\n  var state = new Uint8Array(16);\n  state.set(input);\n  var i, j, k;\n  var t, u, v;\n  for (j = 0, k = 160; j < 16; ++j, ++k) {\n   state[j] ^= key[k];\n  }\n  for (i = 9; i >= 1; --i) {\n   t = state[13];\n   state[13] = state[9];\n   state[9] = state[5];\n   state[5] = state[1];\n   state[1] = t;\n   t = state[14];\n   u = state[10];\n   state[14] = state[6];\n   state[10] = state[2];\n   state[6] = t;\n   state[2] = u;\n   t = state[15];\n   u = state[11];\n   v = state[7];\n   state[15] = state[3];\n   state[11] = t;\n   state[7] = u;\n   state[3] = v;\n   for (j = 0; j < 16; ++j) {\n    state[j] = inv_s[state[j]];\n   }\n   for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n    state[j] ^= key[k];\n   }\n   for (j = 0; j < 16; j += 4) {\n    var s0 = mix[state[j]], s1 = mix[state[j + 1]], s2 = mix[state[j + 2]], s3 = mix[state[j + 3]];\n    t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n    state[j] = t >>> 24 & 0xFF;\n    state[j + 1] = t >> 16 & 0xFF;\n    state[j + 2] = t >> 8 & 0xFF;\n    state[j + 3] = t & 0xFF;\n   }\n  }\n  t = state[13];\n  state[13] = state[9];\n  state[9] = state[5];\n  state[5] = state[1];\n  state[1] = t;\n  t = state[14];\n  u = state[10];\n  state[14] = state[6];\n  state[10] = state[2];\n  state[6] = t;\n  state[2] = u;\n  t = state[15];\n  u = state[11];\n  v = state[7];\n  state[15] = state[3];\n  state[11] = t;\n  state[7] = u;\n  state[3] = v;\n  for (j = 0; j < 16; ++j) {\n   state[j] = inv_s[state[j]];\n   state[j] ^= key[j];\n  }\n  return state;\n }\n function encrypt128(input, key) {\n  var t, u, v, k;\n  var state = new Uint8Array(16);\n  state.set(input);\n  for (j = 0; j < 16; ++j) {\n   state[j] ^= key[j];\n  }\n  for (i = 1; i < 10; i++) {\n   for (j = 0; j < 16; ++j) {\n    state[j] = s[state[j]];\n   }\n   v = state[1];\n   state[1] = state[5];\n   state[5] = state[9];\n   state[9] = state[13];\n   state[13] = v;\n   v = state[2];\n   u = state[6];\n   state[2] = state[10];\n   state[6] = state[14];\n   state[10] = v;\n   state[14] = u;\n   v = state[3];\n   u = state[7];\n   t = state[11];\n   state[3] = state[15];\n   state[7] = v;\n   state[11] = u;\n   state[15] = t;\n   for (var j = 0; j < 16; j += 4) {\n    var s0 = state[j + 0], s1 = state[j + 1];\n    var s2 = state[j + 2], s3 = state[j + 3];\n    t = s0 ^ s1 ^ s2 ^ s3;\n    state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n    state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n    state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n    state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n   }\n   for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n    state[j] ^= key[k];\n   }\n  }\n  for (j = 0; j < 16; ++j) {\n   state[j] = s[state[j]];\n  }\n  v = state[1];\n  state[1] = state[5];\n  state[5] = state[9];\n  state[9] = state[13];\n  state[13] = v;\n  v = state[2];\n  u = state[6];\n  state[2] = state[10];\n  state[6] = state[14];\n  state[10] = v;\n  state[14] = u;\n  v = state[3];\n  u = state[7];\n  t = state[11];\n  state[3] = state[15];\n  state[7] = v;\n  state[11] = u;\n  state[15] = t;\n  for (j = 0, k = 160; j < 16; ++j, ++k) {\n   state[j] ^= key[k];\n  }\n  return state;\n }\n function AES128Cipher(key) {\n  this.key = expandKey128(key);\n  this.buffer = new Uint8Array(16);\n  this.bufferPosition = 0;\n }\n function decryptBlock2(data, finalize) {\n  var i, j, ii, sourceLength = data.length, buffer = this.buffer, bufferLength = this.bufferPosition, result = [], iv = this.iv;\n  for (i = 0; i < sourceLength; ++i) {\n   buffer[bufferLength] = data[i];\n   ++bufferLength;\n   if (bufferLength < 16) {\n    continue;\n   }\n   var plain = decrypt128(buffer, this.key);\n   for (j = 0; j < 16; ++j) {\n    plain[j] ^= iv[j];\n   }\n   iv = buffer;\n   result.push(plain);\n   buffer = new Uint8Array(16);\n   bufferLength = 0;\n  }\n  this.buffer = buffer;\n  this.bufferLength = bufferLength;\n  this.iv = iv;\n  if (result.length === 0) {\n   return new Uint8Array([]);\n  }\n  var outputLength = 16 * result.length;\n  if (finalize) {\n   var lastBlock = result[result.length - 1];\n   var psLen = lastBlock[15];\n   if (psLen <= 16) {\n    for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n     if (lastBlock[i] !== psLen) {\n      psLen = 0;\n      break;\n     }\n    }\n    outputLength -= psLen;\n    result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n   }\n  }\n  var output = new Uint8Array(outputLength);\n  for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n   output.set(result[i], j);\n  }\n  return output;\n }\n AES128Cipher.prototype = {\n  decryptBlock: function AES128Cipher_decryptBlock(data, finalize) {\n   var i, sourceLength = data.length;\n   var buffer = this.buffer, bufferLength = this.bufferPosition;\n   for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n    buffer[bufferLength] = data[i];\n   }\n   if (bufferLength < 16) {\n    this.bufferLength = bufferLength;\n    return new Uint8Array([]);\n   }\n   this.iv = buffer;\n   this.buffer = new Uint8Array(16);\n   this.bufferLength = 0;\n   this.decryptBlock = decryptBlock2;\n   return this.decryptBlock(data.subarray(16), finalize);\n  },\n  encrypt: function AES128Cipher_encrypt(data, iv) {\n   var i, j, ii, sourceLength = data.length, buffer = this.buffer, bufferLength = this.bufferPosition, result = [];\n   if (!iv) {\n    iv = new Uint8Array(16);\n   }\n   for (i = 0; i < sourceLength; ++i) {\n    buffer[bufferLength] = data[i];\n    ++bufferLength;\n    if (bufferLength < 16) {\n     continue;\n    }\n    for (j = 0; j < 16; ++j) {\n     buffer[j] ^= iv[j];\n    }\n    var cipher = encrypt128(buffer, this.key);\n    iv = cipher;\n    result.push(cipher);\n    buffer = new Uint8Array(16);\n    bufferLength = 0;\n   }\n   this.buffer = buffer;\n   this.bufferLength = bufferLength;\n   this.iv = iv;\n   if (result.length === 0) {\n    return new Uint8Array([]);\n   }\n   var outputLength = 16 * result.length;\n   var output = new Uint8Array(outputLength);\n   for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n    output.set(result[i], j);\n   }\n   return output;\n  }\n };\n return AES128Cipher;\n}();\nvar AES256Cipher = function AES256CipherClosure() {\n var s = new Uint8Array([\n  0x63,\n  0x7c,\n  0x77,\n  0x7b,\n  0xf2,\n  0x6b,\n  0x6f,\n  0xc5,\n  0x30,\n  0x01,\n  0x67,\n  0x2b,\n  0xfe,\n  0xd7,\n  0xab,\n  0x76,\n  0xca,\n  0x82,\n  0xc9,\n  0x7d,\n  0xfa,\n  0x59,\n  0x47,\n  0xf0,\n  0xad,\n  0xd4,\n  0xa2,\n  0xaf,\n  0x9c,\n  0xa4,\n  0x72,\n  0xc0,\n  0xb7,\n  0xfd,\n  0x93,\n  0x26,\n  0x36,\n  0x3f,\n  0xf7,\n  0xcc,\n  0x34,\n  0xa5,\n  0xe5,\n  0xf1,\n  0x71,\n  0xd8,\n  0x31,\n  0x15,\n  0x04,\n  0xc7,\n  0x23,\n  0xc3,\n  0x18,\n  0x96,\n  0x05,\n  0x9a,\n  0x07,\n  0x12,\n  0x80,\n  0xe2,\n  0xeb,\n  0x27,\n  0xb2,\n  0x75,\n  0x09,\n  0x83,\n  0x2c,\n  0x1a,\n  0x1b,\n  0x6e,\n  0x5a,\n  0xa0,\n  0x52,\n  0x3b,\n  0xd6,\n  0xb3,\n  0x29,\n  0xe3,\n  0x2f,\n  0x84,\n  0x53,\n  0xd1,\n  0x00,\n  0xed,\n  0x20,\n  0xfc,\n  0xb1,\n  0x5b,\n  0x6a,\n  0xcb,\n  0xbe,\n  0x39,\n  0x4a,\n  0x4c,\n  0x58,\n  0xcf,\n  0xd0,\n  0xef,\n  0xaa,\n  0xfb,\n  0x43,\n  0x4d,\n  0x33,\n  0x85,\n  0x45,\n  0xf9,\n  0x02,\n  0x7f,\n  0x50,\n  0x3c,\n  0x9f,\n  0xa8,\n  0x51,\n  0xa3,\n  0x40,\n  0x8f,\n  0x92,\n  0x9d,\n  0x38,\n  0xf5,\n  0xbc,\n  0xb6,\n  0xda,\n  0x21,\n  0x10,\n  0xff,\n  0xf3,\n  0xd2,\n  0xcd,\n  0x0c,\n  0x13,\n  0xec,\n  0x5f,\n  0x97,\n  0x44,\n  0x17,\n  0xc4,\n  0xa7,\n  0x7e,\n  0x3d,\n  0x64,\n  0x5d,\n  0x19,\n  0x73,\n  0x60,\n  0x81,\n  0x4f,\n  0xdc,\n  0x22,\n  0x2a,\n  0x90,\n  0x88,\n  0x46,\n  0xee,\n  0xb8,\n  0x14,\n  0xde,\n  0x5e,\n  0x0b,\n  0xdb,\n  0xe0,\n  0x32,\n  0x3a,\n  0x0a,\n  0x49,\n  0x06,\n  0x24,\n  0x5c,\n  0xc2,\n  0xd3,\n  0xac,\n  0x62,\n  0x91,\n  0x95,\n  0xe4,\n  0x79,\n  0xe7,\n  0xc8,\n  0x37,\n  0x6d,\n  0x8d,\n  0xd5,\n  0x4e,\n  0xa9,\n  0x6c,\n  0x56,\n  0xf4,\n  0xea,\n  0x65,\n  0x7a,\n  0xae,\n  0x08,\n  0xba,\n  0x78,\n  0x25,\n  0x2e,\n  0x1c,\n  0xa6,\n  0xb4,\n  0xc6,\n  0xe8,\n  0xdd,\n  0x74,\n  0x1f,\n  0x4b,\n  0xbd,\n  0x8b,\n  0x8a,\n  0x70,\n  0x3e,\n  0xb5,\n  0x66,\n  0x48,\n  0x03,\n  0xf6,\n  0x0e,\n  0x61,\n  0x35,\n  0x57,\n  0xb9,\n  0x86,\n  0xc1,\n  0x1d,\n  0x9e,\n  0xe1,\n  0xf8,\n  0x98,\n  0x11,\n  0x69,\n  0xd9,\n  0x8e,\n  0x94,\n  0x9b,\n  0x1e,\n  0x87,\n  0xe9,\n  0xce,\n  0x55,\n  0x28,\n  0xdf,\n  0x8c,\n  0xa1,\n  0x89,\n  0x0d,\n  0xbf,\n  0xe6,\n  0x42,\n  0x68,\n  0x41,\n  0x99,\n  0x2d,\n  0x0f,\n  0xb0,\n  0x54,\n  0xbb,\n  0x16\n ]);\n var inv_s = new Uint8Array([\n  0x52,\n  0x09,\n  0x6a,\n  0xd5,\n  0x30,\n  0x36,\n  0xa5,\n  0x38,\n  0xbf,\n  0x40,\n  0xa3,\n  0x9e,\n  0x81,\n  0xf3,\n  0xd7,\n  0xfb,\n  0x7c,\n  0xe3,\n  0x39,\n  0x82,\n  0x9b,\n  0x2f,\n  0xff,\n  0x87,\n  0x34,\n  0x8e,\n  0x43,\n  0x44,\n  0xc4,\n  0xde,\n  0xe9,\n  0xcb,\n  0x54,\n  0x7b,\n  0x94,\n  0x32,\n  0xa6,\n  0xc2,\n  0x23,\n  0x3d,\n  0xee,\n  0x4c,\n  0x95,\n  0x0b,\n  0x42,\n  0xfa,\n  0xc3,\n  0x4e,\n  0x08,\n  0x2e,\n  0xa1,\n  0x66,\n  0x28,\n  0xd9,\n  0x24,\n  0xb2,\n  0x76,\n  0x5b,\n  0xa2,\n  0x49,\n  0x6d,\n  0x8b,\n  0xd1,\n  0x25,\n  0x72,\n  0xf8,\n  0xf6,\n  0x64,\n  0x86,\n  0x68,\n  0x98,\n  0x16,\n  0xd4,\n  0xa4,\n  0x5c,\n  0xcc,\n  0x5d,\n  0x65,\n  0xb6,\n  0x92,\n  0x6c,\n  0x70,\n  0x48,\n  0x50,\n  0xfd,\n  0xed,\n  0xb9,\n  0xda,\n  0x5e,\n  0x15,\n  0x46,\n  0x57,\n  0xa7,\n  0x8d,\n  0x9d,\n  0x84,\n  0x90,\n  0xd8,\n  0xab,\n  0x00,\n  0x8c,\n  0xbc,\n  0xd3,\n  0x0a,\n  0xf7,\n  0xe4,\n  0x58,\n  0x05,\n  0xb8,\n  0xb3,\n  0x45,\n  0x06,\n  0xd0,\n  0x2c,\n  0x1e,\n  0x8f,\n  0xca,\n  0x3f,\n  0x0f,\n  0x02,\n  0xc1,\n  0xaf,\n  0xbd,\n  0x03,\n  0x01,\n  0x13,\n  0x8a,\n  0x6b,\n  0x3a,\n  0x91,\n  0x11,\n  0x41,\n  0x4f,\n  0x67,\n  0xdc,\n  0xea,\n  0x97,\n  0xf2,\n  0xcf,\n  0xce,\n  0xf0,\n  0xb4,\n  0xe6,\n  0x73,\n  0x96,\n  0xac,\n  0x74,\n  0x22,\n  0xe7,\n  0xad,\n  0x35,\n  0x85,\n  0xe2,\n  0xf9,\n  0x37,\n  0xe8,\n  0x1c,\n  0x75,\n  0xdf,\n  0x6e,\n  0x47,\n  0xf1,\n  0x1a,\n  0x71,\n  0x1d,\n  0x29,\n  0xc5,\n  0x89,\n  0x6f,\n  0xb7,\n  0x62,\n  0x0e,\n  0xaa,\n  0x18,\n  0xbe,\n  0x1b,\n  0xfc,\n  0x56,\n  0x3e,\n  0x4b,\n  0xc6,\n  0xd2,\n  0x79,\n  0x20,\n  0x9a,\n  0xdb,\n  0xc0,\n  0xfe,\n  0x78,\n  0xcd,\n  0x5a,\n  0xf4,\n  0x1f,\n  0xdd,\n  0xa8,\n  0x33,\n  0x88,\n  0x07,\n  0xc7,\n  0x31,\n  0xb1,\n  0x12,\n  0x10,\n  0x59,\n  0x27,\n  0x80,\n  0xec,\n  0x5f,\n  0x60,\n  0x51,\n  0x7f,\n  0xa9,\n  0x19,\n  0xb5,\n  0x4a,\n  0x0d,\n  0x2d,\n  0xe5,\n  0x7a,\n  0x9f,\n  0x93,\n  0xc9,\n  0x9c,\n  0xef,\n  0xa0,\n  0xe0,\n  0x3b,\n  0x4d,\n  0xae,\n  0x2a,\n  0xf5,\n  0xb0,\n  0xc8,\n  0xeb,\n  0xbb,\n  0x3c,\n  0x83,\n  0x53,\n  0x99,\n  0x61,\n  0x17,\n  0x2b,\n  0x04,\n  0x7e,\n  0xba,\n  0x77,\n  0xd6,\n  0x26,\n  0xe1,\n  0x69,\n  0x14,\n  0x63,\n  0x55,\n  0x21,\n  0x0c,\n  0x7d\n ]);\n var mixCol = new Uint8Array(256);\n for (var i = 0; i < 256; i++) {\n  if (i < 128) {\n   mixCol[i] = i << 1;\n  } else {\n   mixCol[i] = i << 1 ^ 0x1b;\n  }\n }\n var mix = new Uint32Array([\n  0x00000000,\n  0x0e090d0b,\n  0x1c121a16,\n  0x121b171d,\n  0x3824342c,\n  0x362d3927,\n  0x24362e3a,\n  0x2a3f2331,\n  0x70486858,\n  0x7e416553,\n  0x6c5a724e,\n  0x62537f45,\n  0x486c5c74,\n  0x4665517f,\n  0x547e4662,\n  0x5a774b69,\n  0xe090d0b0,\n  0xee99ddbb,\n  0xfc82caa6,\n  0xf28bc7ad,\n  0xd8b4e49c,\n  0xd6bde997,\n  0xc4a6fe8a,\n  0xcaaff381,\n  0x90d8b8e8,\n  0x9ed1b5e3,\n  0x8ccaa2fe,\n  0x82c3aff5,\n  0xa8fc8cc4,\n  0xa6f581cf,\n  0xb4ee96d2,\n  0xbae79bd9,\n  0xdb3bbb7b,\n  0xd532b670,\n  0xc729a16d,\n  0xc920ac66,\n  0xe31f8f57,\n  0xed16825c,\n  0xff0d9541,\n  0xf104984a,\n  0xab73d323,\n  0xa57ade28,\n  0xb761c935,\n  0xb968c43e,\n  0x9357e70f,\n  0x9d5eea04,\n  0x8f45fd19,\n  0x814cf012,\n  0x3bab6bcb,\n  0x35a266c0,\n  0x27b971dd,\n  0x29b07cd6,\n  0x038f5fe7,\n  0x0d8652ec,\n  0x1f9d45f1,\n  0x119448fa,\n  0x4be30393,\n  0x45ea0e98,\n  0x57f11985,\n  0x59f8148e,\n  0x73c737bf,\n  0x7dce3ab4,\n  0x6fd52da9,\n  0x61dc20a2,\n  0xad766df6,\n  0xa37f60fd,\n  0xb16477e0,\n  0xbf6d7aeb,\n  0x955259da,\n  0x9b5b54d1,\n  0x894043cc,\n  0x87494ec7,\n  0xdd3e05ae,\n  0xd33708a5,\n  0xc12c1fb8,\n  0xcf2512b3,\n  0xe51a3182,\n  0xeb133c89,\n  0xf9082b94,\n  0xf701269f,\n  0x4de6bd46,\n  0x43efb04d,\n  0x51f4a750,\n  0x5ffdaa5b,\n  0x75c2896a,\n  0x7bcb8461,\n  0x69d0937c,\n  0x67d99e77,\n  0x3daed51e,\n  0x33a7d815,\n  0x21bccf08,\n  0x2fb5c203,\n  0x058ae132,\n  0x0b83ec39,\n  0x1998fb24,\n  0x1791f62f,\n  0x764dd68d,\n  0x7844db86,\n  0x6a5fcc9b,\n  0x6456c190,\n  0x4e69e2a1,\n  0x4060efaa,\n  0x527bf8b7,\n  0x5c72f5bc,\n  0x0605bed5,\n  0x080cb3de,\n  0x1a17a4c3,\n  0x141ea9c8,\n  0x3e218af9,\n  0x302887f2,\n  0x223390ef,\n  0x2c3a9de4,\n  0x96dd063d,\n  0x98d40b36,\n  0x8acf1c2b,\n  0x84c61120,\n  0xaef93211,\n  0xa0f03f1a,\n  0xb2eb2807,\n  0xbce2250c,\n  0xe6956e65,\n  0xe89c636e,\n  0xfa877473,\n  0xf48e7978,\n  0xdeb15a49,\n  0xd0b85742,\n  0xc2a3405f,\n  0xccaa4d54,\n  0x41ecdaf7,\n  0x4fe5d7fc,\n  0x5dfec0e1,\n  0x53f7cdea,\n  0x79c8eedb,\n  0x77c1e3d0,\n  0x65daf4cd,\n  0x6bd3f9c6,\n  0x31a4b2af,\n  0x3fadbfa4,\n  0x2db6a8b9,\n  0x23bfa5b2,\n  0x09808683,\n  0x07898b88,\n  0x15929c95,\n  0x1b9b919e,\n  0xa17c0a47,\n  0xaf75074c,\n  0xbd6e1051,\n  0xb3671d5a,\n  0x99583e6b,\n  0x97513360,\n  0x854a247d,\n  0x8b432976,\n  0xd134621f,\n  0xdf3d6f14,\n  0xcd267809,\n  0xc32f7502,\n  0xe9105633,\n  0xe7195b38,\n  0xf5024c25,\n  0xfb0b412e,\n  0x9ad7618c,\n  0x94de6c87,\n  0x86c57b9a,\n  0x88cc7691,\n  0xa2f355a0,\n  0xacfa58ab,\n  0xbee14fb6,\n  0xb0e842bd,\n  0xea9f09d4,\n  0xe49604df,\n  0xf68d13c2,\n  0xf8841ec9,\n  0xd2bb3df8,\n  0xdcb230f3,\n  0xcea927ee,\n  0xc0a02ae5,\n  0x7a47b13c,\n  0x744ebc37,\n  0x6655ab2a,\n  0x685ca621,\n  0x42638510,\n  0x4c6a881b,\n  0x5e719f06,\n  0x5078920d,\n  0x0a0fd964,\n  0x0406d46f,\n  0x161dc372,\n  0x1814ce79,\n  0x322bed48,\n  0x3c22e043,\n  0x2e39f75e,\n  0x2030fa55,\n  0xec9ab701,\n  0xe293ba0a,\n  0xf088ad17,\n  0xfe81a01c,\n  0xd4be832d,\n  0xdab78e26,\n  0xc8ac993b,\n  0xc6a59430,\n  0x9cd2df59,\n  0x92dbd252,\n  0x80c0c54f,\n  0x8ec9c844,\n  0xa4f6eb75,\n  0xaaffe67e,\n  0xb8e4f163,\n  0xb6edfc68,\n  0x0c0a67b1,\n  0x02036aba,\n  0x10187da7,\n  0x1e1170ac,\n  0x342e539d,\n  0x3a275e96,\n  0x283c498b,\n  0x26354480,\n  0x7c420fe9,\n  0x724b02e2,\n  0x605015ff,\n  0x6e5918f4,\n  0x44663bc5,\n  0x4a6f36ce,\n  0x587421d3,\n  0x567d2cd8,\n  0x37a10c7a,\n  0x39a80171,\n  0x2bb3166c,\n  0x25ba1b67,\n  0x0f853856,\n  0x018c355d,\n  0x13972240,\n  0x1d9e2f4b,\n  0x47e96422,\n  0x49e06929,\n  0x5bfb7e34,\n  0x55f2733f,\n  0x7fcd500e,\n  0x71c45d05,\n  0x63df4a18,\n  0x6dd64713,\n  0xd731dcca,\n  0xd938d1c1,\n  0xcb23c6dc,\n  0xc52acbd7,\n  0xef15e8e6,\n  0xe11ce5ed,\n  0xf307f2f0,\n  0xfd0efffb,\n  0xa779b492,\n  0xa970b999,\n  0xbb6bae84,\n  0xb562a38f,\n  0x9f5d80be,\n  0x91548db5,\n  0x834f9aa8,\n  0x8d4697a3\n ]);\n function expandKey256(cipherKey) {\n  var b = 240, result = new Uint8Array(b);\n  var r = 1;\n  result.set(cipherKey);\n  for (var j = 32, i = 1; j < b; ++i) {\n   if (j % 32 === 16) {\n    t1 = s[t1];\n    t2 = s[t2];\n    t3 = s[t3];\n    t4 = s[t4];\n   } else if (j % 32 === 0) {\n    var t1 = result[j - 3], t2 = result[j - 2], t3 = result[j - 1], t4 = result[j - 4];\n    t1 = s[t1];\n    t2 = s[t2];\n    t3 = s[t3];\n    t4 = s[t4];\n    t1 = t1 ^ r;\n    if ((r <<= 1) >= 256) {\n     r = (r ^ 0x1b) & 0xFF;\n    }\n   }\n   for (var n = 0; n < 4; ++n) {\n    result[j] = t1 ^= result[j - 32];\n    j++;\n    result[j] = t2 ^= result[j - 32];\n    j++;\n    result[j] = t3 ^= result[j - 32];\n    j++;\n    result[j] = t4 ^= result[j - 32];\n    j++;\n   }\n  }\n  return result;\n }\n function decrypt256(input, key) {\n  var state = new Uint8Array(16);\n  state.set(input);\n  var i, j, k;\n  var t, u, v;\n  for (j = 0, k = 224; j < 16; ++j, ++k) {\n   state[j] ^= key[k];\n  }\n  for (i = 13; i >= 1; --i) {\n   t = state[13];\n   state[13] = state[9];\n   state[9] = state[5];\n   state[5] = state[1];\n   state[1] = t;\n   t = state[14];\n   u = state[10];\n   state[14] = state[6];\n   state[10] = state[2];\n   state[6] = t;\n   state[2] = u;\n   t = state[15];\n   u = state[11];\n   v = state[7];\n   state[15] = state[3];\n   state[11] = t;\n   state[7] = u;\n   state[3] = v;\n   for (j = 0; j < 16; ++j) {\n    state[j] = inv_s[state[j]];\n   }\n   for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n    state[j] ^= key[k];\n   }\n   for (j = 0; j < 16; j += 4) {\n    var s0 = mix[state[j]], s1 = mix[state[j + 1]], s2 = mix[state[j + 2]], s3 = mix[state[j + 3]];\n    t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n    state[j] = t >>> 24 & 0xFF;\n    state[j + 1] = t >> 16 & 0xFF;\n    state[j + 2] = t >> 8 & 0xFF;\n    state[j + 3] = t & 0xFF;\n   }\n  }\n  t = state[13];\n  state[13] = state[9];\n  state[9] = state[5];\n  state[5] = state[1];\n  state[1] = t;\n  t = state[14];\n  u = state[10];\n  state[14] = state[6];\n  state[10] = state[2];\n  state[6] = t;\n  state[2] = u;\n  t = state[15];\n  u = state[11];\n  v = state[7];\n  state[15] = state[3];\n  state[11] = t;\n  state[7] = u;\n  state[3] = v;\n  for (j = 0; j < 16; ++j) {\n   state[j] = inv_s[state[j]];\n   state[j] ^= key[j];\n  }\n  return state;\n }\n function encrypt256(input, key) {\n  var t, u, v, k;\n  var state = new Uint8Array(16);\n  state.set(input);\n  for (j = 0; j < 16; ++j) {\n   state[j] ^= key[j];\n  }\n  for (i = 1; i < 14; i++) {\n   for (j = 0; j < 16; ++j) {\n    state[j] = s[state[j]];\n   }\n   v = state[1];\n   state[1] = state[5];\n   state[5] = state[9];\n   state[9] = state[13];\n   state[13] = v;\n   v = state[2];\n   u = state[6];\n   state[2] = state[10];\n   state[6] = state[14];\n   state[10] = v;\n   state[14] = u;\n   v = state[3];\n   u = state[7];\n   t = state[11];\n   state[3] = state[15];\n   state[7] = v;\n   state[11] = u;\n   state[15] = t;\n   for (var j = 0; j < 16; j += 4) {\n    var s0 = state[j + 0], s1 = state[j + 1];\n    var s2 = state[j + 2], s3 = state[j + 3];\n    t = s0 ^ s1 ^ s2 ^ s3;\n    state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n    state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n    state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n    state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n   }\n   for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n    state[j] ^= key[k];\n   }\n  }\n  for (j = 0; j < 16; ++j) {\n   state[j] = s[state[j]];\n  }\n  v = state[1];\n  state[1] = state[5];\n  state[5] = state[9];\n  state[9] = state[13];\n  state[13] = v;\n  v = state[2];\n  u = state[6];\n  state[2] = state[10];\n  state[6] = state[14];\n  state[10] = v;\n  state[14] = u;\n  v = state[3];\n  u = state[7];\n  t = state[11];\n  state[3] = state[15];\n  state[7] = v;\n  state[11] = u;\n  state[15] = t;\n  for (j = 0, k = 224; j < 16; ++j, ++k) {\n   state[j] ^= key[k];\n  }\n  return state;\n }\n function AES256Cipher(key) {\n  this.key = expandKey256(key);\n  this.buffer = new Uint8Array(16);\n  this.bufferPosition = 0;\n }\n function decryptBlock2(data, finalize) {\n  var i, j, ii, sourceLength = data.length, buffer = this.buffer, bufferLength = this.bufferPosition, result = [], iv = this.iv;\n  for (i = 0; i < sourceLength; ++i) {\n   buffer[bufferLength] = data[i];\n   ++bufferLength;\n   if (bufferLength < 16) {\n    continue;\n   }\n   var plain = decrypt256(buffer, this.key);\n   for (j = 0; j < 16; ++j) {\n    plain[j] ^= iv[j];\n   }\n   iv = buffer;\n   result.push(plain);\n   buffer = new Uint8Array(16);\n   bufferLength = 0;\n  }\n  this.buffer = buffer;\n  this.bufferLength = bufferLength;\n  this.iv = iv;\n  if (result.length === 0) {\n   return new Uint8Array([]);\n  }\n  var outputLength = 16 * result.length;\n  if (finalize) {\n   var lastBlock = result[result.length - 1];\n   var psLen = lastBlock[15];\n   if (psLen <= 16) {\n    for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n     if (lastBlock[i] !== psLen) {\n      psLen = 0;\n      break;\n     }\n    }\n    outputLength -= psLen;\n    result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n   }\n  }\n  var output = new Uint8Array(outputLength);\n  for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n   output.set(result[i], j);\n  }\n  return output;\n }\n AES256Cipher.prototype = {\n  decryptBlock: function AES256Cipher_decryptBlock(data, finalize, iv) {\n   var i, sourceLength = data.length;\n   var buffer = this.buffer, bufferLength = this.bufferPosition;\n   if (iv) {\n    this.iv = iv;\n   } else {\n    for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n     buffer[bufferLength] = data[i];\n    }\n    if (bufferLength < 16) {\n     this.bufferLength = bufferLength;\n     return new Uint8Array([]);\n    }\n    this.iv = buffer;\n    data = data.subarray(16);\n   }\n   this.buffer = new Uint8Array(16);\n   this.bufferLength = 0;\n   this.decryptBlock = decryptBlock2;\n   return this.decryptBlock(data, finalize);\n  },\n  encrypt: function AES256Cipher_encrypt(data, iv) {\n   var i, j, ii, sourceLength = data.length, buffer = this.buffer, bufferLength = this.bufferPosition, result = [];\n   if (!iv) {\n    iv = new Uint8Array(16);\n   }\n   for (i = 0; i < sourceLength; ++i) {\n    buffer[bufferLength] = data[i];\n    ++bufferLength;\n    if (bufferLength < 16) {\n     continue;\n    }\n    for (j = 0; j < 16; ++j) {\n     buffer[j] ^= iv[j];\n    }\n    var cipher = encrypt256(buffer, this.key);\n    this.iv = cipher;\n    result.push(cipher);\n    buffer = new Uint8Array(16);\n    bufferLength = 0;\n   }\n   this.buffer = buffer;\n   this.bufferLength = bufferLength;\n   this.iv = iv;\n   if (result.length === 0) {\n    return new Uint8Array([]);\n   }\n   var outputLength = 16 * result.length;\n   var output = new Uint8Array(outputLength);\n   for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n    output.set(result[i], j);\n   }\n   return output;\n  }\n };\n return AES256Cipher;\n}();\nvar PDF17 = function PDF17Closure() {\n function compareByteArrays(array1, array2) {\n  if (array1.length !== array2.length) {\n   return false;\n  }\n  for (var i = 0; i < array1.length; i++) {\n   if (array1[i] !== array2[i]) {\n    return false;\n   }\n  }\n  return true;\n }\n function PDF17() {\n }\n PDF17.prototype = {\n  checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n   var hashData = new Uint8Array(password.length + 56);\n   hashData.set(password, 0);\n   hashData.set(ownerValidationSalt, password.length);\n   hashData.set(userBytes, password.length + ownerValidationSalt.length);\n   var result = calculateSHA256(hashData, 0, hashData.length);\n   return compareByteArrays(result, ownerPassword);\n  },\n  checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\n   var hashData = new Uint8Array(password.length + 8);\n   hashData.set(password, 0);\n   hashData.set(userValidationSalt, password.length);\n   var result = calculateSHA256(hashData, 0, hashData.length);\n   return compareByteArrays(result, userPassword);\n  },\n  getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n   var hashData = new Uint8Array(password.length + 56);\n   hashData.set(password, 0);\n   hashData.set(ownerKeySalt, password.length);\n   hashData.set(userBytes, password.length + ownerKeySalt.length);\n   var key = calculateSHA256(hashData, 0, hashData.length);\n   var cipher = new AES256Cipher(key);\n   return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n  },\n  getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\n   var hashData = new Uint8Array(password.length + 8);\n   hashData.set(password, 0);\n   hashData.set(userKeySalt, password.length);\n   var key = calculateSHA256(hashData, 0, hashData.length);\n   var cipher = new AES256Cipher(key);\n   return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n  }\n };\n return PDF17;\n}();\nvar PDF20 = function PDF20Closure() {\n function concatArrays(array1, array2) {\n  var t = new Uint8Array(array1.length + array2.length);\n  t.set(array1, 0);\n  t.set(array2, array1.length);\n  return t;\n }\n function calculatePDF20Hash(password, input, userBytes) {\n  var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\n  var e = [0];\n  var i = 0;\n  while (i < 64 || e[e.length - 1] > i - 32) {\n   var arrayLength = password.length + k.length + userBytes.length;\n   var k1 = new Uint8Array(arrayLength * 64);\n   var array = concatArrays(password, k);\n   array = concatArrays(array, userBytes);\n   for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\n    k1.set(array, pos);\n   }\n   var cipher = new AES128Cipher(k.subarray(0, 16));\n   e = cipher.encrypt(k1, k.subarray(16, 32));\n   var remainder = 0;\n   for (var z = 0; z < 16; z++) {\n    remainder *= 256 % 3;\n    remainder %= 3;\n    remainder += (e[z] >>> 0) % 3;\n    remainder %= 3;\n   }\n   if (remainder === 0) {\n    k = calculateSHA256(e, 0, e.length);\n   } else if (remainder === 1) {\n    k = calculateSHA384(e, 0, e.length);\n   } else if (remainder === 2) {\n    k = calculateSHA512(e, 0, e.length);\n   }\n   i++;\n  }\n  return k.subarray(0, 32);\n }\n function PDF20() {\n }\n function compareByteArrays(array1, array2) {\n  if (array1.length !== array2.length) {\n   return false;\n  }\n  for (var i = 0; i < array1.length; i++) {\n   if (array1[i] !== array2[i]) {\n    return false;\n   }\n  }\n  return true;\n }\n PDF20.prototype = {\n  hash: function PDF20_hash(password, concatBytes, userBytes) {\n   return calculatePDF20Hash(password, concatBytes, userBytes);\n  },\n  checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n   var hashData = new Uint8Array(password.length + 56);\n   hashData.set(password, 0);\n   hashData.set(ownerValidationSalt, password.length);\n   hashData.set(userBytes, password.length + ownerValidationSalt.length);\n   var result = calculatePDF20Hash(password, hashData, userBytes);\n   return compareByteArrays(result, ownerPassword);\n  },\n  checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\n   var hashData = new Uint8Array(password.length + 8);\n   hashData.set(password, 0);\n   hashData.set(userValidationSalt, password.length);\n   var result = calculatePDF20Hash(password, hashData, []);\n   return compareByteArrays(result, userPassword);\n  },\n  getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n   var hashData = new Uint8Array(password.length + 56);\n   hashData.set(password, 0);\n   hashData.set(ownerKeySalt, password.length);\n   hashData.set(userBytes, password.length + ownerKeySalt.length);\n   var key = calculatePDF20Hash(password, hashData, userBytes);\n   var cipher = new AES256Cipher(key);\n   return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n  },\n  getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\n   var hashData = new Uint8Array(password.length + 8);\n   hashData.set(password, 0);\n   hashData.set(userKeySalt, password.length);\n   var key = calculatePDF20Hash(password, hashData, []);\n   var cipher = new AES256Cipher(key);\n   return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n  }\n };\n return PDF20;\n}();\nvar CipherTransform = function CipherTransformClosure() {\n function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\n  this.StringCipherConstructor = stringCipherConstructor;\n  this.StreamCipherConstructor = streamCipherConstructor;\n }\n CipherTransform.prototype = {\n  createStream: function CipherTransform_createStream(stream, length) {\n   var cipher = new this.StreamCipherConstructor();\n   return new DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\n    return cipher.decryptBlock(data, finalize);\n   });\n  },\n  decryptString: function CipherTransform_decryptString(s) {\n   var cipher = new this.StringCipherConstructor();\n   var data = stringToBytes(s);\n   data = cipher.decryptBlock(data, true);\n   return bytesToString(data);\n  }\n };\n return CipherTransform;\n}();\nvar CipherTransformFactory = function CipherTransformFactoryClosure() {\n var defaultPasswordBytes = new Uint8Array([\n  0x28,\n  0xBF,\n  0x4E,\n  0x5E,\n  0x4E,\n  0x75,\n  0x8A,\n  0x41,\n  0x64,\n  0x00,\n  0x4E,\n  0x56,\n  0xFF,\n  0xFA,\n  0x01,\n  0x08,\n  0x2E,\n  0x2E,\n  0x00,\n  0xB6,\n  0xD0,\n  0x68,\n  0x3E,\n  0x80,\n  0x2F,\n  0x0C,\n  0xA9,\n  0xFE,\n  0x64,\n  0x53,\n  0x69,\n  0x7A\n ]);\n function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\n  if (password) {\n   var passwordLength = Math.min(127, password.length);\n   password = password.subarray(0, passwordLength);\n  } else {\n   password = [];\n  }\n  var pdfAlgorithm;\n  if (revision === 6) {\n   pdfAlgorithm = new PDF20();\n  } else {\n   pdfAlgorithm = new PDF17();\n  }\n  if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\n   return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\n  } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\n   return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n  }\n  return null;\n }\n function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\n  var hashDataSize = 40 + ownerPassword.length + fileId.length;\n  var hashData = new Uint8Array(hashDataSize), i = 0, j, n;\n  if (password) {\n   n = Math.min(32, password.length);\n   for (; i < n; ++i) {\n    hashData[i] = password[i];\n   }\n  }\n  j = 0;\n  while (i < 32) {\n   hashData[i++] = defaultPasswordBytes[j++];\n  }\n  for (j = 0, n = ownerPassword.length; j < n; ++j) {\n   hashData[i++] = ownerPassword[j];\n  }\n  hashData[i++] = flags & 0xFF;\n  hashData[i++] = flags >> 8 & 0xFF;\n  hashData[i++] = flags >> 16 & 0xFF;\n  hashData[i++] = flags >>> 24 & 0xFF;\n  for (j = 0, n = fileId.length; j < n; ++j) {\n   hashData[i++] = fileId[j];\n  }\n  if (revision >= 4 && !encryptMetadata) {\n   hashData[i++] = 0xFF;\n   hashData[i++] = 0xFF;\n   hashData[i++] = 0xFF;\n   hashData[i++] = 0xFF;\n  }\n  var hash = calculateMD5(hashData, 0, i);\n  var keyLengthInBytes = keyLength >> 3;\n  if (revision >= 3) {\n   for (j = 0; j < 50; ++j) {\n    hash = calculateMD5(hash, 0, keyLengthInBytes);\n   }\n  }\n  var encryptionKey = hash.subarray(0, keyLengthInBytes);\n  var cipher, checkData;\n  if (revision >= 3) {\n   for (i = 0; i < 32; ++i) {\n    hashData[i] = defaultPasswordBytes[i];\n   }\n   for (j = 0, n = fileId.length; j < n; ++j) {\n    hashData[i++] = fileId[j];\n   }\n   cipher = new ARCFourCipher(encryptionKey);\n   checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\n   n = encryptionKey.length;\n   var derivedKey = new Uint8Array(n), k;\n   for (j = 1; j <= 19; ++j) {\n    for (k = 0; k < n; ++k) {\n     derivedKey[k] = encryptionKey[k] ^ j;\n    }\n    cipher = new ARCFourCipher(derivedKey);\n    checkData = cipher.encryptBlock(checkData);\n   }\n   for (j = 0, n = checkData.length; j < n; ++j) {\n    if (userPassword[j] !== checkData[j]) {\n     return null;\n    }\n   }\n  } else {\n   cipher = new ARCFourCipher(encryptionKey);\n   checkData = cipher.encryptBlock(defaultPasswordBytes);\n   for (j = 0, n = checkData.length; j < n; ++j) {\n    if (userPassword[j] !== checkData[j]) {\n     return null;\n    }\n   }\n  }\n  return encryptionKey;\n }\n function decodeUserPassword(password, ownerPassword, revision, keyLength) {\n  var hashData = new Uint8Array(32), i = 0, j, n;\n  n = Math.min(32, password.length);\n  for (; i < n; ++i) {\n   hashData[i] = password[i];\n  }\n  j = 0;\n  while (i < 32) {\n   hashData[i++] = defaultPasswordBytes[j++];\n  }\n  var hash = calculateMD5(hashData, 0, i);\n  var keyLengthInBytes = keyLength >> 3;\n  if (revision >= 3) {\n   for (j = 0; j < 50; ++j) {\n    hash = calculateMD5(hash, 0, hash.length);\n   }\n  }\n  var cipher, userPassword;\n  if (revision >= 3) {\n   userPassword = ownerPassword;\n   var derivedKey = new Uint8Array(keyLengthInBytes), k;\n   for (j = 19; j >= 0; j--) {\n    for (k = 0; k < keyLengthInBytes; ++k) {\n     derivedKey[k] = hash[k] ^ j;\n    }\n    cipher = new ARCFourCipher(derivedKey);\n    userPassword = cipher.encryptBlock(userPassword);\n   }\n  } else {\n   cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\n   userPassword = cipher.encryptBlock(ownerPassword);\n  }\n  return userPassword;\n }\n var identityName = Name.get('Identity');\n function CipherTransformFactory(dict, fileId, password) {\n  var filter = dict.get('Filter');\n  if (!isName(filter, 'Standard')) {\n   error('unknown encryption method');\n  }\n  this.dict = dict;\n  var algorithm = dict.get('V');\n  if (!isInt(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\n   error('unsupported encryption algorithm');\n  }\n  this.algorithm = algorithm;\n  var keyLength = dict.get('Length');\n  if (!keyLength) {\n   if (algorithm <= 3) {\n    keyLength = 40;\n   } else {\n    var cfDict = dict.get('CF');\n    var streamCryptoName = dict.get('StmF');\n    if (isDict(cfDict) && isName(streamCryptoName)) {\n     cfDict.suppressEncryption = true;\n     var handlerDict = cfDict.get(streamCryptoName.name);\n     keyLength = handlerDict && handlerDict.get('Length') || 128;\n     if (keyLength < 40) {\n      keyLength <<= 3;\n     }\n    }\n   }\n  }\n  if (!isInt(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n   error('invalid key length');\n  }\n  var ownerPassword = stringToBytes(dict.get('O')).subarray(0, 32);\n  var userPassword = stringToBytes(dict.get('U')).subarray(0, 32);\n  var flags = dict.get('P');\n  var revision = dict.get('R');\n  var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\n  this.encryptMetadata = encryptMetadata;\n  var fileIdBytes = stringToBytes(fileId);\n  var passwordBytes;\n  if (password) {\n   if (revision === 6) {\n    try {\n     password = utf8StringToString(password);\n    } catch (ex) {\n     warn('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\n    }\n   }\n   passwordBytes = stringToBytes(password);\n  }\n  var encryptionKey;\n  if (algorithm !== 5) {\n   encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n  } else {\n   var ownerValidationSalt = stringToBytes(dict.get('O')).subarray(32, 40);\n   var ownerKeySalt = stringToBytes(dict.get('O')).subarray(40, 48);\n   var uBytes = stringToBytes(dict.get('U')).subarray(0, 48);\n   var userValidationSalt = stringToBytes(dict.get('U')).subarray(32, 40);\n   var userKeySalt = stringToBytes(dict.get('U')).subarray(40, 48);\n   var ownerEncryption = stringToBytes(dict.get('OE'));\n   var userEncryption = stringToBytes(dict.get('UE'));\n   var perms = stringToBytes(dict.get('Perms'));\n   encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\n  }\n  if (!encryptionKey && !password) {\n   throw new PasswordException('No password given', PasswordResponses.NEED_PASSWORD);\n  } else if (!encryptionKey && password) {\n   var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n   encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n  }\n  if (!encryptionKey) {\n   throw new PasswordException('Incorrect Password', PasswordResponses.INCORRECT_PASSWORD);\n  }\n  this.encryptionKey = encryptionKey;\n  if (algorithm >= 4) {\n   var cf = dict.get('CF');\n   if (isDict(cf)) {\n    cf.suppressEncryption = true;\n   }\n   this.cf = cf;\n   this.stmf = dict.get('StmF') || identityName;\n   this.strf = dict.get('StrF') || identityName;\n   this.eff = dict.get('EFF') || this.stmf;\n  }\n }\n function buildObjectKey(num, gen, encryptionKey, isAes) {\n  var key = new Uint8Array(encryptionKey.length + 9), i, n;\n  for (i = 0, n = encryptionKey.length; i < n; ++i) {\n   key[i] = encryptionKey[i];\n  }\n  key[i++] = num & 0xFF;\n  key[i++] = num >> 8 & 0xFF;\n  key[i++] = num >> 16 & 0xFF;\n  key[i++] = gen & 0xFF;\n  key[i++] = gen >> 8 & 0xFF;\n  if (isAes) {\n   key[i++] = 0x73;\n   key[i++] = 0x41;\n   key[i++] = 0x6C;\n   key[i++] = 0x54;\n  }\n  var hash = calculateMD5(key, 0, i);\n  return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n }\n function buildCipherConstructor(cf, name, num, gen, key) {\n  assert(isName(name), 'Invalid crypt filter name.');\n  var cryptFilter = cf.get(name.name);\n  var cfm;\n  if (cryptFilter !== null && cryptFilter !== undefined) {\n   cfm = cryptFilter.get('CFM');\n  }\n  if (!cfm || cfm.name === 'None') {\n   return function cipherTransformFactoryBuildCipherConstructorNone() {\n    return new NullCipher();\n   };\n  }\n  if (cfm.name === 'V2') {\n   return function cipherTransformFactoryBuildCipherConstructorV2() {\n    return new ARCFourCipher(buildObjectKey(num, gen, key, false));\n   };\n  }\n  if (cfm.name === 'AESV2') {\n   return function cipherTransformFactoryBuildCipherConstructorAESV2() {\n    return new AES128Cipher(buildObjectKey(num, gen, key, true));\n   };\n  }\n  if (cfm.name === 'AESV3') {\n   return function cipherTransformFactoryBuildCipherConstructorAESV3() {\n    return new AES256Cipher(key);\n   };\n  }\n  error('Unknown crypto method');\n }\n CipherTransformFactory.prototype = {\n  createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\n   if (this.algorithm === 4 || this.algorithm === 5) {\n    return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\n   }\n   var key = buildObjectKey(num, gen, this.encryptionKey, false);\n   var cipherConstructor = function buildCipherCipherConstructor() {\n    return new ARCFourCipher(key);\n   };\n   return new CipherTransform(cipherConstructor, cipherConstructor);\n  }\n };\n return CipherTransformFactory;\n}();\nexports.AES128Cipher = AES128Cipher;\nexports.AES256Cipher = AES256Cipher;\nexports.ARCFourCipher = ARCFourCipher;\nexports.CipherTransformFactory = CipherTransformFactory;\nexports.PDF17 = PDF17;\nexports.PDF20 = PDF20;\nexports.calculateMD5 = calculateMD5;\nexports.calculateSHA256 = calculateSHA256;\nexports.calculateSHA384 = calculateSHA384;\nexports.calculateSHA512 = calculateSHA512;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar coreStream = __w_pdfjs_require__(2);\nvar coreParser = __w_pdfjs_require__(5);\nvar coreImage = __w_pdfjs_require__(27);\nvar coreColorSpace = __w_pdfjs_require__(3);\nvar coreMurmurHash3 = __w_pdfjs_require__(31);\nvar coreFonts = __w_pdfjs_require__(26);\nvar coreFunction = __w_pdfjs_require__(6);\nvar corePattern = __w_pdfjs_require__(32);\nvar coreCMap = __w_pdfjs_require__(23);\nvar coreMetrics = __w_pdfjs_require__(30);\nvar coreBidi = __w_pdfjs_require__(21);\nvar coreEncodings = __w_pdfjs_require__(4);\nvar coreStandardFonts = __w_pdfjs_require__(17);\nvar coreUnicode = __w_pdfjs_require__(18);\nvar coreGlyphList = __w_pdfjs_require__(7);\nvar FONT_IDENTITY_MATRIX = sharedUtil.FONT_IDENTITY_MATRIX;\nvar IDENTITY_MATRIX = sharedUtil.IDENTITY_MATRIX;\nvar UNSUPPORTED_FEATURES = sharedUtil.UNSUPPORTED_FEATURES;\nvar ImageKind = sharedUtil.ImageKind;\nvar OPS = sharedUtil.OPS;\nvar TextRenderingMode = sharedUtil.TextRenderingMode;\nvar CMapCompressionType = sharedUtil.CMapCompressionType;\nvar Util = sharedUtil.Util;\nvar assert = sharedUtil.assert;\nvar createPromiseCapability = sharedUtil.createPromiseCapability;\nvar error = sharedUtil.error;\nvar info = sharedUtil.info;\nvar isArray = sharedUtil.isArray;\nvar isNum = sharedUtil.isNum;\nvar isString = sharedUtil.isString;\nvar getLookupTableFactory = sharedUtil.getLookupTableFactory;\nvar warn = sharedUtil.warn;\nvar Dict = corePrimitives.Dict;\nvar Name = corePrimitives.Name;\nvar isEOF = corePrimitives.isEOF;\nvar isCmd = corePrimitives.isCmd;\nvar isDict = corePrimitives.isDict;\nvar isName = corePrimitives.isName;\nvar isRef = corePrimitives.isRef;\nvar isStream = corePrimitives.isStream;\nvar DecodeStream = coreStream.DecodeStream;\nvar JpegStream = coreStream.JpegStream;\nvar Stream = coreStream.Stream;\nvar Lexer = coreParser.Lexer;\nvar Parser = coreParser.Parser;\nvar PDFImage = coreImage.PDFImage;\nvar ColorSpace = coreColorSpace.ColorSpace;\nvar MurmurHash3_64 = coreMurmurHash3.MurmurHash3_64;\nvar ErrorFont = coreFonts.ErrorFont;\nvar FontFlags = coreFonts.FontFlags;\nvar Font = coreFonts.Font;\nvar IdentityToUnicodeMap = coreFonts.IdentityToUnicodeMap;\nvar ToUnicodeMap = coreFonts.ToUnicodeMap;\nvar getFontType = coreFonts.getFontType;\nvar isPDFFunction = coreFunction.isPDFFunction;\nvar PDFFunction = coreFunction.PDFFunction;\nvar Pattern = corePattern.Pattern;\nvar getTilingPatternIR = corePattern.getTilingPatternIR;\nvar CMapFactory = coreCMap.CMapFactory;\nvar IdentityCMap = coreCMap.IdentityCMap;\nvar getMetrics = coreMetrics.getMetrics;\nvar bidi = coreBidi.bidi;\nvar WinAnsiEncoding = coreEncodings.WinAnsiEncoding;\nvar StandardEncoding = coreEncodings.StandardEncoding;\nvar MacRomanEncoding = coreEncodings.MacRomanEncoding;\nvar SymbolSetEncoding = coreEncodings.SymbolSetEncoding;\nvar ZapfDingbatsEncoding = coreEncodings.ZapfDingbatsEncoding;\nvar getEncoding = coreEncodings.getEncoding;\nvar getStdFontMap = coreStandardFonts.getStdFontMap;\nvar getSerifFonts = coreStandardFonts.getSerifFonts;\nvar getSymbolsFonts = coreStandardFonts.getSymbolsFonts;\nvar getNormalizedUnicodes = coreUnicode.getNormalizedUnicodes;\nvar reverseIfRtl = coreUnicode.reverseIfRtl;\nvar getUnicodeForGlyph = coreUnicode.getUnicodeForGlyph;\nvar getGlyphsUnicode = coreGlyphList.getGlyphsUnicode;\nvar PartialEvaluator = function PartialEvaluatorClosure() {\n var DefaultPartialEvaluatorOptions = {\n  forceDataSchema: false,\n  maxImageSize: -1,\n  disableFontFace: false,\n  disableNativeImageDecoder: false\n };\n function NativeImageDecoder(xref, resources, handler, forceDataSchema) {\n  this.xref = xref;\n  this.resources = resources;\n  this.handler = handler;\n  this.forceDataSchema = forceDataSchema;\n }\n NativeImageDecoder.prototype = {\n  canDecode: function (image) {\n   return image instanceof JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources);\n  },\n  decode: function (image) {\n   var dict = image.dict;\n   var colorSpace = dict.get('ColorSpace', 'CS');\n   colorSpace = ColorSpace.parse(colorSpace, this.xref, this.resources);\n   var numComps = colorSpace.numComps;\n   var decodePromise = this.handler.sendWithPromise('JpegDecode', [\n    image.getIR(this.forceDataSchema),\n    numComps\n   ]);\n   return decodePromise.then(function (message) {\n    var data = message.data;\n    return new Stream(data, 0, data.length, image.dict);\n   });\n  }\n };\n NativeImageDecoder.isSupported = function NativeImageDecoder_isSupported(image, xref, res) {\n  var dict = image.dict;\n  if (dict.has('DecodeParms') || dict.has('DP')) {\n   return false;\n  }\n  var cs = ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res);\n  return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n };\n NativeImageDecoder.isDecodable = function NativeImageDecoder_isDecodable(image, xref, res) {\n  var dict = image.dict;\n  if (dict.has('DecodeParms') || dict.has('DP')) {\n   return false;\n  }\n  var cs = ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res);\n  return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n };\n function PartialEvaluator(pdfManager, xref, handler, pageIndex, idFactory, fontCache, builtInCMapCache, options) {\n  this.pdfManager = pdfManager;\n  this.xref = xref;\n  this.handler = handler;\n  this.pageIndex = pageIndex;\n  this.idFactory = idFactory;\n  this.fontCache = fontCache;\n  this.builtInCMapCache = builtInCMapCache;\n  this.options = options || DefaultPartialEvaluatorOptions;\n  this.fetchBuiltInCMap = function (name) {\n   var cachedCMap = builtInCMapCache[name];\n   if (cachedCMap) {\n    return Promise.resolve(cachedCMap);\n   }\n   return handler.sendWithPromise('FetchBuiltInCMap', { name: name }).then(function (data) {\n    if (data.compressionType !== CMapCompressionType.NONE) {\n     builtInCMapCache[name] = data;\n    }\n    return data;\n   });\n  };\n }\n var TIME_SLOT_DURATION_MS = 20;\n var CHECK_TIME_EVERY = 100;\n function TimeSlotManager() {\n  this.reset();\n }\n TimeSlotManager.prototype = {\n  check: function TimeSlotManager_check() {\n   if (++this.checked < CHECK_TIME_EVERY) {\n    return false;\n   }\n   this.checked = 0;\n   return this.endTime <= Date.now();\n  },\n  reset: function TimeSlotManager_reset() {\n   this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\n   this.checked = 0;\n  }\n };\n var deferred = Promise.resolve();\n var TILING_PATTERN = 1, SHADING_PATTERN = 2;\n PartialEvaluator.prototype = {\n  hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\n   if (!isDict(resources)) {\n    return false;\n   }\n   var processed = Object.create(null);\n   if (resources.objId) {\n    processed[resources.objId] = true;\n   }\n   var nodes = [resources], xref = this.xref;\n   while (nodes.length) {\n    var key, i, ii;\n    var node = nodes.shift();\n    var graphicStates = node.get('ExtGState');\n    if (isDict(graphicStates)) {\n     var graphicStatesKeys = graphicStates.getKeys();\n     for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\n      key = graphicStatesKeys[i];\n      var graphicState = graphicStates.get(key);\n      var bm = graphicState.get('BM');\n      if (isName(bm) && bm.name !== 'Normal') {\n       return true;\n      }\n     }\n    }\n    var xObjects = node.get('XObject');\n    if (!isDict(xObjects)) {\n     continue;\n    }\n    var xObjectsKeys = xObjects.getKeys();\n    for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\n     key = xObjectsKeys[i];\n     var xObject = xObjects.getRaw(key);\n     if (isRef(xObject)) {\n      if (processed[xObject.toString()]) {\n       continue;\n      }\n      xObject = xref.fetch(xObject);\n     }\n     if (!isStream(xObject)) {\n      continue;\n     }\n     if (xObject.dict.objId) {\n      if (processed[xObject.dict.objId]) {\n       continue;\n      }\n      processed[xObject.dict.objId] = true;\n     }\n     var xResources = xObject.dict.get('Resources');\n     if (isDict(xResources) && (!xResources.objId || !processed[xResources.objId])) {\n      nodes.push(xResources);\n      if (xResources.objId) {\n       processed[xResources.objId] = true;\n      }\n     }\n    }\n   }\n   return false;\n  },\n  buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\n   var matrix = xobj.dict.getArray('Matrix');\n   var bbox = xobj.dict.getArray('BBox');\n   var group = xobj.dict.get('Group');\n   if (group) {\n    var groupOptions = {\n     matrix: matrix,\n     bbox: bbox,\n     smask: smask,\n     isolated: false,\n     knockout: false\n    };\n    var groupSubtype = group.get('S');\n    var colorSpace;\n    if (isName(groupSubtype, 'Transparency')) {\n     groupOptions.isolated = group.get('I') || false;\n     groupOptions.knockout = group.get('K') || false;\n     colorSpace = group.has('CS') ? ColorSpace.parse(group.get('CS'), this.xref, resources) : null;\n    }\n    if (smask && smask.backdrop) {\n     colorSpace = colorSpace || ColorSpace.singletons.rgb;\n     smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\n    }\n    operatorList.addOp(OPS.beginGroup, [groupOptions]);\n   }\n   operatorList.addOp(OPS.paintFormXObjectBegin, [\n    matrix,\n    bbox\n   ]);\n   return this.getOperatorList(xobj, task, xobj.dict.get('Resources') || resources, operatorList, initialState).then(function () {\n    operatorList.addOp(OPS.paintFormXObjectEnd, []);\n    if (group) {\n     operatorList.addOp(OPS.endGroup, [groupOptions]);\n    }\n   });\n  },\n  buildPaintImageXObject: function PartialEvaluator_buildPaintImageXObject(resources, image, inline, operatorList, cacheKey, imageCache) {\n   var self = this;\n   var dict = image.dict;\n   var w = dict.get('Width', 'W');\n   var h = dict.get('Height', 'H');\n   if (!(w && isNum(w)) || !(h && isNum(h))) {\n    warn('Image dimensions are missing, or not numbers.');\n    return;\n   }\n   var maxImageSize = this.options.maxImageSize;\n   if (maxImageSize !== -1 && w * h > maxImageSize) {\n    warn('Image exceeded maximum allowed size and was removed.');\n    return;\n   }\n   var imageMask = dict.get('ImageMask', 'IM') || false;\n   var imgData, args;\n   if (imageMask) {\n    var width = dict.get('Width', 'W');\n    var height = dict.get('Height', 'H');\n    var bitStrideLength = width + 7 >> 3;\n    var imgArray = image.getBytes(bitStrideLength * height);\n    var decode = dict.getArray('Decode', 'D');\n    var inverseDecode = !!decode && decode[0] > 0;\n    imgData = PDFImage.createMask(imgArray, width, height, image instanceof DecodeStream, inverseDecode);\n    imgData.cached = true;\n    args = [imgData];\n    operatorList.addOp(OPS.paintImageMaskXObject, args);\n    if (cacheKey) {\n     imageCache[cacheKey] = {\n      fn: OPS.paintImageMaskXObject,\n      args: args\n     };\n    }\n    return;\n   }\n   var softMask = dict.get('SMask', 'SM') || false;\n   var mask = dict.get('Mask') || false;\n   var SMALL_IMAGE_DIMENSIONS = 200;\n   if (inline && !softMask && !mask && !(image instanceof JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\n    var imageObj = new PDFImage(this.xref, resources, image, inline, null, null);\n    imgData = imageObj.createImageData(true);\n    operatorList.addOp(OPS.paintInlineImageXObject, [imgData]);\n    return;\n   }\n   var useNativeImageDecoder = !this.options.disableNativeImageDecoder;\n   var objId = 'img_' + this.idFactory.createObjId();\n   operatorList.addDependency(objId);\n   args = [\n    objId,\n    w,\n    h\n   ];\n   if (useNativeImageDecoder && !softMask && !mask && image instanceof JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources)) {\n    operatorList.addOp(OPS.paintJpegXObject, args);\n    this.handler.send('obj', [\n     objId,\n     this.pageIndex,\n     'JpegStream',\n     image.getIR(this.options.forceDataSchema)\n    ]);\n    return;\n   }\n   var nativeImageDecoder = null;\n   if (useNativeImageDecoder && (image instanceof JpegStream || mask instanceof JpegStream || softMask instanceof JpegStream)) {\n    nativeImageDecoder = new NativeImageDecoder(self.xref, resources, self.handler, self.options.forceDataSchema);\n   }\n   PDFImage.buildImage(self.handler, self.xref, resources, image, inline, nativeImageDecoder).then(function (imageObj) {\n    var imgData = imageObj.createImageData(false);\n    self.handler.send('obj', [\n     objId,\n     self.pageIndex,\n     'Image',\n     imgData\n    ], [imgData.data.buffer]);\n   }).then(undefined, function (reason) {\n    warn('Unable to decode image: ' + reason);\n    self.handler.send('obj', [\n     objId,\n     self.pageIndex,\n     'Image',\n     null\n    ]);\n   });\n   operatorList.addOp(OPS.paintImageXObject, args);\n   if (cacheKey) {\n    imageCache[cacheKey] = {\n     fn: OPS.paintImageXObject,\n     args: args\n    };\n   }\n  },\n  handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\n   var smaskContent = smask.get('G');\n   var smaskOptions = {\n    subtype: smask.get('S').name,\n    backdrop: smask.get('BC')\n   };\n   var transferObj = smask.get('TR');\n   if (isPDFFunction(transferObj)) {\n    var transferFn = PDFFunction.parse(this.xref, transferObj);\n    var transferMap = new Uint8Array(256);\n    var tmp = new Float32Array(1);\n    for (var i = 0; i < 256; i++) {\n     tmp[0] = i / 255;\n     transferFn(tmp, 0, tmp, 0);\n     transferMap[i] = tmp[0] * 255 | 0;\n    }\n    smaskOptions.transferMap = transferMap;\n   }\n   return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\n  },\n  handleTilingType: function PartialEvaluator_handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\n   var tilingOpList = new OperatorList();\n   var resourcesArray = [\n    patternDict.get('Resources'),\n    resources\n   ];\n   var patternResources = Dict.merge(this.xref, resourcesArray);\n   return this.getOperatorList(pattern, task, patternResources, tilingOpList).then(function () {\n    operatorList.addDependencies(tilingOpList.dependencies);\n    operatorList.addOp(fn, getTilingPatternIR({\n     fnArray: tilingOpList.fnArray,\n     argsArray: tilingOpList.argsArray\n    }, patternDict, args));\n   });\n  },\n  handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\n   var fontName;\n   if (fontArgs) {\n    fontArgs = fontArgs.slice();\n    fontName = fontArgs[0].name;\n   }\n   var self = this;\n   return this.loadFont(fontName, fontRef, this.xref, resources).then(function (translated) {\n    if (!translated.font.isType3Font) {\n     return translated;\n    }\n    return translated.loadType3Data(self, resources, operatorList, task).then(function () {\n     return translated;\n    }, function (reason) {\n     self.handler.send('UnsupportedFeature', { featureId: UNSUPPORTED_FEATURES.font });\n     return new TranslatedFont('g_font_error', new ErrorFont('Type3 font load error: ' + reason), translated.font);\n    });\n   }).then(function (translated) {\n    state.font = translated.font;\n    translated.send(self.handler);\n    return translated.loadedName;\n   });\n  },\n  handleText: function PartialEvaluator_handleText(chars, state) {\n   var font = state.font;\n   var glyphs = font.charsToGlyphs(chars);\n   var isAddToPathSet = !!(state.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG);\n   if (font.data && (isAddToPathSet || this.options.disableFontFace)) {\n    var buildPath = function (fontChar) {\n     if (!font.renderer.hasBuiltPath(fontChar)) {\n      var path = font.renderer.getPathJs(fontChar);\n      this.handler.send('commonobj', [\n       font.loadedName + '_path_' + fontChar,\n       'FontPath',\n       path\n      ]);\n     }\n    }.bind(this);\n    for (var i = 0, ii = glyphs.length; i < ii; i++) {\n     var glyph = glyphs[i];\n     buildPath(glyph.fontChar);\n     var accent = glyph.accent;\n     if (accent && accent.fontChar) {\n      buildPath(accent.fontChar);\n     }\n    }\n   }\n   return glyphs;\n  },\n  setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, xref, stateManager) {\n   var gStateObj = [];\n   var gStateKeys = gState.getKeys();\n   var self = this;\n   var promise = Promise.resolve();\n   for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\n    var key = gStateKeys[i];\n    var value = gState.get(key);\n    switch (key) {\n    case 'Type':\n     break;\n    case 'LW':\n    case 'LC':\n    case 'LJ':\n    case 'ML':\n    case 'D':\n    case 'RI':\n    case 'FL':\n    case 'CA':\n    case 'ca':\n     gStateObj.push([\n      key,\n      value\n     ]);\n     break;\n    case 'Font':\n     promise = promise.then(function () {\n      return self.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\n       operatorList.addDependency(loadedName);\n       gStateObj.push([\n        key,\n        [\n         loadedName,\n         value[1]\n        ]\n       ]);\n      });\n     });\n     break;\n    case 'BM':\n     gStateObj.push([\n      key,\n      value\n     ]);\n     break;\n    case 'SMask':\n     if (isName(value, 'None')) {\n      gStateObj.push([\n       key,\n       false\n      ]);\n      break;\n     }\n     if (isDict(value)) {\n      promise = promise.then(function (dict) {\n       return self.handleSMask(dict, resources, operatorList, task, stateManager);\n      }.bind(this, value));\n      gStateObj.push([\n       key,\n       true\n      ]);\n     } else {\n      warn('Unsupported SMask type');\n     }\n     break;\n    case 'OP':\n    case 'op':\n    case 'OPM':\n    case 'BG':\n    case 'BG2':\n    case 'UCR':\n    case 'UCR2':\n    case 'TR':\n    case 'TR2':\n    case 'HT':\n    case 'SM':\n    case 'SA':\n    case 'AIS':\n    case 'TK':\n     info('graphic state operator ' + key);\n     break;\n    default:\n     info('Unknown graphic state operator ' + key);\n     break;\n    }\n   }\n   return promise.then(function () {\n    if (gStateObj.length > 0) {\n     operatorList.addOp(OPS.setGState, [gStateObj]);\n    }\n   });\n  },\n  loadFont: function PartialEvaluator_loadFont(fontName, font, xref, resources) {\n   function errorFont() {\n    return Promise.resolve(new TranslatedFont('g_font_error', new ErrorFont('Font ' + fontName + ' is not available'), font));\n   }\n   var fontRef;\n   if (font) {\n    assert(isRef(font));\n    fontRef = font;\n   } else {\n    var fontRes = resources.get('Font');\n    if (fontRes) {\n     fontRef = fontRes.getRaw(fontName);\n    } else {\n     warn('fontRes not available');\n     return errorFont();\n    }\n   }\n   if (!fontRef) {\n    warn('fontRef not available');\n    return errorFont();\n   }\n   if (this.fontCache.has(fontRef)) {\n    return this.fontCache.get(fontRef);\n   }\n   font = xref.fetchIfRef(fontRef);\n   if (!isDict(font)) {\n    return errorFont();\n   }\n   if (font.translated) {\n    return font.translated;\n   }\n   var fontCapability = createPromiseCapability();\n   var preEvaluatedFont = this.preEvaluateFont(font, xref);\n   var descriptor = preEvaluatedFont.descriptor;\n   var fontRefIsRef = isRef(fontRef), fontID;\n   if (fontRefIsRef) {\n    fontID = fontRef.toString();\n   }\n   if (isDict(descriptor)) {\n    if (!descriptor.fontAliases) {\n     descriptor.fontAliases = Object.create(null);\n    }\n    var fontAliases = descriptor.fontAliases;\n    var hash = preEvaluatedFont.hash;\n    if (fontAliases[hash]) {\n     var aliasFontRef = fontAliases[hash].aliasRef;\n     if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\n      this.fontCache.putAlias(fontRef, aliasFontRef);\n      return this.fontCache.get(fontRef);\n     }\n    } else {\n     fontAliases[hash] = { fontID: Font.getFontID() };\n    }\n    if (fontRefIsRef) {\n     fontAliases[hash].aliasRef = fontRef;\n    }\n    fontID = fontAliases[hash].fontID;\n   }\n   if (fontRefIsRef) {\n    this.fontCache.put(fontRef, fontCapability.promise);\n   } else {\n    if (!fontID) {\n     fontID = this.idFactory.createObjId();\n    }\n    this.fontCache.put('id_' + fontID, fontCapability.promise);\n   }\n   assert(fontID, 'The \"fontID\" must be defined.');\n   font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\n   font.translated = fontCapability.promise;\n   var translatedPromise;\n   try {\n    translatedPromise = this.translateFont(preEvaluatedFont, xref);\n   } catch (e) {\n    translatedPromise = Promise.reject(e);\n   }\n   var self = this;\n   translatedPromise.then(function (translatedFont) {\n    if (translatedFont.fontType !== undefined) {\n     var xrefFontStats = xref.stats.fontTypes;\n     xrefFontStats[translatedFont.fontType] = true;\n    }\n    fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\n   }, function (reason) {\n    self.handler.send('UnsupportedFeature', { featureId: UNSUPPORTED_FEATURES.font });\n    try {\n     var descriptor = preEvaluatedFont.descriptor;\n     var fontFile3 = descriptor && descriptor.get('FontFile3');\n     var subtype = fontFile3 && fontFile3.get('Subtype');\n     var fontType = getFontType(preEvaluatedFont.type, subtype && subtype.name);\n     var xrefFontStats = xref.stats.fontTypes;\n     xrefFontStats[fontType] = true;\n    } catch (ex) {\n    }\n    fontCapability.resolve(new TranslatedFont(font.loadedName, new ErrorFont(reason instanceof Error ? reason.message : reason), font));\n   });\n   return fontCapability.promise;\n  },\n  buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\n   var lastIndex = operatorList.length - 1;\n   if (!args) {\n    args = [];\n   }\n   if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== OPS.constructPath) {\n    operatorList.addOp(OPS.constructPath, [\n     [fn],\n     args\n    ]);\n   } else {\n    var opArgs = operatorList.argsArray[lastIndex];\n    opArgs[0].push(fn);\n    Array.prototype.push.apply(opArgs[1], args);\n   }\n  },\n  handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task, xref) {\n   var patternName = args[args.length - 1];\n   var pattern;\n   if (isName(patternName) && (pattern = patterns.get(patternName.name))) {\n    var dict = isStream(pattern) ? pattern.dict : pattern;\n    var typeNum = dict.get('PatternType');\n    if (typeNum === TILING_PATTERN) {\n     var color = cs.base ? cs.base.getRgb(args, 0) : null;\n     return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\n    } else if (typeNum === SHADING_PATTERN) {\n     var shading = dict.get('Shading');\n     var matrix = dict.getArray('Matrix');\n     pattern = Pattern.parseShading(shading, matrix, xref, resources, this.handler);\n     operatorList.addOp(fn, pattern.getIR());\n     return Promise.resolve();\n    }\n    return Promise.reject('Unknown PatternType: ' + typeNum);\n   }\n   operatorList.addOp(fn, args);\n   return Promise.resolve();\n  },\n  getOperatorList: function PartialEvaluator_getOperatorList(stream, task, resources, operatorList, initialState) {\n   var self = this;\n   var xref = this.xref;\n   var imageCache = Object.create(null);\n   assert(operatorList);\n   resources = resources || Dict.empty;\n   var xobjs = resources.get('XObject') || Dict.empty;\n   var patterns = resources.get('Pattern') || Dict.empty;\n   var stateManager = new StateManager(initialState || new EvalState());\n   var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n   var timeSlotManager = new TimeSlotManager();\n   return new Promise(function promiseBody(resolve, reject) {\n    var next = function (promise) {\n     promise.then(function () {\n      try {\n       promiseBody(resolve, reject);\n      } catch (ex) {\n       reject(ex);\n      }\n     }, reject);\n    };\n    task.ensureNotTerminated();\n    timeSlotManager.reset();\n    var stop, operation = {}, i, ii, cs;\n    while (!(stop = timeSlotManager.check())) {\n     operation.args = null;\n     if (!preprocessor.read(operation)) {\n      break;\n     }\n     var args = operation.args;\n     var fn = operation.fn;\n     switch (fn | 0) {\n     case OPS.paintXObject:\n      if (args[0].code) {\n       break;\n      }\n      var name = args[0].name;\n      if (!name) {\n       warn('XObject must be referred to by name.');\n       continue;\n      }\n      if (imageCache[name] !== undefined) {\n       operatorList.addOp(imageCache[name].fn, imageCache[name].args);\n       args = null;\n       continue;\n      }\n      var xobj = xobjs.get(name);\n      if (xobj) {\n       assert(isStream(xobj), 'XObject should be a stream');\n       var type = xobj.dict.get('Subtype');\n       assert(isName(type), 'XObject should have a Name subtype');\n       if (type.name === 'Form') {\n        stateManager.save();\n        next(self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\n         stateManager.restore();\n        }));\n        return;\n       } else if (type.name === 'Image') {\n        self.buildPaintImageXObject(resources, xobj, false, operatorList, name, imageCache);\n        args = null;\n        continue;\n       } else if (type.name === 'PS') {\n        info('Ignored XObject subtype PS');\n        continue;\n       } else {\n        error('Unhandled XObject subtype ' + type.name);\n       }\n      }\n      break;\n     case OPS.setFont:\n      var fontSize = args[1];\n      next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\n       operatorList.addDependency(loadedName);\n       operatorList.addOp(OPS.setFont, [\n        loadedName,\n        fontSize\n       ]);\n      }));\n      return;\n     case OPS.endInlineImage:\n      var cacheKey = args[0].cacheKey;\n      if (cacheKey) {\n       var cacheEntry = imageCache[cacheKey];\n       if (cacheEntry !== undefined) {\n        operatorList.addOp(cacheEntry.fn, cacheEntry.args);\n        args = null;\n        continue;\n       }\n      }\n      self.buildPaintImageXObject(resources, args[0], true, operatorList, cacheKey, imageCache);\n      args = null;\n      continue;\n     case OPS.showText:\n      args[0] = self.handleText(args[0], stateManager.state);\n      break;\n     case OPS.showSpacedText:\n      var arr = args[0];\n      var combinedGlyphs = [];\n      var arrLength = arr.length;\n      var state = stateManager.state;\n      for (i = 0; i < arrLength; ++i) {\n       var arrItem = arr[i];\n       if (isString(arrItem)) {\n        Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\n       } else if (isNum(arrItem)) {\n        combinedGlyphs.push(arrItem);\n       }\n      }\n      args[0] = combinedGlyphs;\n      fn = OPS.showText;\n      break;\n     case OPS.nextLineShowText:\n      operatorList.addOp(OPS.nextLine);\n      args[0] = self.handleText(args[0], stateManager.state);\n      fn = OPS.showText;\n      break;\n     case OPS.nextLineSetSpacingShowText:\n      operatorList.addOp(OPS.nextLine);\n      operatorList.addOp(OPS.setWordSpacing, [args.shift()]);\n      operatorList.addOp(OPS.setCharSpacing, [args.shift()]);\n      args[0] = self.handleText(args[0], stateManager.state);\n      fn = OPS.showText;\n      break;\n     case OPS.setTextRenderingMode:\n      stateManager.state.textRenderingMode = args[0];\n      break;\n     case OPS.setFillColorSpace:\n      stateManager.state.fillColorSpace = ColorSpace.parse(args[0], xref, resources);\n      continue;\n     case OPS.setStrokeColorSpace:\n      stateManager.state.strokeColorSpace = ColorSpace.parse(args[0], xref, resources);\n      continue;\n     case OPS.setFillColor:\n      cs = stateManager.state.fillColorSpace;\n      args = cs.getRgb(args, 0);\n      fn = OPS.setFillRGBColor;\n      break;\n     case OPS.setStrokeColor:\n      cs = stateManager.state.strokeColorSpace;\n      args = cs.getRgb(args, 0);\n      fn = OPS.setStrokeRGBColor;\n      break;\n     case OPS.setFillGray:\n      stateManager.state.fillColorSpace = ColorSpace.singletons.gray;\n      args = ColorSpace.singletons.gray.getRgb(args, 0);\n      fn = OPS.setFillRGBColor;\n      break;\n     case OPS.setStrokeGray:\n      stateManager.state.strokeColorSpace = ColorSpace.singletons.gray;\n      args = ColorSpace.singletons.gray.getRgb(args, 0);\n      fn = OPS.setStrokeRGBColor;\n      break;\n     case OPS.setFillCMYKColor:\n      stateManager.state.fillColorSpace = ColorSpace.singletons.cmyk;\n      args = ColorSpace.singletons.cmyk.getRgb(args, 0);\n      fn = OPS.setFillRGBColor;\n      break;\n     case OPS.setStrokeCMYKColor:\n      stateManager.state.strokeColorSpace = ColorSpace.singletons.cmyk;\n      args = ColorSpace.singletons.cmyk.getRgb(args, 0);\n      fn = OPS.setStrokeRGBColor;\n      break;\n     case OPS.setFillRGBColor:\n      stateManager.state.fillColorSpace = ColorSpace.singletons.rgb;\n      args = ColorSpace.singletons.rgb.getRgb(args, 0);\n      break;\n     case OPS.setStrokeRGBColor:\n      stateManager.state.strokeColorSpace = ColorSpace.singletons.rgb;\n      args = ColorSpace.singletons.rgb.getRgb(args, 0);\n      break;\n     case OPS.setFillColorN:\n      cs = stateManager.state.fillColorSpace;\n      if (cs.name === 'Pattern') {\n       next(self.handleColorN(operatorList, OPS.setFillColorN, args, cs, patterns, resources, task, xref));\n       return;\n      }\n      args = cs.getRgb(args, 0);\n      fn = OPS.setFillRGBColor;\n      break;\n     case OPS.setStrokeColorN:\n      cs = stateManager.state.strokeColorSpace;\n      if (cs.name === 'Pattern') {\n       next(self.handleColorN(operatorList, OPS.setStrokeColorN, args, cs, patterns, resources, task, xref));\n       return;\n      }\n      args = cs.getRgb(args, 0);\n      fn = OPS.setStrokeRGBColor;\n      break;\n     case OPS.shadingFill:\n      var shadingRes = resources.get('Shading');\n      if (!shadingRes) {\n       error('No shading resource found');\n      }\n      var shading = shadingRes.get(args[0].name);\n      if (!shading) {\n       error('No shading object found');\n      }\n      var shadingFill = Pattern.parseShading(shading, null, xref, resources, self.handler);\n      var patternIR = shadingFill.getIR();\n      args = [patternIR];\n      fn = OPS.shadingFill;\n      break;\n     case OPS.setGState:\n      var dictName = args[0];\n      var extGState = resources.get('ExtGState');\n      if (!isDict(extGState) || !extGState.has(dictName.name)) {\n       break;\n      }\n      var gState = extGState.get(dictName.name);\n      next(self.setGState(resources, gState, operatorList, task, xref, stateManager));\n      return;\n     case OPS.moveTo:\n     case OPS.lineTo:\n     case OPS.curveTo:\n     case OPS.curveTo2:\n     case OPS.curveTo3:\n     case OPS.closePath:\n      self.buildPath(operatorList, fn, args);\n      continue;\n     case OPS.rectangle:\n      self.buildPath(operatorList, fn, args);\n      continue;\n     case OPS.markPoint:\n     case OPS.markPointProps:\n     case OPS.beginMarkedContent:\n     case OPS.beginMarkedContentProps:\n     case OPS.endMarkedContent:\n     case OPS.beginCompat:\n     case OPS.endCompat:\n      continue;\n     default:\n      if (args !== null) {\n       for (i = 0, ii = args.length; i < ii; i++) {\n        if (args[i] instanceof Dict) {\n         break;\n        }\n       }\n       if (i < ii) {\n        warn('getOperatorList - ignoring operator: ' + fn);\n        continue;\n       }\n      }\n     }\n     operatorList.addOp(fn, args);\n    }\n    if (stop) {\n     next(deferred);\n     return;\n    }\n    for (i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\n     operatorList.addOp(OPS.restore, []);\n    }\n    resolve();\n   });\n  },\n  getTextContent: function PartialEvaluator_getTextContent(stream, task, resources, stateManager, normalizeWhitespace, combineTextItems) {\n   stateManager = stateManager || new StateManager(new TextState());\n   var WhitespaceRegexp = /\\s/g;\n   var textContent = {\n    items: [],\n    styles: Object.create(null)\n   };\n   var textContentItem = {\n    initialized: false,\n    str: [],\n    width: 0,\n    height: 0,\n    vertical: false,\n    lastAdvanceWidth: 0,\n    lastAdvanceHeight: 0,\n    textAdvanceScale: 0,\n    spaceWidth: 0,\n    fakeSpaceMin: Infinity,\n    fakeMultiSpaceMin: Infinity,\n    fakeMultiSpaceMax: -0,\n    textRunBreakAllowed: false,\n    transform: null,\n    fontName: null\n   };\n   var SPACE_FACTOR = 0.3;\n   var MULTI_SPACE_FACTOR = 1.5;\n   var MULTI_SPACE_FACTOR_MAX = 4;\n   var self = this;\n   var xref = this.xref;\n   resources = xref.fetchIfRef(resources) || Dict.empty;\n   var xobjs = null;\n   var xobjsCache = Object.create(null);\n   var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n   var textState;\n   function ensureTextContentItem() {\n    if (textContentItem.initialized) {\n     return textContentItem;\n    }\n    var font = textState.font;\n    if (!(font.loadedName in textContent.styles)) {\n     textContent.styles[font.loadedName] = {\n      fontFamily: font.fallbackName,\n      ascent: font.ascent,\n      descent: font.descent,\n      vertical: font.vertical\n     };\n    }\n    textContentItem.fontName = font.loadedName;\n    var tsm = [\n     textState.fontSize * textState.textHScale,\n     0,\n     0,\n     textState.fontSize,\n     0,\n     textState.textRise\n    ];\n    if (font.isType3Font && textState.fontMatrix !== FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\n     var glyphHeight = font.bbox[3] - font.bbox[1];\n     if (glyphHeight > 0) {\n      glyphHeight = glyphHeight * textState.fontMatrix[3];\n      tsm[3] *= glyphHeight;\n     }\n    }\n    var trm = Util.transform(textState.ctm, Util.transform(textState.textMatrix, tsm));\n    textContentItem.transform = trm;\n    if (!font.vertical) {\n     textContentItem.width = 0;\n     textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\n     textContentItem.vertical = false;\n    } else {\n     textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\n     textContentItem.height = 0;\n     textContentItem.vertical = true;\n    }\n    var a = textState.textLineMatrix[0];\n    var b = textState.textLineMatrix[1];\n    var scaleLineX = Math.sqrt(a * a + b * b);\n    a = textState.ctm[0];\n    b = textState.ctm[1];\n    var scaleCtmX = Math.sqrt(a * a + b * b);\n    textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\n    textContentItem.lastAdvanceWidth = 0;\n    textContentItem.lastAdvanceHeight = 0;\n    var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\n    if (spaceWidth) {\n     textContentItem.spaceWidth = spaceWidth;\n     textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\n     textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\n     textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\n     textContentItem.textRunBreakAllowed = !font.isMonospace;\n    } else {\n     textContentItem.spaceWidth = 0;\n     textContentItem.fakeSpaceMin = Infinity;\n     textContentItem.fakeMultiSpaceMin = Infinity;\n     textContentItem.fakeMultiSpaceMax = 0;\n     textContentItem.textRunBreakAllowed = false;\n    }\n    textContentItem.initialized = true;\n    return textContentItem;\n   }\n   function replaceWhitespace(str) {\n    var i = 0, ii = str.length, code;\n    while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\n     i++;\n    }\n    return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\n   }\n   function runBidiTransform(textChunk) {\n    var str = textChunk.str.join('');\n    var bidiResult = bidi(str, -1, textChunk.vertical);\n    return {\n     str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\n     dir: bidiResult.dir,\n     width: textChunk.width,\n     height: textChunk.height,\n     transform: textChunk.transform,\n     fontName: textChunk.fontName\n    };\n   }\n   function handleSetFont(fontName, fontRef) {\n    return self.loadFont(fontName, fontRef, xref, resources).then(function (translated) {\n     textState.font = translated.font;\n     textState.fontMatrix = translated.font.fontMatrix || FONT_IDENTITY_MATRIX;\n    });\n   }\n   function buildTextContentItem(chars) {\n    var font = textState.font;\n    var textChunk = ensureTextContentItem();\n    var width = 0;\n    var height = 0;\n    var glyphs = font.charsToGlyphs(chars);\n    for (var i = 0; i < glyphs.length; i++) {\n     var glyph = glyphs[i];\n     var glyphWidth = null;\n     if (font.vertical && glyph.vmetric) {\n      glyphWidth = glyph.vmetric[0];\n     } else {\n      glyphWidth = glyph.width;\n     }\n     var glyphUnicode = glyph.unicode;\n     var NormalizedUnicodes = getNormalizedUnicodes();\n     if (NormalizedUnicodes[glyphUnicode] !== undefined) {\n      glyphUnicode = NormalizedUnicodes[glyphUnicode];\n     }\n     glyphUnicode = reverseIfRtl(glyphUnicode);\n     var charSpacing = textState.charSpacing;\n     if (glyph.isSpace) {\n      var wordSpacing = textState.wordSpacing;\n      charSpacing += wordSpacing;\n      if (wordSpacing > 0) {\n       addFakeSpaces(wordSpacing, textChunk.str);\n      }\n     }\n     var tx = 0;\n     var ty = 0;\n     if (!font.vertical) {\n      var w0 = glyphWidth * textState.fontMatrix[0];\n      tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\n      width += tx;\n     } else {\n      var w1 = glyphWidth * textState.fontMatrix[0];\n      ty = w1 * textState.fontSize + charSpacing;\n      height += ty;\n     }\n     textState.translateTextMatrix(tx, ty);\n     textChunk.str.push(glyphUnicode);\n    }\n    if (!font.vertical) {\n     textChunk.lastAdvanceWidth = width;\n     textChunk.width += width;\n    } else {\n     textChunk.lastAdvanceHeight = height;\n     textChunk.height += Math.abs(height);\n    }\n    return textChunk;\n   }\n   function addFakeSpaces(width, strBuf) {\n    if (width < textContentItem.fakeSpaceMin) {\n     return;\n    }\n    if (width < textContentItem.fakeMultiSpaceMin) {\n     strBuf.push(' ');\n     return;\n    }\n    var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\n    while (fakeSpaces-- > 0) {\n     strBuf.push(' ');\n    }\n   }\n   function flushTextContentItem() {\n    if (!textContentItem.initialized) {\n     return;\n    }\n    textContentItem.width *= textContentItem.textAdvanceScale;\n    textContentItem.height *= textContentItem.textAdvanceScale;\n    textContent.items.push(runBidiTransform(textContentItem));\n    textContentItem.initialized = false;\n    textContentItem.str.length = 0;\n   }\n   var timeSlotManager = new TimeSlotManager();\n   return new Promise(function promiseBody(resolve, reject) {\n    var next = function (promise) {\n     promise.then(function () {\n      try {\n       promiseBody(resolve, reject);\n      } catch (ex) {\n       reject(ex);\n      }\n     }, reject);\n    };\n    task.ensureNotTerminated();\n    timeSlotManager.reset();\n    var stop, operation = {}, args = [];\n    while (!(stop = timeSlotManager.check())) {\n     args.length = 0;\n     operation.args = args;\n     if (!preprocessor.read(operation)) {\n      break;\n     }\n     textState = stateManager.state;\n     var fn = operation.fn;\n     args = operation.args;\n     var advance, diff;\n     switch (fn | 0) {\n     case OPS.setFont:\n      var fontNameArg = args[0].name, fontSizeArg = args[1];\n      if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\n       break;\n      }\n      flushTextContentItem();\n      textState.fontName = fontNameArg;\n      textState.fontSize = fontSizeArg;\n      next(handleSetFont(fontNameArg, null));\n      return;\n     case OPS.setTextRise:\n      flushTextContentItem();\n      textState.textRise = args[0];\n      break;\n     case OPS.setHScale:\n      flushTextContentItem();\n      textState.textHScale = args[0] / 100;\n      break;\n     case OPS.setLeading:\n      flushTextContentItem();\n      textState.leading = args[0];\n      break;\n     case OPS.moveText:\n      var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\n      advance = args[0] - args[1];\n      if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\n       textState.translateTextLineMatrix(args[0], args[1]);\n       textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\n       textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\n       diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\n       addFakeSpaces(diff, textContentItem.str);\n       break;\n      }\n      flushTextContentItem();\n      textState.translateTextLineMatrix(args[0], args[1]);\n      textState.textMatrix = textState.textLineMatrix.slice();\n      break;\n     case OPS.setLeadingMoveText:\n      flushTextContentItem();\n      textState.leading = -args[1];\n      textState.translateTextLineMatrix(args[0], args[1]);\n      textState.textMatrix = textState.textLineMatrix.slice();\n      break;\n     case OPS.nextLine:\n      flushTextContentItem();\n      textState.carriageReturn();\n      break;\n     case OPS.setTextMatrix:\n      advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\n      if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\n       textState.translateTextLineMatrix(advance.width, advance.height);\n       textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\n       textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\n       diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\n       addFakeSpaces(diff, textContentItem.str);\n       break;\n      }\n      flushTextContentItem();\n      textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n      textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n      break;\n     case OPS.setCharSpacing:\n      textState.charSpacing = args[0];\n      break;\n     case OPS.setWordSpacing:\n      textState.wordSpacing = args[0];\n      break;\n     case OPS.beginText:\n      flushTextContentItem();\n      textState.textMatrix = IDENTITY_MATRIX.slice();\n      textState.textLineMatrix = IDENTITY_MATRIX.slice();\n      break;\n     case OPS.showSpacedText:\n      var items = args[0];\n      var offset;\n      for (var j = 0, jj = items.length; j < jj; j++) {\n       if (typeof items[j] === 'string') {\n        buildTextContentItem(items[j]);\n       } else if (isNum(items[j])) {\n        ensureTextContentItem();\n        advance = items[j] * textState.fontSize / 1000;\n        var breakTextRun = false;\n        if (textState.font.vertical) {\n         offset = advance;\n         textState.translateTextMatrix(0, offset);\n         breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n         if (!breakTextRun) {\n          textContentItem.height += offset;\n         }\n        } else {\n         advance = -advance;\n         offset = advance * textState.textHScale;\n         textState.translateTextMatrix(offset, 0);\n         breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n         if (!breakTextRun) {\n          textContentItem.width += offset;\n         }\n        }\n        if (breakTextRun) {\n         flushTextContentItem();\n        } else if (advance > 0) {\n         addFakeSpaces(advance, textContentItem.str);\n        }\n       }\n      }\n      break;\n     case OPS.showText:\n      buildTextContentItem(args[0]);\n      break;\n     case OPS.nextLineShowText:\n      flushTextContentItem();\n      textState.carriageReturn();\n      buildTextContentItem(args[0]);\n      break;\n     case OPS.nextLineSetSpacingShowText:\n      flushTextContentItem();\n      textState.wordSpacing = args[0];\n      textState.charSpacing = args[1];\n      textState.carriageReturn();\n      buildTextContentItem(args[2]);\n      break;\n     case OPS.paintXObject:\n      flushTextContentItem();\n      if (args[0].code) {\n       break;\n      }\n      if (!xobjs) {\n       xobjs = resources.get('XObject') || Dict.empty;\n      }\n      var name = args[0].name;\n      if (xobjsCache.key === name) {\n       if (xobjsCache.texts) {\n        Util.appendToArray(textContent.items, xobjsCache.texts.items);\n        Util.extendObj(textContent.styles, xobjsCache.texts.styles);\n       }\n       break;\n      }\n      var xobj = xobjs.get(name);\n      if (!xobj) {\n       break;\n      }\n      assert(isStream(xobj), 'XObject should be a stream');\n      var type = xobj.dict.get('Subtype');\n      assert(isName(type), 'XObject should have a Name subtype');\n      if ('Form' !== type.name) {\n       xobjsCache.key = name;\n       xobjsCache.texts = null;\n       break;\n      }\n      stateManager.save();\n      var matrix = xobj.dict.getArray('Matrix');\n      if (isArray(matrix) && matrix.length === 6) {\n       stateManager.transform(matrix);\n      }\n      next(self.getTextContent(xobj, task, xobj.dict.get('Resources') || resources, stateManager, normalizeWhitespace, combineTextItems).then(function (formTextContent) {\n       Util.appendToArray(textContent.items, formTextContent.items);\n       Util.extendObj(textContent.styles, formTextContent.styles);\n       stateManager.restore();\n       xobjsCache.key = name;\n       xobjsCache.texts = formTextContent;\n      }));\n      return;\n     case OPS.setGState:\n      flushTextContentItem();\n      var dictName = args[0];\n      var extGState = resources.get('ExtGState');\n      if (!isDict(extGState) || !isName(dictName)) {\n       break;\n      }\n      var gState = extGState.get(dictName.name);\n      if (!isDict(gState)) {\n       break;\n      }\n      var gStateFont = gState.get('Font');\n      if (gStateFont) {\n       textState.fontName = null;\n       textState.fontSize = gStateFont[1];\n       next(handleSetFont(null, gStateFont[0]));\n       return;\n      }\n      break;\n     }\n    }\n    if (stop) {\n     next(deferred);\n     return;\n    }\n    flushTextContentItem();\n    resolve(textContent);\n   });\n  },\n  extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, xref, properties) {\n   var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n   var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\n   if (properties.composite) {\n    var cidSystemInfo = dict.get('CIDSystemInfo');\n    if (isDict(cidSystemInfo)) {\n     properties.cidSystemInfo = {\n      registry: cidSystemInfo.get('Registry'),\n      ordering: cidSystemInfo.get('Ordering'),\n      supplement: cidSystemInfo.get('Supplement')\n     };\n    }\n    var cidToGidMap = dict.get('CIDToGIDMap');\n    if (isStream(cidToGidMap)) {\n     properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\n    }\n   }\n   var differences = [];\n   var baseEncodingName = null;\n   var encoding;\n   if (dict.has('Encoding')) {\n    encoding = dict.get('Encoding');\n    if (isDict(encoding)) {\n     baseEncodingName = encoding.get('BaseEncoding');\n     baseEncodingName = isName(baseEncodingName) ? baseEncodingName.name : null;\n     if (encoding.has('Differences')) {\n      var diffEncoding = encoding.get('Differences');\n      var index = 0;\n      for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\n       var data = xref.fetchIfRef(diffEncoding[j]);\n       if (isNum(data)) {\n        index = data;\n       } else if (isName(data)) {\n        differences[index++] = data.name;\n       } else {\n        error('Invalid entry in \\'Differences\\' array: ' + data);\n       }\n      }\n     }\n    } else if (isName(encoding)) {\n     baseEncodingName = encoding.name;\n    } else {\n     error('Encoding is not a Name nor a Dict');\n    }\n    if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\n     baseEncodingName = null;\n    }\n   }\n   if (baseEncodingName) {\n    properties.defaultEncoding = getEncoding(baseEncodingName).slice();\n   } else {\n    var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n    var isNonsymbolicFont = !!(properties.flags & FontFlags.Nonsymbolic);\n    encoding = StandardEncoding;\n    if (properties.type === 'TrueType' && !isNonsymbolicFont) {\n     encoding = WinAnsiEncoding;\n    }\n    if (isSymbolicFont) {\n     encoding = MacRomanEncoding;\n     if (!properties.file) {\n      if (/Symbol/i.test(properties.name)) {\n       encoding = SymbolSetEncoding;\n      } else if (/Dingbats/i.test(properties.name)) {\n       encoding = ZapfDingbatsEncoding;\n      }\n     }\n    }\n    properties.defaultEncoding = encoding;\n   }\n   properties.differences = differences;\n   properties.baseEncodingName = baseEncodingName;\n   properties.hasEncoding = !!baseEncodingName || differences.length > 0;\n   properties.dict = dict;\n   return toUnicodePromise.then(function (toUnicode) {\n    properties.toUnicode = toUnicode;\n    return this.buildToUnicode(properties);\n   }.bind(this)).then(function (toUnicode) {\n    properties.toUnicode = toUnicode;\n    return properties;\n   });\n  },\n  buildToUnicode: function PartialEvaluator_buildToUnicode(properties) {\n   properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\n   if (properties.hasIncludedToUnicodeMap) {\n    return Promise.resolve(properties.toUnicode);\n   }\n   var toUnicode, charcode, glyphName;\n   if (!properties.composite) {\n    toUnicode = [];\n    var encoding = properties.defaultEncoding.slice();\n    var baseEncodingName = properties.baseEncodingName;\n    var differences = properties.differences;\n    for (charcode in differences) {\n     glyphName = differences[charcode];\n     if (glyphName === '.notdef') {\n      continue;\n     }\n     encoding[charcode] = glyphName;\n    }\n    var glyphsUnicodeMap = getGlyphsUnicode();\n    for (charcode in encoding) {\n     glyphName = encoding[charcode];\n     if (glyphName === '') {\n      continue;\n     } else if (glyphsUnicodeMap[glyphName] === undefined) {\n      var code = 0;\n      switch (glyphName[0]) {\n      case 'G':\n       if (glyphName.length === 3) {\n        code = parseInt(glyphName.substr(1), 16);\n       }\n       break;\n      case 'g':\n       if (glyphName.length === 5) {\n        code = parseInt(glyphName.substr(1), 16);\n       }\n       break;\n      case 'C':\n      case 'c':\n       if (glyphName.length >= 3) {\n        code = +glyphName.substr(1);\n       }\n       break;\n      default:\n       var unicode = getUnicodeForGlyph(glyphName, glyphsUnicodeMap);\n       if (unicode !== -1) {\n        code = unicode;\n       }\n      }\n      if (code) {\n       if (baseEncodingName && code === +charcode) {\n        var baseEncoding = getEncoding(baseEncodingName);\n        if (baseEncoding && (glyphName = baseEncoding[charcode])) {\n         toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n         continue;\n        }\n       }\n       toUnicode[charcode] = String.fromCharCode(code);\n      }\n      continue;\n     }\n     toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n    }\n    return Promise.resolve(new ToUnicodeMap(toUnicode));\n   }\n   if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\n    var registry = properties.cidSystemInfo.registry;\n    var ordering = properties.cidSystemInfo.ordering;\n    var ucs2CMapName = Name.get(registry + '-' + ordering + '-UCS2');\n    return CMapFactory.create({\n     encoding: ucs2CMapName,\n     fetchBuiltInCMap: this.fetchBuiltInCMap,\n     useCMap: null\n    }).then(function (ucs2CMap) {\n     var cMap = properties.cMap;\n     toUnicode = [];\n     cMap.forEach(function (charcode, cid) {\n      assert(cid <= 0xffff, 'Max size of CID is 65,535');\n      var ucs2 = ucs2CMap.lookup(cid);\n      if (ucs2) {\n       toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\n      }\n     });\n     return new ToUnicodeMap(toUnicode);\n    });\n   }\n   return Promise.resolve(new IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\n  },\n  readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\n   var cmapObj = toUnicode;\n   if (isName(cmapObj)) {\n    return CMapFactory.create({\n     encoding: cmapObj,\n     fetchBuiltInCMap: this.fetchBuiltInCMap,\n     useCMap: null\n    }).then(function (cmap) {\n     if (cmap instanceof IdentityCMap) {\n      return new IdentityToUnicodeMap(0, 0xFFFF);\n     }\n     return new ToUnicodeMap(cmap.getMap());\n    });\n   } else if (isStream(cmapObj)) {\n    return CMapFactory.create({\n     encoding: cmapObj,\n     fetchBuiltInCMap: this.fetchBuiltInCMap,\n     useCMap: null\n    }).then(function (cmap) {\n     if (cmap instanceof IdentityCMap) {\n      return new IdentityToUnicodeMap(0, 0xFFFF);\n     }\n     var map = new Array(cmap.length);\n     cmap.forEach(function (charCode, token) {\n      var str = [];\n      for (var k = 0; k < token.length; k += 2) {\n       var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n       if ((w1 & 0xF800) !== 0xD800) {\n        str.push(w1);\n        continue;\n       }\n       k += 2;\n       var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n       str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\n      }\n      map[charCode] = String.fromCharCode.apply(String, str);\n     });\n     return new ToUnicodeMap(map);\n    });\n   }\n   return Promise.resolve(null);\n  },\n  readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\n   var glyphsData = cidToGidStream.getBytes();\n   var result = [];\n   for (var j = 0, jj = glyphsData.length; j < jj; j++) {\n    var glyphID = glyphsData[j++] << 8 | glyphsData[j];\n    if (glyphID === 0) {\n     continue;\n    }\n    var code = j >> 1;\n    result[code] = glyphID;\n   }\n   return result;\n  },\n  extractWidths: function PartialEvaluator_extractWidths(dict, xref, descriptor, properties) {\n   var glyphsWidths = [];\n   var defaultWidth = 0;\n   var glyphsVMetrics = [];\n   var defaultVMetrics;\n   var i, ii, j, jj, start, code, widths;\n   if (properties.composite) {\n    defaultWidth = dict.get('DW') || 1000;\n    widths = dict.get('W');\n    if (widths) {\n     for (i = 0, ii = widths.length; i < ii; i++) {\n      start = xref.fetchIfRef(widths[i++]);\n      code = xref.fetchIfRef(widths[i]);\n      if (isArray(code)) {\n       for (j = 0, jj = code.length; j < jj; j++) {\n        glyphsWidths[start++] = xref.fetchIfRef(code[j]);\n       }\n      } else {\n       var width = xref.fetchIfRef(widths[++i]);\n       for (j = start; j <= code; j++) {\n        glyphsWidths[j] = width;\n       }\n      }\n     }\n    }\n    if (properties.vertical) {\n     var vmetrics = dict.getArray('DW2') || [\n      880,\n      -1000\n     ];\n     defaultVMetrics = [\n      vmetrics[1],\n      defaultWidth * 0.5,\n      vmetrics[0]\n     ];\n     vmetrics = dict.get('W2');\n     if (vmetrics) {\n      for (i = 0, ii = vmetrics.length; i < ii; i++) {\n       start = xref.fetchIfRef(vmetrics[i++]);\n       code = xref.fetchIfRef(vmetrics[i]);\n       if (isArray(code)) {\n        for (j = 0, jj = code.length; j < jj; j++) {\n         glyphsVMetrics[start++] = [\n          xref.fetchIfRef(code[j++]),\n          xref.fetchIfRef(code[j++]),\n          xref.fetchIfRef(code[j])\n         ];\n        }\n       } else {\n        var vmetric = [\n         xref.fetchIfRef(vmetrics[++i]),\n         xref.fetchIfRef(vmetrics[++i]),\n         xref.fetchIfRef(vmetrics[++i])\n        ];\n        for (j = start; j <= code; j++) {\n         glyphsVMetrics[j] = vmetric;\n        }\n       }\n      }\n     }\n    }\n   } else {\n    var firstChar = properties.firstChar;\n    widths = dict.get('Widths');\n    if (widths) {\n     j = firstChar;\n     for (i = 0, ii = widths.length; i < ii; i++) {\n      glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\n     }\n     defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\n    } else {\n     var baseFontName = dict.get('BaseFont');\n     if (isName(baseFontName)) {\n      var metrics = this.getBaseFontMetrics(baseFontName.name);\n      glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\n      defaultWidth = metrics.defaultWidth;\n     }\n    }\n   }\n   var isMonospace = true;\n   var firstWidth = defaultWidth;\n   for (var glyph in glyphsWidths) {\n    var glyphWidth = glyphsWidths[glyph];\n    if (!glyphWidth) {\n     continue;\n    }\n    if (!firstWidth) {\n     firstWidth = glyphWidth;\n     continue;\n    }\n    if (firstWidth !== glyphWidth) {\n     isMonospace = false;\n     break;\n    }\n   }\n   if (isMonospace) {\n    properties.flags |= FontFlags.FixedPitch;\n   }\n   properties.defaultWidth = defaultWidth;\n   properties.widths = glyphsWidths;\n   properties.defaultVMetrics = defaultVMetrics;\n   properties.vmetrics = glyphsVMetrics;\n  },\n  isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\n   var fontNameWoStyle = baseFontName.split('-')[0];\n   return fontNameWoStyle in getSerifFonts() || fontNameWoStyle.search(/serif/gi) !== -1;\n  },\n  getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\n   var defaultWidth = 0;\n   var widths = [];\n   var monospace = false;\n   var stdFontMap = getStdFontMap();\n   var lookupName = stdFontMap[name] || name;\n   var Metrics = getMetrics();\n   if (!(lookupName in Metrics)) {\n    if (this.isSerifFont(name)) {\n     lookupName = 'Times-Roman';\n    } else {\n     lookupName = 'Helvetica';\n    }\n   }\n   var glyphWidths = Metrics[lookupName];\n   if (isNum(glyphWidths)) {\n    defaultWidth = glyphWidths;\n    monospace = true;\n   } else {\n    widths = glyphWidths();\n   }\n   return {\n    defaultWidth: defaultWidth,\n    monospace: monospace,\n    widths: widths\n   };\n  },\n  buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\n   var widths = Object.create(null);\n   var differences = properties.differences;\n   var encoding = properties.defaultEncoding;\n   for (var charCode = 0; charCode < 256; charCode++) {\n    if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\n     widths[charCode] = widthsByGlyphName[differences[charCode]];\n     continue;\n    }\n    if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\n     widths[charCode] = widthsByGlyphName[encoding[charCode]];\n     continue;\n    }\n   }\n   return widths;\n  },\n  preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict, xref) {\n   var baseDict = dict;\n   var type = dict.get('Subtype');\n   assert(isName(type), 'invalid font Subtype');\n   var composite = false;\n   var uint8array;\n   if (type.name === 'Type0') {\n    var df = dict.get('DescendantFonts');\n    if (!df) {\n     error('Descendant fonts are not specified');\n    }\n    dict = isArray(df) ? xref.fetchIfRef(df[0]) : df;\n    type = dict.get('Subtype');\n    assert(isName(type), 'invalid font Subtype');\n    composite = true;\n   }\n   var descriptor = dict.get('FontDescriptor');\n   if (descriptor) {\n    var hash = new MurmurHash3_64();\n    var encoding = baseDict.getRaw('Encoding');\n    if (isName(encoding)) {\n     hash.update(encoding.name);\n    } else if (isRef(encoding)) {\n     hash.update(encoding.toString());\n    } else if (isDict(encoding)) {\n     var keys = encoding.getKeys();\n     for (var i = 0, ii = keys.length; i < ii; i++) {\n      var entry = encoding.getRaw(keys[i]);\n      if (isName(entry)) {\n       hash.update(entry.name);\n      } else if (isRef(entry)) {\n       hash.update(entry.toString());\n      } else if (isArray(entry)) {\n       var diffLength = entry.length, diffBuf = new Array(diffLength);\n       for (var j = 0; j < diffLength; j++) {\n        var diffEntry = entry[j];\n        if (isName(diffEntry)) {\n         diffBuf[j] = diffEntry.name;\n        } else if (isNum(diffEntry) || isRef(diffEntry)) {\n         diffBuf[j] = diffEntry.toString();\n        }\n       }\n       hash.update(diffBuf.join());\n      }\n     }\n    }\n    var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n    if (isStream(toUnicode)) {\n     var stream = toUnicode.str || toUnicode;\n     uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\n     hash.update(uint8array);\n    } else if (isName(toUnicode)) {\n     hash.update(toUnicode.name);\n    }\n    var widths = dict.get('Widths') || baseDict.get('Widths');\n    if (widths) {\n     uint8array = new Uint8Array(new Uint32Array(widths).buffer);\n     hash.update(uint8array);\n    }\n   }\n   return {\n    descriptor: descriptor,\n    dict: dict,\n    baseDict: baseDict,\n    composite: composite,\n    type: type.name,\n    hash: hash ? hash.hexdigest() : ''\n   };\n  },\n  translateFont: function PartialEvaluator_translateFont(preEvaluatedFont, xref) {\n   var baseDict = preEvaluatedFont.baseDict;\n   var dict = preEvaluatedFont.dict;\n   var composite = preEvaluatedFont.composite;\n   var descriptor = preEvaluatedFont.descriptor;\n   var type = preEvaluatedFont.type;\n   var maxCharIndex = composite ? 0xFFFF : 0xFF;\n   var properties;\n   if (!descriptor) {\n    if (type === 'Type3') {\n     descriptor = new Dict(null);\n     descriptor.set('FontName', Name.get(type));\n     descriptor.set('FontBBox', dict.getArray('FontBBox'));\n    } else {\n     var baseFontName = dict.get('BaseFont');\n     if (!isName(baseFontName)) {\n      error('Base font is not specified');\n     }\n     baseFontName = baseFontName.name.replace(/[,_]/g, '-');\n     var metrics = this.getBaseFontMetrics(baseFontName);\n     var fontNameWoStyle = baseFontName.split('-')[0];\n     var flags = (this.isSerifFont(fontNameWoStyle) ? FontFlags.Serif : 0) | (metrics.monospace ? FontFlags.FixedPitch : 0) | (getSymbolsFonts()[fontNameWoStyle] ? FontFlags.Symbolic : FontFlags.Nonsymbolic);\n     properties = {\n      type: type,\n      name: baseFontName,\n      widths: metrics.widths,\n      defaultWidth: metrics.defaultWidth,\n      flags: flags,\n      firstChar: 0,\n      lastChar: maxCharIndex\n     };\n     return this.extractDataStructures(dict, dict, xref, properties).then(function (properties) {\n      properties.widths = this.buildCharCodeToWidth(metrics.widths, properties);\n      return new Font(baseFontName, null, properties);\n     }.bind(this));\n    }\n   }\n   var firstChar = dict.get('FirstChar') || 0;\n   var lastChar = dict.get('LastChar') || maxCharIndex;\n   var fontName = descriptor.get('FontName');\n   var baseFont = dict.get('BaseFont');\n   if (isString(fontName)) {\n    fontName = Name.get(fontName);\n   }\n   if (isString(baseFont)) {\n    baseFont = Name.get(baseFont);\n   }\n   if (type !== 'Type3') {\n    var fontNameStr = fontName && fontName.name;\n    var baseFontStr = baseFont && baseFont.name;\n    if (fontNameStr !== baseFontStr) {\n     info('The FontDescriptor\\'s FontName is \"' + fontNameStr + '\" but should be the same as the Font\\'s BaseFont \"' + baseFontStr + '\"');\n     if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {\n      fontName = baseFont;\n     }\n    }\n   }\n   fontName = fontName || baseFont;\n   assert(isName(fontName), 'invalid font name');\n   var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\n   if (fontFile) {\n    if (fontFile.dict) {\n     var subtype = fontFile.dict.get('Subtype');\n     if (subtype) {\n      subtype = subtype.name;\n     }\n     var length1 = fontFile.dict.get('Length1');\n     var length2 = fontFile.dict.get('Length2');\n     var length3 = fontFile.dict.get('Length3');\n    }\n   }\n   properties = {\n    type: type,\n    name: fontName.name,\n    subtype: subtype,\n    file: fontFile,\n    length1: length1,\n    length2: length2,\n    length3: length3,\n    loadedName: baseDict.loadedName,\n    composite: composite,\n    wideChars: composite,\n    fixedPitch: false,\n    fontMatrix: dict.getArray('FontMatrix') || FONT_IDENTITY_MATRIX,\n    firstChar: firstChar || 0,\n    lastChar: lastChar || maxCharIndex,\n    bbox: descriptor.getArray('FontBBox'),\n    ascent: descriptor.get('Ascent'),\n    descent: descriptor.get('Descent'),\n    xHeight: descriptor.get('XHeight'),\n    capHeight: descriptor.get('CapHeight'),\n    flags: descriptor.get('Flags'),\n    italicAngle: descriptor.get('ItalicAngle'),\n    coded: false\n   };\n   var cMapPromise;\n   if (composite) {\n    var cidEncoding = baseDict.get('Encoding');\n    if (isName(cidEncoding)) {\n     properties.cidEncoding = cidEncoding.name;\n    }\n    cMapPromise = CMapFactory.create({\n     encoding: cidEncoding,\n     fetchBuiltInCMap: this.fetchBuiltInCMap,\n     useCMap: null\n    }).then(function (cMap) {\n     properties.cMap = cMap;\n     properties.vertical = properties.cMap.vertical;\n    });\n   } else {\n    cMapPromise = Promise.resolve(undefined);\n   }\n   return cMapPromise.then(function () {\n    return this.extractDataStructures(dict, baseDict, xref, properties);\n   }.bind(this)).then(function (properties) {\n    this.extractWidths(dict, xref, descriptor, properties);\n    if (type === 'Type3') {\n     properties.isType3Font = true;\n    }\n    return new Font(fontName.name, fontFile, properties);\n   }.bind(this));\n  }\n };\n return PartialEvaluator;\n}();\nvar TranslatedFont = function TranslatedFontClosure() {\n function TranslatedFont(loadedName, font, dict) {\n  this.loadedName = loadedName;\n  this.font = font;\n  this.dict = dict;\n  this.type3Loaded = null;\n  this.sent = false;\n }\n TranslatedFont.prototype = {\n  send: function (handler) {\n   if (this.sent) {\n    return;\n   }\n   var fontData = this.font.exportData();\n   handler.send('commonobj', [\n    this.loadedName,\n    'Font',\n    fontData\n   ]);\n   this.sent = true;\n  },\n  loadType3Data: function (evaluator, resources, parentOperatorList, task) {\n   assert(this.font.isType3Font);\n   if (this.type3Loaded) {\n    return this.type3Loaded;\n   }\n   var translatedFont = this.font;\n   var loadCharProcsPromise = Promise.resolve();\n   var charProcs = this.dict.get('CharProcs');\n   var fontResources = this.dict.get('Resources') || resources;\n   var charProcKeys = charProcs.getKeys();\n   var charProcOperatorList = Object.create(null);\n   for (var i = 0, n = charProcKeys.length; i < n; ++i) {\n    loadCharProcsPromise = loadCharProcsPromise.then(function (key) {\n     var glyphStream = charProcs.get(key);\n     var operatorList = new OperatorList();\n     return evaluator.getOperatorList(glyphStream, task, fontResources, operatorList).then(function () {\n      charProcOperatorList[key] = operatorList.getIR();\n      parentOperatorList.addDependencies(operatorList.dependencies);\n     }, function (reason) {\n      warn('Type3 font resource \\\"' + key + '\\\" is not available');\n      var operatorList = new OperatorList();\n      charProcOperatorList[key] = operatorList.getIR();\n     });\n    }.bind(this, charProcKeys[i]));\n   }\n   this.type3Loaded = loadCharProcsPromise.then(function () {\n    translatedFont.charProcOperatorList = charProcOperatorList;\n   });\n   return this.type3Loaded;\n  }\n };\n return TranslatedFont;\n}();\nvar OperatorList = function OperatorListClosure() {\n var CHUNK_SIZE = 1000;\n var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\n function getTransfers(queue) {\n  var transfers = [];\n  var fnArray = queue.fnArray, argsArray = queue.argsArray;\n  for (var i = 0, ii = queue.length; i < ii; i++) {\n   switch (fnArray[i]) {\n   case OPS.paintInlineImageXObject:\n   case OPS.paintInlineImageXObjectGroup:\n   case OPS.paintImageMaskXObject:\n    var arg = argsArray[i][0];\n    if (!arg.cached) {\n     transfers.push(arg.data.buffer);\n    }\n    break;\n   }\n  }\n  return transfers;\n }\n function OperatorList(intent, messageHandler, pageIndex) {\n  this.messageHandler = messageHandler;\n  this.fnArray = [];\n  this.argsArray = [];\n  this.dependencies = Object.create(null);\n  this._totalLength = 0;\n  this.pageIndex = pageIndex;\n  this.intent = intent;\n }\n OperatorList.prototype = {\n  get length() {\n   return this.argsArray.length;\n  },\n  get totalLength() {\n   return this._totalLength + this.length;\n  },\n  addOp: function (fn, args) {\n   this.fnArray.push(fn);\n   this.argsArray.push(args);\n   if (this.messageHandler) {\n    if (this.fnArray.length >= CHUNK_SIZE) {\n     this.flush();\n    } else if (this.fnArray.length >= CHUNK_SIZE_ABOUT && (fn === OPS.restore || fn === OPS.endText)) {\n     this.flush();\n    }\n   }\n  },\n  addDependency: function (dependency) {\n   if (dependency in this.dependencies) {\n    return;\n   }\n   this.dependencies[dependency] = true;\n   this.addOp(OPS.dependency, [dependency]);\n  },\n  addDependencies: function (dependencies) {\n   for (var key in dependencies) {\n    this.addDependency(key);\n   }\n  },\n  addOpList: function (opList) {\n   Util.extendObj(this.dependencies, opList.dependencies);\n   for (var i = 0, ii = opList.length; i < ii; i++) {\n    this.addOp(opList.fnArray[i], opList.argsArray[i]);\n   }\n  },\n  getIR: function () {\n   return {\n    fnArray: this.fnArray,\n    argsArray: this.argsArray,\n    length: this.length\n   };\n  },\n  flush: function (lastChunk) {\n   if (this.intent !== 'oplist') {\n    new QueueOptimizer().optimize(this);\n   }\n   var transfers = getTransfers(this);\n   var length = this.length;\n   this._totalLength += length;\n   this.messageHandler.send('RenderPageChunk', {\n    operatorList: {\n     fnArray: this.fnArray,\n     argsArray: this.argsArray,\n     lastChunk: lastChunk,\n     length: length\n    },\n    pageIndex: this.pageIndex,\n    intent: this.intent\n   }, transfers);\n   this.dependencies = Object.create(null);\n   this.fnArray.length = 0;\n   this.argsArray.length = 0;\n  }\n };\n return OperatorList;\n}();\nvar StateManager = function StateManagerClosure() {\n function StateManager(initialState) {\n  this.state = initialState;\n  this.stateStack = [];\n }\n StateManager.prototype = {\n  save: function () {\n   var old = this.state;\n   this.stateStack.push(this.state);\n   this.state = old.clone();\n  },\n  restore: function () {\n   var prev = this.stateStack.pop();\n   if (prev) {\n    this.state = prev;\n   }\n  },\n  transform: function (args) {\n   this.state.ctm = Util.transform(this.state.ctm, args);\n  }\n };\n return StateManager;\n}();\nvar TextState = function TextStateClosure() {\n function TextState() {\n  this.ctm = new Float32Array(IDENTITY_MATRIX);\n  this.fontName = null;\n  this.fontSize = 0;\n  this.font = null;\n  this.fontMatrix = FONT_IDENTITY_MATRIX;\n  this.textMatrix = IDENTITY_MATRIX.slice();\n  this.textLineMatrix = IDENTITY_MATRIX.slice();\n  this.charSpacing = 0;\n  this.wordSpacing = 0;\n  this.leading = 0;\n  this.textHScale = 1;\n  this.textRise = 0;\n }\n TextState.prototype = {\n  setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n   var m = this.textMatrix;\n   m[0] = a;\n   m[1] = b;\n   m[2] = c;\n   m[3] = d;\n   m[4] = e;\n   m[5] = f;\n  },\n  setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n   var m = this.textLineMatrix;\n   m[0] = a;\n   m[1] = b;\n   m[2] = c;\n   m[3] = d;\n   m[4] = e;\n   m[5] = f;\n  },\n  translateTextMatrix: function TextState_translateTextMatrix(x, y) {\n   var m = this.textMatrix;\n   m[4] = m[0] * x + m[2] * y + m[4];\n   m[5] = m[1] * x + m[3] * y + m[5];\n  },\n  translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\n   var m = this.textLineMatrix;\n   m[4] = m[0] * x + m[2] * y + m[4];\n   m[5] = m[1] * x + m[3] * y + m[5];\n  },\n  calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\n   var font = this.font;\n   if (!font) {\n    return null;\n   }\n   var m = this.textLineMatrix;\n   if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\n    return null;\n   }\n   var txDiff = e - m[4], tyDiff = f - m[5];\n   if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\n    return null;\n   }\n   var tx, ty, denominator = a * d - b * c;\n   if (font.vertical) {\n    tx = -tyDiff * c / denominator;\n    ty = tyDiff * a / denominator;\n   } else {\n    tx = txDiff * d / denominator;\n    ty = -txDiff * b / denominator;\n   }\n   return {\n    width: tx,\n    height: ty,\n    value: font.vertical ? ty : tx\n   };\n  },\n  calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\n   var tsm = [\n    this.fontSize * this.textHScale,\n    0,\n    0,\n    this.fontSize,\n    0,\n    this.textRise\n   ];\n   return Util.transform(ctm, Util.transform(this.textMatrix, tsm));\n  },\n  carriageReturn: function TextState_carriageReturn() {\n   this.translateTextLineMatrix(0, -this.leading);\n   this.textMatrix = this.textLineMatrix.slice();\n  },\n  clone: function TextState_clone() {\n   var clone = Object.create(this);\n   clone.textMatrix = this.textMatrix.slice();\n   clone.textLineMatrix = this.textLineMatrix.slice();\n   clone.fontMatrix = this.fontMatrix.slice();\n   return clone;\n  }\n };\n return TextState;\n}();\nvar EvalState = function EvalStateClosure() {\n function EvalState() {\n  this.ctm = new Float32Array(IDENTITY_MATRIX);\n  this.font = null;\n  this.textRenderingMode = TextRenderingMode.FILL;\n  this.fillColorSpace = ColorSpace.singletons.gray;\n  this.strokeColorSpace = ColorSpace.singletons.gray;\n }\n EvalState.prototype = {\n  clone: function CanvasExtraState_clone() {\n   return Object.create(this);\n  }\n };\n return EvalState;\n}();\nvar EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\n var getOPMap = getLookupTableFactory(function (t) {\n  t['w'] = {\n   id: OPS.setLineWidth,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['J'] = {\n   id: OPS.setLineCap,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['j'] = {\n   id: OPS.setLineJoin,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['M'] = {\n   id: OPS.setMiterLimit,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['d'] = {\n   id: OPS.setDash,\n   numArgs: 2,\n   variableArgs: false\n  };\n  t['ri'] = {\n   id: OPS.setRenderingIntent,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['i'] = {\n   id: OPS.setFlatness,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['gs'] = {\n   id: OPS.setGState,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['q'] = {\n   id: OPS.save,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['Q'] = {\n   id: OPS.restore,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['cm'] = {\n   id: OPS.transform,\n   numArgs: 6,\n   variableArgs: false\n  };\n  t['m'] = {\n   id: OPS.moveTo,\n   numArgs: 2,\n   variableArgs: false\n  };\n  t['l'] = {\n   id: OPS.lineTo,\n   numArgs: 2,\n   variableArgs: false\n  };\n  t['c'] = {\n   id: OPS.curveTo,\n   numArgs: 6,\n   variableArgs: false\n  };\n  t['v'] = {\n   id: OPS.curveTo2,\n   numArgs: 4,\n   variableArgs: false\n  };\n  t['y'] = {\n   id: OPS.curveTo3,\n   numArgs: 4,\n   variableArgs: false\n  };\n  t['h'] = {\n   id: OPS.closePath,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['re'] = {\n   id: OPS.rectangle,\n   numArgs: 4,\n   variableArgs: false\n  };\n  t['S'] = {\n   id: OPS.stroke,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['s'] = {\n   id: OPS.closeStroke,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['f'] = {\n   id: OPS.fill,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['F'] = {\n   id: OPS.fill,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['f*'] = {\n   id: OPS.eoFill,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['B'] = {\n   id: OPS.fillStroke,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['B*'] = {\n   id: OPS.eoFillStroke,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['b'] = {\n   id: OPS.closeFillStroke,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['b*'] = {\n   id: OPS.closeEOFillStroke,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['n'] = {\n   id: OPS.endPath,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['W'] = {\n   id: OPS.clip,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['W*'] = {\n   id: OPS.eoClip,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['BT'] = {\n   id: OPS.beginText,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['ET'] = {\n   id: OPS.endText,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['Tc'] = {\n   id: OPS.setCharSpacing,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['Tw'] = {\n   id: OPS.setWordSpacing,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['Tz'] = {\n   id: OPS.setHScale,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['TL'] = {\n   id: OPS.setLeading,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['Tf'] = {\n   id: OPS.setFont,\n   numArgs: 2,\n   variableArgs: false\n  };\n  t['Tr'] = {\n   id: OPS.setTextRenderingMode,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['Ts'] = {\n   id: OPS.setTextRise,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['Td'] = {\n   id: OPS.moveText,\n   numArgs: 2,\n   variableArgs: false\n  };\n  t['TD'] = {\n   id: OPS.setLeadingMoveText,\n   numArgs: 2,\n   variableArgs: false\n  };\n  t['Tm'] = {\n   id: OPS.setTextMatrix,\n   numArgs: 6,\n   variableArgs: false\n  };\n  t['T*'] = {\n   id: OPS.nextLine,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['Tj'] = {\n   id: OPS.showText,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['TJ'] = {\n   id: OPS.showSpacedText,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['\\''] = {\n   id: OPS.nextLineShowText,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['\"'] = {\n   id: OPS.nextLineSetSpacingShowText,\n   numArgs: 3,\n   variableArgs: false\n  };\n  t['d0'] = {\n   id: OPS.setCharWidth,\n   numArgs: 2,\n   variableArgs: false\n  };\n  t['d1'] = {\n   id: OPS.setCharWidthAndBounds,\n   numArgs: 6,\n   variableArgs: false\n  };\n  t['CS'] = {\n   id: OPS.setStrokeColorSpace,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['cs'] = {\n   id: OPS.setFillColorSpace,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['SC'] = {\n   id: OPS.setStrokeColor,\n   numArgs: 4,\n   variableArgs: true\n  };\n  t['SCN'] = {\n   id: OPS.setStrokeColorN,\n   numArgs: 33,\n   variableArgs: true\n  };\n  t['sc'] = {\n   id: OPS.setFillColor,\n   numArgs: 4,\n   variableArgs: true\n  };\n  t['scn'] = {\n   id: OPS.setFillColorN,\n   numArgs: 33,\n   variableArgs: true\n  };\n  t['G'] = {\n   id: OPS.setStrokeGray,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['g'] = {\n   id: OPS.setFillGray,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['RG'] = {\n   id: OPS.setStrokeRGBColor,\n   numArgs: 3,\n   variableArgs: false\n  };\n  t['rg'] = {\n   id: OPS.setFillRGBColor,\n   numArgs: 3,\n   variableArgs: false\n  };\n  t['K'] = {\n   id: OPS.setStrokeCMYKColor,\n   numArgs: 4,\n   variableArgs: false\n  };\n  t['k'] = {\n   id: OPS.setFillCMYKColor,\n   numArgs: 4,\n   variableArgs: false\n  };\n  t['sh'] = {\n   id: OPS.shadingFill,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['BI'] = {\n   id: OPS.beginInlineImage,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['ID'] = {\n   id: OPS.beginImageData,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['EI'] = {\n   id: OPS.endInlineImage,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['Do'] = {\n   id: OPS.paintXObject,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['MP'] = {\n   id: OPS.markPoint,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['DP'] = {\n   id: OPS.markPointProps,\n   numArgs: 2,\n   variableArgs: false\n  };\n  t['BMC'] = {\n   id: OPS.beginMarkedContent,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['BDC'] = {\n   id: OPS.beginMarkedContentProps,\n   numArgs: 2,\n   variableArgs: false\n  };\n  t['EMC'] = {\n   id: OPS.endMarkedContent,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['BX'] = {\n   id: OPS.beginCompat,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['EX'] = {\n   id: OPS.endCompat,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['BM'] = null;\n  t['BD'] = null;\n  t['true'] = null;\n  t['fa'] = null;\n  t['fal'] = null;\n  t['fals'] = null;\n  t['false'] = null;\n  t['nu'] = null;\n  t['nul'] = null;\n  t['null'] = null;\n });\n function EvaluatorPreprocessor(stream, xref, stateManager) {\n  this.opMap = getOPMap();\n  this.parser = new Parser(new Lexer(stream, this.opMap), false, xref);\n  this.stateManager = stateManager;\n  this.nonProcessedArgs = [];\n }\n EvaluatorPreprocessor.prototype = {\n  get savedStatesDepth() {\n   return this.stateManager.stateStack.length;\n  },\n  read: function EvaluatorPreprocessor_read(operation) {\n   var args = operation.args;\n   while (true) {\n    var obj = this.parser.getObj();\n    if (isCmd(obj)) {\n     var cmd = obj.cmd;\n     var opSpec = this.opMap[cmd];\n     if (!opSpec) {\n      warn('Unknown command \"' + cmd + '\"');\n      continue;\n     }\n     var fn = opSpec.id;\n     var numArgs = opSpec.numArgs;\n     var argsLength = args !== null ? args.length : 0;\n     if (!opSpec.variableArgs) {\n      if (argsLength !== numArgs) {\n       var nonProcessedArgs = this.nonProcessedArgs;\n       while (argsLength > numArgs) {\n        nonProcessedArgs.push(args.shift());\n        argsLength--;\n       }\n       while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\n        if (args === null) {\n         args = [];\n        }\n        args.unshift(nonProcessedArgs.pop());\n        argsLength++;\n       }\n      }\n      if (argsLength < numArgs) {\n       warn('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');\n       if (args !== null) {\n        args.length = 0;\n       }\n       continue;\n      }\n     } else if (argsLength > numArgs) {\n      info('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');\n     }\n     this.preprocessCommand(fn, args);\n     operation.fn = fn;\n     operation.args = args;\n     return true;\n    }\n    if (isEOF(obj)) {\n     return false;\n    }\n    if (obj !== null) {\n     if (args === null) {\n      args = [];\n     }\n     args.push(obj);\n     assert(args.length <= 33, 'Too many arguments');\n    }\n   }\n  },\n  preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\n   switch (fn | 0) {\n   case OPS.save:\n    this.stateManager.save();\n    break;\n   case OPS.restore:\n    this.stateManager.restore();\n    break;\n   case OPS.transform:\n    this.stateManager.transform(args);\n    break;\n   }\n  }\n };\n return EvaluatorPreprocessor;\n}();\nvar QueueOptimizer = function QueueOptimizerClosure() {\n function addState(parentState, pattern, fn) {\n  var state = parentState;\n  for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\n   var item = pattern[i];\n   state = state[item] || (state[item] = []);\n  }\n  state[pattern[pattern.length - 1]] = fn;\n }\n function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\n  var iFirstPIMXO = iFirstSave + 2;\n  for (var i = 0; i < count; i++) {\n   var arg = argsArray[iFirstPIMXO + 4 * i];\n   var imageMask = arg.length === 1 && arg[0];\n   if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\n    fnArray[iFirstPIMXO + 4 * i] = OPS.paintSolidColorImageMask;\n    continue;\n   }\n   break;\n  }\n  return count - i;\n }\n var InitialState = [];\n addState(InitialState, [\n  OPS.save,\n  OPS.transform,\n  OPS.paintInlineImageXObject,\n  OPS.restore\n ], function foundInlineImageGroup(context) {\n  var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\n  var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\n  var MAX_WIDTH = 1000;\n  var IMAGE_PADDING = 1;\n  var fnArray = context.fnArray, argsArray = context.argsArray;\n  var curr = context.iCurr;\n  var iFirstSave = curr - 3;\n  var iFirstTransform = curr - 2;\n  var iFirstPIIXO = curr - 1;\n  var i = iFirstSave + 4;\n  var ii = fnArray.length;\n  while (i + 3 < ii) {\n   if (fnArray[i] !== OPS.save || fnArray[i + 1] !== OPS.transform || fnArray[i + 2] !== OPS.paintInlineImageXObject || fnArray[i + 3] !== OPS.restore) {\n    break;\n   }\n   i += 4;\n  }\n  var count = Math.min((i - iFirstSave) / 4, MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\n  if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\n   return i;\n  }\n  var maxX = 0;\n  var map = [], maxLineHeight = 0;\n  var currentX = IMAGE_PADDING, currentY = IMAGE_PADDING;\n  var q;\n  for (q = 0; q < count; q++) {\n   var transform = argsArray[iFirstTransform + (q << 2)];\n   var img = argsArray[iFirstPIIXO + (q << 2)][0];\n   if (currentX + img.width > MAX_WIDTH) {\n    maxX = Math.max(maxX, currentX);\n    currentY += maxLineHeight + 2 * IMAGE_PADDING;\n    currentX = 0;\n    maxLineHeight = 0;\n   }\n   map.push({\n    transform: transform,\n    x: currentX,\n    y: currentY,\n    w: img.width,\n    h: img.height\n   });\n   currentX += img.width + 2 * IMAGE_PADDING;\n   maxLineHeight = Math.max(maxLineHeight, img.height);\n  }\n  var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\n  var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\n  var imgData = new Uint8Array(imgWidth * imgHeight * 4);\n  var imgRowSize = imgWidth << 2;\n  for (q = 0; q < count; q++) {\n   var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\n   var rowSize = map[q].w << 2;\n   var dataOffset = 0;\n   var offset = map[q].x + map[q].y * imgWidth << 2;\n   imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\n   for (var k = 0, kk = map[q].h; k < kk; k++) {\n    imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\n    dataOffset += rowSize;\n    offset += imgRowSize;\n   }\n   imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\n   while (offset >= 0) {\n    data[offset - 4] = data[offset];\n    data[offset - 3] = data[offset + 1];\n    data[offset - 2] = data[offset + 2];\n    data[offset - 1] = data[offset + 3];\n    data[offset + rowSize] = data[offset + rowSize - 4];\n    data[offset + rowSize + 1] = data[offset + rowSize - 3];\n    data[offset + rowSize + 2] = data[offset + rowSize - 2];\n    data[offset + rowSize + 3] = data[offset + rowSize - 1];\n    offset -= imgRowSize;\n   }\n  }\n  fnArray.splice(iFirstSave, count * 4, OPS.paintInlineImageXObjectGroup);\n  argsArray.splice(iFirstSave, count * 4, [\n   {\n    width: imgWidth,\n    height: imgHeight,\n    kind: ImageKind.RGBA_32BPP,\n    data: imgData\n   },\n   map\n  ]);\n  return iFirstSave + 1;\n });\n addState(InitialState, [\n  OPS.save,\n  OPS.transform,\n  OPS.paintImageMaskXObject,\n  OPS.restore\n ], function foundImageMaskGroup(context) {\n  var MIN_IMAGES_IN_MASKS_BLOCK = 10;\n  var MAX_IMAGES_IN_MASKS_BLOCK = 100;\n  var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\n  var fnArray = context.fnArray, argsArray = context.argsArray;\n  var curr = context.iCurr;\n  var iFirstSave = curr - 3;\n  var iFirstTransform = curr - 2;\n  var iFirstPIMXO = curr - 1;\n  var i = iFirstSave + 4;\n  var ii = fnArray.length;\n  while (i + 3 < ii) {\n   if (fnArray[i] !== OPS.save || fnArray[i + 1] !== OPS.transform || fnArray[i + 2] !== OPS.paintImageMaskXObject || fnArray[i + 3] !== OPS.restore) {\n    break;\n   }\n   i += 4;\n  }\n  var count = (i - iFirstSave) / 4;\n  count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\n  if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\n   return i;\n  }\n  var q;\n  var isSameImage = false;\n  var iTransform, transformArgs;\n  var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\n  if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\n   isSameImage = true;\n   var firstTransformArg0 = argsArray[iFirstTransform][0];\n   var firstTransformArg3 = argsArray[iFirstTransform][3];\n   iTransform = iFirstTransform + 4;\n   var iPIMXO = iFirstPIMXO + 4;\n   for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\n    transformArgs = argsArray[iTransform];\n    if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\n     if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\n      isSameImage = false;\n     } else {\n      count = q;\n     }\n     break;\n    }\n   }\n  }\n  if (isSameImage) {\n   count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\n   var positions = new Float32Array(count * 2);\n   iTransform = iFirstTransform;\n   for (q = 0; q < count; q++, iTransform += 4) {\n    transformArgs = argsArray[iTransform];\n    positions[q << 1] = transformArgs[4];\n    positions[(q << 1) + 1] = transformArgs[5];\n   }\n   fnArray.splice(iFirstSave, count * 4, OPS.paintImageMaskXObjectRepeat);\n   argsArray.splice(iFirstSave, count * 4, [\n    firstPIMXOArg0,\n    firstTransformArg0,\n    firstTransformArg3,\n    positions\n   ]);\n  } else {\n   count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\n   var images = [];\n   for (q = 0; q < count; q++) {\n    transformArgs = argsArray[iFirstTransform + (q << 2)];\n    var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\n    images.push({\n     data: maskParams.data,\n     width: maskParams.width,\n     height: maskParams.height,\n     transform: transformArgs\n    });\n   }\n   fnArray.splice(iFirstSave, count * 4, OPS.paintImageMaskXObjectGroup);\n   argsArray.splice(iFirstSave, count * 4, [images]);\n  }\n  return iFirstSave + 1;\n });\n addState(InitialState, [\n  OPS.save,\n  OPS.transform,\n  OPS.paintImageXObject,\n  OPS.restore\n ], function (context) {\n  var MIN_IMAGES_IN_BLOCK = 3;\n  var MAX_IMAGES_IN_BLOCK = 1000;\n  var fnArray = context.fnArray, argsArray = context.argsArray;\n  var curr = context.iCurr;\n  var iFirstSave = curr - 3;\n  var iFirstTransform = curr - 2;\n  var iFirstPIXO = curr - 1;\n  var iFirstRestore = curr;\n  if (argsArray[iFirstTransform][1] !== 0 || argsArray[iFirstTransform][2] !== 0) {\n   return iFirstRestore + 1;\n  }\n  var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n  var firstTransformArg0 = argsArray[iFirstTransform][0];\n  var firstTransformArg3 = argsArray[iFirstTransform][3];\n  var i = iFirstSave + 4;\n  var ii = fnArray.length;\n  while (i + 3 < ii) {\n   if (fnArray[i] !== OPS.save || fnArray[i + 1] !== OPS.transform || fnArray[i + 2] !== OPS.paintImageXObject || fnArray[i + 3] !== OPS.restore) {\n    break;\n   }\n   if (argsArray[i + 1][0] !== firstTransformArg0 || argsArray[i + 1][1] !== 0 || argsArray[i + 1][2] !== 0 || argsArray[i + 1][3] !== firstTransformArg3) {\n    break;\n   }\n   if (argsArray[i + 2][0] !== firstPIXOArg0) {\n    break;\n   }\n   i += 4;\n  }\n  var count = Math.min((i - iFirstSave) / 4, MAX_IMAGES_IN_BLOCK);\n  if (count < MIN_IMAGES_IN_BLOCK) {\n   return i;\n  }\n  var positions = new Float32Array(count * 2);\n  var iTransform = iFirstTransform;\n  for (var q = 0; q < count; q++, iTransform += 4) {\n   var transformArgs = argsArray[iTransform];\n   positions[q << 1] = transformArgs[4];\n   positions[(q << 1) + 1] = transformArgs[5];\n  }\n  var args = [\n   firstPIXOArg0,\n   firstTransformArg0,\n   firstTransformArg3,\n   positions\n  ];\n  fnArray.splice(iFirstSave, count * 4, OPS.paintImageXObjectRepeat);\n  argsArray.splice(iFirstSave, count * 4, args);\n  return iFirstSave + 1;\n });\n addState(InitialState, [\n  OPS.beginText,\n  OPS.setFont,\n  OPS.setTextMatrix,\n  OPS.showText,\n  OPS.endText\n ], function (context) {\n  var MIN_CHARS_IN_BLOCK = 3;\n  var MAX_CHARS_IN_BLOCK = 1000;\n  var fnArray = context.fnArray, argsArray = context.argsArray;\n  var curr = context.iCurr;\n  var iFirstBeginText = curr - 4;\n  var iFirstSetFont = curr - 3;\n  var iFirstSetTextMatrix = curr - 2;\n  var iFirstShowText = curr - 1;\n  var iFirstEndText = curr;\n  var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n  var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n  var i = iFirstBeginText + 5;\n  var ii = fnArray.length;\n  while (i + 4 < ii) {\n   if (fnArray[i] !== OPS.beginText || fnArray[i + 1] !== OPS.setFont || fnArray[i + 2] !== OPS.setTextMatrix || fnArray[i + 3] !== OPS.showText || fnArray[i + 4] !== OPS.endText) {\n    break;\n   }\n   if (argsArray[i + 1][0] !== firstSetFontArg0 || argsArray[i + 1][1] !== firstSetFontArg1) {\n    break;\n   }\n   i += 5;\n  }\n  var count = Math.min((i - iFirstBeginText) / 5, MAX_CHARS_IN_BLOCK);\n  if (count < MIN_CHARS_IN_BLOCK) {\n   return i;\n  }\n  var iFirst = iFirstBeginText;\n  if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\n   count++;\n   iFirst -= 5;\n  }\n  var iEndText = iFirst + 4;\n  for (var q = 1; q < count; q++) {\n   fnArray.splice(iEndText, 3);\n   argsArray.splice(iEndText, 3);\n   iEndText += 2;\n  }\n  return iEndText + 1;\n });\n function QueueOptimizer() {\n }\n QueueOptimizer.prototype = {\n  optimize: function QueueOptimizer_optimize(queue) {\n   var fnArray = queue.fnArray, argsArray = queue.argsArray;\n   var context = {\n    iCurr: 0,\n    fnArray: fnArray,\n    argsArray: argsArray\n   };\n   var state;\n   var i = 0, ii = fnArray.length;\n   while (i < ii) {\n    state = (state || InitialState)[fnArray[i]];\n    if (typeof state === 'function') {\n     context.iCurr = i;\n     i = state(context);\n     state = undefined;\n     ii = context.fnArray.length;\n    } else {\n     i++;\n    }\n   }\n  }\n };\n return QueueOptimizer;\n}();\nexports.OperatorList = OperatorList;\nexports.PartialEvaluator = PartialEvaluator;\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar coreArithmeticDecoder = __w_pdfjs_require__(10);\nvar info = sharedUtil.info;\nvar warn = sharedUtil.warn;\nvar error = sharedUtil.error;\nvar log2 = sharedUtil.log2;\nvar readUint16 = sharedUtil.readUint16;\nvar readUint32 = sharedUtil.readUint32;\nvar ArithmeticDecoder = coreArithmeticDecoder.ArithmeticDecoder;\nvar JpxImage = function JpxImageClosure() {\n var SubbandsGainLog2 = {\n  'LL': 0,\n  'LH': 1,\n  'HL': 1,\n  'HH': 2\n };\n function JpxImage() {\n  this.failOnCorruptedImage = false;\n }\n JpxImage.prototype = {\n  parse: function JpxImage_parse(data) {\n   var head = readUint16(data, 0);\n   if (head === 0xFF4F) {\n    this.parseCodestream(data, 0, data.length);\n    return;\n   }\n   var position = 0, length = data.length;\n   while (position < length) {\n    var headerSize = 8;\n    var lbox = readUint32(data, position);\n    var tbox = readUint32(data, position + 4);\n    position += headerSize;\n    if (lbox === 1) {\n     lbox = readUint32(data, position) * 4294967296 + readUint32(data, position + 4);\n     position += 8;\n     headerSize += 8;\n    }\n    if (lbox === 0) {\n     lbox = length - position + headerSize;\n    }\n    if (lbox < headerSize) {\n     error('JPX Error: Invalid box field size');\n    }\n    var dataLength = lbox - headerSize;\n    var jumpDataLength = true;\n    switch (tbox) {\n    case 0x6A703268:\n     jumpDataLength = false;\n     break;\n    case 0x636F6C72:\n     var method = data[position];\n     if (method === 1) {\n      var colorspace = readUint32(data, position + 3);\n      switch (colorspace) {\n      case 16:\n      case 17:\n      case 18:\n       break;\n      default:\n       warn('Unknown colorspace ' + colorspace);\n       break;\n      }\n     } else if (method === 2) {\n      info('ICC profile not supported');\n     }\n     break;\n    case 0x6A703263:\n     this.parseCodestream(data, position, position + dataLength);\n     break;\n    case 0x6A502020:\n     if (0x0d0a870a !== readUint32(data, position)) {\n      warn('Invalid JP2 signature');\n     }\n     break;\n    case 0x6A501A1A:\n    case 0x66747970:\n    case 0x72726571:\n    case 0x72657320:\n    case 0x69686472:\n     break;\n    default:\n     var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\n     warn('Unsupported header type ' + tbox + ' (' + headerType + ')');\n     break;\n    }\n    if (jumpDataLength) {\n     position += dataLength;\n    }\n   }\n  },\n  parseImageProperties: function JpxImage_parseImageProperties(stream) {\n   var newByte = stream.getByte();\n   while (newByte >= 0) {\n    var oldByte = newByte;\n    newByte = stream.getByte();\n    var code = oldByte << 8 | newByte;\n    if (code === 0xFF51) {\n     stream.skip(4);\n     var Xsiz = stream.getInt32() >>> 0;\n     var Ysiz = stream.getInt32() >>> 0;\n     var XOsiz = stream.getInt32() >>> 0;\n     var YOsiz = stream.getInt32() >>> 0;\n     stream.skip(16);\n     var Csiz = stream.getUint16();\n     this.width = Xsiz - XOsiz;\n     this.height = Ysiz - YOsiz;\n     this.componentsCount = Csiz;\n     this.bitsPerComponent = 8;\n     return;\n    }\n   }\n   error('JPX Error: No size marker found in JPX stream');\n  },\n  parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n   var context = {};\n   var doNotRecover = false;\n   try {\n    var position = start;\n    while (position + 1 < end) {\n     var code = readUint16(data, position);\n     position += 2;\n     var length = 0, j, sqcd, spqcds, spqcdSize, scalarExpounded, tile;\n     switch (code) {\n     case 0xFF4F:\n      context.mainHeader = true;\n      break;\n     case 0xFFD9:\n      break;\n     case 0xFF51:\n      length = readUint16(data, position);\n      var siz = {};\n      siz.Xsiz = readUint32(data, position + 4);\n      siz.Ysiz = readUint32(data, position + 8);\n      siz.XOsiz = readUint32(data, position + 12);\n      siz.YOsiz = readUint32(data, position + 16);\n      siz.XTsiz = readUint32(data, position + 20);\n      siz.YTsiz = readUint32(data, position + 24);\n      siz.XTOsiz = readUint32(data, position + 28);\n      siz.YTOsiz = readUint32(data, position + 32);\n      var componentsCount = readUint16(data, position + 36);\n      siz.Csiz = componentsCount;\n      var components = [];\n      j = position + 38;\n      for (var i = 0; i < componentsCount; i++) {\n       var component = {\n        precision: (data[j] & 0x7F) + 1,\n        isSigned: !!(data[j] & 0x80),\n        XRsiz: data[j + 1],\n        YRsiz: data[j + 1]\n       };\n       calculateComponentDimensions(component, siz);\n       components.push(component);\n      }\n      context.SIZ = siz;\n      context.components = components;\n      calculateTileGrids(context, components);\n      context.QCC = [];\n      context.COC = [];\n      break;\n     case 0xFF5C:\n      length = readUint16(data, position);\n      var qcd = {};\n      j = position + 2;\n      sqcd = data[j++];\n      switch (sqcd & 0x1F) {\n      case 0:\n       spqcdSize = 8;\n       scalarExpounded = true;\n       break;\n      case 1:\n       spqcdSize = 16;\n       scalarExpounded = false;\n       break;\n      case 2:\n       spqcdSize = 16;\n       scalarExpounded = true;\n       break;\n      default:\n       throw new Error('Invalid SQcd value ' + sqcd);\n      }\n      qcd.noQuantization = spqcdSize === 8;\n      qcd.scalarExpounded = scalarExpounded;\n      qcd.guardBits = sqcd >> 5;\n      spqcds = [];\n      while (j < length + position) {\n       var spqcd = {};\n       if (spqcdSize === 8) {\n        spqcd.epsilon = data[j++] >> 3;\n        spqcd.mu = 0;\n       } else {\n        spqcd.epsilon = data[j] >> 3;\n        spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n        j += 2;\n       }\n       spqcds.push(spqcd);\n      }\n      qcd.SPqcds = spqcds;\n      if (context.mainHeader) {\n       context.QCD = qcd;\n      } else {\n       context.currentTile.QCD = qcd;\n       context.currentTile.QCC = [];\n      }\n      break;\n     case 0xFF5D:\n      length = readUint16(data, position);\n      var qcc = {};\n      j = position + 2;\n      var cqcc;\n      if (context.SIZ.Csiz < 257) {\n       cqcc = data[j++];\n      } else {\n       cqcc = readUint16(data, j);\n       j += 2;\n      }\n      sqcd = data[j++];\n      switch (sqcd & 0x1F) {\n      case 0:\n       spqcdSize = 8;\n       scalarExpounded = true;\n       break;\n      case 1:\n       spqcdSize = 16;\n       scalarExpounded = false;\n       break;\n      case 2:\n       spqcdSize = 16;\n       scalarExpounded = true;\n       break;\n      default:\n       throw new Error('Invalid SQcd value ' + sqcd);\n      }\n      qcc.noQuantization = spqcdSize === 8;\n      qcc.scalarExpounded = scalarExpounded;\n      qcc.guardBits = sqcd >> 5;\n      spqcds = [];\n      while (j < length + position) {\n       spqcd = {};\n       if (spqcdSize === 8) {\n        spqcd.epsilon = data[j++] >> 3;\n        spqcd.mu = 0;\n       } else {\n        spqcd.epsilon = data[j] >> 3;\n        spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n        j += 2;\n       }\n       spqcds.push(spqcd);\n      }\n      qcc.SPqcds = spqcds;\n      if (context.mainHeader) {\n       context.QCC[cqcc] = qcc;\n      } else {\n       context.currentTile.QCC[cqcc] = qcc;\n      }\n      break;\n     case 0xFF52:\n      length = readUint16(data, position);\n      var cod = {};\n      j = position + 2;\n      var scod = data[j++];\n      cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n      cod.sopMarkerUsed = !!(scod & 2);\n      cod.ephMarkerUsed = !!(scod & 4);\n      cod.progressionOrder = data[j++];\n      cod.layersCount = readUint16(data, j);\n      j += 2;\n      cod.multipleComponentTransform = data[j++];\n      cod.decompositionLevelsCount = data[j++];\n      cod.xcb = (data[j++] & 0xF) + 2;\n      cod.ycb = (data[j++] & 0xF) + 2;\n      var blockStyle = data[j++];\n      cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n      cod.resetContextProbabilities = !!(blockStyle & 2);\n      cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n      cod.verticalyStripe = !!(blockStyle & 8);\n      cod.predictableTermination = !!(blockStyle & 16);\n      cod.segmentationSymbolUsed = !!(blockStyle & 32);\n      cod.reversibleTransformation = data[j++];\n      if (cod.entropyCoderWithCustomPrecincts) {\n       var precinctsSizes = [];\n       while (j < length + position) {\n        var precinctsSize = data[j++];\n        precinctsSizes.push({\n         PPx: precinctsSize & 0xF,\n         PPy: precinctsSize >> 4\n        });\n       }\n       cod.precinctsSizes = precinctsSizes;\n      }\n      var unsupported = [];\n      if (cod.selectiveArithmeticCodingBypass) {\n       unsupported.push('selectiveArithmeticCodingBypass');\n      }\n      if (cod.resetContextProbabilities) {\n       unsupported.push('resetContextProbabilities');\n      }\n      if (cod.terminationOnEachCodingPass) {\n       unsupported.push('terminationOnEachCodingPass');\n      }\n      if (cod.verticalyStripe) {\n       unsupported.push('verticalyStripe');\n      }\n      if (cod.predictableTermination) {\n       unsupported.push('predictableTermination');\n      }\n      if (unsupported.length > 0) {\n       doNotRecover = true;\n       throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\n      }\n      if (context.mainHeader) {\n       context.COD = cod;\n      } else {\n       context.currentTile.COD = cod;\n       context.currentTile.COC = [];\n      }\n      break;\n     case 0xFF90:\n      length = readUint16(data, position);\n      tile = {};\n      tile.index = readUint16(data, position + 2);\n      tile.length = readUint32(data, position + 4);\n      tile.dataEnd = tile.length + position - 2;\n      tile.partIndex = data[position + 8];\n      tile.partsCount = data[position + 9];\n      context.mainHeader = false;\n      if (tile.partIndex === 0) {\n       tile.COD = context.COD;\n       tile.COC = context.COC.slice(0);\n       tile.QCD = context.QCD;\n       tile.QCC = context.QCC.slice(0);\n      }\n      context.currentTile = tile;\n      break;\n     case 0xFF93:\n      tile = context.currentTile;\n      if (tile.partIndex === 0) {\n       initializeTile(context, tile.index);\n       buildPackets(context);\n      }\n      length = tile.dataEnd - position;\n      parseTilePackets(context, data, position, length);\n      break;\n     case 0xFF55:\n     case 0xFF57:\n     case 0xFF58:\n     case 0xFF64:\n      length = readUint16(data, position);\n      break;\n     case 0xFF53:\n      throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\n     default:\n      throw new Error('Unknown codestream code: ' + code.toString(16));\n     }\n     position += length;\n    }\n   } catch (e) {\n    if (doNotRecover || this.failOnCorruptedImage) {\n     error('JPX Error: ' + e.message);\n    } else {\n     warn('JPX: Trying to recover from: ' + e.message);\n    }\n   }\n   this.tiles = transformComponents(context);\n   this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n   this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n   this.componentsCount = context.SIZ.Csiz;\n  }\n };\n function calculateComponentDimensions(component, siz) {\n  component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n  component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n  component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n  component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n  component.width = component.x1 - component.x0;\n  component.height = component.y1 - component.y0;\n }\n function calculateTileGrids(context, components) {\n  var siz = context.SIZ;\n  var tile, tiles = [];\n  var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n  var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n  for (var q = 0; q < numYtiles; q++) {\n   for (var p = 0; p < numXtiles; p++) {\n    tile = {};\n    tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n    tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n    tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n    tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n    tile.width = tile.tx1 - tile.tx0;\n    tile.height = tile.ty1 - tile.ty0;\n    tile.components = [];\n    tiles.push(tile);\n   }\n  }\n  context.tiles = tiles;\n  var componentsCount = siz.Csiz;\n  for (var i = 0, ii = componentsCount; i < ii; i++) {\n   var component = components[i];\n   for (var j = 0, jj = tiles.length; j < jj; j++) {\n    var tileComponent = {};\n    tile = tiles[j];\n    tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n    tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n    tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n    tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n    tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n    tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n    tile.components[i] = tileComponent;\n   }\n  }\n }\n function getBlocksDimensions(context, component, r) {\n  var codOrCoc = component.codingStyleParameters;\n  var result = {};\n  if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n   result.PPx = 15;\n   result.PPy = 15;\n  } else {\n   result.PPx = codOrCoc.precinctsSizes[r].PPx;\n   result.PPy = codOrCoc.precinctsSizes[r].PPy;\n  }\n  result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\n  result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\n  return result;\n }\n function buildPrecincts(context, resolution, dimensions) {\n  var precinctWidth = 1 << dimensions.PPx;\n  var precinctHeight = 1 << dimensions.PPy;\n  var isZeroRes = resolution.resLevel === 0;\n  var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\n  var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\n  var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\n  var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\n  var numprecincts = numprecinctswide * numprecinctshigh;\n  resolution.precinctParameters = {\n   precinctWidth: precinctWidth,\n   precinctHeight: precinctHeight,\n   numprecinctswide: numprecinctswide,\n   numprecinctshigh: numprecinctshigh,\n   numprecincts: numprecincts,\n   precinctWidthInSubband: precinctWidthInSubband,\n   precinctHeightInSubband: precinctHeightInSubband\n  };\n }\n function buildCodeblocks(context, subband, dimensions) {\n  var xcb_ = dimensions.xcb_;\n  var ycb_ = dimensions.ycb_;\n  var codeblockWidth = 1 << xcb_;\n  var codeblockHeight = 1 << ycb_;\n  var cbx0 = subband.tbx0 >> xcb_;\n  var cby0 = subband.tby0 >> ycb_;\n  var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\n  var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\n  var precinctParameters = subband.resolution.precinctParameters;\n  var codeblocks = [];\n  var precincts = [];\n  var i, j, codeblock, precinctNumber;\n  for (j = cby0; j < cby1; j++) {\n   for (i = cbx0; i < cbx1; i++) {\n    codeblock = {\n     cbx: i,\n     cby: j,\n     tbx0: codeblockWidth * i,\n     tby0: codeblockHeight * j,\n     tbx1: codeblockWidth * (i + 1),\n     tby1: codeblockHeight * (j + 1)\n    };\n    codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n    codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n    codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n    codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n    var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\n    var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\n    precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n    codeblock.precinctNumber = precinctNumber;\n    codeblock.subbandType = subband.type;\n    codeblock.Lblock = 3;\n    if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\n     continue;\n    }\n    codeblocks.push(codeblock);\n    var precinct = precincts[precinctNumber];\n    if (precinct !== undefined) {\n     if (i < precinct.cbxMin) {\n      precinct.cbxMin = i;\n     } else if (i > precinct.cbxMax) {\n      precinct.cbxMax = i;\n     }\n     if (j < precinct.cbyMin) {\n      precinct.cbxMin = j;\n     } else if (j > precinct.cbyMax) {\n      precinct.cbyMax = j;\n     }\n    } else {\n     precincts[precinctNumber] = precinct = {\n      cbxMin: i,\n      cbyMin: j,\n      cbxMax: i,\n      cbyMax: j\n     };\n    }\n    codeblock.precinct = precinct;\n   }\n  }\n  subband.codeblockParameters = {\n   codeblockWidth: xcb_,\n   codeblockHeight: ycb_,\n   numcodeblockwide: cbx1 - cbx0 + 1,\n   numcodeblockhigh: cby1 - cby0 + 1\n  };\n  subband.codeblocks = codeblocks;\n  subband.precincts = precincts;\n }\n function createPacket(resolution, precinctNumber, layerNumber) {\n  var precinctCodeblocks = [];\n  var subbands = resolution.subbands;\n  for (var i = 0, ii = subbands.length; i < ii; i++) {\n   var subband = subbands[i];\n   var codeblocks = subband.codeblocks;\n   for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n    var codeblock = codeblocks[j];\n    if (codeblock.precinctNumber !== precinctNumber) {\n     continue;\n    }\n    precinctCodeblocks.push(codeblock);\n   }\n  }\n  return {\n   layerNumber: layerNumber,\n   codeblocks: precinctCodeblocks\n  };\n }\n function LayerResolutionComponentPositionIterator(context) {\n  var siz = context.SIZ;\n  var tileIndex = context.currentTile.index;\n  var tile = context.tiles[tileIndex];\n  var layersCount = tile.codingStyleDefaultParameters.layersCount;\n  var componentsCount = siz.Csiz;\n  var maxDecompositionLevelsCount = 0;\n  for (var q = 0; q < componentsCount; q++) {\n   maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n  }\n  var l = 0, r = 0, i = 0, k = 0;\n  this.nextPacket = function JpxImage_nextPacket() {\n   for (; l < layersCount; l++) {\n    for (; r <= maxDecompositionLevelsCount; r++) {\n     for (; i < componentsCount; i++) {\n      var component = tile.components[i];\n      if (r > component.codingStyleParameters.decompositionLevelsCount) {\n       continue;\n      }\n      var resolution = component.resolutions[r];\n      var numprecincts = resolution.precinctParameters.numprecincts;\n      for (; k < numprecincts;) {\n       var packet = createPacket(resolution, k, l);\n       k++;\n       return packet;\n      }\n      k = 0;\n     }\n     i = 0;\n    }\n    r = 0;\n   }\n   error('JPX Error: Out of packets');\n  };\n }\n function ResolutionLayerComponentPositionIterator(context) {\n  var siz = context.SIZ;\n  var tileIndex = context.currentTile.index;\n  var tile = context.tiles[tileIndex];\n  var layersCount = tile.codingStyleDefaultParameters.layersCount;\n  var componentsCount = siz.Csiz;\n  var maxDecompositionLevelsCount = 0;\n  for (var q = 0; q < componentsCount; q++) {\n   maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n  }\n  var r = 0, l = 0, i = 0, k = 0;\n  this.nextPacket = function JpxImage_nextPacket() {\n   for (; r <= maxDecompositionLevelsCount; r++) {\n    for (; l < layersCount; l++) {\n     for (; i < componentsCount; i++) {\n      var component = tile.components[i];\n      if (r > component.codingStyleParameters.decompositionLevelsCount) {\n       continue;\n      }\n      var resolution = component.resolutions[r];\n      var numprecincts = resolution.precinctParameters.numprecincts;\n      for (; k < numprecincts;) {\n       var packet = createPacket(resolution, k, l);\n       k++;\n       return packet;\n      }\n      k = 0;\n     }\n     i = 0;\n    }\n    l = 0;\n   }\n   error('JPX Error: Out of packets');\n  };\n }\n function ResolutionPositionComponentLayerIterator(context) {\n  var siz = context.SIZ;\n  var tileIndex = context.currentTile.index;\n  var tile = context.tiles[tileIndex];\n  var layersCount = tile.codingStyleDefaultParameters.layersCount;\n  var componentsCount = siz.Csiz;\n  var l, r, c, p;\n  var maxDecompositionLevelsCount = 0;\n  for (c = 0; c < componentsCount; c++) {\n   var component = tile.components[c];\n   maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\n  }\n  var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\n  for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n   var maxNumPrecincts = 0;\n   for (c = 0; c < componentsCount; ++c) {\n    var resolutions = tile.components[c].resolutions;\n    if (r < resolutions.length) {\n     maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\n    }\n   }\n   maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n  }\n  l = 0;\n  r = 0;\n  c = 0;\n  p = 0;\n  this.nextPacket = function JpxImage_nextPacket() {\n   for (; r <= maxDecompositionLevelsCount; r++) {\n    for (; p < maxNumPrecinctsInLevel[r]; p++) {\n     for (; c < componentsCount; c++) {\n      var component = tile.components[c];\n      if (r > component.codingStyleParameters.decompositionLevelsCount) {\n       continue;\n      }\n      var resolution = component.resolutions[r];\n      var numprecincts = resolution.precinctParameters.numprecincts;\n      if (p >= numprecincts) {\n       continue;\n      }\n      for (; l < layersCount;) {\n       var packet = createPacket(resolution, p, l);\n       l++;\n       return packet;\n      }\n      l = 0;\n     }\n     c = 0;\n    }\n    p = 0;\n   }\n   error('JPX Error: Out of packets');\n  };\n }\n function PositionComponentResolutionLayerIterator(context) {\n  var siz = context.SIZ;\n  var tileIndex = context.currentTile.index;\n  var tile = context.tiles[tileIndex];\n  var layersCount = tile.codingStyleDefaultParameters.layersCount;\n  var componentsCount = siz.Csiz;\n  var precinctsSizes = getPrecinctSizesInImageScale(tile);\n  var precinctsIterationSizes = precinctsSizes;\n  var l = 0, r = 0, c = 0, px = 0, py = 0;\n  this.nextPacket = function JpxImage_nextPacket() {\n   for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n    for (; px < precinctsIterationSizes.maxNumWide; px++) {\n     for (; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      for (; r <= decompositionLevelsCount; r++) {\n       var resolution = component.resolutions[r];\n       var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\n       var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n       if (k === null) {\n        continue;\n       }\n       for (; l < layersCount;) {\n        var packet = createPacket(resolution, k, l);\n        l++;\n        return packet;\n       }\n       l = 0;\n      }\n      r = 0;\n     }\n     c = 0;\n    }\n    px = 0;\n   }\n   error('JPX Error: Out of packets');\n  };\n }\n function ComponentPositionResolutionLayerIterator(context) {\n  var siz = context.SIZ;\n  var tileIndex = context.currentTile.index;\n  var tile = context.tiles[tileIndex];\n  var layersCount = tile.codingStyleDefaultParameters.layersCount;\n  var componentsCount = siz.Csiz;\n  var precinctsSizes = getPrecinctSizesInImageScale(tile);\n  var l = 0, r = 0, c = 0, px = 0, py = 0;\n  this.nextPacket = function JpxImage_nextPacket() {\n   for (; c < componentsCount; ++c) {\n    var component = tile.components[c];\n    var precinctsIterationSizes = precinctsSizes.components[c];\n    var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n    for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n     for (; px < precinctsIterationSizes.maxNumWide; px++) {\n      for (; r <= decompositionLevelsCount; r++) {\n       var resolution = component.resolutions[r];\n       var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n       var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n       if (k === null) {\n        continue;\n       }\n       for (; l < layersCount;) {\n        var packet = createPacket(resolution, k, l);\n        l++;\n        return packet;\n       }\n       l = 0;\n      }\n      r = 0;\n     }\n     px = 0;\n    }\n    py = 0;\n   }\n   error('JPX Error: Out of packets');\n  };\n }\n function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\n  var posX = pxIndex * precinctIterationSizes.minWidth;\n  var posY = pyIndex * precinctIterationSizes.minHeight;\n  if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\n   return null;\n  }\n  var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\n  return posX / sizeInImageScale.height + startPrecinctRowIndex;\n }\n function getPrecinctSizesInImageScale(tile) {\n  var componentsCount = tile.components.length;\n  var minWidth = Number.MAX_VALUE;\n  var minHeight = Number.MAX_VALUE;\n  var maxNumWide = 0;\n  var maxNumHigh = 0;\n  var sizePerComponent = new Array(componentsCount);\n  for (var c = 0; c < componentsCount; c++) {\n   var component = tile.components[c];\n   var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n   var sizePerResolution = new Array(decompositionLevelsCount + 1);\n   var minWidthCurrentComponent = Number.MAX_VALUE;\n   var minHeightCurrentComponent = Number.MAX_VALUE;\n   var maxNumWideCurrentComponent = 0;\n   var maxNumHighCurrentComponent = 0;\n   var scale = 1;\n   for (var r = decompositionLevelsCount; r >= 0; --r) {\n    var resolution = component.resolutions[r];\n    var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\n    var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\n    minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\n    minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\n    maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\n    maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\n    sizePerResolution[r] = {\n     width: widthCurrentResolution,\n     height: heightCurrentResolution\n    };\n    scale <<= 1;\n   }\n   minWidth = Math.min(minWidth, minWidthCurrentComponent);\n   minHeight = Math.min(minHeight, minHeightCurrentComponent);\n   maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n   maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n   sizePerComponent[c] = {\n    resolutions: sizePerResolution,\n    minWidth: minWidthCurrentComponent,\n    minHeight: minHeightCurrentComponent,\n    maxNumWide: maxNumWideCurrentComponent,\n    maxNumHigh: maxNumHighCurrentComponent\n   };\n  }\n  return {\n   components: sizePerComponent,\n   minWidth: minWidth,\n   minHeight: minHeight,\n   maxNumWide: maxNumWide,\n   maxNumHigh: maxNumHigh\n  };\n }\n function buildPackets(context) {\n  var siz = context.SIZ;\n  var tileIndex = context.currentTile.index;\n  var tile = context.tiles[tileIndex];\n  var componentsCount = siz.Csiz;\n  for (var c = 0; c < componentsCount; c++) {\n   var component = tile.components[c];\n   var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n   var resolutions = [];\n   var subbands = [];\n   for (var r = 0; r <= decompositionLevelsCount; r++) {\n    var blocksDimensions = getBlocksDimensions(context, component, r);\n    var resolution = {};\n    var scale = 1 << decompositionLevelsCount - r;\n    resolution.trx0 = Math.ceil(component.tcx0 / scale);\n    resolution.try0 = Math.ceil(component.tcy0 / scale);\n    resolution.trx1 = Math.ceil(component.tcx1 / scale);\n    resolution.try1 = Math.ceil(component.tcy1 / scale);\n    resolution.resLevel = r;\n    buildPrecincts(context, resolution, blocksDimensions);\n    resolutions.push(resolution);\n    var subband;\n    if (r === 0) {\n     subband = {};\n     subband.type = 'LL';\n     subband.tbx0 = Math.ceil(component.tcx0 / scale);\n     subband.tby0 = Math.ceil(component.tcy0 / scale);\n     subband.tbx1 = Math.ceil(component.tcx1 / scale);\n     subband.tby1 = Math.ceil(component.tcy1 / scale);\n     subband.resolution = resolution;\n     buildCodeblocks(context, subband, blocksDimensions);\n     subbands.push(subband);\n     resolution.subbands = [subband];\n    } else {\n     var bscale = 1 << decompositionLevelsCount - r + 1;\n     var resolutionSubbands = [];\n     subband = {};\n     subband.type = 'HL';\n     subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n     subband.tby0 = Math.ceil(component.tcy0 / bscale);\n     subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n     subband.tby1 = Math.ceil(component.tcy1 / bscale);\n     subband.resolution = resolution;\n     buildCodeblocks(context, subband, blocksDimensions);\n     subbands.push(subband);\n     resolutionSubbands.push(subband);\n     subband = {};\n     subband.type = 'LH';\n     subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n     subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n     subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n     subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n     subband.resolution = resolution;\n     buildCodeblocks(context, subband, blocksDimensions);\n     subbands.push(subband);\n     resolutionSubbands.push(subband);\n     subband = {};\n     subband.type = 'HH';\n     subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n     subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n     subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n     subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n     subband.resolution = resolution;\n     buildCodeblocks(context, subband, blocksDimensions);\n     subbands.push(subband);\n     resolutionSubbands.push(subband);\n     resolution.subbands = resolutionSubbands;\n    }\n   }\n   component.resolutions = resolutions;\n   component.subbands = subbands;\n  }\n  var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n  switch (progressionOrder) {\n  case 0:\n   tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\n   break;\n  case 1:\n   tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\n   break;\n  case 2:\n   tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\n   break;\n  case 3:\n   tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\n   break;\n  case 4:\n   tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\n   break;\n  default:\n   error('JPX Error: Unsupported progression order ' + progressionOrder);\n  }\n }\n function parseTilePackets(context, data, offset, dataLength) {\n  var position = 0;\n  var buffer, bufferSize = 0, skipNextBit = false;\n  function readBits(count) {\n   while (bufferSize < count) {\n    var b = data[offset + position];\n    position++;\n    if (skipNextBit) {\n     buffer = buffer << 7 | b;\n     bufferSize += 7;\n     skipNextBit = false;\n    } else {\n     buffer = buffer << 8 | b;\n     bufferSize += 8;\n    }\n    if (b === 0xFF) {\n     skipNextBit = true;\n    }\n   }\n   bufferSize -= count;\n   return buffer >>> bufferSize & (1 << count) - 1;\n  }\n  function skipMarkerIfEqual(value) {\n   if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\n    skipBytes(1);\n    return true;\n   } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\n    skipBytes(2);\n    return true;\n   }\n   return false;\n  }\n  function skipBytes(count) {\n   position += count;\n  }\n  function alignToByte() {\n   bufferSize = 0;\n   if (skipNextBit) {\n    position++;\n    skipNextBit = false;\n   }\n  }\n  function readCodingpasses() {\n   if (readBits(1) === 0) {\n    return 1;\n   }\n   if (readBits(1) === 0) {\n    return 2;\n   }\n   var value = readBits(2);\n   if (value < 3) {\n    return value + 3;\n   }\n   value = readBits(5);\n   if (value < 31) {\n    return value + 6;\n   }\n   value = readBits(7);\n   return value + 37;\n  }\n  var tileIndex = context.currentTile.index;\n  var tile = context.tiles[tileIndex];\n  var sopMarkerUsed = context.COD.sopMarkerUsed;\n  var ephMarkerUsed = context.COD.ephMarkerUsed;\n  var packetsIterator = tile.packetsIterator;\n  while (position < dataLength) {\n   alignToByte();\n   if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n    skipBytes(4);\n   }\n   var packet = packetsIterator.nextPacket();\n   if (!readBits(1)) {\n    continue;\n   }\n   var layerNumber = packet.layerNumber;\n   var queue = [], codeblock;\n   for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n    codeblock = packet.codeblocks[i];\n    var precinct = codeblock.precinct;\n    var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n    var codeblockRow = codeblock.cby - precinct.cbyMin;\n    var codeblockIncluded = false;\n    var firstTimeInclusion = false;\n    var valueReady;\n    if (codeblock['included'] !== undefined) {\n     codeblockIncluded = !!readBits(1);\n    } else {\n     precinct = codeblock.precinct;\n     var inclusionTree, zeroBitPlanesTree;\n     if (precinct['inclusionTree'] !== undefined) {\n      inclusionTree = precinct.inclusionTree;\n     } else {\n      var width = precinct.cbxMax - precinct.cbxMin + 1;\n      var height = precinct.cbyMax - precinct.cbyMin + 1;\n      inclusionTree = new InclusionTree(width, height, layerNumber);\n      zeroBitPlanesTree = new TagTree(width, height);\n      precinct.inclusionTree = inclusionTree;\n      precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n     }\n     if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n      while (true) {\n       if (readBits(1)) {\n        valueReady = !inclusionTree.nextLevel();\n        if (valueReady) {\n         codeblock.included = true;\n         codeblockIncluded = firstTimeInclusion = true;\n         break;\n        }\n       } else {\n        inclusionTree.incrementValue(layerNumber);\n        break;\n       }\n      }\n     }\n    }\n    if (!codeblockIncluded) {\n     continue;\n    }\n    if (firstTimeInclusion) {\n     zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n     zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n     while (true) {\n      if (readBits(1)) {\n       valueReady = !zeroBitPlanesTree.nextLevel();\n       if (valueReady) {\n        break;\n       }\n      } else {\n       zeroBitPlanesTree.incrementValue();\n      }\n     }\n     codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n    }\n    var codingpasses = readCodingpasses();\n    while (readBits(1)) {\n     codeblock.Lblock++;\n    }\n    var codingpassesLog2 = log2(codingpasses);\n    var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\n    var codedDataLength = readBits(bits);\n    queue.push({\n     codeblock: codeblock,\n     codingpasses: codingpasses,\n     dataLength: codedDataLength\n    });\n   }\n   alignToByte();\n   if (ephMarkerUsed) {\n    skipMarkerIfEqual(0x92);\n   }\n   while (queue.length > 0) {\n    var packetItem = queue.shift();\n    codeblock = packetItem.codeblock;\n    if (codeblock['data'] === undefined) {\n     codeblock.data = [];\n    }\n    codeblock.data.push({\n     data: data,\n     start: offset + position,\n     end: offset + position + packetItem.dataLength,\n     codingpasses: packetItem.codingpasses\n    });\n    position += packetItem.dataLength;\n   }\n  }\n  return position;\n }\n function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\n  var x0 = subband.tbx0;\n  var y0 = subband.tby0;\n  var width = subband.tbx1 - subband.tbx0;\n  var codeblocks = subband.codeblocks;\n  var right = subband.type.charAt(0) === 'H' ? 1 : 0;\n  var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\n  for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n   var codeblock = codeblocks[i];\n   var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n   var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n   if (blockWidth === 0 || blockHeight === 0) {\n    continue;\n   }\n   if (codeblock['data'] === undefined) {\n    continue;\n   }\n   var bitModel, currentCodingpassType;\n   bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\n   currentCodingpassType = 2;\n   var data = codeblock.data, totalLength = 0, codingpasses = 0;\n   var j, jj, dataItem;\n   for (j = 0, jj = data.length; j < jj; j++) {\n    dataItem = data[j];\n    totalLength += dataItem.end - dataItem.start;\n    codingpasses += dataItem.codingpasses;\n   }\n   var encodedData = new Uint8Array(totalLength);\n   var position = 0;\n   for (j = 0, jj = data.length; j < jj; j++) {\n    dataItem = data[j];\n    var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n    encodedData.set(chunk, position);\n    position += chunk.length;\n   }\n   var decoder = new ArithmeticDecoder(encodedData, 0, totalLength);\n   bitModel.setDecoder(decoder);\n   for (j = 0; j < codingpasses; j++) {\n    switch (currentCodingpassType) {\n    case 0:\n     bitModel.runSignificancePropagationPass();\n     break;\n    case 1:\n     bitModel.runMagnitudeRefinementPass();\n     break;\n    case 2:\n     bitModel.runCleanupPass();\n     if (segmentationSymbolUsed) {\n      bitModel.checkSegmentationSymbol();\n     }\n     break;\n    }\n    currentCodingpassType = (currentCodingpassType + 1) % 3;\n   }\n   var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n   var sign = bitModel.coefficentsSign;\n   var magnitude = bitModel.coefficentsMagnitude;\n   var bitsDecoded = bitModel.bitsDecoded;\n   var magnitudeCorrection = reversible ? 0 : 0.5;\n   var k, n, nb;\n   position = 0;\n   var interleave = subband.type !== 'LL';\n   for (j = 0; j < blockHeight; j++) {\n    var row = offset / width | 0;\n    var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n    for (k = 0; k < blockWidth; k++) {\n     n = magnitude[position];\n     if (n !== 0) {\n      n = (n + magnitudeCorrection) * delta;\n      if (sign[position] !== 0) {\n       n = -n;\n      }\n      nb = bitsDecoded[position];\n      var pos = interleave ? levelOffset + (offset << 1) : offset;\n      if (reversible && nb >= mb) {\n       coefficients[pos] = n;\n      } else {\n       coefficients[pos] = n * (1 << mb - nb);\n      }\n     }\n     offset++;\n     position++;\n    }\n    offset += width - blockWidth;\n   }\n  }\n }\n function transformTile(context, tile, c) {\n  var component = tile.components[c];\n  var codingStyleParameters = component.codingStyleParameters;\n  var quantizationParameters = component.quantizationParameters;\n  var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\n  var spqcds = quantizationParameters.SPqcds;\n  var scalarExpounded = quantizationParameters.scalarExpounded;\n  var guardBits = quantizationParameters.guardBits;\n  var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n  var precision = context.components[c].precision;\n  var reversible = codingStyleParameters.reversibleTransformation;\n  var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\n  var subbandCoefficients = [];\n  var b = 0;\n  for (var i = 0; i <= decompositionLevelsCount; i++) {\n   var resolution = component.resolutions[i];\n   var width = resolution.trx1 - resolution.trx0;\n   var height = resolution.try1 - resolution.try0;\n   var coefficients = new Float32Array(width * height);\n   for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n    var mu, epsilon;\n    if (!scalarExpounded) {\n     mu = spqcds[0].mu;\n     epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n    } else {\n     mu = spqcds[b].mu;\n     epsilon = spqcds[b].epsilon;\n     b++;\n    }\n    var subband = resolution.subbands[j];\n    var gainLog2 = SubbandsGainLog2[subband.type];\n    var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n    var mb = guardBits + epsilon - 1;\n    copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\n   }\n   subbandCoefficients.push({\n    width: width,\n    height: height,\n    items: coefficients\n   });\n  }\n  var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\n  return {\n   left: component.tcx0,\n   top: component.tcy0,\n   width: result.width,\n   height: result.height,\n   items: result.items\n  };\n }\n function transformComponents(context) {\n  var siz = context.SIZ;\n  var components = context.components;\n  var componentsCount = siz.Csiz;\n  var resultImages = [];\n  for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n   var tile = context.tiles[i];\n   var transformedTiles = [];\n   var c;\n   for (c = 0; c < componentsCount; c++) {\n    transformedTiles[c] = transformTile(context, tile, c);\n   }\n   var tile0 = transformedTiles[0];\n   var out = new Uint8Array(tile0.items.length * componentsCount);\n   var result = {\n    left: tile0.left,\n    top: tile0.top,\n    width: tile0.width,\n    height: tile0.height,\n    items: out\n   };\n   var shift, offset, max, min, maxK;\n   var pos = 0, j, jj, y0, y1, y2, r, g, b, k, val;\n   if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n    var fourComponents = componentsCount === 4;\n    var y0items = transformedTiles[0].items;\n    var y1items = transformedTiles[1].items;\n    var y2items = transformedTiles[2].items;\n    var y3items = fourComponents ? transformedTiles[3].items : null;\n    shift = components[0].precision - 8;\n    offset = (128 << shift) + 0.5;\n    max = 255 * (1 << shift);\n    maxK = max * 0.5;\n    min = -maxK;\n    var component0 = tile.components[0];\n    var alpha01 = componentsCount - 3;\n    jj = y0items.length;\n    if (!component0.codingStyleParameters.reversibleTransformation) {\n     for (j = 0; j < jj; j++, pos += alpha01) {\n      y0 = y0items[j] + offset;\n      y1 = y1items[j];\n      y2 = y2items[j];\n      r = y0 + 1.402 * y2;\n      g = y0 - 0.34413 * y1 - 0.71414 * y2;\n      b = y0 + 1.772 * y1;\n      out[pos++] = r <= 0 ? 0 : r >= max ? 255 : r >> shift;\n      out[pos++] = g <= 0 ? 0 : g >= max ? 255 : g >> shift;\n      out[pos++] = b <= 0 ? 0 : b >= max ? 255 : b >> shift;\n     }\n    } else {\n     for (j = 0; j < jj; j++, pos += alpha01) {\n      y0 = y0items[j] + offset;\n      y1 = y1items[j];\n      y2 = y2items[j];\n      g = y0 - (y2 + y1 >> 2);\n      r = g + y2;\n      b = g + y1;\n      out[pos++] = r <= 0 ? 0 : r >= max ? 255 : r >> shift;\n      out[pos++] = g <= 0 ? 0 : g >= max ? 255 : g >> shift;\n      out[pos++] = b <= 0 ? 0 : b >= max ? 255 : b >> shift;\n     }\n    }\n    if (fourComponents) {\n     for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n      k = y3items[j];\n      out[pos] = k <= min ? 0 : k >= maxK ? 255 : k + offset >> shift;\n     }\n    }\n   } else {\n    for (c = 0; c < componentsCount; c++) {\n     var items = transformedTiles[c].items;\n     shift = components[c].precision - 8;\n     offset = (128 << shift) + 0.5;\n     max = 127.5 * (1 << shift);\n     min = -max;\n     for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n      val = items[j];\n      out[pos] = val <= min ? 0 : val >= max ? 255 : val + offset >> shift;\n      pos += componentsCount;\n     }\n    }\n   }\n   resultImages.push(result);\n  }\n  return resultImages;\n }\n function initializeTile(context, tileIndex) {\n  var siz = context.SIZ;\n  var componentsCount = siz.Csiz;\n  var tile = context.tiles[tileIndex];\n  for (var c = 0; c < componentsCount; c++) {\n   var component = tile.components[c];\n   var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\n   component.quantizationParameters = qcdOrQcc;\n   var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\n   component.codingStyleParameters = codOrCoc;\n  }\n  tile.codingStyleDefaultParameters = context.currentTile.COD;\n }\n var TagTree = function TagTreeClosure() {\n  function TagTree(width, height) {\n   var levelsLength = log2(Math.max(width, height)) + 1;\n   this.levels = [];\n   for (var i = 0; i < levelsLength; i++) {\n    var level = {\n     width: width,\n     height: height,\n     items: []\n    };\n    this.levels.push(level);\n    width = Math.ceil(width / 2);\n    height = Math.ceil(height / 2);\n   }\n  }\n  TagTree.prototype = {\n   reset: function TagTree_reset(i, j) {\n    var currentLevel = 0, value = 0, level;\n    while (currentLevel < this.levels.length) {\n     level = this.levels[currentLevel];\n     var index = i + j * level.width;\n     if (level.items[index] !== undefined) {\n      value = level.items[index];\n      break;\n     }\n     level.index = index;\n     i >>= 1;\n     j >>= 1;\n     currentLevel++;\n    }\n    currentLevel--;\n    level = this.levels[currentLevel];\n    level.items[level.index] = value;\n    this.currentLevel = currentLevel;\n    delete this.value;\n   },\n   incrementValue: function TagTree_incrementValue() {\n    var level = this.levels[this.currentLevel];\n    level.items[level.index]++;\n   },\n   nextLevel: function TagTree_nextLevel() {\n    var currentLevel = this.currentLevel;\n    var level = this.levels[currentLevel];\n    var value = level.items[level.index];\n    currentLevel--;\n    if (currentLevel < 0) {\n     this.value = value;\n     return false;\n    }\n    this.currentLevel = currentLevel;\n    level = this.levels[currentLevel];\n    level.items[level.index] = value;\n    return true;\n   }\n  };\n  return TagTree;\n }();\n var InclusionTree = function InclusionTreeClosure() {\n  function InclusionTree(width, height, defaultValue) {\n   var levelsLength = log2(Math.max(width, height)) + 1;\n   this.levels = [];\n   for (var i = 0; i < levelsLength; i++) {\n    var items = new Uint8Array(width * height);\n    for (var j = 0, jj = items.length; j < jj; j++) {\n     items[j] = defaultValue;\n    }\n    var level = {\n     width: width,\n     height: height,\n     items: items\n    };\n    this.levels.push(level);\n    width = Math.ceil(width / 2);\n    height = Math.ceil(height / 2);\n   }\n  }\n  InclusionTree.prototype = {\n   reset: function InclusionTree_reset(i, j, stopValue) {\n    var currentLevel = 0;\n    while (currentLevel < this.levels.length) {\n     var level = this.levels[currentLevel];\n     var index = i + j * level.width;\n     level.index = index;\n     var value = level.items[index];\n     if (value === 0xFF) {\n      break;\n     }\n     if (value > stopValue) {\n      this.currentLevel = currentLevel;\n      this.propagateValues();\n      return false;\n     }\n     i >>= 1;\n     j >>= 1;\n     currentLevel++;\n    }\n    this.currentLevel = currentLevel - 1;\n    return true;\n   },\n   incrementValue: function InclusionTree_incrementValue(stopValue) {\n    var level = this.levels[this.currentLevel];\n    level.items[level.index] = stopValue + 1;\n    this.propagateValues();\n   },\n   propagateValues: function InclusionTree_propagateValues() {\n    var levelIndex = this.currentLevel;\n    var level = this.levels[levelIndex];\n    var currentValue = level.items[level.index];\n    while (--levelIndex >= 0) {\n     level = this.levels[levelIndex];\n     level.items[level.index] = currentValue;\n    }\n   },\n   nextLevel: function InclusionTree_nextLevel() {\n    var currentLevel = this.currentLevel;\n    var level = this.levels[currentLevel];\n    var value = level.items[level.index];\n    level.items[level.index] = 0xFF;\n    currentLevel--;\n    if (currentLevel < 0) {\n     return false;\n    }\n    this.currentLevel = currentLevel;\n    level = this.levels[currentLevel];\n    level.items[level.index] = value;\n    return true;\n   }\n  };\n  return InclusionTree;\n }();\n var BitModel = function BitModelClosure() {\n  var UNIFORM_CONTEXT = 17;\n  var RUNLENGTH_CONTEXT = 18;\n  var LLAndLHContextsLabel = new Uint8Array([\n   0,\n   5,\n   8,\n   0,\n   3,\n   7,\n   8,\n   0,\n   4,\n   7,\n   8,\n   0,\n   0,\n   0,\n   0,\n   0,\n   1,\n   6,\n   8,\n   0,\n   3,\n   7,\n   8,\n   0,\n   4,\n   7,\n   8,\n   0,\n   0,\n   0,\n   0,\n   0,\n   2,\n   6,\n   8,\n   0,\n   3,\n   7,\n   8,\n   0,\n   4,\n   7,\n   8,\n   0,\n   0,\n   0,\n   0,\n   0,\n   2,\n   6,\n   8,\n   0,\n   3,\n   7,\n   8,\n   0,\n   4,\n   7,\n   8,\n   0,\n   0,\n   0,\n   0,\n   0,\n   2,\n   6,\n   8,\n   0,\n   3,\n   7,\n   8,\n   0,\n   4,\n   7,\n   8\n  ]);\n  var HLContextLabel = new Uint8Array([\n   0,\n   3,\n   4,\n   0,\n   5,\n   7,\n   7,\n   0,\n   8,\n   8,\n   8,\n   0,\n   0,\n   0,\n   0,\n   0,\n   1,\n   3,\n   4,\n   0,\n   6,\n   7,\n   7,\n   0,\n   8,\n   8,\n   8,\n   0,\n   0,\n   0,\n   0,\n   0,\n   2,\n   3,\n   4,\n   0,\n   6,\n   7,\n   7,\n   0,\n   8,\n   8,\n   8,\n   0,\n   0,\n   0,\n   0,\n   0,\n   2,\n   3,\n   4,\n   0,\n   6,\n   7,\n   7,\n   0,\n   8,\n   8,\n   8,\n   0,\n   0,\n   0,\n   0,\n   0,\n   2,\n   3,\n   4,\n   0,\n   6,\n   7,\n   7,\n   0,\n   8,\n   8,\n   8\n  ]);\n  var HHContextLabel = new Uint8Array([\n   0,\n   1,\n   2,\n   0,\n   1,\n   2,\n   2,\n   0,\n   2,\n   2,\n   2,\n   0,\n   0,\n   0,\n   0,\n   0,\n   3,\n   4,\n   5,\n   0,\n   4,\n   5,\n   5,\n   0,\n   5,\n   5,\n   5,\n   0,\n   0,\n   0,\n   0,\n   0,\n   6,\n   7,\n   7,\n   0,\n   7,\n   7,\n   7,\n   0,\n   7,\n   7,\n   7,\n   0,\n   0,\n   0,\n   0,\n   0,\n   8,\n   8,\n   8,\n   0,\n   8,\n   8,\n   8,\n   0,\n   8,\n   8,\n   8,\n   0,\n   0,\n   0,\n   0,\n   0,\n   8,\n   8,\n   8,\n   0,\n   8,\n   8,\n   8,\n   0,\n   8,\n   8,\n   8\n  ]);\n  function BitModel(width, height, subband, zeroBitPlanes, mb) {\n   this.width = width;\n   this.height = height;\n   this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\n   var coefficientCount = width * height;\n   this.neighborsSignificance = new Uint8Array(coefficientCount);\n   this.coefficentsSign = new Uint8Array(coefficientCount);\n   this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\n   this.processingFlags = new Uint8Array(coefficientCount);\n   var bitsDecoded = new Uint8Array(coefficientCount);\n   if (zeroBitPlanes !== 0) {\n    for (var i = 0; i < coefficientCount; i++) {\n     bitsDecoded[i] = zeroBitPlanes;\n    }\n   }\n   this.bitsDecoded = bitsDecoded;\n   this.reset();\n  }\n  BitModel.prototype = {\n   setDecoder: function BitModel_setDecoder(decoder) {\n    this.decoder = decoder;\n   },\n   reset: function BitModel_reset() {\n    this.contexts = new Int8Array(19);\n    this.contexts[0] = 4 << 1 | 0;\n    this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\n    this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\n   },\n   setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\n    var neighborsSignificance = this.neighborsSignificance;\n    var width = this.width, height = this.height;\n    var left = column > 0;\n    var right = column + 1 < width;\n    var i;\n    if (row > 0) {\n     i = index - width;\n     if (left) {\n      neighborsSignificance[i - 1] += 0x10;\n     }\n     if (right) {\n      neighborsSignificance[i + 1] += 0x10;\n     }\n     neighborsSignificance[i] += 0x04;\n    }\n    if (row + 1 < height) {\n     i = index + width;\n     if (left) {\n      neighborsSignificance[i - 1] += 0x10;\n     }\n     if (right) {\n      neighborsSignificance[i + 1] += 0x10;\n     }\n     neighborsSignificance[i] += 0x04;\n    }\n    if (left) {\n     neighborsSignificance[index - 1] += 0x01;\n    }\n    if (right) {\n     neighborsSignificance[index + 1] += 0x01;\n    }\n    neighborsSignificance[index] |= 0x80;\n   },\n   runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\n    var decoder = this.decoder;\n    var width = this.width, height = this.height;\n    var coefficentsMagnitude = this.coefficentsMagnitude;\n    var coefficentsSign = this.coefficentsSign;\n    var neighborsSignificance = this.neighborsSignificance;\n    var processingFlags = this.processingFlags;\n    var contexts = this.contexts;\n    var labels = this.contextLabelTable;\n    var bitsDecoded = this.bitsDecoded;\n    var processedInverseMask = ~1;\n    var processedMask = 1;\n    var firstMagnitudeBitMask = 2;\n    for (var i0 = 0; i0 < height; i0 += 4) {\n     for (var j = 0; j < width; j++) {\n      var index = i0 * width + j;\n      for (var i1 = 0; i1 < 4; i1++, index += width) {\n       var i = i0 + i1;\n       if (i >= height) {\n        break;\n       }\n       processingFlags[index] &= processedInverseMask;\n       if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n        continue;\n       }\n       var contextLabel = labels[neighborsSignificance[index]];\n       var decision = decoder.readBit(contexts, contextLabel);\n       if (decision) {\n        var sign = this.decodeSignBit(i, j, index);\n        coefficentsSign[index] = sign;\n        coefficentsMagnitude[index] = 1;\n        this.setNeighborsSignificance(i, j, index);\n        processingFlags[index] |= firstMagnitudeBitMask;\n       }\n       bitsDecoded[index]++;\n       processingFlags[index] |= processedMask;\n      }\n     }\n    }\n   },\n   decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n    var width = this.width, height = this.height;\n    var coefficentsMagnitude = this.coefficentsMagnitude;\n    var coefficentsSign = this.coefficentsSign;\n    var contribution, sign0, sign1, significance1;\n    var contextLabel, decoded;\n    significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n    if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n     sign1 = coefficentsSign[index + 1];\n     if (significance1) {\n      sign0 = coefficentsSign[index - 1];\n      contribution = 1 - sign1 - sign0;\n     } else {\n      contribution = 1 - sign1 - sign1;\n     }\n    } else if (significance1) {\n     sign0 = coefficentsSign[index - 1];\n     contribution = 1 - sign0 - sign0;\n    } else {\n     contribution = 0;\n    }\n    var horizontalContribution = 3 * contribution;\n    significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n    if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n     sign1 = coefficentsSign[index + width];\n     if (significance1) {\n      sign0 = coefficentsSign[index - width];\n      contribution = 1 - sign1 - sign0 + horizontalContribution;\n     } else {\n      contribution = 1 - sign1 - sign1 + horizontalContribution;\n     }\n    } else if (significance1) {\n     sign0 = coefficentsSign[index - width];\n     contribution = 1 - sign0 - sign0 + horizontalContribution;\n    } else {\n     contribution = horizontalContribution;\n    }\n    if (contribution >= 0) {\n     contextLabel = 9 + contribution;\n     decoded = this.decoder.readBit(this.contexts, contextLabel);\n    } else {\n     contextLabel = 9 - contribution;\n     decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n    }\n    return decoded;\n   },\n   runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\n    var decoder = this.decoder;\n    var width = this.width, height = this.height;\n    var coefficentsMagnitude = this.coefficentsMagnitude;\n    var neighborsSignificance = this.neighborsSignificance;\n    var contexts = this.contexts;\n    var bitsDecoded = this.bitsDecoded;\n    var processingFlags = this.processingFlags;\n    var processedMask = 1;\n    var firstMagnitudeBitMask = 2;\n    var length = width * height;\n    var width4 = width * 4;\n    for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n     indexNext = Math.min(length, index0 + width4);\n     for (var j = 0; j < width; j++) {\n      for (var index = index0 + j; index < indexNext; index += width) {\n       if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n        continue;\n       }\n       var contextLabel = 16;\n       if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n        processingFlags[index] ^= firstMagnitudeBitMask;\n        var significance = neighborsSignificance[index] & 127;\n        contextLabel = significance === 0 ? 15 : 14;\n       }\n       var bit = decoder.readBit(contexts, contextLabel);\n       coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\n       bitsDecoded[index]++;\n       processingFlags[index] |= processedMask;\n      }\n     }\n    }\n   },\n   runCleanupPass: function BitModel_runCleanupPass() {\n    var decoder = this.decoder;\n    var width = this.width, height = this.height;\n    var neighborsSignificance = this.neighborsSignificance;\n    var coefficentsMagnitude = this.coefficentsMagnitude;\n    var coefficentsSign = this.coefficentsSign;\n    var contexts = this.contexts;\n    var labels = this.contextLabelTable;\n    var bitsDecoded = this.bitsDecoded;\n    var processingFlags = this.processingFlags;\n    var processedMask = 1;\n    var firstMagnitudeBitMask = 2;\n    var oneRowDown = width;\n    var twoRowsDown = width * 2;\n    var threeRowsDown = width * 3;\n    var iNext;\n    for (var i0 = 0; i0 < height; i0 = iNext) {\n     iNext = Math.min(i0 + 4, height);\n     var indexBase = i0 * width;\n     var checkAllEmpty = i0 + 3 < height;\n     for (var j = 0; j < width; j++) {\n      var index0 = indexBase + j;\n      var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\n      var i1 = 0, index = index0;\n      var i = i0, sign;\n      if (allEmpty) {\n       var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\n       if (!hasSignificantCoefficent) {\n        bitsDecoded[index0]++;\n        bitsDecoded[index0 + oneRowDown]++;\n        bitsDecoded[index0 + twoRowsDown]++;\n        bitsDecoded[index0 + threeRowsDown]++;\n        continue;\n       }\n       i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n       if (i1 !== 0) {\n        i = i0 + i1;\n        index += i1 * width;\n       }\n       sign = this.decodeSignBit(i, j, index);\n       coefficentsSign[index] = sign;\n       coefficentsMagnitude[index] = 1;\n       this.setNeighborsSignificance(i, j, index);\n       processingFlags[index] |= firstMagnitudeBitMask;\n       index = index0;\n       for (var i2 = i0; i2 <= i; i2++, index += width) {\n        bitsDecoded[index]++;\n       }\n       i1++;\n      }\n      for (i = i0 + i1; i < iNext; i++, index += width) {\n       if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n        continue;\n       }\n       var contextLabel = labels[neighborsSignificance[index]];\n       var decision = decoder.readBit(contexts, contextLabel);\n       if (decision === 1) {\n        sign = this.decodeSignBit(i, j, index);\n        coefficentsSign[index] = sign;\n        coefficentsMagnitude[index] = 1;\n        this.setNeighborsSignificance(i, j, index);\n        processingFlags[index] |= firstMagnitudeBitMask;\n       }\n       bitsDecoded[index]++;\n      }\n     }\n    }\n   },\n   checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n    var decoder = this.decoder;\n    var contexts = this.contexts;\n    var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n    if (symbol !== 0xA) {\n     error('JPX Error: Invalid segmentation symbol');\n    }\n   }\n  };\n  return BitModel;\n }();\n var Transform = function TransformClosure() {\n  function Transform() {\n  }\n  Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\n   var ll = subbands[0];\n   for (var i = 1, ii = subbands.length; i < ii; i++) {\n    ll = this.iterate(ll, subbands[i], u0, v0);\n   }\n   return ll;\n  };\n  Transform.prototype.extend = function extend(buffer, offset, size) {\n   var i1 = offset - 1, j1 = offset + 1;\n   var i2 = offset + size - 2, j2 = offset + size;\n   buffer[i1--] = buffer[j1++];\n   buffer[j2++] = buffer[i2--];\n   buffer[i1--] = buffer[j1++];\n   buffer[j2++] = buffer[i2--];\n   buffer[i1--] = buffer[j1++];\n   buffer[j2++] = buffer[i2--];\n   buffer[i1] = buffer[j1];\n   buffer[j2] = buffer[i2];\n  };\n  Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\n   var llWidth = ll.width, llHeight = ll.height, llItems = ll.items;\n   var width = hl_lh_hh.width;\n   var height = hl_lh_hh.height;\n   var items = hl_lh_hh.items;\n   var i, j, k, l, u, v;\n   for (k = 0, i = 0; i < llHeight; i++) {\n    l = i * 2 * width;\n    for (j = 0; j < llWidth; j++, k++, l += 2) {\n     items[l] = llItems[k];\n    }\n   }\n   llItems = ll.items = null;\n   var bufferPadding = 4;\n   var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n   if (width === 1) {\n    if ((u0 & 1) !== 0) {\n     for (v = 0, k = 0; v < height; v++, k += width) {\n      items[k] *= 0.5;\n     }\n    }\n   } else {\n    for (v = 0, k = 0; v < height; v++, k += width) {\n     rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n     this.extend(rowBuffer, bufferPadding, width);\n     this.filter(rowBuffer, bufferPadding, width);\n     items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n    }\n   }\n   var numBuffers = 16;\n   var colBuffers = [];\n   for (i = 0; i < numBuffers; i++) {\n    colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n   }\n   var b, currentBuffer = 0;\n   ll = bufferPadding + height;\n   if (height === 1) {\n    if ((v0 & 1) !== 0) {\n     for (u = 0; u < width; u++) {\n      items[u] *= 0.5;\n     }\n    }\n   } else {\n    for (u = 0; u < width; u++) {\n     if (currentBuffer === 0) {\n      numBuffers = Math.min(width - u, numBuffers);\n      for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n       for (b = 0; b < numBuffers; b++) {\n        colBuffers[b][l] = items[k + b];\n       }\n      }\n      currentBuffer = numBuffers;\n     }\n     currentBuffer--;\n     var buffer = colBuffers[currentBuffer];\n     this.extend(buffer, bufferPadding, height);\n     this.filter(buffer, bufferPadding, height);\n     if (currentBuffer === 0) {\n      k = u - numBuffers + 1;\n      for (l = bufferPadding; l < ll; k += width, l++) {\n       for (b = 0; b < numBuffers; b++) {\n        items[k + b] = colBuffers[b][l];\n       }\n      }\n     }\n    }\n   }\n   return {\n    width: width,\n    height: height,\n    items: items\n   };\n  };\n  return Transform;\n }();\n var IrreversibleTransform = function IrreversibleTransformClosure() {\n  function IrreversibleTransform() {\n   Transform.call(this);\n  }\n  IrreversibleTransform.prototype = Object.create(Transform.prototype);\n  IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\n   var len = length >> 1;\n   offset = offset | 0;\n   var j, n, current, next;\n   var alpha = -1.586134342059924;\n   var beta = -0.052980118572961;\n   var gamma = 0.882911075530934;\n   var delta = 0.443506852043971;\n   var K = 1.230174104914001;\n   var K_ = 1 / K;\n   j = offset - 3;\n   for (n = len + 4; n--; j += 2) {\n    x[j] *= K_;\n   }\n   j = offset - 2;\n   current = delta * x[j - 1];\n   for (n = len + 3; n--; j += 2) {\n    next = delta * x[j + 1];\n    x[j] = K * x[j] - current - next;\n    if (n--) {\n     j += 2;\n     current = delta * x[j + 1];\n     x[j] = K * x[j] - current - next;\n    } else {\n     break;\n    }\n   }\n   j = offset - 1;\n   current = gamma * x[j - 1];\n   for (n = len + 2; n--; j += 2) {\n    next = gamma * x[j + 1];\n    x[j] -= current + next;\n    if (n--) {\n     j += 2;\n     current = gamma * x[j + 1];\n     x[j] -= current + next;\n    } else {\n     break;\n    }\n   }\n   j = offset;\n   current = beta * x[j - 1];\n   for (n = len + 1; n--; j += 2) {\n    next = beta * x[j + 1];\n    x[j] -= current + next;\n    if (n--) {\n     j += 2;\n     current = beta * x[j + 1];\n     x[j] -= current + next;\n    } else {\n     break;\n    }\n   }\n   if (len !== 0) {\n    j = offset + 1;\n    current = alpha * x[j - 1];\n    for (n = len; n--; j += 2) {\n     next = alpha * x[j + 1];\n     x[j] -= current + next;\n     if (n--) {\n      j += 2;\n      current = alpha * x[j + 1];\n      x[j] -= current + next;\n     } else {\n      break;\n     }\n    }\n   }\n  };\n  return IrreversibleTransform;\n }();\n var ReversibleTransform = function ReversibleTransformClosure() {\n  function ReversibleTransform() {\n   Transform.call(this);\n  }\n  ReversibleTransform.prototype = Object.create(Transform.prototype);\n  ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\n   var len = length >> 1;\n   offset = offset | 0;\n   var j, n;\n   for (j = offset, n = len + 1; n--; j += 2) {\n    x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\n   }\n   for (j = offset + 1, n = len; n--; j += 2) {\n    x[j] += x[j - 1] + x[j + 1] >> 1;\n   }\n  };\n  return ReversibleTransform;\n }();\n return JpxImage;\n}();\nexports.JpxImage = JpxImage;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar coreCrypto = __w_pdfjs_require__(13);\nvar coreParser = __w_pdfjs_require__(5);\nvar coreChunkedStream = __w_pdfjs_require__(12);\nvar coreColorSpace = __w_pdfjs_require__(3);\nvar InvalidPDFException = sharedUtil.InvalidPDFException;\nvar MissingDataException = sharedUtil.MissingDataException;\nvar XRefParseException = sharedUtil.XRefParseException;\nvar assert = sharedUtil.assert;\nvar bytesToString = sharedUtil.bytesToString;\nvar createPromiseCapability = sharedUtil.createPromiseCapability;\nvar error = sharedUtil.error;\nvar info = sharedUtil.info;\nvar isArray = sharedUtil.isArray;\nvar isBool = sharedUtil.isBool;\nvar isInt = sharedUtil.isInt;\nvar isString = sharedUtil.isString;\nvar shadow = sharedUtil.shadow;\nvar stringToPDFString = sharedUtil.stringToPDFString;\nvar stringToUTF8String = sharedUtil.stringToUTF8String;\nvar warn = sharedUtil.warn;\nvar createValidAbsoluteUrl = sharedUtil.createValidAbsoluteUrl;\nvar Util = sharedUtil.Util;\nvar Ref = corePrimitives.Ref;\nvar RefSet = corePrimitives.RefSet;\nvar RefSetCache = corePrimitives.RefSetCache;\nvar isName = corePrimitives.isName;\nvar isCmd = corePrimitives.isCmd;\nvar isDict = corePrimitives.isDict;\nvar isRef = corePrimitives.isRef;\nvar isRefsEqual = corePrimitives.isRefsEqual;\nvar isStream = corePrimitives.isStream;\nvar CipherTransformFactory = coreCrypto.CipherTransformFactory;\nvar Lexer = coreParser.Lexer;\nvar Parser = coreParser.Parser;\nvar ChunkedStream = coreChunkedStream.ChunkedStream;\nvar ColorSpace = coreColorSpace.ColorSpace;\nvar Catalog = function CatalogClosure() {\n function Catalog(pdfManager, xref, pageFactory) {\n  this.pdfManager = pdfManager;\n  this.xref = xref;\n  this.catDict = xref.getCatalogObj();\n  this.fontCache = new RefSetCache();\n  this.builtInCMapCache = Object.create(null);\n  assert(isDict(this.catDict), 'catalog object is not a dictionary');\n  this.pageFactory = pageFactory;\n  this.pagePromises = [];\n }\n Catalog.prototype = {\n  get metadata() {\n   var streamRef = this.catDict.getRaw('Metadata');\n   if (!isRef(streamRef)) {\n    return shadow(this, 'metadata', null);\n   }\n   var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;\n   var stream = this.xref.fetch(streamRef, !encryptMetadata);\n   var metadata;\n   if (stream && isDict(stream.dict)) {\n    var type = stream.dict.get('Type');\n    var subtype = stream.dict.get('Subtype');\n    if (isName(type, 'Metadata') && isName(subtype, 'XML')) {\n     try {\n      metadata = stringToUTF8String(bytesToString(stream.getBytes()));\n     } catch (e) {\n      info('Skipping invalid metadata.');\n     }\n    }\n   }\n   return shadow(this, 'metadata', metadata);\n  },\n  get toplevelPagesDict() {\n   var pagesObj = this.catDict.get('Pages');\n   assert(isDict(pagesObj), 'invalid top-level pages dictionary');\n   return shadow(this, 'toplevelPagesDict', pagesObj);\n  },\n  get documentOutline() {\n   var obj = null;\n   try {\n    obj = this.readDocumentOutline();\n   } catch (ex) {\n    if (ex instanceof MissingDataException) {\n     throw ex;\n    }\n    warn('Unable to read document outline');\n   }\n   return shadow(this, 'documentOutline', obj);\n  },\n  readDocumentOutline: function Catalog_readDocumentOutline() {\n   var obj = this.catDict.get('Outlines');\n   if (!isDict(obj)) {\n    return null;\n   }\n   obj = obj.getRaw('First');\n   if (!isRef(obj)) {\n    return null;\n   }\n   var root = { items: [] };\n   var queue = [{\n     obj: obj,\n     parent: root\n    }];\n   var processed = new RefSet();\n   processed.put(obj);\n   var xref = this.xref, blackColor = new Uint8Array(3);\n   while (queue.length > 0) {\n    var i = queue.shift();\n    var outlineDict = xref.fetchIfRef(i.obj);\n    if (outlineDict === null) {\n     continue;\n    }\n    assert(outlineDict.has('Title'), 'Invalid outline item');\n    var data = {\n     url: null,\n     dest: null\n    };\n    Catalog.parseDestDictionary({\n     destDict: outlineDict,\n     resultObj: data,\n     docBaseUrl: this.pdfManager.docBaseUrl\n    });\n    var title = outlineDict.get('Title');\n    var flags = outlineDict.get('F') || 0;\n    var color = outlineDict.getArray('C'), rgbColor = blackColor;\n    if (isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\n     rgbColor = ColorSpace.singletons.rgb.getRgb(color, 0);\n    }\n    var outlineItem = {\n     dest: data.dest,\n     url: data.url,\n     unsafeUrl: data.unsafeUrl,\n     newWindow: data.newWindow,\n     title: stringToPDFString(title),\n     color: rgbColor,\n     count: outlineDict.get('Count'),\n     bold: !!(flags & 2),\n     italic: !!(flags & 1),\n     items: []\n    };\n    i.parent.items.push(outlineItem);\n    obj = outlineDict.getRaw('First');\n    if (isRef(obj) && !processed.has(obj)) {\n     queue.push({\n      obj: obj,\n      parent: outlineItem\n     });\n     processed.put(obj);\n    }\n    obj = outlineDict.getRaw('Next');\n    if (isRef(obj) && !processed.has(obj)) {\n     queue.push({\n      obj: obj,\n      parent: i.parent\n     });\n     processed.put(obj);\n    }\n   }\n   return root.items.length > 0 ? root.items : null;\n  },\n  get numPages() {\n   var obj = this.toplevelPagesDict.get('Count');\n   assert(isInt(obj), 'page count in top level pages object is not an integer');\n   return shadow(this, 'num', obj);\n  },\n  get destinations() {\n   function fetchDestination(dest) {\n    return isDict(dest) ? dest.get('D') : dest;\n   }\n   var xref = this.xref;\n   var dests = {}, nameTreeRef, nameDictionaryRef;\n   var obj = this.catDict.get('Names');\n   if (obj && obj.has('Dests')) {\n    nameTreeRef = obj.getRaw('Dests');\n   } else if (this.catDict.has('Dests')) {\n    nameDictionaryRef = this.catDict.get('Dests');\n   }\n   if (nameDictionaryRef) {\n    obj = nameDictionaryRef;\n    obj.forEach(function catalogForEach(key, value) {\n     if (!value) {\n      return;\n     }\n     dests[key] = fetchDestination(value);\n    });\n   }\n   if (nameTreeRef) {\n    var nameTree = new NameTree(nameTreeRef, xref);\n    var names = nameTree.getAll();\n    for (var name in names) {\n     dests[name] = fetchDestination(names[name]);\n    }\n   }\n   return shadow(this, 'destinations', dests);\n  },\n  getDestination: function Catalog_getDestination(destinationId) {\n   function fetchDestination(dest) {\n    return isDict(dest) ? dest.get('D') : dest;\n   }\n   var xref = this.xref;\n   var dest = null, nameTreeRef, nameDictionaryRef;\n   var obj = this.catDict.get('Names');\n   if (obj && obj.has('Dests')) {\n    nameTreeRef = obj.getRaw('Dests');\n   } else if (this.catDict.has('Dests')) {\n    nameDictionaryRef = this.catDict.get('Dests');\n   }\n   if (nameDictionaryRef) {\n    var value = nameDictionaryRef.get(destinationId);\n    if (value) {\n     dest = fetchDestination(value);\n    }\n   }\n   if (nameTreeRef) {\n    var nameTree = new NameTree(nameTreeRef, xref);\n    dest = fetchDestination(nameTree.get(destinationId));\n   }\n   return dest;\n  },\n  get pageLabels() {\n   var obj = null;\n   try {\n    obj = this.readPageLabels();\n   } catch (ex) {\n    if (ex instanceof MissingDataException) {\n     throw ex;\n    }\n    warn('Unable to read page labels.');\n   }\n   return shadow(this, 'pageLabels', obj);\n  },\n  readPageLabels: function Catalog_readPageLabels() {\n   var obj = this.catDict.getRaw('PageLabels');\n   if (!obj) {\n    return null;\n   }\n   var pageLabels = new Array(this.numPages);\n   var style = null;\n   var prefix = '';\n   var numberTree = new NumberTree(obj, this.xref);\n   var nums = numberTree.getAll();\n   var currentLabel = '', currentIndex = 1;\n   for (var i = 0, ii = this.numPages; i < ii; i++) {\n    if (i in nums) {\n     var labelDict = nums[i];\n     assert(isDict(labelDict), 'The PageLabel is not a dictionary.');\n     var type = labelDict.get('Type');\n     assert(!type || isName(type, 'PageLabel'), 'Invalid type in PageLabel dictionary.');\n     var s = labelDict.get('S');\n     assert(!s || isName(s), 'Invalid style in PageLabel dictionary.');\n     style = s ? s.name : null;\n     var p = labelDict.get('P');\n     assert(!p || isString(p), 'Invalid prefix in PageLabel dictionary.');\n     prefix = p ? stringToPDFString(p) : '';\n     var st = labelDict.get('St');\n     assert(!st || isInt(st) && st >= 1, 'Invalid start in PageLabel dictionary.');\n     currentIndex = st || 1;\n    }\n    switch (style) {\n    case 'D':\n     currentLabel = currentIndex;\n     break;\n    case 'R':\n    case 'r':\n     currentLabel = Util.toRoman(currentIndex, style === 'r');\n     break;\n    case 'A':\n    case 'a':\n     var LIMIT = 26;\n     var A_UPPER_CASE = 0x41, A_LOWER_CASE = 0x61;\n     var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\n     var letterIndex = currentIndex - 1;\n     var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\n     var charBuf = [];\n     for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\n      charBuf.push(character);\n     }\n     currentLabel = charBuf.join('');\n     break;\n    default:\n     assert(!style, 'Invalid style \"' + style + '\" in PageLabel dictionary.');\n    }\n    pageLabels[i] = prefix + currentLabel;\n    currentLabel = '';\n    currentIndex++;\n   }\n   return pageLabels;\n  },\n  get attachments() {\n   var xref = this.xref;\n   var attachments = null, nameTreeRef;\n   var obj = this.catDict.get('Names');\n   if (obj) {\n    nameTreeRef = obj.getRaw('EmbeddedFiles');\n   }\n   if (nameTreeRef) {\n    var nameTree = new NameTree(nameTreeRef, xref);\n    var names = nameTree.getAll();\n    for (var name in names) {\n     var fs = new FileSpec(names[name], xref);\n     if (!attachments) {\n      attachments = Object.create(null);\n     }\n     attachments[stringToPDFString(name)] = fs.serializable;\n    }\n   }\n   return shadow(this, 'attachments', attachments);\n  },\n  get javaScript() {\n   var xref = this.xref;\n   var obj = this.catDict.get('Names');\n   var javaScript = [];\n   function appendIfJavaScriptDict(jsDict) {\n    var type = jsDict.get('S');\n    if (!isName(type, 'JavaScript')) {\n     return;\n    }\n    var js = jsDict.get('JS');\n    if (isStream(js)) {\n     js = bytesToString(js.getBytes());\n    } else if (!isString(js)) {\n     return;\n    }\n    javaScript.push(stringToPDFString(js));\n   }\n   if (obj && obj.has('JavaScript')) {\n    var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\n    var names = nameTree.getAll();\n    for (var name in names) {\n     var jsDict = names[name];\n     if (isDict(jsDict)) {\n      appendIfJavaScriptDict(jsDict);\n     }\n    }\n   }\n   var openactionDict = this.catDict.get('OpenAction');\n   if (isDict(openactionDict, 'Action')) {\n    var actionType = openactionDict.get('S');\n    if (isName(actionType, 'Named')) {\n     var action = openactionDict.get('N');\n     if (isName(action, 'Print')) {\n      javaScript.push('print({});');\n     }\n    } else {\n     appendIfJavaScriptDict(openactionDict);\n    }\n   }\n   return shadow(this, 'javaScript', javaScript);\n  },\n  cleanup: function Catalog_cleanup() {\n   var promises = [];\n   this.fontCache.forEach(function (promise) {\n    promises.push(promise);\n   });\n   return Promise.all(promises).then(function (translatedFonts) {\n    for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\n     var font = translatedFonts[i].dict;\n     delete font.translated;\n    }\n    this.fontCache.clear();\n    this.builtInCMapCache = Object.create(null);\n   }.bind(this));\n  },\n  getPage: function Catalog_getPage(pageIndex) {\n   if (!(pageIndex in this.pagePromises)) {\n    this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (a) {\n     var dict = a[0];\n     var ref = a[1];\n     return this.pageFactory.createPage(pageIndex, dict, ref, this.fontCache, this.builtInCMapCache);\n    }.bind(this));\n   }\n   return this.pagePromises[pageIndex];\n  },\n  getPageDict: function Catalog_getPageDict(pageIndex) {\n   var capability = createPromiseCapability();\n   var nodesToVisit = [this.catDict.getRaw('Pages')];\n   var currentPageIndex = 0;\n   var xref = this.xref;\n   function next() {\n    while (nodesToVisit.length) {\n     var currentNode = nodesToVisit.pop();\n     if (isRef(currentNode)) {\n      xref.fetchAsync(currentNode).then(function (obj) {\n       if (isDict(obj, 'Page') || isDict(obj) && !obj.has('Kids')) {\n        if (pageIndex === currentPageIndex) {\n         capability.resolve([\n          obj,\n          currentNode\n         ]);\n        } else {\n         currentPageIndex++;\n         next();\n        }\n        return;\n       }\n       nodesToVisit.push(obj);\n       next();\n      }, capability.reject);\n      return;\n     }\n     assert(isDict(currentNode), 'page dictionary kid reference points to wrong type of object');\n     var count = currentNode.get('Count');\n     if (currentPageIndex + count <= pageIndex) {\n      currentPageIndex += count;\n      continue;\n     }\n     var kids = currentNode.get('Kids');\n     assert(isArray(kids), 'page dictionary kids object is not an array');\n     for (var last = kids.length - 1; last >= 0; last--) {\n      nodesToVisit.push(kids[last]);\n     }\n    }\n    capability.reject('Page index ' + pageIndex + ' not found.');\n   }\n   next();\n   return capability.promise;\n  },\n  getPageIndex: function Catalog_getPageIndex(pageRef) {\n   var xref = this.xref;\n   function pagesBeforeRef(kidRef) {\n    var total = 0;\n    var parentRef;\n    return xref.fetchAsync(kidRef).then(function (node) {\n     if (isRefsEqual(kidRef, pageRef) && !isDict(node, 'Page') && !(isDict(node) && !node.has('Type') && node.has('Contents'))) {\n      throw new Error('The reference does not point to a /Page Dict.');\n     }\n     if (!node) {\n      return null;\n     }\n     assert(isDict(node), 'node must be a Dict.');\n     parentRef = node.getRaw('Parent');\n     return node.getAsync('Parent');\n    }).then(function (parent) {\n     if (!parent) {\n      return null;\n     }\n     assert(isDict(parent), 'parent must be a Dict.');\n     return parent.getAsync('Kids');\n    }).then(function (kids) {\n     if (!kids) {\n      return null;\n     }\n     var kidPromises = [];\n     var found = false;\n     for (var i = 0; i < kids.length; i++) {\n      var kid = kids[i];\n      assert(isRef(kid), 'kid must be a Ref.');\n      if (kid.num === kidRef.num) {\n       found = true;\n       break;\n      }\n      kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\n       if (kid.has('Count')) {\n        var count = kid.get('Count');\n        total += count;\n       } else {\n        total++;\n       }\n      }));\n     }\n     if (!found) {\n      error('kid ref not found in parents kids');\n     }\n     return Promise.all(kidPromises).then(function () {\n      return [\n       total,\n       parentRef\n      ];\n     });\n    });\n   }\n   var total = 0;\n   function next(ref) {\n    return pagesBeforeRef(ref).then(function (args) {\n     if (!args) {\n      return total;\n     }\n     var count = args[0];\n     var parentRef = args[1];\n     total += count;\n     return next(parentRef);\n    });\n   }\n   return next(pageRef);\n  }\n };\n Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {\n  function addDefaultProtocolToUrl(url) {\n   if (url.indexOf('www.') === 0) {\n    return 'http://' + url;\n   }\n   return url;\n  }\n  function tryConvertUrlEncoding(url) {\n   try {\n    return stringToUTF8String(url);\n   } catch (e) {\n    return url;\n   }\n  }\n  var destDict = params.destDict;\n  if (!isDict(destDict)) {\n   warn('Catalog_parseDestDictionary: \"destDict\" must be a dictionary.');\n   return;\n  }\n  var resultObj = params.resultObj;\n  if (typeof resultObj !== 'object') {\n   warn('Catalog_parseDestDictionary: \"resultObj\" must be an object.');\n   return;\n  }\n  var docBaseUrl = params.docBaseUrl || null;\n  var action = destDict.get('A'), url, dest;\n  if (isDict(action)) {\n   var linkType = action.get('S').name;\n   switch (linkType) {\n   case 'URI':\n    url = action.get('URI');\n    if (isName(url)) {\n     url = '/' + url.name;\n    } else if (isString(url)) {\n     url = addDefaultProtocolToUrl(url);\n    }\n    break;\n   case 'GoTo':\n    dest = action.get('D');\n    break;\n   case 'Launch':\n   case 'GoToR':\n    var urlDict = action.get('F');\n    if (isDict(urlDict)) {\n     url = urlDict.get('F') || null;\n    } else if (isString(urlDict)) {\n     url = urlDict;\n    }\n    var remoteDest = action.get('D');\n    if (remoteDest) {\n     if (isName(remoteDest)) {\n      remoteDest = remoteDest.name;\n     }\n     if (isString(url)) {\n      var baseUrl = url.split('#')[0];\n      if (isString(remoteDest)) {\n       url = baseUrl + '#' + (/^\\d+$/.test(remoteDest) ? 'nameddest=' : '') + remoteDest;\n      } else if (isArray(remoteDest)) {\n       url = baseUrl + '#' + JSON.stringify(remoteDest);\n      }\n     }\n    }\n    var newWindow = action.get('NewWindow');\n    if (isBool(newWindow)) {\n     resultObj.newWindow = newWindow;\n    }\n    break;\n   case 'Named':\n    var namedAction = action.get('N');\n    if (isName(namedAction)) {\n     resultObj.action = namedAction.name;\n    }\n    break;\n   case 'JavaScript':\n    var jsAction = action.get('JS'), js;\n    if (isStream(jsAction)) {\n     js = bytesToString(jsAction.getBytes());\n    } else if (isString(jsAction)) {\n     js = jsAction;\n    }\n    if (js) {\n     var URL_OPEN_METHODS = [\n      'app.launchURL',\n      'window.open'\n     ];\n     var regex = new RegExp('^\\\\s*(' + URL_OPEN_METHODS.join('|').split('.').join('\\\\.') + ')\\\\((?:\\'|\\\")([^\\'\\\"]*)(?:\\'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))', 'i');\n     var jsUrl = regex.exec(stringToPDFString(js));\n     if (jsUrl && jsUrl[2]) {\n      url = jsUrl[2];\n      if (jsUrl[3] === 'true' && jsUrl[1] === 'app.launchURL') {\n       resultObj.newWindow = true;\n      }\n      break;\n     }\n    }\n   default:\n    warn('Catalog_parseDestDictionary: Unrecognized link type \"' + linkType + '\".');\n    break;\n   }\n  } else if (destDict.has('Dest')) {\n   dest = destDict.get('Dest');\n  }\n  if (isString(url)) {\n   url = tryConvertUrlEncoding(url);\n   var absoluteUrl = createValidAbsoluteUrl(url, docBaseUrl);\n   if (absoluteUrl) {\n    resultObj.url = absoluteUrl.href;\n   }\n   resultObj.unsafeUrl = url;\n  }\n  if (dest) {\n   if (isName(dest)) {\n    dest = dest.name;\n   }\n   if (isString(dest) || isArray(dest)) {\n    resultObj.dest = dest;\n   }\n  }\n };\n return Catalog;\n}();\nvar XRef = function XRefClosure() {\n function XRef(stream, pdfManager) {\n  this.stream = stream;\n  this.pdfManager = pdfManager;\n  this.entries = [];\n  this.xrefstms = Object.create(null);\n  this.cache = [];\n  this.stats = {\n   streamTypes: [],\n   fontTypes: []\n  };\n }\n XRef.prototype = {\n  setStartXRef: function XRef_setStartXRef(startXRef) {\n   this.startXRefQueue = [startXRef];\n  },\n  parse: function XRef_parse(recoveryMode) {\n   var trailerDict;\n   if (!recoveryMode) {\n    trailerDict = this.readXRef();\n   } else {\n    warn('Indexing all PDF objects');\n    trailerDict = this.indexObjects();\n   }\n   trailerDict.assignXref(this);\n   this.trailer = trailerDict;\n   var encrypt = trailerDict.get('Encrypt');\n   if (isDict(encrypt)) {\n    var ids = trailerDict.get('ID');\n    var fileId = ids && ids.length ? ids[0] : '';\n    encrypt.suppressEncryption = true;\n    this.encrypt = new CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\n   }\n   if (!(this.root = trailerDict.get('Root'))) {\n    error('Invalid root reference');\n   }\n  },\n  processXRefTable: function XRef_processXRefTable(parser) {\n   if (!('tableState' in this)) {\n    this.tableState = {\n     entryNum: 0,\n     streamPos: parser.lexer.stream.pos,\n     parserBuf1: parser.buf1,\n     parserBuf2: parser.buf2\n    };\n   }\n   var obj = this.readXRefTable(parser);\n   if (!isCmd(obj, 'trailer')) {\n    error('Invalid XRef table: could not find trailer dictionary');\n   }\n   var dict = parser.getObj();\n   if (!isDict(dict) && dict.dict) {\n    dict = dict.dict;\n   }\n   if (!isDict(dict)) {\n    error('Invalid XRef table: could not parse trailer dictionary');\n   }\n   delete this.tableState;\n   return dict;\n  },\n  readXRefTable: function XRef_readXRefTable(parser) {\n   var stream = parser.lexer.stream;\n   var tableState = this.tableState;\n   stream.pos = tableState.streamPos;\n   parser.buf1 = tableState.parserBuf1;\n   parser.buf2 = tableState.parserBuf2;\n   var obj;\n   while (true) {\n    if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\n     if (isCmd(obj = parser.getObj(), 'trailer')) {\n      break;\n     }\n     tableState.firstEntryNum = obj;\n     tableState.entryCount = parser.getObj();\n    }\n    var first = tableState.firstEntryNum;\n    var count = tableState.entryCount;\n    if (!isInt(first) || !isInt(count)) {\n     error('Invalid XRef table: wrong types in subsection header');\n    }\n    for (var i = tableState.entryNum; i < count; i++) {\n     tableState.streamPos = stream.pos;\n     tableState.entryNum = i;\n     tableState.parserBuf1 = parser.buf1;\n     tableState.parserBuf2 = parser.buf2;\n     var entry = {};\n     entry.offset = parser.getObj();\n     entry.gen = parser.getObj();\n     var type = parser.getObj();\n     if (isCmd(type, 'f')) {\n      entry.free = true;\n     } else if (isCmd(type, 'n')) {\n      entry.uncompressed = true;\n     }\n     if (!isInt(entry.offset) || !isInt(entry.gen) || !(entry.free || entry.uncompressed)) {\n      error('Invalid entry in XRef subsection: ' + first + ', ' + count);\n     }\n     if (i === 0 && entry.free && first === 1) {\n      first = 0;\n     }\n     if (!this.entries[i + first]) {\n      this.entries[i + first] = entry;\n     }\n    }\n    tableState.entryNum = 0;\n    tableState.streamPos = stream.pos;\n    tableState.parserBuf1 = parser.buf1;\n    tableState.parserBuf2 = parser.buf2;\n    delete tableState.firstEntryNum;\n    delete tableState.entryCount;\n   }\n   if (this.entries[0] && !this.entries[0].free) {\n    error('Invalid XRef table: unexpected first object');\n   }\n   return obj;\n  },\n  processXRefStream: function XRef_processXRefStream(stream) {\n   if (!('streamState' in this)) {\n    var streamParameters = stream.dict;\n    var byteWidths = streamParameters.get('W');\n    var range = streamParameters.get('Index');\n    if (!range) {\n     range = [\n      0,\n      streamParameters.get('Size')\n     ];\n    }\n    this.streamState = {\n     entryRanges: range,\n     byteWidths: byteWidths,\n     entryNum: 0,\n     streamPos: stream.pos\n    };\n   }\n   this.readXRefStream(stream);\n   delete this.streamState;\n   return stream.dict;\n  },\n  readXRefStream: function XRef_readXRefStream(stream) {\n   var i, j;\n   var streamState = this.streamState;\n   stream.pos = streamState.streamPos;\n   var byteWidths = streamState.byteWidths;\n   var typeFieldWidth = byteWidths[0];\n   var offsetFieldWidth = byteWidths[1];\n   var generationFieldWidth = byteWidths[2];\n   var entryRanges = streamState.entryRanges;\n   while (entryRanges.length > 0) {\n    var first = entryRanges[0];\n    var n = entryRanges[1];\n    if (!isInt(first) || !isInt(n)) {\n     error('Invalid XRef range fields: ' + first + ', ' + n);\n    }\n    if (!isInt(typeFieldWidth) || !isInt(offsetFieldWidth) || !isInt(generationFieldWidth)) {\n     error('Invalid XRef entry fields length: ' + first + ', ' + n);\n    }\n    for (i = streamState.entryNum; i < n; ++i) {\n     streamState.entryNum = i;\n     streamState.streamPos = stream.pos;\n     var type = 0, offset = 0, generation = 0;\n     for (j = 0; j < typeFieldWidth; ++j) {\n      type = type << 8 | stream.getByte();\n     }\n     if (typeFieldWidth === 0) {\n      type = 1;\n     }\n     for (j = 0; j < offsetFieldWidth; ++j) {\n      offset = offset << 8 | stream.getByte();\n     }\n     for (j = 0; j < generationFieldWidth; ++j) {\n      generation = generation << 8 | stream.getByte();\n     }\n     var entry = {};\n     entry.offset = offset;\n     entry.gen = generation;\n     switch (type) {\n     case 0:\n      entry.free = true;\n      break;\n     case 1:\n      entry.uncompressed = true;\n      break;\n     case 2:\n      break;\n     default:\n      error('Invalid XRef entry type: ' + type);\n     }\n     if (!this.entries[first + i]) {\n      this.entries[first + i] = entry;\n     }\n    }\n    streamState.entryNum = 0;\n    streamState.streamPos = stream.pos;\n    entryRanges.splice(0, 2);\n   }\n  },\n  indexObjects: function XRef_indexObjects() {\n   var TAB = 0x9, LF = 0xA, CR = 0xD, SPACE = 0x20;\n   var PERCENT = 0x25, LT = 0x3C;\n   function readToken(data, offset) {\n    var token = '', ch = data[offset];\n    while (ch !== LF && ch !== CR && ch !== LT) {\n     if (++offset >= data.length) {\n      break;\n     }\n     token += String.fromCharCode(ch);\n     ch = data[offset];\n    }\n    return token;\n   }\n   function skipUntil(data, offset, what) {\n    var length = what.length, dataLength = data.length;\n    var skipped = 0;\n    while (offset < dataLength) {\n     var i = 0;\n     while (i < length && data[offset + i] === what[i]) {\n      ++i;\n     }\n     if (i >= length) {\n      break;\n     }\n     offset++;\n     skipped++;\n    }\n    return skipped;\n   }\n   var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n   var trailerBytes = new Uint8Array([\n    116,\n    114,\n    97,\n    105,\n    108,\n    101,\n    114\n   ]);\n   var startxrefBytes = new Uint8Array([\n    115,\n    116,\n    97,\n    114,\n    116,\n    120,\n    114,\n    101,\n    102\n   ]);\n   var endobjBytes = new Uint8Array([\n    101,\n    110,\n    100,\n    111,\n    98,\n    106\n   ]);\n   var xrefBytes = new Uint8Array([\n    47,\n    88,\n    82,\n    101,\n    102\n   ]);\n   this.entries.length = 0;\n   var stream = this.stream;\n   stream.pos = 0;\n   var buffer = stream.getBytes();\n   var position = stream.start, length = buffer.length;\n   var trailers = [], xrefStms = [];\n   while (position < length) {\n    var ch = buffer[position];\n    if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\n     ++position;\n     continue;\n    }\n    if (ch === PERCENT) {\n     do {\n      ++position;\n      if (position >= length) {\n       break;\n      }\n      ch = buffer[position];\n     } while (ch !== LF && ch !== CR);\n     continue;\n    }\n    var token = readToken(buffer, position);\n    var m;\n    if (token.indexOf('xref') === 0 && (token.length === 4 || /\\s/.test(token[4]))) {\n     position += skipUntil(buffer, position, trailerBytes);\n     trailers.push(position);\n     position += skipUntil(buffer, position, startxrefBytes);\n    } else if (m = objRegExp.exec(token)) {\n     if (typeof this.entries[m[1]] === 'undefined') {\n      this.entries[m[1]] = {\n       offset: position - stream.start,\n       gen: m[2] | 0,\n       uncompressed: true\n      };\n     }\n     var contentLength = skipUntil(buffer, position, endobjBytes) + 7;\n     var content = buffer.subarray(position, position + contentLength);\n     var xrefTagOffset = skipUntil(content, 0, xrefBytes);\n     if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n      xrefStms.push(position - stream.start);\n      this.xrefstms[position - stream.start] = 1;\n     }\n     position += contentLength;\n    } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\\s/.test(token[7]))) {\n     trailers.push(position);\n     position += skipUntil(buffer, position, startxrefBytes);\n    } else {\n     position += token.length + 1;\n    }\n   }\n   var i, ii;\n   for (i = 0, ii = xrefStms.length; i < ii; ++i) {\n    this.startXRefQueue.push(xrefStms[i]);\n    this.readXRef(true);\n   }\n   var dict;\n   for (i = 0, ii = trailers.length; i < ii; ++i) {\n    stream.pos = trailers[i];\n    var parser = new Parser(new Lexer(stream), true, this, true);\n    var obj = parser.getObj();\n    if (!isCmd(obj, 'trailer')) {\n     continue;\n    }\n    dict = parser.getObj();\n    if (!isDict(dict)) {\n     continue;\n    }\n    if (dict.has('ID')) {\n     return dict;\n    }\n   }\n   if (dict) {\n    return dict;\n   }\n   throw new InvalidPDFException('Invalid PDF structure');\n  },\n  readXRef: function XRef_readXRef(recoveryMode) {\n   var stream = this.stream;\n   try {\n    while (this.startXRefQueue.length) {\n     var startXRef = this.startXRefQueue[0];\n     stream.pos = startXRef + stream.start;\n     var parser = new Parser(new Lexer(stream), true, this);\n     var obj = parser.getObj();\n     var dict;\n     if (isCmd(obj, 'xref')) {\n      dict = this.processXRefTable(parser);\n      if (!this.topDict) {\n       this.topDict = dict;\n      }\n      obj = dict.get('XRefStm');\n      if (isInt(obj)) {\n       var pos = obj;\n       if (!(pos in this.xrefstms)) {\n        this.xrefstms[pos] = 1;\n        this.startXRefQueue.push(pos);\n       }\n      }\n     } else if (isInt(obj)) {\n      if (!isInt(parser.getObj()) || !isCmd(parser.getObj(), 'obj') || !isStream(obj = parser.getObj())) {\n       error('Invalid XRef stream');\n      }\n      dict = this.processXRefStream(obj);\n      if (!this.topDict) {\n       this.topDict = dict;\n      }\n      if (!dict) {\n       error('Failed to read XRef stream');\n      }\n     } else {\n      error('Invalid XRef stream header');\n     }\n     obj = dict.get('Prev');\n     if (isInt(obj)) {\n      this.startXRefQueue.push(obj);\n     } else if (isRef(obj)) {\n      this.startXRefQueue.push(obj.num);\n     }\n     this.startXRefQueue.shift();\n    }\n    return this.topDict;\n   } catch (e) {\n    if (e instanceof MissingDataException) {\n     throw e;\n    }\n    info('(while reading XRef): ' + e);\n   }\n   if (recoveryMode) {\n    return;\n   }\n   throw new XRefParseException();\n  },\n  getEntry: function XRef_getEntry(i) {\n   var xrefEntry = this.entries[i];\n   if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n    return xrefEntry;\n   }\n   return null;\n  },\n  fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\n   if (!isRef(obj)) {\n    return obj;\n   }\n   return this.fetch(obj, suppressEncryption);\n  },\n  fetch: function XRef_fetch(ref, suppressEncryption) {\n   assert(isRef(ref), 'ref object is not a reference');\n   var num = ref.num;\n   if (num in this.cache) {\n    var cacheEntry = this.cache[num];\n    if (isDict(cacheEntry) && !cacheEntry.objId) {\n     cacheEntry.objId = ref.toString();\n    }\n    return cacheEntry;\n   }\n   var xrefEntry = this.getEntry(num);\n   if (xrefEntry === null) {\n    return this.cache[num] = null;\n   }\n   if (xrefEntry.uncompressed) {\n    xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\n   } else {\n    xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\n   }\n   if (isDict(xrefEntry)) {\n    xrefEntry.objId = ref.toString();\n   } else if (isStream(xrefEntry)) {\n    xrefEntry.dict.objId = ref.toString();\n   }\n   return xrefEntry;\n  },\n  fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {\n   var gen = ref.gen;\n   var num = ref.num;\n   if (xrefEntry.gen !== gen) {\n    error('inconsistent generation in XRef');\n   }\n   var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\n   var parser = new Parser(new Lexer(stream), true, this);\n   var obj1 = parser.getObj();\n   var obj2 = parser.getObj();\n   var obj3 = parser.getObj();\n   if (!isInt(obj1) || parseInt(obj1, 10) !== num || !isInt(obj2) || parseInt(obj2, 10) !== gen || !isCmd(obj3)) {\n    error('bad XRef entry');\n   }\n   if (!isCmd(obj3, 'obj')) {\n    if (obj3.cmd.indexOf('obj') === 0) {\n     num = parseInt(obj3.cmd.substring(3), 10);\n     if (!isNaN(num)) {\n      return num;\n     }\n    }\n    error('bad XRef entry');\n   }\n   if (this.encrypt && !suppressEncryption) {\n    xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\n   } else {\n    xrefEntry = parser.getObj();\n   }\n   if (!isStream(xrefEntry)) {\n    this.cache[num] = xrefEntry;\n   }\n   return xrefEntry;\n  },\n  fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {\n   var tableOffset = xrefEntry.offset;\n   var stream = this.fetch(new Ref(tableOffset, 0));\n   if (!isStream(stream)) {\n    error('bad ObjStm stream');\n   }\n   var first = stream.dict.get('First');\n   var n = stream.dict.get('N');\n   if (!isInt(first) || !isInt(n)) {\n    error('invalid first and n parameters for ObjStm stream');\n   }\n   var parser = new Parser(new Lexer(stream), false, this);\n   parser.allowStreams = true;\n   var i, entries = [], num, nums = [];\n   for (i = 0; i < n; ++i) {\n    num = parser.getObj();\n    if (!isInt(num)) {\n     error('invalid object number in the ObjStm stream: ' + num);\n    }\n    nums.push(num);\n    var offset = parser.getObj();\n    if (!isInt(offset)) {\n     error('invalid object offset in the ObjStm stream: ' + offset);\n    }\n   }\n   for (i = 0; i < n; ++i) {\n    entries.push(parser.getObj());\n    if (isCmd(parser.buf1, 'endobj')) {\n     parser.shift();\n    }\n    num = nums[i];\n    var entry = this.entries[num];\n    if (entry && entry.offset === tableOffset && entry.gen === i) {\n     this.cache[num] = entries[i];\n    }\n   }\n   xrefEntry = entries[xrefEntry.gen];\n   if (xrefEntry === undefined) {\n    error('bad XRef entry for compressed object');\n   }\n   return xrefEntry;\n  },\n  fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {\n   if (!isRef(obj)) {\n    return Promise.resolve(obj);\n   }\n   return this.fetchAsync(obj, suppressEncryption);\n  },\n  fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\n   var streamManager = this.stream.manager;\n   var xref = this;\n   return new Promise(function tryFetch(resolve, reject) {\n    try {\n     resolve(xref.fetch(ref, suppressEncryption));\n    } catch (e) {\n     if (e instanceof MissingDataException) {\n      streamManager.requestRange(e.begin, e.end).then(function () {\n       tryFetch(resolve, reject);\n      }, reject);\n      return;\n     }\n     reject(e);\n    }\n   });\n  },\n  getCatalogObj: function XRef_getCatalogObj() {\n   return this.root;\n  }\n };\n return XRef;\n}();\nvar NameOrNumberTree = function NameOrNumberTreeClosure() {\n function NameOrNumberTree(root, xref) {\n  throw new Error('Cannot initialize NameOrNumberTree.');\n }\n NameOrNumberTree.prototype = {\n  getAll: function NameOrNumberTree_getAll() {\n   var dict = Object.create(null);\n   if (!this.root) {\n    return dict;\n   }\n   var xref = this.xref;\n   var processed = new RefSet();\n   processed.put(this.root);\n   var queue = [this.root];\n   while (queue.length > 0) {\n    var i, n;\n    var obj = xref.fetchIfRef(queue.shift());\n    if (!isDict(obj)) {\n     continue;\n    }\n    if (obj.has('Kids')) {\n     var kids = obj.get('Kids');\n     for (i = 0, n = kids.length; i < n; i++) {\n      var kid = kids[i];\n      assert(!processed.has(kid), 'Duplicate entry in \"' + this._type + '\" tree.');\n      queue.push(kid);\n      processed.put(kid);\n     }\n     continue;\n    }\n    var entries = obj.get(this._type);\n    if (isArray(entries)) {\n     for (i = 0, n = entries.length; i < n; i += 2) {\n      dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);\n     }\n    }\n   }\n   return dict;\n  },\n  get: function NameOrNumberTree_get(key) {\n   if (!this.root) {\n    return null;\n   }\n   var xref = this.xref;\n   var kidsOrEntries = xref.fetchIfRef(this.root);\n   var loopCount = 0;\n   var MAX_LEVELS = 10;\n   var l, r, m;\n   while (kidsOrEntries.has('Kids')) {\n    if (++loopCount > MAX_LEVELS) {\n     warn('Search depth limit reached for \"' + this._type + '\" tree.');\n     return null;\n    }\n    var kids = kidsOrEntries.get('Kids');\n    if (!isArray(kids)) {\n     return null;\n    }\n    l = 0;\n    r = kids.length - 1;\n    while (l <= r) {\n     m = l + r >> 1;\n     var kid = xref.fetchIfRef(kids[m]);\n     var limits = kid.get('Limits');\n     if (key < xref.fetchIfRef(limits[0])) {\n      r = m - 1;\n     } else if (key > xref.fetchIfRef(limits[1])) {\n      l = m + 1;\n     } else {\n      kidsOrEntries = xref.fetchIfRef(kids[m]);\n      break;\n     }\n    }\n    if (l > r) {\n     return null;\n    }\n   }\n   var entries = kidsOrEntries.get(this._type);\n   if (isArray(entries)) {\n    l = 0;\n    r = entries.length - 2;\n    while (l <= r) {\n     m = l + r & ~1;\n     var currentKey = xref.fetchIfRef(entries[m]);\n     if (key < currentKey) {\n      r = m - 2;\n     } else if (key > currentKey) {\n      l = m + 2;\n     } else {\n      return xref.fetchIfRef(entries[m + 1]);\n     }\n    }\n   }\n   return null;\n  }\n };\n return NameOrNumberTree;\n}();\nvar NameTree = function NameTreeClosure() {\n function NameTree(root, xref) {\n  this.root = root;\n  this.xref = xref;\n  this._type = 'Names';\n }\n Util.inherit(NameTree, NameOrNumberTree, {});\n return NameTree;\n}();\nvar NumberTree = function NumberTreeClosure() {\n function NumberTree(root, xref) {\n  this.root = root;\n  this.xref = xref;\n  this._type = 'Nums';\n }\n Util.inherit(NumberTree, NameOrNumberTree, {});\n return NumberTree;\n}();\nvar FileSpec = function FileSpecClosure() {\n function FileSpec(root, xref) {\n  if (!root || !isDict(root)) {\n   return;\n  }\n  this.xref = xref;\n  this.root = root;\n  if (root.has('FS')) {\n   this.fs = root.get('FS');\n  }\n  this.description = root.has('Desc') ? stringToPDFString(root.get('Desc')) : '';\n  if (root.has('RF')) {\n   warn('Related file specifications are not supported');\n  }\n  this.contentAvailable = true;\n  if (!root.has('EF')) {\n   this.contentAvailable = false;\n   warn('Non-embedded file specifications are not supported');\n  }\n }\n function pickPlatformItem(dict) {\n  if (dict.has('UF')) {\n   return dict.get('UF');\n  } else if (dict.has('F')) {\n   return dict.get('F');\n  } else if (dict.has('Unix')) {\n   return dict.get('Unix');\n  } else if (dict.has('Mac')) {\n   return dict.get('Mac');\n  } else if (dict.has('DOS')) {\n   return dict.get('DOS');\n  }\n  return null;\n }\n FileSpec.prototype = {\n  get filename() {\n   if (!this._filename && this.root) {\n    var filename = pickPlatformItem(this.root) || 'unnamed';\n    this._filename = stringToPDFString(filename).replace(/\\\\\\\\/g, '\\\\').replace(/\\\\\\//g, '/').replace(/\\\\/g, '/');\n   }\n   return this._filename;\n  },\n  get content() {\n   if (!this.contentAvailable) {\n    return null;\n   }\n   if (!this.contentRef && this.root) {\n    this.contentRef = pickPlatformItem(this.root.get('EF'));\n   }\n   var content = null;\n   if (this.contentRef) {\n    var xref = this.xref;\n    var fileObj = xref.fetchIfRef(this.contentRef);\n    if (fileObj && isStream(fileObj)) {\n     content = fileObj.getBytes();\n    } else {\n     warn('Embedded file specification points to non-existing/invalid ' + 'content');\n    }\n   } else {\n    warn('Embedded file specification does not have a content');\n   }\n   return content;\n  },\n  get serializable() {\n   return {\n    filename: this.filename,\n    content: this.content\n   };\n  }\n };\n return FileSpec;\n}();\nvar ObjectLoader = function () {\n function mayHaveChildren(value) {\n  return isRef(value) || isDict(value) || isArray(value) || isStream(value);\n }\n function addChildren(node, nodesToVisit) {\n  var value;\n  if (isDict(node) || isStream(node)) {\n   var map;\n   if (isDict(node)) {\n    map = node.map;\n   } else {\n    map = node.dict.map;\n   }\n   for (var key in map) {\n    value = map[key];\n    if (mayHaveChildren(value)) {\n     nodesToVisit.push(value);\n    }\n   }\n  } else if (isArray(node)) {\n   for (var i = 0, ii = node.length; i < ii; i++) {\n    value = node[i];\n    if (mayHaveChildren(value)) {\n     nodesToVisit.push(value);\n    }\n   }\n  }\n }\n function ObjectLoader(obj, keys, xref) {\n  this.obj = obj;\n  this.keys = keys;\n  this.xref = xref;\n  this.refSet = null;\n  this.capability = null;\n }\n ObjectLoader.prototype = {\n  load: function ObjectLoader_load() {\n   var keys = this.keys;\n   this.capability = createPromiseCapability();\n   if (!(this.xref.stream instanceof ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\n    this.capability.resolve();\n    return this.capability.promise;\n   }\n   this.refSet = new RefSet();\n   var nodesToVisit = [];\n   for (var i = 0; i < keys.length; i++) {\n    nodesToVisit.push(this.obj[keys[i]]);\n   }\n   this._walk(nodesToVisit);\n   return this.capability.promise;\n  },\n  _walk: function ObjectLoader_walk(nodesToVisit) {\n   var nodesToRevisit = [];\n   var pendingRequests = [];\n   while (nodesToVisit.length) {\n    var currentNode = nodesToVisit.pop();\n    if (isRef(currentNode)) {\n     if (this.refSet.has(currentNode)) {\n      continue;\n     }\n     try {\n      var ref = currentNode;\n      this.refSet.put(ref);\n      currentNode = this.xref.fetch(currentNode);\n     } catch (e) {\n      if (!(e instanceof MissingDataException)) {\n       throw e;\n      }\n      nodesToRevisit.push(currentNode);\n      pendingRequests.push({\n       begin: e.begin,\n       end: e.end\n      });\n     }\n    }\n    if (currentNode && currentNode.getBaseStreams) {\n     var baseStreams = currentNode.getBaseStreams();\n     var foundMissingData = false;\n     for (var i = 0; i < baseStreams.length; i++) {\n      var stream = baseStreams[i];\n      if (stream.getMissingChunks && stream.getMissingChunks().length) {\n       foundMissingData = true;\n       pendingRequests.push({\n        begin: stream.start,\n        end: stream.end\n       });\n      }\n     }\n     if (foundMissingData) {\n      nodesToRevisit.push(currentNode);\n     }\n    }\n    addChildren(currentNode, nodesToVisit);\n   }\n   if (pendingRequests.length) {\n    this.xref.stream.manager.requestRanges(pendingRequests).then(function pendingRequestCallback() {\n     nodesToVisit = nodesToRevisit;\n     for (var i = 0; i < nodesToRevisit.length; i++) {\n      var node = nodesToRevisit[i];\n      if (isRef(node)) {\n       this.refSet.remove(node);\n      }\n     }\n     this._walk(nodesToVisit);\n    }.bind(this), this.capability.reject);\n    return;\n   }\n   this.refSet = null;\n   this.capability.resolve();\n  }\n };\n return ObjectLoader;\n}();\nexports.Catalog = Catalog;\nexports.ObjectLoader = ObjectLoader;\nexports.XRef = XRef;\nexports.FileSpec = FileSpec;\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar getLookupTableFactory = sharedUtil.getLookupTableFactory;\nvar getStdFontMap = getLookupTableFactory(function (t) {\n t['ArialNarrow'] = 'Helvetica';\n t['ArialNarrow-Bold'] = 'Helvetica-Bold';\n t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\n t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\n t['ArialBlack'] = 'Helvetica';\n t['ArialBlack-Bold'] = 'Helvetica-Bold';\n t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\n t['ArialBlack-Italic'] = 'Helvetica-Oblique';\n t['Arial-Black'] = 'Helvetica';\n t['Arial-Black-Bold'] = 'Helvetica-Bold';\n t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\n t['Arial-Black-Italic'] = 'Helvetica-Oblique';\n t['Arial'] = 'Helvetica';\n t['Arial-Bold'] = 'Helvetica-Bold';\n t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\n t['Arial-Italic'] = 'Helvetica-Oblique';\n t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\n t['Arial-BoldMT'] = 'Helvetica-Bold';\n t['Arial-ItalicMT'] = 'Helvetica-Oblique';\n t['ArialMT'] = 'Helvetica';\n t['Courier-Bold'] = 'Courier-Bold';\n t['Courier-BoldItalic'] = 'Courier-BoldOblique';\n t['Courier-Italic'] = 'Courier-Oblique';\n t['CourierNew'] = 'Courier';\n t['CourierNew-Bold'] = 'Courier-Bold';\n t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\n t['CourierNew-Italic'] = 'Courier-Oblique';\n t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\n t['CourierNewPS-BoldMT'] = 'Courier-Bold';\n t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\n t['CourierNewPSMT'] = 'Courier';\n t['Helvetica'] = 'Helvetica';\n t['Helvetica-Bold'] = 'Helvetica-Bold';\n t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\n t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\n t['Helvetica-Italic'] = 'Helvetica-Oblique';\n t['Helvetica-Oblique'] = 'Helvetica-Oblique';\n t['Symbol-Bold'] = 'Symbol';\n t['Symbol-BoldItalic'] = 'Symbol';\n t['Symbol-Italic'] = 'Symbol';\n t['TimesNewRoman'] = 'Times-Roman';\n t['TimesNewRoman-Bold'] = 'Times-Bold';\n t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\n t['TimesNewRoman-Italic'] = 'Times-Italic';\n t['TimesNewRomanPS'] = 'Times-Roman';\n t['TimesNewRomanPS-Bold'] = 'Times-Bold';\n t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\n t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\n t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\n t['TimesNewRomanPS-Italic'] = 'Times-Italic';\n t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\n t['TimesNewRomanPSMT'] = 'Times-Roman';\n t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\n t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\n t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\n});\nvar getNonStdFontMap = getLookupTableFactory(function (t) {\n t['CenturyGothic'] = 'Helvetica';\n t['CenturyGothic-Bold'] = 'Helvetica-Bold';\n t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\n t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\n t['ComicSansMS'] = 'Comic Sans MS';\n t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\n t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\n t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\n t['LucidaConsole'] = 'Courier';\n t['LucidaConsole-Bold'] = 'Courier-Bold';\n t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\n t['LucidaConsole-Italic'] = 'Courier-Oblique';\n t['MS-Gothic'] = 'MS Gothic';\n t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\n t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\n t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\n t['MS-Mincho'] = 'MS Mincho';\n t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\n t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\n t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\n t['MS-PGothic'] = 'MS PGothic';\n t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\n t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\n t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\n t['MS-PMincho'] = 'MS PMincho';\n t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\n t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\n t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\n t['NuptialScript'] = 'Times-Italic';\n t['Wingdings'] = 'ZapfDingbats';\n});\nvar getSerifFonts = getLookupTableFactory(function (t) {\n t['Adobe Jenson'] = true;\n t['Adobe Text'] = true;\n t['Albertus'] = true;\n t['Aldus'] = true;\n t['Alexandria'] = true;\n t['Algerian'] = true;\n t['American Typewriter'] = true;\n t['Antiqua'] = true;\n t['Apex'] = true;\n t['Arno'] = true;\n t['Aster'] = true;\n t['Aurora'] = true;\n t['Baskerville'] = true;\n t['Bell'] = true;\n t['Bembo'] = true;\n t['Bembo Schoolbook'] = true;\n t['Benguiat'] = true;\n t['Berkeley Old Style'] = true;\n t['Bernhard Modern'] = true;\n t['Berthold City'] = true;\n t['Bodoni'] = true;\n t['Bauer Bodoni'] = true;\n t['Book Antiqua'] = true;\n t['Bookman'] = true;\n t['Bordeaux Roman'] = true;\n t['Californian FB'] = true;\n t['Calisto'] = true;\n t['Calvert'] = true;\n t['Capitals'] = true;\n t['Cambria'] = true;\n t['Cartier'] = true;\n t['Caslon'] = true;\n t['Catull'] = true;\n t['Centaur'] = true;\n t['Century Old Style'] = true;\n t['Century Schoolbook'] = true;\n t['Chaparral'] = true;\n t['Charis SIL'] = true;\n t['Cheltenham'] = true;\n t['Cholla Slab'] = true;\n t['Clarendon'] = true;\n t['Clearface'] = true;\n t['Cochin'] = true;\n t['Colonna'] = true;\n t['Computer Modern'] = true;\n t['Concrete Roman'] = true;\n t['Constantia'] = true;\n t['Cooper Black'] = true;\n t['Corona'] = true;\n t['Ecotype'] = true;\n t['Egyptienne'] = true;\n t['Elephant'] = true;\n t['Excelsior'] = true;\n t['Fairfield'] = true;\n t['FF Scala'] = true;\n t['Folkard'] = true;\n t['Footlight'] = true;\n t['FreeSerif'] = true;\n t['Friz Quadrata'] = true;\n t['Garamond'] = true;\n t['Gentium'] = true;\n t['Georgia'] = true;\n t['Gloucester'] = true;\n t['Goudy Old Style'] = true;\n t['Goudy Schoolbook'] = true;\n t['Goudy Pro Font'] = true;\n t['Granjon'] = true;\n t['Guardian Egyptian'] = true;\n t['Heather'] = true;\n t['Hercules'] = true;\n t['High Tower Text'] = true;\n t['Hiroshige'] = true;\n t['Hoefler Text'] = true;\n t['Humana Serif'] = true;\n t['Imprint'] = true;\n t['Ionic No. 5'] = true;\n t['Janson'] = true;\n t['Joanna'] = true;\n t['Korinna'] = true;\n t['Lexicon'] = true;\n t['Liberation Serif'] = true;\n t['Linux Libertine'] = true;\n t['Literaturnaya'] = true;\n t['Lucida'] = true;\n t['Lucida Bright'] = true;\n t['Melior'] = true;\n t['Memphis'] = true;\n t['Miller'] = true;\n t['Minion'] = true;\n t['Modern'] = true;\n t['Mona Lisa'] = true;\n t['Mrs Eaves'] = true;\n t['MS Serif'] = true;\n t['Museo Slab'] = true;\n t['New York'] = true;\n t['Nimbus Roman'] = true;\n t['NPS Rawlinson Roadway'] = true;\n t['NuptialScript'] = true;\n t['Palatino'] = true;\n t['Perpetua'] = true;\n t['Plantin'] = true;\n t['Plantin Schoolbook'] = true;\n t['Playbill'] = true;\n t['Poor Richard'] = true;\n t['Rawlinson Roadway'] = true;\n t['Renault'] = true;\n t['Requiem'] = true;\n t['Rockwell'] = true;\n t['Roman'] = true;\n t['Rotis Serif'] = true;\n t['Sabon'] = true;\n t['Scala'] = true;\n t['Seagull'] = true;\n t['Sistina'] = true;\n t['Souvenir'] = true;\n t['STIX'] = true;\n t['Stone Informal'] = true;\n t['Stone Serif'] = true;\n t['Sylfaen'] = true;\n t['Times'] = true;\n t['Trajan'] = true;\n t['Trinité'] = true;\n t['Trump Mediaeval'] = true;\n t['Utopia'] = true;\n t['Vale Type'] = true;\n t['Bitstream Vera'] = true;\n t['Vera Serif'] = true;\n t['Versailles'] = true;\n t['Wanted'] = true;\n t['Weiss'] = true;\n t['Wide Latin'] = true;\n t['Windsor'] = true;\n t['XITS'] = true;\n});\nvar getSymbolsFonts = getLookupTableFactory(function (t) {\n t['Dingbats'] = true;\n t['Symbol'] = true;\n t['ZapfDingbats'] = true;\n});\nvar getGlyphMapForStandardFonts = getLookupTableFactory(function (t) {\n t[2] = 10;\n t[3] = 32;\n t[4] = 33;\n t[5] = 34;\n t[6] = 35;\n t[7] = 36;\n t[8] = 37;\n t[9] = 38;\n t[10] = 39;\n t[11] = 40;\n t[12] = 41;\n t[13] = 42;\n t[14] = 43;\n t[15] = 44;\n t[16] = 45;\n t[17] = 46;\n t[18] = 47;\n t[19] = 48;\n t[20] = 49;\n t[21] = 50;\n t[22] = 51;\n t[23] = 52;\n t[24] = 53;\n t[25] = 54;\n t[26] = 55;\n t[27] = 56;\n t[28] = 57;\n t[29] = 58;\n t[30] = 894;\n t[31] = 60;\n t[32] = 61;\n t[33] = 62;\n t[34] = 63;\n t[35] = 64;\n t[36] = 65;\n t[37] = 66;\n t[38] = 67;\n t[39] = 68;\n t[40] = 69;\n t[41] = 70;\n t[42] = 71;\n t[43] = 72;\n t[44] = 73;\n t[45] = 74;\n t[46] = 75;\n t[47] = 76;\n t[48] = 77;\n t[49] = 78;\n t[50] = 79;\n t[51] = 80;\n t[52] = 81;\n t[53] = 82;\n t[54] = 83;\n t[55] = 84;\n t[56] = 85;\n t[57] = 86;\n t[58] = 87;\n t[59] = 88;\n t[60] = 89;\n t[61] = 90;\n t[62] = 91;\n t[63] = 92;\n t[64] = 93;\n t[65] = 94;\n t[66] = 95;\n t[67] = 96;\n t[68] = 97;\n t[69] = 98;\n t[70] = 99;\n t[71] = 100;\n t[72] = 101;\n t[73] = 102;\n t[74] = 103;\n t[75] = 104;\n t[76] = 105;\n t[77] = 106;\n t[78] = 107;\n t[79] = 108;\n t[80] = 109;\n t[81] = 110;\n t[82] = 111;\n t[83] = 112;\n t[84] = 113;\n t[85] = 114;\n t[86] = 115;\n t[87] = 116;\n t[88] = 117;\n t[89] = 118;\n t[90] = 119;\n t[91] = 120;\n t[92] = 121;\n t[93] = 122;\n t[94] = 123;\n t[95] = 124;\n t[96] = 125;\n t[97] = 126;\n t[98] = 196;\n t[99] = 197;\n t[100] = 199;\n t[101] = 201;\n t[102] = 209;\n t[103] = 214;\n t[104] = 220;\n t[105] = 225;\n t[106] = 224;\n t[107] = 226;\n t[108] = 228;\n t[109] = 227;\n t[110] = 229;\n t[111] = 231;\n t[112] = 233;\n t[113] = 232;\n t[114] = 234;\n t[115] = 235;\n t[116] = 237;\n t[117] = 236;\n t[118] = 238;\n t[119] = 239;\n t[120] = 241;\n t[121] = 243;\n t[122] = 242;\n t[123] = 244;\n t[124] = 246;\n t[125] = 245;\n t[126] = 250;\n t[127] = 249;\n t[128] = 251;\n t[129] = 252;\n t[130] = 8224;\n t[131] = 176;\n t[132] = 162;\n t[133] = 163;\n t[134] = 167;\n t[135] = 8226;\n t[136] = 182;\n t[137] = 223;\n t[138] = 174;\n t[139] = 169;\n t[140] = 8482;\n t[141] = 180;\n t[142] = 168;\n t[143] = 8800;\n t[144] = 198;\n t[145] = 216;\n t[146] = 8734;\n t[147] = 177;\n t[148] = 8804;\n t[149] = 8805;\n t[150] = 165;\n t[151] = 181;\n t[152] = 8706;\n t[153] = 8721;\n t[154] = 8719;\n t[156] = 8747;\n t[157] = 170;\n t[158] = 186;\n t[159] = 8486;\n t[160] = 230;\n t[161] = 248;\n t[162] = 191;\n t[163] = 161;\n t[164] = 172;\n t[165] = 8730;\n t[166] = 402;\n t[167] = 8776;\n t[168] = 8710;\n t[169] = 171;\n t[170] = 187;\n t[171] = 8230;\n t[210] = 218;\n t[223] = 711;\n t[224] = 321;\n t[225] = 322;\n t[227] = 353;\n t[229] = 382;\n t[234] = 253;\n t[252] = 263;\n t[253] = 268;\n t[254] = 269;\n t[258] = 258;\n t[260] = 260;\n t[261] = 261;\n t[265] = 280;\n t[266] = 281;\n t[268] = 283;\n t[269] = 313;\n t[275] = 323;\n t[276] = 324;\n t[278] = 328;\n t[284] = 345;\n t[285] = 346;\n t[286] = 347;\n t[292] = 367;\n t[295] = 377;\n t[296] = 378;\n t[298] = 380;\n t[305] = 963;\n t[306] = 964;\n t[307] = 966;\n t[308] = 8215;\n t[309] = 8252;\n t[310] = 8319;\n t[311] = 8359;\n t[312] = 8592;\n t[313] = 8593;\n t[337] = 9552;\n t[493] = 1039;\n t[494] = 1040;\n t[705] = 1524;\n t[706] = 8362;\n t[710] = 64288;\n t[711] = 64298;\n t[759] = 1617;\n t[761] = 1776;\n t[763] = 1778;\n t[775] = 1652;\n t[777] = 1764;\n t[778] = 1780;\n t[779] = 1781;\n t[780] = 1782;\n t[782] = 771;\n t[783] = 64726;\n t[786] = 8363;\n t[788] = 8532;\n t[790] = 768;\n t[791] = 769;\n t[792] = 768;\n t[795] = 803;\n t[797] = 64336;\n t[798] = 64337;\n t[799] = 64342;\n t[800] = 64343;\n t[801] = 64344;\n t[802] = 64345;\n t[803] = 64362;\n t[804] = 64363;\n t[805] = 64364;\n t[2424] = 7821;\n t[2425] = 7822;\n t[2426] = 7823;\n t[2427] = 7824;\n t[2428] = 7825;\n t[2429] = 7826;\n t[2430] = 7827;\n t[2433] = 7682;\n t[2678] = 8045;\n t[2679] = 8046;\n t[2830] = 1552;\n t[2838] = 686;\n t[2840] = 751;\n t[2842] = 753;\n t[2843] = 754;\n t[2844] = 755;\n t[2846] = 757;\n t[2856] = 767;\n t[2857] = 848;\n t[2858] = 849;\n t[2862] = 853;\n t[2863] = 854;\n t[2864] = 855;\n t[2865] = 861;\n t[2866] = 862;\n t[2906] = 7460;\n t[2908] = 7462;\n t[2909] = 7463;\n t[2910] = 7464;\n t[2912] = 7466;\n t[2913] = 7467;\n t[2914] = 7468;\n t[2916] = 7470;\n t[2917] = 7471;\n t[2918] = 7472;\n t[2920] = 7474;\n t[2921] = 7475;\n t[2922] = 7476;\n t[2924] = 7478;\n t[2925] = 7479;\n t[2926] = 7480;\n t[2928] = 7482;\n t[2929] = 7483;\n t[2930] = 7484;\n t[2932] = 7486;\n t[2933] = 7487;\n t[2934] = 7488;\n t[2936] = 7490;\n t[2937] = 7491;\n t[2938] = 7492;\n t[2940] = 7494;\n t[2941] = 7495;\n t[2942] = 7496;\n t[2944] = 7498;\n t[2946] = 7500;\n t[2948] = 7502;\n t[2950] = 7504;\n t[2951] = 7505;\n t[2952] = 7506;\n t[2954] = 7508;\n t[2955] = 7509;\n t[2956] = 7510;\n t[2958] = 7512;\n t[2959] = 7513;\n t[2960] = 7514;\n t[2962] = 7516;\n t[2963] = 7517;\n t[2964] = 7518;\n t[2966] = 7520;\n t[2967] = 7521;\n t[2968] = 7522;\n t[2970] = 7524;\n t[2971] = 7525;\n t[2972] = 7526;\n t[2974] = 7528;\n t[2975] = 7529;\n t[2976] = 7530;\n t[2978] = 1537;\n t[2979] = 1538;\n t[2980] = 1539;\n t[2982] = 1549;\n t[2983] = 1551;\n t[2984] = 1552;\n t[2986] = 1554;\n t[2987] = 1555;\n t[2988] = 1556;\n t[2990] = 1623;\n t[2991] = 1624;\n t[2995] = 1775;\n t[2999] = 1791;\n t[3002] = 64290;\n t[3003] = 64291;\n t[3004] = 64292;\n t[3006] = 64294;\n t[3007] = 64295;\n t[3008] = 64296;\n t[3011] = 1900;\n t[3014] = 8223;\n t[3015] = 8244;\n t[3017] = 7532;\n t[3018] = 7533;\n t[3019] = 7534;\n t[3075] = 7590;\n t[3076] = 7591;\n t[3079] = 7594;\n t[3080] = 7595;\n t[3083] = 7598;\n t[3084] = 7599;\n t[3087] = 7602;\n t[3088] = 7603;\n t[3091] = 7606;\n t[3092] = 7607;\n t[3095] = 7610;\n t[3096] = 7611;\n t[3099] = 7614;\n t[3100] = 7615;\n t[3103] = 7618;\n t[3104] = 7619;\n t[3107] = 8337;\n t[3108] = 8338;\n t[3116] = 1884;\n t[3119] = 1885;\n t[3120] = 1885;\n t[3123] = 1886;\n t[3124] = 1886;\n t[3127] = 1887;\n t[3128] = 1887;\n t[3131] = 1888;\n t[3132] = 1888;\n t[3135] = 1889;\n t[3136] = 1889;\n t[3139] = 1890;\n t[3140] = 1890;\n t[3143] = 1891;\n t[3144] = 1891;\n t[3147] = 1892;\n t[3148] = 1892;\n t[3153] = 580;\n t[3154] = 581;\n t[3157] = 584;\n t[3158] = 585;\n t[3161] = 588;\n t[3162] = 589;\n t[3165] = 891;\n t[3166] = 892;\n t[3169] = 1274;\n t[3170] = 1275;\n t[3173] = 1278;\n t[3174] = 1279;\n t[3181] = 7622;\n t[3182] = 7623;\n t[3282] = 11799;\n t[3316] = 578;\n t[3379] = 42785;\n t[3393] = 1159;\n t[3416] = 8377;\n});\nvar getSupplementalGlyphMapForArialBlack = getLookupTableFactory(function (t) {\n t[227] = 322;\n t[264] = 261;\n t[291] = 346;\n});\nexports.getStdFontMap = getStdFontMap;\nexports.getNonStdFontMap = getNonStdFontMap;\nexports.getSerifFonts = getSerifFonts;\nexports.getSymbolsFonts = getSymbolsFonts;\nexports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\nexports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar getLookupTableFactory = sharedUtil.getLookupTableFactory;\nvar getSpecialPUASymbols = getLookupTableFactory(function (t) {\n t[63721] = 0x00A9;\n t[63193] = 0x00A9;\n t[63720] = 0x00AE;\n t[63194] = 0x00AE;\n t[63722] = 0x2122;\n t[63195] = 0x2122;\n t[63729] = 0x23A7;\n t[63730] = 0x23A8;\n t[63731] = 0x23A9;\n t[63740] = 0x23AB;\n t[63741] = 0x23AC;\n t[63742] = 0x23AD;\n t[63726] = 0x23A1;\n t[63727] = 0x23A2;\n t[63728] = 0x23A3;\n t[63737] = 0x23A4;\n t[63738] = 0x23A5;\n t[63739] = 0x23A6;\n t[63723] = 0x239B;\n t[63724] = 0x239C;\n t[63725] = 0x239D;\n t[63734] = 0x239E;\n t[63735] = 0x239F;\n t[63736] = 0x23A0;\n});\nfunction mapSpecialUnicodeValues(code) {\n if (code >= 0xFFF0 && code <= 0xFFFF) {\n  return 0;\n } else if (code >= 0xF600 && code <= 0xF8FF) {\n  return getSpecialPUASymbols()[code] || code;\n }\n return code;\n}\nfunction getUnicodeForGlyph(name, glyphsUnicodeMap) {\n var unicode = glyphsUnicodeMap[name];\n if (unicode !== undefined) {\n  return unicode;\n }\n if (!name) {\n  return -1;\n }\n if (name[0] === 'u') {\n  var nameLen = name.length, hexStr;\n  if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\n   hexStr = name.substr(3);\n  } else if (nameLen >= 5 && nameLen <= 7) {\n   hexStr = name.substr(1);\n  } else {\n   return -1;\n  }\n  if (hexStr === hexStr.toUpperCase()) {\n   unicode = parseInt(hexStr, 16);\n   if (unicode >= 0) {\n    return unicode;\n   }\n  }\n }\n return -1;\n}\nvar UnicodeRanges = [\n {\n  'begin': 0x0000,\n  'end': 0x007F\n },\n {\n  'begin': 0x0080,\n  'end': 0x00FF\n },\n {\n  'begin': 0x0100,\n  'end': 0x017F\n },\n {\n  'begin': 0x0180,\n  'end': 0x024F\n },\n {\n  'begin': 0x0250,\n  'end': 0x02AF\n },\n {\n  'begin': 0x02B0,\n  'end': 0x02FF\n },\n {\n  'begin': 0x0300,\n  'end': 0x036F\n },\n {\n  'begin': 0x0370,\n  'end': 0x03FF\n },\n {\n  'begin': 0x2C80,\n  'end': 0x2CFF\n },\n {\n  'begin': 0x0400,\n  'end': 0x04FF\n },\n {\n  'begin': 0x0530,\n  'end': 0x058F\n },\n {\n  'begin': 0x0590,\n  'end': 0x05FF\n },\n {\n  'begin': 0xA500,\n  'end': 0xA63F\n },\n {\n  'begin': 0x0600,\n  'end': 0x06FF\n },\n {\n  'begin': 0x07C0,\n  'end': 0x07FF\n },\n {\n  'begin': 0x0900,\n  'end': 0x097F\n },\n {\n  'begin': 0x0980,\n  'end': 0x09FF\n },\n {\n  'begin': 0x0A00,\n  'end': 0x0A7F\n },\n {\n  'begin': 0x0A80,\n  'end': 0x0AFF\n },\n {\n  'begin': 0x0B00,\n  'end': 0x0B7F\n },\n {\n  'begin': 0x0B80,\n  'end': 0x0BFF\n },\n {\n  'begin': 0x0C00,\n  'end': 0x0C7F\n },\n {\n  'begin': 0x0C80,\n  'end': 0x0CFF\n },\n {\n  'begin': 0x0D00,\n  'end': 0x0D7F\n },\n {\n  'begin': 0x0E00,\n  'end': 0x0E7F\n },\n {\n  'begin': 0x0E80,\n  'end': 0x0EFF\n },\n {\n  'begin': 0x10A0,\n  'end': 0x10FF\n },\n {\n  'begin': 0x1B00,\n  'end': 0x1B7F\n },\n {\n  'begin': 0x1100,\n  'end': 0x11FF\n },\n {\n  'begin': 0x1E00,\n  'end': 0x1EFF\n },\n {\n  'begin': 0x1F00,\n  'end': 0x1FFF\n },\n {\n  'begin': 0x2000,\n  'end': 0x206F\n },\n {\n  'begin': 0x2070,\n  'end': 0x209F\n },\n {\n  'begin': 0x20A0,\n  'end': 0x20CF\n },\n {\n  'begin': 0x20D0,\n  'end': 0x20FF\n },\n {\n  'begin': 0x2100,\n  'end': 0x214F\n },\n {\n  'begin': 0x2150,\n  'end': 0x218F\n },\n {\n  'begin': 0x2190,\n  'end': 0x21FF\n },\n {\n  'begin': 0x2200,\n  'end': 0x22FF\n },\n {\n  'begin': 0x2300,\n  'end': 0x23FF\n },\n {\n  'begin': 0x2400,\n  'end': 0x243F\n },\n {\n  'begin': 0x2440,\n  'end': 0x245F\n },\n {\n  'begin': 0x2460,\n  'end': 0x24FF\n },\n {\n  'begin': 0x2500,\n  'end': 0x257F\n },\n {\n  'begin': 0x2580,\n  'end': 0x259F\n },\n {\n  'begin': 0x25A0,\n  'end': 0x25FF\n },\n {\n  'begin': 0x2600,\n  'end': 0x26FF\n },\n {\n  'begin': 0x2700,\n  'end': 0x27BF\n },\n {\n  'begin': 0x3000,\n  'end': 0x303F\n },\n {\n  'begin': 0x3040,\n  'end': 0x309F\n },\n {\n  'begin': 0x30A0,\n  'end': 0x30FF\n },\n {\n  'begin': 0x3100,\n  'end': 0x312F\n },\n {\n  'begin': 0x3130,\n  'end': 0x318F\n },\n {\n  'begin': 0xA840,\n  'end': 0xA87F\n },\n {\n  'begin': 0x3200,\n  'end': 0x32FF\n },\n {\n  'begin': 0x3300,\n  'end': 0x33FF\n },\n {\n  'begin': 0xAC00,\n  'end': 0xD7AF\n },\n {\n  'begin': 0xD800,\n  'end': 0xDFFF\n },\n {\n  'begin': 0x10900,\n  'end': 0x1091F\n },\n {\n  'begin': 0x4E00,\n  'end': 0x9FFF\n },\n {\n  'begin': 0xE000,\n  'end': 0xF8FF\n },\n {\n  'begin': 0x31C0,\n  'end': 0x31EF\n },\n {\n  'begin': 0xFB00,\n  'end': 0xFB4F\n },\n {\n  'begin': 0xFB50,\n  'end': 0xFDFF\n },\n {\n  'begin': 0xFE20,\n  'end': 0xFE2F\n },\n {\n  'begin': 0xFE10,\n  'end': 0xFE1F\n },\n {\n  'begin': 0xFE50,\n  'end': 0xFE6F\n },\n {\n  'begin': 0xFE70,\n  'end': 0xFEFF\n },\n {\n  'begin': 0xFF00,\n  'end': 0xFFEF\n },\n {\n  'begin': 0xFFF0,\n  'end': 0xFFFF\n },\n {\n  'begin': 0x0F00,\n  'end': 0x0FFF\n },\n {\n  'begin': 0x0700,\n  'end': 0x074F\n },\n {\n  'begin': 0x0780,\n  'end': 0x07BF\n },\n {\n  'begin': 0x0D80,\n  'end': 0x0DFF\n },\n {\n  'begin': 0x1000,\n  'end': 0x109F\n },\n {\n  'begin': 0x1200,\n  'end': 0x137F\n },\n {\n  'begin': 0x13A0,\n  'end': 0x13FF\n },\n {\n  'begin': 0x1400,\n  'end': 0x167F\n },\n {\n  'begin': 0x1680,\n  'end': 0x169F\n },\n {\n  'begin': 0x16A0,\n  'end': 0x16FF\n },\n {\n  'begin': 0x1780,\n  'end': 0x17FF\n },\n {\n  'begin': 0x1800,\n  'end': 0x18AF\n },\n {\n  'begin': 0x2800,\n  'end': 0x28FF\n },\n {\n  'begin': 0xA000,\n  'end': 0xA48F\n },\n {\n  'begin': 0x1700,\n  'end': 0x171F\n },\n {\n  'begin': 0x10300,\n  'end': 0x1032F\n },\n {\n  'begin': 0x10330,\n  'end': 0x1034F\n },\n {\n  'begin': 0x10400,\n  'end': 0x1044F\n },\n {\n  'begin': 0x1D000,\n  'end': 0x1D0FF\n },\n {\n  'begin': 0x1D400,\n  'end': 0x1D7FF\n },\n {\n  'begin': 0xFF000,\n  'end': 0xFFFFD\n },\n {\n  'begin': 0xFE00,\n  'end': 0xFE0F\n },\n {\n  'begin': 0xE0000,\n  'end': 0xE007F\n },\n {\n  'begin': 0x1900,\n  'end': 0x194F\n },\n {\n  'begin': 0x1950,\n  'end': 0x197F\n },\n {\n  'begin': 0x1980,\n  'end': 0x19DF\n },\n {\n  'begin': 0x1A00,\n  'end': 0x1A1F\n },\n {\n  'begin': 0x2C00,\n  'end': 0x2C5F\n },\n {\n  'begin': 0x2D30,\n  'end': 0x2D7F\n },\n {\n  'begin': 0x4DC0,\n  'end': 0x4DFF\n },\n {\n  'begin': 0xA800,\n  'end': 0xA82F\n },\n {\n  'begin': 0x10000,\n  'end': 0x1007F\n },\n {\n  'begin': 0x10140,\n  'end': 0x1018F\n },\n {\n  'begin': 0x10380,\n  'end': 0x1039F\n },\n {\n  'begin': 0x103A0,\n  'end': 0x103DF\n },\n {\n  'begin': 0x10450,\n  'end': 0x1047F\n },\n {\n  'begin': 0x10480,\n  'end': 0x104AF\n },\n {\n  'begin': 0x10800,\n  'end': 0x1083F\n },\n {\n  'begin': 0x10A00,\n  'end': 0x10A5F\n },\n {\n  'begin': 0x1D300,\n  'end': 0x1D35F\n },\n {\n  'begin': 0x12000,\n  'end': 0x123FF\n },\n {\n  'begin': 0x1D360,\n  'end': 0x1D37F\n },\n {\n  'begin': 0x1B80,\n  'end': 0x1BBF\n },\n {\n  'begin': 0x1C00,\n  'end': 0x1C4F\n },\n {\n  'begin': 0x1C50,\n  'end': 0x1C7F\n },\n {\n  'begin': 0xA880,\n  'end': 0xA8DF\n },\n {\n  'begin': 0xA900,\n  'end': 0xA92F\n },\n {\n  'begin': 0xA930,\n  'end': 0xA95F\n },\n {\n  'begin': 0xAA00,\n  'end': 0xAA5F\n },\n {\n  'begin': 0x10190,\n  'end': 0x101CF\n },\n {\n  'begin': 0x101D0,\n  'end': 0x101FF\n },\n {\n  'begin': 0x102A0,\n  'end': 0x102DF\n },\n {\n  'begin': 0x1F030,\n  'end': 0x1F09F\n }\n];\nfunction getUnicodeRangeFor(value) {\n for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\n  var range = UnicodeRanges[i];\n  if (value >= range.begin && value < range.end) {\n   return i;\n  }\n }\n return -1;\n}\nfunction isRTLRangeFor(value) {\n var range = UnicodeRanges[13];\n if (value >= range.begin && value < range.end) {\n  return true;\n }\n range = UnicodeRanges[11];\n if (value >= range.begin && value < range.end) {\n  return true;\n }\n return false;\n}\nvar getNormalizedUnicodes = getLookupTableFactory(function (t) {\n t['\\u00A8'] = '\\u0020\\u0308';\n t['\\u00AF'] = '\\u0020\\u0304';\n t['\\u00B4'] = '\\u0020\\u0301';\n t['\\u00B5'] = '\\u03BC';\n t['\\u00B8'] = '\\u0020\\u0327';\n t['\\u0132'] = '\\u0049\\u004A';\n t['\\u0133'] = '\\u0069\\u006A';\n t['\\u013F'] = '\\u004C\\u00B7';\n t['\\u0140'] = '\\u006C\\u00B7';\n t['\\u0149'] = '\\u02BC\\u006E';\n t['\\u017F'] = '\\u0073';\n t['\\u01C4'] = '\\u0044\\u017D';\n t['\\u01C5'] = '\\u0044\\u017E';\n t['\\u01C6'] = '\\u0064\\u017E';\n t['\\u01C7'] = '\\u004C\\u004A';\n t['\\u01C8'] = '\\u004C\\u006A';\n t['\\u01C9'] = '\\u006C\\u006A';\n t['\\u01CA'] = '\\u004E\\u004A';\n t['\\u01CB'] = '\\u004E\\u006A';\n t['\\u01CC'] = '\\u006E\\u006A';\n t['\\u01F1'] = '\\u0044\\u005A';\n t['\\u01F2'] = '\\u0044\\u007A';\n t['\\u01F3'] = '\\u0064\\u007A';\n t['\\u02D8'] = '\\u0020\\u0306';\n t['\\u02D9'] = '\\u0020\\u0307';\n t['\\u02DA'] = '\\u0020\\u030A';\n t['\\u02DB'] = '\\u0020\\u0328';\n t['\\u02DC'] = '\\u0020\\u0303';\n t['\\u02DD'] = '\\u0020\\u030B';\n t['\\u037A'] = '\\u0020\\u0345';\n t['\\u0384'] = '\\u0020\\u0301';\n t['\\u03D0'] = '\\u03B2';\n t['\\u03D1'] = '\\u03B8';\n t['\\u03D2'] = '\\u03A5';\n t['\\u03D5'] = '\\u03C6';\n t['\\u03D6'] = '\\u03C0';\n t['\\u03F0'] = '\\u03BA';\n t['\\u03F1'] = '\\u03C1';\n t['\\u03F2'] = '\\u03C2';\n t['\\u03F4'] = '\\u0398';\n t['\\u03F5'] = '\\u03B5';\n t['\\u03F9'] = '\\u03A3';\n t['\\u0587'] = '\\u0565\\u0582';\n t['\\u0675'] = '\\u0627\\u0674';\n t['\\u0676'] = '\\u0648\\u0674';\n t['\\u0677'] = '\\u06C7\\u0674';\n t['\\u0678'] = '\\u064A\\u0674';\n t['\\u0E33'] = '\\u0E4D\\u0E32';\n t['\\u0EB3'] = '\\u0ECD\\u0EB2';\n t['\\u0EDC'] = '\\u0EAB\\u0E99';\n t['\\u0EDD'] = '\\u0EAB\\u0EA1';\n t['\\u0F77'] = '\\u0FB2\\u0F81';\n t['\\u0F79'] = '\\u0FB3\\u0F81';\n t['\\u1E9A'] = '\\u0061\\u02BE';\n t['\\u1FBD'] = '\\u0020\\u0313';\n t['\\u1FBF'] = '\\u0020\\u0313';\n t['\\u1FC0'] = '\\u0020\\u0342';\n t['\\u1FFE'] = '\\u0020\\u0314';\n t['\\u2002'] = '\\u0020';\n t['\\u2003'] = '\\u0020';\n t['\\u2004'] = '\\u0020';\n t['\\u2005'] = '\\u0020';\n t['\\u2006'] = '\\u0020';\n t['\\u2008'] = '\\u0020';\n t['\\u2009'] = '\\u0020';\n t['\\u200A'] = '\\u0020';\n t['\\u2017'] = '\\u0020\\u0333';\n t['\\u2024'] = '\\u002E';\n t['\\u2025'] = '\\u002E\\u002E';\n t['\\u2026'] = '\\u002E\\u002E\\u002E';\n t['\\u2033'] = '\\u2032\\u2032';\n t['\\u2034'] = '\\u2032\\u2032\\u2032';\n t['\\u2036'] = '\\u2035\\u2035';\n t['\\u2037'] = '\\u2035\\u2035\\u2035';\n t['\\u203C'] = '\\u0021\\u0021';\n t['\\u203E'] = '\\u0020\\u0305';\n t['\\u2047'] = '\\u003F\\u003F';\n t['\\u2048'] = '\\u003F\\u0021';\n t['\\u2049'] = '\\u0021\\u003F';\n t['\\u2057'] = '\\u2032\\u2032\\u2032\\u2032';\n t['\\u205F'] = '\\u0020';\n t['\\u20A8'] = '\\u0052\\u0073';\n t['\\u2100'] = '\\u0061\\u002F\\u0063';\n t['\\u2101'] = '\\u0061\\u002F\\u0073';\n t['\\u2103'] = '\\u00B0\\u0043';\n t['\\u2105'] = '\\u0063\\u002F\\u006F';\n t['\\u2106'] = '\\u0063\\u002F\\u0075';\n t['\\u2107'] = '\\u0190';\n t['\\u2109'] = '\\u00B0\\u0046';\n t['\\u2116'] = '\\u004E\\u006F';\n t['\\u2121'] = '\\u0054\\u0045\\u004C';\n t['\\u2135'] = '\\u05D0';\n t['\\u2136'] = '\\u05D1';\n t['\\u2137'] = '\\u05D2';\n t['\\u2138'] = '\\u05D3';\n t['\\u213B'] = '\\u0046\\u0041\\u0058';\n t['\\u2160'] = '\\u0049';\n t['\\u2161'] = '\\u0049\\u0049';\n t['\\u2162'] = '\\u0049\\u0049\\u0049';\n t['\\u2163'] = '\\u0049\\u0056';\n t['\\u2164'] = '\\u0056';\n t['\\u2165'] = '\\u0056\\u0049';\n t['\\u2166'] = '\\u0056\\u0049\\u0049';\n t['\\u2167'] = '\\u0056\\u0049\\u0049\\u0049';\n t['\\u2168'] = '\\u0049\\u0058';\n t['\\u2169'] = '\\u0058';\n t['\\u216A'] = '\\u0058\\u0049';\n t['\\u216B'] = '\\u0058\\u0049\\u0049';\n t['\\u216C'] = '\\u004C';\n t['\\u216D'] = '\\u0043';\n t['\\u216E'] = '\\u0044';\n t['\\u216F'] = '\\u004D';\n t['\\u2170'] = '\\u0069';\n t['\\u2171'] = '\\u0069\\u0069';\n t['\\u2172'] = '\\u0069\\u0069\\u0069';\n t['\\u2173'] = '\\u0069\\u0076';\n t['\\u2174'] = '\\u0076';\n t['\\u2175'] = '\\u0076\\u0069';\n t['\\u2176'] = '\\u0076\\u0069\\u0069';\n t['\\u2177'] = '\\u0076\\u0069\\u0069\\u0069';\n t['\\u2178'] = '\\u0069\\u0078';\n t['\\u2179'] = '\\u0078';\n t['\\u217A'] = '\\u0078\\u0069';\n t['\\u217B'] = '\\u0078\\u0069\\u0069';\n t['\\u217C'] = '\\u006C';\n t['\\u217D'] = '\\u0063';\n t['\\u217E'] = '\\u0064';\n t['\\u217F'] = '\\u006D';\n t['\\u222C'] = '\\u222B\\u222B';\n t['\\u222D'] = '\\u222B\\u222B\\u222B';\n t['\\u222F'] = '\\u222E\\u222E';\n t['\\u2230'] = '\\u222E\\u222E\\u222E';\n t['\\u2474'] = '\\u0028\\u0031\\u0029';\n t['\\u2475'] = '\\u0028\\u0032\\u0029';\n t['\\u2476'] = '\\u0028\\u0033\\u0029';\n t['\\u2477'] = '\\u0028\\u0034\\u0029';\n t['\\u2478'] = '\\u0028\\u0035\\u0029';\n t['\\u2479'] = '\\u0028\\u0036\\u0029';\n t['\\u247A'] = '\\u0028\\u0037\\u0029';\n t['\\u247B'] = '\\u0028\\u0038\\u0029';\n t['\\u247C'] = '\\u0028\\u0039\\u0029';\n t['\\u247D'] = '\\u0028\\u0031\\u0030\\u0029';\n t['\\u247E'] = '\\u0028\\u0031\\u0031\\u0029';\n t['\\u247F'] = '\\u0028\\u0031\\u0032\\u0029';\n t['\\u2480'] = '\\u0028\\u0031\\u0033\\u0029';\n t['\\u2481'] = '\\u0028\\u0031\\u0034\\u0029';\n t['\\u2482'] = '\\u0028\\u0031\\u0035\\u0029';\n t['\\u2483'] = '\\u0028\\u0031\\u0036\\u0029';\n t['\\u2484'] = '\\u0028\\u0031\\u0037\\u0029';\n t['\\u2485'] = '\\u0028\\u0031\\u0038\\u0029';\n t['\\u2486'] = '\\u0028\\u0031\\u0039\\u0029';\n t['\\u2487'] = '\\u0028\\u0032\\u0030\\u0029';\n t['\\u2488'] = '\\u0031\\u002E';\n t['\\u2489'] = '\\u0032\\u002E';\n t['\\u248A'] = '\\u0033\\u002E';\n t['\\u248B'] = '\\u0034\\u002E';\n t['\\u248C'] = '\\u0035\\u002E';\n t['\\u248D'] = '\\u0036\\u002E';\n t['\\u248E'] = '\\u0037\\u002E';\n t['\\u248F'] = '\\u0038\\u002E';\n t['\\u2490'] = '\\u0039\\u002E';\n t['\\u2491'] = '\\u0031\\u0030\\u002E';\n t['\\u2492'] = '\\u0031\\u0031\\u002E';\n t['\\u2493'] = '\\u0031\\u0032\\u002E';\n t['\\u2494'] = '\\u0031\\u0033\\u002E';\n t['\\u2495'] = '\\u0031\\u0034\\u002E';\n t['\\u2496'] = '\\u0031\\u0035\\u002E';\n t['\\u2497'] = '\\u0031\\u0036\\u002E';\n t['\\u2498'] = '\\u0031\\u0037\\u002E';\n t['\\u2499'] = '\\u0031\\u0038\\u002E';\n t['\\u249A'] = '\\u0031\\u0039\\u002E';\n t['\\u249B'] = '\\u0032\\u0030\\u002E';\n t['\\u249C'] = '\\u0028\\u0061\\u0029';\n t['\\u249D'] = '\\u0028\\u0062\\u0029';\n t['\\u249E'] = '\\u0028\\u0063\\u0029';\n t['\\u249F'] = '\\u0028\\u0064\\u0029';\n t['\\u24A0'] = '\\u0028\\u0065\\u0029';\n t['\\u24A1'] = '\\u0028\\u0066\\u0029';\n t['\\u24A2'] = '\\u0028\\u0067\\u0029';\n t['\\u24A3'] = '\\u0028\\u0068\\u0029';\n t['\\u24A4'] = '\\u0028\\u0069\\u0029';\n t['\\u24A5'] = '\\u0028\\u006A\\u0029';\n t['\\u24A6'] = '\\u0028\\u006B\\u0029';\n t['\\u24A7'] = '\\u0028\\u006C\\u0029';\n t['\\u24A8'] = '\\u0028\\u006D\\u0029';\n t['\\u24A9'] = '\\u0028\\u006E\\u0029';\n t['\\u24AA'] = '\\u0028\\u006F\\u0029';\n t['\\u24AB'] = '\\u0028\\u0070\\u0029';\n t['\\u24AC'] = '\\u0028\\u0071\\u0029';\n t['\\u24AD'] = '\\u0028\\u0072\\u0029';\n t['\\u24AE'] = '\\u0028\\u0073\\u0029';\n t['\\u24AF'] = '\\u0028\\u0074\\u0029';\n t['\\u24B0'] = '\\u0028\\u0075\\u0029';\n t['\\u24B1'] = '\\u0028\\u0076\\u0029';\n t['\\u24B2'] = '\\u0028\\u0077\\u0029';\n t['\\u24B3'] = '\\u0028\\u0078\\u0029';\n t['\\u24B4'] = '\\u0028\\u0079\\u0029';\n t['\\u24B5'] = '\\u0028\\u007A\\u0029';\n t['\\u2A0C'] = '\\u222B\\u222B\\u222B\\u222B';\n t['\\u2A74'] = '\\u003A\\u003A\\u003D';\n t['\\u2A75'] = '\\u003D\\u003D';\n t['\\u2A76'] = '\\u003D\\u003D\\u003D';\n t['\\u2E9F'] = '\\u6BCD';\n t['\\u2EF3'] = '\\u9F9F';\n t['\\u2F00'] = '\\u4E00';\n t['\\u2F01'] = '\\u4E28';\n t['\\u2F02'] = '\\u4E36';\n t['\\u2F03'] = '\\u4E3F';\n t['\\u2F04'] = '\\u4E59';\n t['\\u2F05'] = '\\u4E85';\n t['\\u2F06'] = '\\u4E8C';\n t['\\u2F07'] = '\\u4EA0';\n t['\\u2F08'] = '\\u4EBA';\n t['\\u2F09'] = '\\u513F';\n t['\\u2F0A'] = '\\u5165';\n t['\\u2F0B'] = '\\u516B';\n t['\\u2F0C'] = '\\u5182';\n t['\\u2F0D'] = '\\u5196';\n t['\\u2F0E'] = '\\u51AB';\n t['\\u2F0F'] = '\\u51E0';\n t['\\u2F10'] = '\\u51F5';\n t['\\u2F11'] = '\\u5200';\n t['\\u2F12'] = '\\u529B';\n t['\\u2F13'] = '\\u52F9';\n t['\\u2F14'] = '\\u5315';\n t['\\u2F15'] = '\\u531A';\n t['\\u2F16'] = '\\u5338';\n t['\\u2F17'] = '\\u5341';\n t['\\u2F18'] = '\\u535C';\n t['\\u2F19'] = '\\u5369';\n t['\\u2F1A'] = '\\u5382';\n t['\\u2F1B'] = '\\u53B6';\n t['\\u2F1C'] = '\\u53C8';\n t['\\u2F1D'] = '\\u53E3';\n t['\\u2F1E'] = '\\u56D7';\n t['\\u2F1F'] = '\\u571F';\n t['\\u2F20'] = '\\u58EB';\n t['\\u2F21'] = '\\u5902';\n t['\\u2F22'] = '\\u590A';\n t['\\u2F23'] = '\\u5915';\n t['\\u2F24'] = '\\u5927';\n t['\\u2F25'] = '\\u5973';\n t['\\u2F26'] = '\\u5B50';\n t['\\u2F27'] = '\\u5B80';\n t['\\u2F28'] = '\\u5BF8';\n t['\\u2F29'] = '\\u5C0F';\n t['\\u2F2A'] = '\\u5C22';\n t['\\u2F2B'] = '\\u5C38';\n t['\\u2F2C'] = '\\u5C6E';\n t['\\u2F2D'] = '\\u5C71';\n t['\\u2F2E'] = '\\u5DDB';\n t['\\u2F2F'] = '\\u5DE5';\n t['\\u2F30'] = '\\u5DF1';\n t['\\u2F31'] = '\\u5DFE';\n t['\\u2F32'] = '\\u5E72';\n t['\\u2F33'] = '\\u5E7A';\n t['\\u2F34'] = '\\u5E7F';\n t['\\u2F35'] = '\\u5EF4';\n t['\\u2F36'] = '\\u5EFE';\n t['\\u2F37'] = '\\u5F0B';\n t['\\u2F38'] = '\\u5F13';\n t['\\u2F39'] = '\\u5F50';\n t['\\u2F3A'] = '\\u5F61';\n t['\\u2F3B'] = '\\u5F73';\n t['\\u2F3C'] = '\\u5FC3';\n t['\\u2F3D'] = '\\u6208';\n t['\\u2F3E'] = '\\u6236';\n t['\\u2F3F'] = '\\u624B';\n t['\\u2F40'] = '\\u652F';\n t['\\u2F41'] = '\\u6534';\n t['\\u2F42'] = '\\u6587';\n t['\\u2F43'] = '\\u6597';\n t['\\u2F44'] = '\\u65A4';\n t['\\u2F45'] = '\\u65B9';\n t['\\u2F46'] = '\\u65E0';\n t['\\u2F47'] = '\\u65E5';\n t['\\u2F48'] = '\\u66F0';\n t['\\u2F49'] = '\\u6708';\n t['\\u2F4A'] = '\\u6728';\n t['\\u2F4B'] = '\\u6B20';\n t['\\u2F4C'] = '\\u6B62';\n t['\\u2F4D'] = '\\u6B79';\n t['\\u2F4E'] = '\\u6BB3';\n t['\\u2F4F'] = '\\u6BCB';\n t['\\u2F50'] = '\\u6BD4';\n t['\\u2F51'] = '\\u6BDB';\n t['\\u2F52'] = '\\u6C0F';\n t['\\u2F53'] = '\\u6C14';\n t['\\u2F54'] = '\\u6C34';\n t['\\u2F55'] = '\\u706B';\n t['\\u2F56'] = '\\u722A';\n t['\\u2F57'] = '\\u7236';\n t['\\u2F58'] = '\\u723B';\n t['\\u2F59'] = '\\u723F';\n t['\\u2F5A'] = '\\u7247';\n t['\\u2F5B'] = '\\u7259';\n t['\\u2F5C'] = '\\u725B';\n t['\\u2F5D'] = '\\u72AC';\n t['\\u2F5E'] = '\\u7384';\n t['\\u2F5F'] = '\\u7389';\n t['\\u2F60'] = '\\u74DC';\n t['\\u2F61'] = '\\u74E6';\n t['\\u2F62'] = '\\u7518';\n t['\\u2F63'] = '\\u751F';\n t['\\u2F64'] = '\\u7528';\n t['\\u2F65'] = '\\u7530';\n t['\\u2F66'] = '\\u758B';\n t['\\u2F67'] = '\\u7592';\n t['\\u2F68'] = '\\u7676';\n t['\\u2F69'] = '\\u767D';\n t['\\u2F6A'] = '\\u76AE';\n t['\\u2F6B'] = '\\u76BF';\n t['\\u2F6C'] = '\\u76EE';\n t['\\u2F6D'] = '\\u77DB';\n t['\\u2F6E'] = '\\u77E2';\n t['\\u2F6F'] = '\\u77F3';\n t['\\u2F70'] = '\\u793A';\n t['\\u2F71'] = '\\u79B8';\n t['\\u2F72'] = '\\u79BE';\n t['\\u2F73'] = '\\u7A74';\n t['\\u2F74'] = '\\u7ACB';\n t['\\u2F75'] = '\\u7AF9';\n t['\\u2F76'] = '\\u7C73';\n t['\\u2F77'] = '\\u7CF8';\n t['\\u2F78'] = '\\u7F36';\n t['\\u2F79'] = '\\u7F51';\n t['\\u2F7A'] = '\\u7F8A';\n t['\\u2F7B'] = '\\u7FBD';\n t['\\u2F7C'] = '\\u8001';\n t['\\u2F7D'] = '\\u800C';\n t['\\u2F7E'] = '\\u8012';\n t['\\u2F7F'] = '\\u8033';\n t['\\u2F80'] = '\\u807F';\n t['\\u2F81'] = '\\u8089';\n t['\\u2F82'] = '\\u81E3';\n t['\\u2F83'] = '\\u81EA';\n t['\\u2F84'] = '\\u81F3';\n t['\\u2F85'] = '\\u81FC';\n t['\\u2F86'] = '\\u820C';\n t['\\u2F87'] = '\\u821B';\n t['\\u2F88'] = '\\u821F';\n t['\\u2F89'] = '\\u826E';\n t['\\u2F8A'] = '\\u8272';\n t['\\u2F8B'] = '\\u8278';\n t['\\u2F8C'] = '\\u864D';\n t['\\u2F8D'] = '\\u866B';\n t['\\u2F8E'] = '\\u8840';\n t['\\u2F8F'] = '\\u884C';\n t['\\u2F90'] = '\\u8863';\n t['\\u2F91'] = '\\u897E';\n t['\\u2F92'] = '\\u898B';\n t['\\u2F93'] = '\\u89D2';\n t['\\u2F94'] = '\\u8A00';\n t['\\u2F95'] = '\\u8C37';\n t['\\u2F96'] = '\\u8C46';\n t['\\u2F97'] = '\\u8C55';\n t['\\u2F98'] = '\\u8C78';\n t['\\u2F99'] = '\\u8C9D';\n t['\\u2F9A'] = '\\u8D64';\n t['\\u2F9B'] = '\\u8D70';\n t['\\u2F9C'] = '\\u8DB3';\n t['\\u2F9D'] = '\\u8EAB';\n t['\\u2F9E'] = '\\u8ECA';\n t['\\u2F9F'] = '\\u8F9B';\n t['\\u2FA0'] = '\\u8FB0';\n t['\\u2FA1'] = '\\u8FB5';\n t['\\u2FA2'] = '\\u9091';\n t['\\u2FA3'] = '\\u9149';\n t['\\u2FA4'] = '\\u91C6';\n t['\\u2FA5'] = '\\u91CC';\n t['\\u2FA6'] = '\\u91D1';\n t['\\u2FA7'] = '\\u9577';\n t['\\u2FA8'] = '\\u9580';\n t['\\u2FA9'] = '\\u961C';\n t['\\u2FAA'] = '\\u96B6';\n t['\\u2FAB'] = '\\u96B9';\n t['\\u2FAC'] = '\\u96E8';\n t['\\u2FAD'] = '\\u9751';\n t['\\u2FAE'] = '\\u975E';\n t['\\u2FAF'] = '\\u9762';\n t['\\u2FB0'] = '\\u9769';\n t['\\u2FB1'] = '\\u97CB';\n t['\\u2FB2'] = '\\u97ED';\n t['\\u2FB3'] = '\\u97F3';\n t['\\u2FB4'] = '\\u9801';\n t['\\u2FB5'] = '\\u98A8';\n t['\\u2FB6'] = '\\u98DB';\n t['\\u2FB7'] = '\\u98DF';\n t['\\u2FB8'] = '\\u9996';\n t['\\u2FB9'] = '\\u9999';\n t['\\u2FBA'] = '\\u99AC';\n t['\\u2FBB'] = '\\u9AA8';\n t['\\u2FBC'] = '\\u9AD8';\n t['\\u2FBD'] = '\\u9ADF';\n t['\\u2FBE'] = '\\u9B25';\n t['\\u2FBF'] = '\\u9B2F';\n t['\\u2FC0'] = '\\u9B32';\n t['\\u2FC1'] = '\\u9B3C';\n t['\\u2FC2'] = '\\u9B5A';\n t['\\u2FC3'] = '\\u9CE5';\n t['\\u2FC4'] = '\\u9E75';\n t['\\u2FC5'] = '\\u9E7F';\n t['\\u2FC6'] = '\\u9EA5';\n t['\\u2FC7'] = '\\u9EBB';\n t['\\u2FC8'] = '\\u9EC3';\n t['\\u2FC9'] = '\\u9ECD';\n t['\\u2FCA'] = '\\u9ED1';\n t['\\u2FCB'] = '\\u9EF9';\n t['\\u2FCC'] = '\\u9EFD';\n t['\\u2FCD'] = '\\u9F0E';\n t['\\u2FCE'] = '\\u9F13';\n t['\\u2FCF'] = '\\u9F20';\n t['\\u2FD0'] = '\\u9F3B';\n t['\\u2FD1'] = '\\u9F4A';\n t['\\u2FD2'] = '\\u9F52';\n t['\\u2FD3'] = '\\u9F8D';\n t['\\u2FD4'] = '\\u9F9C';\n t['\\u2FD5'] = '\\u9FA0';\n t['\\u3036'] = '\\u3012';\n t['\\u3038'] = '\\u5341';\n t['\\u3039'] = '\\u5344';\n t['\\u303A'] = '\\u5345';\n t['\\u309B'] = '\\u0020\\u3099';\n t['\\u309C'] = '\\u0020\\u309A';\n t['\\u3131'] = '\\u1100';\n t['\\u3132'] = '\\u1101';\n t['\\u3133'] = '\\u11AA';\n t['\\u3134'] = '\\u1102';\n t['\\u3135'] = '\\u11AC';\n t['\\u3136'] = '\\u11AD';\n t['\\u3137'] = '\\u1103';\n t['\\u3138'] = '\\u1104';\n t['\\u3139'] = '\\u1105';\n t['\\u313A'] = '\\u11B0';\n t['\\u313B'] = '\\u11B1';\n t['\\u313C'] = '\\u11B2';\n t['\\u313D'] = '\\u11B3';\n t['\\u313E'] = '\\u11B4';\n t['\\u313F'] = '\\u11B5';\n t['\\u3140'] = '\\u111A';\n t['\\u3141'] = '\\u1106';\n t['\\u3142'] = '\\u1107';\n t['\\u3143'] = '\\u1108';\n t['\\u3144'] = '\\u1121';\n t['\\u3145'] = '\\u1109';\n t['\\u3146'] = '\\u110A';\n t['\\u3147'] = '\\u110B';\n t['\\u3148'] = '\\u110C';\n t['\\u3149'] = '\\u110D';\n t['\\u314A'] = '\\u110E';\n t['\\u314B'] = '\\u110F';\n t['\\u314C'] = '\\u1110';\n t['\\u314D'] = '\\u1111';\n t['\\u314E'] = '\\u1112';\n t['\\u314F'] = '\\u1161';\n t['\\u3150'] = '\\u1162';\n t['\\u3151'] = '\\u1163';\n t['\\u3152'] = '\\u1164';\n t['\\u3153'] = '\\u1165';\n t['\\u3154'] = '\\u1166';\n t['\\u3155'] = '\\u1167';\n t['\\u3156'] = '\\u1168';\n t['\\u3157'] = '\\u1169';\n t['\\u3158'] = '\\u116A';\n t['\\u3159'] = '\\u116B';\n t['\\u315A'] = '\\u116C';\n t['\\u315B'] = '\\u116D';\n t['\\u315C'] = '\\u116E';\n t['\\u315D'] = '\\u116F';\n t['\\u315E'] = '\\u1170';\n t['\\u315F'] = '\\u1171';\n t['\\u3160'] = '\\u1172';\n t['\\u3161'] = '\\u1173';\n t['\\u3162'] = '\\u1174';\n t['\\u3163'] = '\\u1175';\n t['\\u3164'] = '\\u1160';\n t['\\u3165'] = '\\u1114';\n t['\\u3166'] = '\\u1115';\n t['\\u3167'] = '\\u11C7';\n t['\\u3168'] = '\\u11C8';\n t['\\u3169'] = '\\u11CC';\n t['\\u316A'] = '\\u11CE';\n t['\\u316B'] = '\\u11D3';\n t['\\u316C'] = '\\u11D7';\n t['\\u316D'] = '\\u11D9';\n t['\\u316E'] = '\\u111C';\n t['\\u316F'] = '\\u11DD';\n t['\\u3170'] = '\\u11DF';\n t['\\u3171'] = '\\u111D';\n t['\\u3172'] = '\\u111E';\n t['\\u3173'] = '\\u1120';\n t['\\u3174'] = '\\u1122';\n t['\\u3175'] = '\\u1123';\n t['\\u3176'] = '\\u1127';\n t['\\u3177'] = '\\u1129';\n t['\\u3178'] = '\\u112B';\n t['\\u3179'] = '\\u112C';\n t['\\u317A'] = '\\u112D';\n t['\\u317B'] = '\\u112E';\n t['\\u317C'] = '\\u112F';\n t['\\u317D'] = '\\u1132';\n t['\\u317E'] = '\\u1136';\n t['\\u317F'] = '\\u1140';\n t['\\u3180'] = '\\u1147';\n t['\\u3181'] = '\\u114C';\n t['\\u3182'] = '\\u11F1';\n t['\\u3183'] = '\\u11F2';\n t['\\u3184'] = '\\u1157';\n t['\\u3185'] = '\\u1158';\n t['\\u3186'] = '\\u1159';\n t['\\u3187'] = '\\u1184';\n t['\\u3188'] = '\\u1185';\n t['\\u3189'] = '\\u1188';\n t['\\u318A'] = '\\u1191';\n t['\\u318B'] = '\\u1192';\n t['\\u318C'] = '\\u1194';\n t['\\u318D'] = '\\u119E';\n t['\\u318E'] = '\\u11A1';\n t['\\u3200'] = '\\u0028\\u1100\\u0029';\n t['\\u3201'] = '\\u0028\\u1102\\u0029';\n t['\\u3202'] = '\\u0028\\u1103\\u0029';\n t['\\u3203'] = '\\u0028\\u1105\\u0029';\n t['\\u3204'] = '\\u0028\\u1106\\u0029';\n t['\\u3205'] = '\\u0028\\u1107\\u0029';\n t['\\u3206'] = '\\u0028\\u1109\\u0029';\n t['\\u3207'] = '\\u0028\\u110B\\u0029';\n t['\\u3208'] = '\\u0028\\u110C\\u0029';\n t['\\u3209'] = '\\u0028\\u110E\\u0029';\n t['\\u320A'] = '\\u0028\\u110F\\u0029';\n t['\\u320B'] = '\\u0028\\u1110\\u0029';\n t['\\u320C'] = '\\u0028\\u1111\\u0029';\n t['\\u320D'] = '\\u0028\\u1112\\u0029';\n t['\\u320E'] = '\\u0028\\u1100\\u1161\\u0029';\n t['\\u320F'] = '\\u0028\\u1102\\u1161\\u0029';\n t['\\u3210'] = '\\u0028\\u1103\\u1161\\u0029';\n t['\\u3211'] = '\\u0028\\u1105\\u1161\\u0029';\n t['\\u3212'] = '\\u0028\\u1106\\u1161\\u0029';\n t['\\u3213'] = '\\u0028\\u1107\\u1161\\u0029';\n t['\\u3214'] = '\\u0028\\u1109\\u1161\\u0029';\n t['\\u3215'] = '\\u0028\\u110B\\u1161\\u0029';\n t['\\u3216'] = '\\u0028\\u110C\\u1161\\u0029';\n t['\\u3217'] = '\\u0028\\u110E\\u1161\\u0029';\n t['\\u3218'] = '\\u0028\\u110F\\u1161\\u0029';\n t['\\u3219'] = '\\u0028\\u1110\\u1161\\u0029';\n t['\\u321A'] = '\\u0028\\u1111\\u1161\\u0029';\n t['\\u321B'] = '\\u0028\\u1112\\u1161\\u0029';\n t['\\u321C'] = '\\u0028\\u110C\\u116E\\u0029';\n t['\\u321D'] = '\\u0028\\u110B\\u1169\\u110C\\u1165\\u11AB\\u0029';\n t['\\u321E'] = '\\u0028\\u110B\\u1169\\u1112\\u116E\\u0029';\n t['\\u3220'] = '\\u0028\\u4E00\\u0029';\n t['\\u3221'] = '\\u0028\\u4E8C\\u0029';\n t['\\u3222'] = '\\u0028\\u4E09\\u0029';\n t['\\u3223'] = '\\u0028\\u56DB\\u0029';\n t['\\u3224'] = '\\u0028\\u4E94\\u0029';\n t['\\u3225'] = '\\u0028\\u516D\\u0029';\n t['\\u3226'] = '\\u0028\\u4E03\\u0029';\n t['\\u3227'] = '\\u0028\\u516B\\u0029';\n t['\\u3228'] = '\\u0028\\u4E5D\\u0029';\n t['\\u3229'] = '\\u0028\\u5341\\u0029';\n t['\\u322A'] = '\\u0028\\u6708\\u0029';\n t['\\u322B'] = '\\u0028\\u706B\\u0029';\n t['\\u322C'] = '\\u0028\\u6C34\\u0029';\n t['\\u322D'] = '\\u0028\\u6728\\u0029';\n t['\\u322E'] = '\\u0028\\u91D1\\u0029';\n t['\\u322F'] = '\\u0028\\u571F\\u0029';\n t['\\u3230'] = '\\u0028\\u65E5\\u0029';\n t['\\u3231'] = '\\u0028\\u682A\\u0029';\n t['\\u3232'] = '\\u0028\\u6709\\u0029';\n t['\\u3233'] = '\\u0028\\u793E\\u0029';\n t['\\u3234'] = '\\u0028\\u540D\\u0029';\n t['\\u3235'] = '\\u0028\\u7279\\u0029';\n t['\\u3236'] = '\\u0028\\u8CA1\\u0029';\n t['\\u3237'] = '\\u0028\\u795D\\u0029';\n t['\\u3238'] = '\\u0028\\u52B4\\u0029';\n t['\\u3239'] = '\\u0028\\u4EE3\\u0029';\n t['\\u323A'] = '\\u0028\\u547C\\u0029';\n t['\\u323B'] = '\\u0028\\u5B66\\u0029';\n t['\\u323C'] = '\\u0028\\u76E3\\u0029';\n t['\\u323D'] = '\\u0028\\u4F01\\u0029';\n t['\\u323E'] = '\\u0028\\u8CC7\\u0029';\n t['\\u323F'] = '\\u0028\\u5354\\u0029';\n t['\\u3240'] = '\\u0028\\u796D\\u0029';\n t['\\u3241'] = '\\u0028\\u4F11\\u0029';\n t['\\u3242'] = '\\u0028\\u81EA\\u0029';\n t['\\u3243'] = '\\u0028\\u81F3\\u0029';\n t['\\u32C0'] = '\\u0031\\u6708';\n t['\\u32C1'] = '\\u0032\\u6708';\n t['\\u32C2'] = '\\u0033\\u6708';\n t['\\u32C3'] = '\\u0034\\u6708';\n t['\\u32C4'] = '\\u0035\\u6708';\n t['\\u32C5'] = '\\u0036\\u6708';\n t['\\u32C6'] = '\\u0037\\u6708';\n t['\\u32C7'] = '\\u0038\\u6708';\n t['\\u32C8'] = '\\u0039\\u6708';\n t['\\u32C9'] = '\\u0031\\u0030\\u6708';\n t['\\u32CA'] = '\\u0031\\u0031\\u6708';\n t['\\u32CB'] = '\\u0031\\u0032\\u6708';\n t['\\u3358'] = '\\u0030\\u70B9';\n t['\\u3359'] = '\\u0031\\u70B9';\n t['\\u335A'] = '\\u0032\\u70B9';\n t['\\u335B'] = '\\u0033\\u70B9';\n t['\\u335C'] = '\\u0034\\u70B9';\n t['\\u335D'] = '\\u0035\\u70B9';\n t['\\u335E'] = '\\u0036\\u70B9';\n t['\\u335F'] = '\\u0037\\u70B9';\n t['\\u3360'] = '\\u0038\\u70B9';\n t['\\u3361'] = '\\u0039\\u70B9';\n t['\\u3362'] = '\\u0031\\u0030\\u70B9';\n t['\\u3363'] = '\\u0031\\u0031\\u70B9';\n t['\\u3364'] = '\\u0031\\u0032\\u70B9';\n t['\\u3365'] = '\\u0031\\u0033\\u70B9';\n t['\\u3366'] = '\\u0031\\u0034\\u70B9';\n t['\\u3367'] = '\\u0031\\u0035\\u70B9';\n t['\\u3368'] = '\\u0031\\u0036\\u70B9';\n t['\\u3369'] = '\\u0031\\u0037\\u70B9';\n t['\\u336A'] = '\\u0031\\u0038\\u70B9';\n t['\\u336B'] = '\\u0031\\u0039\\u70B9';\n t['\\u336C'] = '\\u0032\\u0030\\u70B9';\n t['\\u336D'] = '\\u0032\\u0031\\u70B9';\n t['\\u336E'] = '\\u0032\\u0032\\u70B9';\n t['\\u336F'] = '\\u0032\\u0033\\u70B9';\n t['\\u3370'] = '\\u0032\\u0034\\u70B9';\n t['\\u33E0'] = '\\u0031\\u65E5';\n t['\\u33E1'] = '\\u0032\\u65E5';\n t['\\u33E2'] = '\\u0033\\u65E5';\n t['\\u33E3'] = '\\u0034\\u65E5';\n t['\\u33E4'] = '\\u0035\\u65E5';\n t['\\u33E5'] = '\\u0036\\u65E5';\n t['\\u33E6'] = '\\u0037\\u65E5';\n t['\\u33E7'] = '\\u0038\\u65E5';\n t['\\u33E8'] = '\\u0039\\u65E5';\n t['\\u33E9'] = '\\u0031\\u0030\\u65E5';\n t['\\u33EA'] = '\\u0031\\u0031\\u65E5';\n t['\\u33EB'] = '\\u0031\\u0032\\u65E5';\n t['\\u33EC'] = '\\u0031\\u0033\\u65E5';\n t['\\u33ED'] = '\\u0031\\u0034\\u65E5';\n t['\\u33EE'] = '\\u0031\\u0035\\u65E5';\n t['\\u33EF'] = '\\u0031\\u0036\\u65E5';\n t['\\u33F0'] = '\\u0031\\u0037\\u65E5';\n t['\\u33F1'] = '\\u0031\\u0038\\u65E5';\n t['\\u33F2'] = '\\u0031\\u0039\\u65E5';\n t['\\u33F3'] = '\\u0032\\u0030\\u65E5';\n t['\\u33F4'] = '\\u0032\\u0031\\u65E5';\n t['\\u33F5'] = '\\u0032\\u0032\\u65E5';\n t['\\u33F6'] = '\\u0032\\u0033\\u65E5';\n t['\\u33F7'] = '\\u0032\\u0034\\u65E5';\n t['\\u33F8'] = '\\u0032\\u0035\\u65E5';\n t['\\u33F9'] = '\\u0032\\u0036\\u65E5';\n t['\\u33FA'] = '\\u0032\\u0037\\u65E5';\n t['\\u33FB'] = '\\u0032\\u0038\\u65E5';\n t['\\u33FC'] = '\\u0032\\u0039\\u65E5';\n t['\\u33FD'] = '\\u0033\\u0030\\u65E5';\n t['\\u33FE'] = '\\u0033\\u0031\\u65E5';\n t['\\uFB00'] = '\\u0066\\u0066';\n t['\\uFB01'] = '\\u0066\\u0069';\n t['\\uFB02'] = '\\u0066\\u006C';\n t['\\uFB03'] = '\\u0066\\u0066\\u0069';\n t['\\uFB04'] = '\\u0066\\u0066\\u006C';\n t['\\uFB05'] = '\\u017F\\u0074';\n t['\\uFB06'] = '\\u0073\\u0074';\n t['\\uFB13'] = '\\u0574\\u0576';\n t['\\uFB14'] = '\\u0574\\u0565';\n t['\\uFB15'] = '\\u0574\\u056B';\n t['\\uFB16'] = '\\u057E\\u0576';\n t['\\uFB17'] = '\\u0574\\u056D';\n t['\\uFB4F'] = '\\u05D0\\u05DC';\n t['\\uFB50'] = '\\u0671';\n t['\\uFB51'] = '\\u0671';\n t['\\uFB52'] = '\\u067B';\n t['\\uFB53'] = '\\u067B';\n t['\\uFB54'] = '\\u067B';\n t['\\uFB55'] = '\\u067B';\n t['\\uFB56'] = '\\u067E';\n t['\\uFB57'] = '\\u067E';\n t['\\uFB58'] = '\\u067E';\n t['\\uFB59'] = '\\u067E';\n t['\\uFB5A'] = '\\u0680';\n t['\\uFB5B'] = '\\u0680';\n t['\\uFB5C'] = '\\u0680';\n t['\\uFB5D'] = '\\u0680';\n t['\\uFB5E'] = '\\u067A';\n t['\\uFB5F'] = '\\u067A';\n t['\\uFB60'] = '\\u067A';\n t['\\uFB61'] = '\\u067A';\n t['\\uFB62'] = '\\u067F';\n t['\\uFB63'] = '\\u067F';\n t['\\uFB64'] = '\\u067F';\n t['\\uFB65'] = '\\u067F';\n t['\\uFB66'] = '\\u0679';\n t['\\uFB67'] = '\\u0679';\n t['\\uFB68'] = '\\u0679';\n t['\\uFB69'] = '\\u0679';\n t['\\uFB6A'] = '\\u06A4';\n t['\\uFB6B'] = '\\u06A4';\n t['\\uFB6C'] = '\\u06A4';\n t['\\uFB6D'] = '\\u06A4';\n t['\\uFB6E'] = '\\u06A6';\n t['\\uFB6F'] = '\\u06A6';\n t['\\uFB70'] = '\\u06A6';\n t['\\uFB71'] = '\\u06A6';\n t['\\uFB72'] = '\\u0684';\n t['\\uFB73'] = '\\u0684';\n t['\\uFB74'] = '\\u0684';\n t['\\uFB75'] = '\\u0684';\n t['\\uFB76'] = '\\u0683';\n t['\\uFB77'] = '\\u0683';\n t['\\uFB78'] = '\\u0683';\n t['\\uFB79'] = '\\u0683';\n t['\\uFB7A'] = '\\u0686';\n t['\\uFB7B'] = '\\u0686';\n t['\\uFB7C'] = '\\u0686';\n t['\\uFB7D'] = '\\u0686';\n t['\\uFB7E'] = '\\u0687';\n t['\\uFB7F'] = '\\u0687';\n t['\\uFB80'] = '\\u0687';\n t['\\uFB81'] = '\\u0687';\n t['\\uFB82'] = '\\u068D';\n t['\\uFB83'] = '\\u068D';\n t['\\uFB84'] = '\\u068C';\n t['\\uFB85'] = '\\u068C';\n t['\\uFB86'] = '\\u068E';\n t['\\uFB87'] = '\\u068E';\n t['\\uFB88'] = '\\u0688';\n t['\\uFB89'] = '\\u0688';\n t['\\uFB8A'] = '\\u0698';\n t['\\uFB8B'] = '\\u0698';\n t['\\uFB8C'] = '\\u0691';\n t['\\uFB8D'] = '\\u0691';\n t['\\uFB8E'] = '\\u06A9';\n t['\\uFB8F'] = '\\u06A9';\n t['\\uFB90'] = '\\u06A9';\n t['\\uFB91'] = '\\u06A9';\n t['\\uFB92'] = '\\u06AF';\n t['\\uFB93'] = '\\u06AF';\n t['\\uFB94'] = '\\u06AF';\n t['\\uFB95'] = '\\u06AF';\n t['\\uFB96'] = '\\u06B3';\n t['\\uFB97'] = '\\u06B3';\n t['\\uFB98'] = '\\u06B3';\n t['\\uFB99'] = '\\u06B3';\n t['\\uFB9A'] = '\\u06B1';\n t['\\uFB9B'] = '\\u06B1';\n t['\\uFB9C'] = '\\u06B1';\n t['\\uFB9D'] = '\\u06B1';\n t['\\uFB9E'] = '\\u06BA';\n t['\\uFB9F'] = '\\u06BA';\n t['\\uFBA0'] = '\\u06BB';\n t['\\uFBA1'] = '\\u06BB';\n t['\\uFBA2'] = '\\u06BB';\n t['\\uFBA3'] = '\\u06BB';\n t['\\uFBA4'] = '\\u06C0';\n t['\\uFBA5'] = '\\u06C0';\n t['\\uFBA6'] = '\\u06C1';\n t['\\uFBA7'] = '\\u06C1';\n t['\\uFBA8'] = '\\u06C1';\n t['\\uFBA9'] = '\\u06C1';\n t['\\uFBAA'] = '\\u06BE';\n t['\\uFBAB'] = '\\u06BE';\n t['\\uFBAC'] = '\\u06BE';\n t['\\uFBAD'] = '\\u06BE';\n t['\\uFBAE'] = '\\u06D2';\n t['\\uFBAF'] = '\\u06D2';\n t['\\uFBB0'] = '\\u06D3';\n t['\\uFBB1'] = '\\u06D3';\n t['\\uFBD3'] = '\\u06AD';\n t['\\uFBD4'] = '\\u06AD';\n t['\\uFBD5'] = '\\u06AD';\n t['\\uFBD6'] = '\\u06AD';\n t['\\uFBD7'] = '\\u06C7';\n t['\\uFBD8'] = '\\u06C7';\n t['\\uFBD9'] = '\\u06C6';\n t['\\uFBDA'] = '\\u06C6';\n t['\\uFBDB'] = '\\u06C8';\n t['\\uFBDC'] = '\\u06C8';\n t['\\uFBDD'] = '\\u0677';\n t['\\uFBDE'] = '\\u06CB';\n t['\\uFBDF'] = '\\u06CB';\n t['\\uFBE0'] = '\\u06C5';\n t['\\uFBE1'] = '\\u06C5';\n t['\\uFBE2'] = '\\u06C9';\n t['\\uFBE3'] = '\\u06C9';\n t['\\uFBE4'] = '\\u06D0';\n t['\\uFBE5'] = '\\u06D0';\n t['\\uFBE6'] = '\\u06D0';\n t['\\uFBE7'] = '\\u06D0';\n t['\\uFBE8'] = '\\u0649';\n t['\\uFBE9'] = '\\u0649';\n t['\\uFBEA'] = '\\u0626\\u0627';\n t['\\uFBEB'] = '\\u0626\\u0627';\n t['\\uFBEC'] = '\\u0626\\u06D5';\n t['\\uFBED'] = '\\u0626\\u06D5';\n t['\\uFBEE'] = '\\u0626\\u0648';\n t['\\uFBEF'] = '\\u0626\\u0648';\n t['\\uFBF0'] = '\\u0626\\u06C7';\n t['\\uFBF1'] = '\\u0626\\u06C7';\n t['\\uFBF2'] = '\\u0626\\u06C6';\n t['\\uFBF3'] = '\\u0626\\u06C6';\n t['\\uFBF4'] = '\\u0626\\u06C8';\n t['\\uFBF5'] = '\\u0626\\u06C8';\n t['\\uFBF6'] = '\\u0626\\u06D0';\n t['\\uFBF7'] = '\\u0626\\u06D0';\n t['\\uFBF8'] = '\\u0626\\u06D0';\n t['\\uFBF9'] = '\\u0626\\u0649';\n t['\\uFBFA'] = '\\u0626\\u0649';\n t['\\uFBFB'] = '\\u0626\\u0649';\n t['\\uFBFC'] = '\\u06CC';\n t['\\uFBFD'] = '\\u06CC';\n t['\\uFBFE'] = '\\u06CC';\n t['\\uFBFF'] = '\\u06CC';\n t['\\uFC00'] = '\\u0626\\u062C';\n t['\\uFC01'] = '\\u0626\\u062D';\n t['\\uFC02'] = '\\u0626\\u0645';\n t['\\uFC03'] = '\\u0626\\u0649';\n t['\\uFC04'] = '\\u0626\\u064A';\n t['\\uFC05'] = '\\u0628\\u062C';\n t['\\uFC06'] = '\\u0628\\u062D';\n t['\\uFC07'] = '\\u0628\\u062E';\n t['\\uFC08'] = '\\u0628\\u0645';\n t['\\uFC09'] = '\\u0628\\u0649';\n t['\\uFC0A'] = '\\u0628\\u064A';\n t['\\uFC0B'] = '\\u062A\\u062C';\n t['\\uFC0C'] = '\\u062A\\u062D';\n t['\\uFC0D'] = '\\u062A\\u062E';\n t['\\uFC0E'] = '\\u062A\\u0645';\n t['\\uFC0F'] = '\\u062A\\u0649';\n t['\\uFC10'] = '\\u062A\\u064A';\n t['\\uFC11'] = '\\u062B\\u062C';\n t['\\uFC12'] = '\\u062B\\u0645';\n t['\\uFC13'] = '\\u062B\\u0649';\n t['\\uFC14'] = '\\u062B\\u064A';\n t['\\uFC15'] = '\\u062C\\u062D';\n t['\\uFC16'] = '\\u062C\\u0645';\n t['\\uFC17'] = '\\u062D\\u062C';\n t['\\uFC18'] = '\\u062D\\u0645';\n t['\\uFC19'] = '\\u062E\\u062C';\n t['\\uFC1A'] = '\\u062E\\u062D';\n t['\\uFC1B'] = '\\u062E\\u0645';\n t['\\uFC1C'] = '\\u0633\\u062C';\n t['\\uFC1D'] = '\\u0633\\u062D';\n t['\\uFC1E'] = '\\u0633\\u062E';\n t['\\uFC1F'] = '\\u0633\\u0645';\n t['\\uFC20'] = '\\u0635\\u062D';\n t['\\uFC21'] = '\\u0635\\u0645';\n t['\\uFC22'] = '\\u0636\\u062C';\n t['\\uFC23'] = '\\u0636\\u062D';\n t['\\uFC24'] = '\\u0636\\u062E';\n t['\\uFC25'] = '\\u0636\\u0645';\n t['\\uFC26'] = '\\u0637\\u062D';\n t['\\uFC27'] = '\\u0637\\u0645';\n t['\\uFC28'] = '\\u0638\\u0645';\n t['\\uFC29'] = '\\u0639\\u062C';\n t['\\uFC2A'] = '\\u0639\\u0645';\n t['\\uFC2B'] = '\\u063A\\u062C';\n t['\\uFC2C'] = '\\u063A\\u0645';\n t['\\uFC2D'] = '\\u0641\\u062C';\n t['\\uFC2E'] = '\\u0641\\u062D';\n t['\\uFC2F'] = '\\u0641\\u062E';\n t['\\uFC30'] = '\\u0641\\u0645';\n t['\\uFC31'] = '\\u0641\\u0649';\n t['\\uFC32'] = '\\u0641\\u064A';\n t['\\uFC33'] = '\\u0642\\u062D';\n t['\\uFC34'] = '\\u0642\\u0645';\n t['\\uFC35'] = '\\u0642\\u0649';\n t['\\uFC36'] = '\\u0642\\u064A';\n t['\\uFC37'] = '\\u0643\\u0627';\n t['\\uFC38'] = '\\u0643\\u062C';\n t['\\uFC39'] = '\\u0643\\u062D';\n t['\\uFC3A'] = '\\u0643\\u062E';\n t['\\uFC3B'] = '\\u0643\\u0644';\n t['\\uFC3C'] = '\\u0643\\u0645';\n t['\\uFC3D'] = '\\u0643\\u0649';\n t['\\uFC3E'] = '\\u0643\\u064A';\n t['\\uFC3F'] = '\\u0644\\u062C';\n t['\\uFC40'] = '\\u0644\\u062D';\n t['\\uFC41'] = '\\u0644\\u062E';\n t['\\uFC42'] = '\\u0644\\u0645';\n t['\\uFC43'] = '\\u0644\\u0649';\n t['\\uFC44'] = '\\u0644\\u064A';\n t['\\uFC45'] = '\\u0645\\u062C';\n t['\\uFC46'] = '\\u0645\\u062D';\n t['\\uFC47'] = '\\u0645\\u062E';\n t['\\uFC48'] = '\\u0645\\u0645';\n t['\\uFC49'] = '\\u0645\\u0649';\n t['\\uFC4A'] = '\\u0645\\u064A';\n t['\\uFC4B'] = '\\u0646\\u062C';\n t['\\uFC4C'] = '\\u0646\\u062D';\n t['\\uFC4D'] = '\\u0646\\u062E';\n t['\\uFC4E'] = '\\u0646\\u0645';\n t['\\uFC4F'] = '\\u0646\\u0649';\n t['\\uFC50'] = '\\u0646\\u064A';\n t['\\uFC51'] = '\\u0647\\u062C';\n t['\\uFC52'] = '\\u0647\\u0645';\n t['\\uFC53'] = '\\u0647\\u0649';\n t['\\uFC54'] = '\\u0647\\u064A';\n t['\\uFC55'] = '\\u064A\\u062C';\n t['\\uFC56'] = '\\u064A\\u062D';\n t['\\uFC57'] = '\\u064A\\u062E';\n t['\\uFC58'] = '\\u064A\\u0645';\n t['\\uFC59'] = '\\u064A\\u0649';\n t['\\uFC5A'] = '\\u064A\\u064A';\n t['\\uFC5B'] = '\\u0630\\u0670';\n t['\\uFC5C'] = '\\u0631\\u0670';\n t['\\uFC5D'] = '\\u0649\\u0670';\n t['\\uFC5E'] = '\\u0020\\u064C\\u0651';\n t['\\uFC5F'] = '\\u0020\\u064D\\u0651';\n t['\\uFC60'] = '\\u0020\\u064E\\u0651';\n t['\\uFC61'] = '\\u0020\\u064F\\u0651';\n t['\\uFC62'] = '\\u0020\\u0650\\u0651';\n t['\\uFC63'] = '\\u0020\\u0651\\u0670';\n t['\\uFC64'] = '\\u0626\\u0631';\n t['\\uFC65'] = '\\u0626\\u0632';\n t['\\uFC66'] = '\\u0626\\u0645';\n t['\\uFC67'] = '\\u0626\\u0646';\n t['\\uFC68'] = '\\u0626\\u0649';\n t['\\uFC69'] = '\\u0626\\u064A';\n t['\\uFC6A'] = '\\u0628\\u0631';\n t['\\uFC6B'] = '\\u0628\\u0632';\n t['\\uFC6C'] = '\\u0628\\u0645';\n t['\\uFC6D'] = '\\u0628\\u0646';\n t['\\uFC6E'] = '\\u0628\\u0649';\n t['\\uFC6F'] = '\\u0628\\u064A';\n t['\\uFC70'] = '\\u062A\\u0631';\n t['\\uFC71'] = '\\u062A\\u0632';\n t['\\uFC72'] = '\\u062A\\u0645';\n t['\\uFC73'] = '\\u062A\\u0646';\n t['\\uFC74'] = '\\u062A\\u0649';\n t['\\uFC75'] = '\\u062A\\u064A';\n t['\\uFC76'] = '\\u062B\\u0631';\n t['\\uFC77'] = '\\u062B\\u0632';\n t['\\uFC78'] = '\\u062B\\u0645';\n t['\\uFC79'] = '\\u062B\\u0646';\n t['\\uFC7A'] = '\\u062B\\u0649';\n t['\\uFC7B'] = '\\u062B\\u064A';\n t['\\uFC7C'] = '\\u0641\\u0649';\n t['\\uFC7D'] = '\\u0641\\u064A';\n t['\\uFC7E'] = '\\u0642\\u0649';\n t['\\uFC7F'] = '\\u0642\\u064A';\n t['\\uFC80'] = '\\u0643\\u0627';\n t['\\uFC81'] = '\\u0643\\u0644';\n t['\\uFC82'] = '\\u0643\\u0645';\n t['\\uFC83'] = '\\u0643\\u0649';\n t['\\uFC84'] = '\\u0643\\u064A';\n t['\\uFC85'] = '\\u0644\\u0645';\n t['\\uFC86'] = '\\u0644\\u0649';\n t['\\uFC87'] = '\\u0644\\u064A';\n t['\\uFC88'] = '\\u0645\\u0627';\n t['\\uFC89'] = '\\u0645\\u0645';\n t['\\uFC8A'] = '\\u0646\\u0631';\n t['\\uFC8B'] = '\\u0646\\u0632';\n t['\\uFC8C'] = '\\u0646\\u0645';\n t['\\uFC8D'] = '\\u0646\\u0646';\n t['\\uFC8E'] = '\\u0646\\u0649';\n t['\\uFC8F'] = '\\u0646\\u064A';\n t['\\uFC90'] = '\\u0649\\u0670';\n t['\\uFC91'] = '\\u064A\\u0631';\n t['\\uFC92'] = '\\u064A\\u0632';\n t['\\uFC93'] = '\\u064A\\u0645';\n t['\\uFC94'] = '\\u064A\\u0646';\n t['\\uFC95'] = '\\u064A\\u0649';\n t['\\uFC96'] = '\\u064A\\u064A';\n t['\\uFC97'] = '\\u0626\\u062C';\n t['\\uFC98'] = '\\u0626\\u062D';\n t['\\uFC99'] = '\\u0626\\u062E';\n t['\\uFC9A'] = '\\u0626\\u0645';\n t['\\uFC9B'] = '\\u0626\\u0647';\n t['\\uFC9C'] = '\\u0628\\u062C';\n t['\\uFC9D'] = '\\u0628\\u062D';\n t['\\uFC9E'] = '\\u0628\\u062E';\n t['\\uFC9F'] = '\\u0628\\u0645';\n t['\\uFCA0'] = '\\u0628\\u0647';\n t['\\uFCA1'] = '\\u062A\\u062C';\n t['\\uFCA2'] = '\\u062A\\u062D';\n t['\\uFCA3'] = '\\u062A\\u062E';\n t['\\uFCA4'] = '\\u062A\\u0645';\n t['\\uFCA5'] = '\\u062A\\u0647';\n t['\\uFCA6'] = '\\u062B\\u0645';\n t['\\uFCA7'] = '\\u062C\\u062D';\n t['\\uFCA8'] = '\\u062C\\u0645';\n t['\\uFCA9'] = '\\u062D\\u062C';\n t['\\uFCAA'] = '\\u062D\\u0645';\n t['\\uFCAB'] = '\\u062E\\u062C';\n t['\\uFCAC'] = '\\u062E\\u0645';\n t['\\uFCAD'] = '\\u0633\\u062C';\n t['\\uFCAE'] = '\\u0633\\u062D';\n t['\\uFCAF'] = '\\u0633\\u062E';\n t['\\uFCB0'] = '\\u0633\\u0645';\n t['\\uFCB1'] = '\\u0635\\u062D';\n t['\\uFCB2'] = '\\u0635\\u062E';\n t['\\uFCB3'] = '\\u0635\\u0645';\n t['\\uFCB4'] = '\\u0636\\u062C';\n t['\\uFCB5'] = '\\u0636\\u062D';\n t['\\uFCB6'] = '\\u0636\\u062E';\n t['\\uFCB7'] = '\\u0636\\u0645';\n t['\\uFCB8'] = '\\u0637\\u062D';\n t['\\uFCB9'] = '\\u0638\\u0645';\n t['\\uFCBA'] = '\\u0639\\u062C';\n t['\\uFCBB'] = '\\u0639\\u0645';\n t['\\uFCBC'] = '\\u063A\\u062C';\n t['\\uFCBD'] = '\\u063A\\u0645';\n t['\\uFCBE'] = '\\u0641\\u062C';\n t['\\uFCBF'] = '\\u0641\\u062D';\n t['\\uFCC0'] = '\\u0641\\u062E';\n t['\\uFCC1'] = '\\u0641\\u0645';\n t['\\uFCC2'] = '\\u0642\\u062D';\n t['\\uFCC3'] = '\\u0642\\u0645';\n t['\\uFCC4'] = '\\u0643\\u062C';\n t['\\uFCC5'] = '\\u0643\\u062D';\n t['\\uFCC6'] = '\\u0643\\u062E';\n t['\\uFCC7'] = '\\u0643\\u0644';\n t['\\uFCC8'] = '\\u0643\\u0645';\n t['\\uFCC9'] = '\\u0644\\u062C';\n t['\\uFCCA'] = '\\u0644\\u062D';\n t['\\uFCCB'] = '\\u0644\\u062E';\n t['\\uFCCC'] = '\\u0644\\u0645';\n t['\\uFCCD'] = '\\u0644\\u0647';\n t['\\uFCCE'] = '\\u0645\\u062C';\n t['\\uFCCF'] = '\\u0645\\u062D';\n t['\\uFCD0'] = '\\u0645\\u062E';\n t['\\uFCD1'] = '\\u0645\\u0645';\n t['\\uFCD2'] = '\\u0646\\u062C';\n t['\\uFCD3'] = '\\u0646\\u062D';\n t['\\uFCD4'] = '\\u0646\\u062E';\n t['\\uFCD5'] = '\\u0646\\u0645';\n t['\\uFCD6'] = '\\u0646\\u0647';\n t['\\uFCD7'] = '\\u0647\\u062C';\n t['\\uFCD8'] = '\\u0647\\u0645';\n t['\\uFCD9'] = '\\u0647\\u0670';\n t['\\uFCDA'] = '\\u064A\\u062C';\n t['\\uFCDB'] = '\\u064A\\u062D';\n t['\\uFCDC'] = '\\u064A\\u062E';\n t['\\uFCDD'] = '\\u064A\\u0645';\n t['\\uFCDE'] = '\\u064A\\u0647';\n t['\\uFCDF'] = '\\u0626\\u0645';\n t['\\uFCE0'] = '\\u0626\\u0647';\n t['\\uFCE1'] = '\\u0628\\u0645';\n t['\\uFCE2'] = '\\u0628\\u0647';\n t['\\uFCE3'] = '\\u062A\\u0645';\n t['\\uFCE4'] = '\\u062A\\u0647';\n t['\\uFCE5'] = '\\u062B\\u0645';\n t['\\uFCE6'] = '\\u062B\\u0647';\n t['\\uFCE7'] = '\\u0633\\u0645';\n t['\\uFCE8'] = '\\u0633\\u0647';\n t['\\uFCE9'] = '\\u0634\\u0645';\n t['\\uFCEA'] = '\\u0634\\u0647';\n t['\\uFCEB'] = '\\u0643\\u0644';\n t['\\uFCEC'] = '\\u0643\\u0645';\n t['\\uFCED'] = '\\u0644\\u0645';\n t['\\uFCEE'] = '\\u0646\\u0645';\n t['\\uFCEF'] = '\\u0646\\u0647';\n t['\\uFCF0'] = '\\u064A\\u0645';\n t['\\uFCF1'] = '\\u064A\\u0647';\n t['\\uFCF2'] = '\\u0640\\u064E\\u0651';\n t['\\uFCF3'] = '\\u0640\\u064F\\u0651';\n t['\\uFCF4'] = '\\u0640\\u0650\\u0651';\n t['\\uFCF5'] = '\\u0637\\u0649';\n t['\\uFCF6'] = '\\u0637\\u064A';\n t['\\uFCF7'] = '\\u0639\\u0649';\n t['\\uFCF8'] = '\\u0639\\u064A';\n t['\\uFCF9'] = '\\u063A\\u0649';\n t['\\uFCFA'] = '\\u063A\\u064A';\n t['\\uFCFB'] = '\\u0633\\u0649';\n t['\\uFCFC'] = '\\u0633\\u064A';\n t['\\uFCFD'] = '\\u0634\\u0649';\n t['\\uFCFE'] = '\\u0634\\u064A';\n t['\\uFCFF'] = '\\u062D\\u0649';\n t['\\uFD00'] = '\\u062D\\u064A';\n t['\\uFD01'] = '\\u062C\\u0649';\n t['\\uFD02'] = '\\u062C\\u064A';\n t['\\uFD03'] = '\\u062E\\u0649';\n t['\\uFD04'] = '\\u062E\\u064A';\n t['\\uFD05'] = '\\u0635\\u0649';\n t['\\uFD06'] = '\\u0635\\u064A';\n t['\\uFD07'] = '\\u0636\\u0649';\n t['\\uFD08'] = '\\u0636\\u064A';\n t['\\uFD09'] = '\\u0634\\u062C';\n t['\\uFD0A'] = '\\u0634\\u062D';\n t['\\uFD0B'] = '\\u0634\\u062E';\n t['\\uFD0C'] = '\\u0634\\u0645';\n t['\\uFD0D'] = '\\u0634\\u0631';\n t['\\uFD0E'] = '\\u0633\\u0631';\n t['\\uFD0F'] = '\\u0635\\u0631';\n t['\\uFD10'] = '\\u0636\\u0631';\n t['\\uFD11'] = '\\u0637\\u0649';\n t['\\uFD12'] = '\\u0637\\u064A';\n t['\\uFD13'] = '\\u0639\\u0649';\n t['\\uFD14'] = '\\u0639\\u064A';\n t['\\uFD15'] = '\\u063A\\u0649';\n t['\\uFD16'] = '\\u063A\\u064A';\n t['\\uFD17'] = '\\u0633\\u0649';\n t['\\uFD18'] = '\\u0633\\u064A';\n t['\\uFD19'] = '\\u0634\\u0649';\n t['\\uFD1A'] = '\\u0634\\u064A';\n t['\\uFD1B'] = '\\u062D\\u0649';\n t['\\uFD1C'] = '\\u062D\\u064A';\n t['\\uFD1D'] = '\\u062C\\u0649';\n t['\\uFD1E'] = '\\u062C\\u064A';\n t['\\uFD1F'] = '\\u062E\\u0649';\n t['\\uFD20'] = '\\u062E\\u064A';\n t['\\uFD21'] = '\\u0635\\u0649';\n t['\\uFD22'] = '\\u0635\\u064A';\n t['\\uFD23'] = '\\u0636\\u0649';\n t['\\uFD24'] = '\\u0636\\u064A';\n t['\\uFD25'] = '\\u0634\\u062C';\n t['\\uFD26'] = '\\u0634\\u062D';\n t['\\uFD27'] = '\\u0634\\u062E';\n t['\\uFD28'] = '\\u0634\\u0645';\n t['\\uFD29'] = '\\u0634\\u0631';\n t['\\uFD2A'] = '\\u0633\\u0631';\n t['\\uFD2B'] = '\\u0635\\u0631';\n t['\\uFD2C'] = '\\u0636\\u0631';\n t['\\uFD2D'] = '\\u0634\\u062C';\n t['\\uFD2E'] = '\\u0634\\u062D';\n t['\\uFD2F'] = '\\u0634\\u062E';\n t['\\uFD30'] = '\\u0634\\u0645';\n t['\\uFD31'] = '\\u0633\\u0647';\n t['\\uFD32'] = '\\u0634\\u0647';\n t['\\uFD33'] = '\\u0637\\u0645';\n t['\\uFD34'] = '\\u0633\\u062C';\n t['\\uFD35'] = '\\u0633\\u062D';\n t['\\uFD36'] = '\\u0633\\u062E';\n t['\\uFD37'] = '\\u0634\\u062C';\n t['\\uFD38'] = '\\u0634\\u062D';\n t['\\uFD39'] = '\\u0634\\u062E';\n t['\\uFD3A'] = '\\u0637\\u0645';\n t['\\uFD3B'] = '\\u0638\\u0645';\n t['\\uFD3C'] = '\\u0627\\u064B';\n t['\\uFD3D'] = '\\u0627\\u064B';\n t['\\uFD50'] = '\\u062A\\u062C\\u0645';\n t['\\uFD51'] = '\\u062A\\u062D\\u062C';\n t['\\uFD52'] = '\\u062A\\u062D\\u062C';\n t['\\uFD53'] = '\\u062A\\u062D\\u0645';\n t['\\uFD54'] = '\\u062A\\u062E\\u0645';\n t['\\uFD55'] = '\\u062A\\u0645\\u062C';\n t['\\uFD56'] = '\\u062A\\u0645\\u062D';\n t['\\uFD57'] = '\\u062A\\u0645\\u062E';\n t['\\uFD58'] = '\\u062C\\u0645\\u062D';\n t['\\uFD59'] = '\\u062C\\u0645\\u062D';\n t['\\uFD5A'] = '\\u062D\\u0645\\u064A';\n t['\\uFD5B'] = '\\u062D\\u0645\\u0649';\n t['\\uFD5C'] = '\\u0633\\u062D\\u062C';\n t['\\uFD5D'] = '\\u0633\\u062C\\u062D';\n t['\\uFD5E'] = '\\u0633\\u062C\\u0649';\n t['\\uFD5F'] = '\\u0633\\u0645\\u062D';\n t['\\uFD60'] = '\\u0633\\u0645\\u062D';\n t['\\uFD61'] = '\\u0633\\u0645\\u062C';\n t['\\uFD62'] = '\\u0633\\u0645\\u0645';\n t['\\uFD63'] = '\\u0633\\u0645\\u0645';\n t['\\uFD64'] = '\\u0635\\u062D\\u062D';\n t['\\uFD65'] = '\\u0635\\u062D\\u062D';\n t['\\uFD66'] = '\\u0635\\u0645\\u0645';\n t['\\uFD67'] = '\\u0634\\u062D\\u0645';\n t['\\uFD68'] = '\\u0634\\u062D\\u0645';\n t['\\uFD69'] = '\\u0634\\u062C\\u064A';\n t['\\uFD6A'] = '\\u0634\\u0645\\u062E';\n t['\\uFD6B'] = '\\u0634\\u0645\\u062E';\n t['\\uFD6C'] = '\\u0634\\u0645\\u0645';\n t['\\uFD6D'] = '\\u0634\\u0645\\u0645';\n t['\\uFD6E'] = '\\u0636\\u062D\\u0649';\n t['\\uFD6F'] = '\\u0636\\u062E\\u0645';\n t['\\uFD70'] = '\\u0636\\u062E\\u0645';\n t['\\uFD71'] = '\\u0637\\u0645\\u062D';\n t['\\uFD72'] = '\\u0637\\u0645\\u062D';\n t['\\uFD73'] = '\\u0637\\u0645\\u0645';\n t['\\uFD74'] = '\\u0637\\u0645\\u064A';\n t['\\uFD75'] = '\\u0639\\u062C\\u0645';\n t['\\uFD76'] = '\\u0639\\u0645\\u0645';\n t['\\uFD77'] = '\\u0639\\u0645\\u0645';\n t['\\uFD78'] = '\\u0639\\u0645\\u0649';\n t['\\uFD79'] = '\\u063A\\u0645\\u0645';\n t['\\uFD7A'] = '\\u063A\\u0645\\u064A';\n t['\\uFD7B'] = '\\u063A\\u0645\\u0649';\n t['\\uFD7C'] = '\\u0641\\u062E\\u0645';\n t['\\uFD7D'] = '\\u0641\\u062E\\u0645';\n t['\\uFD7E'] = '\\u0642\\u0645\\u062D';\n t['\\uFD7F'] = '\\u0642\\u0645\\u0645';\n t['\\uFD80'] = '\\u0644\\u062D\\u0645';\n t['\\uFD81'] = '\\u0644\\u062D\\u064A';\n t['\\uFD82'] = '\\u0644\\u062D\\u0649';\n t['\\uFD83'] = '\\u0644\\u062C\\u062C';\n t['\\uFD84'] = '\\u0644\\u062C\\u062C';\n t['\\uFD85'] = '\\u0644\\u062E\\u0645';\n t['\\uFD86'] = '\\u0644\\u062E\\u0645';\n t['\\uFD87'] = '\\u0644\\u0645\\u062D';\n t['\\uFD88'] = '\\u0644\\u0645\\u062D';\n t['\\uFD89'] = '\\u0645\\u062D\\u062C';\n t['\\uFD8A'] = '\\u0645\\u062D\\u0645';\n t['\\uFD8B'] = '\\u0645\\u062D\\u064A';\n t['\\uFD8C'] = '\\u0645\\u062C\\u062D';\n t['\\uFD8D'] = '\\u0645\\u062C\\u0645';\n t['\\uFD8E'] = '\\u0645\\u062E\\u062C';\n t['\\uFD8F'] = '\\u0645\\u062E\\u0645';\n t['\\uFD92'] = '\\u0645\\u062C\\u062E';\n t['\\uFD93'] = '\\u0647\\u0645\\u062C';\n t['\\uFD94'] = '\\u0647\\u0645\\u0645';\n t['\\uFD95'] = '\\u0646\\u062D\\u0645';\n t['\\uFD96'] = '\\u0646\\u062D\\u0649';\n t['\\uFD97'] = '\\u0646\\u062C\\u0645';\n t['\\uFD98'] = '\\u0646\\u062C\\u0645';\n t['\\uFD99'] = '\\u0646\\u062C\\u0649';\n t['\\uFD9A'] = '\\u0646\\u0645\\u064A';\n t['\\uFD9B'] = '\\u0646\\u0645\\u0649';\n t['\\uFD9C'] = '\\u064A\\u0645\\u0645';\n t['\\uFD9D'] = '\\u064A\\u0645\\u0645';\n t['\\uFD9E'] = '\\u0628\\u062E\\u064A';\n t['\\uFD9F'] = '\\u062A\\u062C\\u064A';\n t['\\uFDA0'] = '\\u062A\\u062C\\u0649';\n t['\\uFDA1'] = '\\u062A\\u062E\\u064A';\n t['\\uFDA2'] = '\\u062A\\u062E\\u0649';\n t['\\uFDA3'] = '\\u062A\\u0645\\u064A';\n t['\\uFDA4'] = '\\u062A\\u0645\\u0649';\n t['\\uFDA5'] = '\\u062C\\u0645\\u064A';\n t['\\uFDA6'] = '\\u062C\\u062D\\u0649';\n t['\\uFDA7'] = '\\u062C\\u0645\\u0649';\n t['\\uFDA8'] = '\\u0633\\u062E\\u0649';\n t['\\uFDA9'] = '\\u0635\\u062D\\u064A';\n t['\\uFDAA'] = '\\u0634\\u062D\\u064A';\n t['\\uFDAB'] = '\\u0636\\u062D\\u064A';\n t['\\uFDAC'] = '\\u0644\\u062C\\u064A';\n t['\\uFDAD'] = '\\u0644\\u0645\\u064A';\n t['\\uFDAE'] = '\\u064A\\u062D\\u064A';\n t['\\uFDAF'] = '\\u064A\\u062C\\u064A';\n t['\\uFDB0'] = '\\u064A\\u0645\\u064A';\n t['\\uFDB1'] = '\\u0645\\u0645\\u064A';\n t['\\uFDB2'] = '\\u0642\\u0645\\u064A';\n t['\\uFDB3'] = '\\u0646\\u062D\\u064A';\n t['\\uFDB4'] = '\\u0642\\u0645\\u062D';\n t['\\uFDB5'] = '\\u0644\\u062D\\u0645';\n t['\\uFDB6'] = '\\u0639\\u0645\\u064A';\n t['\\uFDB7'] = '\\u0643\\u0645\\u064A';\n t['\\uFDB8'] = '\\u0646\\u062C\\u062D';\n t['\\uFDB9'] = '\\u0645\\u062E\\u064A';\n t['\\uFDBA'] = '\\u0644\\u062C\\u0645';\n t['\\uFDBB'] = '\\u0643\\u0645\\u0645';\n t['\\uFDBC'] = '\\u0644\\u062C\\u0645';\n t['\\uFDBD'] = '\\u0646\\u062C\\u062D';\n t['\\uFDBE'] = '\\u062C\\u062D\\u064A';\n t['\\uFDBF'] = '\\u062D\\u062C\\u064A';\n t['\\uFDC0'] = '\\u0645\\u062C\\u064A';\n t['\\uFDC1'] = '\\u0641\\u0645\\u064A';\n t['\\uFDC2'] = '\\u0628\\u062D\\u064A';\n t['\\uFDC3'] = '\\u0643\\u0645\\u0645';\n t['\\uFDC4'] = '\\u0639\\u062C\\u0645';\n t['\\uFDC5'] = '\\u0635\\u0645\\u0645';\n t['\\uFDC6'] = '\\u0633\\u062E\\u064A';\n t['\\uFDC7'] = '\\u0646\\u062C\\u064A';\n t['\\uFE49'] = '\\u203E';\n t['\\uFE4A'] = '\\u203E';\n t['\\uFE4B'] = '\\u203E';\n t['\\uFE4C'] = '\\u203E';\n t['\\uFE4D'] = '\\u005F';\n t['\\uFE4E'] = '\\u005F';\n t['\\uFE4F'] = '\\u005F';\n t['\\uFE80'] = '\\u0621';\n t['\\uFE81'] = '\\u0622';\n t['\\uFE82'] = '\\u0622';\n t['\\uFE83'] = '\\u0623';\n t['\\uFE84'] = '\\u0623';\n t['\\uFE85'] = '\\u0624';\n t['\\uFE86'] = '\\u0624';\n t['\\uFE87'] = '\\u0625';\n t['\\uFE88'] = '\\u0625';\n t['\\uFE89'] = '\\u0626';\n t['\\uFE8A'] = '\\u0626';\n t['\\uFE8B'] = '\\u0626';\n t['\\uFE8C'] = '\\u0626';\n t['\\uFE8D'] = '\\u0627';\n t['\\uFE8E'] = '\\u0627';\n t['\\uFE8F'] = '\\u0628';\n t['\\uFE90'] = '\\u0628';\n t['\\uFE91'] = '\\u0628';\n t['\\uFE92'] = '\\u0628';\n t['\\uFE93'] = '\\u0629';\n t['\\uFE94'] = '\\u0629';\n t['\\uFE95'] = '\\u062A';\n t['\\uFE96'] = '\\u062A';\n t['\\uFE97'] = '\\u062A';\n t['\\uFE98'] = '\\u062A';\n t['\\uFE99'] = '\\u062B';\n t['\\uFE9A'] = '\\u062B';\n t['\\uFE9B'] = '\\u062B';\n t['\\uFE9C'] = '\\u062B';\n t['\\uFE9D'] = '\\u062C';\n t['\\uFE9E'] = '\\u062C';\n t['\\uFE9F'] = '\\u062C';\n t['\\uFEA0'] = '\\u062C';\n t['\\uFEA1'] = '\\u062D';\n t['\\uFEA2'] = '\\u062D';\n t['\\uFEA3'] = '\\u062D';\n t['\\uFEA4'] = '\\u062D';\n t['\\uFEA5'] = '\\u062E';\n t['\\uFEA6'] = '\\u062E';\n t['\\uFEA7'] = '\\u062E';\n t['\\uFEA8'] = '\\u062E';\n t['\\uFEA9'] = '\\u062F';\n t['\\uFEAA'] = '\\u062F';\n t['\\uFEAB'] = '\\u0630';\n t['\\uFEAC'] = '\\u0630';\n t['\\uFEAD'] = '\\u0631';\n t['\\uFEAE'] = '\\u0631';\n t['\\uFEAF'] = '\\u0632';\n t['\\uFEB0'] = '\\u0632';\n t['\\uFEB1'] = '\\u0633';\n t['\\uFEB2'] = '\\u0633';\n t['\\uFEB3'] = '\\u0633';\n t['\\uFEB4'] = '\\u0633';\n t['\\uFEB5'] = '\\u0634';\n t['\\uFEB6'] = '\\u0634';\n t['\\uFEB7'] = '\\u0634';\n t['\\uFEB8'] = '\\u0634';\n t['\\uFEB9'] = '\\u0635';\n t['\\uFEBA'] = '\\u0635';\n t['\\uFEBB'] = '\\u0635';\n t['\\uFEBC'] = '\\u0635';\n t['\\uFEBD'] = '\\u0636';\n t['\\uFEBE'] = '\\u0636';\n t['\\uFEBF'] = '\\u0636';\n t['\\uFEC0'] = '\\u0636';\n t['\\uFEC1'] = '\\u0637';\n t['\\uFEC2'] = '\\u0637';\n t['\\uFEC3'] = '\\u0637';\n t['\\uFEC4'] = '\\u0637';\n t['\\uFEC5'] = '\\u0638';\n t['\\uFEC6'] = '\\u0638';\n t['\\uFEC7'] = '\\u0638';\n t['\\uFEC8'] = '\\u0638';\n t['\\uFEC9'] = '\\u0639';\n t['\\uFECA'] = '\\u0639';\n t['\\uFECB'] = '\\u0639';\n t['\\uFECC'] = '\\u0639';\n t['\\uFECD'] = '\\u063A';\n t['\\uFECE'] = '\\u063A';\n t['\\uFECF'] = '\\u063A';\n t['\\uFED0'] = '\\u063A';\n t['\\uFED1'] = '\\u0641';\n t['\\uFED2'] = '\\u0641';\n t['\\uFED3'] = '\\u0641';\n t['\\uFED4'] = '\\u0641';\n t['\\uFED5'] = '\\u0642';\n t['\\uFED6'] = '\\u0642';\n t['\\uFED7'] = '\\u0642';\n t['\\uFED8'] = '\\u0642';\n t['\\uFED9'] = '\\u0643';\n t['\\uFEDA'] = '\\u0643';\n t['\\uFEDB'] = '\\u0643';\n t['\\uFEDC'] = '\\u0643';\n t['\\uFEDD'] = '\\u0644';\n t['\\uFEDE'] = '\\u0644';\n t['\\uFEDF'] = '\\u0644';\n t['\\uFEE0'] = '\\u0644';\n t['\\uFEE1'] = '\\u0645';\n t['\\uFEE2'] = '\\u0645';\n t['\\uFEE3'] = '\\u0645';\n t['\\uFEE4'] = '\\u0645';\n t['\\uFEE5'] = '\\u0646';\n t['\\uFEE6'] = '\\u0646';\n t['\\uFEE7'] = '\\u0646';\n t['\\uFEE8'] = '\\u0646';\n t['\\uFEE9'] = '\\u0647';\n t['\\uFEEA'] = '\\u0647';\n t['\\uFEEB'] = '\\u0647';\n t['\\uFEEC'] = '\\u0647';\n t['\\uFEED'] = '\\u0648';\n t['\\uFEEE'] = '\\u0648';\n t['\\uFEEF'] = '\\u0649';\n t['\\uFEF0'] = '\\u0649';\n t['\\uFEF1'] = '\\u064A';\n t['\\uFEF2'] = '\\u064A';\n t['\\uFEF3'] = '\\u064A';\n t['\\uFEF4'] = '\\u064A';\n t['\\uFEF5'] = '\\u0644\\u0622';\n t['\\uFEF6'] = '\\u0644\\u0622';\n t['\\uFEF7'] = '\\u0644\\u0623';\n t['\\uFEF8'] = '\\u0644\\u0623';\n t['\\uFEF9'] = '\\u0644\\u0625';\n t['\\uFEFA'] = '\\u0644\\u0625';\n t['\\uFEFB'] = '\\u0644\\u0627';\n t['\\uFEFC'] = '\\u0644\\u0627';\n});\nfunction reverseIfRtl(chars) {\n var charsLength = chars.length;\n if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\n  return chars;\n }\n var s = '';\n for (var ii = charsLength - 1; ii >= 0; ii--) {\n  s += chars[ii];\n }\n return s;\n}\nexports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\nexports.reverseIfRtl = reverseIfRtl;\nexports.getUnicodeRangeFor = getUnicodeRangeFor;\nexports.getNormalizedUnicodes = getNormalizedUnicodes;\nexports.getUnicodeForGlyph = getUnicodeForGlyph;\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar coreWorker = __w_pdfjs_require__(8);\nvar globalScope = sharedUtil.globalScope;\nvar OK_RESPONSE = 200;\nvar PARTIAL_CONTENT_RESPONSE = 206;\nfunction NetworkManager(url, args) {\n this.url = url;\n args = args || {};\n this.isHttp = /^https?:/i.test(url);\n this.httpHeaders = this.isHttp && args.httpHeaders || {};\n this.withCredentials = args.withCredentials || false;\n this.getXhr = args.getXhr || function NetworkManager_getXhr() {\n  return new XMLHttpRequest();\n };\n this.currXhrId = 0;\n this.pendingRequests = Object.create(null);\n this.loadedRequests = Object.create(null);\n}\nfunction getArrayBuffer(xhr) {\n var data = xhr.response;\n if (typeof data !== 'string') {\n  return data;\n }\n var length = data.length;\n var array = new Uint8Array(length);\n for (var i = 0; i < length; i++) {\n  array[i] = data.charCodeAt(i) & 0xFF;\n }\n return array.buffer;\n}\nvar supportsMozChunked = function supportsMozChunkedClosure() {\n try {\n  var x = new XMLHttpRequest();\n  x.open('GET', globalScope.location.href);\n  x.responseType = 'moz-chunked-arraybuffer';\n  return x.responseType === 'moz-chunked-arraybuffer';\n } catch (e) {\n  return false;\n }\n}();\nNetworkManager.prototype = {\n requestRange: function NetworkManager_requestRange(begin, end, listeners) {\n  var args = {\n   begin: begin,\n   end: end\n  };\n  for (var prop in listeners) {\n   args[prop] = listeners[prop];\n  }\n  return this.request(args);\n },\n requestFull: function NetworkManager_requestFull(listeners) {\n  return this.request(listeners);\n },\n request: function NetworkManager_request(args) {\n  var xhr = this.getXhr();\n  var xhrId = this.currXhrId++;\n  var pendingRequest = this.pendingRequests[xhrId] = { xhr: xhr };\n  xhr.open('GET', this.url);\n  xhr.withCredentials = this.withCredentials;\n  for (var property in this.httpHeaders) {\n   var value = this.httpHeaders[property];\n   if (typeof value === 'undefined') {\n    continue;\n   }\n   xhr.setRequestHeader(property, value);\n  }\n  if (this.isHttp && 'begin' in args && 'end' in args) {\n   var rangeStr = args.begin + '-' + (args.end - 1);\n   xhr.setRequestHeader('Range', 'bytes=' + rangeStr);\n   pendingRequest.expectedStatus = 206;\n  } else {\n   pendingRequest.expectedStatus = 200;\n  }\n  var useMozChunkedLoading = supportsMozChunked && !!args.onProgressiveData;\n  if (useMozChunkedLoading) {\n   xhr.responseType = 'moz-chunked-arraybuffer';\n   pendingRequest.onProgressiveData = args.onProgressiveData;\n   pendingRequest.mozChunked = true;\n  } else {\n   xhr.responseType = 'arraybuffer';\n  }\n  if (args.onError) {\n   xhr.onerror = function (evt) {\n    args.onError(xhr.status);\n   };\n  }\n  xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n  xhr.onprogress = this.onProgress.bind(this, xhrId);\n  pendingRequest.onHeadersReceived = args.onHeadersReceived;\n  pendingRequest.onDone = args.onDone;\n  pendingRequest.onError = args.onError;\n  pendingRequest.onProgress = args.onProgress;\n  xhr.send(null);\n  return xhrId;\n },\n onProgress: function NetworkManager_onProgress(xhrId, evt) {\n  var pendingRequest = this.pendingRequests[xhrId];\n  if (!pendingRequest) {\n   return;\n  }\n  if (pendingRequest.mozChunked) {\n   var chunk = getArrayBuffer(pendingRequest.xhr);\n   pendingRequest.onProgressiveData(chunk);\n  }\n  var onProgress = pendingRequest.onProgress;\n  if (onProgress) {\n   onProgress(evt);\n  }\n },\n onStateChange: function NetworkManager_onStateChange(xhrId, evt) {\n  var pendingRequest = this.pendingRequests[xhrId];\n  if (!pendingRequest) {\n   return;\n  }\n  var xhr = pendingRequest.xhr;\n  if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n   pendingRequest.onHeadersReceived();\n   delete pendingRequest.onHeadersReceived;\n  }\n  if (xhr.readyState !== 4) {\n   return;\n  }\n  if (!(xhrId in this.pendingRequests)) {\n   return;\n  }\n  delete this.pendingRequests[xhrId];\n  if (xhr.status === 0 && this.isHttp) {\n   if (pendingRequest.onError) {\n    pendingRequest.onError(xhr.status);\n   }\n   return;\n  }\n  var xhrStatus = xhr.status || OK_RESPONSE;\n  var ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n  if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) {\n   if (pendingRequest.onError) {\n    pendingRequest.onError(xhr.status);\n   }\n   return;\n  }\n  this.loadedRequests[xhrId] = true;\n  var chunk = getArrayBuffer(xhr);\n  if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n   var rangeHeader = xhr.getResponseHeader('Content-Range');\n   var matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n   var begin = parseInt(matches[1], 10);\n   pendingRequest.onDone({\n    begin: begin,\n    chunk: chunk\n   });\n  } else if (pendingRequest.onProgressiveData) {\n   pendingRequest.onDone(null);\n  } else if (chunk) {\n   pendingRequest.onDone({\n    begin: 0,\n    chunk: chunk\n   });\n  } else if (pendingRequest.onError) {\n   pendingRequest.onError(xhr.status);\n  }\n },\n hasPendingRequests: function NetworkManager_hasPendingRequests() {\n  for (var xhrId in this.pendingRequests) {\n   return true;\n  }\n  return false;\n },\n getRequestXhr: function NetworkManager_getXhr(xhrId) {\n  return this.pendingRequests[xhrId].xhr;\n },\n isStreamingRequest: function NetworkManager_isStreamingRequest(xhrId) {\n  return !!this.pendingRequests[xhrId].onProgressiveData;\n },\n isPendingRequest: function NetworkManager_isPendingRequest(xhrId) {\n  return xhrId in this.pendingRequests;\n },\n isLoadedRequest: function NetworkManager_isLoadedRequest(xhrId) {\n  return xhrId in this.loadedRequests;\n },\n abortAllRequests: function NetworkManager_abortAllRequests() {\n  for (var xhrId in this.pendingRequests) {\n   this.abortRequest(xhrId | 0);\n  }\n },\n abortRequest: function NetworkManager_abortRequest(xhrId) {\n  var xhr = this.pendingRequests[xhrId].xhr;\n  delete this.pendingRequests[xhrId];\n  xhr.abort();\n }\n};\nvar assert = sharedUtil.assert;\nvar createPromiseCapability = sharedUtil.createPromiseCapability;\nvar isInt = sharedUtil.isInt;\nvar MissingPDFException = sharedUtil.MissingPDFException;\nvar UnexpectedResponseException = sharedUtil.UnexpectedResponseException;\nfunction PDFNetworkStream(options) {\n this._options = options;\n var source = options.source;\n this._manager = new NetworkManager(source.url, {\n  httpHeaders: source.httpHeaders,\n  withCredentials: source.withCredentials\n });\n this._rangeChunkSize = source.rangeChunkSize;\n this._fullRequestReader = null;\n this._rangeRequestReaders = [];\n}\nPDFNetworkStream.prototype = {\n _onRangeRequestReaderClosed: function PDFNetworkStream_onRangeRequestReaderClosed(reader) {\n  var i = this._rangeRequestReaders.indexOf(reader);\n  if (i >= 0) {\n   this._rangeRequestReaders.splice(i, 1);\n  }\n },\n getFullReader: function PDFNetworkStream_getFullReader() {\n  assert(!this._fullRequestReader);\n  this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._options);\n  return this._fullRequestReader;\n },\n getRangeReader: function PDFNetworkStream_getRangeReader(begin, end) {\n  var reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end);\n  reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n  this._rangeRequestReaders.push(reader);\n  return reader;\n },\n cancelAllRequests: function PDFNetworkStream_cancelAllRequests(reason) {\n  if (this._fullRequestReader) {\n   this._fullRequestReader.cancel(reason);\n  }\n  var readers = this._rangeRequestReaders.slice(0);\n  readers.forEach(function (reader) {\n   reader.cancel(reason);\n  });\n }\n};\nfunction PDFNetworkStreamFullRequestReader(manager, options) {\n this._manager = manager;\n var source = options.source;\n var args = {\n  onHeadersReceived: this._onHeadersReceived.bind(this),\n  onProgressiveData: source.disableStream ? null : this._onProgressiveData.bind(this),\n  onDone: this._onDone.bind(this),\n  onError: this._onError.bind(this),\n  onProgress: this._onProgress.bind(this)\n };\n this._url = source.url;\n this._fullRequestId = manager.requestFull(args);\n this._headersReceivedCapability = createPromiseCapability();\n this._disableRange = options.disableRange || false;\n this._contentLength = source.length;\n this._rangeChunkSize = source.rangeChunkSize;\n if (!this._rangeChunkSize && !this._disableRange) {\n  this._disableRange = true;\n }\n this._isStreamingSupported = false;\n this._isRangeSupported = false;\n this._cachedChunks = [];\n this._requests = [];\n this._done = false;\n this._storedError = undefined;\n this.onProgress = null;\n}\nPDFNetworkStreamFullRequestReader.prototype = {\n _validateRangeRequestCapabilities: function PDFNetworkStreamFullRequestReader_validateRangeRequestCapabilities() {\n  if (this._disableRange) {\n   return false;\n  }\n  var networkManager = this._manager;\n  if (!networkManager.isHttp) {\n   return false;\n  }\n  var fullRequestXhrId = this._fullRequestId;\n  var fullRequestXhr = networkManager.getRequestXhr(fullRequestXhrId);\n  if (fullRequestXhr.getResponseHeader('Accept-Ranges') !== 'bytes') {\n   return false;\n  }\n  var contentEncoding = fullRequestXhr.getResponseHeader('Content-Encoding') || 'identity';\n  if (contentEncoding !== 'identity') {\n   return false;\n  }\n  var length = fullRequestXhr.getResponseHeader('Content-Length');\n  length = parseInt(length, 10);\n  if (!isInt(length)) {\n   return false;\n  }\n  this._contentLength = length;\n  if (length <= 2 * this._rangeChunkSize) {\n   return false;\n  }\n  return true;\n },\n _onHeadersReceived: function PDFNetworkStreamFullRequestReader_onHeadersReceived() {\n  if (this._validateRangeRequestCapabilities()) {\n   this._isRangeSupported = true;\n  }\n  var networkManager = this._manager;\n  var fullRequestXhrId = this._fullRequestId;\n  if (networkManager.isStreamingRequest(fullRequestXhrId)) {\n   this._isStreamingSupported = true;\n  } else if (this._isRangeSupported) {\n   networkManager.abortRequest(fullRequestXhrId);\n  }\n  this._headersReceivedCapability.resolve();\n },\n _onProgressiveData: function PDFNetworkStreamFullRequestReader_onProgressiveData(chunk) {\n  if (this._requests.length > 0) {\n   var requestCapability = this._requests.shift();\n   requestCapability.resolve({\n    value: chunk,\n    done: false\n   });\n  } else {\n   this._cachedChunks.push(chunk);\n  }\n },\n _onDone: function PDFNetworkStreamFullRequestReader_onDone(args) {\n  if (args) {\n   this._onProgressiveData(args.chunk);\n  }\n  this._done = true;\n  if (this._cachedChunks.length > 0) {\n   return;\n  }\n  this._requests.forEach(function (requestCapability) {\n   requestCapability.resolve({\n    value: undefined,\n    done: true\n   });\n  });\n  this._requests = [];\n },\n _onError: function PDFNetworkStreamFullRequestReader_onError(status) {\n  var url = this._url;\n  var exception;\n  if (status === 404 || status === 0 && /^file:/.test(url)) {\n   exception = new MissingPDFException('Missing PDF \"' + url + '\".');\n  } else {\n   exception = new UnexpectedResponseException('Unexpected server response (' + status + ') while retrieving PDF \"' + url + '\".', status);\n  }\n  this._storedError = exception;\n  this._headersReceivedCapability.reject(exception);\n  this._requests.forEach(function (requestCapability) {\n   requestCapability.reject(exception);\n  });\n  this._requests = [];\n  this._cachedChunks = [];\n },\n _onProgress: function PDFNetworkStreamFullRequestReader_onProgress(data) {\n  if (this.onProgress) {\n   this.onProgress({\n    loaded: data.loaded,\n    total: data.lengthComputable ? data.total : this._contentLength\n   });\n  }\n },\n get isRangeSupported() {\n  return this._isRangeSupported;\n },\n get isStreamingSupported() {\n  return this._isStreamingSupported;\n },\n get contentLength() {\n  return this._contentLength;\n },\n get headersReady() {\n  return this._headersReceivedCapability.promise;\n },\n read: function PDFNetworkStreamFullRequestReader_read() {\n  if (this._storedError) {\n   return Promise.reject(this._storedError);\n  }\n  if (this._cachedChunks.length > 0) {\n   var chunk = this._cachedChunks.shift();\n   return Promise.resolve(chunk);\n  }\n  if (this._done) {\n   return Promise.resolve({\n    value: undefined,\n    done: true\n   });\n  }\n  var requestCapability = createPromiseCapability();\n  this._requests.push(requestCapability);\n  return requestCapability.promise;\n },\n cancel: function PDFNetworkStreamFullRequestReader_cancel(reason) {\n  this._done = true;\n  this._headersReceivedCapability.reject(reason);\n  this._requests.forEach(function (requestCapability) {\n   requestCapability.resolve({\n    value: undefined,\n    done: true\n   });\n  });\n  this._requests = [];\n  if (this._manager.isPendingRequest(this._fullRequestId)) {\n   this._manager.abortRequest(this._fullRequestId);\n  }\n  this._fullRequestReader = null;\n }\n};\nfunction PDFNetworkStreamRangeRequestReader(manager, begin, end) {\n this._manager = manager;\n var args = {\n  onDone: this._onDone.bind(this),\n  onProgress: this._onProgress.bind(this)\n };\n this._requestId = manager.requestRange(begin, end, args);\n this._requests = [];\n this._queuedChunk = null;\n this._done = false;\n this.onProgress = null;\n this.onClosed = null;\n}\nPDFNetworkStreamRangeRequestReader.prototype = {\n _close: function PDFNetworkStreamRangeRequestReader_close() {\n  if (this.onClosed) {\n   this.onClosed(this);\n  }\n },\n _onDone: function PDFNetworkStreamRangeRequestReader_onDone(data) {\n  var chunk = data.chunk;\n  if (this._requests.length > 0) {\n   var requestCapability = this._requests.shift();\n   requestCapability.resolve({\n    value: chunk,\n    done: false\n   });\n  } else {\n   this._queuedChunk = chunk;\n  }\n  this._done = true;\n  this._requests.forEach(function (requestCapability) {\n   requestCapability.resolve({\n    value: undefined,\n    done: true\n   });\n  });\n  this._requests = [];\n  this._close();\n },\n _onProgress: function PDFNetworkStreamRangeRequestReader_onProgress(evt) {\n  if (!this.isStreamingSupported && this.onProgress) {\n   this.onProgress({ loaded: evt.loaded });\n  }\n },\n get isStreamingSupported() {\n  return false;\n },\n read: function PDFNetworkStreamRangeRequestReader_read() {\n  if (this._queuedChunk !== null) {\n   var chunk = this._queuedChunk;\n   this._queuedChunk = null;\n   return Promise.resolve({\n    value: chunk,\n    done: false\n   });\n  }\n  if (this._done) {\n   return Promise.resolve({\n    value: undefined,\n    done: true\n   });\n  }\n  var requestCapability = createPromiseCapability();\n  this._requests.push(requestCapability);\n  return requestCapability.promise;\n },\n cancel: function PDFNetworkStreamRangeRequestReader_cancel(reason) {\n  this._done = true;\n  this._requests.forEach(function (requestCapability) {\n   requestCapability.resolve({\n    value: undefined,\n    done: true\n   });\n  });\n  this._requests = [];\n  if (this._manager.isPendingRequest(this._requestId)) {\n   this._manager.abortRequest(this._requestId);\n  }\n  this._close();\n }\n};\ncoreWorker.setPDFNetworkStreamClass(PDFNetworkStream);\nexports.PDFNetworkStream = PDFNetworkStream;\nexports.NetworkManager = NetworkManager;\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar coreStream = __w_pdfjs_require__(2);\nvar coreColorSpace = __w_pdfjs_require__(3);\nvar coreObj = __w_pdfjs_require__(16);\nvar coreEvaluator = __w_pdfjs_require__(14);\nvar AnnotationBorderStyleType = sharedUtil.AnnotationBorderStyleType;\nvar AnnotationFieldFlag = sharedUtil.AnnotationFieldFlag;\nvar AnnotationFlag = sharedUtil.AnnotationFlag;\nvar AnnotationType = sharedUtil.AnnotationType;\nvar OPS = sharedUtil.OPS;\nvar Util = sharedUtil.Util;\nvar isArray = sharedUtil.isArray;\nvar isInt = sharedUtil.isInt;\nvar stringToBytes = sharedUtil.stringToBytes;\nvar stringToPDFString = sharedUtil.stringToPDFString;\nvar warn = sharedUtil.warn;\nvar Dict = corePrimitives.Dict;\nvar isDict = corePrimitives.isDict;\nvar isName = corePrimitives.isName;\nvar isRef = corePrimitives.isRef;\nvar isStream = corePrimitives.isStream;\nvar Stream = coreStream.Stream;\nvar ColorSpace = coreColorSpace.ColorSpace;\nvar Catalog = coreObj.Catalog;\nvar ObjectLoader = coreObj.ObjectLoader;\nvar FileSpec = coreObj.FileSpec;\nvar OperatorList = coreEvaluator.OperatorList;\nfunction AnnotationFactory() {\n}\nAnnotationFactory.prototype = {\n create: function AnnotationFactory_create(xref, ref, pdfManager, idFactory) {\n  var dict = xref.fetchIfRef(ref);\n  if (!isDict(dict)) {\n   return;\n  }\n  var id = isRef(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\n  var subtype = dict.get('Subtype');\n  subtype = isName(subtype) ? subtype.name : null;\n  var parameters = {\n   xref: xref,\n   dict: dict,\n   ref: isRef(ref) ? ref : null,\n   subtype: subtype,\n   id: id,\n   pdfManager: pdfManager\n  };\n  switch (subtype) {\n  case 'Link':\n   return new LinkAnnotation(parameters);\n  case 'Text':\n   return new TextAnnotation(parameters);\n  case 'Widget':\n   var fieldType = Util.getInheritableProperty(dict, 'FT');\n   fieldType = isName(fieldType) ? fieldType.name : null;\n   switch (fieldType) {\n   case 'Tx':\n    return new TextWidgetAnnotation(parameters);\n   case 'Btn':\n    return new ButtonWidgetAnnotation(parameters);\n   case 'Ch':\n    return new ChoiceWidgetAnnotation(parameters);\n   }\n   warn('Unimplemented widget field type \"' + fieldType + '\", ' + 'falling back to base field type.');\n   return new WidgetAnnotation(parameters);\n  case 'Popup':\n   return new PopupAnnotation(parameters);\n  case 'Highlight':\n   return new HighlightAnnotation(parameters);\n  case 'Underline':\n   return new UnderlineAnnotation(parameters);\n  case 'Squiggly':\n   return new SquigglyAnnotation(parameters);\n  case 'StrikeOut':\n   return new StrikeOutAnnotation(parameters);\n  case 'FileAttachment':\n   return new FileAttachmentAnnotation(parameters);\n  default:\n   if (!subtype) {\n    warn('Annotation is missing the required /Subtype.');\n   } else {\n    warn('Unimplemented annotation type \"' + subtype + '\", ' + 'falling back to base annotation.');\n   }\n   return new Annotation(parameters);\n  }\n }\n};\nvar Annotation = function AnnotationClosure() {\n function getTransformMatrix(rect, bbox, matrix) {\n  var bounds = Util.getAxialAlignedBoundingBox(bbox, matrix);\n  var minX = bounds[0];\n  var minY = bounds[1];\n  var maxX = bounds[2];\n  var maxY = bounds[3];\n  if (minX === maxX || minY === maxY) {\n   return [\n    1,\n    0,\n    0,\n    1,\n    rect[0],\n    rect[1]\n   ];\n  }\n  var xRatio = (rect[2] - rect[0]) / (maxX - minX);\n  var yRatio = (rect[3] - rect[1]) / (maxY - minY);\n  return [\n   xRatio,\n   0,\n   0,\n   yRatio,\n   rect[0] - minX * xRatio,\n   rect[1] - minY * yRatio\n  ];\n }\n function Annotation(params) {\n  var dict = params.dict;\n  this.setFlags(dict.get('F'));\n  this.setRectangle(dict.getArray('Rect'));\n  this.setColor(dict.getArray('C'));\n  this.setBorderStyle(dict);\n  this.setAppearance(dict);\n  this.data = {};\n  this.data.id = params.id;\n  this.data.subtype = params.subtype;\n  this.data.annotationFlags = this.flags;\n  this.data.rect = this.rectangle;\n  this.data.color = this.color;\n  this.data.borderStyle = this.borderStyle;\n  this.data.hasAppearance = !!this.appearance;\n }\n Annotation.prototype = {\n  _hasFlag: function Annotation_hasFlag(flags, flag) {\n   return !!(flags & flag);\n  },\n  _isViewable: function Annotation_isViewable(flags) {\n   return !this._hasFlag(flags, AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, AnnotationFlag.HIDDEN) && !this._hasFlag(flags, AnnotationFlag.NOVIEW);\n  },\n  _isPrintable: function AnnotationFlag_isPrintable(flags) {\n   return this._hasFlag(flags, AnnotationFlag.PRINT) && !this._hasFlag(flags, AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, AnnotationFlag.HIDDEN);\n  },\n  get viewable() {\n   if (this.flags === 0) {\n    return true;\n   }\n   return this._isViewable(this.flags);\n  },\n  get printable() {\n   if (this.flags === 0) {\n    return false;\n   }\n   return this._isPrintable(this.flags);\n  },\n  setFlags: function Annotation_setFlags(flags) {\n   this.flags = isInt(flags) && flags > 0 ? flags : 0;\n  },\n  hasFlag: function Annotation_hasFlag(flag) {\n   return this._hasFlag(this.flags, flag);\n  },\n  setRectangle: function Annotation_setRectangle(rectangle) {\n   if (isArray(rectangle) && rectangle.length === 4) {\n    this.rectangle = Util.normalizeRect(rectangle);\n   } else {\n    this.rectangle = [\n     0,\n     0,\n     0,\n     0\n    ];\n   }\n  },\n  setColor: function Annotation_setColor(color) {\n   var rgbColor = new Uint8Array(3);\n   if (!isArray(color)) {\n    this.color = rgbColor;\n    return;\n   }\n   switch (color.length) {\n   case 0:\n    this.color = null;\n    break;\n   case 1:\n    ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\n    this.color = rgbColor;\n    break;\n   case 3:\n    ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\n    this.color = rgbColor;\n    break;\n   case 4:\n    ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\n    this.color = rgbColor;\n    break;\n   default:\n    this.color = rgbColor;\n    break;\n   }\n  },\n  setBorderStyle: function Annotation_setBorderStyle(borderStyle) {\n   this.borderStyle = new AnnotationBorderStyle();\n   if (!isDict(borderStyle)) {\n    return;\n   }\n   if (borderStyle.has('BS')) {\n    var dict = borderStyle.get('BS');\n    var dictType = dict.get('Type');\n    if (!dictType || isName(dictType, 'Border')) {\n     this.borderStyle.setWidth(dict.get('W'));\n     this.borderStyle.setStyle(dict.get('S'));\n     this.borderStyle.setDashArray(dict.getArray('D'));\n    }\n   } else if (borderStyle.has('Border')) {\n    var array = borderStyle.getArray('Border');\n    if (isArray(array) && array.length >= 3) {\n     this.borderStyle.setHorizontalCornerRadius(array[0]);\n     this.borderStyle.setVerticalCornerRadius(array[1]);\n     this.borderStyle.setWidth(array[2]);\n     if (array.length === 4) {\n      this.borderStyle.setDashArray(array[3]);\n     }\n    }\n   } else {\n    this.borderStyle.setWidth(0);\n   }\n  },\n  setAppearance: function Annotation_setAppearance(dict) {\n   this.appearance = null;\n   var appearanceStates = dict.get('AP');\n   if (!isDict(appearanceStates)) {\n    return;\n   }\n   var normalAppearanceState = appearanceStates.get('N');\n   if (isStream(normalAppearanceState)) {\n    this.appearance = normalAppearanceState;\n    return;\n   }\n   if (!isDict(normalAppearanceState)) {\n    return;\n   }\n   var as = dict.get('AS');\n   if (!isName(as) || !normalAppearanceState.has(as.name)) {\n    return;\n   }\n   this.appearance = normalAppearanceState.get(as.name);\n  },\n  _preparePopup: function Annotation_preparePopup(dict) {\n   if (!dict.has('C')) {\n    this.data.color = null;\n   }\n   this.data.hasPopup = dict.has('Popup');\n   this.data.title = stringToPDFString(dict.get('T') || '');\n   this.data.contents = stringToPDFString(dict.get('Contents') || '');\n  },\n  loadResources: function Annotation_loadResources(keys) {\n   return new Promise(function (resolve, reject) {\n    this.appearance.dict.getAsync('Resources').then(function (resources) {\n     if (!resources) {\n      resolve();\n      return;\n     }\n     var objectLoader = new ObjectLoader(resources.map, keys, resources.xref);\n     objectLoader.load().then(function () {\n      resolve(resources);\n     }, reject);\n    }, reject);\n   }.bind(this));\n  },\n  getOperatorList: function Annotation_getOperatorList(evaluator, task, renderForms) {\n   if (!this.appearance) {\n    return Promise.resolve(new OperatorList());\n   }\n   var data = this.data;\n   var appearanceDict = this.appearance.dict;\n   var resourcesPromise = this.loadResources([\n    'ExtGState',\n    'ColorSpace',\n    'Pattern',\n    'Shading',\n    'XObject',\n    'Font'\n   ]);\n   var bbox = appearanceDict.getArray('BBox') || [\n    0,\n    0,\n    1,\n    1\n   ];\n   var matrix = appearanceDict.getArray('Matrix') || [\n    1,\n    0,\n    0,\n    1,\n    0,\n    0\n   ];\n   var transform = getTransformMatrix(data.rect, bbox, matrix);\n   var self = this;\n   return resourcesPromise.then(function (resources) {\n    var opList = new OperatorList();\n    opList.addOp(OPS.beginAnnotation, [\n     data.rect,\n     transform,\n     matrix\n    ]);\n    return evaluator.getOperatorList(self.appearance, task, resources, opList).then(function () {\n     opList.addOp(OPS.endAnnotation, []);\n     self.appearance.reset();\n     return opList;\n    });\n   });\n  }\n };\n return Annotation;\n}();\nvar AnnotationBorderStyle = function AnnotationBorderStyleClosure() {\n function AnnotationBorderStyle() {\n  this.width = 1;\n  this.style = AnnotationBorderStyleType.SOLID;\n  this.dashArray = [3];\n  this.horizontalCornerRadius = 0;\n  this.verticalCornerRadius = 0;\n }\n AnnotationBorderStyle.prototype = {\n  setWidth: function AnnotationBorderStyle_setWidth(width) {\n   if (width === (width | 0)) {\n    this.width = width;\n   }\n  },\n  setStyle: function AnnotationBorderStyle_setStyle(style) {\n   if (!style) {\n    return;\n   }\n   switch (style.name) {\n   case 'S':\n    this.style = AnnotationBorderStyleType.SOLID;\n    break;\n   case 'D':\n    this.style = AnnotationBorderStyleType.DASHED;\n    break;\n   case 'B':\n    this.style = AnnotationBorderStyleType.BEVELED;\n    break;\n   case 'I':\n    this.style = AnnotationBorderStyleType.INSET;\n    break;\n   case 'U':\n    this.style = AnnotationBorderStyleType.UNDERLINE;\n    break;\n   default:\n    break;\n   }\n  },\n  setDashArray: function AnnotationBorderStyle_setDashArray(dashArray) {\n   if (isArray(dashArray) && dashArray.length > 0) {\n    var isValid = true;\n    var allZeros = true;\n    for (var i = 0, len = dashArray.length; i < len; i++) {\n     var element = dashArray[i];\n     var validNumber = +element >= 0;\n     if (!validNumber) {\n      isValid = false;\n      break;\n     } else if (element > 0) {\n      allZeros = false;\n     }\n    }\n    if (isValid && !allZeros) {\n     this.dashArray = dashArray;\n    } else {\n     this.width = 0;\n    }\n   } else if (dashArray) {\n    this.width = 0;\n   }\n  },\n  setHorizontalCornerRadius: function AnnotationBorderStyle_setHorizontalCornerRadius(radius) {\n   if (radius === (radius | 0)) {\n    this.horizontalCornerRadius = radius;\n   }\n  },\n  setVerticalCornerRadius: function AnnotationBorderStyle_setVerticalCornerRadius(radius) {\n   if (radius === (radius | 0)) {\n    this.verticalCornerRadius = radius;\n   }\n  }\n };\n return AnnotationBorderStyle;\n}();\nvar WidgetAnnotation = function WidgetAnnotationClosure() {\n function WidgetAnnotation(params) {\n  Annotation.call(this, params);\n  var dict = params.dict;\n  var data = this.data;\n  data.annotationType = AnnotationType.WIDGET;\n  data.fieldName = this._constructFieldName(dict);\n  data.fieldValue = Util.getInheritableProperty(dict, 'V', true);\n  data.alternativeText = stringToPDFString(dict.get('TU') || '');\n  data.defaultAppearance = Util.getInheritableProperty(dict, 'DA') || '';\n  var fieldType = Util.getInheritableProperty(dict, 'FT');\n  data.fieldType = isName(fieldType) ? fieldType.name : null;\n  this.fieldResources = Util.getInheritableProperty(dict, 'DR') || Dict.empty;\n  data.fieldFlags = Util.getInheritableProperty(dict, 'Ff');\n  if (!isInt(data.fieldFlags) || data.fieldFlags < 0) {\n   data.fieldFlags = 0;\n  }\n  data.readOnly = this.hasFieldFlag(AnnotationFieldFlag.READONLY);\n  if (data.fieldType === 'Sig') {\n   this.setFlags(AnnotationFlag.HIDDEN);\n  }\n }\n Util.inherit(WidgetAnnotation, Annotation, {\n  _constructFieldName: function WidgetAnnotation_constructFieldName(dict) {\n   if (!dict.has('T') && !dict.has('Parent')) {\n    warn('Unknown field name, falling back to empty field name.');\n    return '';\n   }\n   if (!dict.has('Parent')) {\n    return stringToPDFString(dict.get('T'));\n   }\n   var fieldName = [];\n   if (dict.has('T')) {\n    fieldName.unshift(stringToPDFString(dict.get('T')));\n   }\n   var loopDict = dict;\n   while (loopDict.has('Parent')) {\n    loopDict = loopDict.get('Parent');\n    if (!isDict(loopDict)) {\n     break;\n    }\n    if (loopDict.has('T')) {\n     fieldName.unshift(stringToPDFString(loopDict.get('T')));\n    }\n   }\n   return fieldName.join('.');\n  },\n  hasFieldFlag: function WidgetAnnotation_hasFieldFlag(flag) {\n   return !!(this.data.fieldFlags & flag);\n  }\n });\n return WidgetAnnotation;\n}();\nvar TextWidgetAnnotation = function TextWidgetAnnotationClosure() {\n function TextWidgetAnnotation(params) {\n  WidgetAnnotation.call(this, params);\n  this.data.fieldValue = stringToPDFString(this.data.fieldValue || '');\n  var alignment = Util.getInheritableProperty(params.dict, 'Q');\n  if (!isInt(alignment) || alignment < 0 || alignment > 2) {\n   alignment = null;\n  }\n  this.data.textAlignment = alignment;\n  var maximumLength = Util.getInheritableProperty(params.dict, 'MaxLen');\n  if (!isInt(maximumLength) || maximumLength < 0) {\n   maximumLength = null;\n  }\n  this.data.maxLen = maximumLength;\n  this.data.multiLine = this.hasFieldFlag(AnnotationFieldFlag.MULTILINE);\n  this.data.comb = this.hasFieldFlag(AnnotationFieldFlag.COMB) && !this.hasFieldFlag(AnnotationFieldFlag.MULTILINE) && !this.hasFieldFlag(AnnotationFieldFlag.PASSWORD) && !this.hasFieldFlag(AnnotationFieldFlag.FILESELECT) && this.data.maxLen !== null;\n }\n Util.inherit(TextWidgetAnnotation, WidgetAnnotation, {\n  getOperatorList: function TextWidgetAnnotation_getOperatorList(evaluator, task, renderForms) {\n   var operatorList = new OperatorList();\n   if (renderForms) {\n    return Promise.resolve(operatorList);\n   }\n   if (this.appearance) {\n    return Annotation.prototype.getOperatorList.call(this, evaluator, task, renderForms);\n   }\n   if (!this.data.defaultAppearance) {\n    return Promise.resolve(operatorList);\n   }\n   var stream = new Stream(stringToBytes(this.data.defaultAppearance));\n   return evaluator.getOperatorList(stream, task, this.fieldResources, operatorList).then(function () {\n    return operatorList;\n   });\n  }\n });\n return TextWidgetAnnotation;\n}();\nvar ButtonWidgetAnnotation = function ButtonWidgetAnnotationClosure() {\n function ButtonWidgetAnnotation(params) {\n  WidgetAnnotation.call(this, params);\n  this.data.checkBox = !this.hasFieldFlag(AnnotationFieldFlag.RADIO) && !this.hasFieldFlag(AnnotationFieldFlag.PUSHBUTTON);\n  if (this.data.checkBox) {\n   if (!isName(this.data.fieldValue)) {\n    return;\n   }\n   this.data.fieldValue = this.data.fieldValue.name;\n  }\n  this.data.radioButton = this.hasFieldFlag(AnnotationFieldFlag.RADIO) && !this.hasFieldFlag(AnnotationFieldFlag.PUSHBUTTON);\n  if (this.data.radioButton) {\n   this.data.fieldValue = this.data.buttonValue = null;\n   var fieldParent = params.dict.get('Parent');\n   if (isDict(fieldParent) && fieldParent.has('V')) {\n    var fieldParentValue = fieldParent.get('V');\n    if (isName(fieldParentValue)) {\n     this.data.fieldValue = fieldParentValue.name;\n    }\n   }\n   var appearanceStates = params.dict.get('AP');\n   if (!isDict(appearanceStates)) {\n    return;\n   }\n   var normalAppearanceState = appearanceStates.get('N');\n   if (!isDict(normalAppearanceState)) {\n    return;\n   }\n   var keys = normalAppearanceState.getKeys();\n   for (var i = 0, ii = keys.length; i < ii; i++) {\n    if (keys[i] !== 'Off') {\n     this.data.buttonValue = keys[i];\n     break;\n    }\n   }\n  }\n }\n Util.inherit(ButtonWidgetAnnotation, WidgetAnnotation, {\n  getOperatorList: function ButtonWidgetAnnotation_getOperatorList(evaluator, task, renderForms) {\n   var operatorList = new OperatorList();\n   if (renderForms) {\n    return Promise.resolve(operatorList);\n   }\n   if (this.appearance) {\n    return Annotation.prototype.getOperatorList.call(this, evaluator, task, renderForms);\n   }\n   return Promise.resolve(operatorList);\n  }\n });\n return ButtonWidgetAnnotation;\n}();\nvar ChoiceWidgetAnnotation = function ChoiceWidgetAnnotationClosure() {\n function ChoiceWidgetAnnotation(params) {\n  WidgetAnnotation.call(this, params);\n  this.data.options = [];\n  var options = Util.getInheritableProperty(params.dict, 'Opt');\n  if (isArray(options)) {\n   var xref = params.xref;\n   for (var i = 0, ii = options.length; i < ii; i++) {\n    var option = xref.fetchIfRef(options[i]);\n    var isOptionArray = isArray(option);\n    this.data.options[i] = {\n     exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\n     displayValue: isOptionArray ? xref.fetchIfRef(option[1]) : option\n    };\n   }\n  }\n  if (!isArray(this.data.fieldValue)) {\n   this.data.fieldValue = [this.data.fieldValue];\n  }\n  this.data.combo = this.hasFieldFlag(AnnotationFieldFlag.COMBO);\n  this.data.multiSelect = this.hasFieldFlag(AnnotationFieldFlag.MULTISELECT);\n }\n Util.inherit(ChoiceWidgetAnnotation, WidgetAnnotation, {\n  getOperatorList: function ChoiceWidgetAnnotation_getOperatorList(evaluator, task, renderForms) {\n   var operatorList = new OperatorList();\n   if (renderForms) {\n    return Promise.resolve(operatorList);\n   }\n   return Annotation.prototype.getOperatorList.call(this, evaluator, task, renderForms);\n  }\n });\n return ChoiceWidgetAnnotation;\n}();\nvar TextAnnotation = function TextAnnotationClosure() {\n var DEFAULT_ICON_SIZE = 22;\n function TextAnnotation(parameters) {\n  Annotation.call(this, parameters);\n  this.data.annotationType = AnnotationType.TEXT;\n  if (this.data.hasAppearance) {\n   this.data.name = 'NoIcon';\n  } else {\n   this.data.rect[1] = this.data.rect[3] - DEFAULT_ICON_SIZE;\n   this.data.rect[2] = this.data.rect[0] + DEFAULT_ICON_SIZE;\n   this.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\n  }\n  this._preparePopup(parameters.dict);\n }\n Util.inherit(TextAnnotation, Annotation, {});\n return TextAnnotation;\n}();\nvar LinkAnnotation = function LinkAnnotationClosure() {\n function LinkAnnotation(params) {\n  Annotation.call(this, params);\n  var data = this.data;\n  data.annotationType = AnnotationType.LINK;\n  Catalog.parseDestDictionary({\n   destDict: params.dict,\n   resultObj: data,\n   docBaseUrl: params.pdfManager.docBaseUrl\n  });\n }\n Util.inherit(LinkAnnotation, Annotation, {});\n return LinkAnnotation;\n}();\nvar PopupAnnotation = function PopupAnnotationClosure() {\n function PopupAnnotation(parameters) {\n  Annotation.call(this, parameters);\n  this.data.annotationType = AnnotationType.POPUP;\n  var dict = parameters.dict;\n  var parentItem = dict.get('Parent');\n  if (!parentItem) {\n   warn('Popup annotation has a missing or invalid parent annotation.');\n   return;\n  }\n  this.data.parentId = dict.getRaw('Parent').toString();\n  this.data.title = stringToPDFString(parentItem.get('T') || '');\n  this.data.contents = stringToPDFString(parentItem.get('Contents') || '');\n  if (!parentItem.has('C')) {\n   this.data.color = null;\n  } else {\n   this.setColor(parentItem.getArray('C'));\n   this.data.color = this.color;\n  }\n  if (!this.viewable) {\n   var parentFlags = parentItem.get('F');\n   if (this._isViewable(parentFlags)) {\n    this.setFlags(parentFlags);\n   }\n  }\n }\n Util.inherit(PopupAnnotation, Annotation, {});\n return PopupAnnotation;\n}();\nvar HighlightAnnotation = function HighlightAnnotationClosure() {\n function HighlightAnnotation(parameters) {\n  Annotation.call(this, parameters);\n  this.data.annotationType = AnnotationType.HIGHLIGHT;\n  this._preparePopup(parameters.dict);\n  this.data.borderStyle.setWidth(0);\n }\n Util.inherit(HighlightAnnotation, Annotation, {});\n return HighlightAnnotation;\n}();\nvar UnderlineAnnotation = function UnderlineAnnotationClosure() {\n function UnderlineAnnotation(parameters) {\n  Annotation.call(this, parameters);\n  this.data.annotationType = AnnotationType.UNDERLINE;\n  this._preparePopup(parameters.dict);\n  this.data.borderStyle.setWidth(0);\n }\n Util.inherit(UnderlineAnnotation, Annotation, {});\n return UnderlineAnnotation;\n}();\nvar SquigglyAnnotation = function SquigglyAnnotationClosure() {\n function SquigglyAnnotation(parameters) {\n  Annotation.call(this, parameters);\n  this.data.annotationType = AnnotationType.SQUIGGLY;\n  this._preparePopup(parameters.dict);\n  this.data.borderStyle.setWidth(0);\n }\n Util.inherit(SquigglyAnnotation, Annotation, {});\n return SquigglyAnnotation;\n}();\nvar StrikeOutAnnotation = function StrikeOutAnnotationClosure() {\n function StrikeOutAnnotation(parameters) {\n  Annotation.call(this, parameters);\n  this.data.annotationType = AnnotationType.STRIKEOUT;\n  this._preparePopup(parameters.dict);\n  this.data.borderStyle.setWidth(0);\n }\n Util.inherit(StrikeOutAnnotation, Annotation, {});\n return StrikeOutAnnotation;\n}();\nvar FileAttachmentAnnotation = function FileAttachmentAnnotationClosure() {\n function FileAttachmentAnnotation(parameters) {\n  Annotation.call(this, parameters);\n  var file = new FileSpec(parameters.dict.get('FS'), parameters.xref);\n  this.data.annotationType = AnnotationType.FILEATTACHMENT;\n  this.data.file = file.serializable;\n  this._preparePopup(parameters.dict);\n }\n Util.inherit(FileAttachmentAnnotation, Annotation, {});\n return FileAttachmentAnnotation;\n}();\nexports.Annotation = Annotation;\nexports.AnnotationBorderStyle = AnnotationBorderStyle;\nexports.AnnotationFactory = AnnotationFactory;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar warn = sharedUtil.warn;\nvar baseTypes = [\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'S',\n 'B',\n 'S',\n 'WS',\n 'B',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'B',\n 'B',\n 'B',\n 'S',\n 'WS',\n 'ON',\n 'ON',\n 'ET',\n 'ET',\n 'ET',\n 'ON',\n 'ON',\n 'ON',\n 'ON',\n 'ON',\n 'ES',\n 'CS',\n 'ES',\n 'CS',\n 'CS',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'CS',\n 'ON',\n 'ON',\n 'ON',\n 'ON',\n 'ON',\n 'ON',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'ON',\n 'ON',\n 'ON',\n 'ON',\n 'ON',\n 'ON',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'ON',\n 'ON',\n 'ON',\n 'ON',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'B',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'CS',\n 'ON',\n 'ET',\n 'ET',\n 'ET',\n 'ET',\n 'ON',\n 'ON',\n 'ON',\n 'ON',\n 'L',\n 'ON',\n 'ON',\n 'BN',\n 'ON',\n 'ON',\n 'ET',\n 'ET',\n 'EN',\n 'EN',\n 'ON',\n 'L',\n 'ON',\n 'ON',\n 'ON',\n 'EN',\n 'L',\n 'ON',\n 'ON',\n 'ON',\n 'ON',\n 'ON',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'ON',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'ON',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L'\n];\nvar arabicTypes = [\n 'AN',\n 'AN',\n 'AN',\n 'AN',\n 'AN',\n 'AN',\n 'ON',\n 'ON',\n 'AL',\n 'ET',\n 'ET',\n 'AL',\n 'CS',\n 'AL',\n 'ON',\n 'ON',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'AL',\n 'AL',\n '',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'AN',\n 'AN',\n 'AN',\n 'AN',\n 'AN',\n 'AN',\n 'AN',\n 'AN',\n 'AN',\n 'AN',\n 'ET',\n 'AN',\n 'AN',\n 'AL',\n 'AL',\n 'AL',\n 'NSM',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'AN',\n 'ON',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'AL',\n 'AL',\n 'NSM',\n 'NSM',\n 'ON',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'AL',\n 'AL',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL'\n];\nfunction isOdd(i) {\n return (i & 1) !== 0;\n}\nfunction isEven(i) {\n return (i & 1) === 0;\n}\nfunction findUnequal(arr, start, value) {\n for (var j = start, jj = arr.length; j < jj; ++j) {\n  if (arr[j] !== value) {\n   return j;\n  }\n }\n return j;\n}\nfunction setValues(arr, start, end, value) {\n for (var j = start; j < end; ++j) {\n  arr[j] = value;\n }\n}\nfunction reverseValues(arr, start, end) {\n for (var i = start, j = end - 1; i < j; ++i, --j) {\n  var temp = arr[i];\n  arr[i] = arr[j];\n  arr[j] = temp;\n }\n}\nfunction createBidiText(str, isLTR, vertical) {\n return {\n  str: str,\n  dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\n };\n}\nvar chars = [];\nvar types = [];\nfunction bidi(str, startLevel, vertical) {\n var isLTR = true;\n var strLength = str.length;\n if (strLength === 0 || vertical) {\n  return createBidiText(str, isLTR, vertical);\n }\n chars.length = strLength;\n types.length = strLength;\n var numBidi = 0;\n var i, ii;\n for (i = 0; i < strLength; ++i) {\n  chars[i] = str.charAt(i);\n  var charCode = str.charCodeAt(i);\n  var charType = 'L';\n  if (charCode <= 0x00ff) {\n   charType = baseTypes[charCode];\n  } else if (0x0590 <= charCode && charCode <= 0x05f4) {\n   charType = 'R';\n  } else if (0x0600 <= charCode && charCode <= 0x06ff) {\n   charType = arabicTypes[charCode & 0xff];\n   if (!charType) {\n    warn('Bidi: invalid Unicode character ' + charCode.toString(16));\n   }\n  } else if (0x0700 <= charCode && charCode <= 0x08AC) {\n   charType = 'AL';\n  }\n  if (charType === 'R' || charType === 'AL' || charType === 'AN') {\n   numBidi++;\n  }\n  types[i] = charType;\n }\n if (numBidi === 0) {\n  isLTR = true;\n  return createBidiText(str, isLTR);\n }\n if (startLevel === -1) {\n  if (numBidi / strLength < 0.3) {\n   isLTR = true;\n   startLevel = 0;\n  } else {\n   isLTR = false;\n   startLevel = 1;\n  }\n }\n var levels = [];\n for (i = 0; i < strLength; ++i) {\n  levels[i] = startLevel;\n }\n var e = isOdd(startLevel) ? 'R' : 'L';\n var sor = e;\n var eor = sor;\n var lastType = sor;\n for (i = 0; i < strLength; ++i) {\n  if (types[i] === 'NSM') {\n   types[i] = lastType;\n  } else {\n   lastType = types[i];\n  }\n }\n lastType = sor;\n var t;\n for (i = 0; i < strLength; ++i) {\n  t = types[i];\n  if (t === 'EN') {\n   types[i] = lastType === 'AL' ? 'AN' : 'EN';\n  } else if (t === 'R' || t === 'L' || t === 'AL') {\n   lastType = t;\n  }\n }\n for (i = 0; i < strLength; ++i) {\n  t = types[i];\n  if (t === 'AL') {\n   types[i] = 'R';\n  }\n }\n for (i = 1; i < strLength - 1; ++i) {\n  if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\n   types[i] = 'EN';\n  }\n  if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\n   types[i] = types[i - 1];\n  }\n }\n for (i = 0; i < strLength; ++i) {\n  if (types[i] === 'EN') {\n   var j;\n   for (j = i - 1; j >= 0; --j) {\n    if (types[j] !== 'ET') {\n     break;\n    }\n    types[j] = 'EN';\n   }\n   for (j = i + 1; j < strLength; ++j) {\n    if (types[j] !== 'ET') {\n     break;\n    }\n    types[j] = 'EN';\n   }\n  }\n }\n for (i = 0; i < strLength; ++i) {\n  t = types[i];\n  if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\n   types[i] = 'ON';\n  }\n }\n lastType = sor;\n for (i = 0; i < strLength; ++i) {\n  t = types[i];\n  if (t === 'EN') {\n   types[i] = lastType === 'L' ? 'L' : 'EN';\n  } else if (t === 'R' || t === 'L') {\n   lastType = t;\n  }\n }\n for (i = 0; i < strLength; ++i) {\n  if (types[i] === 'ON') {\n   var end = findUnequal(types, i + 1, 'ON');\n   var before = sor;\n   if (i > 0) {\n    before = types[i - 1];\n   }\n   var after = eor;\n   if (end + 1 < strLength) {\n    after = types[end + 1];\n   }\n   if (before !== 'L') {\n    before = 'R';\n   }\n   if (after !== 'L') {\n    after = 'R';\n   }\n   if (before === after) {\n    setValues(types, i, end, before);\n   }\n   i = end - 1;\n  }\n }\n for (i = 0; i < strLength; ++i) {\n  if (types[i] === 'ON') {\n   types[i] = e;\n  }\n }\n for (i = 0; i < strLength; ++i) {\n  t = types[i];\n  if (isEven(levels[i])) {\n   if (t === 'R') {\n    levels[i] += 1;\n   } else if (t === 'AN' || t === 'EN') {\n    levels[i] += 2;\n   }\n  } else {\n   if (t === 'L' || t === 'AN' || t === 'EN') {\n    levels[i] += 1;\n   }\n  }\n }\n var highestLevel = -1;\n var lowestOddLevel = 99;\n var level;\n for (i = 0, ii = levels.length; i < ii; ++i) {\n  level = levels[i];\n  if (highestLevel < level) {\n   highestLevel = level;\n  }\n  if (lowestOddLevel > level && isOdd(level)) {\n   lowestOddLevel = level;\n  }\n }\n for (level = highestLevel; level >= lowestOddLevel; --level) {\n  var start = -1;\n  for (i = 0, ii = levels.length; i < ii; ++i) {\n   if (levels[i] < level) {\n    if (start >= 0) {\n     reverseValues(chars, start, i);\n     start = -1;\n    }\n   } else if (start < 0) {\n    start = i;\n   }\n  }\n  if (start >= 0) {\n   reverseValues(chars, start, levels.length);\n  }\n }\n for (i = 0, ii = chars.length; i < ii; ++i) {\n  var ch = chars[i];\n  if (ch === '<' || ch === '>') {\n   chars[i] = '';\n  }\n }\n return createBidiText(chars.join(''), isLTR);\n}\nexports.bidi = bidi;\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar ISOAdobeCharset = [\n '.notdef',\n 'space',\n 'exclam',\n 'quotedbl',\n 'numbersign',\n 'dollar',\n 'percent',\n 'ampersand',\n 'quoteright',\n 'parenleft',\n 'parenright',\n 'asterisk',\n 'plus',\n 'comma',\n 'hyphen',\n 'period',\n 'slash',\n 'zero',\n 'one',\n 'two',\n 'three',\n 'four',\n 'five',\n 'six',\n 'seven',\n 'eight',\n 'nine',\n 'colon',\n 'semicolon',\n 'less',\n 'equal',\n 'greater',\n 'question',\n 'at',\n 'A',\n 'B',\n 'C',\n 'D',\n 'E',\n 'F',\n 'G',\n 'H',\n 'I',\n 'J',\n 'K',\n 'L',\n 'M',\n 'N',\n 'O',\n 'P',\n 'Q',\n 'R',\n 'S',\n 'T',\n 'U',\n 'V',\n 'W',\n 'X',\n 'Y',\n 'Z',\n 'bracketleft',\n 'backslash',\n 'bracketright',\n 'asciicircum',\n 'underscore',\n 'quoteleft',\n 'a',\n 'b',\n 'c',\n 'd',\n 'e',\n 'f',\n 'g',\n 'h',\n 'i',\n 'j',\n 'k',\n 'l',\n 'm',\n 'n',\n 'o',\n 'p',\n 'q',\n 'r',\n 's',\n 't',\n 'u',\n 'v',\n 'w',\n 'x',\n 'y',\n 'z',\n 'braceleft',\n 'bar',\n 'braceright',\n 'asciitilde',\n 'exclamdown',\n 'cent',\n 'sterling',\n 'fraction',\n 'yen',\n 'florin',\n 'section',\n 'currency',\n 'quotesingle',\n 'quotedblleft',\n 'guillemotleft',\n 'guilsinglleft',\n 'guilsinglright',\n 'fi',\n 'fl',\n 'endash',\n 'dagger',\n 'daggerdbl',\n 'periodcentered',\n 'paragraph',\n 'bullet',\n 'quotesinglbase',\n 'quotedblbase',\n 'quotedblright',\n 'guillemotright',\n 'ellipsis',\n 'perthousand',\n 'questiondown',\n 'grave',\n 'acute',\n 'circumflex',\n 'tilde',\n 'macron',\n 'breve',\n 'dotaccent',\n 'dieresis',\n 'ring',\n 'cedilla',\n 'hungarumlaut',\n 'ogonek',\n 'caron',\n 'emdash',\n 'AE',\n 'ordfeminine',\n 'Lslash',\n 'Oslash',\n 'OE',\n 'ordmasculine',\n 'ae',\n 'dotlessi',\n 'lslash',\n 'oslash',\n 'oe',\n 'germandbls',\n 'onesuperior',\n 'logicalnot',\n 'mu',\n 'trademark',\n 'Eth',\n 'onehalf',\n 'plusminus',\n 'Thorn',\n 'onequarter',\n 'divide',\n 'brokenbar',\n 'degree',\n 'thorn',\n 'threequarters',\n 'twosuperior',\n 'registered',\n 'minus',\n 'eth',\n 'multiply',\n 'threesuperior',\n 'copyright',\n 'Aacute',\n 'Acircumflex',\n 'Adieresis',\n 'Agrave',\n 'Aring',\n 'Atilde',\n 'Ccedilla',\n 'Eacute',\n 'Ecircumflex',\n 'Edieresis',\n 'Egrave',\n 'Iacute',\n 'Icircumflex',\n 'Idieresis',\n 'Igrave',\n 'Ntilde',\n 'Oacute',\n 'Ocircumflex',\n 'Odieresis',\n 'Ograve',\n 'Otilde',\n 'Scaron',\n 'Uacute',\n 'Ucircumflex',\n 'Udieresis',\n 'Ugrave',\n 'Yacute',\n 'Ydieresis',\n 'Zcaron',\n 'aacute',\n 'acircumflex',\n 'adieresis',\n 'agrave',\n 'aring',\n 'atilde',\n 'ccedilla',\n 'eacute',\n 'ecircumflex',\n 'edieresis',\n 'egrave',\n 'iacute',\n 'icircumflex',\n 'idieresis',\n 'igrave',\n 'ntilde',\n 'oacute',\n 'ocircumflex',\n 'odieresis',\n 'ograve',\n 'otilde',\n 'scaron',\n 'uacute',\n 'ucircumflex',\n 'udieresis',\n 'ugrave',\n 'yacute',\n 'ydieresis',\n 'zcaron'\n];\nvar ExpertCharset = [\n '.notdef',\n 'space',\n 'exclamsmall',\n 'Hungarumlautsmall',\n 'dollaroldstyle',\n 'dollarsuperior',\n 'ampersandsmall',\n 'Acutesmall',\n 'parenleftsuperior',\n 'parenrightsuperior',\n 'twodotenleader',\n 'onedotenleader',\n 'comma',\n 'hyphen',\n 'period',\n 'fraction',\n 'zerooldstyle',\n 'oneoldstyle',\n 'twooldstyle',\n 'threeoldstyle',\n 'fouroldstyle',\n 'fiveoldstyle',\n 'sixoldstyle',\n 'sevenoldstyle',\n 'eightoldstyle',\n 'nineoldstyle',\n 'colon',\n 'semicolon',\n 'commasuperior',\n 'threequartersemdash',\n 'periodsuperior',\n 'questionsmall',\n 'asuperior',\n 'bsuperior',\n 'centsuperior',\n 'dsuperior',\n 'esuperior',\n 'isuperior',\n 'lsuperior',\n 'msuperior',\n 'nsuperior',\n 'osuperior',\n 'rsuperior',\n 'ssuperior',\n 'tsuperior',\n 'ff',\n 'fi',\n 'fl',\n 'ffi',\n 'ffl',\n 'parenleftinferior',\n 'parenrightinferior',\n 'Circumflexsmall',\n 'hyphensuperior',\n 'Gravesmall',\n 'Asmall',\n 'Bsmall',\n 'Csmall',\n 'Dsmall',\n 'Esmall',\n 'Fsmall',\n 'Gsmall',\n 'Hsmall',\n 'Ismall',\n 'Jsmall',\n 'Ksmall',\n 'Lsmall',\n 'Msmall',\n 'Nsmall',\n 'Osmall',\n 'Psmall',\n 'Qsmall',\n 'Rsmall',\n 'Ssmall',\n 'Tsmall',\n 'Usmall',\n 'Vsmall',\n 'Wsmall',\n 'Xsmall',\n 'Ysmall',\n 'Zsmall',\n 'colonmonetary',\n 'onefitted',\n 'rupiah',\n 'Tildesmall',\n 'exclamdownsmall',\n 'centoldstyle',\n 'Lslashsmall',\n 'Scaronsmall',\n 'Zcaronsmall',\n 'Dieresissmall',\n 'Brevesmall',\n 'Caronsmall',\n 'Dotaccentsmall',\n 'Macronsmall',\n 'figuredash',\n 'hypheninferior',\n 'Ogoneksmall',\n 'Ringsmall',\n 'Cedillasmall',\n 'onequarter',\n 'onehalf',\n 'threequarters',\n 'questiondownsmall',\n 'oneeighth',\n 'threeeighths',\n 'fiveeighths',\n 'seveneighths',\n 'onethird',\n 'twothirds',\n 'zerosuperior',\n 'onesuperior',\n 'twosuperior',\n 'threesuperior',\n 'foursuperior',\n 'fivesuperior',\n 'sixsuperior',\n 'sevensuperior',\n 'eightsuperior',\n 'ninesuperior',\n 'zeroinferior',\n 'oneinferior',\n 'twoinferior',\n 'threeinferior',\n 'fourinferior',\n 'fiveinferior',\n 'sixinferior',\n 'seveninferior',\n 'eightinferior',\n 'nineinferior',\n 'centinferior',\n 'dollarinferior',\n 'periodinferior',\n 'commainferior',\n 'Agravesmall',\n 'Aacutesmall',\n 'Acircumflexsmall',\n 'Atildesmall',\n 'Adieresissmall',\n 'Aringsmall',\n 'AEsmall',\n 'Ccedillasmall',\n 'Egravesmall',\n 'Eacutesmall',\n 'Ecircumflexsmall',\n 'Edieresissmall',\n 'Igravesmall',\n 'Iacutesmall',\n 'Icircumflexsmall',\n 'Idieresissmall',\n 'Ethsmall',\n 'Ntildesmall',\n 'Ogravesmall',\n 'Oacutesmall',\n 'Ocircumflexsmall',\n 'Otildesmall',\n 'Odieresissmall',\n 'OEsmall',\n 'Oslashsmall',\n 'Ugravesmall',\n 'Uacutesmall',\n 'Ucircumflexsmall',\n 'Udieresissmall',\n 'Yacutesmall',\n 'Thornsmall',\n 'Ydieresissmall'\n];\nvar ExpertSubsetCharset = [\n '.notdef',\n 'space',\n 'dollaroldstyle',\n 'dollarsuperior',\n 'parenleftsuperior',\n 'parenrightsuperior',\n 'twodotenleader',\n 'onedotenleader',\n 'comma',\n 'hyphen',\n 'period',\n 'fraction',\n 'zerooldstyle',\n 'oneoldstyle',\n 'twooldstyle',\n 'threeoldstyle',\n 'fouroldstyle',\n 'fiveoldstyle',\n 'sixoldstyle',\n 'sevenoldstyle',\n 'eightoldstyle',\n 'nineoldstyle',\n 'colon',\n 'semicolon',\n 'commasuperior',\n 'threequartersemdash',\n 'periodsuperior',\n 'asuperior',\n 'bsuperior',\n 'centsuperior',\n 'dsuperior',\n 'esuperior',\n 'isuperior',\n 'lsuperior',\n 'msuperior',\n 'nsuperior',\n 'osuperior',\n 'rsuperior',\n 'ssuperior',\n 'tsuperior',\n 'ff',\n 'fi',\n 'fl',\n 'ffi',\n 'ffl',\n 'parenleftinferior',\n 'parenrightinferior',\n 'hyphensuperior',\n 'colonmonetary',\n 'onefitted',\n 'rupiah',\n 'centoldstyle',\n 'figuredash',\n 'hypheninferior',\n 'onequarter',\n 'onehalf',\n 'threequarters',\n 'oneeighth',\n 'threeeighths',\n 'fiveeighths',\n 'seveneighths',\n 'onethird',\n 'twothirds',\n 'zerosuperior',\n 'onesuperior',\n 'twosuperior',\n 'threesuperior',\n 'foursuperior',\n 'fivesuperior',\n 'sixsuperior',\n 'sevensuperior',\n 'eightsuperior',\n 'ninesuperior',\n 'zeroinferior',\n 'oneinferior',\n 'twoinferior',\n 'threeinferior',\n 'fourinferior',\n 'fiveinferior',\n 'sixinferior',\n 'seveninferior',\n 'eightinferior',\n 'nineinferior',\n 'centinferior',\n 'dollarinferior',\n 'periodinferior',\n 'commainferior'\n];\nexports.ISOAdobeCharset = ISOAdobeCharset;\nexports.ExpertCharset = ExpertCharset;\nexports.ExpertSubsetCharset = ExpertSubsetCharset;\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar coreStream = __w_pdfjs_require__(2);\nvar coreParser = __w_pdfjs_require__(5);\nvar Util = sharedUtil.Util;\nvar assert = sharedUtil.assert;\nvar warn = sharedUtil.warn;\nvar error = sharedUtil.error;\nvar isInt = sharedUtil.isInt;\nvar isString = sharedUtil.isString;\nvar MissingDataException = sharedUtil.MissingDataException;\nvar CMapCompressionType = sharedUtil.CMapCompressionType;\nvar isEOF = corePrimitives.isEOF;\nvar isName = corePrimitives.isName;\nvar isCmd = corePrimitives.isCmd;\nvar isStream = corePrimitives.isStream;\nvar Stream = coreStream.Stream;\nvar Lexer = coreParser.Lexer;\nvar BUILT_IN_CMAPS = [\n 'Adobe-GB1-UCS2',\n 'Adobe-CNS1-UCS2',\n 'Adobe-Japan1-UCS2',\n 'Adobe-Korea1-UCS2',\n '78-EUC-H',\n '78-EUC-V',\n '78-H',\n '78-RKSJ-H',\n '78-RKSJ-V',\n '78-V',\n '78ms-RKSJ-H',\n '78ms-RKSJ-V',\n '83pv-RKSJ-H',\n '90ms-RKSJ-H',\n '90ms-RKSJ-V',\n '90msp-RKSJ-H',\n '90msp-RKSJ-V',\n '90pv-RKSJ-H',\n '90pv-RKSJ-V',\n 'Add-H',\n 'Add-RKSJ-H',\n 'Add-RKSJ-V',\n 'Add-V',\n 'Adobe-CNS1-0',\n 'Adobe-CNS1-1',\n 'Adobe-CNS1-2',\n 'Adobe-CNS1-3',\n 'Adobe-CNS1-4',\n 'Adobe-CNS1-5',\n 'Adobe-CNS1-6',\n 'Adobe-GB1-0',\n 'Adobe-GB1-1',\n 'Adobe-GB1-2',\n 'Adobe-GB1-3',\n 'Adobe-GB1-4',\n 'Adobe-GB1-5',\n 'Adobe-Japan1-0',\n 'Adobe-Japan1-1',\n 'Adobe-Japan1-2',\n 'Adobe-Japan1-3',\n 'Adobe-Japan1-4',\n 'Adobe-Japan1-5',\n 'Adobe-Japan1-6',\n 'Adobe-Korea1-0',\n 'Adobe-Korea1-1',\n 'Adobe-Korea1-2',\n 'B5-H',\n 'B5-V',\n 'B5pc-H',\n 'B5pc-V',\n 'CNS-EUC-H',\n 'CNS-EUC-V',\n 'CNS1-H',\n 'CNS1-V',\n 'CNS2-H',\n 'CNS2-V',\n 'ETHK-B5-H',\n 'ETHK-B5-V',\n 'ETen-B5-H',\n 'ETen-B5-V',\n 'ETenms-B5-H',\n 'ETenms-B5-V',\n 'EUC-H',\n 'EUC-V',\n 'Ext-H',\n 'Ext-RKSJ-H',\n 'Ext-RKSJ-V',\n 'Ext-V',\n 'GB-EUC-H',\n 'GB-EUC-V',\n 'GB-H',\n 'GB-V',\n 'GBK-EUC-H',\n 'GBK-EUC-V',\n 'GBK2K-H',\n 'GBK2K-V',\n 'GBKp-EUC-H',\n 'GBKp-EUC-V',\n 'GBT-EUC-H',\n 'GBT-EUC-V',\n 'GBT-H',\n 'GBT-V',\n 'GBTpc-EUC-H',\n 'GBTpc-EUC-V',\n 'GBpc-EUC-H',\n 'GBpc-EUC-V',\n 'H',\n 'HKdla-B5-H',\n 'HKdla-B5-V',\n 'HKdlb-B5-H',\n 'HKdlb-B5-V',\n 'HKgccs-B5-H',\n 'HKgccs-B5-V',\n 'HKm314-B5-H',\n 'HKm314-B5-V',\n 'HKm471-B5-H',\n 'HKm471-B5-V',\n 'HKscs-B5-H',\n 'HKscs-B5-V',\n 'Hankaku',\n 'Hiragana',\n 'KSC-EUC-H',\n 'KSC-EUC-V',\n 'KSC-H',\n 'KSC-Johab-H',\n 'KSC-Johab-V',\n 'KSC-V',\n 'KSCms-UHC-H',\n 'KSCms-UHC-HW-H',\n 'KSCms-UHC-HW-V',\n 'KSCms-UHC-V',\n 'KSCpc-EUC-H',\n 'KSCpc-EUC-V',\n 'Katakana',\n 'NWP-H',\n 'NWP-V',\n 'RKSJ-H',\n 'RKSJ-V',\n 'Roman',\n 'UniCNS-UCS2-H',\n 'UniCNS-UCS2-V',\n 'UniCNS-UTF16-H',\n 'UniCNS-UTF16-V',\n 'UniCNS-UTF32-H',\n 'UniCNS-UTF32-V',\n 'UniCNS-UTF8-H',\n 'UniCNS-UTF8-V',\n 'UniGB-UCS2-H',\n 'UniGB-UCS2-V',\n 'UniGB-UTF16-H',\n 'UniGB-UTF16-V',\n 'UniGB-UTF32-H',\n 'UniGB-UTF32-V',\n 'UniGB-UTF8-H',\n 'UniGB-UTF8-V',\n 'UniJIS-UCS2-H',\n 'UniJIS-UCS2-HW-H',\n 'UniJIS-UCS2-HW-V',\n 'UniJIS-UCS2-V',\n 'UniJIS-UTF16-H',\n 'UniJIS-UTF16-V',\n 'UniJIS-UTF32-H',\n 'UniJIS-UTF32-V',\n 'UniJIS-UTF8-H',\n 'UniJIS-UTF8-V',\n 'UniJIS2004-UTF16-H',\n 'UniJIS2004-UTF16-V',\n 'UniJIS2004-UTF32-H',\n 'UniJIS2004-UTF32-V',\n 'UniJIS2004-UTF8-H',\n 'UniJIS2004-UTF8-V',\n 'UniJISPro-UCS2-HW-V',\n 'UniJISPro-UCS2-V',\n 'UniJISPro-UTF8-V',\n 'UniJISX0213-UTF32-H',\n 'UniJISX0213-UTF32-V',\n 'UniJISX02132004-UTF32-H',\n 'UniJISX02132004-UTF32-V',\n 'UniKS-UCS2-H',\n 'UniKS-UCS2-V',\n 'UniKS-UTF16-H',\n 'UniKS-UTF16-V',\n 'UniKS-UTF32-H',\n 'UniKS-UTF32-V',\n 'UniKS-UTF8-H',\n 'UniKS-UTF8-V',\n 'V',\n 'WP-Symbol'\n];\nvar CMap = function CMapClosure() {\n function CMap(builtInCMap) {\n  this.codespaceRanges = [\n   [],\n   [],\n   [],\n   []\n  ];\n  this.numCodespaceRanges = 0;\n  this._map = [];\n  this.name = '';\n  this.vertical = false;\n  this.useCMap = null;\n  this.builtInCMap = builtInCMap;\n }\n CMap.prototype = {\n  addCodespaceRange: function (n, low, high) {\n   this.codespaceRanges[n - 1].push(low, high);\n   this.numCodespaceRanges++;\n  },\n  mapCidRange: function (low, high, dstLow) {\n   while (low <= high) {\n    this._map[low++] = dstLow++;\n   }\n  },\n  mapBfRange: function (low, high, dstLow) {\n   var lastByte = dstLow.length - 1;\n   while (low <= high) {\n    this._map[low++] = dstLow;\n    dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\n   }\n  },\n  mapBfRangeToArray: function (low, high, array) {\n   var i = 0, ii = array.length;\n   while (low <= high && i < ii) {\n    this._map[low] = array[i++];\n    ++low;\n   }\n  },\n  mapOne: function (src, dst) {\n   this._map[src] = dst;\n  },\n  lookup: function (code) {\n   return this._map[code];\n  },\n  contains: function (code) {\n   return this._map[code] !== undefined;\n  },\n  forEach: function (callback) {\n   var map = this._map;\n   var length = map.length;\n   var i;\n   if (length <= 0x10000) {\n    for (i = 0; i < length; i++) {\n     if (map[i] !== undefined) {\n      callback(i, map[i]);\n     }\n    }\n   } else {\n    for (i in this._map) {\n     callback(i, map[i]);\n    }\n   }\n  },\n  charCodeOf: function (value) {\n   return this._map.indexOf(value);\n  },\n  getMap: function () {\n   return this._map;\n  },\n  readCharCode: function (str, offset, out) {\n   var c = 0;\n   var codespaceRanges = this.codespaceRanges;\n   var codespaceRangesLen = this.codespaceRanges.length;\n   for (var n = 0; n < codespaceRangesLen; n++) {\n    c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\n    var codespaceRange = codespaceRanges[n];\n    for (var k = 0, kk = codespaceRange.length; k < kk;) {\n     var low = codespaceRange[k++];\n     var high = codespaceRange[k++];\n     if (c >= low && c <= high) {\n      out.charcode = c;\n      out.length = n + 1;\n      return;\n     }\n    }\n   }\n   out.charcode = 0;\n   out.length = 1;\n  },\n  get length() {\n   return this._map.length;\n  },\n  get isIdentityCMap() {\n   if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\n    return false;\n   }\n   if (this._map.length !== 0x10000) {\n    return false;\n   }\n   for (var i = 0; i < 0x10000; i++) {\n    if (this._map[i] !== i) {\n     return false;\n    }\n   }\n   return true;\n  }\n };\n return CMap;\n}();\nvar IdentityCMap = function IdentityCMapClosure() {\n function IdentityCMap(vertical, n) {\n  CMap.call(this);\n  this.vertical = vertical;\n  this.addCodespaceRange(n, 0, 0xffff);\n }\n Util.inherit(IdentityCMap, CMap, {});\n IdentityCMap.prototype = {\n  addCodespaceRange: CMap.prototype.addCodespaceRange,\n  mapCidRange: function (low, high, dstLow) {\n   error('should not call mapCidRange');\n  },\n  mapBfRange: function (low, high, dstLow) {\n   error('should not call mapBfRange');\n  },\n  mapBfRangeToArray: function (low, high, array) {\n   error('should not call mapBfRangeToArray');\n  },\n  mapOne: function (src, dst) {\n   error('should not call mapCidOne');\n  },\n  lookup: function (code) {\n   return isInt(code) && code <= 0xffff ? code : undefined;\n  },\n  contains: function (code) {\n   return isInt(code) && code <= 0xffff;\n  },\n  forEach: function (callback) {\n   for (var i = 0; i <= 0xffff; i++) {\n    callback(i, i);\n   }\n  },\n  charCodeOf: function (value) {\n   return isInt(value) && value <= 0xffff ? value : -1;\n  },\n  getMap: function () {\n   var map = new Array(0x10000);\n   for (var i = 0; i <= 0xffff; i++) {\n    map[i] = i;\n   }\n   return map;\n  },\n  readCharCode: CMap.prototype.readCharCode,\n  get length() {\n   return 0x10000;\n  },\n  get isIdentityCMap() {\n   error('should not access .isIdentityCMap');\n  }\n };\n return IdentityCMap;\n}();\nvar BinaryCMapReader = function BinaryCMapReaderClosure() {\n function hexToInt(a, size) {\n  var n = 0;\n  for (var i = 0; i <= size; i++) {\n   n = n << 8 | a[i];\n  }\n  return n >>> 0;\n }\n function hexToStr(a, size) {\n  if (size === 1) {\n   return String.fromCharCode(a[0], a[1]);\n  }\n  if (size === 3) {\n   return String.fromCharCode(a[0], a[1], a[2], a[3]);\n  }\n  return String.fromCharCode.apply(null, a.subarray(0, size + 1));\n }\n function addHex(a, b, size) {\n  var c = 0;\n  for (var i = size; i >= 0; i--) {\n   c += a[i] + b[i];\n   a[i] = c & 255;\n   c >>= 8;\n  }\n }\n function incHex(a, size) {\n  var c = 1;\n  for (var i = size; i >= 0 && c > 0; i--) {\n   c += a[i];\n   a[i] = c & 255;\n   c >>= 8;\n  }\n }\n var MAX_NUM_SIZE = 16;\n var MAX_ENCODED_NUM_SIZE = 19;\n function BinaryCMapStream(data) {\n  this.buffer = data;\n  this.pos = 0;\n  this.end = data.length;\n  this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\n }\n BinaryCMapStream.prototype = {\n  readByte: function () {\n   if (this.pos >= this.end) {\n    return -1;\n   }\n   return this.buffer[this.pos++];\n  },\n  readNumber: function () {\n   var n = 0;\n   var last;\n   do {\n    var b = this.readByte();\n    if (b < 0) {\n     error('unexpected EOF in bcmap');\n    }\n    last = !(b & 0x80);\n    n = n << 7 | b & 0x7F;\n   } while (!last);\n   return n;\n  },\n  readSigned: function () {\n   var n = this.readNumber();\n   return n & 1 ? ~(n >>> 1) : n >>> 1;\n  },\n  readHex: function (num, size) {\n   num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\n   this.pos += size + 1;\n  },\n  readHexNumber: function (num, size) {\n   var last;\n   var stack = this.tmpBuf, sp = 0;\n   do {\n    var b = this.readByte();\n    if (b < 0) {\n     error('unexpected EOF in bcmap');\n    }\n    last = !(b & 0x80);\n    stack[sp++] = b & 0x7F;\n   } while (!last);\n   var i = size, buffer = 0, bufferSize = 0;\n   while (i >= 0) {\n    while (bufferSize < 8 && stack.length > 0) {\n     buffer = stack[--sp] << bufferSize | buffer;\n     bufferSize += 7;\n    }\n    num[i] = buffer & 255;\n    i--;\n    buffer >>= 8;\n    bufferSize -= 8;\n   }\n  },\n  readHexSigned: function (num, size) {\n   this.readHexNumber(num, size);\n   var sign = num[size] & 1 ? 255 : 0;\n   var c = 0;\n   for (var i = 0; i <= size; i++) {\n    c = (c & 1) << 8 | num[i];\n    num[i] = c >> 1 ^ sign;\n   }\n  },\n  readString: function () {\n   var len = this.readNumber();\n   var s = '';\n   for (var i = 0; i < len; i++) {\n    s += String.fromCharCode(this.readNumber());\n   }\n   return s;\n  }\n };\n function processBinaryCMap(data, cMap, extend) {\n  return new Promise(function (resolve, reject) {\n   var stream = new BinaryCMapStream(data);\n   var header = stream.readByte();\n   cMap.vertical = !!(header & 1);\n   var useCMap = null;\n   var start = new Uint8Array(MAX_NUM_SIZE);\n   var end = new Uint8Array(MAX_NUM_SIZE);\n   var char = new Uint8Array(MAX_NUM_SIZE);\n   var charCode = new Uint8Array(MAX_NUM_SIZE);\n   var tmp = new Uint8Array(MAX_NUM_SIZE);\n   var code;\n   var b;\n   while ((b = stream.readByte()) >= 0) {\n    var type = b >> 5;\n    if (type === 7) {\n     switch (b & 0x1F) {\n     case 0:\n      stream.readString();\n      break;\n     case 1:\n      useCMap = stream.readString();\n      break;\n     }\n     continue;\n    }\n    var sequence = !!(b & 0x10);\n    var dataSize = b & 15;\n    assert(dataSize + 1 <= MAX_NUM_SIZE);\n    var ucs2DataSize = 1;\n    var subitemsCount = stream.readNumber();\n    var i;\n    switch (type) {\n    case 0:\n     stream.readHex(start, dataSize);\n     stream.readHexNumber(end, dataSize);\n     addHex(end, start, dataSize);\n     cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n     for (i = 1; i < subitemsCount; i++) {\n      incHex(end, dataSize);\n      stream.readHexNumber(start, dataSize);\n      addHex(start, end, dataSize);\n      stream.readHexNumber(end, dataSize);\n      addHex(end, start, dataSize);\n      cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n     }\n     break;\n    case 1:\n     stream.readHex(start, dataSize);\n     stream.readHexNumber(end, dataSize);\n     addHex(end, start, dataSize);\n     code = stream.readNumber();\n     for (i = 1; i < subitemsCount; i++) {\n      incHex(end, dataSize);\n      stream.readHexNumber(start, dataSize);\n      addHex(start, end, dataSize);\n      stream.readHexNumber(end, dataSize);\n      addHex(end, start, dataSize);\n      code = stream.readNumber();\n     }\n     break;\n    case 2:\n     stream.readHex(char, dataSize);\n     code = stream.readNumber();\n     cMap.mapOne(hexToInt(char, dataSize), code);\n     for (i = 1; i < subitemsCount; i++) {\n      incHex(char, dataSize);\n      if (!sequence) {\n       stream.readHexNumber(tmp, dataSize);\n       addHex(char, tmp, dataSize);\n      }\n      code = stream.readSigned() + (code + 1);\n      cMap.mapOne(hexToInt(char, dataSize), code);\n     }\n     break;\n    case 3:\n     stream.readHex(start, dataSize);\n     stream.readHexNumber(end, dataSize);\n     addHex(end, start, dataSize);\n     code = stream.readNumber();\n     cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n     for (i = 1; i < subitemsCount; i++) {\n      incHex(end, dataSize);\n      if (!sequence) {\n       stream.readHexNumber(start, dataSize);\n       addHex(start, end, dataSize);\n      } else {\n       start.set(end);\n      }\n      stream.readHexNumber(end, dataSize);\n      addHex(end, start, dataSize);\n      code = stream.readNumber();\n      cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n     }\n     break;\n    case 4:\n     stream.readHex(char, ucs2DataSize);\n     stream.readHex(charCode, dataSize);\n     cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n     for (i = 1; i < subitemsCount; i++) {\n      incHex(char, ucs2DataSize);\n      if (!sequence) {\n       stream.readHexNumber(tmp, ucs2DataSize);\n       addHex(char, tmp, ucs2DataSize);\n      }\n      incHex(charCode, dataSize);\n      stream.readHexSigned(tmp, dataSize);\n      addHex(charCode, tmp, dataSize);\n      cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n     }\n     break;\n    case 5:\n     stream.readHex(start, ucs2DataSize);\n     stream.readHexNumber(end, ucs2DataSize);\n     addHex(end, start, ucs2DataSize);\n     stream.readHex(charCode, dataSize);\n     cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n     for (i = 1; i < subitemsCount; i++) {\n      incHex(end, ucs2DataSize);\n      if (!sequence) {\n       stream.readHexNumber(start, ucs2DataSize);\n       addHex(start, end, ucs2DataSize);\n      } else {\n       start.set(end);\n      }\n      stream.readHexNumber(end, ucs2DataSize);\n      addHex(end, start, ucs2DataSize);\n      stream.readHex(charCode, dataSize);\n      cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n     }\n     break;\n    default:\n     reject(new Error('processBinaryCMap: Unknown type: ' + type));\n     return;\n    }\n   }\n   if (useCMap) {\n    resolve(extend(useCMap));\n    return;\n   }\n   resolve(cMap);\n  });\n }\n function BinaryCMapReader() {\n }\n BinaryCMapReader.prototype = { process: processBinaryCMap };\n return BinaryCMapReader;\n}();\nvar CMapFactory = function CMapFactoryClosure() {\n function strToInt(str) {\n  var a = 0;\n  for (var i = 0; i < str.length; i++) {\n   a = a << 8 | str.charCodeAt(i);\n  }\n  return a >>> 0;\n }\n function expectString(obj) {\n  if (!isString(obj)) {\n   error('Malformed CMap: expected string.');\n  }\n }\n function expectInt(obj) {\n  if (!isInt(obj)) {\n   error('Malformed CMap: expected int.');\n  }\n }\n function parseBfChar(cMap, lexer) {\n  while (true) {\n   var obj = lexer.getObj();\n   if (isEOF(obj)) {\n    break;\n   }\n   if (isCmd(obj, 'endbfchar')) {\n    return;\n   }\n   expectString(obj);\n   var src = strToInt(obj);\n   obj = lexer.getObj();\n   expectString(obj);\n   var dst = obj;\n   cMap.mapOne(src, dst);\n  }\n }\n function parseBfRange(cMap, lexer) {\n  while (true) {\n   var obj = lexer.getObj();\n   if (isEOF(obj)) {\n    break;\n   }\n   if (isCmd(obj, 'endbfrange')) {\n    return;\n   }\n   expectString(obj);\n   var low = strToInt(obj);\n   obj = lexer.getObj();\n   expectString(obj);\n   var high = strToInt(obj);\n   obj = lexer.getObj();\n   if (isInt(obj) || isString(obj)) {\n    var dstLow = isInt(obj) ? String.fromCharCode(obj) : obj;\n    cMap.mapBfRange(low, high, dstLow);\n   } else if (isCmd(obj, '[')) {\n    obj = lexer.getObj();\n    var array = [];\n    while (!isCmd(obj, ']') && !isEOF(obj)) {\n     array.push(obj);\n     obj = lexer.getObj();\n    }\n    cMap.mapBfRangeToArray(low, high, array);\n   } else {\n    break;\n   }\n  }\n  error('Invalid bf range.');\n }\n function parseCidChar(cMap, lexer) {\n  while (true) {\n   var obj = lexer.getObj();\n   if (isEOF(obj)) {\n    break;\n   }\n   if (isCmd(obj, 'endcidchar')) {\n    return;\n   }\n   expectString(obj);\n   var src = strToInt(obj);\n   obj = lexer.getObj();\n   expectInt(obj);\n   var dst = obj;\n   cMap.mapOne(src, dst);\n  }\n }\n function parseCidRange(cMap, lexer) {\n  while (true) {\n   var obj = lexer.getObj();\n   if (isEOF(obj)) {\n    break;\n   }\n   if (isCmd(obj, 'endcidrange')) {\n    return;\n   }\n   expectString(obj);\n   var low = strToInt(obj);\n   obj = lexer.getObj();\n   expectString(obj);\n   var high = strToInt(obj);\n   obj = lexer.getObj();\n   expectInt(obj);\n   var dstLow = obj;\n   cMap.mapCidRange(low, high, dstLow);\n  }\n }\n function parseCodespaceRange(cMap, lexer) {\n  while (true) {\n   var obj = lexer.getObj();\n   if (isEOF(obj)) {\n    break;\n   }\n   if (isCmd(obj, 'endcodespacerange')) {\n    return;\n   }\n   if (!isString(obj)) {\n    break;\n   }\n   var low = strToInt(obj);\n   obj = lexer.getObj();\n   if (!isString(obj)) {\n    break;\n   }\n   var high = strToInt(obj);\n   cMap.addCodespaceRange(obj.length, low, high);\n  }\n  error('Invalid codespace range.');\n }\n function parseWMode(cMap, lexer) {\n  var obj = lexer.getObj();\n  if (isInt(obj)) {\n   cMap.vertical = !!obj;\n  }\n }\n function parseCMapName(cMap, lexer) {\n  var obj = lexer.getObj();\n  if (isName(obj) && isString(obj.name)) {\n   cMap.name = obj.name;\n  }\n }\n function parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap) {\n  var previous;\n  var embededUseCMap;\n  objLoop:\n   while (true) {\n    try {\n     var obj = lexer.getObj();\n     if (isEOF(obj)) {\n      break;\n     } else if (isName(obj)) {\n      if (obj.name === 'WMode') {\n       parseWMode(cMap, lexer);\n      } else if (obj.name === 'CMapName') {\n       parseCMapName(cMap, lexer);\n      }\n      previous = obj;\n     } else if (isCmd(obj)) {\n      switch (obj.cmd) {\n      case 'endcmap':\n       break objLoop;\n      case 'usecmap':\n       if (isName(previous)) {\n        embededUseCMap = previous.name;\n       }\n       break;\n      case 'begincodespacerange':\n       parseCodespaceRange(cMap, lexer);\n       break;\n      case 'beginbfchar':\n       parseBfChar(cMap, lexer);\n       break;\n      case 'begincidchar':\n       parseCidChar(cMap, lexer);\n       break;\n      case 'beginbfrange':\n       parseBfRange(cMap, lexer);\n       break;\n      case 'begincidrange':\n       parseCidRange(cMap, lexer);\n       break;\n      }\n     }\n    } catch (ex) {\n     if (ex instanceof MissingDataException) {\n      throw ex;\n     }\n     warn('Invalid cMap data: ' + ex);\n     continue;\n    }\n   }\n  if (!useCMap && embededUseCMap) {\n   useCMap = embededUseCMap;\n  }\n  if (useCMap) {\n   return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n  }\n  return Promise.resolve(cMap);\n }\n function extendCMap(cMap, fetchBuiltInCMap, useCMap) {\n  return createBuiltInCMap(useCMap, fetchBuiltInCMap).then(function (newCMap) {\n   cMap.useCMap = newCMap;\n   if (cMap.numCodespaceRanges === 0) {\n    var useCodespaceRanges = cMap.useCMap.codespaceRanges;\n    for (var i = 0; i < useCodespaceRanges.length; i++) {\n     cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\n    }\n    cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\n   }\n   cMap.useCMap.forEach(function (key, value) {\n    if (!cMap.contains(key)) {\n     cMap.mapOne(key, cMap.useCMap.lookup(key));\n    }\n   });\n   return cMap;\n  });\n }\n function createBuiltInCMap(name, fetchBuiltInCMap) {\n  if (name === 'Identity-H') {\n   return Promise.resolve(new IdentityCMap(false, 2));\n  } else if (name === 'Identity-V') {\n   return Promise.resolve(new IdentityCMap(true, 2));\n  }\n  if (BUILT_IN_CMAPS.indexOf(name) === -1) {\n   return Promise.reject(new Error('Unknown cMap name: ' + name));\n  }\n  assert(fetchBuiltInCMap, 'Built-in CMap parameters are not provided.');\n  return fetchBuiltInCMap(name).then(function (data) {\n   var cMapData = data.cMapData, compressionType = data.compressionType;\n   var cMap = new CMap(true);\n   if (compressionType === CMapCompressionType.BINARY) {\n    return new BinaryCMapReader().process(cMapData, cMap, function (useCMap) {\n     return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n    });\n   }\n   assert(compressionType === CMapCompressionType.NONE, 'TODO: Only BINARY/NONE CMap compression is currently supported.');\n   var lexer = new Lexer(new Stream(cMapData));\n   return parseCMap(cMap, lexer, fetchBuiltInCMap, null);\n  });\n }\n return {\n  create: function (params) {\n   var encoding = params.encoding;\n   var fetchBuiltInCMap = params.fetchBuiltInCMap;\n   var useCMap = params.useCMap;\n   if (isName(encoding)) {\n    return createBuiltInCMap(encoding.name, fetchBuiltInCMap);\n   } else if (isStream(encoding)) {\n    var cMap = new CMap();\n    var lexer = new Lexer(encoding);\n    return parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap).then(function (parsedCMap) {\n     if (parsedCMap.isIdentityCMap) {\n      return createBuiltInCMap(parsedCMap.name, fetchBuiltInCMap);\n     }\n     return parsedCMap;\n    });\n   }\n   return Promise.reject(new Error('Encoding required.'));\n  }\n };\n}();\nexports.CMap = CMap;\nexports.CMapFactory = CMapFactory;\nexports.IdentityCMap = IdentityCMap;\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar coreStream = __w_pdfjs_require__(2);\nvar coreObj = __w_pdfjs_require__(16);\nvar coreParser = __w_pdfjs_require__(5);\nvar coreCrypto = __w_pdfjs_require__(13);\nvar coreEvaluator = __w_pdfjs_require__(14);\nvar coreAnnotation = __w_pdfjs_require__(20);\nvar OPS = sharedUtil.OPS;\nvar MissingDataException = sharedUtil.MissingDataException;\nvar Util = sharedUtil.Util;\nvar assert = sharedUtil.assert;\nvar error = sharedUtil.error;\nvar info = sharedUtil.info;\nvar isArray = sharedUtil.isArray;\nvar isArrayBuffer = sharedUtil.isArrayBuffer;\nvar isNum = sharedUtil.isNum;\nvar isString = sharedUtil.isString;\nvar shadow = sharedUtil.shadow;\nvar stringToBytes = sharedUtil.stringToBytes;\nvar stringToPDFString = sharedUtil.stringToPDFString;\nvar warn = sharedUtil.warn;\nvar isSpace = sharedUtil.isSpace;\nvar Dict = corePrimitives.Dict;\nvar isDict = corePrimitives.isDict;\nvar isName = corePrimitives.isName;\nvar isStream = corePrimitives.isStream;\nvar NullStream = coreStream.NullStream;\nvar Stream = coreStream.Stream;\nvar StreamsSequenceStream = coreStream.StreamsSequenceStream;\nvar Catalog = coreObj.Catalog;\nvar ObjectLoader = coreObj.ObjectLoader;\nvar XRef = coreObj.XRef;\nvar Linearization = coreParser.Linearization;\nvar calculateMD5 = coreCrypto.calculateMD5;\nvar OperatorList = coreEvaluator.OperatorList;\nvar PartialEvaluator = coreEvaluator.PartialEvaluator;\nvar AnnotationFactory = coreAnnotation.AnnotationFactory;\nvar Page = function PageClosure() {\n var DEFAULT_USER_UNIT = 1.0;\n var LETTER_SIZE_MEDIABOX = [\n  0,\n  0,\n  612,\n  792\n ];\n function isAnnotationRenderable(annotation, intent) {\n  return intent === 'display' && annotation.viewable || intent === 'print' && annotation.printable;\n }\n function Page(pdfManager, xref, pageIndex, pageDict, ref, fontCache, builtInCMapCache) {\n  this.pdfManager = pdfManager;\n  this.pageIndex = pageIndex;\n  this.pageDict = pageDict;\n  this.xref = xref;\n  this.ref = ref;\n  this.fontCache = fontCache;\n  this.builtInCMapCache = builtInCMapCache;\n  this.evaluatorOptions = pdfManager.evaluatorOptions;\n  this.resourcesPromise = null;\n  var uniquePrefix = 'p' + this.pageIndex + '_';\n  var idCounters = { obj: 0 };\n  this.idFactory = {\n   createObjId: function () {\n    return uniquePrefix + ++idCounters.obj;\n   }\n  };\n }\n Page.prototype = {\n  getPageProp: function Page_getPageProp(key) {\n   return this.pageDict.get(key);\n  },\n  getInheritedPageProp: function Page_getInheritedPageProp(key, getArray) {\n   var dict = this.pageDict, valueArray = null, loopCount = 0;\n   var MAX_LOOP_COUNT = 100;\n   getArray = getArray || false;\n   while (dict) {\n    var value = getArray ? dict.getArray(key) : dict.get(key);\n    if (value !== undefined) {\n     if (!valueArray) {\n      valueArray = [];\n     }\n     valueArray.push(value);\n    }\n    if (++loopCount > MAX_LOOP_COUNT) {\n     warn('getInheritedPageProp: maximum loop count exceeded for ' + key);\n     return valueArray ? valueArray[0] : undefined;\n    }\n    dict = dict.get('Parent');\n   }\n   if (!valueArray) {\n    return undefined;\n   }\n   if (valueArray.length === 1 || !isDict(valueArray[0])) {\n    return valueArray[0];\n   }\n   return Dict.merge(this.xref, valueArray);\n  },\n  get content() {\n   return this.getPageProp('Contents');\n  },\n  get resources() {\n   return shadow(this, 'resources', this.getInheritedPageProp('Resources') || Dict.empty);\n  },\n  get mediaBox() {\n   var mediaBox = this.getInheritedPageProp('MediaBox', true);\n   if (!isArray(mediaBox) || mediaBox.length !== 4) {\n    return shadow(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\n   }\n   return shadow(this, 'mediaBox', mediaBox);\n  },\n  get cropBox() {\n   var cropBox = this.getInheritedPageProp('CropBox', true);\n   if (!isArray(cropBox) || cropBox.length !== 4) {\n    return shadow(this, 'cropBox', this.mediaBox);\n   }\n   return shadow(this, 'cropBox', cropBox);\n  },\n  get userUnit() {\n   var obj = this.getPageProp('UserUnit');\n   if (!isNum(obj) || obj <= 0) {\n    obj = DEFAULT_USER_UNIT;\n   }\n   return shadow(this, 'userUnit', obj);\n  },\n  get view() {\n   var mediaBox = this.mediaBox, cropBox = this.cropBox;\n   if (mediaBox === cropBox) {\n    return shadow(this, 'view', mediaBox);\n   }\n   var intersection = Util.intersect(cropBox, mediaBox);\n   return shadow(this, 'view', intersection || mediaBox);\n  },\n  get rotate() {\n   var rotate = this.getInheritedPageProp('Rotate') || 0;\n   if (rotate % 90 !== 0) {\n    rotate = 0;\n   } else if (rotate >= 360) {\n    rotate = rotate % 360;\n   } else if (rotate < 0) {\n    rotate = (rotate % 360 + 360) % 360;\n   }\n   return shadow(this, 'rotate', rotate);\n  },\n  getContentStream: function Page_getContentStream() {\n   var content = this.content;\n   var stream;\n   if (isArray(content)) {\n    var xref = this.xref;\n    var i, n = content.length;\n    var streams = [];\n    for (i = 0; i < n; ++i) {\n     streams.push(xref.fetchIfRef(content[i]));\n    }\n    stream = new StreamsSequenceStream(streams);\n   } else if (isStream(content)) {\n    stream = content;\n   } else {\n    stream = new NullStream();\n   }\n   return stream;\n  },\n  loadResources: function Page_loadResources(keys) {\n   if (!this.resourcesPromise) {\n    this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\n   }\n   return this.resourcesPromise.then(function resourceSuccess() {\n    var objectLoader = new ObjectLoader(this.resources.map, keys, this.xref);\n    return objectLoader.load();\n   }.bind(this));\n  },\n  getOperatorList: function Page_getOperatorList(handler, task, intent, renderInteractiveForms) {\n   var self = this;\n   var pdfManager = this.pdfManager;\n   var contentStreamPromise = pdfManager.ensure(this, 'getContentStream', []);\n   var resourcesPromise = this.loadResources([\n    'ExtGState',\n    'ColorSpace',\n    'Pattern',\n    'Shading',\n    'XObject',\n    'Font'\n   ]);\n   var partialEvaluator = new PartialEvaluator(pdfManager, this.xref, handler, this.pageIndex, this.idFactory, this.fontCache, this.builtInCMapCache, this.evaluatorOptions);\n   var dataPromises = Promise.all([\n    contentStreamPromise,\n    resourcesPromise\n   ]);\n   var pageListPromise = dataPromises.then(function (data) {\n    var contentStream = data[0];\n    var opList = new OperatorList(intent, handler, self.pageIndex);\n    handler.send('StartRenderPage', {\n     transparency: partialEvaluator.hasBlendModes(self.resources),\n     pageIndex: self.pageIndex,\n     intent: intent\n    });\n    return partialEvaluator.getOperatorList(contentStream, task, self.resources, opList).then(function () {\n     return opList;\n    });\n   });\n   var annotationsPromise = pdfManager.ensure(this, 'annotations');\n   return Promise.all([\n    pageListPromise,\n    annotationsPromise\n   ]).then(function (datas) {\n    var pageOpList = datas[0];\n    var annotations = datas[1];\n    if (annotations.length === 0) {\n     pageOpList.flush(true);\n     return pageOpList;\n    }\n    var i, ii, opListPromises = [];\n    for (i = 0, ii = annotations.length; i < ii; i++) {\n     if (isAnnotationRenderable(annotations[i], intent)) {\n      opListPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderInteractiveForms));\n     }\n    }\n    return Promise.all(opListPromises).then(function (opLists) {\n     pageOpList.addOp(OPS.beginAnnotations, []);\n     for (i = 0, ii = opLists.length; i < ii; i++) {\n      pageOpList.addOpList(opLists[i]);\n     }\n     pageOpList.addOp(OPS.endAnnotations, []);\n     pageOpList.flush(true);\n     return pageOpList;\n    });\n   });\n  },\n  extractTextContent: function Page_extractTextContent(task, normalizeWhitespace, combineTextItems) {\n   var handler = {\n    on: function nullHandlerOn() {\n    },\n    send: function nullHandlerSend() {\n    }\n   };\n   var self = this;\n   var pdfManager = this.pdfManager;\n   var contentStreamPromise = pdfManager.ensure(this, 'getContentStream', []);\n   var resourcesPromise = this.loadResources([\n    'ExtGState',\n    'XObject',\n    'Font'\n   ]);\n   var dataPromises = Promise.all([\n    contentStreamPromise,\n    resourcesPromise\n   ]);\n   return dataPromises.then(function (data) {\n    var contentStream = data[0];\n    var partialEvaluator = new PartialEvaluator(pdfManager, self.xref, handler, self.pageIndex, self.idFactory, self.fontCache, self.builtInCMapCache, self.evaluatorOptions);\n    return partialEvaluator.getTextContent(contentStream, task, self.resources, null, normalizeWhitespace, combineTextItems);\n   });\n  },\n  getAnnotationsData: function Page_getAnnotationsData(intent) {\n   var annotations = this.annotations;\n   var annotationsData = [];\n   for (var i = 0, n = annotations.length; i < n; ++i) {\n    if (!intent || isAnnotationRenderable(annotations[i], intent)) {\n     annotationsData.push(annotations[i].data);\n    }\n   }\n   return annotationsData;\n  },\n  get annotations() {\n   var annotations = [];\n   var annotationRefs = this.getInheritedPageProp('Annots') || [];\n   var annotationFactory = new AnnotationFactory();\n   for (var i = 0, n = annotationRefs.length; i < n; ++i) {\n    var annotationRef = annotationRefs[i];\n    var annotation = annotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);\n    if (annotation) {\n     annotations.push(annotation);\n    }\n   }\n   return shadow(this, 'annotations', annotations);\n  }\n };\n return Page;\n}();\nvar PDFDocument = function PDFDocumentClosure() {\n var FINGERPRINT_FIRST_BYTES = 1024;\n var EMPTY_FINGERPRINT = '\\x00\\x00\\x00\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00';\n function PDFDocument(pdfManager, arg) {\n  var stream;\n  if (isStream(arg)) {\n   stream = arg;\n  } else if (isArrayBuffer(arg)) {\n   stream = new Stream(arg);\n  } else {\n   error('PDFDocument: Unknown argument type');\n  }\n  assert(stream.length > 0, 'stream must have data');\n  this.pdfManager = pdfManager;\n  this.stream = stream;\n  this.xref = new XRef(stream, pdfManager);\n }\n function find(stream, needle, limit, backwards) {\n  var pos = stream.pos;\n  var end = stream.end;\n  var strBuf = [];\n  if (pos + limit > end) {\n   limit = end - pos;\n  }\n  for (var n = 0; n < limit; ++n) {\n   strBuf.push(String.fromCharCode(stream.getByte()));\n  }\n  var str = strBuf.join('');\n  stream.pos = pos;\n  var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\n  if (index === -1) {\n   return false;\n  }\n  stream.pos += index;\n  return true;\n }\n var DocumentInfoValidators = {\n  get entries() {\n   return shadow(this, 'entries', {\n    Title: isString,\n    Author: isString,\n    Subject: isString,\n    Keywords: isString,\n    Creator: isString,\n    Producer: isString,\n    CreationDate: isString,\n    ModDate: isString,\n    Trapped: isName\n   });\n  }\n };\n PDFDocument.prototype = {\n  parse: function PDFDocument_parse(recoveryMode) {\n   this.setup(recoveryMode);\n   var version = this.catalog.catDict.get('Version');\n   if (isName(version)) {\n    this.pdfFormatVersion = version.name;\n   }\n   try {\n    this.acroForm = this.catalog.catDict.get('AcroForm');\n    if (this.acroForm) {\n     this.xfa = this.acroForm.get('XFA');\n     var fields = this.acroForm.get('Fields');\n     if ((!fields || !isArray(fields) || fields.length === 0) && !this.xfa) {\n      this.acroForm = null;\n     }\n    }\n   } catch (ex) {\n    info('Something wrong with AcroForm entry');\n    this.acroForm = null;\n   }\n  },\n  get linearization() {\n   var linearization = null;\n   if (this.stream.length) {\n    try {\n     linearization = Linearization.create(this.stream);\n    } catch (err) {\n     if (err instanceof MissingDataException) {\n      throw err;\n     }\n     info(err);\n    }\n   }\n   return shadow(this, 'linearization', linearization);\n  },\n  get startXRef() {\n   var stream = this.stream;\n   var startXRef = 0;\n   var linearization = this.linearization;\n   if (linearization) {\n    stream.reset();\n    if (find(stream, 'endobj', 1024)) {\n     startXRef = stream.pos + 6;\n    }\n   } else {\n    var step = 1024;\n    var found = false, pos = stream.end;\n    while (!found && pos > 0) {\n     pos -= step - 'startxref'.length;\n     if (pos < 0) {\n      pos = 0;\n     }\n     stream.pos = pos;\n     found = find(stream, 'startxref', step, true);\n    }\n    if (found) {\n     stream.skip(9);\n     var ch;\n     do {\n      ch = stream.getByte();\n     } while (isSpace(ch));\n     var str = '';\n     while (ch >= 0x20 && ch <= 0x39) {\n      str += String.fromCharCode(ch);\n      ch = stream.getByte();\n     }\n     startXRef = parseInt(str, 10);\n     if (isNaN(startXRef)) {\n      startXRef = 0;\n     }\n    }\n   }\n   return shadow(this, 'startXRef', startXRef);\n  },\n  get mainXRefEntriesOffset() {\n   var mainXRefEntriesOffset = 0;\n   var linearization = this.linearization;\n   if (linearization) {\n    mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\n   }\n   return shadow(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\n  },\n  checkHeader: function PDFDocument_checkHeader() {\n   var stream = this.stream;\n   stream.reset();\n   if (find(stream, '%PDF-', 1024)) {\n    stream.moveStart();\n    var MAX_VERSION_LENGTH = 12;\n    var version = '', ch;\n    while ((ch = stream.getByte()) > 0x20) {\n     if (version.length >= MAX_VERSION_LENGTH) {\n      break;\n     }\n     version += String.fromCharCode(ch);\n    }\n    if (!this.pdfFormatVersion) {\n     this.pdfFormatVersion = version.substring(5);\n    }\n    return;\n   }\n  },\n  parseStartXRef: function PDFDocument_parseStartXRef() {\n   var startXRef = this.startXRef;\n   this.xref.setStartXRef(startXRef);\n  },\n  setup: function PDFDocument_setup(recoveryMode) {\n   this.xref.parse(recoveryMode);\n   var self = this;\n   var pageFactory = {\n    createPage: function (pageIndex, dict, ref, fontCache, builtInCMapCache) {\n     return new Page(self.pdfManager, self.xref, pageIndex, dict, ref, fontCache, builtInCMapCache);\n    }\n   };\n   this.catalog = new Catalog(this.pdfManager, this.xref, pageFactory);\n  },\n  get numPages() {\n   var linearization = this.linearization;\n   var num = linearization ? linearization.numPages : this.catalog.numPages;\n   return shadow(this, 'numPages', num);\n  },\n  get documentInfo() {\n   var docInfo = {\n    PDFFormatVersion: this.pdfFormatVersion,\n    IsAcroFormPresent: !!this.acroForm,\n    IsXFAPresent: !!this.xfa\n   };\n   var infoDict;\n   try {\n    infoDict = this.xref.trailer.get('Info');\n   } catch (err) {\n    info('The document information dictionary is invalid.');\n   }\n   if (infoDict) {\n    var validEntries = DocumentInfoValidators.entries;\n    for (var key in validEntries) {\n     if (infoDict.has(key)) {\n      var value = infoDict.get(key);\n      if (validEntries[key](value)) {\n       docInfo[key] = typeof value !== 'string' ? value : stringToPDFString(value);\n      } else {\n       info('Bad value in document info for \"' + key + '\"');\n      }\n     }\n    }\n   }\n   return shadow(this, 'documentInfo', docInfo);\n  },\n  get fingerprint() {\n   var xref = this.xref, hash, fileID = '';\n   var idArray = xref.trailer.get('ID');\n   if (idArray && isArray(idArray) && idArray[0] && isString(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\n    hash = stringToBytes(idArray[0]);\n   } else {\n    if (this.stream.ensureRange) {\n     this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\n    }\n    hash = calculateMD5(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\n   }\n   for (var i = 0, n = hash.length; i < n; i++) {\n    var hex = hash[i].toString(16);\n    fileID += hex.length === 1 ? '0' + hex : hex;\n   }\n   return shadow(this, 'fingerprint', fileID);\n  },\n  getPage: function PDFDocument_getPage(pageIndex) {\n   return this.catalog.getPage(pageIndex);\n  },\n  cleanup: function PDFDocument_cleanup() {\n   return this.catalog.cleanup();\n  }\n };\n return PDFDocument;\n}();\nexports.Page = Page;\nexports.PDFDocument = PDFDocument;\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar coreStream = __w_pdfjs_require__(2);\nvar coreGlyphList = __w_pdfjs_require__(7);\nvar coreEncodings = __w_pdfjs_require__(4);\nvar coreCFFParser = __w_pdfjs_require__(11);\nvar Util = sharedUtil.Util;\nvar bytesToString = sharedUtil.bytesToString;\nvar error = sharedUtil.error;\nvar Stream = coreStream.Stream;\nvar getGlyphsUnicode = coreGlyphList.getGlyphsUnicode;\nvar StandardEncoding = coreEncodings.StandardEncoding;\nvar CFFParser = coreCFFParser.CFFParser;\nvar FontRendererFactory = function FontRendererFactoryClosure() {\n function getLong(data, offset) {\n  return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n }\n function getUshort(data, offset) {\n  return data[offset] << 8 | data[offset + 1];\n }\n function parseCmap(data, start, end) {\n  var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\n  var format = getUshort(data, start + offset);\n  var ranges, p, i;\n  if (format === 4) {\n   getUshort(data, start + offset + 2);\n   var segCount = getUshort(data, start + offset + 6) >> 1;\n   p = start + offset + 14;\n   ranges = [];\n   for (i = 0; i < segCount; i++, p += 2) {\n    ranges[i] = { end: getUshort(data, p) };\n   }\n   p += 2;\n   for (i = 0; i < segCount; i++, p += 2) {\n    ranges[i].start = getUshort(data, p);\n   }\n   for (i = 0; i < segCount; i++, p += 2) {\n    ranges[i].idDelta = getUshort(data, p);\n   }\n   for (i = 0; i < segCount; i++, p += 2) {\n    var idOffset = getUshort(data, p);\n    if (idOffset === 0) {\n     continue;\n    }\n    ranges[i].ids = [];\n    for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\n     ranges[i].ids[j] = getUshort(data, p + idOffset);\n     idOffset += 2;\n    }\n   }\n   return ranges;\n  } else if (format === 12) {\n   getLong(data, start + offset + 4);\n   var groups = getLong(data, start + offset + 12);\n   p = start + offset + 16;\n   ranges = [];\n   for (i = 0; i < groups; i++) {\n    ranges.push({\n     start: getLong(data, p),\n     end: getLong(data, p + 4),\n     idDelta: getLong(data, p + 8) - getLong(data, p)\n    });\n    p += 12;\n   }\n   return ranges;\n  }\n  error('not supported cmap: ' + format);\n }\n function parseCff(data, start, end, seacAnalysisEnabled) {\n  var properties = {};\n  var parser = new CFFParser(new Stream(data, start, end - start), properties, seacAnalysisEnabled);\n  var cff = parser.parse();\n  return {\n   glyphs: cff.charStrings.objects,\n   subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\n   gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects\n  };\n }\n function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\n  var itemSize, itemDecode;\n  if (isGlyphLocationsLong) {\n   itemSize = 4;\n   itemDecode = function fontItemDecodeLong(data, offset) {\n    return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n   };\n  } else {\n   itemSize = 2;\n   itemDecode = function fontItemDecode(data, offset) {\n    return data[offset] << 9 | data[offset + 1] << 1;\n   };\n  }\n  var glyphs = [];\n  var startOffset = itemDecode(loca, 0);\n  for (var j = itemSize; j < loca.length; j += itemSize) {\n   var endOffset = itemDecode(loca, j);\n   glyphs.push(glyf.subarray(startOffset, endOffset));\n   startOffset = endOffset;\n  }\n  return glyphs;\n }\n function lookupCmap(ranges, unicode) {\n  var code = unicode.charCodeAt(0), gid = 0;\n  var l = 0, r = ranges.length - 1;\n  while (l < r) {\n   var c = l + r + 1 >> 1;\n   if (code < ranges[c].start) {\n    r = c - 1;\n   } else {\n    l = c;\n   }\n  }\n  if (ranges[l].start <= code && code <= ranges[l].end) {\n   gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\n  }\n  return {\n   charCode: code,\n   glyphId: gid\n  };\n }\n function compileGlyf(code, cmds, font) {\n  function moveTo(x, y) {\n   cmds.push({\n    cmd: 'moveTo',\n    args: [\n     x,\n     y\n    ]\n   });\n  }\n  function lineTo(x, y) {\n   cmds.push({\n    cmd: 'lineTo',\n    args: [\n     x,\n     y\n    ]\n   });\n  }\n  function quadraticCurveTo(xa, ya, x, y) {\n   cmds.push({\n    cmd: 'quadraticCurveTo',\n    args: [\n     xa,\n     ya,\n     x,\n     y\n    ]\n   });\n  }\n  var i = 0;\n  var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\n  var flags;\n  var x = 0, y = 0;\n  i += 10;\n  if (numberOfContours < 0) {\n   do {\n    flags = code[i] << 8 | code[i + 1];\n    var glyphIndex = code[i + 2] << 8 | code[i + 3];\n    i += 4;\n    var arg1, arg2;\n    if (flags & 0x01) {\n     arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\n     arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\n     i += 4;\n    } else {\n     arg1 = code[i++];\n     arg2 = code[i++];\n    }\n    if (flags & 0x02) {\n     x = arg1;\n     y = arg2;\n    } else {\n     x = 0;\n     y = 0;\n    }\n    var scaleX = 1, scaleY = 1, scale01 = 0, scale10 = 0;\n    if (flags & 0x08) {\n     scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n     i += 2;\n    } else if (flags & 0x40) {\n     scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n     scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n     i += 4;\n    } else if (flags & 0x80) {\n     scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n     scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n     scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\n     scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\n     i += 8;\n    }\n    var subglyph = font.glyphs[glyphIndex];\n    if (subglyph) {\n     cmds.push({ cmd: 'save' });\n     cmds.push({\n      cmd: 'transform',\n      args: [\n       scaleX,\n       scale01,\n       scale10,\n       scaleY,\n       x,\n       y\n      ]\n     });\n     compileGlyf(subglyph, cmds, font);\n     cmds.push({ cmd: 'restore' });\n    }\n   } while (flags & 0x20);\n  } else {\n   var endPtsOfContours = [];\n   var j, jj;\n   for (j = 0; j < numberOfContours; j++) {\n    endPtsOfContours.push(code[i] << 8 | code[i + 1]);\n    i += 2;\n   }\n   var instructionLength = code[i] << 8 | code[i + 1];\n   i += 2 + instructionLength;\n   var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n   var points = [];\n   while (points.length < numberOfPoints) {\n    flags = code[i++];\n    var repeat = 1;\n    if (flags & 0x08) {\n     repeat += code[i++];\n    }\n    while (repeat-- > 0) {\n     points.push({ flags: flags });\n    }\n   }\n   for (j = 0; j < numberOfPoints; j++) {\n    switch (points[j].flags & 0x12) {\n    case 0x00:\n     x += (code[i] << 24 | code[i + 1] << 16) >> 16;\n     i += 2;\n     break;\n    case 0x02:\n     x -= code[i++];\n     break;\n    case 0x12:\n     x += code[i++];\n     break;\n    }\n    points[j].x = x;\n   }\n   for (j = 0; j < numberOfPoints; j++) {\n    switch (points[j].flags & 0x24) {\n    case 0x00:\n     y += (code[i] << 24 | code[i + 1] << 16) >> 16;\n     i += 2;\n     break;\n    case 0x04:\n     y -= code[i++];\n     break;\n    case 0x24:\n     y += code[i++];\n     break;\n    }\n    points[j].y = y;\n   }\n   var startPoint = 0;\n   for (i = 0; i < numberOfContours; i++) {\n    var endPoint = endPtsOfContours[i];\n    var contour = points.slice(startPoint, endPoint + 1);\n    if (contour[0].flags & 1) {\n     contour.push(contour[0]);\n    } else if (contour[contour.length - 1].flags & 1) {\n     contour.unshift(contour[contour.length - 1]);\n    } else {\n     var p = {\n      flags: 1,\n      x: (contour[0].x + contour[contour.length - 1].x) / 2,\n      y: (contour[0].y + contour[contour.length - 1].y) / 2\n     };\n     contour.unshift(p);\n     contour.push(p);\n    }\n    moveTo(contour[0].x, contour[0].y);\n    for (j = 1, jj = contour.length; j < jj; j++) {\n     if (contour[j].flags & 1) {\n      lineTo(contour[j].x, contour[j].y);\n     } else if (contour[j + 1].flags & 1) {\n      quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\n      j++;\n     } else {\n      quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\n     }\n    }\n    startPoint = endPoint + 1;\n   }\n  }\n }\n function compileCharString(code, cmds, font) {\n  var stack = [];\n  var x = 0, y = 0;\n  var stems = 0;\n  function moveTo(x, y) {\n   cmds.push({\n    cmd: 'moveTo',\n    args: [\n     x,\n     y\n    ]\n   });\n  }\n  function lineTo(x, y) {\n   cmds.push({\n    cmd: 'lineTo',\n    args: [\n     x,\n     y\n    ]\n   });\n  }\n  function bezierCurveTo(x1, y1, x2, y2, x, y) {\n   cmds.push({\n    cmd: 'bezierCurveTo',\n    args: [\n     x1,\n     y1,\n     x2,\n     y2,\n     x,\n     y\n    ]\n   });\n  }\n  function parse(code) {\n   var i = 0;\n   while (i < code.length) {\n    var stackClean = false;\n    var v = code[i++];\n    var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\n    switch (v) {\n    case 1:\n     stems += stack.length >> 1;\n     stackClean = true;\n     break;\n    case 3:\n     stems += stack.length >> 1;\n     stackClean = true;\n     break;\n    case 4:\n     y += stack.pop();\n     moveTo(x, y);\n     stackClean = true;\n     break;\n    case 5:\n     while (stack.length > 0) {\n      x += stack.shift();\n      y += stack.shift();\n      lineTo(x, y);\n     }\n     break;\n    case 6:\n     while (stack.length > 0) {\n      x += stack.shift();\n      lineTo(x, y);\n      if (stack.length === 0) {\n       break;\n      }\n      y += stack.shift();\n      lineTo(x, y);\n     }\n     break;\n    case 7:\n     while (stack.length > 0) {\n      y += stack.shift();\n      lineTo(x, y);\n      if (stack.length === 0) {\n       break;\n      }\n      x += stack.shift();\n      lineTo(x, y);\n     }\n     break;\n    case 8:\n     while (stack.length > 0) {\n      xa = x + stack.shift();\n      ya = y + stack.shift();\n      xb = xa + stack.shift();\n      yb = ya + stack.shift();\n      x = xb + stack.shift();\n      y = yb + stack.shift();\n      bezierCurveTo(xa, ya, xb, yb, x, y);\n     }\n     break;\n    case 10:\n     n = stack.pop() + font.subrsBias;\n     subrCode = font.subrs[n];\n     if (subrCode) {\n      parse(subrCode);\n     }\n     break;\n    case 11:\n     return;\n    case 12:\n     v = code[i++];\n     switch (v) {\n     case 34:\n      xa = x + stack.shift();\n      xb = xa + stack.shift();\n      y1 = y + stack.shift();\n      x = xb + stack.shift();\n      bezierCurveTo(xa, y, xb, y1, x, y1);\n      xa = x + stack.shift();\n      xb = xa + stack.shift();\n      x = xb + stack.shift();\n      bezierCurveTo(xa, y1, xb, y, x, y);\n      break;\n     case 35:\n      xa = x + stack.shift();\n      ya = y + stack.shift();\n      xb = xa + stack.shift();\n      yb = ya + stack.shift();\n      x = xb + stack.shift();\n      y = yb + stack.shift();\n      bezierCurveTo(xa, ya, xb, yb, x, y);\n      xa = x + stack.shift();\n      ya = y + stack.shift();\n      xb = xa + stack.shift();\n      yb = ya + stack.shift();\n      x = xb + stack.shift();\n      y = yb + stack.shift();\n      bezierCurveTo(xa, ya, xb, yb, x, y);\n      stack.pop();\n      break;\n     case 36:\n      xa = x + stack.shift();\n      y1 = y + stack.shift();\n      xb = xa + stack.shift();\n      y2 = y1 + stack.shift();\n      x = xb + stack.shift();\n      bezierCurveTo(xa, y1, xb, y2, x, y2);\n      xa = x + stack.shift();\n      xb = xa + stack.shift();\n      y3 = y2 + stack.shift();\n      x = xb + stack.shift();\n      bezierCurveTo(xa, y2, xb, y3, x, y);\n      break;\n     case 37:\n      var x0 = x, y0 = y;\n      xa = x + stack.shift();\n      ya = y + stack.shift();\n      xb = xa + stack.shift();\n      yb = ya + stack.shift();\n      x = xb + stack.shift();\n      y = yb + stack.shift();\n      bezierCurveTo(xa, ya, xb, yb, x, y);\n      xa = x + stack.shift();\n      ya = y + stack.shift();\n      xb = xa + stack.shift();\n      yb = ya + stack.shift();\n      x = xb;\n      y = yb;\n      if (Math.abs(x - x0) > Math.abs(y - y0)) {\n       x += stack.shift();\n      } else {\n       y += stack.shift();\n      }\n      bezierCurveTo(xa, ya, xb, yb, x, y);\n      break;\n     default:\n      error('unknown operator: 12 ' + v);\n     }\n     break;\n    case 14:\n     if (stack.length >= 4) {\n      var achar = stack.pop();\n      var bchar = stack.pop();\n      y = stack.pop();\n      x = stack.pop();\n      cmds.push({ cmd: 'save' });\n      cmds.push({\n       cmd: 'translate',\n       args: [\n        x,\n        y\n       ]\n      });\n      var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[StandardEncoding[achar]]));\n      compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n      cmds.push({ cmd: 'restore' });\n      cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[StandardEncoding[bchar]]));\n      compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n     }\n     return;\n    case 18:\n     stems += stack.length >> 1;\n     stackClean = true;\n     break;\n    case 19:\n     stems += stack.length >> 1;\n     i += stems + 7 >> 3;\n     stackClean = true;\n     break;\n    case 20:\n     stems += stack.length >> 1;\n     i += stems + 7 >> 3;\n     stackClean = true;\n     break;\n    case 21:\n     y += stack.pop();\n     x += stack.pop();\n     moveTo(x, y);\n     stackClean = true;\n     break;\n    case 22:\n     x += stack.pop();\n     moveTo(x, y);\n     stackClean = true;\n     break;\n    case 23:\n     stems += stack.length >> 1;\n     stackClean = true;\n     break;\n    case 24:\n     while (stack.length > 2) {\n      xa = x + stack.shift();\n      ya = y + stack.shift();\n      xb = xa + stack.shift();\n      yb = ya + stack.shift();\n      x = xb + stack.shift();\n      y = yb + stack.shift();\n      bezierCurveTo(xa, ya, xb, yb, x, y);\n     }\n     x += stack.shift();\n     y += stack.shift();\n     lineTo(x, y);\n     break;\n    case 25:\n     while (stack.length > 6) {\n      x += stack.shift();\n      y += stack.shift();\n      lineTo(x, y);\n     }\n     xa = x + stack.shift();\n     ya = y + stack.shift();\n     xb = xa + stack.shift();\n     yb = ya + stack.shift();\n     x = xb + stack.shift();\n     y = yb + stack.shift();\n     bezierCurveTo(xa, ya, xb, yb, x, y);\n     break;\n    case 26:\n     if (stack.length % 2) {\n      x += stack.shift();\n     }\n     while (stack.length > 0) {\n      xa = x;\n      ya = y + stack.shift();\n      xb = xa + stack.shift();\n      yb = ya + stack.shift();\n      x = xb;\n      y = yb + stack.shift();\n      bezierCurveTo(xa, ya, xb, yb, x, y);\n     }\n     break;\n    case 27:\n     if (stack.length % 2) {\n      y += stack.shift();\n     }\n     while (stack.length > 0) {\n      xa = x + stack.shift();\n      ya = y;\n      xb = xa + stack.shift();\n      yb = ya + stack.shift();\n      x = xb + stack.shift();\n      y = yb;\n      bezierCurveTo(xa, ya, xb, yb, x, y);\n     }\n     break;\n    case 28:\n     stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\n     i += 2;\n     break;\n    case 29:\n     n = stack.pop() + font.gsubrsBias;\n     subrCode = font.gsubrs[n];\n     if (subrCode) {\n      parse(subrCode);\n     }\n     break;\n    case 30:\n     while (stack.length > 0) {\n      xa = x;\n      ya = y + stack.shift();\n      xb = xa + stack.shift();\n      yb = ya + stack.shift();\n      x = xb + stack.shift();\n      y = yb + (stack.length === 1 ? stack.shift() : 0);\n      bezierCurveTo(xa, ya, xb, yb, x, y);\n      if (stack.length === 0) {\n       break;\n      }\n      xa = x + stack.shift();\n      ya = y;\n      xb = xa + stack.shift();\n      yb = ya + stack.shift();\n      y = yb + stack.shift();\n      x = xb + (stack.length === 1 ? stack.shift() : 0);\n      bezierCurveTo(xa, ya, xb, yb, x, y);\n     }\n     break;\n    case 31:\n     while (stack.length > 0) {\n      xa = x + stack.shift();\n      ya = y;\n      xb = xa + stack.shift();\n      yb = ya + stack.shift();\n      y = yb + stack.shift();\n      x = xb + (stack.length === 1 ? stack.shift() : 0);\n      bezierCurveTo(xa, ya, xb, yb, x, y);\n      if (stack.length === 0) {\n       break;\n      }\n      xa = x;\n      ya = y + stack.shift();\n      xb = xa + stack.shift();\n      yb = ya + stack.shift();\n      x = xb + stack.shift();\n      y = yb + (stack.length === 1 ? stack.shift() : 0);\n      bezierCurveTo(xa, ya, xb, yb, x, y);\n     }\n     break;\n    default:\n     if (v < 32) {\n      error('unknown operator: ' + v);\n     }\n     if (v < 247) {\n      stack.push(v - 139);\n     } else if (v < 251) {\n      stack.push((v - 247) * 256 + code[i++] + 108);\n     } else if (v < 255) {\n      stack.push(-(v - 251) * 256 - code[i++] - 108);\n     } else {\n      stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\n      i += 4;\n     }\n     break;\n    }\n    if (stackClean) {\n     stack.length = 0;\n    }\n   }\n  }\n  parse(code);\n }\n var noop = '';\n function CompiledFont(fontMatrix) {\n  this.compiledGlyphs = Object.create(null);\n  this.compiledCharCodeToGlyphId = Object.create(null);\n  this.fontMatrix = fontMatrix;\n }\n CompiledFont.prototype = {\n  getPathJs: function (unicode) {\n   var cmap = lookupCmap(this.cmap, unicode);\n   var fn = this.compiledGlyphs[cmap.glyphId];\n   if (!fn) {\n    fn = this.compileGlyph(this.glyphs[cmap.glyphId]);\n    this.compiledGlyphs[cmap.glyphId] = fn;\n   }\n   if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\n    this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\n   }\n   return fn;\n  },\n  compileGlyph: function (code) {\n   if (!code || code.length === 0 || code[0] === 14) {\n    return noop;\n   }\n   var cmds = [];\n   cmds.push({ cmd: 'save' });\n   cmds.push({\n    cmd: 'transform',\n    args: this.fontMatrix.slice()\n   });\n   cmds.push({\n    cmd: 'scale',\n    args: [\n     'size',\n     '-size'\n    ]\n   });\n   this.compileGlyphImpl(code, cmds);\n   cmds.push({ cmd: 'restore' });\n   return cmds;\n  },\n  compileGlyphImpl: function () {\n   error('Children classes should implement this.');\n  },\n  hasBuiltPath: function (unicode) {\n   var cmap = lookupCmap(this.cmap, unicode);\n   return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\n  }\n };\n function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\n  fontMatrix = fontMatrix || [\n   0.000488,\n   0,\n   0,\n   0.000488,\n   0,\n   0\n  ];\n  CompiledFont.call(this, fontMatrix);\n  this.glyphs = glyphs;\n  this.cmap = cmap;\n }\n Util.inherit(TrueTypeCompiled, CompiledFont, {\n  compileGlyphImpl: function (code, cmds) {\n   compileGlyf(code, cmds, this);\n  }\n });\n function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\n  fontMatrix = fontMatrix || [\n   0.001,\n   0,\n   0,\n   0.001,\n   0,\n   0\n  ];\n  CompiledFont.call(this, fontMatrix);\n  this.glyphs = cffInfo.glyphs;\n  this.gsubrs = cffInfo.gsubrs || [];\n  this.subrs = cffInfo.subrs || [];\n  this.cmap = cmap;\n  this.glyphNameMap = glyphNameMap || getGlyphsUnicode();\n  this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;\n  this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;\n }\n Util.inherit(Type2Compiled, CompiledFont, {\n  compileGlyphImpl: function (code, cmds) {\n   compileCharString(code, cmds, this);\n  }\n });\n return {\n  create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\n   var data = new Uint8Array(font.data);\n   var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\n   var numTables = getUshort(data, 4);\n   for (var i = 0, p = 12; i < numTables; i++, p += 16) {\n    var tag = bytesToString(data.subarray(p, p + 4));\n    var offset = getLong(data, p + 8);\n    var length = getLong(data, p + 12);\n    switch (tag) {\n    case 'cmap':\n     cmap = parseCmap(data, offset, offset + length);\n     break;\n    case 'glyf':\n     glyf = data.subarray(offset, offset + length);\n     break;\n    case 'loca':\n     loca = data.subarray(offset, offset + length);\n     break;\n    case 'head':\n     unitsPerEm = getUshort(data, offset + 18);\n     indexToLocFormat = getUshort(data, offset + 50);\n     break;\n    case 'CFF ':\n     cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\n     break;\n    }\n   }\n   if (glyf) {\n    var fontMatrix = !unitsPerEm ? font.fontMatrix : [\n     1 / unitsPerEm,\n     0,\n     0,\n     1 / unitsPerEm,\n     0,\n     0\n    ];\n    return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\n   }\n   return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\n  }\n };\n}();\nexports.FontRendererFactory = FontRendererFactory;\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar coreStream = __w_pdfjs_require__(2);\nvar coreGlyphList = __w_pdfjs_require__(7);\nvar coreFontRenderer = __w_pdfjs_require__(25);\nvar coreEncodings = __w_pdfjs_require__(4);\nvar coreStandardFonts = __w_pdfjs_require__(17);\nvar coreUnicode = __w_pdfjs_require__(18);\nvar coreType1Parser = __w_pdfjs_require__(35);\nvar coreCFFParser = __w_pdfjs_require__(11);\nvar FONT_IDENTITY_MATRIX = sharedUtil.FONT_IDENTITY_MATRIX;\nvar FontType = sharedUtil.FontType;\nvar assert = sharedUtil.assert;\nvar bytesToString = sharedUtil.bytesToString;\nvar error = sharedUtil.error;\nvar info = sharedUtil.info;\nvar isArray = sharedUtil.isArray;\nvar isInt = sharedUtil.isInt;\nvar isNum = sharedUtil.isNum;\nvar readUint32 = sharedUtil.readUint32;\nvar shadow = sharedUtil.shadow;\nvar string32 = sharedUtil.string32;\nvar warn = sharedUtil.warn;\nvar MissingDataException = sharedUtil.MissingDataException;\nvar isSpace = sharedUtil.isSpace;\nvar Stream = coreStream.Stream;\nvar getGlyphsUnicode = coreGlyphList.getGlyphsUnicode;\nvar getDingbatsGlyphsUnicode = coreGlyphList.getDingbatsGlyphsUnicode;\nvar FontRendererFactory = coreFontRenderer.FontRendererFactory;\nvar StandardEncoding = coreEncodings.StandardEncoding;\nvar MacRomanEncoding = coreEncodings.MacRomanEncoding;\nvar SymbolSetEncoding = coreEncodings.SymbolSetEncoding;\nvar ZapfDingbatsEncoding = coreEncodings.ZapfDingbatsEncoding;\nvar getEncoding = coreEncodings.getEncoding;\nvar getStdFontMap = coreStandardFonts.getStdFontMap;\nvar getNonStdFontMap = coreStandardFonts.getNonStdFontMap;\nvar getGlyphMapForStandardFonts = coreStandardFonts.getGlyphMapForStandardFonts;\nvar getSupplementalGlyphMapForArialBlack = coreStandardFonts.getSupplementalGlyphMapForArialBlack;\nvar getUnicodeRangeFor = coreUnicode.getUnicodeRangeFor;\nvar mapSpecialUnicodeValues = coreUnicode.mapSpecialUnicodeValues;\nvar getUnicodeForGlyph = coreUnicode.getUnicodeForGlyph;\nvar Type1Parser = coreType1Parser.Type1Parser;\nvar CFFStandardStrings = coreCFFParser.CFFStandardStrings;\nvar CFFParser = coreCFFParser.CFFParser;\nvar CFFCompiler = coreCFFParser.CFFCompiler;\nvar CFF = coreCFFParser.CFF;\nvar CFFHeader = coreCFFParser.CFFHeader;\nvar CFFTopDict = coreCFFParser.CFFTopDict;\nvar CFFPrivateDict = coreCFFParser.CFFPrivateDict;\nvar CFFStrings = coreCFFParser.CFFStrings;\nvar CFFIndex = coreCFFParser.CFFIndex;\nvar CFFCharset = coreCFFParser.CFFCharset;\nvar PRIVATE_USE_OFFSET_START = 0xE000;\nvar PRIVATE_USE_OFFSET_END = 0xF8FF;\nvar SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\nvar PDF_GLYPH_SPACE_UNITS = 1000;\nvar SEAC_ANALYSIS_ENABLED = false;\nvar FontFlags = {\n FixedPitch: 1,\n Serif: 2,\n Symbolic: 4,\n Script: 8,\n Nonsymbolic: 32,\n Italic: 64,\n AllCap: 65536,\n SmallCap: 131072,\n ForceBold: 262144\n};\nvar MacStandardGlyphOrdering = [\n '.notdef',\n '.null',\n 'nonmarkingreturn',\n 'space',\n 'exclam',\n 'quotedbl',\n 'numbersign',\n 'dollar',\n 'percent',\n 'ampersand',\n 'quotesingle',\n 'parenleft',\n 'parenright',\n 'asterisk',\n 'plus',\n 'comma',\n 'hyphen',\n 'period',\n 'slash',\n 'zero',\n 'one',\n 'two',\n 'three',\n 'four',\n 'five',\n 'six',\n 'seven',\n 'eight',\n 'nine',\n 'colon',\n 'semicolon',\n 'less',\n 'equal',\n 'greater',\n 'question',\n 'at',\n 'A',\n 'B',\n 'C',\n 'D',\n 'E',\n 'F',\n 'G',\n 'H',\n 'I',\n 'J',\n 'K',\n 'L',\n 'M',\n 'N',\n 'O',\n 'P',\n 'Q',\n 'R',\n 'S',\n 'T',\n 'U',\n 'V',\n 'W',\n 'X',\n 'Y',\n 'Z',\n 'bracketleft',\n 'backslash',\n 'bracketright',\n 'asciicircum',\n 'underscore',\n 'grave',\n 'a',\n 'b',\n 'c',\n 'd',\n 'e',\n 'f',\n 'g',\n 'h',\n 'i',\n 'j',\n 'k',\n 'l',\n 'm',\n 'n',\n 'o',\n 'p',\n 'q',\n 'r',\n 's',\n 't',\n 'u',\n 'v',\n 'w',\n 'x',\n 'y',\n 'z',\n 'braceleft',\n 'bar',\n 'braceright',\n 'asciitilde',\n 'Adieresis',\n 'Aring',\n 'Ccedilla',\n 'Eacute',\n 'Ntilde',\n 'Odieresis',\n 'Udieresis',\n 'aacute',\n 'agrave',\n 'acircumflex',\n 'adieresis',\n 'atilde',\n 'aring',\n 'ccedilla',\n 'eacute',\n 'egrave',\n 'ecircumflex',\n 'edieresis',\n 'iacute',\n 'igrave',\n 'icircumflex',\n 'idieresis',\n 'ntilde',\n 'oacute',\n 'ograve',\n 'ocircumflex',\n 'odieresis',\n 'otilde',\n 'uacute',\n 'ugrave',\n 'ucircumflex',\n 'udieresis',\n 'dagger',\n 'degree',\n 'cent',\n 'sterling',\n 'section',\n 'bullet',\n 'paragraph',\n 'germandbls',\n 'registered',\n 'copyright',\n 'trademark',\n 'acute',\n 'dieresis',\n 'notequal',\n 'AE',\n 'Oslash',\n 'infinity',\n 'plusminus',\n 'lessequal',\n 'greaterequal',\n 'yen',\n 'mu',\n 'partialdiff',\n 'summation',\n 'product',\n 'pi',\n 'integral',\n 'ordfeminine',\n 'ordmasculine',\n 'Omega',\n 'ae',\n 'oslash',\n 'questiondown',\n 'exclamdown',\n 'logicalnot',\n 'radical',\n 'florin',\n 'approxequal',\n 'Delta',\n 'guillemotleft',\n 'guillemotright',\n 'ellipsis',\n 'nonbreakingspace',\n 'Agrave',\n 'Atilde',\n 'Otilde',\n 'OE',\n 'oe',\n 'endash',\n 'emdash',\n 'quotedblleft',\n 'quotedblright',\n 'quoteleft',\n 'quoteright',\n 'divide',\n 'lozenge',\n 'ydieresis',\n 'Ydieresis',\n 'fraction',\n 'currency',\n 'guilsinglleft',\n 'guilsinglright',\n 'fi',\n 'fl',\n 'daggerdbl',\n 'periodcentered',\n 'quotesinglbase',\n 'quotedblbase',\n 'perthousand',\n 'Acircumflex',\n 'Ecircumflex',\n 'Aacute',\n 'Edieresis',\n 'Egrave',\n 'Iacute',\n 'Icircumflex',\n 'Idieresis',\n 'Igrave',\n 'Oacute',\n 'Ocircumflex',\n 'apple',\n 'Ograve',\n 'Uacute',\n 'Ucircumflex',\n 'Ugrave',\n 'dotlessi',\n 'circumflex',\n 'tilde',\n 'macron',\n 'breve',\n 'dotaccent',\n 'ring',\n 'cedilla',\n 'hungarumlaut',\n 'ogonek',\n 'caron',\n 'Lslash',\n 'lslash',\n 'Scaron',\n 'scaron',\n 'Zcaron',\n 'zcaron',\n 'brokenbar',\n 'Eth',\n 'eth',\n 'Yacute',\n 'yacute',\n 'Thorn',\n 'thorn',\n 'minus',\n 'multiply',\n 'onesuperior',\n 'twosuperior',\n 'threesuperior',\n 'onehalf',\n 'onequarter',\n 'threequarters',\n 'franc',\n 'Gbreve',\n 'gbreve',\n 'Idotaccent',\n 'Scedilla',\n 'scedilla',\n 'Cacute',\n 'cacute',\n 'Ccaron',\n 'ccaron',\n 'dcroat'\n];\nfunction adjustWidths(properties) {\n if (!properties.fontMatrix) {\n  return;\n }\n if (properties.fontMatrix[0] === FONT_IDENTITY_MATRIX[0]) {\n  return;\n }\n var scale = 0.001 / properties.fontMatrix[0];\n var glyphsWidths = properties.widths;\n for (var glyph in glyphsWidths) {\n  glyphsWidths[glyph] *= scale;\n }\n properties.defaultWidth *= scale;\n}\nfunction adjustToUnicode(properties, builtInEncoding) {\n if (properties.hasIncludedToUnicodeMap) {\n  return;\n }\n if (properties.hasEncoding) {\n  return;\n }\n if (builtInEncoding === properties.defaultEncoding) {\n  return;\n }\n if (properties.toUnicode instanceof IdentityToUnicodeMap) {\n  return;\n }\n var toUnicode = [], glyphsUnicodeMap = getGlyphsUnicode();\n for (var charCode in builtInEncoding) {\n  var glyphName = builtInEncoding[charCode];\n  var unicode = getUnicodeForGlyph(glyphName, glyphsUnicodeMap);\n  if (unicode !== -1) {\n   toUnicode[charCode] = String.fromCharCode(unicode);\n  }\n }\n properties.toUnicode.amend(toUnicode);\n}\nfunction getFontType(type, subtype) {\n switch (type) {\n case 'Type1':\n  return subtype === 'Type1C' ? FontType.TYPE1C : FontType.TYPE1;\n case 'CIDFontType0':\n  return subtype === 'CIDFontType0C' ? FontType.CIDFONTTYPE0C : FontType.CIDFONTTYPE0;\n case 'OpenType':\n  return FontType.OPENTYPE;\n case 'TrueType':\n  return FontType.TRUETYPE;\n case 'CIDFontType2':\n  return FontType.CIDFONTTYPE2;\n case 'MMType1':\n  return FontType.MMTYPE1;\n case 'Type0':\n  return FontType.TYPE0;\n default:\n  return FontType.UNKNOWN;\n }\n}\nfunction recoverGlyphName(name, glyphsUnicodeMap) {\n if (glyphsUnicodeMap[name] !== undefined) {\n  return name;\n }\n var unicode = getUnicodeForGlyph(name, glyphsUnicodeMap);\n if (unicode !== -1) {\n  for (var key in glyphsUnicodeMap) {\n   if (glyphsUnicodeMap[key] === unicode) {\n    return key;\n   }\n  }\n }\n info('Unable to recover a standard glyph name for: ' + name);\n return name;\n}\nvar Glyph = function GlyphClosure() {\n function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n  this.fontChar = fontChar;\n  this.unicode = unicode;\n  this.accent = accent;\n  this.width = width;\n  this.vmetric = vmetric;\n  this.operatorListId = operatorListId;\n  this.isSpace = isSpace;\n  this.isInFont = isInFont;\n }\n Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n  return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\n };\n return Glyph;\n}();\nvar ToUnicodeMap = function ToUnicodeMapClosure() {\n function ToUnicodeMap(cmap) {\n  this._map = cmap;\n }\n ToUnicodeMap.prototype = {\n  get length() {\n   return this._map.length;\n  },\n  forEach: function (callback) {\n   for (var charCode in this._map) {\n    callback(charCode, this._map[charCode].charCodeAt(0));\n   }\n  },\n  has: function (i) {\n   return this._map[i] !== undefined;\n  },\n  get: function (i) {\n   return this._map[i];\n  },\n  charCodeOf: function (v) {\n   return this._map.indexOf(v);\n  },\n  amend: function (map) {\n   for (var charCode in map) {\n    this._map[charCode] = map[charCode];\n   }\n  }\n };\n return ToUnicodeMap;\n}();\nvar IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\n function IdentityToUnicodeMap(firstChar, lastChar) {\n  this.firstChar = firstChar;\n  this.lastChar = lastChar;\n }\n IdentityToUnicodeMap.prototype = {\n  get length() {\n   return this.lastChar + 1 - this.firstChar;\n  },\n  forEach: function (callback) {\n   for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\n    callback(i, i);\n   }\n  },\n  has: function (i) {\n   return this.firstChar <= i && i <= this.lastChar;\n  },\n  get: function (i) {\n   if (this.firstChar <= i && i <= this.lastChar) {\n    return String.fromCharCode(i);\n   }\n   return undefined;\n  },\n  charCodeOf: function (v) {\n   return isInt(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\n  },\n  amend: function (map) {\n   error('Should not call amend()');\n  }\n };\n return IdentityToUnicodeMap;\n}();\nvar OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\n function writeInt16(dest, offset, num) {\n  dest[offset] = num >> 8 & 0xFF;\n  dest[offset + 1] = num & 0xFF;\n }\n function writeInt32(dest, offset, num) {\n  dest[offset] = num >> 24 & 0xFF;\n  dest[offset + 1] = num >> 16 & 0xFF;\n  dest[offset + 2] = num >> 8 & 0xFF;\n  dest[offset + 3] = num & 0xFF;\n }\n function writeData(dest, offset, data) {\n  var i, ii;\n  if (data instanceof Uint8Array) {\n   dest.set(data, offset);\n  } else if (typeof data === 'string') {\n   for (i = 0, ii = data.length; i < ii; i++) {\n    dest[offset++] = data.charCodeAt(i) & 0xFF;\n   }\n  } else {\n   for (i = 0, ii = data.length; i < ii; i++) {\n    dest[offset++] = data[i] & 0xFF;\n   }\n  }\n }\n function OpenTypeFileBuilder(sfnt) {\n  this.sfnt = sfnt;\n  this.tables = Object.create(null);\n }\n OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\n  var maxPower2 = 1, log2 = 0;\n  while ((maxPower2 ^ entriesCount) > maxPower2) {\n   maxPower2 <<= 1;\n   log2++;\n  }\n  var searchRange = maxPower2 * entrySize;\n  return {\n   range: searchRange,\n   entry: log2,\n   rangeShift: entrySize * entriesCount - searchRange\n  };\n };\n var OTF_HEADER_SIZE = 12;\n var OTF_TABLE_ENTRY_SIZE = 16;\n OpenTypeFileBuilder.prototype = {\n  toArray: function OpenTypeFileBuilder_toArray() {\n   var sfnt = this.sfnt;\n   var tables = this.tables;\n   var tablesNames = Object.keys(tables);\n   tablesNames.sort();\n   var numTables = tablesNames.length;\n   var i, j, jj, table, tableName;\n   var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\n   var tableOffsets = [offset];\n   for (i = 0; i < numTables; i++) {\n    table = tables[tablesNames[i]];\n    var paddedLength = (table.length + 3 & ~3) >>> 0;\n    offset += paddedLength;\n    tableOffsets.push(offset);\n   }\n   var file = new Uint8Array(offset);\n   for (i = 0; i < numTables; i++) {\n    table = tables[tablesNames[i]];\n    writeData(file, tableOffsets[i], table);\n   }\n   if (sfnt === 'true') {\n    sfnt = string32(0x00010000);\n   }\n   file[0] = sfnt.charCodeAt(0) & 0xFF;\n   file[1] = sfnt.charCodeAt(1) & 0xFF;\n   file[2] = sfnt.charCodeAt(2) & 0xFF;\n   file[3] = sfnt.charCodeAt(3) & 0xFF;\n   writeInt16(file, 4, numTables);\n   var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\n   writeInt16(file, 6, searchParams.range);\n   writeInt16(file, 8, searchParams.entry);\n   writeInt16(file, 10, searchParams.rangeShift);\n   offset = OTF_HEADER_SIZE;\n   for (i = 0; i < numTables; i++) {\n    tableName = tablesNames[i];\n    file[offset] = tableName.charCodeAt(0) & 0xFF;\n    file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\n    file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\n    file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\n    var checksum = 0;\n    for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\n     var quad = readUint32(file, j);\n     checksum = checksum + quad >>> 0;\n    }\n    writeInt32(file, offset + 4, checksum);\n    writeInt32(file, offset + 8, tableOffsets[i]);\n    writeInt32(file, offset + 12, tables[tableName].length);\n    offset += OTF_TABLE_ENTRY_SIZE;\n   }\n   return file;\n  },\n  addTable: function OpenTypeFileBuilder_addTable(tag, data) {\n   if (tag in this.tables) {\n    throw new Error('Table ' + tag + ' already exists');\n   }\n   this.tables[tag] = data;\n  }\n };\n return OpenTypeFileBuilder;\n}();\nvar ProblematicCharRanges = new Int32Array([\n 0x0000,\n 0x0020,\n 0x007F,\n 0x00A1,\n 0x00AD,\n 0x00AE,\n 0x0600,\n 0x0780,\n 0x08A0,\n 0x10A0,\n 0x1780,\n 0x1800,\n 0x1C00,\n 0x1C50,\n 0x2000,\n 0x2010,\n 0x2011,\n 0x2012,\n 0x2028,\n 0x2030,\n 0x205F,\n 0x2070,\n 0x25CC,\n 0x25CD,\n 0x3000,\n 0x3001,\n 0xAA60,\n 0xAA80,\n 0xFFF0,\n 0x10000\n]);\nvar Font = function FontClosure() {\n function Font(name, file, properties) {\n  var charCode, glyphName, unicode;\n  this.name = name;\n  this.loadedName = properties.loadedName;\n  this.isType3Font = properties.isType3Font;\n  this.sizes = [];\n  this.missingFile = false;\n  this.glyphCache = Object.create(null);\n  this.isSerifFont = !!(properties.flags & FontFlags.Serif);\n  this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n  this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\n  var type = properties.type;\n  var subtype = properties.subtype;\n  this.type = type;\n  this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\n  this.differences = properties.differences;\n  this.widths = properties.widths;\n  this.defaultWidth = properties.defaultWidth;\n  this.composite = properties.composite;\n  this.wideChars = properties.wideChars;\n  this.cMap = properties.cMap;\n  this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\n  this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\n  this.fontMatrix = properties.fontMatrix;\n  this.bbox = properties.bbox;\n  this.toUnicode = properties.toUnicode;\n  this.toFontChar = [];\n  if (properties.type === 'Type3') {\n   for (charCode = 0; charCode < 256; charCode++) {\n    this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\n   }\n   this.fontType = FontType.TYPE3;\n   return;\n  }\n  this.cidEncoding = properties.cidEncoding;\n  this.vertical = properties.vertical;\n  if (this.vertical) {\n   this.vmetrics = properties.vmetrics;\n   this.defaultVMetrics = properties.defaultVMetrics;\n  }\n  var glyphsUnicodeMap;\n  if (!file || file.isEmpty) {\n   if (file) {\n    warn('Font file is empty in \"' + name + '\" (' + this.loadedName + ')');\n   }\n   this.missingFile = true;\n   var fontName = name.replace(/[,_]/g, '-');\n   var stdFontMap = getStdFontMap(), nonStdFontMap = getNonStdFontMap();\n   var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\n   fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\n   this.bold = fontName.search(/bold/gi) !== -1;\n   this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\n   this.black = name.search(/Black/g) !== -1;\n   this.remeasure = Object.keys(this.widths).length > 0;\n   if (isStandardFont && type === 'CIDFontType2' && properties.cidEncoding.indexOf('Identity-') === 0) {\n    var GlyphMapForStandardFonts = getGlyphMapForStandardFonts();\n    var map = [];\n    for (charCode in GlyphMapForStandardFonts) {\n     map[+charCode] = GlyphMapForStandardFonts[charCode];\n    }\n    if (/Arial-?Black/i.test(name)) {\n     var SupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack();\n     for (charCode in SupplementalGlyphMapForArialBlack) {\n      map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\n     }\n    }\n    var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\n    if (!isIdentityUnicode) {\n     this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n      map[+charCode] = unicodeCharCode;\n     });\n    }\n    this.toFontChar = map;\n    this.toUnicode = new ToUnicodeMap(map);\n   } else if (/Symbol/i.test(fontName)) {\n    this.toFontChar = buildToFontChar(SymbolSetEncoding, getGlyphsUnicode(), properties.differences);\n   } else if (/Dingbats/i.test(fontName)) {\n    if (/Wingdings/i.test(name)) {\n     warn('Non-embedded Wingdings font, falling back to ZapfDingbats.');\n    }\n    this.toFontChar = buildToFontChar(ZapfDingbatsEncoding, getDingbatsGlyphsUnicode(), properties.differences);\n   } else if (isStandardFont) {\n    this.toFontChar = buildToFontChar(properties.defaultEncoding, getGlyphsUnicode(), properties.differences);\n   } else {\n    glyphsUnicodeMap = getGlyphsUnicode();\n    this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n     if (!this.composite) {\n      glyphName = properties.differences[charCode] || properties.defaultEncoding[charCode];\n      unicode = getUnicodeForGlyph(glyphName, glyphsUnicodeMap);\n      if (unicode !== -1) {\n       unicodeCharCode = unicode;\n      }\n     }\n     this.toFontChar[charCode] = unicodeCharCode;\n    }.bind(this));\n   }\n   this.loadedName = fontName.split('-')[0];\n   this.loading = false;\n   this.fontType = getFontType(type, subtype);\n   return;\n  }\n  if (subtype === 'Type1C') {\n   if (type !== 'Type1' && type !== 'MMType1') {\n    if (isTrueTypeFile(file)) {\n     subtype = 'TrueType';\n    } else {\n     type = 'Type1';\n    }\n   } else if (isOpenTypeFile(file)) {\n    type = subtype = 'OpenType';\n   }\n  }\n  if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\n   type = 'CIDFontType0';\n  }\n  if (subtype === 'OpenType') {\n   type = 'OpenType';\n  }\n  if (type === 'CIDFontType0') {\n   if (isType1File(file)) {\n    subtype = 'CIDFontType0';\n   } else if (isOpenTypeFile(file)) {\n    type = subtype = 'OpenType';\n   } else {\n    subtype = 'CIDFontType0C';\n   }\n  }\n  var data;\n  switch (type) {\n  case 'MMType1':\n   info('MMType1 font (' + name + '), falling back to Type1.');\n  case 'Type1':\n  case 'CIDFontType0':\n   this.mimetype = 'font/opentype';\n   var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\n   adjustWidths(properties);\n   data = this.convert(name, cff, properties);\n   break;\n  case 'OpenType':\n  case 'TrueType':\n  case 'CIDFontType2':\n   this.mimetype = 'font/opentype';\n   data = this.checkAndRepair(name, file, properties);\n   if (this.isOpenType) {\n    adjustWidths(properties);\n    type = 'OpenType';\n   }\n   break;\n  default:\n   error('Font ' + type + ' is not supported');\n   break;\n  }\n  this.data = data;\n  this.fontType = getFontType(type, subtype);\n  this.fontMatrix = properties.fontMatrix;\n  this.widths = properties.widths;\n  this.defaultWidth = properties.defaultWidth;\n  this.toUnicode = properties.toUnicode;\n  this.encoding = properties.baseEncoding;\n  this.seacMap = properties.seacMap;\n  this.loading = true;\n }\n Font.getFontID = function () {\n  var ID = 1;\n  return function Font_getFontID() {\n   return String(ID++);\n  };\n }();\n function int16(b0, b1) {\n  return (b0 << 8) + b1;\n }\n function signedInt16(b0, b1) {\n  var value = (b0 << 8) + b1;\n  return value & 1 << 15 ? value - 0x10000 : value;\n }\n function int32(b0, b1, b2, b3) {\n  return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n }\n function string16(value) {\n  return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n }\n function safeString16(value) {\n  value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\n  return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n }\n function isTrueTypeFile(file) {\n  var header = file.peekBytes(4);\n  return readUint32(header, 0) === 0x00010000;\n }\n function isOpenTypeFile(file) {\n  var header = file.peekBytes(4);\n  return bytesToString(header) === 'OTTO';\n }\n function isType1File(file) {\n  var header = file.peekBytes(2);\n  if (header[0] === 0x25 && header[1] === 0x21) {\n   return true;\n  }\n  if (header[0] === 0x80 && header[1] === 0x01) {\n   return true;\n  }\n  return false;\n }\n function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\n  var toFontChar = [], unicode;\n  for (var i = 0, ii = encoding.length; i < ii; i++) {\n   unicode = getUnicodeForGlyph(encoding[i], glyphsUnicodeMap);\n   if (unicode !== -1) {\n    toFontChar[i] = unicode;\n   }\n  }\n  for (var charCode in differences) {\n   unicode = getUnicodeForGlyph(differences[charCode], glyphsUnicodeMap);\n   if (unicode !== -1) {\n    toFontChar[+charCode] = unicode;\n   }\n  }\n  return toFontChar;\n }\n function isProblematicUnicodeLocation(code) {\n  var i = 0, j = ProblematicCharRanges.length - 1;\n  while (i < j) {\n   var c = i + j + 1 >> 1;\n   if (code < ProblematicCharRanges[c]) {\n    j = c - 1;\n   } else {\n    i = c;\n   }\n  }\n  return !(i & 1);\n }\n function adjustMapping(charCodeToGlyphId, properties) {\n  var toUnicode = properties.toUnicode;\n  var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\n  var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;\n  var newMap = Object.create(null);\n  var toFontChar = [];\n  var usedFontCharCodes = [];\n  var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\n  for (var originalCharCode in charCodeToGlyphId) {\n   originalCharCode |= 0;\n   var glyphId = charCodeToGlyphId[originalCharCode];\n   var fontCharCode = originalCharCode;\n   var hasUnicodeValue = false;\n   if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\n    hasUnicodeValue = true;\n    var unicode = toUnicode.get(fontCharCode);\n    if (unicode.length === 1) {\n     fontCharCode = unicode.charCodeAt(0);\n    }\n   }\n   if ((usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) && nextAvailableFontCharCode <= PRIVATE_USE_OFFSET_END) {\n    do {\n     fontCharCode = nextAvailableFontCharCode++;\n     if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\n      fontCharCode = 0xF020;\n      nextAvailableFontCharCode = fontCharCode + 1;\n     }\n    } while (usedFontCharCodes[fontCharCode] !== undefined && nextAvailableFontCharCode <= PRIVATE_USE_OFFSET_END);\n   }\n   newMap[fontCharCode] = glyphId;\n   toFontChar[originalCharCode] = fontCharCode;\n   usedFontCharCodes[fontCharCode] = true;\n  }\n  return {\n   toFontChar: toFontChar,\n   charCodeToGlyphId: newMap,\n   nextAvailableFontCharCode: nextAvailableFontCharCode\n  };\n }\n function getRanges(glyphs, numGlyphs) {\n  var codes = [];\n  for (var charCode in glyphs) {\n   if (glyphs[charCode] >= numGlyphs) {\n    continue;\n   }\n   codes.push({\n    fontCharCode: charCode | 0,\n    glyphId: glyphs[charCode]\n   });\n  }\n  codes.sort(function fontGetRangesSort(a, b) {\n   return a.fontCharCode - b.fontCharCode;\n  });\n  var ranges = [];\n  var length = codes.length;\n  for (var n = 0; n < length;) {\n   var start = codes[n].fontCharCode;\n   var codeIndices = [codes[n].glyphId];\n   ++n;\n   var end = start;\n   while (n < length && end + 1 === codes[n].fontCharCode) {\n    codeIndices.push(codes[n].glyphId);\n    ++end;\n    ++n;\n    if (end === 0xFFFF) {\n     break;\n    }\n   }\n   ranges.push([\n    start,\n    end,\n    codeIndices\n   ]);\n  }\n  return ranges;\n }\n function createCmapTable(glyphs, numGlyphs) {\n  var ranges = getRanges(glyphs, numGlyphs);\n  var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\n  var cmap = '\\x00\\x00' + string16(numTables) + '\\x00\\x03' + '\\x00\\x01' + string32(4 + numTables * 8);\n  var i, ii, j, jj;\n  for (i = ranges.length - 1; i >= 0; --i) {\n   if (ranges[i][0] <= 0xFFFF) {\n    break;\n   }\n  }\n  var bmpLength = i + 1;\n  if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\n   ranges[i][1] = 0xFFFE;\n  }\n  var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\n  var segCount = bmpLength + trailingRangesCount;\n  var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\n  var startCount = '';\n  var endCount = '';\n  var idDeltas = '';\n  var idRangeOffsets = '';\n  var glyphsIds = '';\n  var bias = 0;\n  var range, start, end, codes;\n  for (i = 0, ii = bmpLength; i < ii; i++) {\n   range = ranges[i];\n   start = range[0];\n   end = range[1];\n   startCount += string16(start);\n   endCount += string16(end);\n   codes = range[2];\n   var contiguous = true;\n   for (j = 1, jj = codes.length; j < jj; ++j) {\n    if (codes[j] !== codes[j - 1] + 1) {\n     contiguous = false;\n     break;\n    }\n   }\n   if (!contiguous) {\n    var offset = (segCount - i) * 2 + bias * 2;\n    bias += end - start + 1;\n    idDeltas += string16(0);\n    idRangeOffsets += string16(offset);\n    for (j = 0, jj = codes.length; j < jj; ++j) {\n     glyphsIds += string16(codes[j]);\n    }\n   } else {\n    var startCode = codes[0];\n    idDeltas += string16(startCode - start & 0xFFFF);\n    idRangeOffsets += string16(0);\n   }\n  }\n  if (trailingRangesCount > 0) {\n   endCount += '\\xFF\\xFF';\n   startCount += '\\xFF\\xFF';\n   idDeltas += '\\x00\\x01';\n   idRangeOffsets += '\\x00\\x00';\n  }\n  var format314 = '\\x00\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\x00\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\n  var format31012 = '';\n  var header31012 = '';\n  if (numTables > 1) {\n   cmap += '\\x00\\x03' + '\\x00\\x0A' + string32(4 + numTables * 8 + 4 + format314.length);\n   format31012 = '';\n   for (i = 0, ii = ranges.length; i < ii; i++) {\n    range = ranges[i];\n    start = range[0];\n    codes = range[2];\n    var code = codes[0];\n    for (j = 1, jj = codes.length; j < jj; ++j) {\n     if (codes[j] !== codes[j - 1] + 1) {\n      end = range[0] + j - 1;\n      format31012 += string32(start) + string32(end) + string32(code);\n      start = end + 1;\n      code = codes[j];\n     }\n    }\n    format31012 += string32(start) + string32(range[1]) + string32(code);\n   }\n   header31012 = '\\x00\\x0C' + '\\x00\\x00' + string32(format31012.length + 16) + '\\x00\\x00\\x00\\x00' + string32(format31012.length / 12);\n  }\n  return cmap + '\\x00\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\n }\n function validateOS2Table(os2) {\n  var stream = new Stream(os2.data);\n  var version = stream.getUint16();\n  stream.getBytes(60);\n  var selection = stream.getUint16();\n  if (version < 4 && selection & 0x0300) {\n   return false;\n  }\n  var firstChar = stream.getUint16();\n  var lastChar = stream.getUint16();\n  if (firstChar > lastChar) {\n   return false;\n  }\n  stream.getBytes(6);\n  var usWinAscent = stream.getUint16();\n  if (usWinAscent === 0) {\n   return false;\n  }\n  os2.data[8] = os2.data[9] = 0;\n  return true;\n }\n function createOS2Table(properties, charstrings, override) {\n  override = override || {\n   unitsPerEm: 0,\n   yMax: 0,\n   yMin: 0,\n   ascent: 0,\n   descent: 0\n  };\n  var ulUnicodeRange1 = 0;\n  var ulUnicodeRange2 = 0;\n  var ulUnicodeRange3 = 0;\n  var ulUnicodeRange4 = 0;\n  var firstCharIndex = null;\n  var lastCharIndex = 0;\n  if (charstrings) {\n   for (var code in charstrings) {\n    code |= 0;\n    if (firstCharIndex > code || !firstCharIndex) {\n     firstCharIndex = code;\n    }\n    if (lastCharIndex < code) {\n     lastCharIndex = code;\n    }\n    var position = getUnicodeRangeFor(code);\n    if (position < 32) {\n     ulUnicodeRange1 |= 1 << position;\n    } else if (position < 64) {\n     ulUnicodeRange2 |= 1 << position - 32;\n    } else if (position < 96) {\n     ulUnicodeRange3 |= 1 << position - 64;\n    } else if (position < 123) {\n     ulUnicodeRange4 |= 1 << position - 96;\n    } else {\n     error('Unicode ranges Bits > 123 are reserved for internal usage');\n    }\n   }\n  } else {\n   firstCharIndex = 0;\n   lastCharIndex = 255;\n  }\n  var bbox = properties.bbox || [\n   0,\n   0,\n   0,\n   0\n  ];\n  var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || FONT_IDENTITY_MATRIX)[0];\n  var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\n  var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\n  var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\n  if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\n   typoDescent = -typoDescent;\n  }\n  var winAscent = override.yMax || typoAscent;\n  var winDescent = -override.yMin || -typoDescent;\n  return '\\x00\\x03' + '\\x02\\x24' + '\\x01\\xF4' + '\\x00\\x05' + '\\x00\\x00' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x00\\x8C' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x01\\xDF' + '\\x00\\x31' + '\\x01\\x02' + '\\x00\\x00' + '\\x00\\x00\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\x00\\x00\\x00\\x00\\x00\\x00' + string32(ulUnicodeRange1) + string32(ulUnicodeRange2) + string32(ulUnicodeRange3) + string32(ulUnicodeRange4) + '\\x2A\\x32\\x31\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\x00\\x64' + string16(winAscent) + string16(winDescent) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\x00\\x03';\n }\n function createPostTable(properties) {\n  var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\n  return '\\x00\\x03\\x00\\x00' + string32(angle) + '\\x00\\x00' + '\\x00\\x00' + string32(properties.fixedPitch) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00';\n }\n function createNameTable(name, proto) {\n  if (!proto) {\n   proto = [\n    [],\n    []\n   ];\n  }\n  var strings = [\n   proto[0][0] || 'Original licence',\n   proto[0][1] || name,\n   proto[0][2] || 'Unknown',\n   proto[0][3] || 'uniqueID',\n   proto[0][4] || name,\n   proto[0][5] || 'Version 0.11',\n   proto[0][6] || '',\n   proto[0][7] || 'Unknown',\n   proto[0][8] || 'Unknown',\n   proto[0][9] || 'Unknown'\n  ];\n  var stringsUnicode = [];\n  var i, ii, j, jj, str;\n  for (i = 0, ii = strings.length; i < ii; i++) {\n   str = proto[1][i] || strings[i];\n   var strBufUnicode = [];\n   for (j = 0, jj = str.length; j < jj; j++) {\n    strBufUnicode.push(string16(str.charCodeAt(j)));\n   }\n   stringsUnicode.push(strBufUnicode.join(''));\n  }\n  var names = [\n   strings,\n   stringsUnicode\n  ];\n  var platforms = [\n   '\\x00\\x01',\n   '\\x00\\x03'\n  ];\n  var encodings = [\n   '\\x00\\x00',\n   '\\x00\\x01'\n  ];\n  var languages = [\n   '\\x00\\x00',\n   '\\x04\\x09'\n  ];\n  var namesRecordCount = strings.length * platforms.length;\n  var nameTable = '\\x00\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\n  var strOffset = 0;\n  for (i = 0, ii = platforms.length; i < ii; i++) {\n   var strs = names[i];\n   for (j = 0, jj = strs.length; j < jj; j++) {\n    str = strs[j];\n    var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\n    nameTable += nameRecord;\n    strOffset += str.length;\n   }\n  }\n  nameTable += strings.join('') + stringsUnicode.join('');\n  return nameTable;\n }\n Font.prototype = {\n  name: null,\n  font: null,\n  mimetype: null,\n  encoding: null,\n  get renderer() {\n   var renderer = FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\n   return shadow(this, 'renderer', renderer);\n  },\n  exportData: function Font_exportData() {\n   var data = {};\n   for (var i in this) {\n    if (this.hasOwnProperty(i)) {\n     data[i] = this[i];\n    }\n   }\n   return data;\n  },\n  checkAndRepair: function Font_checkAndRepair(name, font, properties) {\n   function readTableEntry(file) {\n    var tag = bytesToString(file.getBytes(4));\n    var checksum = file.getInt32() >>> 0;\n    var offset = file.getInt32() >>> 0;\n    var length = file.getInt32() >>> 0;\n    var previousPosition = file.pos;\n    file.pos = file.start ? file.start : 0;\n    file.skip(offset);\n    var data = file.getBytes(length);\n    file.pos = previousPosition;\n    if (tag === 'head') {\n     data[8] = data[9] = data[10] = data[11] = 0;\n     data[17] |= 0x20;\n    }\n    return {\n     tag: tag,\n     checksum: checksum,\n     length: length,\n     offset: offset,\n     data: data\n    };\n   }\n   function readOpenTypeHeader(ttf) {\n    return {\n     version: bytesToString(ttf.getBytes(4)),\n     numTables: ttf.getUint16(),\n     searchRange: ttf.getUint16(),\n     entrySelector: ttf.getUint16(),\n     rangeShift: ttf.getUint16()\n    };\n   }\n   function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\n    if (!cmap) {\n     warn('No cmap table available.');\n     return {\n      platformId: -1,\n      encodingId: -1,\n      mappings: [],\n      hasShortCmap: false\n     };\n    }\n    var segment;\n    var start = (font.start ? font.start : 0) + cmap.offset;\n    font.pos = start;\n    font.getUint16();\n    var numTables = font.getUint16();\n    var potentialTable;\n    var canBreak = false;\n    for (var i = 0; i < numTables; i++) {\n     var platformId = font.getUint16();\n     var encodingId = font.getUint16();\n     var offset = font.getInt32() >>> 0;\n     var useTable = false;\n     if (platformId === 0 && encodingId === 0) {\n      useTable = true;\n     } else if (platformId === 1 && encodingId === 0) {\n      useTable = true;\n     } else if (platformId === 3 && encodingId === 1 && (hasEncoding || !potentialTable)) {\n      useTable = true;\n      if (!isSymbolicFont) {\n       canBreak = true;\n      }\n     } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\n      useTable = true;\n      canBreak = true;\n     }\n     if (useTable) {\n      potentialTable = {\n       platformId: platformId,\n       encodingId: encodingId,\n       offset: offset\n      };\n     }\n     if (canBreak) {\n      break;\n     }\n    }\n    if (potentialTable) {\n     font.pos = start + potentialTable.offset;\n    }\n    if (!potentialTable || font.peekByte() === -1) {\n     warn('Could not find a preferred cmap table.');\n     return {\n      platformId: -1,\n      encodingId: -1,\n      mappings: [],\n      hasShortCmap: false\n     };\n    }\n    var format = font.getUint16();\n    font.getUint16();\n    font.getUint16();\n    var hasShortCmap = false;\n    var mappings = [];\n    var j, glyphId;\n    if (format === 0) {\n     for (j = 0; j < 256; j++) {\n      var index = font.getByte();\n      if (!index) {\n       continue;\n      }\n      mappings.push({\n       charCode: j,\n       glyphId: index\n      });\n     }\n     hasShortCmap = true;\n    } else if (format === 4) {\n     var segCount = font.getUint16() >> 1;\n     font.getBytes(6);\n     var segIndex, segments = [];\n     for (segIndex = 0; segIndex < segCount; segIndex++) {\n      segments.push({ end: font.getUint16() });\n     }\n     font.getUint16();\n     for (segIndex = 0; segIndex < segCount; segIndex++) {\n      segments[segIndex].start = font.getUint16();\n     }\n     for (segIndex = 0; segIndex < segCount; segIndex++) {\n      segments[segIndex].delta = font.getUint16();\n     }\n     var offsetsCount = 0;\n     for (segIndex = 0; segIndex < segCount; segIndex++) {\n      segment = segments[segIndex];\n      var rangeOffset = font.getUint16();\n      if (!rangeOffset) {\n       segment.offsetIndex = -1;\n       continue;\n      }\n      var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\n      segment.offsetIndex = offsetIndex;\n      offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\n     }\n     var offsets = [];\n     for (j = 0; j < offsetsCount; j++) {\n      offsets.push(font.getUint16());\n     }\n     for (segIndex = 0; segIndex < segCount; segIndex++) {\n      segment = segments[segIndex];\n      start = segment.start;\n      var end = segment.end;\n      var delta = segment.delta;\n      offsetIndex = segment.offsetIndex;\n      for (j = start; j <= end; j++) {\n       if (j === 0xFFFF) {\n        continue;\n       }\n       glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\n       glyphId = glyphId + delta & 0xFFFF;\n       if (glyphId === 0) {\n        continue;\n       }\n       mappings.push({\n        charCode: j,\n        glyphId: glyphId\n       });\n      }\n     }\n    } else if (format === 6) {\n     var firstCode = font.getUint16();\n     var entryCount = font.getUint16();\n     for (j = 0; j < entryCount; j++) {\n      glyphId = font.getUint16();\n      var charCode = firstCode + j;\n      mappings.push({\n       charCode: charCode,\n       glyphId: glyphId\n      });\n     }\n    } else {\n     warn('cmap table has unsupported format: ' + format);\n     return {\n      platformId: -1,\n      encodingId: -1,\n      mappings: [],\n      hasShortCmap: false\n     };\n    }\n    mappings.sort(function (a, b) {\n     return a.charCode - b.charCode;\n    });\n    for (i = 1; i < mappings.length; i++) {\n     if (mappings[i - 1].charCode === mappings[i].charCode) {\n      mappings.splice(i, 1);\n      i--;\n     }\n    }\n    return {\n     platformId: potentialTable.platformId,\n     encodingId: potentialTable.encodingId,\n     mappings: mappings,\n     hasShortCmap: hasShortCmap\n    };\n   }\n   function sanitizeMetrics(font, header, metrics, numGlyphs) {\n    if (!header) {\n     if (metrics) {\n      metrics.data = null;\n     }\n     return;\n    }\n    font.pos = (font.start ? font.start : 0) + header.offset;\n    font.pos += header.length - 2;\n    var numOfMetrics = font.getUint16();\n    if (numOfMetrics > numGlyphs) {\n     info('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\n     numOfMetrics = numGlyphs;\n     header.data[34] = (numOfMetrics & 0xff00) >> 8;\n     header.data[35] = numOfMetrics & 0x00ff;\n    }\n    var numOfSidebearings = numGlyphs - numOfMetrics;\n    var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\n    if (numMissing > 0) {\n     var entries = new Uint8Array(metrics.length + numMissing * 2);\n     entries.set(metrics.data);\n     metrics.data = entries;\n    }\n   }\n   function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\n    if (sourceEnd - sourceStart <= 12) {\n     return 0;\n    }\n    var glyf = source.subarray(sourceStart, sourceEnd);\n    var contoursCount = glyf[0] << 8 | glyf[1];\n    if (contoursCount & 0x8000) {\n     dest.set(glyf, destStart);\n     return glyf.length;\n    }\n    var i, j = 10, flagsCount = 0;\n    for (i = 0; i < contoursCount; i++) {\n     var endPoint = glyf[j] << 8 | glyf[j + 1];\n     flagsCount = endPoint + 1;\n     j += 2;\n    }\n    var instructionsStart = j;\n    var instructionsLength = glyf[j] << 8 | glyf[j + 1];\n    j += 2 + instructionsLength;\n    var instructionsEnd = j;\n    var coordinatesLength = 0;\n    for (i = 0; i < flagsCount; i++) {\n     var flag = glyf[j++];\n     if (flag & 0xC0) {\n      glyf[j - 1] = flag & 0x3F;\n     }\n     var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\n     coordinatesLength += xyLength;\n     if (flag & 8) {\n      var repeat = glyf[j++];\n      i += repeat;\n      coordinatesLength += repeat * xyLength;\n     }\n    }\n    if (coordinatesLength === 0) {\n     return 0;\n    }\n    var glyphDataLength = j + coordinatesLength;\n    if (glyphDataLength > glyf.length) {\n     return 0;\n    }\n    if (!hintsValid && instructionsLength > 0) {\n     dest.set(glyf.subarray(0, instructionsStart), destStart);\n     dest.set([\n      0,\n      0\n     ], destStart + instructionsStart);\n     dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\n     glyphDataLength -= instructionsLength;\n     if (glyf.length - glyphDataLength > 3) {\n      glyphDataLength = glyphDataLength + 3 & ~3;\n     }\n     return glyphDataLength;\n    }\n    if (glyf.length - glyphDataLength > 3) {\n     glyphDataLength = glyphDataLength + 3 & ~3;\n     dest.set(glyf.subarray(0, glyphDataLength), destStart);\n     return glyphDataLength;\n    }\n    dest.set(glyf, destStart);\n    return glyf.length;\n   }\n   function sanitizeHead(head, numGlyphs, locaLength) {\n    var data = head.data;\n    var version = int32(data[0], data[1], data[2], data[3]);\n    if (version >> 16 !== 1) {\n     info('Attempting to fix invalid version in head table: ' + version);\n     data[0] = 0;\n     data[1] = 1;\n     data[2] = 0;\n     data[3] = 0;\n    }\n    var indexToLocFormat = int16(data[50], data[51]);\n    if (indexToLocFormat < 0 || indexToLocFormat > 1) {\n     info('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\n     var numGlyphsPlusOne = numGlyphs + 1;\n     if (locaLength === numGlyphsPlusOne << 1) {\n      data[50] = 0;\n      data[51] = 0;\n     } else if (locaLength === numGlyphsPlusOne << 2) {\n      data[50] = 0;\n      data[51] = 1;\n     } else {\n      warn('Could not fix indexToLocFormat: ' + indexToLocFormat);\n     }\n    }\n   }\n   function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry) {\n    var itemSize, itemDecode, itemEncode;\n    if (isGlyphLocationsLong) {\n     itemSize = 4;\n     itemDecode = function fontItemDecodeLong(data, offset) {\n      return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n     };\n     itemEncode = function fontItemEncodeLong(data, offset, value) {\n      data[offset] = value >>> 24 & 0xFF;\n      data[offset + 1] = value >> 16 & 0xFF;\n      data[offset + 2] = value >> 8 & 0xFF;\n      data[offset + 3] = value & 0xFF;\n     };\n    } else {\n     itemSize = 2;\n     itemDecode = function fontItemDecode(data, offset) {\n      return data[offset] << 9 | data[offset + 1] << 1;\n     };\n     itemEncode = function fontItemEncode(data, offset, value) {\n      data[offset] = value >> 9 & 0xFF;\n      data[offset + 1] = value >> 1 & 0xFF;\n     };\n    }\n    var locaData = loca.data;\n    var locaDataSize = itemSize * (1 + numGlyphs);\n    if (locaData.length !== locaDataSize) {\n     locaData = new Uint8Array(locaDataSize);\n     locaData.set(loca.data.subarray(0, locaDataSize));\n     loca.data = locaData;\n    }\n    var oldGlyfData = glyf.data;\n    var oldGlyfDataLength = oldGlyfData.length;\n    var newGlyfData = new Uint8Array(oldGlyfDataLength);\n    var startOffset = itemDecode(locaData, 0);\n    var writeOffset = 0;\n    var missingGlyphData = Object.create(null);\n    itemEncode(locaData, 0, writeOffset);\n    var i, j;\n    for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n     var endOffset = itemDecode(locaData, j);\n     if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\n      endOffset = oldGlyfDataLength;\n     }\n     if (endOffset > oldGlyfDataLength) {\n      itemEncode(locaData, j, writeOffset);\n      startOffset = endOffset;\n      continue;\n     }\n     if (startOffset === endOffset) {\n      missingGlyphData[i] = true;\n     }\n     var newLength = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\n     writeOffset += newLength;\n     itemEncode(locaData, j, writeOffset);\n     startOffset = endOffset;\n    }\n    if (writeOffset === 0) {\n     var simpleGlyph = new Uint8Array([\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      49,\n      0\n     ]);\n     for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n      itemEncode(locaData, j, simpleGlyph.length);\n     }\n     glyf.data = simpleGlyph;\n     return missingGlyphData;\n    }\n    if (dupFirstEntry) {\n     var firstEntryLength = itemDecode(locaData, itemSize);\n     if (newGlyfData.length > firstEntryLength + writeOffset) {\n      glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\n     } else {\n      glyf.data = new Uint8Array(firstEntryLength + writeOffset);\n      glyf.data.set(newGlyfData.subarray(0, writeOffset));\n     }\n     glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\n     itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\n    } else {\n     glyf.data = newGlyfData.subarray(0, writeOffset);\n    }\n    return missingGlyphData;\n   }\n   function readPostScriptTable(post, properties, maxpNumGlyphs) {\n    var start = (font.start ? font.start : 0) + post.offset;\n    font.pos = start;\n    var length = post.length, end = start + length;\n    var version = font.getInt32();\n    font.getBytes(28);\n    var glyphNames;\n    var valid = true;\n    var i;\n    switch (version) {\n    case 0x00010000:\n     glyphNames = MacStandardGlyphOrdering;\n     break;\n    case 0x00020000:\n     var numGlyphs = font.getUint16();\n     if (numGlyphs !== maxpNumGlyphs) {\n      valid = false;\n      break;\n     }\n     var glyphNameIndexes = [];\n     for (i = 0; i < numGlyphs; ++i) {\n      var index = font.getUint16();\n      if (index >= 32768) {\n       valid = false;\n       break;\n      }\n      glyphNameIndexes.push(index);\n     }\n     if (!valid) {\n      break;\n     }\n     var customNames = [];\n     var strBuf = [];\n     while (font.pos < end) {\n      var stringLength = font.getByte();\n      strBuf.length = stringLength;\n      for (i = 0; i < stringLength; ++i) {\n       strBuf[i] = String.fromCharCode(font.getByte());\n      }\n      customNames.push(strBuf.join(''));\n     }\n     glyphNames = [];\n     for (i = 0; i < numGlyphs; ++i) {\n      var j = glyphNameIndexes[i];\n      if (j < 258) {\n       glyphNames.push(MacStandardGlyphOrdering[j]);\n       continue;\n      }\n      glyphNames.push(customNames[j - 258]);\n     }\n     break;\n    case 0x00030000:\n     break;\n    default:\n     warn('Unknown/unsupported post table version ' + version);\n     valid = false;\n     if (properties.defaultEncoding) {\n      glyphNames = properties.defaultEncoding;\n     }\n     break;\n    }\n    properties.glyphNames = glyphNames;\n    return valid;\n   }\n   function readNameTable(nameTable) {\n    var start = (font.start ? font.start : 0) + nameTable.offset;\n    font.pos = start;\n    var names = [\n     [],\n     []\n    ];\n    var length = nameTable.length, end = start + length;\n    var format = font.getUint16();\n    var FORMAT_0_HEADER_LENGTH = 6;\n    if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\n     return names;\n    }\n    var numRecords = font.getUint16();\n    var stringsStart = font.getUint16();\n    var records = [];\n    var NAME_RECORD_LENGTH = 12;\n    var i, ii;\n    for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\n     var r = {\n      platform: font.getUint16(),\n      encoding: font.getUint16(),\n      language: font.getUint16(),\n      name: font.getUint16(),\n      length: font.getUint16(),\n      offset: font.getUint16()\n     };\n     if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\n      records.push(r);\n     }\n    }\n    for (i = 0, ii = records.length; i < ii; i++) {\n     var record = records[i];\n     if (record.length <= 0) {\n      continue;\n     }\n     var pos = start + stringsStart + record.offset;\n     if (pos + record.length > end) {\n      continue;\n     }\n     font.pos = pos;\n     var nameIndex = record.name;\n     if (record.encoding) {\n      var str = '';\n      for (var j = 0, jj = record.length; j < jj; j += 2) {\n       str += String.fromCharCode(font.getUint16());\n      }\n      names[1][nameIndex] = str;\n     } else {\n      names[0][nameIndex] = bytesToString(font.getBytes(record.length));\n     }\n    }\n    return names;\n   }\n   var TTOpsStackDeltas = [\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    -2,\n    -2,\n    -2,\n    -2,\n    0,\n    0,\n    -2,\n    -5,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    0,\n    0,\n    -1,\n    0,\n    -1,\n    -1,\n    -1,\n    -1,\n    1,\n    -1,\n    -999,\n    0,\n    1,\n    0,\n    -1,\n    -2,\n    0,\n    -1,\n    -2,\n    -1,\n    -1,\n    0,\n    -1,\n    -1,\n    0,\n    0,\n    -999,\n    -999,\n    -1,\n    -1,\n    -1,\n    -1,\n    -2,\n    -999,\n    -2,\n    -2,\n    -999,\n    0,\n    -2,\n    -2,\n    0,\n    0,\n    -2,\n    0,\n    -2,\n    0,\n    0,\n    0,\n    -2,\n    -1,\n    -1,\n    1,\n    1,\n    0,\n    0,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    0,\n    0,\n    -1,\n    0,\n    -1,\n    -1,\n    0,\n    -999,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    -2,\n    -999,\n    -999,\n    -999,\n    -999,\n    -999,\n    -1,\n    -1,\n    -2,\n    -2,\n    0,\n    0,\n    0,\n    0,\n    -1,\n    -1,\n    -999,\n    -2,\n    -2,\n    0,\n    0,\n    -1,\n    -2,\n    -2,\n    0,\n    0,\n    0,\n    -1,\n    -1,\n    -1,\n    -2\n   ];\n   function sanitizeTTProgram(table, ttContext) {\n    var data = table.data;\n    var i = 0, j, n, b, funcId, pc, lastEndf = 0, lastDeff = 0;\n    var stack = [];\n    var callstack = [];\n    var functionsCalled = [];\n    var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\n    var inFDEF = false, ifLevel = 0, inELSE = 0;\n    for (var ii = data.length; i < ii;) {\n     var op = data[i++];\n     if (op === 0x40) {\n      n = data[i++];\n      if (inFDEF || inELSE) {\n       i += n;\n      } else {\n       for (j = 0; j < n; j++) {\n        stack.push(data[i++]);\n       }\n      }\n     } else if (op === 0x41) {\n      n = data[i++];\n      if (inFDEF || inELSE) {\n       i += n * 2;\n      } else {\n       for (j = 0; j < n; j++) {\n        b = data[i++];\n        stack.push(b << 8 | data[i++]);\n       }\n      }\n     } else if ((op & 0xF8) === 0xB0) {\n      n = op - 0xB0 + 1;\n      if (inFDEF || inELSE) {\n       i += n;\n      } else {\n       for (j = 0; j < n; j++) {\n        stack.push(data[i++]);\n       }\n      }\n     } else if ((op & 0xF8) === 0xB8) {\n      n = op - 0xB8 + 1;\n      if (inFDEF || inELSE) {\n       i += n * 2;\n      } else {\n       for (j = 0; j < n; j++) {\n        b = data[i++];\n        stack.push(b << 8 | data[i++]);\n       }\n      }\n     } else if (op === 0x2B && !tooComplexToFollowFunctions) {\n      if (!inFDEF && !inELSE) {\n       funcId = stack[stack.length - 1];\n       ttContext.functionsUsed[funcId] = true;\n       if (funcId in ttContext.functionsStackDeltas) {\n        stack.length += ttContext.functionsStackDeltas[funcId];\n       } else if (funcId in ttContext.functionsDefined && functionsCalled.indexOf(funcId) < 0) {\n        callstack.push({\n         data: data,\n         i: i,\n         stackTop: stack.length - 1\n        });\n        functionsCalled.push(funcId);\n        pc = ttContext.functionsDefined[funcId];\n        if (!pc) {\n         warn('TT: CALL non-existent function');\n         ttContext.hintsValid = false;\n         return;\n        }\n        data = pc.data;\n        i = pc.i;\n       }\n      }\n     } else if (op === 0x2C && !tooComplexToFollowFunctions) {\n      if (inFDEF || inELSE) {\n       warn('TT: nested FDEFs not allowed');\n       tooComplexToFollowFunctions = true;\n      }\n      inFDEF = true;\n      lastDeff = i;\n      funcId = stack.pop();\n      ttContext.functionsDefined[funcId] = {\n       data: data,\n       i: i\n      };\n     } else if (op === 0x2D) {\n      if (inFDEF) {\n       inFDEF = false;\n       lastEndf = i;\n      } else {\n       pc = callstack.pop();\n       if (!pc) {\n        warn('TT: ENDF bad stack');\n        ttContext.hintsValid = false;\n        return;\n       }\n       funcId = functionsCalled.pop();\n       data = pc.data;\n       i = pc.i;\n       ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\n      }\n     } else if (op === 0x89) {\n      if (inFDEF || inELSE) {\n       warn('TT: nested IDEFs not allowed');\n       tooComplexToFollowFunctions = true;\n      }\n      inFDEF = true;\n      lastDeff = i;\n     } else if (op === 0x58) {\n      ++ifLevel;\n     } else if (op === 0x1B) {\n      inELSE = ifLevel;\n     } else if (op === 0x59) {\n      if (inELSE === ifLevel) {\n       inELSE = 0;\n      }\n      --ifLevel;\n     } else if (op === 0x1C) {\n      if (!inFDEF && !inELSE) {\n       var offset = stack[stack.length - 1];\n       if (offset > 0) {\n        i += offset - 1;\n       }\n      }\n     }\n     if (!inFDEF && !inELSE) {\n      var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\n      if (op >= 0x71 && op <= 0x75) {\n       n = stack.pop();\n       if (!isNaN(n)) {\n        stackDelta = -n * 2;\n       }\n      }\n      while (stackDelta < 0 && stack.length > 0) {\n       stack.pop();\n       stackDelta++;\n      }\n      while (stackDelta > 0) {\n       stack.push(NaN);\n       stackDelta--;\n      }\n     }\n    }\n    ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\n    var content = [data];\n    if (i > data.length) {\n     content.push(new Uint8Array(i - data.length));\n    }\n    if (lastDeff > lastEndf) {\n     warn('TT: complementing a missing function tail');\n     content.push(new Uint8Array([\n      0x22,\n      0x2D\n     ]));\n    }\n    foldTTTable(table, content);\n   }\n   function checkInvalidFunctions(ttContext, maxFunctionDefs) {\n    if (ttContext.tooComplexToFollowFunctions) {\n     return;\n    }\n    if (ttContext.functionsDefined.length > maxFunctionDefs) {\n     warn('TT: more functions defined than expected');\n     ttContext.hintsValid = false;\n     return;\n    }\n    for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\n     if (j > maxFunctionDefs) {\n      warn('TT: invalid function id: ' + j);\n      ttContext.hintsValid = false;\n      return;\n     }\n     if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\n      warn('TT: undefined function: ' + j);\n      ttContext.hintsValid = false;\n      return;\n     }\n    }\n   }\n   function foldTTTable(table, content) {\n    if (content.length > 1) {\n     var newLength = 0;\n     var j, jj;\n     for (j = 0, jj = content.length; j < jj; j++) {\n      newLength += content[j].length;\n     }\n     newLength = newLength + 3 & ~3;\n     var result = new Uint8Array(newLength);\n     var pos = 0;\n     for (j = 0, jj = content.length; j < jj; j++) {\n      result.set(content[j], pos);\n      pos += content[j].length;\n     }\n     table.data = result;\n     table.length = newLength;\n    }\n   }\n   function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\n    var ttContext = {\n     functionsDefined: [],\n     functionsUsed: [],\n     functionsStackDeltas: [],\n     tooComplexToFollowFunctions: false,\n     hintsValid: true\n    };\n    if (fpgm) {\n     sanitizeTTProgram(fpgm, ttContext);\n    }\n    if (prep) {\n     sanitizeTTProgram(prep, ttContext);\n    }\n    if (fpgm) {\n     checkInvalidFunctions(ttContext, maxFunctionDefs);\n    }\n    if (cvt && cvt.length & 1) {\n     var cvtData = new Uint8Array(cvt.length + 1);\n     cvtData.set(cvt.data);\n     cvt.data = cvtData;\n    }\n    return ttContext.hintsValid;\n   }\n   font = new Stream(new Uint8Array(font.getBytes()));\n   var VALID_TABLES = [\n    'OS/2',\n    'cmap',\n    'head',\n    'hhea',\n    'hmtx',\n    'maxp',\n    'name',\n    'post',\n    'loca',\n    'glyf',\n    'fpgm',\n    'prep',\n    'cvt ',\n    'CFF '\n   ];\n   var header = readOpenTypeHeader(font);\n   var numTables = header.numTables;\n   var cff, cffFile;\n   var tables = Object.create(null);\n   tables['OS/2'] = null;\n   tables['cmap'] = null;\n   tables['head'] = null;\n   tables['hhea'] = null;\n   tables['hmtx'] = null;\n   tables['maxp'] = null;\n   tables['name'] = null;\n   tables['post'] = null;\n   var table;\n   for (var i = 0; i < numTables; i++) {\n    table = readTableEntry(font);\n    if (VALID_TABLES.indexOf(table.tag) < 0) {\n     continue;\n    }\n    if (table.length === 0) {\n     continue;\n    }\n    tables[table.tag] = table;\n   }\n   var isTrueType = !tables['CFF '];\n   if (!isTrueType) {\n    if (header.version === 'OTTO' && !properties.composite || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\n     cffFile = new Stream(tables['CFF '].data);\n     cff = new CFFFont(cffFile, properties);\n     adjustWidths(properties);\n     return this.convert(name, cff, properties);\n    }\n    delete tables['glyf'];\n    delete tables['loca'];\n    delete tables['fpgm'];\n    delete tables['prep'];\n    delete tables['cvt '];\n    this.isOpenType = true;\n   } else {\n    if (!tables['loca']) {\n     error('Required \"loca\" table is not found');\n    }\n    if (!tables['glyf']) {\n     warn('Required \"glyf\" table is not found -- trying to recover.');\n     tables['glyf'] = {\n      tag: 'glyf',\n      data: new Uint8Array(0)\n     };\n    }\n    this.isOpenType = false;\n   }\n   if (!tables['maxp']) {\n    error('Required \"maxp\" table is not found');\n   }\n   font.pos = (font.start || 0) + tables['maxp'].offset;\n   var version = font.getInt32();\n   var numGlyphs = font.getUint16();\n   var maxFunctionDefs = 0;\n   if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n    font.pos += 8;\n    var maxZones = font.getUint16();\n    if (maxZones > 2) {\n     tables['maxp'].data[14] = 0;\n     tables['maxp'].data[15] = 2;\n    }\n    font.pos += 4;\n    maxFunctionDefs = font.getUint16();\n   }\n   var dupFirstEntry = false;\n   if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\\u0000') {\n    dupFirstEntry = true;\n    numGlyphs++;\n    tables['maxp'].data[4] = numGlyphs >> 8;\n    tables['maxp'].data[5] = numGlyphs & 255;\n   }\n   var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\n   if (!hintsValid) {\n    delete tables['fpgm'];\n    delete tables['prep'];\n    delete tables['cvt '];\n   }\n   sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);\n   if (!tables['head']) {\n    error('Required \"head\" table is not found');\n   }\n   sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\n   var missingGlyphs = Object.create(null);\n   if (isTrueType) {\n    var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\n    missingGlyphs = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry);\n   }\n   if (!tables['hhea']) {\n    error('Required \"hhea\" table is not found');\n   }\n   if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\n    tables['hhea'].data[10] = 0xFF;\n    tables['hhea'].data[11] = 0xFF;\n   }\n   var metricsOverride = {\n    unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\n    yMax: int16(tables['head'].data[42], tables['head'].data[43]),\n    yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\n    ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\n    descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\n   };\n   this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\n   this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\n   if (tables['post']) {\n    var valid = readPostScriptTable(tables['post'], properties, numGlyphs);\n    if (!valid) {\n     tables['post'] = null;\n    }\n   }\n   var charCodeToGlyphId = [], charCode;\n   var toUnicode = properties.toUnicode, widths = properties.widths;\n   var skipToUnicode = toUnicode instanceof IdentityToUnicodeMap || toUnicode.length === 0x10000;\n   function hasGlyph(glyphId, charCode, widthCode) {\n    if (!missingGlyphs[glyphId]) {\n     return true;\n    }\n    if (!skipToUnicode && charCode >= 0 && toUnicode.has(charCode)) {\n     return true;\n    }\n    if (widths && widthCode >= 0 && isNum(widths[widthCode])) {\n     return true;\n    }\n    return false;\n   }\n   if (properties.composite) {\n    var cidToGidMap = properties.cidToGidMap || [];\n    var isCidToGidMapEmpty = cidToGidMap.length === 0;\n    properties.cMap.forEach(function (charCode, cid) {\n     assert(cid <= 0xffff, 'Max size of CID is 65,535');\n     var glyphId = -1;\n     if (isCidToGidMapEmpty) {\n      glyphId = cid;\n     } else if (cidToGidMap[cid] !== undefined) {\n      glyphId = cidToGidMap[cid];\n     }\n     if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId, charCode, cid)) {\n      charCodeToGlyphId[charCode] = glyphId;\n     }\n    });\n    if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {\n     charCodeToGlyphId[0] = numGlyphs - 1;\n    }\n   } else {\n    var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\n    var cmapPlatformId = cmapTable.platformId;\n    var cmapEncodingId = cmapTable.encodingId;\n    var cmapMappings = cmapTable.mappings;\n    var cmapMappingsLength = cmapMappings.length;\n    if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!getEncoding(properties.baseEncodingName)) {\n     var baseEncoding = [];\n     if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\n      baseEncoding = getEncoding(properties.baseEncodingName);\n     }\n     var glyphsUnicodeMap = getGlyphsUnicode();\n     for (charCode = 0; charCode < 256; charCode++) {\n      var glyphName, standardGlyphName;\n      if (this.differences && charCode in this.differences) {\n       glyphName = this.differences[charCode];\n      } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\n       glyphName = baseEncoding[charCode];\n      } else {\n       glyphName = StandardEncoding[charCode];\n      }\n      if (!glyphName) {\n       continue;\n      }\n      standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n      var unicodeOrCharCode, isUnicode = false;\n      if (cmapPlatformId === 3 && cmapEncodingId === 1) {\n       unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\n       isUnicode = true;\n      } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\n       unicodeOrCharCode = MacRomanEncoding.indexOf(standardGlyphName);\n      }\n      var found = false;\n      for (i = 0; i < cmapMappingsLength; ++i) {\n       if (cmapMappings[i].charCode !== unicodeOrCharCode) {\n        continue;\n       }\n       var code = isUnicode ? charCode : unicodeOrCharCode;\n       if (hasGlyph(cmapMappings[i].glyphId, code, -1)) {\n        charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n        found = true;\n        break;\n       }\n      }\n      if (!found && properties.glyphNames) {\n       var glyphId = properties.glyphNames.indexOf(glyphName);\n       if (glyphId === -1 && standardGlyphName !== glyphName) {\n        glyphId = properties.glyphNames.indexOf(standardGlyphName);\n       }\n       if (glyphId > 0 && hasGlyph(glyphId, -1, -1)) {\n        charCodeToGlyphId[charCode] = glyphId;\n        found = true;\n       }\n      }\n      if (!found) {\n       charCodeToGlyphId[charCode] = 0;\n      }\n     }\n    } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\n     for (i = 0; i < cmapMappingsLength; ++i) {\n      charCodeToGlyphId[cmapMappings[i].charCode] = cmapMappings[i].glyphId;\n     }\n    } else {\n     for (i = 0; i < cmapMappingsLength; ++i) {\n      charCode = cmapMappings[i].charCode & 0xFF;\n      charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n     }\n    }\n   }\n   if (charCodeToGlyphId.length === 0) {\n    charCodeToGlyphId[0] = 0;\n   }\n   var newMapping = adjustMapping(charCodeToGlyphId, properties);\n   this.toFontChar = newMapping.toFontChar;\n   tables['cmap'] = {\n    tag: 'cmap',\n    data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)\n   };\n   if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\n    tables['OS/2'] = {\n     tag: 'OS/2',\n     data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\n    };\n   }\n   if (!tables['post']) {\n    tables['post'] = {\n     tag: 'post',\n     data: createPostTable(properties)\n    };\n   }\n   if (!isTrueType) {\n    try {\n     cffFile = new Stream(tables['CFF '].data);\n     var parser = new CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\n     cff = parser.parse();\n     var compiler = new CFFCompiler(cff);\n     tables['CFF '].data = compiler.compile();\n    } catch (e) {\n     warn('Failed to compile font ' + properties.loadedName);\n    }\n   }\n   if (!tables['name']) {\n    tables['name'] = {\n     tag: 'name',\n     data: createNameTable(this.name)\n    };\n   } else {\n    var namePrototype = readNameTable(tables['name']);\n    tables['name'].data = createNameTable(name, namePrototype);\n   }\n   var builder = new OpenTypeFileBuilder(header.version);\n   for (var tableTag in tables) {\n    builder.addTable(tableTag, tables[tableTag].data);\n   }\n   return builder.toArray();\n  },\n  convert: function Font_convert(fontName, font, properties) {\n   properties.fixedPitch = false;\n   if (properties.builtInEncoding) {\n    adjustToUnicode(properties, properties.builtInEncoding);\n   }\n   var mapping = font.getGlyphMapping(properties);\n   var newMapping = adjustMapping(mapping, properties);\n   this.toFontChar = newMapping.toFontChar;\n   var numGlyphs = font.numGlyphs;\n   function getCharCodes(charCodeToGlyphId, glyphId) {\n    var charCodes = null;\n    for (var charCode in charCodeToGlyphId) {\n     if (glyphId === charCodeToGlyphId[charCode]) {\n      if (!charCodes) {\n       charCodes = [];\n      }\n      charCodes.push(charCode | 0);\n     }\n    }\n    return charCodes;\n   }\n   function createCharCode(charCodeToGlyphId, glyphId) {\n    for (var charCode in charCodeToGlyphId) {\n     if (glyphId === charCodeToGlyphId[charCode]) {\n      return charCode | 0;\n     }\n    }\n    newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\n    return newMapping.nextAvailableFontCharCode++;\n   }\n   var seacs = font.seacs;\n   if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\n    var matrix = properties.fontMatrix || FONT_IDENTITY_MATRIX;\n    var charset = font.getCharset();\n    var seacMap = Object.create(null);\n    for (var glyphId in seacs) {\n     glyphId |= 0;\n     var seac = seacs[glyphId];\n     var baseGlyphName = StandardEncoding[seac[2]];\n     var accentGlyphName = StandardEncoding[seac[3]];\n     var baseGlyphId = charset.indexOf(baseGlyphName);\n     var accentGlyphId = charset.indexOf(accentGlyphName);\n     if (baseGlyphId < 0 || accentGlyphId < 0) {\n      continue;\n     }\n     var accentOffset = {\n      x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\n      y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\n     };\n     var charCodes = getCharCodes(mapping, glyphId);\n     if (!charCodes) {\n      continue;\n     }\n     for (var i = 0, ii = charCodes.length; i < ii; i++) {\n      var charCode = charCodes[i];\n      var charCodeToGlyphId = newMapping.charCodeToGlyphId;\n      var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\n      var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\n      seacMap[charCode] = {\n       baseFontCharCode: baseFontCharCode,\n       accentFontCharCode: accentFontCharCode,\n       accentOffset: accentOffset\n      };\n     }\n    }\n    properties.seacMap = seacMap;\n   }\n   var unitsPerEm = 1 / (properties.fontMatrix || FONT_IDENTITY_MATRIX)[0];\n   var builder = new OpenTypeFileBuilder('\\x4F\\x54\\x54\\x4F');\n   builder.addTable('CFF ', font.data);\n   builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\n   builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\n   builder.addTable('head', '\\x00\\x01\\x00\\x00' + '\\x00\\x00\\x10\\x00' + '\\x00\\x00\\x00\\x00' + '\\x5F\\x0F\\x3C\\xF5' + '\\x00\\x00' + safeString16(unitsPerEm) + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00' + safeString16(properties.descent) + '\\x0F\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\x00\\x11' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00');\n   builder.addTable('hhea', '\\x00\\x01\\x00\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\x00\\x00' + '\\xFF\\xFF' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + string16(numGlyphs));\n   builder.addTable('hmtx', function fontFieldsHmtx() {\n    var charstrings = font.charstrings;\n    var cffWidths = font.cff ? font.cff.widths : null;\n    var hmtx = '\\x00\\x00\\x00\\x00';\n    for (var i = 1, ii = numGlyphs; i < ii; i++) {\n     var width = 0;\n     if (charstrings) {\n      var charstring = charstrings[i - 1];\n      width = 'width' in charstring ? charstring.width : 0;\n     } else if (cffWidths) {\n      width = Math.ceil(cffWidths[i] || 0);\n     }\n     hmtx += string16(width) + string16(0);\n    }\n    return hmtx;\n   }());\n   builder.addTable('maxp', '\\x00\\x00\\x50\\x00' + string16(numGlyphs));\n   builder.addTable('name', createNameTable(fontName));\n   builder.addTable('post', createPostTable(properties));\n   return builder.toArray();\n  },\n  get spaceWidth() {\n   if ('_shadowWidth' in this) {\n    return this._shadowWidth;\n   }\n   var possibleSpaceReplacements = [\n    'space',\n    'minus',\n    'one',\n    'i',\n    'I'\n   ];\n   var width;\n   for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\n    var glyphName = possibleSpaceReplacements[i];\n    if (glyphName in this.widths) {\n     width = this.widths[glyphName];\n     break;\n    }\n    var glyphsUnicodeMap = getGlyphsUnicode();\n    var glyphUnicode = glyphsUnicodeMap[glyphName];\n    var charcode = 0;\n    if (this.composite) {\n     if (this.cMap.contains(glyphUnicode)) {\n      charcode = this.cMap.lookup(glyphUnicode);\n     }\n    }\n    if (!charcode && this.toUnicode) {\n     charcode = this.toUnicode.charCodeOf(glyphUnicode);\n    }\n    if (charcode <= 0) {\n     charcode = glyphUnicode;\n    }\n    width = this.widths[charcode];\n    if (width) {\n     break;\n    }\n   }\n   width = width || this.defaultWidth;\n   this._shadowWidth = width;\n   return width;\n  },\n  charToGlyph: function Font_charToGlyph(charcode, isSpace) {\n   var fontCharCode, width, operatorListId;\n   var widthCode = charcode;\n   if (this.cMap && this.cMap.contains(charcode)) {\n    widthCode = this.cMap.lookup(charcode);\n   }\n   width = this.widths[widthCode];\n   width = isNum(width) ? width : this.defaultWidth;\n   var vmetric = this.vmetrics && this.vmetrics[widthCode];\n   var unicode = this.toUnicode.get(charcode) || charcode;\n   if (typeof unicode === 'number') {\n    unicode = String.fromCharCode(unicode);\n   }\n   var isInFont = charcode in this.toFontChar;\n   fontCharCode = this.toFontChar[charcode] || charcode;\n   if (this.missingFile) {\n    fontCharCode = mapSpecialUnicodeValues(fontCharCode);\n   }\n   if (this.isType3Font) {\n    operatorListId = fontCharCode;\n   }\n   var accent = null;\n   if (this.seacMap && this.seacMap[charcode]) {\n    isInFont = true;\n    var seac = this.seacMap[charcode];\n    fontCharCode = seac.baseFontCharCode;\n    accent = {\n     fontChar: String.fromCharCode(seac.accentFontCharCode),\n     offset: seac.accentOffset\n    };\n   }\n   var fontChar = String.fromCharCode(fontCharCode);\n   var glyph = this.glyphCache[charcode];\n   if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\n    glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\n    this.glyphCache[charcode] = glyph;\n   }\n   return glyph;\n  },\n  charsToGlyphs: function Font_charsToGlyphs(chars) {\n   var charsCache = this.charsCache;\n   var glyphs, glyph, charcode;\n   if (charsCache) {\n    glyphs = charsCache[chars];\n    if (glyphs) {\n     return glyphs;\n    }\n   }\n   if (!charsCache) {\n    charsCache = this.charsCache = Object.create(null);\n   }\n   glyphs = [];\n   var charsCacheKey = chars;\n   var i = 0, ii;\n   if (this.cMap) {\n    var c = Object.create(null);\n    while (i < chars.length) {\n     this.cMap.readCharCode(chars, i, c);\n     charcode = c.charcode;\n     var length = c.length;\n     i += length;\n     var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\n     glyph = this.charToGlyph(charcode, isSpace);\n     glyphs.push(glyph);\n    }\n   } else {\n    for (i = 0, ii = chars.length; i < ii; ++i) {\n     charcode = chars.charCodeAt(i);\n     glyph = this.charToGlyph(charcode, charcode === 0x20);\n     glyphs.push(glyph);\n    }\n   }\n   return charsCache[charsCacheKey] = glyphs;\n  }\n };\n return Font;\n}();\nvar ErrorFont = function ErrorFontClosure() {\n function ErrorFont(error) {\n  this.error = error;\n  this.loadedName = 'g_font_error';\n  this.loading = false;\n }\n ErrorFont.prototype = {\n  charsToGlyphs: function ErrorFont_charsToGlyphs() {\n   return [];\n  },\n  exportData: function ErrorFont_exportData() {\n   return { error: this.error };\n  }\n };\n return ErrorFont;\n}();\nfunction type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\n var charCodeToGlyphId = Object.create(null);\n var glyphId, charCode, baseEncoding;\n var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n if (properties.baseEncodingName) {\n  baseEncoding = getEncoding(properties.baseEncodingName);\n  for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n   glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n   if (glyphId >= 0) {\n    charCodeToGlyphId[charCode] = glyphId;\n   } else {\n    charCodeToGlyphId[charCode] = 0;\n   }\n  }\n } else if (isSymbolicFont) {\n  for (charCode in builtInEncoding) {\n   charCodeToGlyphId[charCode] = builtInEncoding[charCode];\n  }\n } else {\n  baseEncoding = StandardEncoding;\n  for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n   glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n   if (glyphId >= 0) {\n    charCodeToGlyphId[charCode] = glyphId;\n   } else {\n    charCodeToGlyphId[charCode] = 0;\n   }\n  }\n }\n var differences = properties.differences, glyphsUnicodeMap;\n if (differences) {\n  for (charCode in differences) {\n   var glyphName = differences[charCode];\n   glyphId = glyphNames.indexOf(glyphName);\n   if (glyphId === -1) {\n    if (!glyphsUnicodeMap) {\n     glyphsUnicodeMap = getGlyphsUnicode();\n    }\n    var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n    if (standardGlyphName !== glyphName) {\n     glyphId = glyphNames.indexOf(standardGlyphName);\n    }\n   }\n   if (glyphId >= 0) {\n    charCodeToGlyphId[charCode] = glyphId;\n   } else {\n    charCodeToGlyphId[charCode] = 0;\n   }\n  }\n }\n return charCodeToGlyphId;\n}\nvar Type1Font = function Type1FontClosure() {\n function findBlock(streamBytes, signature, startIndex) {\n  var streamBytesLength = streamBytes.length;\n  var signatureLength = signature.length;\n  var scanLength = streamBytesLength - signatureLength;\n  var i = startIndex, j, found = false;\n  while (i < scanLength) {\n   j = 0;\n   while (j < signatureLength && streamBytes[i + j] === signature[j]) {\n    j++;\n   }\n   if (j >= signatureLength) {\n    i += j;\n    while (i < streamBytesLength && isSpace(streamBytes[i])) {\n     i++;\n    }\n    found = true;\n    break;\n   }\n   i++;\n  }\n  return {\n   found: found,\n   length: i\n  };\n }\n function getHeaderBlock(stream, suggestedLength) {\n  var EEXEC_SIGNATURE = [\n   0x65,\n   0x65,\n   0x78,\n   0x65,\n   0x63\n  ];\n  var streamStartPos = stream.pos;\n  var headerBytes, headerBytesLength, block;\n  try {\n   headerBytes = stream.getBytes(suggestedLength);\n   headerBytesLength = headerBytes.length;\n  } catch (ex) {\n   if (ex instanceof MissingDataException) {\n    throw ex;\n   }\n  }\n  if (headerBytesLength === suggestedLength) {\n   block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\n   if (block.found && block.length === suggestedLength) {\n    return {\n     stream: new Stream(headerBytes),\n     length: suggestedLength\n    };\n   }\n  }\n  warn('Invalid \"Length1\" property in Type1 font -- trying to recover.');\n  stream.pos = streamStartPos;\n  var SCAN_BLOCK_LENGTH = 2048;\n  var actualLength;\n  while (true) {\n   var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\n   block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\n   if (block.length === 0) {\n    break;\n   }\n   stream.pos += block.length;\n   if (block.found) {\n    actualLength = stream.pos - streamStartPos;\n    break;\n   }\n  }\n  stream.pos = streamStartPos;\n  if (actualLength) {\n   return {\n    stream: new Stream(stream.getBytes(actualLength)),\n    length: actualLength\n   };\n  }\n  warn('Unable to recover \"Length1\" property in Type1 font -- using as is.');\n  return {\n   stream: new Stream(stream.getBytes(suggestedLength)),\n   length: suggestedLength\n  };\n }\n function getEexecBlock(stream, suggestedLength) {\n  var eexecBytes = stream.getBytes();\n  return {\n   stream: new Stream(eexecBytes),\n   length: eexecBytes.length\n  };\n }\n function Type1Font(name, file, properties) {\n  var PFB_HEADER_SIZE = 6;\n  var headerBlockLength = properties.length1;\n  var eexecBlockLength = properties.length2;\n  var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\n  var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\n  if (pfbHeaderPresent) {\n   file.skip(PFB_HEADER_SIZE);\n   headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n  }\n  var headerBlock = getHeaderBlock(file, headerBlockLength);\n  headerBlockLength = headerBlock.length;\n  var headerBlockParser = new Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\n  headerBlockParser.extractFontHeader(properties);\n  if (pfbHeaderPresent) {\n   pfbHeader = file.getBytes(PFB_HEADER_SIZE);\n   eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n  }\n  var eexecBlock = getEexecBlock(file, eexecBlockLength);\n  eexecBlockLength = eexecBlock.length;\n  var eexecBlockParser = new Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\n  var data = eexecBlockParser.extractFontProgram();\n  for (var info in data.properties) {\n   properties[info] = data.properties[info];\n  }\n  var charstrings = data.charstrings;\n  var type2Charstrings = this.getType2Charstrings(charstrings);\n  var subrs = this.getType2Subrs(data.subrs);\n  this.charstrings = charstrings;\n  this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\n  this.seacs = this.getSeacs(data.charstrings);\n }\n Type1Font.prototype = {\n  get numGlyphs() {\n   return this.charstrings.length + 1;\n  },\n  getCharset: function Type1Font_getCharset() {\n   var charset = ['.notdef'];\n   var charstrings = this.charstrings;\n   for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\n    charset.push(charstrings[glyphId].glyphName);\n   }\n   return charset;\n  },\n  getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\n   var charstrings = this.charstrings;\n   var glyphNames = ['.notdef'], glyphId;\n   for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\n    glyphNames.push(charstrings[glyphId].glyphName);\n   }\n   var encoding = properties.builtInEncoding;\n   if (encoding) {\n    var builtInEncoding = Object.create(null);\n    for (var charCode in encoding) {\n     glyphId = glyphNames.indexOf(encoding[charCode]);\n     if (glyphId >= 0) {\n      builtInEncoding[charCode] = glyphId;\n     }\n    }\n   }\n   return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\n  },\n  getSeacs: function Type1Font_getSeacs(charstrings) {\n   var i, ii;\n   var seacMap = [];\n   for (i = 0, ii = charstrings.length; i < ii; i++) {\n    var charstring = charstrings[i];\n    if (charstring.seac) {\n     seacMap[i + 1] = charstring.seac;\n    }\n   }\n   return seacMap;\n  },\n  getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\n   var type2Charstrings = [];\n   for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\n    type2Charstrings.push(type1Charstrings[i].charstring);\n   }\n   return type2Charstrings;\n  },\n  getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\n   var bias = 0;\n   var count = type1Subrs.length;\n   if (count < 1133) {\n    bias = 107;\n   } else if (count < 33769) {\n    bias = 1131;\n   } else {\n    bias = 32768;\n   }\n   var type2Subrs = [];\n   var i;\n   for (i = 0; i < bias; i++) {\n    type2Subrs.push([0x0B]);\n   }\n   for (i = 0; i < count; i++) {\n    type2Subrs.push(type1Subrs[i]);\n   }\n   return type2Subrs;\n  },\n  wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\n   var cff = new CFF();\n   cff.header = new CFFHeader(1, 0, 4, 4);\n   cff.names = [name];\n   var topDict = new CFFTopDict();\n   topDict.setByName('version', 391);\n   topDict.setByName('Notice', 392);\n   topDict.setByName('FullName', 393);\n   topDict.setByName('FamilyName', 394);\n   topDict.setByName('Weight', 395);\n   topDict.setByName('Encoding', null);\n   topDict.setByName('FontMatrix', properties.fontMatrix);\n   topDict.setByName('FontBBox', properties.bbox);\n   topDict.setByName('charset', null);\n   topDict.setByName('CharStrings', null);\n   topDict.setByName('Private', null);\n   cff.topDict = topDict;\n   var strings = new CFFStrings();\n   strings.add('Version 0.11');\n   strings.add('See original notice');\n   strings.add(name);\n   strings.add(name);\n   strings.add('Medium');\n   cff.strings = strings;\n   cff.globalSubrIndex = new CFFIndex();\n   var count = glyphs.length;\n   var charsetArray = [0];\n   var i, ii;\n   for (i = 0; i < count; i++) {\n    var index = CFFStandardStrings.indexOf(charstrings[i].glyphName);\n    if (index === -1) {\n     index = 0;\n    }\n    charsetArray.push(index >> 8 & 0xff, index & 0xff);\n   }\n   cff.charset = new CFFCharset(false, 0, [], charsetArray);\n   var charStringsIndex = new CFFIndex();\n   charStringsIndex.add([\n    0x8B,\n    0x0E\n   ]);\n   for (i = 0; i < count; i++) {\n    var glyph = glyphs[i];\n    if (glyph.length === 0) {\n     charStringsIndex.add([\n      0x8B,\n      0x0E\n     ]);\n     continue;\n    }\n    charStringsIndex.add(glyph);\n   }\n   cff.charStrings = charStringsIndex;\n   var privateDict = new CFFPrivateDict();\n   privateDict.setByName('Subrs', null);\n   var fields = [\n    'BlueValues',\n    'OtherBlues',\n    'FamilyBlues',\n    'FamilyOtherBlues',\n    'StemSnapH',\n    'StemSnapV',\n    'BlueShift',\n    'BlueFuzz',\n    'BlueScale',\n    'LanguageGroup',\n    'ExpansionFactor',\n    'ForceBold',\n    'StdHW',\n    'StdVW'\n   ];\n   for (i = 0, ii = fields.length; i < ii; i++) {\n    var field = fields[i];\n    if (!(field in properties.privateData)) {\n     continue;\n    }\n    var value = properties.privateData[field];\n    if (isArray(value)) {\n     for (var j = value.length - 1; j > 0; j--) {\n      value[j] -= value[j - 1];\n     }\n    }\n    privateDict.setByName(field, value);\n   }\n   cff.topDict.privateDict = privateDict;\n   var subrIndex = new CFFIndex();\n   for (i = 0, ii = subrs.length; i < ii; i++) {\n    subrIndex.add(subrs[i]);\n   }\n   privateDict.subrsIndex = subrIndex;\n   var compiler = new CFFCompiler(cff);\n   return compiler.compile();\n  }\n };\n return Type1Font;\n}();\nvar CFFFont = function CFFFontClosure() {\n function CFFFont(file, properties) {\n  this.properties = properties;\n  var parser = new CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\n  this.cff = parser.parse();\n  var compiler = new CFFCompiler(this.cff);\n  this.seacs = this.cff.seacs;\n  try {\n   this.data = compiler.compile();\n  } catch (e) {\n   warn('Failed to compile font ' + properties.loadedName);\n   this.data = file;\n  }\n }\n CFFFont.prototype = {\n  get numGlyphs() {\n   return this.cff.charStrings.count;\n  },\n  getCharset: function CFFFont_getCharset() {\n   return this.cff.charset.charset;\n  },\n  getGlyphMapping: function CFFFont_getGlyphMapping() {\n   var cff = this.cff;\n   var properties = this.properties;\n   var charsets = cff.charset.charset;\n   var charCodeToGlyphId;\n   var glyphId;\n   if (properties.composite) {\n    charCodeToGlyphId = Object.create(null);\n    if (cff.isCIDFont) {\n     for (glyphId = 0; glyphId < charsets.length; glyphId++) {\n      var cid = charsets[glyphId];\n      var charCode = properties.cMap.charCodeOf(cid);\n      charCodeToGlyphId[charCode] = glyphId;\n     }\n    } else {\n     for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\n      charCodeToGlyphId[glyphId] = glyphId;\n     }\n    }\n    return charCodeToGlyphId;\n   }\n   var encoding = cff.encoding ? cff.encoding.encoding : null;\n   charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\n   return charCodeToGlyphId;\n  }\n };\n return CFFFont;\n}();\n(function checkSeacSupport() {\n if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {\n  SEAC_ANALYSIS_ENABLED = true;\n }\n}());\n(function checkChromeWindows() {\n if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {\n  SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\n }\n}());\nexports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED;\nexports.PRIVATE_USE_OFFSET_START = PRIVATE_USE_OFFSET_START;\nexports.PRIVATE_USE_OFFSET_END = PRIVATE_USE_OFFSET_END;\nexports.ErrorFont = ErrorFont;\nexports.Font = Font;\nexports.FontFlags = FontFlags;\nexports.IdentityToUnicodeMap = IdentityToUnicodeMap;\nexports.ProblematicCharRanges = ProblematicCharRanges;\nexports.ToUnicodeMap = ToUnicodeMap;\nexports.getFontType = getFontType;\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar coreColorSpace = __w_pdfjs_require__(3);\nvar coreStream = __w_pdfjs_require__(2);\nvar coreJpx = __w_pdfjs_require__(15);\nvar ImageKind = sharedUtil.ImageKind;\nvar assert = sharedUtil.assert;\nvar error = sharedUtil.error;\nvar info = sharedUtil.info;\nvar isArray = sharedUtil.isArray;\nvar warn = sharedUtil.warn;\nvar Name = corePrimitives.Name;\nvar isStream = corePrimitives.isStream;\nvar ColorSpace = coreColorSpace.ColorSpace;\nvar DecodeStream = coreStream.DecodeStream;\nvar JpegStream = coreStream.JpegStream;\nvar JpxImage = coreJpx.JpxImage;\nvar PDFImage = function PDFImageClosure() {\n function handleImageData(image, nativeDecoder) {\n  if (nativeDecoder && nativeDecoder.canDecode(image)) {\n   return nativeDecoder.decode(image);\n  }\n  return Promise.resolve(image);\n }\n function decodeAndClamp(value, addend, coefficient, max) {\n  value = addend + value * coefficient;\n  return value < 0 ? 0 : value > max ? max : value;\n }\n function resizeImageMask(src, bpc, w1, h1, w2, h2) {\n  var length = w2 * h2;\n  var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n  var xRatio = w1 / w2;\n  var yRatio = h1 / h2;\n  var i, j, py, newIndex = 0, oldIndex;\n  var xScaled = new Uint16Array(w2);\n  var w1Scanline = w1;\n  for (i = 0; i < w2; i++) {\n   xScaled[i] = Math.floor(i * xRatio);\n  }\n  for (i = 0; i < h2; i++) {\n   py = Math.floor(i * yRatio) * w1Scanline;\n   for (j = 0; j < w2; j++) {\n    oldIndex = py + xScaled[j];\n    dest[newIndex++] = src[oldIndex];\n   }\n  }\n  return dest;\n }\n function PDFImage(xref, res, image, inline, smask, mask, isMask) {\n  this.image = image;\n  var dict = image.dict;\n  if (dict.has('Filter')) {\n   var filter = dict.get('Filter').name;\n   if (filter === 'JPXDecode') {\n    var jpxImage = new JpxImage();\n    jpxImage.parseImageProperties(image.stream);\n    image.stream.reset();\n    image.bitsPerComponent = jpxImage.bitsPerComponent;\n    image.numComps = jpxImage.componentsCount;\n   } else if (filter === 'JBIG2Decode') {\n    image.bitsPerComponent = 1;\n    image.numComps = 1;\n   }\n  }\n  this.width = dict.get('Width', 'W');\n  this.height = dict.get('Height', 'H');\n  if (this.width < 1 || this.height < 1) {\n   error('Invalid image width: ' + this.width + ' or height: ' + this.height);\n  }\n  this.interpolate = dict.get('Interpolate', 'I') || false;\n  this.imageMask = dict.get('ImageMask', 'IM') || false;\n  this.matte = dict.get('Matte') || false;\n  var bitsPerComponent = image.bitsPerComponent;\n  if (!bitsPerComponent) {\n   bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\n   if (!bitsPerComponent) {\n    if (this.imageMask) {\n     bitsPerComponent = 1;\n    } else {\n     error('Bits per component missing in image: ' + this.imageMask);\n    }\n   }\n  }\n  this.bpc = bitsPerComponent;\n  if (!this.imageMask) {\n   var colorSpace = dict.get('ColorSpace', 'CS');\n   if (!colorSpace) {\n    info('JPX images (which do not require color spaces)');\n    switch (image.numComps) {\n    case 1:\n     colorSpace = Name.get('DeviceGray');\n     break;\n    case 3:\n     colorSpace = Name.get('DeviceRGB');\n     break;\n    case 4:\n     colorSpace = Name.get('DeviceCMYK');\n     break;\n    default:\n     error('JPX images with ' + this.numComps + ' color components not supported.');\n    }\n   }\n   this.colorSpace = ColorSpace.parse(colorSpace, xref, res);\n   this.numComps = this.colorSpace.numComps;\n  }\n  this.decode = dict.getArray('Decode', 'D');\n  this.needsDecode = false;\n  if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !ColorSpace.isDefaultDecode(this.decode, 1))) {\n   this.needsDecode = true;\n   var max = (1 << bitsPerComponent) - 1;\n   this.decodeCoefficients = [];\n   this.decodeAddends = [];\n   for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\n    var dmin = this.decode[i];\n    var dmax = this.decode[i + 1];\n    this.decodeCoefficients[j] = dmax - dmin;\n    this.decodeAddends[j] = max * dmin;\n   }\n  }\n  if (smask) {\n   this.smask = new PDFImage(xref, res, smask, false);\n  } else if (mask) {\n   if (isStream(mask)) {\n    var maskDict = mask.dict, imageMask = maskDict.get('ImageMask', 'IM');\n    if (!imageMask) {\n     warn('Ignoring /Mask in image without /ImageMask.');\n    } else {\n     this.mask = new PDFImage(xref, res, mask, false, null, null, true);\n    }\n   } else {\n    this.mask = mask;\n   }\n  }\n }\n PDFImage.buildImage = function PDFImage_buildImage(handler, xref, res, image, inline, nativeDecoder) {\n  var imagePromise = handleImageData(image, nativeDecoder);\n  var smaskPromise;\n  var maskPromise;\n  var smask = image.dict.get('SMask');\n  var mask = image.dict.get('Mask');\n  if (smask) {\n   smaskPromise = handleImageData(smask, nativeDecoder);\n   maskPromise = Promise.resolve(null);\n  } else {\n   smaskPromise = Promise.resolve(null);\n   if (mask) {\n    if (isStream(mask)) {\n     maskPromise = handleImageData(mask, nativeDecoder);\n    } else if (isArray(mask)) {\n     maskPromise = Promise.resolve(mask);\n    } else {\n     warn('Unsupported mask format.');\n     maskPromise = Promise.resolve(null);\n    }\n   } else {\n    maskPromise = Promise.resolve(null);\n   }\n  }\n  return Promise.all([\n   imagePromise,\n   smaskPromise,\n   maskPromise\n  ]).then(function (results) {\n   var imageData = results[0];\n   var smaskData = results[1];\n   var maskData = results[2];\n   return new PDFImage(xref, res, imageData, inline, smaskData, maskData);\n  });\n };\n PDFImage.createMask = function PDFImage_createMask(imgArray, width, height, imageIsFromDecodeStream, inverseDecode) {\n  var computedLength = (width + 7 >> 3) * height;\n  var actualLength = imgArray.byteLength;\n  var haveFullData = computedLength === actualLength;\n  var data, i;\n  if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\n   data = imgArray;\n  } else if (!inverseDecode) {\n   data = new Uint8Array(actualLength);\n   data.set(imgArray);\n  } else {\n   data = new Uint8Array(computedLength);\n   data.set(imgArray);\n   for (i = actualLength; i < computedLength; i++) {\n    data[i] = 0xff;\n   }\n  }\n  if (inverseDecode) {\n   for (i = 0; i < actualLength; i++) {\n    data[i] = ~data[i];\n   }\n  }\n  return {\n   data: data,\n   width: width,\n   height: height\n  };\n };\n PDFImage.prototype = {\n  get drawWidth() {\n   return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\n  },\n  get drawHeight() {\n   return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\n  },\n  decodeBuffer: function PDFImage_decodeBuffer(buffer) {\n   var bpc = this.bpc;\n   var numComps = this.numComps;\n   var decodeAddends = this.decodeAddends;\n   var decodeCoefficients = this.decodeCoefficients;\n   var max = (1 << bpc) - 1;\n   var i, ii;\n   if (bpc === 1) {\n    for (i = 0, ii = buffer.length; i < ii; i++) {\n     buffer[i] = +!buffer[i];\n    }\n    return;\n   }\n   var index = 0;\n   for (i = 0, ii = this.width * this.height; i < ii; i++) {\n    for (var j = 0; j < numComps; j++) {\n     buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\n     index++;\n    }\n   }\n  },\n  getComponents: function PDFImage_getComponents(buffer) {\n   var bpc = this.bpc;\n   if (bpc === 8) {\n    return buffer;\n   }\n   var width = this.width;\n   var height = this.height;\n   var numComps = this.numComps;\n   var length = width * height * numComps;\n   var bufferPos = 0;\n   var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n   var rowComps = width * numComps;\n   var max = (1 << bpc) - 1;\n   var i = 0, ii, buf;\n   if (bpc === 1) {\n    var mask, loop1End, loop2End;\n    for (var j = 0; j < height; j++) {\n     loop1End = i + (rowComps & ~7);\n     loop2End = i + rowComps;\n     while (i < loop1End) {\n      buf = buffer[bufferPos++];\n      output[i] = buf >> 7 & 1;\n      output[i + 1] = buf >> 6 & 1;\n      output[i + 2] = buf >> 5 & 1;\n      output[i + 3] = buf >> 4 & 1;\n      output[i + 4] = buf >> 3 & 1;\n      output[i + 5] = buf >> 2 & 1;\n      output[i + 6] = buf >> 1 & 1;\n      output[i + 7] = buf & 1;\n      i += 8;\n     }\n     if (i < loop2End) {\n      buf = buffer[bufferPos++];\n      mask = 128;\n      while (i < loop2End) {\n       output[i++] = +!!(buf & mask);\n       mask >>= 1;\n      }\n     }\n    }\n   } else {\n    var bits = 0;\n    buf = 0;\n    for (i = 0, ii = length; i < ii; ++i) {\n     if (i % rowComps === 0) {\n      buf = 0;\n      bits = 0;\n     }\n     while (bits < bpc) {\n      buf = buf << 8 | buffer[bufferPos++];\n      bits += 8;\n     }\n     var remainingBits = bits - bpc;\n     var value = buf >> remainingBits;\n     output[i] = value < 0 ? 0 : value > max ? max : value;\n     buf = buf & (1 << remainingBits) - 1;\n     bits = remainingBits;\n    }\n   }\n   return output;\n  },\n  fillOpacity: function PDFImage_fillOpacity(rgbaBuf, width, height, actualHeight, image) {\n   var smask = this.smask;\n   var mask = this.mask;\n   var alphaBuf, sw, sh, i, ii, j;\n   if (smask) {\n    sw = smask.width;\n    sh = smask.height;\n    alphaBuf = new Uint8Array(sw * sh);\n    smask.fillGrayBuffer(alphaBuf);\n    if (sw !== width || sh !== height) {\n     alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\n    }\n   } else if (mask) {\n    if (mask instanceof PDFImage) {\n     sw = mask.width;\n     sh = mask.height;\n     alphaBuf = new Uint8Array(sw * sh);\n     mask.numComps = 1;\n     mask.fillGrayBuffer(alphaBuf);\n     for (i = 0, ii = sw * sh; i < ii; ++i) {\n      alphaBuf[i] = 255 - alphaBuf[i];\n     }\n     if (sw !== width || sh !== height) {\n      alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\n     }\n    } else if (isArray(mask)) {\n     alphaBuf = new Uint8Array(width * height);\n     var numComps = this.numComps;\n     for (i = 0, ii = width * height; i < ii; ++i) {\n      var opacity = 0;\n      var imageOffset = i * numComps;\n      for (j = 0; j < numComps; ++j) {\n       var color = image[imageOffset + j];\n       var maskOffset = j * 2;\n       if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\n        opacity = 255;\n        break;\n       }\n      }\n      alphaBuf[i] = opacity;\n     }\n    } else {\n     error('Unknown mask format.');\n    }\n   }\n   if (alphaBuf) {\n    for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n     rgbaBuf[j] = alphaBuf[i];\n    }\n   } else {\n    for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n     rgbaBuf[j] = 255;\n    }\n   }\n  },\n  undoPreblend: function PDFImage_undoPreblend(buffer, width, height) {\n   var matte = this.smask && this.smask.matte;\n   if (!matte) {\n    return;\n   }\n   var matteRgb = this.colorSpace.getRgb(matte, 0);\n   var matteR = matteRgb[0];\n   var matteG = matteRgb[1];\n   var matteB = matteRgb[2];\n   var length = width * height * 4;\n   var r, g, b;\n   for (var i = 0; i < length; i += 4) {\n    var alpha = buffer[i + 3];\n    if (alpha === 0) {\n     buffer[i] = 255;\n     buffer[i + 1] = 255;\n     buffer[i + 2] = 255;\n     continue;\n    }\n    var k = 255 / alpha;\n    r = (buffer[i] - matteR) * k + matteR;\n    g = (buffer[i + 1] - matteG) * k + matteG;\n    b = (buffer[i + 2] - matteB) * k + matteB;\n    buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\n    buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\n    buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\n   }\n  },\n  createImageData: function PDFImage_createImageData(forceRGBA) {\n   var drawWidth = this.drawWidth;\n   var drawHeight = this.drawHeight;\n   var imgData = {\n    width: drawWidth,\n    height: drawHeight\n   };\n   var numComps = this.numComps;\n   var originalWidth = this.width;\n   var originalHeight = this.height;\n   var bpc = this.bpc;\n   var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\n   var imgArray;\n   if (!forceRGBA) {\n    var kind;\n    if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\n     kind = ImageKind.GRAYSCALE_1BPP;\n    } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\n     kind = ImageKind.RGB_24BPP;\n    }\n    if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\n     imgData.kind = kind;\n     imgArray = this.getImageBytes(originalHeight * rowBytes);\n     if (this.image instanceof DecodeStream) {\n      imgData.data = imgArray;\n     } else {\n      var newArray = new Uint8Array(imgArray.length);\n      newArray.set(imgArray);\n      imgData.data = newArray;\n     }\n     if (this.needsDecode) {\n      assert(kind === ImageKind.GRAYSCALE_1BPP);\n      var buffer = imgData.data;\n      for (var i = 0, ii = buffer.length; i < ii; i++) {\n       buffer[i] ^= 0xff;\n      }\n     }\n     return imgData;\n    }\n    if (this.image instanceof JpegStream && !this.smask && !this.mask && (this.colorSpace.name === 'DeviceGray' || this.colorSpace.name === 'DeviceRGB' || this.colorSpace.name === 'DeviceCMYK')) {\n     imgData.kind = ImageKind.RGB_24BPP;\n     imgData.data = this.getImageBytes(originalHeight * rowBytes, drawWidth, drawHeight, true);\n     return imgData;\n    }\n   }\n   imgArray = this.getImageBytes(originalHeight * rowBytes);\n   var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\n   var comps = this.getComponents(imgArray);\n   var alpha01, maybeUndoPreblend;\n   if (!forceRGBA && !this.smask && !this.mask) {\n    imgData.kind = ImageKind.RGB_24BPP;\n    imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\n    alpha01 = 0;\n    maybeUndoPreblend = false;\n   } else {\n    imgData.kind = ImageKind.RGBA_32BPP;\n    imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\n    alpha01 = 1;\n    maybeUndoPreblend = true;\n    this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\n   }\n   if (this.needsDecode) {\n    this.decodeBuffer(comps);\n   }\n   this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\n   if (maybeUndoPreblend) {\n    this.undoPreblend(imgData.data, drawWidth, actualHeight);\n   }\n   return imgData;\n  },\n  fillGrayBuffer: function PDFImage_fillGrayBuffer(buffer) {\n   var numComps = this.numComps;\n   if (numComps !== 1) {\n    error('Reading gray scale from a color image: ' + numComps);\n   }\n   var width = this.width;\n   var height = this.height;\n   var bpc = this.bpc;\n   var rowBytes = width * numComps * bpc + 7 >> 3;\n   var imgArray = this.getImageBytes(height * rowBytes);\n   var comps = this.getComponents(imgArray);\n   var i, length;\n   if (bpc === 1) {\n    length = width * height;\n    if (this.needsDecode) {\n     for (i = 0; i < length; ++i) {\n      buffer[i] = comps[i] - 1 & 255;\n     }\n    } else {\n     for (i = 0; i < length; ++i) {\n      buffer[i] = -comps[i] & 255;\n     }\n    }\n    return;\n   }\n   if (this.needsDecode) {\n    this.decodeBuffer(comps);\n   }\n   length = width * height;\n   var scale = 255 / ((1 << bpc) - 1);\n   for (i = 0; i < length; ++i) {\n    buffer[i] = scale * comps[i] | 0;\n   }\n  },\n  getImageBytes: function PDFImage_getImageBytes(length, drawWidth, drawHeight, forceRGB) {\n   this.image.reset();\n   this.image.drawWidth = drawWidth || this.width;\n   this.image.drawHeight = drawHeight || this.height;\n   this.image.forceRGB = !!forceRGB;\n   return this.image.getBytes(length);\n  }\n };\n return PDFImage;\n}();\nexports.PDFImage = PDFImage;\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar coreArithmeticDecoder = __w_pdfjs_require__(10);\nvar error = sharedUtil.error;\nvar log2 = sharedUtil.log2;\nvar readInt8 = sharedUtil.readInt8;\nvar readUint16 = sharedUtil.readUint16;\nvar readUint32 = sharedUtil.readUint32;\nvar shadow = sharedUtil.shadow;\nvar ArithmeticDecoder = coreArithmeticDecoder.ArithmeticDecoder;\nvar Jbig2Image = function Jbig2ImageClosure() {\n function ContextCache() {\n }\n ContextCache.prototype = {\n  getContexts: function (id) {\n   if (id in this) {\n    return this[id];\n   }\n   return this[id] = new Int8Array(1 << 16);\n  }\n };\n function DecodingContext(data, start, end) {\n  this.data = data;\n  this.start = start;\n  this.end = end;\n }\n DecodingContext.prototype = {\n  get decoder() {\n   var decoder = new ArithmeticDecoder(this.data, this.start, this.end);\n   return shadow(this, 'decoder', decoder);\n  },\n  get contextCache() {\n   var cache = new ContextCache();\n   return shadow(this, 'contextCache', cache);\n  }\n };\n function decodeInteger(contextCache, procedure, decoder) {\n  var contexts = contextCache.getContexts(procedure);\n  var prev = 1;\n  function readBits(length) {\n   var v = 0;\n   for (var i = 0; i < length; i++) {\n    var bit = decoder.readBit(contexts, prev);\n    prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\n    v = v << 1 | bit;\n   }\n   return v >>> 0;\n  }\n  var sign = readBits(1);\n  var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\n  return sign === 0 ? value : value > 0 ? -value : null;\n }\n function decodeIAID(contextCache, decoder, codeLength) {\n  var contexts = contextCache.getContexts('IAID');\n  var prev = 1;\n  for (var i = 0; i < codeLength; i++) {\n   var bit = decoder.readBit(contexts, prev);\n   prev = prev << 1 | bit;\n  }\n  if (codeLength < 31) {\n   return prev & (1 << codeLength) - 1;\n  }\n  return prev & 0x7FFFFFFF;\n }\n var SegmentTypes = [\n  'SymbolDictionary',\n  null,\n  null,\n  null,\n  'IntermediateTextRegion',\n  null,\n  'ImmediateTextRegion',\n  'ImmediateLosslessTextRegion',\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  'patternDictionary',\n  null,\n  null,\n  null,\n  'IntermediateHalftoneRegion',\n  null,\n  'ImmediateHalftoneRegion',\n  'ImmediateLosslessHalftoneRegion',\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  'IntermediateGenericRegion',\n  null,\n  'ImmediateGenericRegion',\n  'ImmediateLosslessGenericRegion',\n  'IntermediateGenericRefinementRegion',\n  null,\n  'ImmediateGenericRefinementRegion',\n  'ImmediateLosslessGenericRefinementRegion',\n  null,\n  null,\n  null,\n  null,\n  'PageInformation',\n  'EndOfPage',\n  'EndOfStripe',\n  'EndOfFile',\n  'Profiles',\n  'Tables',\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  'Extension'\n ];\n var CodingTemplates = [\n  [\n   {\n    x: -1,\n    y: -2\n   },\n   {\n    x: 0,\n    y: -2\n   },\n   {\n    x: 1,\n    y: -2\n   },\n   {\n    x: -2,\n    y: -1\n   },\n   {\n    x: -1,\n    y: -1\n   },\n   {\n    x: 0,\n    y: -1\n   },\n   {\n    x: 1,\n    y: -1\n   },\n   {\n    x: 2,\n    y: -1\n   },\n   {\n    x: -4,\n    y: 0\n   },\n   {\n    x: -3,\n    y: 0\n   },\n   {\n    x: -2,\n    y: 0\n   },\n   {\n    x: -1,\n    y: 0\n   }\n  ],\n  [\n   {\n    x: -1,\n    y: -2\n   },\n   {\n    x: 0,\n    y: -2\n   },\n   {\n    x: 1,\n    y: -2\n   },\n   {\n    x: 2,\n    y: -2\n   },\n   {\n    x: -2,\n    y: -1\n   },\n   {\n    x: -1,\n    y: -1\n   },\n   {\n    x: 0,\n    y: -1\n   },\n   {\n    x: 1,\n    y: -1\n   },\n   {\n    x: 2,\n    y: -1\n   },\n   {\n    x: -3,\n    y: 0\n   },\n   {\n    x: -2,\n    y: 0\n   },\n   {\n    x: -1,\n    y: 0\n   }\n  ],\n  [\n   {\n    x: -1,\n    y: -2\n   },\n   {\n    x: 0,\n    y: -2\n   },\n   {\n    x: 1,\n    y: -2\n   },\n   {\n    x: -2,\n    y: -1\n   },\n   {\n    x: -1,\n    y: -1\n   },\n   {\n    x: 0,\n    y: -1\n   },\n   {\n    x: 1,\n    y: -1\n   },\n   {\n    x: -2,\n    y: 0\n   },\n   {\n    x: -1,\n    y: 0\n   }\n  ],\n  [\n   {\n    x: -3,\n    y: -1\n   },\n   {\n    x: -2,\n    y: -1\n   },\n   {\n    x: -1,\n    y: -1\n   },\n   {\n    x: 0,\n    y: -1\n   },\n   {\n    x: 1,\n    y: -1\n   },\n   {\n    x: -4,\n    y: 0\n   },\n   {\n    x: -3,\n    y: 0\n   },\n   {\n    x: -2,\n    y: 0\n   },\n   {\n    x: -1,\n    y: 0\n   }\n  ]\n ];\n var RefinementTemplates = [\n  {\n   coding: [\n    {\n     x: 0,\n     y: -1\n    },\n    {\n     x: 1,\n     y: -1\n    },\n    {\n     x: -1,\n     y: 0\n    }\n   ],\n   reference: [\n    {\n     x: 0,\n     y: -1\n    },\n    {\n     x: 1,\n     y: -1\n    },\n    {\n     x: -1,\n     y: 0\n    },\n    {\n     x: 0,\n     y: 0\n    },\n    {\n     x: 1,\n     y: 0\n    },\n    {\n     x: -1,\n     y: 1\n    },\n    {\n     x: 0,\n     y: 1\n    },\n    {\n     x: 1,\n     y: 1\n    }\n   ]\n  },\n  {\n   coding: [\n    {\n     x: -1,\n     y: -1\n    },\n    {\n     x: 0,\n     y: -1\n    },\n    {\n     x: 1,\n     y: -1\n    },\n    {\n     x: -1,\n     y: 0\n    }\n   ],\n   reference: [\n    {\n     x: 0,\n     y: -1\n    },\n    {\n     x: -1,\n     y: 0\n    },\n    {\n     x: 0,\n     y: 0\n    },\n    {\n     x: 1,\n     y: 0\n    },\n    {\n     x: 0,\n     y: 1\n    },\n    {\n     x: 1,\n     y: 1\n    }\n   ]\n  }\n ];\n var ReusedContexts = [\n  0x9B25,\n  0x0795,\n  0x00E5,\n  0x0195\n ];\n var RefinementReusedContexts = [\n  0x0020,\n  0x0008\n ];\n function decodeBitmapTemplate0(width, height, decodingContext) {\n  var decoder = decodingContext.decoder;\n  var contexts = decodingContext.contextCache.getContexts('GB');\n  var contextLabel, i, j, pixel, row, row1, row2, bitmap = [];\n  var OLD_PIXEL_MASK = 0x7BF7;\n  for (i = 0; i < height; i++) {\n   row = bitmap[i] = new Uint8Array(width);\n   row1 = i < 1 ? row : bitmap[i - 1];\n   row2 = i < 2 ? row : bitmap[i - 2];\n   contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\n   for (j = 0; j < width; j++) {\n    row[j] = pixel = decoder.readBit(contexts, contextLabel);\n    contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\n   }\n  }\n  return bitmap;\n }\n function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\n  if (mmr) {\n   error('JBIG2 error: MMR encoding is not supported');\n  }\n  if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\n   return decodeBitmapTemplate0(width, height, decodingContext);\n  }\n  var useskip = !!skip;\n  var template = CodingTemplates[templateIndex].concat(at);\n  template.sort(function (a, b) {\n   return a.y - b.y || a.x - b.x;\n  });\n  var templateLength = template.length;\n  var templateX = new Int8Array(templateLength);\n  var templateY = new Int8Array(templateLength);\n  var changingTemplateEntries = [];\n  var reuseMask = 0, minX = 0, maxX = 0, minY = 0;\n  var c, k;\n  for (k = 0; k < templateLength; k++) {\n   templateX[k] = template[k].x;\n   templateY[k] = template[k].y;\n   minX = Math.min(minX, template[k].x);\n   maxX = Math.max(maxX, template[k].x);\n   minY = Math.min(minY, template[k].y);\n   if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\n    reuseMask |= 1 << templateLength - 1 - k;\n   } else {\n    changingTemplateEntries.push(k);\n   }\n  }\n  var changingEntriesLength = changingTemplateEntries.length;\n  var changingTemplateX = new Int8Array(changingEntriesLength);\n  var changingTemplateY = new Int8Array(changingEntriesLength);\n  var changingTemplateBit = new Uint16Array(changingEntriesLength);\n  for (c = 0; c < changingEntriesLength; c++) {\n   k = changingTemplateEntries[c];\n   changingTemplateX[c] = template[k].x;\n   changingTemplateY[c] = template[k].y;\n   changingTemplateBit[c] = 1 << templateLength - 1 - k;\n  }\n  var sbb_left = -minX;\n  var sbb_top = -minY;\n  var sbb_right = width - maxX;\n  var pseudoPixelContext = ReusedContexts[templateIndex];\n  var row = new Uint8Array(width);\n  var bitmap = [];\n  var decoder = decodingContext.decoder;\n  var contexts = decodingContext.contextCache.getContexts('GB');\n  var ltp = 0, j, i0, j0, contextLabel = 0, bit, shift;\n  for (var i = 0; i < height; i++) {\n   if (prediction) {\n    var sltp = decoder.readBit(contexts, pseudoPixelContext);\n    ltp ^= sltp;\n    if (ltp) {\n     bitmap.push(row);\n     continue;\n    }\n   }\n   row = new Uint8Array(row);\n   bitmap.push(row);\n   for (j = 0; j < width; j++) {\n    if (useskip && skip[i][j]) {\n     row[j] = 0;\n     continue;\n    }\n    if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n     contextLabel = contextLabel << 1 & reuseMask;\n     for (k = 0; k < changingEntriesLength; k++) {\n      i0 = i + changingTemplateY[k];\n      j0 = j + changingTemplateX[k];\n      bit = bitmap[i0][j0];\n      if (bit) {\n       bit = changingTemplateBit[k];\n       contextLabel |= bit;\n      }\n     }\n    } else {\n     contextLabel = 0;\n     shift = templateLength - 1;\n     for (k = 0; k < templateLength; k++, shift--) {\n      j0 = j + templateX[k];\n      if (j0 >= 0 && j0 < width) {\n       i0 = i + templateY[k];\n       if (i0 >= 0) {\n        bit = bitmap[i0][j0];\n        if (bit) {\n         contextLabel |= bit << shift;\n        }\n       }\n      }\n     }\n    }\n    var pixel = decoder.readBit(contexts, contextLabel);\n    row[j] = pixel;\n   }\n  }\n  return bitmap;\n }\n function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\n  var codingTemplate = RefinementTemplates[templateIndex].coding;\n  if (templateIndex === 0) {\n   codingTemplate = codingTemplate.concat([at[0]]);\n  }\n  var codingTemplateLength = codingTemplate.length;\n  var codingTemplateX = new Int32Array(codingTemplateLength);\n  var codingTemplateY = new Int32Array(codingTemplateLength);\n  var k;\n  for (k = 0; k < codingTemplateLength; k++) {\n   codingTemplateX[k] = codingTemplate[k].x;\n   codingTemplateY[k] = codingTemplate[k].y;\n  }\n  var referenceTemplate = RefinementTemplates[templateIndex].reference;\n  if (templateIndex === 0) {\n   referenceTemplate = referenceTemplate.concat([at[1]]);\n  }\n  var referenceTemplateLength = referenceTemplate.length;\n  var referenceTemplateX = new Int32Array(referenceTemplateLength);\n  var referenceTemplateY = new Int32Array(referenceTemplateLength);\n  for (k = 0; k < referenceTemplateLength; k++) {\n   referenceTemplateX[k] = referenceTemplate[k].x;\n   referenceTemplateY[k] = referenceTemplate[k].y;\n  }\n  var referenceWidth = referenceBitmap[0].length;\n  var referenceHeight = referenceBitmap.length;\n  var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n  var bitmap = [];\n  var decoder = decodingContext.decoder;\n  var contexts = decodingContext.contextCache.getContexts('GR');\n  var ltp = 0;\n  for (var i = 0; i < height; i++) {\n   if (prediction) {\n    var sltp = decoder.readBit(contexts, pseudoPixelContext);\n    ltp ^= sltp;\n    if (ltp) {\n     error('JBIG2 error: prediction is not supported');\n    }\n   }\n   var row = new Uint8Array(width);\n   bitmap.push(row);\n   for (var j = 0; j < width; j++) {\n    var i0, j0;\n    var contextLabel = 0;\n    for (k = 0; k < codingTemplateLength; k++) {\n     i0 = i + codingTemplateY[k];\n     j0 = j + codingTemplateX[k];\n     if (i0 < 0 || j0 < 0 || j0 >= width) {\n      contextLabel <<= 1;\n     } else {\n      contextLabel = contextLabel << 1 | bitmap[i0][j0];\n     }\n    }\n    for (k = 0; k < referenceTemplateLength; k++) {\n     i0 = i + referenceTemplateY[k] + offsetY;\n     j0 = j + referenceTemplateX[k] + offsetX;\n     if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n      contextLabel <<= 1;\n     } else {\n      contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\n     }\n    }\n    var pixel = decoder.readBit(contexts, contextLabel);\n    row[j] = pixel;\n   }\n  }\n  return bitmap;\n }\n function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext) {\n  if (huffman) {\n   error('JBIG2 error: huffman is not supported');\n  }\n  var newSymbols = [];\n  var currentHeight = 0;\n  var symbolCodeLength = log2(symbols.length + numberOfNewSymbols);\n  var decoder = decodingContext.decoder;\n  var contextCache = decodingContext.contextCache;\n  while (newSymbols.length < numberOfNewSymbols) {\n   var deltaHeight = decodeInteger(contextCache, 'IADH', decoder);\n   currentHeight += deltaHeight;\n   var currentWidth = 0;\n   while (true) {\n    var deltaWidth = decodeInteger(contextCache, 'IADW', decoder);\n    if (deltaWidth === null) {\n     break;\n    }\n    currentWidth += deltaWidth;\n    var bitmap;\n    if (refinement) {\n     var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\n     if (numberOfInstances > 1) {\n      bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext);\n     } else {\n      var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n      var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n      var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n      var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\n      bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\n     }\n    } else {\n     bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\n    }\n    newSymbols.push(bitmap);\n   }\n  }\n  var exportedSymbols = [];\n  var flags = [], currentFlag = false;\n  var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n  while (flags.length < totalSymbolsLength) {\n   var runLength = decodeInteger(contextCache, 'IAEX', decoder);\n   while (runLength--) {\n    flags.push(currentFlag);\n   }\n   currentFlag = !currentFlag;\n  }\n  for (var i = 0, ii = symbols.length; i < ii; i++) {\n   if (flags[i]) {\n    exportedSymbols.push(symbols[i]);\n   }\n  }\n  for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n   if (flags[i]) {\n    exportedSymbols.push(newSymbols[j]);\n   }\n  }\n  return exportedSymbols;\n }\n function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext) {\n  if (huffman) {\n   error('JBIG2 error: huffman is not supported');\n  }\n  var bitmap = [];\n  var i, row;\n  for (i = 0; i < height; i++) {\n   row = new Uint8Array(width);\n   if (defaultPixelValue) {\n    for (var j = 0; j < width; j++) {\n     row[j] = defaultPixelValue;\n    }\n   }\n   bitmap.push(row);\n  }\n  var decoder = decodingContext.decoder;\n  var contextCache = decodingContext.contextCache;\n  var stripT = -decodeInteger(contextCache, 'IADT', decoder);\n  var firstS = 0;\n  i = 0;\n  while (i < numberOfSymbolInstances) {\n   var deltaT = decodeInteger(contextCache, 'IADT', decoder);\n   stripT += deltaT;\n   var deltaFirstS = decodeInteger(contextCache, 'IAFS', decoder);\n   firstS += deltaFirstS;\n   var currentS = firstS;\n   do {\n    var currentT = stripSize === 1 ? 0 : decodeInteger(contextCache, 'IAIT', decoder);\n    var t = stripSize * stripT + currentT;\n    var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n    var applyRefinement = refinement && decodeInteger(contextCache, 'IARI', decoder);\n    var symbolBitmap = inputSymbols[symbolId];\n    var symbolWidth = symbolBitmap[0].length;\n    var symbolHeight = symbolBitmap.length;\n    if (applyRefinement) {\n     var rdw = decodeInteger(contextCache, 'IARDW', decoder);\n     var rdh = decodeInteger(contextCache, 'IARDH', decoder);\n     var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n     var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n     symbolWidth += rdw;\n     symbolHeight += rdh;\n     symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\n    }\n    var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight);\n    var offsetS = currentS - (referenceCorner & 2 ? symbolWidth : 0);\n    var s2, t2, symbolRow;\n    if (transposed) {\n     for (s2 = 0; s2 < symbolHeight; s2++) {\n      row = bitmap[offsetS + s2];\n      if (!row) {\n       continue;\n      }\n      symbolRow = symbolBitmap[s2];\n      var maxWidth = Math.min(width - offsetT, symbolWidth);\n      switch (combinationOperator) {\n      case 0:\n       for (t2 = 0; t2 < maxWidth; t2++) {\n        row[offsetT + t2] |= symbolRow[t2];\n       }\n       break;\n      case 2:\n       for (t2 = 0; t2 < maxWidth; t2++) {\n        row[offsetT + t2] ^= symbolRow[t2];\n       }\n       break;\n      default:\n       error('JBIG2 error: operator ' + combinationOperator + ' is not supported');\n      }\n     }\n     currentS += symbolHeight - 1;\n    } else {\n     for (t2 = 0; t2 < symbolHeight; t2++) {\n      row = bitmap[offsetT + t2];\n      if (!row) {\n       continue;\n      }\n      symbolRow = symbolBitmap[t2];\n      switch (combinationOperator) {\n      case 0:\n       for (s2 = 0; s2 < symbolWidth; s2++) {\n        row[offsetS + s2] |= symbolRow[s2];\n       }\n       break;\n      case 2:\n       for (s2 = 0; s2 < symbolWidth; s2++) {\n        row[offsetS + s2] ^= symbolRow[s2];\n       }\n       break;\n      default:\n       error('JBIG2 error: operator ' + combinationOperator + ' is not supported');\n      }\n     }\n     currentS += symbolWidth - 1;\n    }\n    i++;\n    var deltaS = decodeInteger(contextCache, 'IADS', decoder);\n    if (deltaS === null) {\n     break;\n    }\n    currentS += deltaS + dsOffset;\n   } while (true);\n  }\n  return bitmap;\n }\n function readSegmentHeader(data, start) {\n  var segmentHeader = {};\n  segmentHeader.number = readUint32(data, start);\n  var flags = data[start + 4];\n  var segmentType = flags & 0x3F;\n  if (!SegmentTypes[segmentType]) {\n   error('JBIG2 error: invalid segment type: ' + segmentType);\n  }\n  segmentHeader.type = segmentType;\n  segmentHeader.typeName = SegmentTypes[segmentType];\n  segmentHeader.deferredNonRetain = !!(flags & 0x80);\n  var pageAssociationFieldSize = !!(flags & 0x40);\n  var referredFlags = data[start + 5];\n  var referredToCount = referredFlags >> 5 & 7;\n  var retainBits = [referredFlags & 31];\n  var position = start + 6;\n  if (referredFlags === 7) {\n   referredToCount = readUint32(data, position - 1) & 0x1FFFFFFF;\n   position += 3;\n   var bytes = referredToCount + 7 >> 3;\n   retainBits[0] = data[position++];\n   while (--bytes > 0) {\n    retainBits.push(data[position++]);\n   }\n  } else if (referredFlags === 5 || referredFlags === 6) {\n   error('JBIG2 error: invalid referred-to flags');\n  }\n  segmentHeader.retainBits = retainBits;\n  var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\n  var referredTo = [];\n  var i, ii;\n  for (i = 0; i < referredToCount; i++) {\n   var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? readUint16(data, position) : readUint32(data, position);\n   referredTo.push(number);\n   position += referredToSegmentNumberSize;\n  }\n  segmentHeader.referredTo = referredTo;\n  if (!pageAssociationFieldSize) {\n   segmentHeader.pageAssociation = data[position++];\n  } else {\n   segmentHeader.pageAssociation = readUint32(data, position);\n   position += 4;\n  }\n  segmentHeader.length = readUint32(data, position);\n  position += 4;\n  if (segmentHeader.length === 0xFFFFFFFF) {\n   if (segmentType === 38) {\n    var genericRegionInfo = readRegionSegmentInformation(data, position);\n    var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\n    var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n    var searchPatternLength = 6;\n    var searchPattern = new Uint8Array(searchPatternLength);\n    if (!genericRegionMmr) {\n     searchPattern[0] = 0xFF;\n     searchPattern[1] = 0xAC;\n    }\n    searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\n    searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\n    searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\n    searchPattern[5] = genericRegionInfo.height & 0xFF;\n    for (i = position, ii = data.length; i < ii; i++) {\n     var j = 0;\n     while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n      j++;\n     }\n     if (j === searchPatternLength) {\n      segmentHeader.length = i + searchPatternLength;\n      break;\n     }\n    }\n    if (segmentHeader.length === 0xFFFFFFFF) {\n     error('JBIG2 error: segment end was not found');\n    }\n   } else {\n    error('JBIG2 error: invalid unknown segment length');\n   }\n  }\n  segmentHeader.headerEnd = position;\n  return segmentHeader;\n }\n function readSegments(header, data, start, end) {\n  var segments = [];\n  var position = start;\n  while (position < end) {\n   var segmentHeader = readSegmentHeader(data, position);\n   position = segmentHeader.headerEnd;\n   var segment = {\n    header: segmentHeader,\n    data: data\n   };\n   if (!header.randomAccess) {\n    segment.start = position;\n    position += segmentHeader.length;\n    segment.end = position;\n   }\n   segments.push(segment);\n   if (segmentHeader.type === 51) {\n    break;\n   }\n  }\n  if (header.randomAccess) {\n   for (var i = 0, ii = segments.length; i < ii; i++) {\n    segments[i].start = position;\n    position += segments[i].header.length;\n    segments[i].end = position;\n   }\n  }\n  return segments;\n }\n function readRegionSegmentInformation(data, start) {\n  return {\n   width: readUint32(data, start),\n   height: readUint32(data, start + 4),\n   x: readUint32(data, start + 8),\n   y: readUint32(data, start + 12),\n   combinationOperator: data[start + 16] & 7\n  };\n }\n var RegionSegmentInformationFieldLength = 17;\n function processSegment(segment, visitor) {\n  var header = segment.header;\n  var data = segment.data, position = segment.start, end = segment.end;\n  var args, at, i, atLength;\n  switch (header.type) {\n  case 0:\n   var dictionary = {};\n   var dictionaryFlags = readUint16(data, position);\n   dictionary.huffman = !!(dictionaryFlags & 1);\n   dictionary.refinement = !!(dictionaryFlags & 2);\n   dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\n   dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\n   dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\n   dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\n   dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n   dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n   dictionary.template = dictionaryFlags >> 10 & 3;\n   dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\n   position += 2;\n   if (!dictionary.huffman) {\n    atLength = dictionary.template === 0 ? 4 : 1;\n    at = [];\n    for (i = 0; i < atLength; i++) {\n     at.push({\n      x: readInt8(data, position),\n      y: readInt8(data, position + 1)\n     });\n     position += 2;\n    }\n    dictionary.at = at;\n   }\n   if (dictionary.refinement && !dictionary.refinementTemplate) {\n    at = [];\n    for (i = 0; i < 2; i++) {\n     at.push({\n      x: readInt8(data, position),\n      y: readInt8(data, position + 1)\n     });\n     position += 2;\n    }\n    dictionary.refinementAt = at;\n   }\n   dictionary.numberOfExportedSymbols = readUint32(data, position);\n   position += 4;\n   dictionary.numberOfNewSymbols = readUint32(data, position);\n   position += 4;\n   args = [\n    dictionary,\n    header.number,\n    header.referredTo,\n    data,\n    position,\n    end\n   ];\n   break;\n  case 6:\n  case 7:\n   var textRegion = {};\n   textRegion.info = readRegionSegmentInformation(data, position);\n   position += RegionSegmentInformationFieldLength;\n   var textRegionSegmentFlags = readUint16(data, position);\n   position += 2;\n   textRegion.huffman = !!(textRegionSegmentFlags & 1);\n   textRegion.refinement = !!(textRegionSegmentFlags & 2);\n   textRegion.stripSize = 1 << (textRegionSegmentFlags >> 2 & 3);\n   textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\n   textRegion.transposed = !!(textRegionSegmentFlags & 64);\n   textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\n   textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\n   textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\n   textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\n   if (textRegion.huffman) {\n    var textRegionHuffmanFlags = readUint16(data, position);\n    position += 2;\n    textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n    textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\n    textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\n    textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\n    textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\n    textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\n    textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\n    textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 14);\n   }\n   if (textRegion.refinement && !textRegion.refinementTemplate) {\n    at = [];\n    for (i = 0; i < 2; i++) {\n     at.push({\n      x: readInt8(data, position),\n      y: readInt8(data, position + 1)\n     });\n     position += 2;\n    }\n    textRegion.refinementAt = at;\n   }\n   textRegion.numberOfSymbolInstances = readUint32(data, position);\n   position += 4;\n   if (textRegion.huffman) {\n    error('JBIG2 error: huffman is not supported');\n   }\n   args = [\n    textRegion,\n    header.referredTo,\n    data,\n    position,\n    end\n   ];\n   break;\n  case 38:\n  case 39:\n   var genericRegion = {};\n   genericRegion.info = readRegionSegmentInformation(data, position);\n   position += RegionSegmentInformationFieldLength;\n   var genericRegionSegmentFlags = data[position++];\n   genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n   genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\n   genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n   if (!genericRegion.mmr) {\n    atLength = genericRegion.template === 0 ? 4 : 1;\n    at = [];\n    for (i = 0; i < atLength; i++) {\n     at.push({\n      x: readInt8(data, position),\n      y: readInt8(data, position + 1)\n     });\n     position += 2;\n    }\n    genericRegion.at = at;\n   }\n   args = [\n    genericRegion,\n    data,\n    position,\n    end\n   ];\n   break;\n  case 48:\n   var pageInfo = {\n    width: readUint32(data, position),\n    height: readUint32(data, position + 4),\n    resolutionX: readUint32(data, position + 8),\n    resolutionY: readUint32(data, position + 12)\n   };\n   if (pageInfo.height === 0xFFFFFFFF) {\n    delete pageInfo.height;\n   }\n   var pageSegmentFlags = data[position + 16];\n   readUint16(data, position + 17);\n   pageInfo.lossless = !!(pageSegmentFlags & 1);\n   pageInfo.refinement = !!(pageSegmentFlags & 2);\n   pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\n   pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\n   pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n   pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n   args = [pageInfo];\n   break;\n  case 49:\n   break;\n  case 50:\n   break;\n  case 51:\n   break;\n  case 62:\n   break;\n  default:\n   error('JBIG2 error: segment type ' + header.typeName + '(' + header.type + ') is not implemented');\n  }\n  var callbackName = 'on' + header.typeName;\n  if (callbackName in visitor) {\n   visitor[callbackName].apply(visitor, args);\n  }\n }\n function processSegments(segments, visitor) {\n  for (var i = 0, ii = segments.length; i < ii; i++) {\n   processSegment(segments[i], visitor);\n  }\n }\n function parseJbig2(data, start, end) {\n  var position = start;\n  if (data[position] !== 0x97 || data[position + 1] !== 0x4A || data[position + 2] !== 0x42 || data[position + 3] !== 0x32 || data[position + 4] !== 0x0D || data[position + 5] !== 0x0A || data[position + 6] !== 0x1A || data[position + 7] !== 0x0A) {\n   error('JBIG2 error: invalid header');\n  }\n  var header = {};\n  position += 8;\n  var flags = data[position++];\n  header.randomAccess = !(flags & 1);\n  if (!(flags & 2)) {\n   header.numberOfPages = readUint32(data, position);\n   position += 4;\n  }\n  readSegments(header, data, position, end);\n  error('Not implemented');\n }\n function parseJbig2Chunks(chunks) {\n  var visitor = new SimpleSegmentVisitor();\n  for (var i = 0, ii = chunks.length; i < ii; i++) {\n   var chunk = chunks[i];\n   var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n   processSegments(segments, visitor);\n  }\n  return visitor.buffer;\n }\n function SimpleSegmentVisitor() {\n }\n SimpleSegmentVisitor.prototype = {\n  onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n   this.currentPageInfo = info;\n   var rowSize = info.width + 7 >> 3;\n   var buffer = new Uint8Array(rowSize * info.height);\n   if (info.defaultPixelValue) {\n    for (var i = 0, ii = buffer.length; i < ii; i++) {\n     buffer[i] = 0xFF;\n    }\n   }\n   this.buffer = buffer;\n  },\n  drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n   var pageInfo = this.currentPageInfo;\n   var width = regionInfo.width, height = regionInfo.height;\n   var rowSize = pageInfo.width + 7 >> 3;\n   var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\n   var buffer = this.buffer;\n   var mask0 = 128 >> (regionInfo.x & 7);\n   var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n   var i, j, mask, offset;\n   switch (combinationOperator) {\n   case 0:\n    for (i = 0; i < height; i++) {\n     mask = mask0;\n     offset = offset0;\n     for (j = 0; j < width; j++) {\n      if (bitmap[i][j]) {\n       buffer[offset] |= mask;\n      }\n      mask >>= 1;\n      if (!mask) {\n       mask = 128;\n       offset++;\n      }\n     }\n     offset0 += rowSize;\n    }\n    break;\n   case 2:\n    for (i = 0; i < height; i++) {\n     mask = mask0;\n     offset = offset0;\n     for (j = 0; j < width; j++) {\n      if (bitmap[i][j]) {\n       buffer[offset] ^= mask;\n      }\n      mask >>= 1;\n      if (!mask) {\n       mask = 128;\n       offset++;\n      }\n     }\n     offset0 += rowSize;\n    }\n    break;\n   default:\n    error('JBIG2 error: operator ' + combinationOperator + ' is not supported');\n   }\n  },\n  onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\n   var regionInfo = region.info;\n   var decodingContext = new DecodingContext(data, start, end);\n   var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\n   this.drawBitmap(regionInfo, bitmap);\n  },\n  onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n   this.onImmediateGenericRegion.apply(this, arguments);\n  },\n  onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\n   var huffmanTables;\n   if (dictionary.huffman) {\n    error('JBIG2 error: huffman is not supported');\n   }\n   var symbols = this.symbols;\n   if (!symbols) {\n    this.symbols = symbols = {};\n   }\n   var inputSymbols = [];\n   for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n    inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);\n   }\n   var decodingContext = new DecodingContext(data, start, end);\n   symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext);\n  },\n  onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\n   var regionInfo = region.info;\n   var huffmanTables;\n   var symbols = this.symbols;\n   var inputSymbols = [];\n   for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n    inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);\n   }\n   var symbolCodeLength = log2(inputSymbols.length);\n   var decodingContext = new DecodingContext(data, start, end);\n   var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext);\n   this.drawBitmap(regionInfo, bitmap);\n  },\n  onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n   this.onImmediateTextRegion.apply(this, arguments);\n  }\n };\n function Jbig2Image() {\n }\n Jbig2Image.prototype = {\n  parseChunks: function Jbig2Image_parseChunks(chunks) {\n   return parseJbig2Chunks(chunks);\n  }\n };\n return Jbig2Image;\n}();\nexports.Jbig2Image = Jbig2Image;\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar error = sharedUtil.error;\nvar JpegImage = function JpegImageClosure() {\n var dctZigZag = new Uint8Array([\n  0,\n  1,\n  8,\n  16,\n  9,\n  2,\n  3,\n  10,\n  17,\n  24,\n  32,\n  25,\n  18,\n  11,\n  4,\n  5,\n  12,\n  19,\n  26,\n  33,\n  40,\n  48,\n  41,\n  34,\n  27,\n  20,\n  13,\n  6,\n  7,\n  14,\n  21,\n  28,\n  35,\n  42,\n  49,\n  56,\n  57,\n  50,\n  43,\n  36,\n  29,\n  22,\n  15,\n  23,\n  30,\n  37,\n  44,\n  51,\n  58,\n  59,\n  52,\n  45,\n  38,\n  31,\n  39,\n  46,\n  53,\n  60,\n  61,\n  54,\n  47,\n  55,\n  62,\n  63\n ]);\n var dctCos1 = 4017;\n var dctSin1 = 799;\n var dctCos3 = 3406;\n var dctSin3 = 2276;\n var dctCos6 = 1567;\n var dctSin6 = 3784;\n var dctSqrt2 = 5793;\n var dctSqrt1d2 = 2896;\n function JpegImage() {\n  this.decodeTransform = null;\n  this.colorTransform = -1;\n }\n function buildHuffmanTable(codeLengths, values) {\n  var k = 0, code = [], i, j, length = 16;\n  while (length > 0 && !codeLengths[length - 1]) {\n   length--;\n  }\n  code.push({\n   children: [],\n   index: 0\n  });\n  var p = code[0], q;\n  for (i = 0; i < length; i++) {\n   for (j = 0; j < codeLengths[i]; j++) {\n    p = code.pop();\n    p.children[p.index] = values[k];\n    while (p.index > 0) {\n     p = code.pop();\n    }\n    p.index++;\n    code.push(p);\n    while (code.length <= i) {\n     code.push(q = {\n      children: [],\n      index: 0\n     });\n     p.children[p.index] = q.children;\n     p = q;\n    }\n    k++;\n   }\n   if (i + 1 < length) {\n    code.push(q = {\n     children: [],\n     index: 0\n    });\n    p.children[p.index] = q.children;\n    p = q;\n   }\n  }\n  return code[0].children;\n }\n function getBlockBufferOffset(component, row, col) {\n  return 64 * ((component.blocksPerLine + 1) * row + col);\n }\n function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\n  var mcusPerLine = frame.mcusPerLine;\n  var progressive = frame.progressive;\n  var startOffset = offset, bitsData = 0, bitsCount = 0;\n  function readBit() {\n   if (bitsCount > 0) {\n    bitsCount--;\n    return bitsData >> bitsCount & 1;\n   }\n   bitsData = data[offset++];\n   if (bitsData === 0xFF) {\n    var nextByte = data[offset++];\n    if (nextByte) {\n     error('JPEG error: unexpected marker ' + (bitsData << 8 | nextByte).toString(16));\n    }\n   }\n   bitsCount = 7;\n   return bitsData >>> 7;\n  }\n  function decodeHuffman(tree) {\n   var node = tree;\n   while (true) {\n    node = node[readBit()];\n    if (typeof node === 'number') {\n     return node;\n    }\n    if (typeof node !== 'object') {\n     error('JPEG error: invalid huffman sequence');\n    }\n   }\n  }\n  function receive(length) {\n   var n = 0;\n   while (length > 0) {\n    n = n << 1 | readBit();\n    length--;\n   }\n   return n;\n  }\n  function receiveAndExtend(length) {\n   if (length === 1) {\n    return readBit() === 1 ? 1 : -1;\n   }\n   var n = receive(length);\n   if (n >= 1 << length - 1) {\n    return n;\n   }\n   return n + (-1 << length) + 1;\n  }\n  function decodeBaseline(component, offset) {\n   var t = decodeHuffman(component.huffmanTableDC);\n   var diff = t === 0 ? 0 : receiveAndExtend(t);\n   component.blockData[offset] = component.pred += diff;\n   var k = 1;\n   while (k < 64) {\n    var rs = decodeHuffman(component.huffmanTableAC);\n    var s = rs & 15, r = rs >> 4;\n    if (s === 0) {\n     if (r < 15) {\n      break;\n     }\n     k += 16;\n     continue;\n    }\n    k += r;\n    var z = dctZigZag[k];\n    component.blockData[offset + z] = receiveAndExtend(s);\n    k++;\n   }\n  }\n  function decodeDCFirst(component, offset) {\n   var t = decodeHuffman(component.huffmanTableDC);\n   var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n   component.blockData[offset] = component.pred += diff;\n  }\n  function decodeDCSuccessive(component, offset) {\n   component.blockData[offset] |= readBit() << successive;\n  }\n  var eobrun = 0;\n  function decodeACFirst(component, offset) {\n   if (eobrun > 0) {\n    eobrun--;\n    return;\n   }\n   var k = spectralStart, e = spectralEnd;\n   while (k <= e) {\n    var rs = decodeHuffman(component.huffmanTableAC);\n    var s = rs & 15, r = rs >> 4;\n    if (s === 0) {\n     if (r < 15) {\n      eobrun = receive(r) + (1 << r) - 1;\n      break;\n     }\n     k += 16;\n     continue;\n    }\n    k += r;\n    var z = dctZigZag[k];\n    component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\n    k++;\n   }\n  }\n  var successiveACState = 0, successiveACNextValue;\n  function decodeACSuccessive(component, offset) {\n   var k = spectralStart;\n   var e = spectralEnd;\n   var r = 0;\n   var s;\n   var rs;\n   while (k <= e) {\n    var z = dctZigZag[k];\n    switch (successiveACState) {\n    case 0:\n     rs = decodeHuffman(component.huffmanTableAC);\n     s = rs & 15;\n     r = rs >> 4;\n     if (s === 0) {\n      if (r < 15) {\n       eobrun = receive(r) + (1 << r);\n       successiveACState = 4;\n      } else {\n       r = 16;\n       successiveACState = 1;\n      }\n     } else {\n      if (s !== 1) {\n       error('JPEG error: invalid ACn encoding');\n      }\n      successiveACNextValue = receiveAndExtend(s);\n      successiveACState = r ? 2 : 3;\n     }\n     continue;\n    case 1:\n    case 2:\n     if (component.blockData[offset + z]) {\n      component.blockData[offset + z] += readBit() << successive;\n     } else {\n      r--;\n      if (r === 0) {\n       successiveACState = successiveACState === 2 ? 3 : 0;\n      }\n     }\n     break;\n    case 3:\n     if (component.blockData[offset + z]) {\n      component.blockData[offset + z] += readBit() << successive;\n     } else {\n      component.blockData[offset + z] = successiveACNextValue << successive;\n      successiveACState = 0;\n     }\n     break;\n    case 4:\n     if (component.blockData[offset + z]) {\n      component.blockData[offset + z] += readBit() << successive;\n     }\n     break;\n    }\n    k++;\n   }\n   if (successiveACState === 4) {\n    eobrun--;\n    if (eobrun === 0) {\n     successiveACState = 0;\n    }\n   }\n  }\n  function decodeMcu(component, decode, mcu, row, col) {\n   var mcuRow = mcu / mcusPerLine | 0;\n   var mcuCol = mcu % mcusPerLine;\n   var blockRow = mcuRow * component.v + row;\n   var blockCol = mcuCol * component.h + col;\n   var offset = getBlockBufferOffset(component, blockRow, blockCol);\n   decode(component, offset);\n  }\n  function decodeBlock(component, decode, mcu) {\n   var blockRow = mcu / component.blocksPerLine | 0;\n   var blockCol = mcu % component.blocksPerLine;\n   var offset = getBlockBufferOffset(component, blockRow, blockCol);\n   decode(component, offset);\n  }\n  var componentsLength = components.length;\n  var component, i, j, k, n;\n  var decodeFn;\n  if (progressive) {\n   if (spectralStart === 0) {\n    decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n   } else {\n    decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n   }\n  } else {\n   decodeFn = decodeBaseline;\n  }\n  var mcu = 0, marker;\n  var mcuExpected;\n  if (componentsLength === 1) {\n   mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n  } else {\n   mcuExpected = mcusPerLine * frame.mcusPerColumn;\n  }\n  if (!resetInterval) {\n   resetInterval = mcuExpected;\n  }\n  var h, v;\n  while (mcu < mcuExpected) {\n   for (i = 0; i < componentsLength; i++) {\n    components[i].pred = 0;\n   }\n   eobrun = 0;\n   if (componentsLength === 1) {\n    component = components[0];\n    for (n = 0; n < resetInterval; n++) {\n     decodeBlock(component, decodeFn, mcu);\n     mcu++;\n    }\n   } else {\n    for (n = 0; n < resetInterval; n++) {\n     for (i = 0; i < componentsLength; i++) {\n      component = components[i];\n      h = component.h;\n      v = component.v;\n      for (j = 0; j < v; j++) {\n       for (k = 0; k < h; k++) {\n        decodeMcu(component, decodeFn, mcu, j, k);\n       }\n      }\n     }\n     mcu++;\n    }\n   }\n   bitsCount = 0;\n   marker = data[offset] << 8 | data[offset + 1];\n   while (data[offset] === 0x00 && offset < data.length - 1) {\n    offset++;\n    marker = data[offset] << 8 | data[offset + 1];\n   }\n   if (marker <= 0xFF00) {\n    error('JPEG error: marker was not found');\n   }\n   if (marker >= 0xFFD0 && marker <= 0xFFD7) {\n    offset += 2;\n   } else {\n    break;\n   }\n  }\n  return offset - startOffset;\n }\n function quantizeAndInverse(component, blockBufferOffset, p) {\n  var qt = component.quantizationTable, blockData = component.blockData;\n  var v0, v1, v2, v3, v4, v5, v6, v7;\n  var p0, p1, p2, p3, p4, p5, p6, p7;\n  var t;\n  if (!qt) {\n   error('JPEG error: missing required Quantization Table.');\n  }\n  for (var row = 0; row < 64; row += 8) {\n   p0 = blockData[blockBufferOffset + row];\n   p1 = blockData[blockBufferOffset + row + 1];\n   p2 = blockData[blockBufferOffset + row + 2];\n   p3 = blockData[blockBufferOffset + row + 3];\n   p4 = blockData[blockBufferOffset + row + 4];\n   p5 = blockData[blockBufferOffset + row + 5];\n   p6 = blockData[blockBufferOffset + row + 6];\n   p7 = blockData[blockBufferOffset + row + 7];\n   p0 *= qt[row];\n   if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n    t = dctSqrt2 * p0 + 512 >> 10;\n    p[row] = t;\n    p[row + 1] = t;\n    p[row + 2] = t;\n    p[row + 3] = t;\n    p[row + 4] = t;\n    p[row + 5] = t;\n    p[row + 6] = t;\n    p[row + 7] = t;\n    continue;\n   }\n   p1 *= qt[row + 1];\n   p2 *= qt[row + 2];\n   p3 *= qt[row + 3];\n   p4 *= qt[row + 4];\n   p5 *= qt[row + 5];\n   p6 *= qt[row + 6];\n   p7 *= qt[row + 7];\n   v0 = dctSqrt2 * p0 + 128 >> 8;\n   v1 = dctSqrt2 * p4 + 128 >> 8;\n   v2 = p2;\n   v3 = p6;\n   v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\n   v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\n   v5 = p3 << 4;\n   v6 = p5 << 4;\n   v0 = v0 + v1 + 1 >> 1;\n   v1 = v0 - v1;\n   t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\n   v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\n   v3 = t;\n   v4 = v4 + v6 + 1 >> 1;\n   v6 = v4 - v6;\n   v7 = v7 + v5 + 1 >> 1;\n   v5 = v7 - v5;\n   v0 = v0 + v3 + 1 >> 1;\n   v3 = v0 - v3;\n   v1 = v1 + v2 + 1 >> 1;\n   v2 = v1 - v2;\n   t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n   v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n   v7 = t;\n   t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n   v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n   v6 = t;\n   p[row] = v0 + v7;\n   p[row + 7] = v0 - v7;\n   p[row + 1] = v1 + v6;\n   p[row + 6] = v1 - v6;\n   p[row + 2] = v2 + v5;\n   p[row + 5] = v2 - v5;\n   p[row + 3] = v3 + v4;\n   p[row + 4] = v3 - v4;\n  }\n  for (var col = 0; col < 8; ++col) {\n   p0 = p[col];\n   p1 = p[col + 8];\n   p2 = p[col + 16];\n   p3 = p[col + 24];\n   p4 = p[col + 32];\n   p5 = p[col + 40];\n   p6 = p[col + 48];\n   p7 = p[col + 56];\n   if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n    t = dctSqrt2 * p0 + 8192 >> 14;\n    t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\n    blockData[blockBufferOffset + col] = t;\n    blockData[blockBufferOffset + col + 8] = t;\n    blockData[blockBufferOffset + col + 16] = t;\n    blockData[blockBufferOffset + col + 24] = t;\n    blockData[blockBufferOffset + col + 32] = t;\n    blockData[blockBufferOffset + col + 40] = t;\n    blockData[blockBufferOffset + col + 48] = t;\n    blockData[blockBufferOffset + col + 56] = t;\n    continue;\n   }\n   v0 = dctSqrt2 * p0 + 2048 >> 12;\n   v1 = dctSqrt2 * p4 + 2048 >> 12;\n   v2 = p2;\n   v3 = p6;\n   v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\n   v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\n   v5 = p3;\n   v6 = p5;\n   v0 = (v0 + v1 + 1 >> 1) + 4112;\n   v1 = v0 - v1;\n   t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\n   v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\n   v3 = t;\n   v4 = v4 + v6 + 1 >> 1;\n   v6 = v4 - v6;\n   v7 = v7 + v5 + 1 >> 1;\n   v5 = v7 - v5;\n   v0 = v0 + v3 + 1 >> 1;\n   v3 = v0 - v3;\n   v1 = v1 + v2 + 1 >> 1;\n   v2 = v1 - v2;\n   t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n   v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n   v7 = t;\n   t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n   v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n   v6 = t;\n   p0 = v0 + v7;\n   p7 = v0 - v7;\n   p1 = v1 + v6;\n   p6 = v1 - v6;\n   p2 = v2 + v5;\n   p5 = v2 - v5;\n   p3 = v3 + v4;\n   p4 = v3 - v4;\n   p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\n   p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\n   p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\n   p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\n   p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\n   p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\n   p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\n   p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\n   blockData[blockBufferOffset + col] = p0;\n   blockData[blockBufferOffset + col + 8] = p1;\n   blockData[blockBufferOffset + col + 16] = p2;\n   blockData[blockBufferOffset + col + 24] = p3;\n   blockData[blockBufferOffset + col + 32] = p4;\n   blockData[blockBufferOffset + col + 40] = p5;\n   blockData[blockBufferOffset + col + 48] = p6;\n   blockData[blockBufferOffset + col + 56] = p7;\n  }\n }\n function buildComponentData(frame, component) {\n  var blocksPerLine = component.blocksPerLine;\n  var blocksPerColumn = component.blocksPerColumn;\n  var computationBuffer = new Int16Array(64);\n  for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n   for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n    var offset = getBlockBufferOffset(component, blockRow, blockCol);\n    quantizeAndInverse(component, offset, computationBuffer);\n   }\n  }\n  return component.blockData;\n }\n function clamp0to255(a) {\n  return a <= 0 ? 0 : a >= 255 ? 255 : a;\n }\n JpegImage.prototype = {\n  parse: function parse(data) {\n   function readUint16() {\n    var value = data[offset] << 8 | data[offset + 1];\n    offset += 2;\n    return value;\n   }\n   function readDataBlock() {\n    var length = readUint16();\n    var array = data.subarray(offset, offset + length - 2);\n    offset += array.length;\n    return array;\n   }\n   function prepareComponents(frame) {\n    var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n    var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n    for (var i = 0; i < frame.components.length; i++) {\n     component = frame.components[i];\n     var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\n     var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\n     var blocksPerLineForMcu = mcusPerLine * component.h;\n     var blocksPerColumnForMcu = mcusPerColumn * component.v;\n     var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n     component.blockData = new Int16Array(blocksBufferSize);\n     component.blocksPerLine = blocksPerLine;\n     component.blocksPerColumn = blocksPerColumn;\n    }\n    frame.mcusPerLine = mcusPerLine;\n    frame.mcusPerColumn = mcusPerColumn;\n   }\n   var offset = 0;\n   var jfif = null;\n   var adobe = null;\n   var frame, resetInterval;\n   var quantizationTables = [];\n   var huffmanTablesAC = [], huffmanTablesDC = [];\n   var fileMarker = readUint16();\n   if (fileMarker !== 0xFFD8) {\n    error('JPEG error: SOI not found');\n   }\n   fileMarker = readUint16();\n   while (fileMarker !== 0xFFD9) {\n    var i, j, l;\n    switch (fileMarker) {\n    case 0xFFE0:\n    case 0xFFE1:\n    case 0xFFE2:\n    case 0xFFE3:\n    case 0xFFE4:\n    case 0xFFE5:\n    case 0xFFE6:\n    case 0xFFE7:\n    case 0xFFE8:\n    case 0xFFE9:\n    case 0xFFEA:\n    case 0xFFEB:\n    case 0xFFEC:\n    case 0xFFED:\n    case 0xFFEE:\n    case 0xFFEF:\n    case 0xFFFE:\n     var appData = readDataBlock();\n     if (fileMarker === 0xFFE0) {\n      if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\n       jfif = {\n        version: {\n         major: appData[5],\n         minor: appData[6]\n        },\n        densityUnits: appData[7],\n        xDensity: appData[8] << 8 | appData[9],\n        yDensity: appData[10] << 8 | appData[11],\n        thumbWidth: appData[12],\n        thumbHeight: appData[13],\n        thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n       };\n      }\n     }\n     if (fileMarker === 0xFFEE) {\n      if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\n       adobe = {\n        version: appData[5] << 8 | appData[6],\n        flags0: appData[7] << 8 | appData[8],\n        flags1: appData[9] << 8 | appData[10],\n        transformCode: appData[11]\n       };\n      }\n     }\n     break;\n    case 0xFFDB:\n     var quantizationTablesLength = readUint16();\n     var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n     var z;\n     while (offset < quantizationTablesEnd) {\n      var quantizationTableSpec = data[offset++];\n      var tableData = new Uint16Array(64);\n      if (quantizationTableSpec >> 4 === 0) {\n       for (j = 0; j < 64; j++) {\n        z = dctZigZag[j];\n        tableData[z] = data[offset++];\n       }\n      } else if (quantizationTableSpec >> 4 === 1) {\n       for (j = 0; j < 64; j++) {\n        z = dctZigZag[j];\n        tableData[z] = readUint16();\n       }\n      } else {\n       error('JPEG error: DQT - invalid table spec');\n      }\n      quantizationTables[quantizationTableSpec & 15] = tableData;\n     }\n     break;\n    case 0xFFC0:\n    case 0xFFC1:\n    case 0xFFC2:\n     if (frame) {\n      error('JPEG error: Only single frame JPEGs supported');\n     }\n     readUint16();\n     frame = {};\n     frame.extended = fileMarker === 0xFFC1;\n     frame.progressive = fileMarker === 0xFFC2;\n     frame.precision = data[offset++];\n     frame.scanLines = readUint16();\n     frame.samplesPerLine = readUint16();\n     frame.components = [];\n     frame.componentIds = {};\n     var componentsCount = data[offset++], componentId;\n     var maxH = 0, maxV = 0;\n     for (i = 0; i < componentsCount; i++) {\n      componentId = data[offset];\n      var h = data[offset + 1] >> 4;\n      var v = data[offset + 1] & 15;\n      if (maxH < h) {\n       maxH = h;\n      }\n      if (maxV < v) {\n       maxV = v;\n      }\n      var qId = data[offset + 2];\n      l = frame.components.push({\n       h: h,\n       v: v,\n       quantizationId: qId,\n       quantizationTable: null\n      });\n      frame.componentIds[componentId] = l - 1;\n      offset += 3;\n     }\n     frame.maxH = maxH;\n     frame.maxV = maxV;\n     prepareComponents(frame);\n     break;\n    case 0xFFC4:\n     var huffmanLength = readUint16();\n     for (i = 2; i < huffmanLength;) {\n      var huffmanTableSpec = data[offset++];\n      var codeLengths = new Uint8Array(16);\n      var codeLengthSum = 0;\n      for (j = 0; j < 16; j++, offset++) {\n       codeLengthSum += codeLengths[j] = data[offset];\n      }\n      var huffmanValues = new Uint8Array(codeLengthSum);\n      for (j = 0; j < codeLengthSum; j++, offset++) {\n       huffmanValues[j] = data[offset];\n      }\n      i += 17 + codeLengthSum;\n      (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n     }\n     break;\n    case 0xFFDD:\n     readUint16();\n     resetInterval = readUint16();\n     break;\n    case 0xFFDA:\n     readUint16();\n     var selectorsCount = data[offset++];\n     var components = [], component;\n     for (i = 0; i < selectorsCount; i++) {\n      var componentIndex = frame.componentIds[data[offset++]];\n      component = frame.components[componentIndex];\n      var tableSpec = data[offset++];\n      component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n      component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n      components.push(component);\n     }\n     var spectralStart = data[offset++];\n     var spectralEnd = data[offset++];\n     var successiveApproximation = data[offset++];\n     var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15);\n     offset += processed;\n     break;\n    case 0xFFFF:\n     if (data[offset] !== 0xFF) {\n      offset--;\n     }\n     break;\n    default:\n     if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n      offset -= 3;\n      break;\n     }\n     error('JPEG error: unknown marker ' + fileMarker.toString(16));\n    }\n    fileMarker = readUint16();\n   }\n   this.width = frame.samplesPerLine;\n   this.height = frame.scanLines;\n   this.jfif = jfif;\n   this.adobe = adobe;\n   this.components = [];\n   for (i = 0; i < frame.components.length; i++) {\n    component = frame.components[i];\n    var quantizationTable = quantizationTables[component.quantizationId];\n    if (quantizationTable) {\n     component.quantizationTable = quantizationTable;\n    }\n    this.components.push({\n     output: buildComponentData(frame, component),\n     scaleX: component.h / frame.maxH,\n     scaleY: component.v / frame.maxV,\n     blocksPerLine: component.blocksPerLine,\n     blocksPerColumn: component.blocksPerColumn\n    });\n   }\n   this.numComponents = this.components.length;\n  },\n  _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n   var scaleX = this.width / width, scaleY = this.height / height;\n   var component, componentScaleX, componentScaleY, blocksPerScanline;\n   var x, y, i, j, k;\n   var index;\n   var offset = 0;\n   var output;\n   var numComponents = this.components.length;\n   var dataLength = width * height * numComponents;\n   var data = new Uint8Array(dataLength);\n   var xScaleBlockOffset = new Uint32Array(width);\n   var mask3LSB = 0xfffffff8;\n   for (i = 0; i < numComponents; i++) {\n    component = this.components[i];\n    componentScaleX = component.scaleX * scaleX;\n    componentScaleY = component.scaleY * scaleY;\n    offset = i;\n    output = component.output;\n    blocksPerScanline = component.blocksPerLine + 1 << 3;\n    for (x = 0; x < width; x++) {\n     j = 0 | x * componentScaleX;\n     xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\n    }\n    for (y = 0; y < height; y++) {\n     j = 0 | y * componentScaleY;\n     index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\n     for (x = 0; x < width; x++) {\n      data[offset] = output[index + xScaleBlockOffset[x]];\n      offset += numComponents;\n     }\n    }\n   }\n   var transform = this.decodeTransform;\n   if (transform) {\n    for (i = 0; i < dataLength;) {\n     for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n      data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\n     }\n    }\n   }\n   return data;\n  },\n  _isColorConversionNeeded: function isColorConversionNeeded() {\n   if (this.adobe && this.adobe.transformCode) {\n    return true;\n   } else if (this.numComponents === 3) {\n    if (!this.adobe && this.colorTransform === 0) {\n     return false;\n    }\n    return true;\n   }\n   if (!this.adobe && this.colorTransform === 1) {\n    return true;\n   }\n   return false;\n  },\n  _convertYccToRgb: function convertYccToRgb(data) {\n   var Y, Cb, Cr;\n   for (var i = 0, length = data.length; i < length; i += 3) {\n    Y = data[i];\n    Cb = data[i + 1];\n    Cr = data[i + 2];\n    data[i] = clamp0to255(Y - 179.456 + 1.402 * Cr);\n    data[i + 1] = clamp0to255(Y + 135.459 - 0.344 * Cb - 0.714 * Cr);\n    data[i + 2] = clamp0to255(Y - 226.816 + 1.772 * Cb);\n   }\n   return data;\n  },\n  _convertYcckToRgb: function convertYcckToRgb(data) {\n   var Y, Cb, Cr, k;\n   var offset = 0;\n   for (var i = 0, length = data.length; i < length; i += 4) {\n    Y = data[i];\n    Cb = data[i + 1];\n    Cr = data[i + 2];\n    k = data[i + 3];\n    var r = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\n    var g = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\n    var b = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\n    data[offset++] = clamp0to255(r);\n    data[offset++] = clamp0to255(g);\n    data[offset++] = clamp0to255(b);\n   }\n   return data;\n  },\n  _convertYcckToCmyk: function convertYcckToCmyk(data) {\n   var Y, Cb, Cr;\n   for (var i = 0, length = data.length; i < length; i += 4) {\n    Y = data[i];\n    Cb = data[i + 1];\n    Cr = data[i + 2];\n    data[i] = clamp0to255(434.456 - Y - 1.402 * Cr);\n    data[i + 1] = clamp0to255(119.541 - Y + 0.344 * Cb + 0.714 * Cr);\n    data[i + 2] = clamp0to255(481.816 - Y - 1.772 * Cb);\n   }\n   return data;\n  },\n  _convertCmykToRgb: function convertCmykToRgb(data) {\n   var c, m, y, k;\n   var offset = 0;\n   var min = -255 * 255 * 255;\n   var scale = 1 / 255 / 255;\n   for (var i = 0, length = data.length; i < length; i += 4) {\n    c = data[i];\n    m = data[i + 1];\n    y = data[i + 2];\n    k = data[i + 3];\n    var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 72734.4411664936) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 1401.7366389350734) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 4465.541406466231) - k * (21.86122147463605 * k + 48317.86113160301);\n    var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 20220.756542821975) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 48691.05921601825) + y * (4.444339102852739 * y + 9.8632861493405 * k - 6341.191035517494) - k * (20.737325471181034 * k + 47890.15695978492);\n    var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 3616.812083916688) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 28620.90484698408) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 49363.43385999684) - k * (22.33816807309886 * k + 45932.16563550634);\n    data[offset++] = r >= 0 ? 255 : r <= min ? 0 : 255 + r * scale | 0;\n    data[offset++] = g >= 0 ? 255 : g <= min ? 0 : 255 + g * scale | 0;\n    data[offset++] = b >= 0 ? 255 : b <= min ? 0 : 255 + b * scale | 0;\n   }\n   return data;\n  },\n  getData: function getData(width, height, forceRGBoutput) {\n   if (this.numComponents > 4) {\n    error('JPEG error: Unsupported color mode');\n   }\n   var data = this._getLinearizedBlockData(width, height);\n   if (this.numComponents === 1 && forceRGBoutput) {\n    var dataLength = data.length;\n    var rgbData = new Uint8Array(dataLength * 3);\n    var offset = 0;\n    for (var i = 0; i < dataLength; i++) {\n     var grayColor = data[i];\n     rgbData[offset++] = grayColor;\n     rgbData[offset++] = grayColor;\n     rgbData[offset++] = grayColor;\n    }\n    return rgbData;\n   } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {\n    return this._convertYccToRgb(data);\n   } else if (this.numComponents === 4) {\n    if (this._isColorConversionNeeded()) {\n     if (forceRGBoutput) {\n      return this._convertYcckToRgb(data);\n     }\n     return this._convertYcckToCmyk(data);\n    } else if (forceRGBoutput) {\n     return this._convertCmykToRgb(data);\n    }\n   }\n   return data;\n  }\n };\n return JpegImage;\n}();\nexports.JpegImage = JpegImage;\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar getLookupTableFactory = sharedUtil.getLookupTableFactory;\nvar getMetrics = getLookupTableFactory(function (t) {\n t['Courier'] = 600;\n t['Courier-Bold'] = 600;\n t['Courier-BoldOblique'] = 600;\n t['Courier-Oblique'] = 600;\n t['Helvetica'] = getLookupTableFactory(function (t) {\n  t['space'] = 278;\n  t['exclam'] = 278;\n  t['quotedbl'] = 355;\n  t['numbersign'] = 556;\n  t['dollar'] = 556;\n  t['percent'] = 889;\n  t['ampersand'] = 667;\n  t['quoteright'] = 222;\n  t['parenleft'] = 333;\n  t['parenright'] = 333;\n  t['asterisk'] = 389;\n  t['plus'] = 584;\n  t['comma'] = 278;\n  t['hyphen'] = 333;\n  t['period'] = 278;\n  t['slash'] = 278;\n  t['zero'] = 556;\n  t['one'] = 556;\n  t['two'] = 556;\n  t['three'] = 556;\n  t['four'] = 556;\n  t['five'] = 556;\n  t['six'] = 556;\n  t['seven'] = 556;\n  t['eight'] = 556;\n  t['nine'] = 556;\n  t['colon'] = 278;\n  t['semicolon'] = 278;\n  t['less'] = 584;\n  t['equal'] = 584;\n  t['greater'] = 584;\n  t['question'] = 556;\n  t['at'] = 1015;\n  t['A'] = 667;\n  t['B'] = 667;\n  t['C'] = 722;\n  t['D'] = 722;\n  t['E'] = 667;\n  t['F'] = 611;\n  t['G'] = 778;\n  t['H'] = 722;\n  t['I'] = 278;\n  t['J'] = 500;\n  t['K'] = 667;\n  t['L'] = 556;\n  t['M'] = 833;\n  t['N'] = 722;\n  t['O'] = 778;\n  t['P'] = 667;\n  t['Q'] = 778;\n  t['R'] = 722;\n  t['S'] = 667;\n  t['T'] = 611;\n  t['U'] = 722;\n  t['V'] = 667;\n  t['W'] = 944;\n  t['X'] = 667;\n  t['Y'] = 667;\n  t['Z'] = 611;\n  t['bracketleft'] = 278;\n  t['backslash'] = 278;\n  t['bracketright'] = 278;\n  t['asciicircum'] = 469;\n  t['underscore'] = 556;\n  t['quoteleft'] = 222;\n  t['a'] = 556;\n  t['b'] = 556;\n  t['c'] = 500;\n  t['d'] = 556;\n  t['e'] = 556;\n  t['f'] = 278;\n  t['g'] = 556;\n  t['h'] = 556;\n  t['i'] = 222;\n  t['j'] = 222;\n  t['k'] = 500;\n  t['l'] = 222;\n  t['m'] = 833;\n  t['n'] = 556;\n  t['o'] = 556;\n  t['p'] = 556;\n  t['q'] = 556;\n  t['r'] = 333;\n  t['s'] = 500;\n  t['t'] = 278;\n  t['u'] = 556;\n  t['v'] = 500;\n  t['w'] = 722;\n  t['x'] = 500;\n  t['y'] = 500;\n  t['z'] = 500;\n  t['braceleft'] = 334;\n  t['bar'] = 260;\n  t['braceright'] = 334;\n  t['asciitilde'] = 584;\n  t['exclamdown'] = 333;\n  t['cent'] = 556;\n  t['sterling'] = 556;\n  t['fraction'] = 167;\n  t['yen'] = 556;\n  t['florin'] = 556;\n  t['section'] = 556;\n  t['currency'] = 556;\n  t['quotesingle'] = 191;\n  t['quotedblleft'] = 333;\n  t['guillemotleft'] = 556;\n  t['guilsinglleft'] = 333;\n  t['guilsinglright'] = 333;\n  t['fi'] = 500;\n  t['fl'] = 500;\n  t['endash'] = 556;\n  t['dagger'] = 556;\n  t['daggerdbl'] = 556;\n  t['periodcentered'] = 278;\n  t['paragraph'] = 537;\n  t['bullet'] = 350;\n  t['quotesinglbase'] = 222;\n  t['quotedblbase'] = 333;\n  t['quotedblright'] = 333;\n  t['guillemotright'] = 556;\n  t['ellipsis'] = 1000;\n  t['perthousand'] = 1000;\n  t['questiondown'] = 611;\n  t['grave'] = 333;\n  t['acute'] = 333;\n  t['circumflex'] = 333;\n  t['tilde'] = 333;\n  t['macron'] = 333;\n  t['breve'] = 333;\n  t['dotaccent'] = 333;\n  t['dieresis'] = 333;\n  t['ring'] = 333;\n  t['cedilla'] = 333;\n  t['hungarumlaut'] = 333;\n  t['ogonek'] = 333;\n  t['caron'] = 333;\n  t['emdash'] = 1000;\n  t['AE'] = 1000;\n  t['ordfeminine'] = 370;\n  t['Lslash'] = 556;\n  t['Oslash'] = 778;\n  t['OE'] = 1000;\n  t['ordmasculine'] = 365;\n  t['ae'] = 889;\n  t['dotlessi'] = 278;\n  t['lslash'] = 222;\n  t['oslash'] = 611;\n  t['oe'] = 944;\n  t['germandbls'] = 611;\n  t['Idieresis'] = 278;\n  t['eacute'] = 556;\n  t['abreve'] = 556;\n  t['uhungarumlaut'] = 556;\n  t['ecaron'] = 556;\n  t['Ydieresis'] = 667;\n  t['divide'] = 584;\n  t['Yacute'] = 667;\n  t['Acircumflex'] = 667;\n  t['aacute'] = 556;\n  t['Ucircumflex'] = 722;\n  t['yacute'] = 500;\n  t['scommaaccent'] = 500;\n  t['ecircumflex'] = 556;\n  t['Uring'] = 722;\n  t['Udieresis'] = 722;\n  t['aogonek'] = 556;\n  t['Uacute'] = 722;\n  t['uogonek'] = 556;\n  t['Edieresis'] = 667;\n  t['Dcroat'] = 722;\n  t['commaaccent'] = 250;\n  t['copyright'] = 737;\n  t['Emacron'] = 667;\n  t['ccaron'] = 500;\n  t['aring'] = 556;\n  t['Ncommaaccent'] = 722;\n  t['lacute'] = 222;\n  t['agrave'] = 556;\n  t['Tcommaaccent'] = 611;\n  t['Cacute'] = 722;\n  t['atilde'] = 556;\n  t['Edotaccent'] = 667;\n  t['scaron'] = 500;\n  t['scedilla'] = 500;\n  t['iacute'] = 278;\n  t['lozenge'] = 471;\n  t['Rcaron'] = 722;\n  t['Gcommaaccent'] = 778;\n  t['ucircumflex'] = 556;\n  t['acircumflex'] = 556;\n  t['Amacron'] = 667;\n  t['rcaron'] = 333;\n  t['ccedilla'] = 500;\n  t['Zdotaccent'] = 611;\n  t['Thorn'] = 667;\n  t['Omacron'] = 778;\n  t['Racute'] = 722;\n  t['Sacute'] = 667;\n  t['dcaron'] = 643;\n  t['Umacron'] = 722;\n  t['uring'] = 556;\n  t['threesuperior'] = 333;\n  t['Ograve'] = 778;\n  t['Agrave'] = 667;\n  t['Abreve'] = 667;\n  t['multiply'] = 584;\n  t['uacute'] = 556;\n  t['Tcaron'] = 611;\n  t['partialdiff'] = 476;\n  t['ydieresis'] = 500;\n  t['Nacute'] = 722;\n  t['icircumflex'] = 278;\n  t['Ecircumflex'] = 667;\n  t['adieresis'] = 556;\n  t['edieresis'] = 556;\n  t['cacute'] = 500;\n  t['nacute'] = 556;\n  t['umacron'] = 556;\n  t['Ncaron'] = 722;\n  t['Iacute'] = 278;\n  t['plusminus'] = 584;\n  t['brokenbar'] = 260;\n  t['registered'] = 737;\n  t['Gbreve'] = 778;\n  t['Idotaccent'] = 278;\n  t['summation'] = 600;\n  t['Egrave'] = 667;\n  t['racute'] = 333;\n  t['omacron'] = 556;\n  t['Zacute'] = 611;\n  t['Zcaron'] = 611;\n  t['greaterequal'] = 549;\n  t['Eth'] = 722;\n  t['Ccedilla'] = 722;\n  t['lcommaaccent'] = 222;\n  t['tcaron'] = 317;\n  t['eogonek'] = 556;\n  t['Uogonek'] = 722;\n  t['Aacute'] = 667;\n  t['Adieresis'] = 667;\n  t['egrave'] = 556;\n  t['zacute'] = 500;\n  t['iogonek'] = 222;\n  t['Oacute'] = 778;\n  t['oacute'] = 556;\n  t['amacron'] = 556;\n  t['sacute'] = 500;\n  t['idieresis'] = 278;\n  t['Ocircumflex'] = 778;\n  t['Ugrave'] = 722;\n  t['Delta'] = 612;\n  t['thorn'] = 556;\n  t['twosuperior'] = 333;\n  t['Odieresis'] = 778;\n  t['mu'] = 556;\n  t['igrave'] = 278;\n  t['ohungarumlaut'] = 556;\n  t['Eogonek'] = 667;\n  t['dcroat'] = 556;\n  t['threequarters'] = 834;\n  t['Scedilla'] = 667;\n  t['lcaron'] = 299;\n  t['Kcommaaccent'] = 667;\n  t['Lacute'] = 556;\n  t['trademark'] = 1000;\n  t['edotaccent'] = 556;\n  t['Igrave'] = 278;\n  t['Imacron'] = 278;\n  t['Lcaron'] = 556;\n  t['onehalf'] = 834;\n  t['lessequal'] = 549;\n  t['ocircumflex'] = 556;\n  t['ntilde'] = 556;\n  t['Uhungarumlaut'] = 722;\n  t['Eacute'] = 667;\n  t['emacron'] = 556;\n  t['gbreve'] = 556;\n  t['onequarter'] = 834;\n  t['Scaron'] = 667;\n  t['Scommaaccent'] = 667;\n  t['Ohungarumlaut'] = 778;\n  t['degree'] = 400;\n  t['ograve'] = 556;\n  t['Ccaron'] = 722;\n  t['ugrave'] = 556;\n  t['radical'] = 453;\n  t['Dcaron'] = 722;\n  t['rcommaaccent'] = 333;\n  t['Ntilde'] = 722;\n  t['otilde'] = 556;\n  t['Rcommaaccent'] = 722;\n  t['Lcommaaccent'] = 556;\n  t['Atilde'] = 667;\n  t['Aogonek'] = 667;\n  t['Aring'] = 667;\n  t['Otilde'] = 778;\n  t['zdotaccent'] = 500;\n  t['Ecaron'] = 667;\n  t['Iogonek'] = 278;\n  t['kcommaaccent'] = 500;\n  t['minus'] = 584;\n  t['Icircumflex'] = 278;\n  t['ncaron'] = 556;\n  t['tcommaaccent'] = 278;\n  t['logicalnot'] = 584;\n  t['odieresis'] = 556;\n  t['udieresis'] = 556;\n  t['notequal'] = 549;\n  t['gcommaaccent'] = 556;\n  t['eth'] = 556;\n  t['zcaron'] = 500;\n  t['ncommaaccent'] = 556;\n  t['onesuperior'] = 333;\n  t['imacron'] = 278;\n  t['Euro'] = 556;\n });\n t['Helvetica-Bold'] = getLookupTableFactory(function (t) {\n  t['space'] = 278;\n  t['exclam'] = 333;\n  t['quotedbl'] = 474;\n  t['numbersign'] = 556;\n  t['dollar'] = 556;\n  t['percent'] = 889;\n  t['ampersand'] = 722;\n  t['quoteright'] = 278;\n  t['parenleft'] = 333;\n  t['parenright'] = 333;\n  t['asterisk'] = 389;\n  t['plus'] = 584;\n  t['comma'] = 278;\n  t['hyphen'] = 333;\n  t['period'] = 278;\n  t['slash'] = 278;\n  t['zero'] = 556;\n  t['one'] = 556;\n  t['two'] = 556;\n  t['three'] = 556;\n  t['four'] = 556;\n  t['five'] = 556;\n  t['six'] = 556;\n  t['seven'] = 556;\n  t['eight'] = 556;\n  t['nine'] = 556;\n  t['colon'] = 333;\n  t['semicolon'] = 333;\n  t['less'] = 584;\n  t['equal'] = 584;\n  t['greater'] = 584;\n  t['question'] = 611;\n  t['at'] = 975;\n  t['A'] = 722;\n  t['B'] = 722;\n  t['C'] = 722;\n  t['D'] = 722;\n  t['E'] = 667;\n  t['F'] = 611;\n  t['G'] = 778;\n  t['H'] = 722;\n  t['I'] = 278;\n  t['J'] = 556;\n  t['K'] = 722;\n  t['L'] = 611;\n  t['M'] = 833;\n  t['N'] = 722;\n  t['O'] = 778;\n  t['P'] = 667;\n  t['Q'] = 778;\n  t['R'] = 722;\n  t['S'] = 667;\n  t['T'] = 611;\n  t['U'] = 722;\n  t['V'] = 667;\n  t['W'] = 944;\n  t['X'] = 667;\n  t['Y'] = 667;\n  t['Z'] = 611;\n  t['bracketleft'] = 333;\n  t['backslash'] = 278;\n  t['bracketright'] = 333;\n  t['asciicircum'] = 584;\n  t['underscore'] = 556;\n  t['quoteleft'] = 278;\n  t['a'] = 556;\n  t['b'] = 611;\n  t['c'] = 556;\n  t['d'] = 611;\n  t['e'] = 556;\n  t['f'] = 333;\n  t['g'] = 611;\n  t['h'] = 611;\n  t['i'] = 278;\n  t['j'] = 278;\n  t['k'] = 556;\n  t['l'] = 278;\n  t['m'] = 889;\n  t['n'] = 611;\n  t['o'] = 611;\n  t['p'] = 611;\n  t['q'] = 611;\n  t['r'] = 389;\n  t['s'] = 556;\n  t['t'] = 333;\n  t['u'] = 611;\n  t['v'] = 556;\n  t['w'] = 778;\n  t['x'] = 556;\n  t['y'] = 556;\n  t['z'] = 500;\n  t['braceleft'] = 389;\n  t['bar'] = 280;\n  t['braceright'] = 389;\n  t['asciitilde'] = 584;\n  t['exclamdown'] = 333;\n  t['cent'] = 556;\n  t['sterling'] = 556;\n  t['fraction'] = 167;\n  t['yen'] = 556;\n  t['florin'] = 556;\n  t['section'] = 556;\n  t['currency'] = 556;\n  t['quotesingle'] = 238;\n  t['quotedblleft'] = 500;\n  t['guillemotleft'] = 556;\n  t['guilsinglleft'] = 333;\n  t['guilsinglright'] = 333;\n  t['fi'] = 611;\n  t['fl'] = 611;\n  t['endash'] = 556;\n  t['dagger'] = 556;\n  t['daggerdbl'] = 556;\n  t['periodcentered'] = 278;\n  t['paragraph'] = 556;\n  t['bullet'] = 350;\n  t['quotesinglbase'] = 278;\n  t['quotedblbase'] = 500;\n  t['quotedblright'] = 500;\n  t['guillemotright'] = 556;\n  t['ellipsis'] = 1000;\n  t['perthousand'] = 1000;\n  t['questiondown'] = 611;\n  t['grave'] = 333;\n  t['acute'] = 333;\n  t['circumflex'] = 333;\n  t['tilde'] = 333;\n  t['macron'] = 333;\n  t['breve'] = 333;\n  t['dotaccent'] = 333;\n  t['dieresis'] = 333;\n  t['ring'] = 333;\n  t['cedilla'] = 333;\n  t['hungarumlaut'] = 333;\n  t['ogonek'] = 333;\n  t['caron'] = 333;\n  t['emdash'] = 1000;\n  t['AE'] = 1000;\n  t['ordfeminine'] = 370;\n  t['Lslash'] = 611;\n  t['Oslash'] = 778;\n  t['OE'] = 1000;\n  t['ordmasculine'] = 365;\n  t['ae'] = 889;\n  t['dotlessi'] = 278;\n  t['lslash'] = 278;\n  t['oslash'] = 611;\n  t['oe'] = 944;\n  t['germandbls'] = 611;\n  t['Idieresis'] = 278;\n  t['eacute'] = 556;\n  t['abreve'] = 556;\n  t['uhungarumlaut'] = 611;\n  t['ecaron'] = 556;\n  t['Ydieresis'] = 667;\n  t['divide'] = 584;\n  t['Yacute'] = 667;\n  t['Acircumflex'] = 722;\n  t['aacute'] = 556;\n  t['Ucircumflex'] = 722;\n  t['yacute'] = 556;\n  t['scommaaccent'] = 556;\n  t['ecircumflex'] = 556;\n  t['Uring'] = 722;\n  t['Udieresis'] = 722;\n  t['aogonek'] = 556;\n  t['Uacute'] = 722;\n  t['uogonek'] = 611;\n  t['Edieresis'] = 667;\n  t['Dcroat'] = 722;\n  t['commaaccent'] = 250;\n  t['copyright'] = 737;\n  t['Emacron'] = 667;\n  t['ccaron'] = 556;\n  t['aring'] = 556;\n  t['Ncommaaccent'] = 722;\n  t['lacute'] = 278;\n  t['agrave'] = 556;\n  t['Tcommaaccent'] = 611;\n  t['Cacute'] = 722;\n  t['atilde'] = 556;\n  t['Edotaccent'] = 667;\n  t['scaron'] = 556;\n  t['scedilla'] = 556;\n  t['iacute'] = 278;\n  t['lozenge'] = 494;\n  t['Rcaron'] = 722;\n  t['Gcommaaccent'] = 778;\n  t['ucircumflex'] = 611;\n  t['acircumflex'] = 556;\n  t['Amacron'] = 722;\n  t['rcaron'] = 389;\n  t['ccedilla'] = 556;\n  t['Zdotaccent'] = 611;\n  t['Thorn'] = 667;\n  t['Omacron'] = 778;\n  t['Racute'] = 722;\n  t['Sacute'] = 667;\n  t['dcaron'] = 743;\n  t['Umacron'] = 722;\n  t['uring'] = 611;\n  t['threesuperior'] = 333;\n  t['Ograve'] = 778;\n  t['Agrave'] = 722;\n  t['Abreve'] = 722;\n  t['multiply'] = 584;\n  t['uacute'] = 611;\n  t['Tcaron'] = 611;\n  t['partialdiff'] = 494;\n  t['ydieresis'] = 556;\n  t['Nacute'] = 722;\n  t['icircumflex'] = 278;\n  t['Ecircumflex'] = 667;\n  t['adieresis'] = 556;\n  t['edieresis'] = 556;\n  t['cacute'] = 556;\n  t['nacute'] = 611;\n  t['umacron'] = 611;\n  t['Ncaron'] = 722;\n  t['Iacute'] = 278;\n  t['plusminus'] = 584;\n  t['brokenbar'] = 280;\n  t['registered'] = 737;\n  t['Gbreve'] = 778;\n  t['Idotaccent'] = 278;\n  t['summation'] = 600;\n  t['Egrave'] = 667;\n  t['racute'] = 389;\n  t['omacron'] = 611;\n  t['Zacute'] = 611;\n  t['Zcaron'] = 611;\n  t['greaterequal'] = 549;\n  t['Eth'] = 722;\n  t['Ccedilla'] = 722;\n  t['lcommaaccent'] = 278;\n  t['tcaron'] = 389;\n  t['eogonek'] = 556;\n  t['Uogonek'] = 722;\n  t['Aacute'] = 722;\n  t['Adieresis'] = 722;\n  t['egrave'] = 556;\n  t['zacute'] = 500;\n  t['iogonek'] = 278;\n  t['Oacute'] = 778;\n  t['oacute'] = 611;\n  t['amacron'] = 556;\n  t['sacute'] = 556;\n  t['idieresis'] = 278;\n  t['Ocircumflex'] = 778;\n  t['Ugrave'] = 722;\n  t['Delta'] = 612;\n  t['thorn'] = 611;\n  t['twosuperior'] = 333;\n  t['Odieresis'] = 778;\n  t['mu'] = 611;\n  t['igrave'] = 278;\n  t['ohungarumlaut'] = 611;\n  t['Eogonek'] = 667;\n  t['dcroat'] = 611;\n  t['threequarters'] = 834;\n  t['Scedilla'] = 667;\n  t['lcaron'] = 400;\n  t['Kcommaaccent'] = 722;\n  t['Lacute'] = 611;\n  t['trademark'] = 1000;\n  t['edotaccent'] = 556;\n  t['Igrave'] = 278;\n  t['Imacron'] = 278;\n  t['Lcaron'] = 611;\n  t['onehalf'] = 834;\n  t['lessequal'] = 549;\n  t['ocircumflex'] = 611;\n  t['ntilde'] = 611;\n  t['Uhungarumlaut'] = 722;\n  t['Eacute'] = 667;\n  t['emacron'] = 556;\n  t['gbreve'] = 611;\n  t['onequarter'] = 834;\n  t['Scaron'] = 667;\n  t['Scommaaccent'] = 667;\n  t['Ohungarumlaut'] = 778;\n  t['degree'] = 400;\n  t['ograve'] = 611;\n  t['Ccaron'] = 722;\n  t['ugrave'] = 611;\n  t['radical'] = 549;\n  t['Dcaron'] = 722;\n  t['rcommaaccent'] = 389;\n  t['Ntilde'] = 722;\n  t['otilde'] = 611;\n  t['Rcommaaccent'] = 722;\n  t['Lcommaaccent'] = 611;\n  t['Atilde'] = 722;\n  t['Aogonek'] = 722;\n  t['Aring'] = 722;\n  t['Otilde'] = 778;\n  t['zdotaccent'] = 500;\n  t['Ecaron'] = 667;\n  t['Iogonek'] = 278;\n  t['kcommaaccent'] = 556;\n  t['minus'] = 584;\n  t['Icircumflex'] = 278;\n  t['ncaron'] = 611;\n  t['tcommaaccent'] = 333;\n  t['logicalnot'] = 584;\n  t['odieresis'] = 611;\n  t['udieresis'] = 611;\n  t['notequal'] = 549;\n  t['gcommaaccent'] = 611;\n  t['eth'] = 611;\n  t['zcaron'] = 500;\n  t['ncommaaccent'] = 611;\n  t['onesuperior'] = 333;\n  t['imacron'] = 278;\n  t['Euro'] = 556;\n });\n t['Helvetica-BoldOblique'] = getLookupTableFactory(function (t) {\n  t['space'] = 278;\n  t['exclam'] = 333;\n  t['quotedbl'] = 474;\n  t['numbersign'] = 556;\n  t['dollar'] = 556;\n  t['percent'] = 889;\n  t['ampersand'] = 722;\n  t['quoteright'] = 278;\n  t['parenleft'] = 333;\n  t['parenright'] = 333;\n  t['asterisk'] = 389;\n  t['plus'] = 584;\n  t['comma'] = 278;\n  t['hyphen'] = 333;\n  t['period'] = 278;\n  t['slash'] = 278;\n  t['zero'] = 556;\n  t['one'] = 556;\n  t['two'] = 556;\n  t['three'] = 556;\n  t['four'] = 556;\n  t['five'] = 556;\n  t['six'] = 556;\n  t['seven'] = 556;\n  t['eight'] = 556;\n  t['nine'] = 556;\n  t['colon'] = 333;\n  t['semicolon'] = 333;\n  t['less'] = 584;\n  t['equal'] = 584;\n  t['greater'] = 584;\n  t['question'] = 611;\n  t['at'] = 975;\n  t['A'] = 722;\n  t['B'] = 722;\n  t['C'] = 722;\n  t['D'] = 722;\n  t['E'] = 667;\n  t['F'] = 611;\n  t['G'] = 778;\n  t['H'] = 722;\n  t['I'] = 278;\n  t['J'] = 556;\n  t['K'] = 722;\n  t['L'] = 611;\n  t['M'] = 833;\n  t['N'] = 722;\n  t['O'] = 778;\n  t['P'] = 667;\n  t['Q'] = 778;\n  t['R'] = 722;\n  t['S'] = 667;\n  t['T'] = 611;\n  t['U'] = 722;\n  t['V'] = 667;\n  t['W'] = 944;\n  t['X'] = 667;\n  t['Y'] = 667;\n  t['Z'] = 611;\n  t['bracketleft'] = 333;\n  t['backslash'] = 278;\n  t['bracketright'] = 333;\n  t['asciicircum'] = 584;\n  t['underscore'] = 556;\n  t['quoteleft'] = 278;\n  t['a'] = 556;\n  t['b'] = 611;\n  t['c'] = 556;\n  t['d'] = 611;\n  t['e'] = 556;\n  t['f'] = 333;\n  t['g'] = 611;\n  t['h'] = 611;\n  t['i'] = 278;\n  t['j'] = 278;\n  t['k'] = 556;\n  t['l'] = 278;\n  t['m'] = 889;\n  t['n'] = 611;\n  t['o'] = 611;\n  t['p'] = 611;\n  t['q'] = 611;\n  t['r'] = 389;\n  t['s'] = 556;\n  t['t'] = 333;\n  t['u'] = 611;\n  t['v'] = 556;\n  t['w'] = 778;\n  t['x'] = 556;\n  t['y'] = 556;\n  t['z'] = 500;\n  t['braceleft'] = 389;\n  t['bar'] = 280;\n  t['braceright'] = 389;\n  t['asciitilde'] = 584;\n  t['exclamdown'] = 333;\n  t['cent'] = 556;\n  t['sterling'] = 556;\n  t['fraction'] = 167;\n  t['yen'] = 556;\n  t['florin'] = 556;\n  t['section'] = 556;\n  t['currency'] = 556;\n  t['quotesingle'] = 238;\n  t['quotedblleft'] = 500;\n  t['guillemotleft'] = 556;\n  t['guilsinglleft'] = 333;\n  t['guilsinglright'] = 333;\n  t['fi'] = 611;\n  t['fl'] = 611;\n  t['endash'] = 556;\n  t['dagger'] = 556;\n  t['daggerdbl'] = 556;\n  t['periodcentered'] = 278;\n  t['paragraph'] = 556;\n  t['bullet'] = 350;\n  t['quotesinglbase'] = 278;\n  t['quotedblbase'] = 500;\n  t['quotedblright'] = 500;\n  t['guillemotright'] = 556;\n  t['ellipsis'] = 1000;\n  t['perthousand'] = 1000;\n  t['questiondown'] = 611;\n  t['grave'] = 333;\n  t['acute'] = 333;\n  t['circumflex'] = 333;\n  t['tilde'] = 333;\n  t['macron'] = 333;\n  t['breve'] = 333;\n  t['dotaccent'] = 333;\n  t['dieresis'] = 333;\n  t['ring'] = 333;\n  t['cedilla'] = 333;\n  t['hungarumlaut'] = 333;\n  t['ogonek'] = 333;\n  t['caron'] = 333;\n  t['emdash'] = 1000;\n  t['AE'] = 1000;\n  t['ordfeminine'] = 370;\n  t['Lslash'] = 611;\n  t['Oslash'] = 778;\n  t['OE'] = 1000;\n  t['ordmasculine'] = 365;\n  t['ae'] = 889;\n  t['dotlessi'] = 278;\n  t['lslash'] = 278;\n  t['oslash'] = 611;\n  t['oe'] = 944;\n  t['germandbls'] = 611;\n  t['Idieresis'] = 278;\n  t['eacute'] = 556;\n  t['abreve'] = 556;\n  t['uhungarumlaut'] = 611;\n  t['ecaron'] = 556;\n  t['Ydieresis'] = 667;\n  t['divide'] = 584;\n  t['Yacute'] = 667;\n  t['Acircumflex'] = 722;\n  t['aacute'] = 556;\n  t['Ucircumflex'] = 722;\n  t['yacute'] = 556;\n  t['scommaaccent'] = 556;\n  t['ecircumflex'] = 556;\n  t['Uring'] = 722;\n  t['Udieresis'] = 722;\n  t['aogonek'] = 556;\n  t['Uacute'] = 722;\n  t['uogonek'] = 611;\n  t['Edieresis'] = 667;\n  t['Dcroat'] = 722;\n  t['commaaccent'] = 250;\n  t['copyright'] = 737;\n  t['Emacron'] = 667;\n  t['ccaron'] = 556;\n  t['aring'] = 556;\n  t['Ncommaaccent'] = 722;\n  t['lacute'] = 278;\n  t['agrave'] = 556;\n  t['Tcommaaccent'] = 611;\n  t['Cacute'] = 722;\n  t['atilde'] = 556;\n  t['Edotaccent'] = 667;\n  t['scaron'] = 556;\n  t['scedilla'] = 556;\n  t['iacute'] = 278;\n  t['lozenge'] = 494;\n  t['Rcaron'] = 722;\n  t['Gcommaaccent'] = 778;\n  t['ucircumflex'] = 611;\n  t['acircumflex'] = 556;\n  t['Amacron'] = 722;\n  t['rcaron'] = 389;\n  t['ccedilla'] = 556;\n  t['Zdotaccent'] = 611;\n  t['Thorn'] = 667;\n  t['Omacron'] = 778;\n  t['Racute'] = 722;\n  t['Sacute'] = 667;\n  t['dcaron'] = 743;\n  t['Umacron'] = 722;\n  t['uring'] = 611;\n  t['threesuperior'] = 333;\n  t['Ograve'] = 778;\n  t['Agrave'] = 722;\n  t['Abreve'] = 722;\n  t['multiply'] = 584;\n  t['uacute'] = 611;\n  t['Tcaron'] = 611;\n  t['partialdiff'] = 494;\n  t['ydieresis'] = 556;\n  t['Nacute'] = 722;\n  t['icircumflex'] = 278;\n  t['Ecircumflex'] = 667;\n  t['adieresis'] = 556;\n  t['edieresis'] = 556;\n  t['cacute'] = 556;\n  t['nacute'] = 611;\n  t['umacron'] = 611;\n  t['Ncaron'] = 722;\n  t['Iacute'] = 278;\n  t['plusminus'] = 584;\n  t['brokenbar'] = 280;\n  t['registered'] = 737;\n  t['Gbreve'] = 778;\n  t['Idotaccent'] = 278;\n  t['summation'] = 600;\n  t['Egrave'] = 667;\n  t['racute'] = 389;\n  t['omacron'] = 611;\n  t['Zacute'] = 611;\n  t['Zcaron'] = 611;\n  t['greaterequal'] = 549;\n  t['Eth'] = 722;\n  t['Ccedilla'] = 722;\n  t['lcommaaccent'] = 278;\n  t['tcaron'] = 389;\n  t['eogonek'] = 556;\n  t['Uogonek'] = 722;\n  t['Aacute'] = 722;\n  t['Adieresis'] = 722;\n  t['egrave'] = 556;\n  t['zacute'] = 500;\n  t['iogonek'] = 278;\n  t['Oacute'] = 778;\n  t['oacute'] = 611;\n  t['amacron'] = 556;\n  t['sacute'] = 556;\n  t['idieresis'] = 278;\n  t['Ocircumflex'] = 778;\n  t['Ugrave'] = 722;\n  t['Delta'] = 612;\n  t['thorn'] = 611;\n  t['twosuperior'] = 333;\n  t['Odieresis'] = 778;\n  t['mu'] = 611;\n  t['igrave'] = 278;\n  t['ohungarumlaut'] = 611;\n  t['Eogonek'] = 667;\n  t['dcroat'] = 611;\n  t['threequarters'] = 834;\n  t['Scedilla'] = 667;\n  t['lcaron'] = 400;\n  t['Kcommaaccent'] = 722;\n  t['Lacute'] = 611;\n  t['trademark'] = 1000;\n  t['edotaccent'] = 556;\n  t['Igrave'] = 278;\n  t['Imacron'] = 278;\n  t['Lcaron'] = 611;\n  t['onehalf'] = 834;\n  t['lessequal'] = 549;\n  t['ocircumflex'] = 611;\n  t['ntilde'] = 611;\n  t['Uhungarumlaut'] = 722;\n  t['Eacute'] = 667;\n  t['emacron'] = 556;\n  t['gbreve'] = 611;\n  t['onequarter'] = 834;\n  t['Scaron'] = 667;\n  t['Scommaaccent'] = 667;\n  t['Ohungarumlaut'] = 778;\n  t['degree'] = 400;\n  t['ograve'] = 611;\n  t['Ccaron'] = 722;\n  t['ugrave'] = 611;\n  t['radical'] = 549;\n  t['Dcaron'] = 722;\n  t['rcommaaccent'] = 389;\n  t['Ntilde'] = 722;\n  t['otilde'] = 611;\n  t['Rcommaaccent'] = 722;\n  t['Lcommaaccent'] = 611;\n  t['Atilde'] = 722;\n  t['Aogonek'] = 722;\n  t['Aring'] = 722;\n  t['Otilde'] = 778;\n  t['zdotaccent'] = 500;\n  t['Ecaron'] = 667;\n  t['Iogonek'] = 278;\n  t['kcommaaccent'] = 556;\n  t['minus'] = 584;\n  t['Icircumflex'] = 278;\n  t['ncaron'] = 611;\n  t['tcommaaccent'] = 333;\n  t['logicalnot'] = 584;\n  t['odieresis'] = 611;\n  t['udieresis'] = 611;\n  t['notequal'] = 549;\n  t['gcommaaccent'] = 611;\n  t['eth'] = 611;\n  t['zcaron'] = 500;\n  t['ncommaaccent'] = 611;\n  t['onesuperior'] = 333;\n  t['imacron'] = 278;\n  t['Euro'] = 556;\n });\n t['Helvetica-Oblique'] = getLookupTableFactory(function (t) {\n  t['space'] = 278;\n  t['exclam'] = 278;\n  t['quotedbl'] = 355;\n  t['numbersign'] = 556;\n  t['dollar'] = 556;\n  t['percent'] = 889;\n  t['ampersand'] = 667;\n  t['quoteright'] = 222;\n  t['parenleft'] = 333;\n  t['parenright'] = 333;\n  t['asterisk'] = 389;\n  t['plus'] = 584;\n  t['comma'] = 278;\n  t['hyphen'] = 333;\n  t['period'] = 278;\n  t['slash'] = 278;\n  t['zero'] = 556;\n  t['one'] = 556;\n  t['two'] = 556;\n  t['three'] = 556;\n  t['four'] = 556;\n  t['five'] = 556;\n  t['six'] = 556;\n  t['seven'] = 556;\n  t['eight'] = 556;\n  t['nine'] = 556;\n  t['colon'] = 278;\n  t['semicolon'] = 278;\n  t['less'] = 584;\n  t['equal'] = 584;\n  t['greater'] = 584;\n  t['question'] = 556;\n  t['at'] = 1015;\n  t['A'] = 667;\n  t['B'] = 667;\n  t['C'] = 722;\n  t['D'] = 722;\n  t['E'] = 667;\n  t['F'] = 611;\n  t['G'] = 778;\n  t['H'] = 722;\n  t['I'] = 278;\n  t['J'] = 500;\n  t['K'] = 667;\n  t['L'] = 556;\n  t['M'] = 833;\n  t['N'] = 722;\n  t['O'] = 778;\n  t['P'] = 667;\n  t['Q'] = 778;\n  t['R'] = 722;\n  t['S'] = 667;\n  t['T'] = 611;\n  t['U'] = 722;\n  t['V'] = 667;\n  t['W'] = 944;\n  t['X'] = 667;\n  t['Y'] = 667;\n  t['Z'] = 611;\n  t['bracketleft'] = 278;\n  t['backslash'] = 278;\n  t['bracketright'] = 278;\n  t['asciicircum'] = 469;\n  t['underscore'] = 556;\n  t['quoteleft'] = 222;\n  t['a'] = 556;\n  t['b'] = 556;\n  t['c'] = 500;\n  t['d'] = 556;\n  t['e'] = 556;\n  t['f'] = 278;\n  t['g'] = 556;\n  t['h'] = 556;\n  t['i'] = 222;\n  t['j'] = 222;\n  t['k'] = 500;\n  t['l'] = 222;\n  t['m'] = 833;\n  t['n'] = 556;\n  t['o'] = 556;\n  t['p'] = 556;\n  t['q'] = 556;\n  t['r'] = 333;\n  t['s'] = 500;\n  t['t'] = 278;\n  t['u'] = 556;\n  t['v'] = 500;\n  t['w'] = 722;\n  t['x'] = 500;\n  t['y'] = 500;\n  t['z'] = 500;\n  t['braceleft'] = 334;\n  t['bar'] = 260;\n  t['braceright'] = 334;\n  t['asciitilde'] = 584;\n  t['exclamdown'] = 333;\n  t['cent'] = 556;\n  t['sterling'] = 556;\n  t['fraction'] = 167;\n  t['yen'] = 556;\n  t['florin'] = 556;\n  t['section'] = 556;\n  t['currency'] = 556;\n  t['quotesingle'] = 191;\n  t['quotedblleft'] = 333;\n  t['guillemotleft'] = 556;\n  t['guilsinglleft'] = 333;\n  t['guilsinglright'] = 333;\n  t['fi'] = 500;\n  t['fl'] = 500;\n  t['endash'] = 556;\n  t['dagger'] = 556;\n  t['daggerdbl'] = 556;\n  t['periodcentered'] = 278;\n  t['paragraph'] = 537;\n  t['bullet'] = 350;\n  t['quotesinglbase'] = 222;\n  t['quotedblbase'] = 333;\n  t['quotedblright'] = 333;\n  t['guillemotright'] = 556;\n  t['ellipsis'] = 1000;\n  t['perthousand'] = 1000;\n  t['questiondown'] = 611;\n  t['grave'] = 333;\n  t['acute'] = 333;\n  t['circumflex'] = 333;\n  t['tilde'] = 333;\n  t['macron'] = 333;\n  t['breve'] = 333;\n  t['dotaccent'] = 333;\n  t['dieresis'] = 333;\n  t['ring'] = 333;\n  t['cedilla'] = 333;\n  t['hungarumlaut'] = 333;\n  t['ogonek'] = 333;\n  t['caron'] = 333;\n  t['emdash'] = 1000;\n  t['AE'] = 1000;\n  t['ordfeminine'] = 370;\n  t['Lslash'] = 556;\n  t['Oslash'] = 778;\n  t['OE'] = 1000;\n  t['ordmasculine'] = 365;\n  t['ae'] = 889;\n  t['dotlessi'] = 278;\n  t['lslash'] = 222;\n  t['oslash'] = 611;\n  t['oe'] = 944;\n  t['germandbls'] = 611;\n  t['Idieresis'] = 278;\n  t['eacute'] = 556;\n  t['abreve'] = 556;\n  t['uhungarumlaut'] = 556;\n  t['ecaron'] = 556;\n  t['Ydieresis'] = 667;\n  t['divide'] = 584;\n  t['Yacute'] = 667;\n  t['Acircumflex'] = 667;\n  t['aacute'] = 556;\n  t['Ucircumflex'] = 722;\n  t['yacute'] = 500;\n  t['scommaaccent'] = 500;\n  t['ecircumflex'] = 556;\n  t['Uring'] = 722;\n  t['Udieresis'] = 722;\n  t['aogonek'] = 556;\n  t['Uacute'] = 722;\n  t['uogonek'] = 556;\n  t['Edieresis'] = 667;\n  t['Dcroat'] = 722;\n  t['commaaccent'] = 250;\n  t['copyright'] = 737;\n  t['Emacron'] = 667;\n  t['ccaron'] = 500;\n  t['aring'] = 556;\n  t['Ncommaaccent'] = 722;\n  t['lacute'] = 222;\n  t['agrave'] = 556;\n  t['Tcommaaccent'] = 611;\n  t['Cacute'] = 722;\n  t['atilde'] = 556;\n  t['Edotaccent'] = 667;\n  t['scaron'] = 500;\n  t['scedilla'] = 500;\n  t['iacute'] = 278;\n  t['lozenge'] = 471;\n  t['Rcaron'] = 722;\n  t['Gcommaaccent'] = 778;\n  t['ucircumflex'] = 556;\n  t['acircumflex'] = 556;\n  t['Amacron'] = 667;\n  t['rcaron'] = 333;\n  t['ccedilla'] = 500;\n  t['Zdotaccent'] = 611;\n  t['Thorn'] = 667;\n  t['Omacron'] = 778;\n  t['Racute'] = 722;\n  t['Sacute'] = 667;\n  t['dcaron'] = 643;\n  t['Umacron'] = 722;\n  t['uring'] = 556;\n  t['threesuperior'] = 333;\n  t['Ograve'] = 778;\n  t['Agrave'] = 667;\n  t['Abreve'] = 667;\n  t['multiply'] = 584;\n  t['uacute'] = 556;\n  t['Tcaron'] = 611;\n  t['partialdiff'] = 476;\n  t['ydieresis'] = 500;\n  t['Nacute'] = 722;\n  t['icircumflex'] = 278;\n  t['Ecircumflex'] = 667;\n  t['adieresis'] = 556;\n  t['edieresis'] = 556;\n  t['cacute'] = 500;\n  t['nacute'] = 556;\n  t['umacron'] = 556;\n  t['Ncaron'] = 722;\n  t['Iacute'] = 278;\n  t['plusminus'] = 584;\n  t['brokenbar'] = 260;\n  t['registered'] = 737;\n  t['Gbreve'] = 778;\n  t['Idotaccent'] = 278;\n  t['summation'] = 600;\n  t['Egrave'] = 667;\n  t['racute'] = 333;\n  t['omacron'] = 556;\n  t['Zacute'] = 611;\n  t['Zcaron'] = 611;\n  t['greaterequal'] = 549;\n  t['Eth'] = 722;\n  t['Ccedilla'] = 722;\n  t['lcommaaccent'] = 222;\n  t['tcaron'] = 317;\n  t['eogonek'] = 556;\n  t['Uogonek'] = 722;\n  t['Aacute'] = 667;\n  t['Adieresis'] = 667;\n  t['egrave'] = 556;\n  t['zacute'] = 500;\n  t['iogonek'] = 222;\n  t['Oacute'] = 778;\n  t['oacute'] = 556;\n  t['amacron'] = 556;\n  t['sacute'] = 500;\n  t['idieresis'] = 278;\n  t['Ocircumflex'] = 778;\n  t['Ugrave'] = 722;\n  t['Delta'] = 612;\n  t['thorn'] = 556;\n  t['twosuperior'] = 333;\n  t['Odieresis'] = 778;\n  t['mu'] = 556;\n  t['igrave'] = 278;\n  t['ohungarumlaut'] = 556;\n  t['Eogonek'] = 667;\n  t['dcroat'] = 556;\n  t['threequarters'] = 834;\n  t['Scedilla'] = 667;\n  t['lcaron'] = 299;\n  t['Kcommaaccent'] = 667;\n  t['Lacute'] = 556;\n  t['trademark'] = 1000;\n  t['edotaccent'] = 556;\n  t['Igrave'] = 278;\n  t['Imacron'] = 278;\n  t['Lcaron'] = 556;\n  t['onehalf'] = 834;\n  t['lessequal'] = 549;\n  t['ocircumflex'] = 556;\n  t['ntilde'] = 556;\n  t['Uhungarumlaut'] = 722;\n  t['Eacute'] = 667;\n  t['emacron'] = 556;\n  t['gbreve'] = 556;\n  t['onequarter'] = 834;\n  t['Scaron'] = 667;\n  t['Scommaaccent'] = 667;\n  t['Ohungarumlaut'] = 778;\n  t['degree'] = 400;\n  t['ograve'] = 556;\n  t['Ccaron'] = 722;\n  t['ugrave'] = 556;\n  t['radical'] = 453;\n  t['Dcaron'] = 722;\n  t['rcommaaccent'] = 333;\n  t['Ntilde'] = 722;\n  t['otilde'] = 556;\n  t['Rcommaaccent'] = 722;\n  t['Lcommaaccent'] = 556;\n  t['Atilde'] = 667;\n  t['Aogonek'] = 667;\n  t['Aring'] = 667;\n  t['Otilde'] = 778;\n  t['zdotaccent'] = 500;\n  t['Ecaron'] = 667;\n  t['Iogonek'] = 278;\n  t['kcommaaccent'] = 500;\n  t['minus'] = 584;\n  t['Icircumflex'] = 278;\n  t['ncaron'] = 556;\n  t['tcommaaccent'] = 278;\n  t['logicalnot'] = 584;\n  t['odieresis'] = 556;\n  t['udieresis'] = 556;\n  t['notequal'] = 549;\n  t['gcommaaccent'] = 556;\n  t['eth'] = 556;\n  t['zcaron'] = 500;\n  t['ncommaaccent'] = 556;\n  t['onesuperior'] = 333;\n  t['imacron'] = 278;\n  t['Euro'] = 556;\n });\n t['Symbol'] = getLookupTableFactory(function (t) {\n  t['space'] = 250;\n  t['exclam'] = 333;\n  t['universal'] = 713;\n  t['numbersign'] = 500;\n  t['existential'] = 549;\n  t['percent'] = 833;\n  t['ampersand'] = 778;\n  t['suchthat'] = 439;\n  t['parenleft'] = 333;\n  t['parenright'] = 333;\n  t['asteriskmath'] = 500;\n  t['plus'] = 549;\n  t['comma'] = 250;\n  t['minus'] = 549;\n  t['period'] = 250;\n  t['slash'] = 278;\n  t['zero'] = 500;\n  t['one'] = 500;\n  t['two'] = 500;\n  t['three'] = 500;\n  t['four'] = 500;\n  t['five'] = 500;\n  t['six'] = 500;\n  t['seven'] = 500;\n  t['eight'] = 500;\n  t['nine'] = 500;\n  t['colon'] = 278;\n  t['semicolon'] = 278;\n  t['less'] = 549;\n  t['equal'] = 549;\n  t['greater'] = 549;\n  t['question'] = 444;\n  t['congruent'] = 549;\n  t['Alpha'] = 722;\n  t['Beta'] = 667;\n  t['Chi'] = 722;\n  t['Delta'] = 612;\n  t['Epsilon'] = 611;\n  t['Phi'] = 763;\n  t['Gamma'] = 603;\n  t['Eta'] = 722;\n  t['Iota'] = 333;\n  t['theta1'] = 631;\n  t['Kappa'] = 722;\n  t['Lambda'] = 686;\n  t['Mu'] = 889;\n  t['Nu'] = 722;\n  t['Omicron'] = 722;\n  t['Pi'] = 768;\n  t['Theta'] = 741;\n  t['Rho'] = 556;\n  t['Sigma'] = 592;\n  t['Tau'] = 611;\n  t['Upsilon'] = 690;\n  t['sigma1'] = 439;\n  t['Omega'] = 768;\n  t['Xi'] = 645;\n  t['Psi'] = 795;\n  t['Zeta'] = 611;\n  t['bracketleft'] = 333;\n  t['therefore'] = 863;\n  t['bracketright'] = 333;\n  t['perpendicular'] = 658;\n  t['underscore'] = 500;\n  t['radicalex'] = 500;\n  t['alpha'] = 631;\n  t['beta'] = 549;\n  t['chi'] = 549;\n  t['delta'] = 494;\n  t['epsilon'] = 439;\n  t['phi'] = 521;\n  t['gamma'] = 411;\n  t['eta'] = 603;\n  t['iota'] = 329;\n  t['phi1'] = 603;\n  t['kappa'] = 549;\n  t['lambda'] = 549;\n  t['mu'] = 576;\n  t['nu'] = 521;\n  t['omicron'] = 549;\n  t['pi'] = 549;\n  t['theta'] = 521;\n  t['rho'] = 549;\n  t['sigma'] = 603;\n  t['tau'] = 439;\n  t['upsilon'] = 576;\n  t['omega1'] = 713;\n  t['omega'] = 686;\n  t['xi'] = 493;\n  t['psi'] = 686;\n  t['zeta'] = 494;\n  t['braceleft'] = 480;\n  t['bar'] = 200;\n  t['braceright'] = 480;\n  t['similar'] = 549;\n  t['Euro'] = 750;\n  t['Upsilon1'] = 620;\n  t['minute'] = 247;\n  t['lessequal'] = 549;\n  t['fraction'] = 167;\n  t['infinity'] = 713;\n  t['florin'] = 500;\n  t['club'] = 753;\n  t['diamond'] = 753;\n  t['heart'] = 753;\n  t['spade'] = 753;\n  t['arrowboth'] = 1042;\n  t['arrowleft'] = 987;\n  t['arrowup'] = 603;\n  t['arrowright'] = 987;\n  t['arrowdown'] = 603;\n  t['degree'] = 400;\n  t['plusminus'] = 549;\n  t['second'] = 411;\n  t['greaterequal'] = 549;\n  t['multiply'] = 549;\n  t['proportional'] = 713;\n  t['partialdiff'] = 494;\n  t['bullet'] = 460;\n  t['divide'] = 549;\n  t['notequal'] = 549;\n  t['equivalence'] = 549;\n  t['approxequal'] = 549;\n  t['ellipsis'] = 1000;\n  t['arrowvertex'] = 603;\n  t['arrowhorizex'] = 1000;\n  t['carriagereturn'] = 658;\n  t['aleph'] = 823;\n  t['Ifraktur'] = 686;\n  t['Rfraktur'] = 795;\n  t['weierstrass'] = 987;\n  t['circlemultiply'] = 768;\n  t['circleplus'] = 768;\n  t['emptyset'] = 823;\n  t['intersection'] = 768;\n  t['union'] = 768;\n  t['propersuperset'] = 713;\n  t['reflexsuperset'] = 713;\n  t['notsubset'] = 713;\n  t['propersubset'] = 713;\n  t['reflexsubset'] = 713;\n  t['element'] = 713;\n  t['notelement'] = 713;\n  t['angle'] = 768;\n  t['gradient'] = 713;\n  t['registerserif'] = 790;\n  t['copyrightserif'] = 790;\n  t['trademarkserif'] = 890;\n  t['product'] = 823;\n  t['radical'] = 549;\n  t['dotmath'] = 250;\n  t['logicalnot'] = 713;\n  t['logicaland'] = 603;\n  t['logicalor'] = 603;\n  t['arrowdblboth'] = 1042;\n  t['arrowdblleft'] = 987;\n  t['arrowdblup'] = 603;\n  t['arrowdblright'] = 987;\n  t['arrowdbldown'] = 603;\n  t['lozenge'] = 494;\n  t['angleleft'] = 329;\n  t['registersans'] = 790;\n  t['copyrightsans'] = 790;\n  t['trademarksans'] = 786;\n  t['summation'] = 713;\n  t['parenlefttp'] = 384;\n  t['parenleftex'] = 384;\n  t['parenleftbt'] = 384;\n  t['bracketlefttp'] = 384;\n  t['bracketleftex'] = 384;\n  t['bracketleftbt'] = 384;\n  t['bracelefttp'] = 494;\n  t['braceleftmid'] = 494;\n  t['braceleftbt'] = 494;\n  t['braceex'] = 494;\n  t['angleright'] = 329;\n  t['integral'] = 274;\n  t['integraltp'] = 686;\n  t['integralex'] = 686;\n  t['integralbt'] = 686;\n  t['parenrighttp'] = 384;\n  t['parenrightex'] = 384;\n  t['parenrightbt'] = 384;\n  t['bracketrighttp'] = 384;\n  t['bracketrightex'] = 384;\n  t['bracketrightbt'] = 384;\n  t['bracerighttp'] = 494;\n  t['bracerightmid'] = 494;\n  t['bracerightbt'] = 494;\n  t['apple'] = 790;\n });\n t['Times-Roman'] = getLookupTableFactory(function (t) {\n  t['space'] = 250;\n  t['exclam'] = 333;\n  t['quotedbl'] = 408;\n  t['numbersign'] = 500;\n  t['dollar'] = 500;\n  t['percent'] = 833;\n  t['ampersand'] = 778;\n  t['quoteright'] = 333;\n  t['parenleft'] = 333;\n  t['parenright'] = 333;\n  t['asterisk'] = 500;\n  t['plus'] = 564;\n  t['comma'] = 250;\n  t['hyphen'] = 333;\n  t['period'] = 250;\n  t['slash'] = 278;\n  t['zero'] = 500;\n  t['one'] = 500;\n  t['two'] = 500;\n  t['three'] = 500;\n  t['four'] = 500;\n  t['five'] = 500;\n  t['six'] = 500;\n  t['seven'] = 500;\n  t['eight'] = 500;\n  t['nine'] = 500;\n  t['colon'] = 278;\n  t['semicolon'] = 278;\n  t['less'] = 564;\n  t['equal'] = 564;\n  t['greater'] = 564;\n  t['question'] = 444;\n  t['at'] = 921;\n  t['A'] = 722;\n  t['B'] = 667;\n  t['C'] = 667;\n  t['D'] = 722;\n  t['E'] = 611;\n  t['F'] = 556;\n  t['G'] = 722;\n  t['H'] = 722;\n  t['I'] = 333;\n  t['J'] = 389;\n  t['K'] = 722;\n  t['L'] = 611;\n  t['M'] = 889;\n  t['N'] = 722;\n  t['O'] = 722;\n  t['P'] = 556;\n  t['Q'] = 722;\n  t['R'] = 667;\n  t['S'] = 556;\n  t['T'] = 611;\n  t['U'] = 722;\n  t['V'] = 722;\n  t['W'] = 944;\n  t['X'] = 722;\n  t['Y'] = 722;\n  t['Z'] = 611;\n  t['bracketleft'] = 333;\n  t['backslash'] = 278;\n  t['bracketright'] = 333;\n  t['asciicircum'] = 469;\n  t['underscore'] = 500;\n  t['quoteleft'] = 333;\n  t['a'] = 444;\n  t['b'] = 500;\n  t['c'] = 444;\n  t['d'] = 500;\n  t['e'] = 444;\n  t['f'] = 333;\n  t['g'] = 500;\n  t['h'] = 500;\n  t['i'] = 278;\n  t['j'] = 278;\n  t['k'] = 500;\n  t['l'] = 278;\n  t['m'] = 778;\n  t['n'] = 500;\n  t['o'] = 500;\n  t['p'] = 500;\n  t['q'] = 500;\n  t['r'] = 333;\n  t['s'] = 389;\n  t['t'] = 278;\n  t['u'] = 500;\n  t['v'] = 500;\n  t['w'] = 722;\n  t['x'] = 500;\n  t['y'] = 500;\n  t['z'] = 444;\n  t['braceleft'] = 480;\n  t['bar'] = 200;\n  t['braceright'] = 480;\n  t['asciitilde'] = 541;\n  t['exclamdown'] = 333;\n  t['cent'] = 500;\n  t['sterling'] = 500;\n  t['fraction'] = 167;\n  t['yen'] = 500;\n  t['florin'] = 500;\n  t['section'] = 500;\n  t['currency'] = 500;\n  t['quotesingle'] = 180;\n  t['quotedblleft'] = 444;\n  t['guillemotleft'] = 500;\n  t['guilsinglleft'] = 333;\n  t['guilsinglright'] = 333;\n  t['fi'] = 556;\n  t['fl'] = 556;\n  t['endash'] = 500;\n  t['dagger'] = 500;\n  t['daggerdbl'] = 500;\n  t['periodcentered'] = 250;\n  t['paragraph'] = 453;\n  t['bullet'] = 350;\n  t['quotesinglbase'] = 333;\n  t['quotedblbase'] = 444;\n  t['quotedblright'] = 444;\n  t['guillemotright'] = 500;\n  t['ellipsis'] = 1000;\n  t['perthousand'] = 1000;\n  t['questiondown'] = 444;\n  t['grave'] = 333;\n  t['acute'] = 333;\n  t['circumflex'] = 333;\n  t['tilde'] = 333;\n  t['macron'] = 333;\n  t['breve'] = 333;\n  t['dotaccent'] = 333;\n  t['dieresis'] = 333;\n  t['ring'] = 333;\n  t['cedilla'] = 333;\n  t['hungarumlaut'] = 333;\n  t['ogonek'] = 333;\n  t['caron'] = 333;\n  t['emdash'] = 1000;\n  t['AE'] = 889;\n  t['ordfeminine'] = 276;\n  t['Lslash'] = 611;\n  t['Oslash'] = 722;\n  t['OE'] = 889;\n  t['ordmasculine'] = 310;\n  t['ae'] = 667;\n  t['dotlessi'] = 278;\n  t['lslash'] = 278;\n  t['oslash'] = 500;\n  t['oe'] = 722;\n  t['germandbls'] = 500;\n  t['Idieresis'] = 333;\n  t['eacute'] = 444;\n  t['abreve'] = 444;\n  t['uhungarumlaut'] = 500;\n  t['ecaron'] = 444;\n  t['Ydieresis'] = 722;\n  t['divide'] = 564;\n  t['Yacute'] = 722;\n  t['Acircumflex'] = 722;\n  t['aacute'] = 444;\n  t['Ucircumflex'] = 722;\n  t['yacute'] = 500;\n  t['scommaaccent'] = 389;\n  t['ecircumflex'] = 444;\n  t['Uring'] = 722;\n  t['Udieresis'] = 722;\n  t['aogonek'] = 444;\n  t['Uacute'] = 722;\n  t['uogonek'] = 500;\n  t['Edieresis'] = 611;\n  t['Dcroat'] = 722;\n  t['commaaccent'] = 250;\n  t['copyright'] = 760;\n  t['Emacron'] = 611;\n  t['ccaron'] = 444;\n  t['aring'] = 444;\n  t['Ncommaaccent'] = 722;\n  t['lacute'] = 278;\n  t['agrave'] = 444;\n  t['Tcommaaccent'] = 611;\n  t['Cacute'] = 667;\n  t['atilde'] = 444;\n  t['Edotaccent'] = 611;\n  t['scaron'] = 389;\n  t['scedilla'] = 389;\n  t['iacute'] = 278;\n  t['lozenge'] = 471;\n  t['Rcaron'] = 667;\n  t['Gcommaaccent'] = 722;\n  t['ucircumflex'] = 500;\n  t['acircumflex'] = 444;\n  t['Amacron'] = 722;\n  t['rcaron'] = 333;\n  t['ccedilla'] = 444;\n  t['Zdotaccent'] = 611;\n  t['Thorn'] = 556;\n  t['Omacron'] = 722;\n  t['Racute'] = 667;\n  t['Sacute'] = 556;\n  t['dcaron'] = 588;\n  t['Umacron'] = 722;\n  t['uring'] = 500;\n  t['threesuperior'] = 300;\n  t['Ograve'] = 722;\n  t['Agrave'] = 722;\n  t['Abreve'] = 722;\n  t['multiply'] = 564;\n  t['uacute'] = 500;\n  t['Tcaron'] = 611;\n  t['partialdiff'] = 476;\n  t['ydieresis'] = 500;\n  t['Nacute'] = 722;\n  t['icircumflex'] = 278;\n  t['Ecircumflex'] = 611;\n  t['adieresis'] = 444;\n  t['edieresis'] = 444;\n  t['cacute'] = 444;\n  t['nacute'] = 500;\n  t['umacron'] = 500;\n  t['Ncaron'] = 722;\n  t['Iacute'] = 333;\n  t['plusminus'] = 564;\n  t['brokenbar'] = 200;\n  t['registered'] = 760;\n  t['Gbreve'] = 722;\n  t['Idotaccent'] = 333;\n  t['summation'] = 600;\n  t['Egrave'] = 611;\n  t['racute'] = 333;\n  t['omacron'] = 500;\n  t['Zacute'] = 611;\n  t['Zcaron'] = 611;\n  t['greaterequal'] = 549;\n  t['Eth'] = 722;\n  t['Ccedilla'] = 667;\n  t['lcommaaccent'] = 278;\n  t['tcaron'] = 326;\n  t['eogonek'] = 444;\n  t['Uogonek'] = 722;\n  t['Aacute'] = 722;\n  t['Adieresis'] = 722;\n  t['egrave'] = 444;\n  t['zacute'] = 444;\n  t['iogonek'] = 278;\n  t['Oacute'] = 722;\n  t['oacute'] = 500;\n  t['amacron'] = 444;\n  t['sacute'] = 389;\n  t['idieresis'] = 278;\n  t['Ocircumflex'] = 722;\n  t['Ugrave'] = 722;\n  t['Delta'] = 612;\n  t['thorn'] = 500;\n  t['twosuperior'] = 300;\n  t['Odieresis'] = 722;\n  t['mu'] = 500;\n  t['igrave'] = 278;\n  t['ohungarumlaut'] = 500;\n  t['Eogonek'] = 611;\n  t['dcroat'] = 500;\n  t['threequarters'] = 750;\n  t['Scedilla'] = 556;\n  t['lcaron'] = 344;\n  t['Kcommaaccent'] = 722;\n  t['Lacute'] = 611;\n  t['trademark'] = 980;\n  t['edotaccent'] = 444;\n  t['Igrave'] = 333;\n  t['Imacron'] = 333;\n  t['Lcaron'] = 611;\n  t['onehalf'] = 750;\n  t['lessequal'] = 549;\n  t['ocircumflex'] = 500;\n  t['ntilde'] = 500;\n  t['Uhungarumlaut'] = 722;\n  t['Eacute'] = 611;\n  t['emacron'] = 444;\n  t['gbreve'] = 500;\n  t['onequarter'] = 750;\n  t['Scaron'] = 556;\n  t['Scommaaccent'] = 556;\n  t['Ohungarumlaut'] = 722;\n  t['degree'] = 400;\n  t['ograve'] = 500;\n  t['Ccaron'] = 667;\n  t['ugrave'] = 500;\n  t['radical'] = 453;\n  t['Dcaron'] = 722;\n  t['rcommaaccent'] = 333;\n  t['Ntilde'] = 722;\n  t['otilde'] = 500;\n  t['Rcommaaccent'] = 667;\n  t['Lcommaaccent'] = 611;\n  t['Atilde'] = 722;\n  t['Aogonek'] = 722;\n  t['Aring'] = 722;\n  t['Otilde'] = 722;\n  t['zdotaccent'] = 444;\n  t['Ecaron'] = 611;\n  t['Iogonek'] = 333;\n  t['kcommaaccent'] = 500;\n  t['minus'] = 564;\n  t['Icircumflex'] = 333;\n  t['ncaron'] = 500;\n  t['tcommaaccent'] = 278;\n  t['logicalnot'] = 564;\n  t['odieresis'] = 500;\n  t['udieresis'] = 500;\n  t['notequal'] = 549;\n  t['gcommaaccent'] = 500;\n  t['eth'] = 500;\n  t['zcaron'] = 444;\n  t['ncommaaccent'] = 500;\n  t['onesuperior'] = 300;\n  t['imacron'] = 278;\n  t['Euro'] = 500;\n });\n t['Times-Bold'] = getLookupTableFactory(function (t) {\n  t['space'] = 250;\n  t['exclam'] = 333;\n  t['quotedbl'] = 555;\n  t['numbersign'] = 500;\n  t['dollar'] = 500;\n  t['percent'] = 1000;\n  t['ampersand'] = 833;\n  t['quoteright'] = 333;\n  t['parenleft'] = 333;\n  t['parenright'] = 333;\n  t['asterisk'] = 500;\n  t['plus'] = 570;\n  t['comma'] = 250;\n  t['hyphen'] = 333;\n  t['period'] = 250;\n  t['slash'] = 278;\n  t['zero'] = 500;\n  t['one'] = 500;\n  t['two'] = 500;\n  t['three'] = 500;\n  t['four'] = 500;\n  t['five'] = 500;\n  t['six'] = 500;\n  t['seven'] = 500;\n  t['eight'] = 500;\n  t['nine'] = 500;\n  t['colon'] = 333;\n  t['semicolon'] = 333;\n  t['less'] = 570;\n  t['equal'] = 570;\n  t['greater'] = 570;\n  t['question'] = 500;\n  t['at'] = 930;\n  t['A'] = 722;\n  t['B'] = 667;\n  t['C'] = 722;\n  t['D'] = 722;\n  t['E'] = 667;\n  t['F'] = 611;\n  t['G'] = 778;\n  t['H'] = 778;\n  t['I'] = 389;\n  t['J'] = 500;\n  t['K'] = 778;\n  t['L'] = 667;\n  t['M'] = 944;\n  t['N'] = 722;\n  t['O'] = 778;\n  t['P'] = 611;\n  t['Q'] = 778;\n  t['R'] = 722;\n  t['S'] = 556;\n  t['T'] = 667;\n  t['U'] = 722;\n  t['V'] = 722;\n  t['W'] = 1000;\n  t['X'] = 722;\n  t['Y'] = 722;\n  t['Z'] = 667;\n  t['bracketleft'] = 333;\n  t['backslash'] = 278;\n  t['bracketright'] = 333;\n  t['asciicircum'] = 581;\n  t['underscore'] = 500;\n  t['quoteleft'] = 333;\n  t['a'] = 500;\n  t['b'] = 556;\n  t['c'] = 444;\n  t['d'] = 556;\n  t['e'] = 444;\n  t['f'] = 333;\n  t['g'] = 500;\n  t['h'] = 556;\n  t['i'] = 278;\n  t['j'] = 333;\n  t['k'] = 556;\n  t['l'] = 278;\n  t['m'] = 833;\n  t['n'] = 556;\n  t['o'] = 500;\n  t['p'] = 556;\n  t['q'] = 556;\n  t['r'] = 444;\n  t['s'] = 389;\n  t['t'] = 333;\n  t['u'] = 556;\n  t['v'] = 500;\n  t['w'] = 722;\n  t['x'] = 500;\n  t['y'] = 500;\n  t['z'] = 444;\n  t['braceleft'] = 394;\n  t['bar'] = 220;\n  t['braceright'] = 394;\n  t['asciitilde'] = 520;\n  t['exclamdown'] = 333;\n  t['cent'] = 500;\n  t['sterling'] = 500;\n  t['fraction'] = 167;\n  t['yen'] = 500;\n  t['florin'] = 500;\n  t['section'] = 500;\n  t['currency'] = 500;\n  t['quotesingle'] = 278;\n  t['quotedblleft'] = 500;\n  t['guillemotleft'] = 500;\n  t['guilsinglleft'] = 333;\n  t['guilsinglright'] = 333;\n  t['fi'] = 556;\n  t['fl'] = 556;\n  t['endash'] = 500;\n  t['dagger'] = 500;\n  t['daggerdbl'] = 500;\n  t['periodcentered'] = 250;\n  t['paragraph'] = 540;\n  t['bullet'] = 350;\n  t['quotesinglbase'] = 333;\n  t['quotedblbase'] = 500;\n  t['quotedblright'] = 500;\n  t['guillemotright'] = 500;\n  t['ellipsis'] = 1000;\n  t['perthousand'] = 1000;\n  t['questiondown'] = 500;\n  t['grave'] = 333;\n  t['acute'] = 333;\n  t['circumflex'] = 333;\n  t['tilde'] = 333;\n  t['macron'] = 333;\n  t['breve'] = 333;\n  t['dotaccent'] = 333;\n  t['dieresis'] = 333;\n  t['ring'] = 333;\n  t['cedilla'] = 333;\n  t['hungarumlaut'] = 333;\n  t['ogonek'] = 333;\n  t['caron'] = 333;\n  t['emdash'] = 1000;\n  t['AE'] = 1000;\n  t['ordfeminine'] = 300;\n  t['Lslash'] = 667;\n  t['Oslash'] = 778;\n  t['OE'] = 1000;\n  t['ordmasculine'] = 330;\n  t['ae'] = 722;\n  t['dotlessi'] = 278;\n  t['lslash'] = 278;\n  t['oslash'] = 500;\n  t['oe'] = 722;\n  t['germandbls'] = 556;\n  t['Idieresis'] = 389;\n  t['eacute'] = 444;\n  t['abreve'] = 500;\n  t['uhungarumlaut'] = 556;\n  t['ecaron'] = 444;\n  t['Ydieresis'] = 722;\n  t['divide'] = 570;\n  t['Yacute'] = 722;\n  t['Acircumflex'] = 722;\n  t['aacute'] = 500;\n  t['Ucircumflex'] = 722;\n  t['yacute'] = 500;\n  t['scommaaccent'] = 389;\n  t['ecircumflex'] = 444;\n  t['Uring'] = 722;\n  t['Udieresis'] = 722;\n  t['aogonek'] = 500;\n  t['Uacute'] = 722;\n  t['uogonek'] = 556;\n  t['Edieresis'] = 667;\n  t['Dcroat'] = 722;\n  t['commaaccent'] = 250;\n  t['copyright'] = 747;\n  t['Emacron'] = 667;\n  t['ccaron'] = 444;\n  t['aring'] = 500;\n  t['Ncommaaccent'] = 722;\n  t['lacute'] = 278;\n  t['agrave'] = 500;\n  t['Tcommaaccent'] = 667;\n  t['Cacute'] = 722;\n  t['atilde'] = 500;\n  t['Edotaccent'] = 667;\n  t['scaron'] = 389;\n  t['scedilla'] = 389;\n  t['iacute'] = 278;\n  t['lozenge'] = 494;\n  t['Rcaron'] = 722;\n  t['Gcommaaccent'] = 778;\n  t['ucircumflex'] = 556;\n  t['acircumflex'] = 500;\n  t['Amacron'] = 722;\n  t['rcaron'] = 444;\n  t['ccedilla'] = 444;\n  t['Zdotaccent'] = 667;\n  t['Thorn'] = 611;\n  t['Omacron'] = 778;\n  t['Racute'] = 722;\n  t['Sacute'] = 556;\n  t['dcaron'] = 672;\n  t['Umacron'] = 722;\n  t['uring'] = 556;\n  t['threesuperior'] = 300;\n  t['Ograve'] = 778;\n  t['Agrave'] = 722;\n  t['Abreve'] = 722;\n  t['multiply'] = 570;\n  t['uacute'] = 556;\n  t['Tcaron'] = 667;\n  t['partialdiff'] = 494;\n  t['ydieresis'] = 500;\n  t['Nacute'] = 722;\n  t['icircumflex'] = 278;\n  t['Ecircumflex'] = 667;\n  t['adieresis'] = 500;\n  t['edieresis'] = 444;\n  t['cacute'] = 444;\n  t['nacute'] = 556;\n  t['umacron'] = 556;\n  t['Ncaron'] = 722;\n  t['Iacute'] = 389;\n  t['plusminus'] = 570;\n  t['brokenbar'] = 220;\n  t['registered'] = 747;\n  t['Gbreve'] = 778;\n  t['Idotaccent'] = 389;\n  t['summation'] = 600;\n  t['Egrave'] = 667;\n  t['racute'] = 444;\n  t['omacron'] = 500;\n  t['Zacute'] = 667;\n  t['Zcaron'] = 667;\n  t['greaterequal'] = 549;\n  t['Eth'] = 722;\n  t['Ccedilla'] = 722;\n  t['lcommaaccent'] = 278;\n  t['tcaron'] = 416;\n  t['eogonek'] = 444;\n  t['Uogonek'] = 722;\n  t['Aacute'] = 722;\n  t['Adieresis'] = 722;\n  t['egrave'] = 444;\n  t['zacute'] = 444;\n  t['iogonek'] = 278;\n  t['Oacute'] = 778;\n  t['oacute'] = 500;\n  t['amacron'] = 500;\n  t['sacute'] = 389;\n  t['idieresis'] = 278;\n  t['Ocircumflex'] = 778;\n  t['Ugrave'] = 722;\n  t['Delta'] = 612;\n  t['thorn'] = 556;\n  t['twosuperior'] = 300;\n  t['Odieresis'] = 778;\n  t['mu'] = 556;\n  t['igrave'] = 278;\n  t['ohungarumlaut'] = 500;\n  t['Eogonek'] = 667;\n  t['dcroat'] = 556;\n  t['threequarters'] = 750;\n  t['Scedilla'] = 556;\n  t['lcaron'] = 394;\n  t['Kcommaaccent'] = 778;\n  t['Lacute'] = 667;\n  t['trademark'] = 1000;\n  t['edotaccent'] = 444;\n  t['Igrave'] = 389;\n  t['Imacron'] = 389;\n  t['Lcaron'] = 667;\n  t['onehalf'] = 750;\n  t['lessequal'] = 549;\n  t['ocircumflex'] = 500;\n  t['ntilde'] = 556;\n  t['Uhungarumlaut'] = 722;\n  t['Eacute'] = 667;\n  t['emacron'] = 444;\n  t['gbreve'] = 500;\n  t['onequarter'] = 750;\n  t['Scaron'] = 556;\n  t['Scommaaccent'] = 556;\n  t['Ohungarumlaut'] = 778;\n  t['degree'] = 400;\n  t['ograve'] = 500;\n  t['Ccaron'] = 722;\n  t['ugrave'] = 556;\n  t['radical'] = 549;\n  t['Dcaron'] = 722;\n  t['rcommaaccent'] = 444;\n  t['Ntilde'] = 722;\n  t['otilde'] = 500;\n  t['Rcommaaccent'] = 722;\n  t['Lcommaaccent'] = 667;\n  t['Atilde'] = 722;\n  t['Aogonek'] = 722;\n  t['Aring'] = 722;\n  t['Otilde'] = 778;\n  t['zdotaccent'] = 444;\n  t['Ecaron'] = 667;\n  t['Iogonek'] = 389;\n  t['kcommaaccent'] = 556;\n  t['minus'] = 570;\n  t['Icircumflex'] = 389;\n  t['ncaron'] = 556;\n  t['tcommaaccent'] = 333;\n  t['logicalnot'] = 570;\n  t['odieresis'] = 500;\n  t['udieresis'] = 556;\n  t['notequal'] = 549;\n  t['gcommaaccent'] = 500;\n  t['eth'] = 500;\n  t['zcaron'] = 444;\n  t['ncommaaccent'] = 556;\n  t['onesuperior'] = 300;\n  t['imacron'] = 278;\n  t['Euro'] = 500;\n });\n t['Times-BoldItalic'] = getLookupTableFactory(function (t) {\n  t['space'] = 250;\n  t['exclam'] = 389;\n  t['quotedbl'] = 555;\n  t['numbersign'] = 500;\n  t['dollar'] = 500;\n  t['percent'] = 833;\n  t['ampersand'] = 778;\n  t['quoteright'] = 333;\n  t['parenleft'] = 333;\n  t['parenright'] = 333;\n  t['asterisk'] = 500;\n  t['plus'] = 570;\n  t['comma'] = 250;\n  t['hyphen'] = 333;\n  t['period'] = 250;\n  t['slash'] = 278;\n  t['zero'] = 500;\n  t['one'] = 500;\n  t['two'] = 500;\n  t['three'] = 500;\n  t['four'] = 500;\n  t['five'] = 500;\n  t['six'] = 500;\n  t['seven'] = 500;\n  t['eight'] = 500;\n  t['nine'] = 500;\n  t['colon'] = 333;\n  t['semicolon'] = 333;\n  t['less'] = 570;\n  t['equal'] = 570;\n  t['greater'] = 570;\n  t['question'] = 500;\n  t['at'] = 832;\n  t['A'] = 667;\n  t['B'] = 667;\n  t['C'] = 667;\n  t['D'] = 722;\n  t['E'] = 667;\n  t['F'] = 667;\n  t['G'] = 722;\n  t['H'] = 778;\n  t['I'] = 389;\n  t['J'] = 500;\n  t['K'] = 667;\n  t['L'] = 611;\n  t['M'] = 889;\n  t['N'] = 722;\n  t['O'] = 722;\n  t['P'] = 611;\n  t['Q'] = 722;\n  t['R'] = 667;\n  t['S'] = 556;\n  t['T'] = 611;\n  t['U'] = 722;\n  t['V'] = 667;\n  t['W'] = 889;\n  t['X'] = 667;\n  t['Y'] = 611;\n  t['Z'] = 611;\n  t['bracketleft'] = 333;\n  t['backslash'] = 278;\n  t['bracketright'] = 333;\n  t['asciicircum'] = 570;\n  t['underscore'] = 500;\n  t['quoteleft'] = 333;\n  t['a'] = 500;\n  t['b'] = 500;\n  t['c'] = 444;\n  t['d'] = 500;\n  t['e'] = 444;\n  t['f'] = 333;\n  t['g'] = 500;\n  t['h'] = 556;\n  t['i'] = 278;\n  t['j'] = 278;\n  t['k'] = 500;\n  t['l'] = 278;\n  t['m'] = 778;\n  t['n'] = 556;\n  t['o'] = 500;\n  t['p'] = 500;\n  t['q'] = 500;\n  t['r'] = 389;\n  t['s'] = 389;\n  t['t'] = 278;\n  t['u'] = 556;\n  t['v'] = 444;\n  t['w'] = 667;\n  t['x'] = 500;\n  t['y'] = 444;\n  t['z'] = 389;\n  t['braceleft'] = 348;\n  t['bar'] = 220;\n  t['braceright'] = 348;\n  t['asciitilde'] = 570;\n  t['exclamdown'] = 389;\n  t['cent'] = 500;\n  t['sterling'] = 500;\n  t['fraction'] = 167;\n  t['yen'] = 500;\n  t['florin'] = 500;\n  t['section'] = 500;\n  t['currency'] = 500;\n  t['quotesingle'] = 278;\n  t['quotedblleft'] = 500;\n  t['guillemotleft'] = 500;\n  t['guilsinglleft'] = 333;\n  t['guilsinglright'] = 333;\n  t['fi'] = 556;\n  t['fl'] = 556;\n  t['endash'] = 500;\n  t['dagger'] = 500;\n  t['daggerdbl'] = 500;\n  t['periodcentered'] = 250;\n  t['paragraph'] = 500;\n  t['bullet'] = 350;\n  t['quotesinglbase'] = 333;\n  t['quotedblbase'] = 500;\n  t['quotedblright'] = 500;\n  t['guillemotright'] = 500;\n  t['ellipsis'] = 1000;\n  t['perthousand'] = 1000;\n  t['questiondown'] = 500;\n  t['grave'] = 333;\n  t['acute'] = 333;\n  t['circumflex'] = 333;\n  t['tilde'] = 333;\n  t['macron'] = 333;\n  t['breve'] = 333;\n  t['dotaccent'] = 333;\n  t['dieresis'] = 333;\n  t['ring'] = 333;\n  t['cedilla'] = 333;\n  t['hungarumlaut'] = 333;\n  t['ogonek'] = 333;\n  t['caron'] = 333;\n  t['emdash'] = 1000;\n  t['AE'] = 944;\n  t['ordfeminine'] = 266;\n  t['Lslash'] = 611;\n  t['Oslash'] = 722;\n  t['OE'] = 944;\n  t['ordmasculine'] = 300;\n  t['ae'] = 722;\n  t['dotlessi'] = 278;\n  t['lslash'] = 278;\n  t['oslash'] = 500;\n  t['oe'] = 722;\n  t['germandbls'] = 500;\n  t['Idieresis'] = 389;\n  t['eacute'] = 444;\n  t['abreve'] = 500;\n  t['uhungarumlaut'] = 556;\n  t['ecaron'] = 444;\n  t['Ydieresis'] = 611;\n  t['divide'] = 570;\n  t['Yacute'] = 611;\n  t['Acircumflex'] = 667;\n  t['aacute'] = 500;\n  t['Ucircumflex'] = 722;\n  t['yacute'] = 444;\n  t['scommaaccent'] = 389;\n  t['ecircumflex'] = 444;\n  t['Uring'] = 722;\n  t['Udieresis'] = 722;\n  t['aogonek'] = 500;\n  t['Uacute'] = 722;\n  t['uogonek'] = 556;\n  t['Edieresis'] = 667;\n  t['Dcroat'] = 722;\n  t['commaaccent'] = 250;\n  t['copyright'] = 747;\n  t['Emacron'] = 667;\n  t['ccaron'] = 444;\n  t['aring'] = 500;\n  t['Ncommaaccent'] = 722;\n  t['lacute'] = 278;\n  t['agrave'] = 500;\n  t['Tcommaaccent'] = 611;\n  t['Cacute'] = 667;\n  t['atilde'] = 500;\n  t['Edotaccent'] = 667;\n  t['scaron'] = 389;\n  t['scedilla'] = 389;\n  t['iacute'] = 278;\n  t['lozenge'] = 494;\n  t['Rcaron'] = 667;\n  t['Gcommaaccent'] = 722;\n  t['ucircumflex'] = 556;\n  t['acircumflex'] = 500;\n  t['Amacron'] = 667;\n  t['rcaron'] = 389;\n  t['ccedilla'] = 444;\n  t['Zdotaccent'] = 611;\n  t['Thorn'] = 611;\n  t['Omacron'] = 722;\n  t['Racute'] = 667;\n  t['Sacute'] = 556;\n  t['dcaron'] = 608;\n  t['Umacron'] = 722;\n  t['uring'] = 556;\n  t['threesuperior'] = 300;\n  t['Ograve'] = 722;\n  t['Agrave'] = 667;\n  t['Abreve'] = 667;\n  t['multiply'] = 570;\n  t['uacute'] = 556;\n  t['Tcaron'] = 611;\n  t['partialdiff'] = 494;\n  t['ydieresis'] = 444;\n  t['Nacute'] = 722;\n  t['icircumflex'] = 278;\n  t['Ecircumflex'] = 667;\n  t['adieresis'] = 500;\n  t['edieresis'] = 444;\n  t['cacute'] = 444;\n  t['nacute'] = 556;\n  t['umacron'] = 556;\n  t['Ncaron'] = 722;\n  t['Iacute'] = 389;\n  t['plusminus'] = 570;\n  t['brokenbar'] = 220;\n  t['registered'] = 747;\n  t['Gbreve'] = 722;\n  t['Idotaccent'] = 389;\n  t['summation'] = 600;\n  t['Egrave'] = 667;\n  t['racute'] = 389;\n  t['omacron'] = 500;\n  t['Zacute'] = 611;\n  t['Zcaron'] = 611;\n  t['greaterequal'] = 549;\n  t['Eth'] = 722;\n  t['Ccedilla'] = 667;\n  t['lcommaaccent'] = 278;\n  t['tcaron'] = 366;\n  t['eogonek'] = 444;\n  t['Uogonek'] = 722;\n  t['Aacute'] = 667;\n  t['Adieresis'] = 667;\n  t['egrave'] = 444;\n  t['zacute'] = 389;\n  t['iogonek'] = 278;\n  t['Oacute'] = 722;\n  t['oacute'] = 500;\n  t['amacron'] = 500;\n  t['sacute'] = 389;\n  t['idieresis'] = 278;\n  t['Ocircumflex'] = 722;\n  t['Ugrave'] = 722;\n  t['Delta'] = 612;\n  t['thorn'] = 500;\n  t['twosuperior'] = 300;\n  t['Odieresis'] = 722;\n  t['mu'] = 576;\n  t['igrave'] = 278;\n  t['ohungarumlaut'] = 500;\n  t['Eogonek'] = 667;\n  t['dcroat'] = 500;\n  t['threequarters'] = 750;\n  t['Scedilla'] = 556;\n  t['lcaron'] = 382;\n  t['Kcommaaccent'] = 667;\n  t['Lacute'] = 611;\n  t['trademark'] = 1000;\n  t['edotaccent'] = 444;\n  t['Igrave'] = 389;\n  t['Imacron'] = 389;\n  t['Lcaron'] = 611;\n  t['onehalf'] = 750;\n  t['lessequal'] = 549;\n  t['ocircumflex'] = 500;\n  t['ntilde'] = 556;\n  t['Uhungarumlaut'] = 722;\n  t['Eacute'] = 667;\n  t['emacron'] = 444;\n  t['gbreve'] = 500;\n  t['onequarter'] = 750;\n  t['Scaron'] = 556;\n  t['Scommaaccent'] = 556;\n  t['Ohungarumlaut'] = 722;\n  t['degree'] = 400;\n  t['ograve'] = 500;\n  t['Ccaron'] = 667;\n  t['ugrave'] = 556;\n  t['radical'] = 549;\n  t['Dcaron'] = 722;\n  t['rcommaaccent'] = 389;\n  t['Ntilde'] = 722;\n  t['otilde'] = 500;\n  t['Rcommaaccent'] = 667;\n  t['Lcommaaccent'] = 611;\n  t['Atilde'] = 667;\n  t['Aogonek'] = 667;\n  t['Aring'] = 667;\n  t['Otilde'] = 722;\n  t['zdotaccent'] = 389;\n  t['Ecaron'] = 667;\n  t['Iogonek'] = 389;\n  t['kcommaaccent'] = 500;\n  t['minus'] = 606;\n  t['Icircumflex'] = 389;\n  t['ncaron'] = 556;\n  t['tcommaaccent'] = 278;\n  t['logicalnot'] = 606;\n  t['odieresis'] = 500;\n  t['udieresis'] = 556;\n  t['notequal'] = 549;\n  t['gcommaaccent'] = 500;\n  t['eth'] = 500;\n  t['zcaron'] = 389;\n  t['ncommaaccent'] = 556;\n  t['onesuperior'] = 300;\n  t['imacron'] = 278;\n  t['Euro'] = 500;\n });\n t['Times-Italic'] = getLookupTableFactory(function (t) {\n  t['space'] = 250;\n  t['exclam'] = 333;\n  t['quotedbl'] = 420;\n  t['numbersign'] = 500;\n  t['dollar'] = 500;\n  t['percent'] = 833;\n  t['ampersand'] = 778;\n  t['quoteright'] = 333;\n  t['parenleft'] = 333;\n  t['parenright'] = 333;\n  t['asterisk'] = 500;\n  t['plus'] = 675;\n  t['comma'] = 250;\n  t['hyphen'] = 333;\n  t['period'] = 250;\n  t['slash'] = 278;\n  t['zero'] = 500;\n  t['one'] = 500;\n  t['two'] = 500;\n  t['three'] = 500;\n  t['four'] = 500;\n  t['five'] = 500;\n  t['six'] = 500;\n  t['seven'] = 500;\n  t['eight'] = 500;\n  t['nine'] = 500;\n  t['colon'] = 333;\n  t['semicolon'] = 333;\n  t['less'] = 675;\n  t['equal'] = 675;\n  t['greater'] = 675;\n  t['question'] = 500;\n  t['at'] = 920;\n  t['A'] = 611;\n  t['B'] = 611;\n  t['C'] = 667;\n  t['D'] = 722;\n  t['E'] = 611;\n  t['F'] = 611;\n  t['G'] = 722;\n  t['H'] = 722;\n  t['I'] = 333;\n  t['J'] = 444;\n  t['K'] = 667;\n  t['L'] = 556;\n  t['M'] = 833;\n  t['N'] = 667;\n  t['O'] = 722;\n  t['P'] = 611;\n  t['Q'] = 722;\n  t['R'] = 611;\n  t['S'] = 500;\n  t['T'] = 556;\n  t['U'] = 722;\n  t['V'] = 611;\n  t['W'] = 833;\n  t['X'] = 611;\n  t['Y'] = 556;\n  t['Z'] = 556;\n  t['bracketleft'] = 389;\n  t['backslash'] = 278;\n  t['bracketright'] = 389;\n  t['asciicircum'] = 422;\n  t['underscore'] = 500;\n  t['quoteleft'] = 333;\n  t['a'] = 500;\n  t['b'] = 500;\n  t['c'] = 444;\n  t['d'] = 500;\n  t['e'] = 444;\n  t['f'] = 278;\n  t['g'] = 500;\n  t['h'] = 500;\n  t['i'] = 278;\n  t['j'] = 278;\n  t['k'] = 444;\n  t['l'] = 278;\n  t['m'] = 722;\n  t['n'] = 500;\n  t['o'] = 500;\n  t['p'] = 500;\n  t['q'] = 500;\n  t['r'] = 389;\n  t['s'] = 389;\n  t['t'] = 278;\n  t['u'] = 500;\n  t['v'] = 444;\n  t['w'] = 667;\n  t['x'] = 444;\n  t['y'] = 444;\n  t['z'] = 389;\n  t['braceleft'] = 400;\n  t['bar'] = 275;\n  t['braceright'] = 400;\n  t['asciitilde'] = 541;\n  t['exclamdown'] = 389;\n  t['cent'] = 500;\n  t['sterling'] = 500;\n  t['fraction'] = 167;\n  t['yen'] = 500;\n  t['florin'] = 500;\n  t['section'] = 500;\n  t['currency'] = 500;\n  t['quotesingle'] = 214;\n  t['quotedblleft'] = 556;\n  t['guillemotleft'] = 500;\n  t['guilsinglleft'] = 333;\n  t['guilsinglright'] = 333;\n  t['fi'] = 500;\n  t['fl'] = 500;\n  t['endash'] = 500;\n  t['dagger'] = 500;\n  t['daggerdbl'] = 500;\n  t['periodcentered'] = 250;\n  t['paragraph'] = 523;\n  t['bullet'] = 350;\n  t['quotesinglbase'] = 333;\n  t['quotedblbase'] = 556;\n  t['quotedblright'] = 556;\n  t['guillemotright'] = 500;\n  t['ellipsis'] = 889;\n  t['perthousand'] = 1000;\n  t['questiondown'] = 500;\n  t['grave'] = 333;\n  t['acute'] = 333;\n  t['circumflex'] = 333;\n  t['tilde'] = 333;\n  t['macron'] = 333;\n  t['breve'] = 333;\n  t['dotaccent'] = 333;\n  t['dieresis'] = 333;\n  t['ring'] = 333;\n  t['cedilla'] = 333;\n  t['hungarumlaut'] = 333;\n  t['ogonek'] = 333;\n  t['caron'] = 333;\n  t['emdash'] = 889;\n  t['AE'] = 889;\n  t['ordfeminine'] = 276;\n  t['Lslash'] = 556;\n  t['Oslash'] = 722;\n  t['OE'] = 944;\n  t['ordmasculine'] = 310;\n  t['ae'] = 667;\n  t['dotlessi'] = 278;\n  t['lslash'] = 278;\n  t['oslash'] = 500;\n  t['oe'] = 667;\n  t['germandbls'] = 500;\n  t['Idieresis'] = 333;\n  t['eacute'] = 444;\n  t['abreve'] = 500;\n  t['uhungarumlaut'] = 500;\n  t['ecaron'] = 444;\n  t['Ydieresis'] = 556;\n  t['divide'] = 675;\n  t['Yacute'] = 556;\n  t['Acircumflex'] = 611;\n  t['aacute'] = 500;\n  t['Ucircumflex'] = 722;\n  t['yacute'] = 444;\n  t['scommaaccent'] = 389;\n  t['ecircumflex'] = 444;\n  t['Uring'] = 722;\n  t['Udieresis'] = 722;\n  t['aogonek'] = 500;\n  t['Uacute'] = 722;\n  t['uogonek'] = 500;\n  t['Edieresis'] = 611;\n  t['Dcroat'] = 722;\n  t['commaaccent'] = 250;\n  t['copyright'] = 760;\n  t['Emacron'] = 611;\n  t['ccaron'] = 444;\n  t['aring'] = 500;\n  t['Ncommaaccent'] = 667;\n  t['lacute'] = 278;\n  t['agrave'] = 500;\n  t['Tcommaaccent'] = 556;\n  t['Cacute'] = 667;\n  t['atilde'] = 500;\n  t['Edotaccent'] = 611;\n  t['scaron'] = 389;\n  t['scedilla'] = 389;\n  t['iacute'] = 278;\n  t['lozenge'] = 471;\n  t['Rcaron'] = 611;\n  t['Gcommaaccent'] = 722;\n  t['ucircumflex'] = 500;\n  t['acircumflex'] = 500;\n  t['Amacron'] = 611;\n  t['rcaron'] = 389;\n  t['ccedilla'] = 444;\n  t['Zdotaccent'] = 556;\n  t['Thorn'] = 611;\n  t['Omacron'] = 722;\n  t['Racute'] = 611;\n  t['Sacute'] = 500;\n  t['dcaron'] = 544;\n  t['Umacron'] = 722;\n  t['uring'] = 500;\n  t['threesuperior'] = 300;\n  t['Ograve'] = 722;\n  t['Agrave'] = 611;\n  t['Abreve'] = 611;\n  t['multiply'] = 675;\n  t['uacute'] = 500;\n  t['Tcaron'] = 556;\n  t['partialdiff'] = 476;\n  t['ydieresis'] = 444;\n  t['Nacute'] = 667;\n  t['icircumflex'] = 278;\n  t['Ecircumflex'] = 611;\n  t['adieresis'] = 500;\n  t['edieresis'] = 444;\n  t['cacute'] = 444;\n  t['nacute'] = 500;\n  t['umacron'] = 500;\n  t['Ncaron'] = 667;\n  t['Iacute'] = 333;\n  t['plusminus'] = 675;\n  t['brokenbar'] = 275;\n  t['registered'] = 760;\n  t['Gbreve'] = 722;\n  t['Idotaccent'] = 333;\n  t['summation'] = 600;\n  t['Egrave'] = 611;\n  t['racute'] = 389;\n  t['omacron'] = 500;\n  t['Zacute'] = 556;\n  t['Zcaron'] = 556;\n  t['greaterequal'] = 549;\n  t['Eth'] = 722;\n  t['Ccedilla'] = 667;\n  t['lcommaaccent'] = 278;\n  t['tcaron'] = 300;\n  t['eogonek'] = 444;\n  t['Uogonek'] = 722;\n  t['Aacute'] = 611;\n  t['Adieresis'] = 611;\n  t['egrave'] = 444;\n  t['zacute'] = 389;\n  t['iogonek'] = 278;\n  t['Oacute'] = 722;\n  t['oacute'] = 500;\n  t['amacron'] = 500;\n  t['sacute'] = 389;\n  t['idieresis'] = 278;\n  t['Ocircumflex'] = 722;\n  t['Ugrave'] = 722;\n  t['Delta'] = 612;\n  t['thorn'] = 500;\n  t['twosuperior'] = 300;\n  t['Odieresis'] = 722;\n  t['mu'] = 500;\n  t['igrave'] = 278;\n  t['ohungarumlaut'] = 500;\n  t['Eogonek'] = 611;\n  t['dcroat'] = 500;\n  t['threequarters'] = 750;\n  t['Scedilla'] = 500;\n  t['lcaron'] = 300;\n  t['Kcommaaccent'] = 667;\n  t['Lacute'] = 556;\n  t['trademark'] = 980;\n  t['edotaccent'] = 444;\n  t['Igrave'] = 333;\n  t['Imacron'] = 333;\n  t['Lcaron'] = 611;\n  t['onehalf'] = 750;\n  t['lessequal'] = 549;\n  t['ocircumflex'] = 500;\n  t['ntilde'] = 500;\n  t['Uhungarumlaut'] = 722;\n  t['Eacute'] = 611;\n  t['emacron'] = 444;\n  t['gbreve'] = 500;\n  t['onequarter'] = 750;\n  t['Scaron'] = 500;\n  t['Scommaaccent'] = 500;\n  t['Ohungarumlaut'] = 722;\n  t['degree'] = 400;\n  t['ograve'] = 500;\n  t['Ccaron'] = 667;\n  t['ugrave'] = 500;\n  t['radical'] = 453;\n  t['Dcaron'] = 722;\n  t['rcommaaccent'] = 389;\n  t['Ntilde'] = 667;\n  t['otilde'] = 500;\n  t['Rcommaaccent'] = 611;\n  t['Lcommaaccent'] = 556;\n  t['Atilde'] = 611;\n  t['Aogonek'] = 611;\n  t['Aring'] = 611;\n  t['Otilde'] = 722;\n  t['zdotaccent'] = 389;\n  t['Ecaron'] = 611;\n  t['Iogonek'] = 333;\n  t['kcommaaccent'] = 444;\n  t['minus'] = 675;\n  t['Icircumflex'] = 333;\n  t['ncaron'] = 500;\n  t['tcommaaccent'] = 278;\n  t['logicalnot'] = 675;\n  t['odieresis'] = 500;\n  t['udieresis'] = 500;\n  t['notequal'] = 549;\n  t['gcommaaccent'] = 500;\n  t['eth'] = 500;\n  t['zcaron'] = 389;\n  t['ncommaaccent'] = 500;\n  t['onesuperior'] = 300;\n  t['imacron'] = 278;\n  t['Euro'] = 500;\n });\n t['ZapfDingbats'] = getLookupTableFactory(function (t) {\n  t['space'] = 278;\n  t['a1'] = 974;\n  t['a2'] = 961;\n  t['a202'] = 974;\n  t['a3'] = 980;\n  t['a4'] = 719;\n  t['a5'] = 789;\n  t['a119'] = 790;\n  t['a118'] = 791;\n  t['a117'] = 690;\n  t['a11'] = 960;\n  t['a12'] = 939;\n  t['a13'] = 549;\n  t['a14'] = 855;\n  t['a15'] = 911;\n  t['a16'] = 933;\n  t['a105'] = 911;\n  t['a17'] = 945;\n  t['a18'] = 974;\n  t['a19'] = 755;\n  t['a20'] = 846;\n  t['a21'] = 762;\n  t['a22'] = 761;\n  t['a23'] = 571;\n  t['a24'] = 677;\n  t['a25'] = 763;\n  t['a26'] = 760;\n  t['a27'] = 759;\n  t['a28'] = 754;\n  t['a6'] = 494;\n  t['a7'] = 552;\n  t['a8'] = 537;\n  t['a9'] = 577;\n  t['a10'] = 692;\n  t['a29'] = 786;\n  t['a30'] = 788;\n  t['a31'] = 788;\n  t['a32'] = 790;\n  t['a33'] = 793;\n  t['a34'] = 794;\n  t['a35'] = 816;\n  t['a36'] = 823;\n  t['a37'] = 789;\n  t['a38'] = 841;\n  t['a39'] = 823;\n  t['a40'] = 833;\n  t['a41'] = 816;\n  t['a42'] = 831;\n  t['a43'] = 923;\n  t['a44'] = 744;\n  t['a45'] = 723;\n  t['a46'] = 749;\n  t['a47'] = 790;\n  t['a48'] = 792;\n  t['a49'] = 695;\n  t['a50'] = 776;\n  t['a51'] = 768;\n  t['a52'] = 792;\n  t['a53'] = 759;\n  t['a54'] = 707;\n  t['a55'] = 708;\n  t['a56'] = 682;\n  t['a57'] = 701;\n  t['a58'] = 826;\n  t['a59'] = 815;\n  t['a60'] = 789;\n  t['a61'] = 789;\n  t['a62'] = 707;\n  t['a63'] = 687;\n  t['a64'] = 696;\n  t['a65'] = 689;\n  t['a66'] = 786;\n  t['a67'] = 787;\n  t['a68'] = 713;\n  t['a69'] = 791;\n  t['a70'] = 785;\n  t['a71'] = 791;\n  t['a72'] = 873;\n  t['a73'] = 761;\n  t['a74'] = 762;\n  t['a203'] = 762;\n  t['a75'] = 759;\n  t['a204'] = 759;\n  t['a76'] = 892;\n  t['a77'] = 892;\n  t['a78'] = 788;\n  t['a79'] = 784;\n  t['a81'] = 438;\n  t['a82'] = 138;\n  t['a83'] = 277;\n  t['a84'] = 415;\n  t['a97'] = 392;\n  t['a98'] = 392;\n  t['a99'] = 668;\n  t['a100'] = 668;\n  t['a89'] = 390;\n  t['a90'] = 390;\n  t['a93'] = 317;\n  t['a94'] = 317;\n  t['a91'] = 276;\n  t['a92'] = 276;\n  t['a205'] = 509;\n  t['a85'] = 509;\n  t['a206'] = 410;\n  t['a86'] = 410;\n  t['a87'] = 234;\n  t['a88'] = 234;\n  t['a95'] = 334;\n  t['a96'] = 334;\n  t['a101'] = 732;\n  t['a102'] = 544;\n  t['a103'] = 544;\n  t['a104'] = 910;\n  t['a106'] = 667;\n  t['a107'] = 760;\n  t['a108'] = 760;\n  t['a112'] = 776;\n  t['a111'] = 595;\n  t['a110'] = 694;\n  t['a109'] = 626;\n  t['a120'] = 788;\n  t['a121'] = 788;\n  t['a122'] = 788;\n  t['a123'] = 788;\n  t['a124'] = 788;\n  t['a125'] = 788;\n  t['a126'] = 788;\n  t['a127'] = 788;\n  t['a128'] = 788;\n  t['a129'] = 788;\n  t['a130'] = 788;\n  t['a131'] = 788;\n  t['a132'] = 788;\n  t['a133'] = 788;\n  t['a134'] = 788;\n  t['a135'] = 788;\n  t['a136'] = 788;\n  t['a137'] = 788;\n  t['a138'] = 788;\n  t['a139'] = 788;\n  t['a140'] = 788;\n  t['a141'] = 788;\n  t['a142'] = 788;\n  t['a143'] = 788;\n  t['a144'] = 788;\n  t['a145'] = 788;\n  t['a146'] = 788;\n  t['a147'] = 788;\n  t['a148'] = 788;\n  t['a149'] = 788;\n  t['a150'] = 788;\n  t['a151'] = 788;\n  t['a152'] = 788;\n  t['a153'] = 788;\n  t['a154'] = 788;\n  t['a155'] = 788;\n  t['a156'] = 788;\n  t['a157'] = 788;\n  t['a158'] = 788;\n  t['a159'] = 788;\n  t['a160'] = 894;\n  t['a161'] = 838;\n  t['a163'] = 1016;\n  t['a164'] = 458;\n  t['a196'] = 748;\n  t['a165'] = 924;\n  t['a192'] = 748;\n  t['a166'] = 918;\n  t['a167'] = 927;\n  t['a168'] = 928;\n  t['a169'] = 928;\n  t['a170'] = 834;\n  t['a171'] = 873;\n  t['a172'] = 828;\n  t['a173'] = 924;\n  t['a162'] = 924;\n  t['a174'] = 917;\n  t['a175'] = 930;\n  t['a176'] = 931;\n  t['a177'] = 463;\n  t['a178'] = 883;\n  t['a179'] = 836;\n  t['a193'] = 836;\n  t['a180'] = 867;\n  t['a199'] = 867;\n  t['a181'] = 696;\n  t['a200'] = 696;\n  t['a182'] = 874;\n  t['a201'] = 874;\n  t['a183'] = 760;\n  t['a184'] = 946;\n  t['a197'] = 771;\n  t['a185'] = 865;\n  t['a194'] = 771;\n  t['a198'] = 888;\n  t['a186'] = 967;\n  t['a195'] = 888;\n  t['a187'] = 831;\n  t['a188'] = 873;\n  t['a189'] = 927;\n  t['a190'] = 970;\n  t['a191'] = 918;\n });\n});\nexports.getMetrics = getMetrics;\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar Uint32ArrayView = sharedUtil.Uint32ArrayView;\nvar MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\n var MASK_HIGH = 0xffff0000;\n var MASK_LOW = 0xffff;\n function MurmurHash3_64(seed) {\n  var SEED = 0xc3d2e1f0;\n  this.h1 = seed ? seed & 0xffffffff : SEED;\n  this.h2 = seed ? seed & 0xffffffff : SEED;\n }\n var alwaysUseUint32ArrayView = false;\n try {\n  new Uint32Array(new Uint8Array(5).buffer, 0, 1);\n } catch (e) {\n  alwaysUseUint32ArrayView = true;\n }\n MurmurHash3_64.prototype = {\n  update: function MurmurHash3_64_update(input) {\n   var useUint32ArrayView = alwaysUseUint32ArrayView;\n   var i;\n   if (typeof input === 'string') {\n    var data = new Uint8Array(input.length * 2);\n    var length = 0;\n    for (i = 0; i < input.length; i++) {\n     var code = input.charCodeAt(i);\n     if (code <= 0xff) {\n      data[length++] = code;\n     } else {\n      data[length++] = code >>> 8;\n      data[length++] = code & 0xff;\n     }\n    }\n   } else if (input instanceof Uint8Array) {\n    data = input;\n    length = data.length;\n   } else if (typeof input === 'object' && 'length' in input) {\n    data = input;\n    length = data.length;\n    useUint32ArrayView = true;\n   } else {\n    throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\n   }\n   var blockCounts = length >> 2;\n   var tailLength = length - blockCounts * 4;\n   var dataUint32 = useUint32ArrayView ? new Uint32ArrayView(data, blockCounts) : new Uint32Array(data.buffer, 0, blockCounts);\n   var k1 = 0;\n   var k2 = 0;\n   var h1 = this.h1;\n   var h2 = this.h2;\n   var C1 = 0xcc9e2d51;\n   var C2 = 0x1b873593;\n   var C1_LOW = C1 & MASK_LOW;\n   var C2_LOW = C2 & MASK_LOW;\n   for (i = 0; i < blockCounts; i++) {\n    if (i & 1) {\n     k1 = dataUint32[i];\n     k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n     k1 = k1 << 15 | k1 >>> 17;\n     k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n     h1 ^= k1;\n     h1 = h1 << 13 | h1 >>> 19;\n     h1 = h1 * 5 + 0xe6546b64;\n    } else {\n     k2 = dataUint32[i];\n     k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n     k2 = k2 << 15 | k2 >>> 17;\n     k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n     h2 ^= k2;\n     h2 = h2 << 13 | h2 >>> 19;\n     h2 = h2 * 5 + 0xe6546b64;\n    }\n   }\n   k1 = 0;\n   switch (tailLength) {\n   case 3:\n    k1 ^= data[blockCounts * 4 + 2] << 16;\n   case 2:\n    k1 ^= data[blockCounts * 4 + 1] << 8;\n   case 1:\n    k1 ^= data[blockCounts * 4];\n    k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n    k1 = k1 << 15 | k1 >>> 17;\n    k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n    if (blockCounts & 1) {\n     h1 ^= k1;\n    } else {\n     h2 ^= k1;\n    }\n   }\n   this.h1 = h1;\n   this.h2 = h2;\n   return this;\n  },\n  hexdigest: function MurmurHash3_64_hexdigest() {\n   var h1 = this.h1;\n   var h2 = this.h2;\n   h1 ^= h2 >>> 1;\n   h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n   h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n   h1 ^= h2 >>> 1;\n   h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n   h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n   h1 ^= h2 >>> 1;\n   for (var i = 0, arr = [\n      h1,\n      h2\n     ], str = ''; i < arr.length; i++) {\n    var hex = (arr[i] >>> 0).toString(16);\n    while (hex.length < 8) {\n     hex = '0' + hex;\n    }\n    str += hex;\n   }\n   return str;\n  }\n };\n return MurmurHash3_64;\n}();\nexports.MurmurHash3_64 = MurmurHash3_64;\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar coreFunction = __w_pdfjs_require__(6);\nvar coreColorSpace = __w_pdfjs_require__(3);\nvar UNSUPPORTED_FEATURES = sharedUtil.UNSUPPORTED_FEATURES;\nvar MissingDataException = sharedUtil.MissingDataException;\nvar Util = sharedUtil.Util;\nvar assert = sharedUtil.assert;\nvar error = sharedUtil.error;\nvar info = sharedUtil.info;\nvar warn = sharedUtil.warn;\nvar isStream = corePrimitives.isStream;\nvar PDFFunction = coreFunction.PDFFunction;\nvar ColorSpace = coreColorSpace.ColorSpace;\nvar ShadingType = {\n FUNCTION_BASED: 1,\n AXIAL: 2,\n RADIAL: 3,\n FREE_FORM_MESH: 4,\n LATTICE_FORM_MESH: 5,\n COONS_PATCH_MESH: 6,\n TENSOR_PATCH_MESH: 7\n};\nvar Pattern = function PatternClosure() {\n function Pattern() {\n  error('should not call Pattern constructor');\n }\n Pattern.prototype = {\n  getPattern: function Pattern_getPattern(ctx) {\n   error('Should not call Pattern.getStyle: ' + ctx);\n  }\n };\n Pattern.parseShading = function Pattern_parseShading(shading, matrix, xref, res, handler) {\n  var dict = isStream(shading) ? shading.dict : shading;\n  var type = dict.get('ShadingType');\n  try {\n   switch (type) {\n   case ShadingType.AXIAL:\n   case ShadingType.RADIAL:\n    return new Shadings.RadialAxial(dict, matrix, xref, res);\n   case ShadingType.FREE_FORM_MESH:\n   case ShadingType.LATTICE_FORM_MESH:\n   case ShadingType.COONS_PATCH_MESH:\n   case ShadingType.TENSOR_PATCH_MESH:\n    return new Shadings.Mesh(shading, matrix, xref, res);\n   default:\n    throw new Error('Unsupported ShadingType: ' + type);\n   }\n  } catch (ex) {\n   if (ex instanceof MissingDataException) {\n    throw ex;\n   }\n   handler.send('UnsupportedFeature', { featureId: UNSUPPORTED_FEATURES.shadingPattern });\n   warn(ex);\n   return new Shadings.Dummy();\n  }\n };\n return Pattern;\n}();\nvar Shadings = {};\nShadings.SMALL_NUMBER = 1e-6;\nShadings.RadialAxial = function RadialAxialClosure() {\n function RadialAxial(dict, matrix, xref, res) {\n  this.matrix = matrix;\n  this.coordsArr = dict.getArray('Coords');\n  this.shadingType = dict.get('ShadingType');\n  this.type = 'Pattern';\n  var cs = dict.get('ColorSpace', 'CS');\n  cs = ColorSpace.parse(cs, xref, res);\n  this.cs = cs;\n  var t0 = 0.0, t1 = 1.0;\n  if (dict.has('Domain')) {\n   var domainArr = dict.getArray('Domain');\n   t0 = domainArr[0];\n   t1 = domainArr[1];\n  }\n  var extendStart = false, extendEnd = false;\n  if (dict.has('Extend')) {\n   var extendArr = dict.getArray('Extend');\n   extendStart = extendArr[0];\n   extendEnd = extendArr[1];\n  }\n  if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\n   var x1 = this.coordsArr[0];\n   var y1 = this.coordsArr[1];\n   var r1 = this.coordsArr[2];\n   var x2 = this.coordsArr[3];\n   var y2 = this.coordsArr[4];\n   var r2 = this.coordsArr[5];\n   var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n   if (r1 <= r2 + distance && r2 <= r1 + distance) {\n    warn('Unsupported radial gradient.');\n   }\n  }\n  this.extendStart = extendStart;\n  this.extendEnd = extendEnd;\n  var fnObj = dict.get('Function');\n  var fn = PDFFunction.parseArray(xref, fnObj);\n  var diff = t1 - t0;\n  var step = diff / 10;\n  var colorStops = this.colorStops = [];\n  if (t0 >= t1 || step <= 0) {\n   info('Bad shading domain.');\n   return;\n  }\n  var color = new Float32Array(cs.numComps), ratio = new Float32Array(1);\n  var rgbColor;\n  for (var i = t0; i <= t1; i += step) {\n   ratio[0] = i;\n   fn(ratio, 0, color, 0);\n   rgbColor = cs.getRgb(color, 0);\n   var cssColor = Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n   colorStops.push([\n    (i - t0) / diff,\n    cssColor\n   ]);\n  }\n  var background = 'transparent';\n  if (dict.has('Background')) {\n   rgbColor = cs.getRgb(dict.get('Background'), 0);\n   background = Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n  }\n  if (!extendStart) {\n   colorStops.unshift([\n    0,\n    background\n   ]);\n   colorStops[1][0] += Shadings.SMALL_NUMBER;\n  }\n  if (!extendEnd) {\n   colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\n   colorStops.push([\n    1,\n    background\n   ]);\n  }\n  this.colorStops = colorStops;\n }\n RadialAxial.prototype = {\n  getIR: function RadialAxial_getIR() {\n   var coordsArr = this.coordsArr;\n   var shadingType = this.shadingType;\n   var type, p0, p1, r0, r1;\n   if (shadingType === ShadingType.AXIAL) {\n    p0 = [\n     coordsArr[0],\n     coordsArr[1]\n    ];\n    p1 = [\n     coordsArr[2],\n     coordsArr[3]\n    ];\n    r0 = null;\n    r1 = null;\n    type = 'axial';\n   } else if (shadingType === ShadingType.RADIAL) {\n    p0 = [\n     coordsArr[0],\n     coordsArr[1]\n    ];\n    p1 = [\n     coordsArr[3],\n     coordsArr[4]\n    ];\n    r0 = coordsArr[2];\n    r1 = coordsArr[5];\n    type = 'radial';\n   } else {\n    error('getPattern type unknown: ' + shadingType);\n   }\n   var matrix = this.matrix;\n   if (matrix) {\n    p0 = Util.applyTransform(p0, matrix);\n    p1 = Util.applyTransform(p1, matrix);\n    if (shadingType === ShadingType.RADIAL) {\n     var scale = Util.singularValueDecompose2dScale(matrix);\n     r0 *= scale[0];\n     r1 *= scale[1];\n    }\n   }\n   return [\n    'RadialAxial',\n    type,\n    this.colorStops,\n    p0,\n    p1,\n    r0,\n    r1\n   ];\n  }\n };\n return RadialAxial;\n}();\nShadings.Mesh = function MeshClosure() {\n function MeshStreamReader(stream, context) {\n  this.stream = stream;\n  this.context = context;\n  this.buffer = 0;\n  this.bufferLength = 0;\n  var numComps = context.numComps;\n  this.tmpCompsBuf = new Float32Array(numComps);\n  var csNumComps = context.colorSpace.numComps;\n  this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\n }\n MeshStreamReader.prototype = {\n  get hasData() {\n   if (this.stream.end) {\n    return this.stream.pos < this.stream.end;\n   }\n   if (this.bufferLength > 0) {\n    return true;\n   }\n   var nextByte = this.stream.getByte();\n   if (nextByte < 0) {\n    return false;\n   }\n   this.buffer = nextByte;\n   this.bufferLength = 8;\n   return true;\n  },\n  readBits: function MeshStreamReader_readBits(n) {\n   var buffer = this.buffer;\n   var bufferLength = this.bufferLength;\n   if (n === 32) {\n    if (bufferLength === 0) {\n     return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\n    }\n    buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\n    var nextByte = this.stream.getByte();\n    this.buffer = nextByte & (1 << bufferLength) - 1;\n    return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\n   }\n   if (n === 8 && bufferLength === 0) {\n    return this.stream.getByte();\n   }\n   while (bufferLength < n) {\n    buffer = buffer << 8 | this.stream.getByte();\n    bufferLength += 8;\n   }\n   bufferLength -= n;\n   this.bufferLength = bufferLength;\n   this.buffer = buffer & (1 << bufferLength) - 1;\n   return buffer >> bufferLength;\n  },\n  align: function MeshStreamReader_align() {\n   this.buffer = 0;\n   this.bufferLength = 0;\n  },\n  readFlag: function MeshStreamReader_readFlag() {\n   return this.readBits(this.context.bitsPerFlag);\n  },\n  readCoordinate: function MeshStreamReader_readCoordinate() {\n   var bitsPerCoordinate = this.context.bitsPerCoordinate;\n   var xi = this.readBits(bitsPerCoordinate);\n   var yi = this.readBits(bitsPerCoordinate);\n   var decode = this.context.decode;\n   var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\n   return [\n    xi * scale * (decode[1] - decode[0]) + decode[0],\n    yi * scale * (decode[3] - decode[2]) + decode[2]\n   ];\n  },\n  readComponents: function MeshStreamReader_readComponents() {\n   var numComps = this.context.numComps;\n   var bitsPerComponent = this.context.bitsPerComponent;\n   var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\n   var decode = this.context.decode;\n   var components = this.tmpCompsBuf;\n   for (var i = 0, j = 4; i < numComps; i++, j += 2) {\n    var ci = this.readBits(bitsPerComponent);\n    components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\n   }\n   var color = this.tmpCsCompsBuf;\n   if (this.context.colorFn) {\n    this.context.colorFn(components, 0, color, 0);\n   }\n   return this.context.colorSpace.getRgb(color, 0);\n  }\n };\n function decodeType4Shading(mesh, reader) {\n  var coords = mesh.coords;\n  var colors = mesh.colors;\n  var operators = [];\n  var ps = [];\n  var verticesLeft = 0;\n  while (reader.hasData) {\n   var f = reader.readFlag();\n   var coord = reader.readCoordinate();\n   var color = reader.readComponents();\n   if (verticesLeft === 0) {\n    assert(0 <= f && f <= 2, 'Unknown type4 flag');\n    switch (f) {\n    case 0:\n     verticesLeft = 3;\n     break;\n    case 1:\n     ps.push(ps[ps.length - 2], ps[ps.length - 1]);\n     verticesLeft = 1;\n     break;\n    case 2:\n     ps.push(ps[ps.length - 3], ps[ps.length - 1]);\n     verticesLeft = 1;\n     break;\n    }\n    operators.push(f);\n   }\n   ps.push(coords.length);\n   coords.push(coord);\n   colors.push(color);\n   verticesLeft--;\n   reader.align();\n  }\n  mesh.figures.push({\n   type: 'triangles',\n   coords: new Int32Array(ps),\n   colors: new Int32Array(ps)\n  });\n }\n function decodeType5Shading(mesh, reader, verticesPerRow) {\n  var coords = mesh.coords;\n  var colors = mesh.colors;\n  var ps = [];\n  while (reader.hasData) {\n   var coord = reader.readCoordinate();\n   var color = reader.readComponents();\n   ps.push(coords.length);\n   coords.push(coord);\n   colors.push(color);\n  }\n  mesh.figures.push({\n   type: 'lattice',\n   coords: new Int32Array(ps),\n   colors: new Int32Array(ps),\n   verticesPerRow: verticesPerRow\n  });\n }\n var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\n var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\n var TRIANGLE_DENSITY = 20;\n var getB = function getBClosure() {\n  function buildB(count) {\n   var lut = [];\n   for (var i = 0; i <= count; i++) {\n    var t = i / count, t_ = 1 - t;\n    lut.push(new Float32Array([\n     t_ * t_ * t_,\n     3 * t * t_ * t_,\n     3 * t * t * t_,\n     t * t * t\n    ]));\n   }\n   return lut;\n  }\n  var cache = [];\n  return function getB(count) {\n   if (!cache[count]) {\n    cache[count] = buildB(count);\n   }\n   return cache[count];\n  };\n }();\n function buildFigureFromPatch(mesh, index) {\n  var figure = mesh.figures[index];\n  assert(figure.type === 'patch', 'Unexpected patch mesh figure');\n  var coords = mesh.coords, colors = mesh.colors;\n  var pi = figure.coords;\n  var ci = figure.colors;\n  var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n  var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n  var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n  var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n  var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\n  splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\n  var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\n  splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\n  var verticesPerRow = splitXBy + 1;\n  var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\n  var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\n  var k = 0;\n  var cl = new Uint8Array(3), cr = new Uint8Array(3);\n  var c0 = colors[ci[0]], c1 = colors[ci[1]], c2 = colors[ci[2]], c3 = colors[ci[3]];\n  var bRow = getB(splitYBy), bCol = getB(splitXBy);\n  for (var row = 0; row <= splitYBy; row++) {\n   cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\n   cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\n   cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\n   cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\n   cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\n   cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\n   for (var col = 0; col <= splitXBy; col++, k++) {\n    if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\n     continue;\n    }\n    var x = 0, y = 0;\n    var q = 0;\n    for (var i = 0; i <= 3; i++) {\n     for (var j = 0; j <= 3; j++, q++) {\n      var m = bRow[row][i] * bCol[col][j];\n      x += coords[pi[q]][0] * m;\n      y += coords[pi[q]][1] * m;\n     }\n    }\n    figureCoords[k] = coords.length;\n    coords.push([\n     x,\n     y\n    ]);\n    figureColors[k] = colors.length;\n    var newColor = new Uint8Array(3);\n    newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\n    newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\n    newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\n    colors.push(newColor);\n   }\n  }\n  figureCoords[0] = pi[0];\n  figureColors[0] = ci[0];\n  figureCoords[splitXBy] = pi[3];\n  figureColors[splitXBy] = ci[1];\n  figureCoords[verticesPerRow * splitYBy] = pi[12];\n  figureColors[verticesPerRow * splitYBy] = ci[2];\n  figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\n  figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\n  mesh.figures[index] = {\n   type: 'lattice',\n   coords: figureCoords,\n   colors: figureColors,\n   verticesPerRow: verticesPerRow\n  };\n }\n function decodeType6Shading(mesh, reader) {\n  var coords = mesh.coords;\n  var colors = mesh.colors;\n  var ps = new Int32Array(16);\n  var cs = new Int32Array(4);\n  while (reader.hasData) {\n   var f = reader.readFlag();\n   assert(0 <= f && f <= 3, 'Unknown type6 flag');\n   var i, ii;\n   var pi = coords.length;\n   for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\n    coords.push(reader.readCoordinate());\n   }\n   var ci = colors.length;\n   for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n    colors.push(reader.readComponents());\n   }\n   var tmp1, tmp2, tmp3, tmp4;\n   switch (f) {\n   case 0:\n    ps[12] = pi + 3;\n    ps[13] = pi + 4;\n    ps[14] = pi + 5;\n    ps[15] = pi + 6;\n    ps[8] = pi + 2;\n    ps[11] = pi + 7;\n    ps[4] = pi + 1;\n    ps[7] = pi + 8;\n    ps[0] = pi;\n    ps[1] = pi + 11;\n    ps[2] = pi + 10;\n    ps[3] = pi + 9;\n    cs[2] = ci + 1;\n    cs[3] = ci + 2;\n    cs[0] = ci;\n    cs[1] = ci + 3;\n    break;\n   case 1:\n    tmp1 = ps[12];\n    tmp2 = ps[13];\n    tmp3 = ps[14];\n    tmp4 = ps[15];\n    ps[12] = tmp4;\n    ps[13] = pi + 0;\n    ps[14] = pi + 1;\n    ps[15] = pi + 2;\n    ps[8] = tmp3;\n    ps[11] = pi + 3;\n    ps[4] = tmp2;\n    ps[7] = pi + 4;\n    ps[0] = tmp1;\n    ps[1] = pi + 7;\n    ps[2] = pi + 6;\n    ps[3] = pi + 5;\n    tmp1 = cs[2];\n    tmp2 = cs[3];\n    cs[2] = tmp2;\n    cs[3] = ci;\n    cs[0] = tmp1;\n    cs[1] = ci + 1;\n    break;\n   case 2:\n    tmp1 = ps[15];\n    tmp2 = ps[11];\n    ps[12] = ps[3];\n    ps[13] = pi + 0;\n    ps[14] = pi + 1;\n    ps[15] = pi + 2;\n    ps[8] = ps[7];\n    ps[11] = pi + 3;\n    ps[4] = tmp2;\n    ps[7] = pi + 4;\n    ps[0] = tmp1;\n    ps[1] = pi + 7;\n    ps[2] = pi + 6;\n    ps[3] = pi + 5;\n    tmp1 = cs[3];\n    cs[2] = cs[1];\n    cs[3] = ci;\n    cs[0] = tmp1;\n    cs[1] = ci + 1;\n    break;\n   case 3:\n    ps[12] = ps[0];\n    ps[13] = pi + 0;\n    ps[14] = pi + 1;\n    ps[15] = pi + 2;\n    ps[8] = ps[1];\n    ps[11] = pi + 3;\n    ps[4] = ps[2];\n    ps[7] = pi + 4;\n    ps[0] = ps[3];\n    ps[1] = pi + 7;\n    ps[2] = pi + 6;\n    ps[3] = pi + 5;\n    cs[2] = cs[0];\n    cs[3] = ci;\n    cs[0] = cs[1];\n    cs[1] = ci + 1;\n    break;\n   }\n   ps[5] = coords.length;\n   coords.push([\n    (-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9,\n    (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9\n   ]);\n   ps[6] = coords.length;\n   coords.push([\n    (-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9,\n    (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9\n   ]);\n   ps[9] = coords.length;\n   coords.push([\n    (-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9,\n    (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9\n   ]);\n   ps[10] = coords.length;\n   coords.push([\n    (-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9,\n    (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9\n   ]);\n   mesh.figures.push({\n    type: 'patch',\n    coords: new Int32Array(ps),\n    colors: new Int32Array(cs)\n   });\n  }\n }\n function decodeType7Shading(mesh, reader) {\n  var coords = mesh.coords;\n  var colors = mesh.colors;\n  var ps = new Int32Array(16);\n  var cs = new Int32Array(4);\n  while (reader.hasData) {\n   var f = reader.readFlag();\n   assert(0 <= f && f <= 3, 'Unknown type7 flag');\n   var i, ii;\n   var pi = coords.length;\n   for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\n    coords.push(reader.readCoordinate());\n   }\n   var ci = colors.length;\n   for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n    colors.push(reader.readComponents());\n   }\n   var tmp1, tmp2, tmp3, tmp4;\n   switch (f) {\n   case 0:\n    ps[12] = pi + 3;\n    ps[13] = pi + 4;\n    ps[14] = pi + 5;\n    ps[15] = pi + 6;\n    ps[8] = pi + 2;\n    ps[9] = pi + 13;\n    ps[10] = pi + 14;\n    ps[11] = pi + 7;\n    ps[4] = pi + 1;\n    ps[5] = pi + 12;\n    ps[6] = pi + 15;\n    ps[7] = pi + 8;\n    ps[0] = pi;\n    ps[1] = pi + 11;\n    ps[2] = pi + 10;\n    ps[3] = pi + 9;\n    cs[2] = ci + 1;\n    cs[3] = ci + 2;\n    cs[0] = ci;\n    cs[1] = ci + 3;\n    break;\n   case 1:\n    tmp1 = ps[12];\n    tmp2 = ps[13];\n    tmp3 = ps[14];\n    tmp4 = ps[15];\n    ps[12] = tmp4;\n    ps[13] = pi + 0;\n    ps[14] = pi + 1;\n    ps[15] = pi + 2;\n    ps[8] = tmp3;\n    ps[9] = pi + 9;\n    ps[10] = pi + 10;\n    ps[11] = pi + 3;\n    ps[4] = tmp2;\n    ps[5] = pi + 8;\n    ps[6] = pi + 11;\n    ps[7] = pi + 4;\n    ps[0] = tmp1;\n    ps[1] = pi + 7;\n    ps[2] = pi + 6;\n    ps[3] = pi + 5;\n    tmp1 = cs[2];\n    tmp2 = cs[3];\n    cs[2] = tmp2;\n    cs[3] = ci;\n    cs[0] = tmp1;\n    cs[1] = ci + 1;\n    break;\n   case 2:\n    tmp1 = ps[15];\n    tmp2 = ps[11];\n    ps[12] = ps[3];\n    ps[13] = pi + 0;\n    ps[14] = pi + 1;\n    ps[15] = pi + 2;\n    ps[8] = ps[7];\n    ps[9] = pi + 9;\n    ps[10] = pi + 10;\n    ps[11] = pi + 3;\n    ps[4] = tmp2;\n    ps[5] = pi + 8;\n    ps[6] = pi + 11;\n    ps[7] = pi + 4;\n    ps[0] = tmp1;\n    ps[1] = pi + 7;\n    ps[2] = pi + 6;\n    ps[3] = pi + 5;\n    tmp1 = cs[3];\n    cs[2] = cs[1];\n    cs[3] = ci;\n    cs[0] = tmp1;\n    cs[1] = ci + 1;\n    break;\n   case 3:\n    ps[12] = ps[0];\n    ps[13] = pi + 0;\n    ps[14] = pi + 1;\n    ps[15] = pi + 2;\n    ps[8] = ps[1];\n    ps[9] = pi + 9;\n    ps[10] = pi + 10;\n    ps[11] = pi + 3;\n    ps[4] = ps[2];\n    ps[5] = pi + 8;\n    ps[6] = pi + 11;\n    ps[7] = pi + 4;\n    ps[0] = ps[3];\n    ps[1] = pi + 7;\n    ps[2] = pi + 6;\n    ps[3] = pi + 5;\n    cs[2] = cs[0];\n    cs[3] = ci;\n    cs[0] = cs[1];\n    cs[1] = ci + 1;\n    break;\n   }\n   mesh.figures.push({\n    type: 'patch',\n    coords: new Int32Array(ps),\n    colors: new Int32Array(cs)\n   });\n  }\n }\n function updateBounds(mesh) {\n  var minX = mesh.coords[0][0], minY = mesh.coords[0][1], maxX = minX, maxY = minY;\n  for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\n   var x = mesh.coords[i][0], y = mesh.coords[i][1];\n   minX = minX > x ? x : minX;\n   minY = minY > y ? y : minY;\n   maxX = maxX < x ? x : maxX;\n   maxY = maxY < y ? y : maxY;\n  }\n  mesh.bounds = [\n   minX,\n   minY,\n   maxX,\n   maxY\n  ];\n }\n function packData(mesh) {\n  var i, ii, j, jj;\n  var coords = mesh.coords;\n  var coordsPacked = new Float32Array(coords.length * 2);\n  for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\n   var xy = coords[i];\n   coordsPacked[j++] = xy[0];\n   coordsPacked[j++] = xy[1];\n  }\n  mesh.coords = coordsPacked;\n  var colors = mesh.colors;\n  var colorsPacked = new Uint8Array(colors.length * 3);\n  for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\n   var c = colors[i];\n   colorsPacked[j++] = c[0];\n   colorsPacked[j++] = c[1];\n   colorsPacked[j++] = c[2];\n  }\n  mesh.colors = colorsPacked;\n  var figures = mesh.figures;\n  for (i = 0, ii = figures.length; i < ii; i++) {\n   var figure = figures[i], ps = figure.coords, cs = figure.colors;\n   for (j = 0, jj = ps.length; j < jj; j++) {\n    ps[j] *= 2;\n    cs[j] *= 3;\n   }\n  }\n }\n function Mesh(stream, matrix, xref, res) {\n  assert(isStream(stream), 'Mesh data is not a stream');\n  var dict = stream.dict;\n  this.matrix = matrix;\n  this.shadingType = dict.get('ShadingType');\n  this.type = 'Pattern';\n  this.bbox = dict.getArray('BBox');\n  var cs = dict.get('ColorSpace', 'CS');\n  cs = ColorSpace.parse(cs, xref, res);\n  this.cs = cs;\n  this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\n  var fnObj = dict.get('Function');\n  var fn = fnObj ? PDFFunction.parseArray(xref, fnObj) : null;\n  this.coords = [];\n  this.colors = [];\n  this.figures = [];\n  var decodeContext = {\n   bitsPerCoordinate: dict.get('BitsPerCoordinate'),\n   bitsPerComponent: dict.get('BitsPerComponent'),\n   bitsPerFlag: dict.get('BitsPerFlag'),\n   decode: dict.getArray('Decode'),\n   colorFn: fn,\n   colorSpace: cs,\n   numComps: fn ? 1 : cs.numComps\n  };\n  var reader = new MeshStreamReader(stream, decodeContext);\n  var patchMesh = false;\n  switch (this.shadingType) {\n  case ShadingType.FREE_FORM_MESH:\n   decodeType4Shading(this, reader);\n   break;\n  case ShadingType.LATTICE_FORM_MESH:\n   var verticesPerRow = dict.get('VerticesPerRow') | 0;\n   assert(verticesPerRow >= 2, 'Invalid VerticesPerRow');\n   decodeType5Shading(this, reader, verticesPerRow);\n   break;\n  case ShadingType.COONS_PATCH_MESH:\n   decodeType6Shading(this, reader);\n   patchMesh = true;\n   break;\n  case ShadingType.TENSOR_PATCH_MESH:\n   decodeType7Shading(this, reader);\n   patchMesh = true;\n   break;\n  default:\n   error('Unsupported mesh type.');\n   break;\n  }\n  if (patchMesh) {\n   updateBounds(this);\n   for (var i = 0, ii = this.figures.length; i < ii; i++) {\n    buildFigureFromPatch(this, i);\n   }\n  }\n  updateBounds(this);\n  packData(this);\n }\n Mesh.prototype = {\n  getIR: function Mesh_getIR() {\n   return [\n    'Mesh',\n    this.shadingType,\n    this.coords,\n    this.colors,\n    this.figures,\n    this.bounds,\n    this.matrix,\n    this.bbox,\n    this.background\n   ];\n  }\n };\n return Mesh;\n}();\nShadings.Dummy = function DummyClosure() {\n function Dummy() {\n  this.type = 'Pattern';\n }\n Dummy.prototype = {\n  getIR: function Dummy_getIR() {\n   return ['Dummy'];\n  }\n };\n return Dummy;\n}();\nfunction getTilingPatternIR(operatorList, dict, args) {\n var matrix = dict.getArray('Matrix');\n var bbox = dict.getArray('BBox');\n var xstep = dict.get('XStep');\n var ystep = dict.get('YStep');\n var paintType = dict.get('PaintType');\n var tilingType = dict.get('TilingType');\n return [\n  'TilingPattern',\n  args,\n  operatorList,\n  matrix,\n  bbox,\n  xstep,\n  ystep,\n  paintType,\n  tilingType\n ];\n}\nexports.Pattern = Pattern;\nexports.getTilingPatternIR = getTilingPatternIR;\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar coreStream = __w_pdfjs_require__(2);\nvar coreChunkedStream = __w_pdfjs_require__(12);\nvar coreDocument = __w_pdfjs_require__(24);\nvar warn = sharedUtil.warn;\nvar createValidAbsoluteUrl = sharedUtil.createValidAbsoluteUrl;\nvar shadow = sharedUtil.shadow;\nvar NotImplementedException = sharedUtil.NotImplementedException;\nvar MissingDataException = sharedUtil.MissingDataException;\nvar createPromiseCapability = sharedUtil.createPromiseCapability;\nvar Util = sharedUtil.Util;\nvar Stream = coreStream.Stream;\nvar ChunkedStreamManager = coreChunkedStream.ChunkedStreamManager;\nvar PDFDocument = coreDocument.PDFDocument;\nvar BasePdfManager = function BasePdfManagerClosure() {\n function BasePdfManager() {\n  throw new Error('Cannot initialize BaseManagerManager');\n }\n BasePdfManager.prototype = {\n  get docId() {\n   return this._docId;\n  },\n  get password() {\n   return this._password;\n  },\n  get docBaseUrl() {\n   var docBaseUrl = null;\n   if (this._docBaseUrl) {\n    var absoluteUrl = createValidAbsoluteUrl(this._docBaseUrl);\n    if (absoluteUrl) {\n     docBaseUrl = absoluteUrl.href;\n    } else {\n     warn('Invalid absolute docBaseUrl: \"' + this._docBaseUrl + '\".');\n    }\n   }\n   return shadow(this, 'docBaseUrl', docBaseUrl);\n  },\n  onLoadedStream: function BasePdfManager_onLoadedStream() {\n   throw new NotImplementedException();\n  },\n  ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\n   return this.ensure(this.pdfDocument, prop, args);\n  },\n  ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\n   return this.ensure(this.pdfDocument.xref, prop, args);\n  },\n  ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\n   return this.ensure(this.pdfDocument.catalog, prop, args);\n  },\n  getPage: function BasePdfManager_getPage(pageIndex) {\n   return this.pdfDocument.getPage(pageIndex);\n  },\n  cleanup: function BasePdfManager_cleanup() {\n   return this.pdfDocument.cleanup();\n  },\n  ensure: function BasePdfManager_ensure(obj, prop, args) {\n   return new NotImplementedException();\n  },\n  requestRange: function BasePdfManager_requestRange(begin, end) {\n   return new NotImplementedException();\n  },\n  requestLoadedStream: function BasePdfManager_requestLoadedStream() {\n   return new NotImplementedException();\n  },\n  sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\n   return new NotImplementedException();\n  },\n  updatePassword: function BasePdfManager_updatePassword(password) {\n   this._password = password;\n  },\n  terminate: function BasePdfManager_terminate() {\n   return new NotImplementedException();\n  }\n };\n return BasePdfManager;\n}();\nvar LocalPdfManager = function LocalPdfManagerClosure() {\n function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\n  this._docId = docId;\n  this._password = password;\n  this._docBaseUrl = docBaseUrl;\n  this.evaluatorOptions = evaluatorOptions;\n  var stream = new Stream(data);\n  this.pdfDocument = new PDFDocument(this, stream);\n  this._loadedStreamCapability = createPromiseCapability();\n  this._loadedStreamCapability.resolve(stream);\n }\n Util.inherit(LocalPdfManager, BasePdfManager, {\n  ensure: function LocalPdfManager_ensure(obj, prop, args) {\n   return new Promise(function (resolve, reject) {\n    try {\n     var value = obj[prop];\n     var result;\n     if (typeof value === 'function') {\n      result = value.apply(obj, args);\n     } else {\n      result = value;\n     }\n     resolve(result);\n    } catch (e) {\n     reject(e);\n    }\n   });\n  },\n  requestRange: function LocalPdfManager_requestRange(begin, end) {\n   return Promise.resolve();\n  },\n  requestLoadedStream: function LocalPdfManager_requestLoadedStream() {\n  },\n  onLoadedStream: function LocalPdfManager_onLoadedStream() {\n   return this._loadedStreamCapability.promise;\n  },\n  terminate: function LocalPdfManager_terminate() {\n  }\n });\n return LocalPdfManager;\n}();\nvar NetworkPdfManager = function NetworkPdfManagerClosure() {\n function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\n  this._docId = docId;\n  this._password = args.password;\n  this._docBaseUrl = docBaseUrl;\n  this.msgHandler = args.msgHandler;\n  this.evaluatorOptions = evaluatorOptions;\n  var params = {\n   msgHandler: args.msgHandler,\n   url: args.url,\n   length: args.length,\n   disableAutoFetch: args.disableAutoFetch,\n   rangeChunkSize: args.rangeChunkSize\n  };\n  this.streamManager = new ChunkedStreamManager(pdfNetworkStream, params);\n  this.pdfDocument = new PDFDocument(this, this.streamManager.getStream());\n }\n Util.inherit(NetworkPdfManager, BasePdfManager, {\n  ensure: function NetworkPdfManager_ensure(obj, prop, args) {\n   var pdfManager = this;\n   return new Promise(function (resolve, reject) {\n    function ensureHelper() {\n     try {\n      var result;\n      var value = obj[prop];\n      if (typeof value === 'function') {\n       result = value.apply(obj, args);\n      } else {\n       result = value;\n      }\n      resolve(result);\n     } catch (e) {\n      if (!(e instanceof MissingDataException)) {\n       reject(e);\n       return;\n      }\n      pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);\n     }\n    }\n    ensureHelper();\n   });\n  },\n  requestRange: function NetworkPdfManager_requestRange(begin, end) {\n   return this.streamManager.requestRange(begin, end);\n  },\n  requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {\n   this.streamManager.requestAllChunks();\n  },\n  sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {\n   this.streamManager.onReceiveData({ chunk: chunk });\n  },\n  onLoadedStream: function NetworkPdfManager_onLoadedStream() {\n   return this.streamManager.onLoadedStream();\n  },\n  terminate: function NetworkPdfManager_terminate() {\n   this.streamManager.abort();\n  }\n });\n return NetworkPdfManager;\n}();\nexports.LocalPdfManager = LocalPdfManager;\nexports.NetworkPdfManager = NetworkPdfManager;\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar error = sharedUtil.error;\nvar isSpace = sharedUtil.isSpace;\nvar EOF = corePrimitives.EOF;\nvar PostScriptParser = function PostScriptParserClosure() {\n function PostScriptParser(lexer) {\n  this.lexer = lexer;\n  this.operators = [];\n  this.token = null;\n  this.prev = null;\n }\n PostScriptParser.prototype = {\n  nextToken: function PostScriptParser_nextToken() {\n   this.prev = this.token;\n   this.token = this.lexer.getToken();\n  },\n  accept: function PostScriptParser_accept(type) {\n   if (this.token.type === type) {\n    this.nextToken();\n    return true;\n   }\n   return false;\n  },\n  expect: function PostScriptParser_expect(type) {\n   if (this.accept(type)) {\n    return true;\n   }\n   error('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');\n  },\n  parse: function PostScriptParser_parse() {\n   this.nextToken();\n   this.expect(PostScriptTokenTypes.LBRACE);\n   this.parseBlock();\n   this.expect(PostScriptTokenTypes.RBRACE);\n   return this.operators;\n  },\n  parseBlock: function PostScriptParser_parseBlock() {\n   while (true) {\n    if (this.accept(PostScriptTokenTypes.NUMBER)) {\n     this.operators.push(this.prev.value);\n    } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\n     this.operators.push(this.prev.value);\n    } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n     this.parseCondition();\n    } else {\n     return;\n    }\n   }\n  },\n  parseCondition: function PostScriptParser_parseCondition() {\n   var conditionLocation = this.operators.length;\n   this.operators.push(null, null);\n   this.parseBlock();\n   this.expect(PostScriptTokenTypes.RBRACE);\n   if (this.accept(PostScriptTokenTypes.IF)) {\n    this.operators[conditionLocation] = this.operators.length;\n    this.operators[conditionLocation + 1] = 'jz';\n   } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n    var jumpLocation = this.operators.length;\n    this.operators.push(null, null);\n    var endOfTrue = this.operators.length;\n    this.parseBlock();\n    this.expect(PostScriptTokenTypes.RBRACE);\n    this.expect(PostScriptTokenTypes.IFELSE);\n    this.operators[jumpLocation] = this.operators.length;\n    this.operators[jumpLocation + 1] = 'j';\n    this.operators[conditionLocation] = endOfTrue;\n    this.operators[conditionLocation + 1] = 'jz';\n   } else {\n    error('PS Function: error parsing conditional.');\n   }\n  }\n };\n return PostScriptParser;\n}();\nvar PostScriptTokenTypes = {\n LBRACE: 0,\n RBRACE: 1,\n NUMBER: 2,\n OPERATOR: 3,\n IF: 4,\n IFELSE: 5\n};\nvar PostScriptToken = function PostScriptTokenClosure() {\n function PostScriptToken(type, value) {\n  this.type = type;\n  this.value = value;\n }\n var opCache = Object.create(null);\n PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\n  var opValue = opCache[op];\n  if (opValue) {\n   return opValue;\n  }\n  return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\n };\n PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');\n PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');\n PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\n PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');\n return PostScriptToken;\n}();\nvar PostScriptLexer = function PostScriptLexerClosure() {\n function PostScriptLexer(stream) {\n  this.stream = stream;\n  this.nextChar();\n  this.strBuf = [];\n }\n PostScriptLexer.prototype = {\n  nextChar: function PostScriptLexer_nextChar() {\n   return this.currentChar = this.stream.getByte();\n  },\n  getToken: function PostScriptLexer_getToken() {\n   var comment = false;\n   var ch = this.currentChar;\n   while (true) {\n    if (ch < 0) {\n     return EOF;\n    }\n    if (comment) {\n     if (ch === 0x0A || ch === 0x0D) {\n      comment = false;\n     }\n    } else if (ch === 0x25) {\n     comment = true;\n    } else if (!isSpace(ch)) {\n     break;\n    }\n    ch = this.nextChar();\n   }\n   switch (ch | 0) {\n   case 0x30:\n   case 0x31:\n   case 0x32:\n   case 0x33:\n   case 0x34:\n   case 0x35:\n   case 0x36:\n   case 0x37:\n   case 0x38:\n   case 0x39:\n   case 0x2B:\n   case 0x2D:\n   case 0x2E:\n    return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\n   case 0x7B:\n    this.nextChar();\n    return PostScriptToken.LBRACE;\n   case 0x7D:\n    this.nextChar();\n    return PostScriptToken.RBRACE;\n   }\n   var strBuf = this.strBuf;\n   strBuf.length = 0;\n   strBuf[0] = String.fromCharCode(ch);\n   while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\n    strBuf.push(String.fromCharCode(ch));\n   }\n   var str = strBuf.join('');\n   switch (str.toLowerCase()) {\n   case 'if':\n    return PostScriptToken.IF;\n   case 'ifelse':\n    return PostScriptToken.IFELSE;\n   default:\n    return PostScriptToken.getOperator(str);\n   }\n  },\n  getNumber: function PostScriptLexer_getNumber() {\n   var ch = this.currentChar;\n   var strBuf = this.strBuf;\n   strBuf.length = 0;\n   strBuf[0] = String.fromCharCode(ch);\n   while ((ch = this.nextChar()) >= 0) {\n    if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\n     strBuf.push(String.fromCharCode(ch));\n    } else {\n     break;\n    }\n   }\n   var value = parseFloat(strBuf.join(''));\n   if (isNaN(value)) {\n    error('Invalid floating point number: ' + value);\n   }\n   return value;\n  }\n };\n return PostScriptLexer;\n}();\nexports.PostScriptLexer = PostScriptLexer;\nexports.PostScriptParser = PostScriptParser;\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar coreStream = __w_pdfjs_require__(2);\nvar coreEncodings = __w_pdfjs_require__(4);\nvar warn = sharedUtil.warn;\nvar isSpace = sharedUtil.isSpace;\nvar Stream = coreStream.Stream;\nvar getEncoding = coreEncodings.getEncoding;\nvar HINTING_ENABLED = false;\nvar Type1CharString = function Type1CharStringClosure() {\n var COMMAND_MAP = {\n  'hstem': [1],\n  'vstem': [3],\n  'vmoveto': [4],\n  'rlineto': [5],\n  'hlineto': [6],\n  'vlineto': [7],\n  'rrcurveto': [8],\n  'callsubr': [10],\n  'flex': [\n   12,\n   35\n  ],\n  'drop': [\n   12,\n   18\n  ],\n  'endchar': [14],\n  'rmoveto': [21],\n  'hmoveto': [22],\n  'vhcurveto': [30],\n  'hvcurveto': [31]\n };\n function Type1CharString() {\n  this.width = 0;\n  this.lsb = 0;\n  this.flexing = false;\n  this.output = [];\n  this.stack = [];\n }\n Type1CharString.prototype = {\n  convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\n   var count = encoded.length;\n   var error = false;\n   var wx, sbx, subrNumber;\n   for (var i = 0; i < count; i++) {\n    var value = encoded[i];\n    if (value < 32) {\n     if (value === 12) {\n      value = (value << 8) + encoded[++i];\n     }\n     switch (value) {\n     case 1:\n      if (!HINTING_ENABLED) {\n       this.stack = [];\n       break;\n      }\n      error = this.executeCommand(2, COMMAND_MAP.hstem);\n      break;\n     case 3:\n      if (!HINTING_ENABLED) {\n       this.stack = [];\n       break;\n      }\n      error = this.executeCommand(2, COMMAND_MAP.vstem);\n      break;\n     case 4:\n      if (this.flexing) {\n       if (this.stack.length < 1) {\n        error = true;\n        break;\n       }\n       var dy = this.stack.pop();\n       this.stack.push(0, dy);\n       break;\n      }\n      error = this.executeCommand(1, COMMAND_MAP.vmoveto);\n      break;\n     case 5:\n      error = this.executeCommand(2, COMMAND_MAP.rlineto);\n      break;\n     case 6:\n      error = this.executeCommand(1, COMMAND_MAP.hlineto);\n      break;\n     case 7:\n      error = this.executeCommand(1, COMMAND_MAP.vlineto);\n      break;\n     case 8:\n      error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\n      break;\n     case 9:\n      this.stack = [];\n      break;\n     case 10:\n      if (this.stack.length < 1) {\n       error = true;\n       break;\n      }\n      subrNumber = this.stack.pop();\n      error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\n      break;\n     case 11:\n      return error;\n     case 13:\n      if (this.stack.length < 2) {\n       error = true;\n       break;\n      }\n      wx = this.stack.pop();\n      sbx = this.stack.pop();\n      this.lsb = sbx;\n      this.width = wx;\n      this.stack.push(wx, sbx);\n      error = this.executeCommand(2, COMMAND_MAP.hmoveto);\n      break;\n     case 14:\n      this.output.push(COMMAND_MAP.endchar[0]);\n      break;\n     case 21:\n      if (this.flexing) {\n       break;\n      }\n      error = this.executeCommand(2, COMMAND_MAP.rmoveto);\n      break;\n     case 22:\n      if (this.flexing) {\n       this.stack.push(0);\n       break;\n      }\n      error = this.executeCommand(1, COMMAND_MAP.hmoveto);\n      break;\n     case 30:\n      error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\n      break;\n     case 31:\n      error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\n      break;\n     case (12 << 8) + 0:\n      this.stack = [];\n      break;\n     case (12 << 8) + 1:\n      if (!HINTING_ENABLED) {\n       this.stack = [];\n       break;\n      }\n      error = this.executeCommand(2, COMMAND_MAP.vstem);\n      break;\n     case (12 << 8) + 2:\n      if (!HINTING_ENABLED) {\n       this.stack = [];\n       break;\n      }\n      error = this.executeCommand(2, COMMAND_MAP.hstem);\n      break;\n     case (12 << 8) + 6:\n      if (seacAnalysisEnabled) {\n       this.seac = this.stack.splice(-4, 4);\n       error = this.executeCommand(0, COMMAND_MAP.endchar);\n      } else {\n       error = this.executeCommand(4, COMMAND_MAP.endchar);\n      }\n      break;\n     case (12 << 8) + 7:\n      if (this.stack.length < 4) {\n       error = true;\n       break;\n      }\n      this.stack.pop();\n      wx = this.stack.pop();\n      var sby = this.stack.pop();\n      sbx = this.stack.pop();\n      this.lsb = sbx;\n      this.width = wx;\n      this.stack.push(wx, sbx, sby);\n      error = this.executeCommand(3, COMMAND_MAP.rmoveto);\n      break;\n     case (12 << 8) + 12:\n      if (this.stack.length < 2) {\n       error = true;\n       break;\n      }\n      var num2 = this.stack.pop();\n      var num1 = this.stack.pop();\n      this.stack.push(num1 / num2);\n      break;\n     case (12 << 8) + 16:\n      if (this.stack.length < 2) {\n       error = true;\n       break;\n      }\n      subrNumber = this.stack.pop();\n      var numArgs = this.stack.pop();\n      if (subrNumber === 0 && numArgs === 3) {\n       var flexArgs = this.stack.splice(this.stack.length - 17, 17);\n       this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\n       error = this.executeCommand(13, COMMAND_MAP.flex, true);\n       this.flexing = false;\n       this.stack.push(flexArgs[15], flexArgs[16]);\n      } else if (subrNumber === 1 && numArgs === 0) {\n       this.flexing = true;\n      }\n      break;\n     case (12 << 8) + 17:\n      break;\n     case (12 << 8) + 33:\n      this.stack = [];\n      break;\n     default:\n      warn('Unknown type 1 charstring command of \"' + value + '\"');\n      break;\n     }\n     if (error) {\n      break;\n     }\n     continue;\n    } else if (value <= 246) {\n     value = value - 139;\n    } else if (value <= 250) {\n     value = (value - 247) * 256 + encoded[++i] + 108;\n    } else if (value <= 254) {\n     value = -((value - 251) * 256) - encoded[++i] - 108;\n    } else {\n     value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\n    }\n    this.stack.push(value);\n   }\n   return error;\n  },\n  executeCommand: function (howManyArgs, command, keepStack) {\n   var stackLength = this.stack.length;\n   if (howManyArgs > stackLength) {\n    return true;\n   }\n   var start = stackLength - howManyArgs;\n   for (var i = start; i < stackLength; i++) {\n    var value = this.stack[i];\n    if (value === (value | 0)) {\n     this.output.push(28, value >> 8 & 0xff, value & 0xff);\n    } else {\n     value = 65536 * value | 0;\n     this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\n    }\n   }\n   this.output.push.apply(this.output, command);\n   if (keepStack) {\n    this.stack.splice(start, howManyArgs);\n   } else {\n    this.stack.length = 0;\n   }\n   return false;\n  }\n };\n return Type1CharString;\n}();\nvar Type1Parser = function Type1ParserClosure() {\n var EEXEC_ENCRYPT_KEY = 55665;\n var CHAR_STRS_ENCRYPT_KEY = 4330;\n function isHexDigit(code) {\n  return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\n }\n function decrypt(data, key, discardNumber) {\n  if (discardNumber >= data.length) {\n   return new Uint8Array(0);\n  }\n  var r = key | 0, c1 = 52845, c2 = 22719, i, j;\n  for (i = 0; i < discardNumber; i++) {\n   r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\n  }\n  var count = data.length - discardNumber;\n  var decrypted = new Uint8Array(count);\n  for (i = discardNumber, j = 0; j < count; i++, j++) {\n   var value = data[i];\n   decrypted[j] = value ^ r >> 8;\n   r = (value + r) * c1 + c2 & (1 << 16) - 1;\n  }\n  return decrypted;\n }\n function decryptAscii(data, key, discardNumber) {\n  var r = key | 0, c1 = 52845, c2 = 22719;\n  var count = data.length, maybeLength = count >>> 1;\n  var decrypted = new Uint8Array(maybeLength);\n  var i, j;\n  for (i = 0, j = 0; i < count; i++) {\n   var digit1 = data[i];\n   if (!isHexDigit(digit1)) {\n    continue;\n   }\n   i++;\n   var digit2;\n   while (i < count && !isHexDigit(digit2 = data[i])) {\n    i++;\n   }\n   if (i < count) {\n    var value = parseInt(String.fromCharCode(digit1, digit2), 16);\n    decrypted[j++] = value ^ r >> 8;\n    r = (value + r) * c1 + c2 & (1 << 16) - 1;\n   }\n  }\n  return Array.prototype.slice.call(decrypted, discardNumber, j);\n }\n function isSpecial(c) {\n  return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\n }\n function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\n  if (encrypted) {\n   var data = stream.getBytes();\n   var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\n   stream = new Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\n  }\n  this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n  this.stream = stream;\n  this.nextChar();\n }\n Type1Parser.prototype = {\n  readNumberArray: function Type1Parser_readNumberArray() {\n   this.getToken();\n   var array = [];\n   while (true) {\n    var token = this.getToken();\n    if (token === null || token === ']' || token === '}') {\n     break;\n    }\n    array.push(parseFloat(token || 0));\n   }\n   return array;\n  },\n  readNumber: function Type1Parser_readNumber() {\n   var token = this.getToken();\n   return parseFloat(token || 0);\n  },\n  readInt: function Type1Parser_readInt() {\n   var token = this.getToken();\n   return parseInt(token || 0, 10) | 0;\n  },\n  readBoolean: function Type1Parser_readBoolean() {\n   var token = this.getToken();\n   return token === 'true' ? 1 : 0;\n  },\n  nextChar: function Type1_nextChar() {\n   return this.currentChar = this.stream.getByte();\n  },\n  getToken: function Type1Parser_getToken() {\n   var comment = false;\n   var ch = this.currentChar;\n   while (true) {\n    if (ch === -1) {\n     return null;\n    }\n    if (comment) {\n     if (ch === 0x0A || ch === 0x0D) {\n      comment = false;\n     }\n    } else if (ch === 0x25) {\n     comment = true;\n    } else if (!isSpace(ch)) {\n     break;\n    }\n    ch = this.nextChar();\n   }\n   if (isSpecial(ch)) {\n    this.nextChar();\n    return String.fromCharCode(ch);\n   }\n   var token = '';\n   do {\n    token += String.fromCharCode(ch);\n    ch = this.nextChar();\n   } while (ch >= 0 && !isSpace(ch) && !isSpecial(ch));\n   return token;\n  },\n  extractFontProgram: function Type1Parser_extractFontProgram() {\n   var stream = this.stream;\n   var subrs = [], charstrings = [];\n   var privateData = Object.create(null);\n   privateData['lenIV'] = 4;\n   var program = {\n    subrs: [],\n    charstrings: [],\n    properties: { 'privateData': privateData }\n   };\n   var token, length, data, lenIV, encoded;\n   while ((token = this.getToken()) !== null) {\n    if (token !== '/') {\n     continue;\n    }\n    token = this.getToken();\n    switch (token) {\n    case 'CharStrings':\n     this.getToken();\n     this.getToken();\n     this.getToken();\n     this.getToken();\n     while (true) {\n      token = this.getToken();\n      if (token === null || token === 'end') {\n       break;\n      }\n      if (token !== '/') {\n       continue;\n      }\n      var glyph = this.getToken();\n      length = this.readInt();\n      this.getToken();\n      data = stream.makeSubStream(stream.pos, length);\n      lenIV = program.properties.privateData['lenIV'];\n      encoded = decrypt(data.getBytes(), CHAR_STRS_ENCRYPT_KEY, lenIV);\n      stream.skip(length);\n      this.nextChar();\n      token = this.getToken();\n      if (token === 'noaccess') {\n       this.getToken();\n      }\n      charstrings.push({\n       glyph: glyph,\n       encoded: encoded\n      });\n     }\n     break;\n    case 'Subrs':\n     this.readInt();\n     this.getToken();\n     while ((token = this.getToken()) === 'dup') {\n      var index = this.readInt();\n      length = this.readInt();\n      this.getToken();\n      data = stream.makeSubStream(stream.pos, length);\n      lenIV = program.properties.privateData['lenIV'];\n      encoded = decrypt(data.getBytes(), CHAR_STRS_ENCRYPT_KEY, lenIV);\n      stream.skip(length);\n      this.nextChar();\n      token = this.getToken();\n      if (token === 'noaccess') {\n       this.getToken();\n      }\n      subrs[index] = encoded;\n     }\n     break;\n    case 'BlueValues':\n    case 'OtherBlues':\n    case 'FamilyBlues':\n    case 'FamilyOtherBlues':\n     var blueArray = this.readNumberArray();\n     if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\n      program.properties.privateData[token] = blueArray;\n     }\n     break;\n    case 'StemSnapH':\n    case 'StemSnapV':\n     program.properties.privateData[token] = this.readNumberArray();\n     break;\n    case 'StdHW':\n    case 'StdVW':\n     program.properties.privateData[token] = this.readNumberArray()[0];\n     break;\n    case 'BlueShift':\n    case 'lenIV':\n    case 'BlueFuzz':\n    case 'BlueScale':\n    case 'LanguageGroup':\n    case 'ExpansionFactor':\n     program.properties.privateData[token] = this.readNumber();\n     break;\n    case 'ForceBold':\n     program.properties.privateData[token] = this.readBoolean();\n     break;\n    }\n   }\n   for (var i = 0; i < charstrings.length; i++) {\n    glyph = charstrings[i].glyph;\n    encoded = charstrings[i].encoded;\n    var charString = new Type1CharString();\n    var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\n    var output = charString.output;\n    if (error) {\n     output = [14];\n    }\n    program.charstrings.push({\n     glyphName: glyph,\n     charstring: output,\n     width: charString.width,\n     lsb: charString.lsb,\n     seac: charString.seac\n    });\n   }\n   return program;\n  },\n  extractFontHeader: function Type1Parser_extractFontHeader(properties) {\n   var token;\n   while ((token = this.getToken()) !== null) {\n    if (token !== '/') {\n     continue;\n    }\n    token = this.getToken();\n    switch (token) {\n    case 'FontMatrix':\n     var matrix = this.readNumberArray();\n     properties.fontMatrix = matrix;\n     break;\n    case 'Encoding':\n     var encodingArg = this.getToken();\n     var encoding;\n     if (!/^\\d+$/.test(encodingArg)) {\n      encoding = getEncoding(encodingArg);\n     } else {\n      encoding = [];\n      var size = parseInt(encodingArg, 10) | 0;\n      this.getToken();\n      for (var j = 0; j < size; j++) {\n       token = this.getToken();\n       while (token !== 'dup' && token !== 'def') {\n        token = this.getToken();\n        if (token === null) {\n         return;\n        }\n       }\n       if (token === 'def') {\n        break;\n       }\n       var index = this.readInt();\n       this.getToken();\n       var glyph = this.getToken();\n       encoding[index] = glyph;\n       this.getToken();\n      }\n     }\n     properties.builtInEncoding = encoding;\n     break;\n    case 'FontBBox':\n     var fontBBox = this.readNumberArray();\n     properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n     properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n     properties.ascentScaled = true;\n     break;\n    }\n   }\n  }\n };\n return Type1Parser;\n}();\nexports.Type1Parser = Type1Parser;\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\nif (typeof PDFJS === 'undefined' || !PDFJS.compatibilityChecked) {\n var globalScope = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this;\n var userAgent = typeof navigator !== 'undefined' && navigator.userAgent || '';\n var isAndroid = /Android/.test(userAgent);\n var isAndroidPre3 = /Android\\s[0-2][^\\d]/.test(userAgent);\n var isAndroidPre5 = /Android\\s[0-4][^\\d]/.test(userAgent);\n var isChrome = userAgent.indexOf('Chrom') >= 0;\n var isChromeWithRangeBug = /Chrome\\/(39|40)\\./.test(userAgent);\n var isIOSChrome = userAgent.indexOf('CriOS') >= 0;\n var isIE = userAgent.indexOf('Trident') >= 0;\n var isIOS = /\\b(iPad|iPhone|iPod)(?=;)/.test(userAgent);\n var isOpera = userAgent.indexOf('Opera') >= 0;\n var isSafari = /Safari\\//.test(userAgent) && !/(Chrome\\/|Android\\s)/.test(userAgent);\n var hasDOM = typeof window === 'object' && typeof document === 'object';\n if (typeof PDFJS === 'undefined') {\n  globalScope.PDFJS = {};\n }\n PDFJS.compatibilityChecked = true;\n (function checkTypedArrayCompatibility() {\n  if (typeof Uint8Array !== 'undefined') {\n   if (typeof Uint8Array.prototype.subarray === 'undefined') {\n    Uint8Array.prototype.subarray = function subarray(start, end) {\n     return new Uint8Array(this.slice(start, end));\n    };\n    Float32Array.prototype.subarray = function subarray(start, end) {\n     return new Float32Array(this.slice(start, end));\n    };\n   }\n   if (typeof Float64Array === 'undefined') {\n    globalScope.Float64Array = Float32Array;\n   }\n   return;\n  }\n  function subarray(start, end) {\n   return new TypedArray(this.slice(start, end));\n  }\n  function setArrayOffset(array, offset) {\n   if (arguments.length < 2) {\n    offset = 0;\n   }\n   for (var i = 0, n = array.length; i < n; ++i, ++offset) {\n    this[offset] = array[i] & 0xFF;\n   }\n  }\n  function TypedArray(arg1) {\n   var result, i, n;\n   if (typeof arg1 === 'number') {\n    result = [];\n    for (i = 0; i < arg1; ++i) {\n     result[i] = 0;\n    }\n   } else if ('slice' in arg1) {\n    result = arg1.slice(0);\n   } else {\n    result = [];\n    for (i = 0, n = arg1.length; i < n; ++i) {\n     result[i] = arg1[i];\n    }\n   }\n   result.subarray = subarray;\n   result.buffer = result;\n   result.byteLength = result.length;\n   result.set = setArrayOffset;\n   if (typeof arg1 === 'object' && arg1.buffer) {\n    result.buffer = arg1.buffer;\n   }\n   return result;\n  }\n  globalScope.Uint8Array = TypedArray;\n  globalScope.Int8Array = TypedArray;\n  globalScope.Uint32Array = TypedArray;\n  globalScope.Int32Array = TypedArray;\n  globalScope.Uint16Array = TypedArray;\n  globalScope.Float32Array = TypedArray;\n  globalScope.Float64Array = TypedArray;\n }());\n (function normalizeURLObject() {\n  if (!globalScope.URL) {\n   globalScope.URL = globalScope.webkitURL;\n  }\n }());\n (function checkObjectDefinePropertyCompatibility() {\n  if (typeof Object.defineProperty !== 'undefined') {\n   var definePropertyPossible = true;\n   try {\n    if (hasDOM) {\n     Object.defineProperty(new Image(), 'id', { value: 'test' });\n    }\n    var Test = function Test() {\n    };\n    Test.prototype = {\n     get id() {\n     }\n    };\n    Object.defineProperty(new Test(), 'id', {\n     value: '',\n     configurable: true,\n     enumerable: true,\n     writable: false\n    });\n   } catch (e) {\n    definePropertyPossible = false;\n   }\n   if (definePropertyPossible) {\n    return;\n   }\n  }\n  Object.defineProperty = function objectDefineProperty(obj, name, def) {\n   delete obj[name];\n   if ('get' in def) {\n    obj.__defineGetter__(name, def['get']);\n   }\n   if ('set' in def) {\n    obj.__defineSetter__(name, def['set']);\n   }\n   if ('value' in def) {\n    obj.__defineSetter__(name, function objectDefinePropertySetter(value) {\n     this.__defineGetter__(name, function objectDefinePropertyGetter() {\n      return value;\n     });\n     return value;\n    });\n    obj[name] = def.value;\n   }\n  };\n }());\n (function checkXMLHttpRequestResponseCompatibility() {\n  if (typeof XMLHttpRequest === 'undefined') {\n   return;\n  }\n  var xhrPrototype = XMLHttpRequest.prototype;\n  var xhr = new XMLHttpRequest();\n  if (!('overrideMimeType' in xhr)) {\n   Object.defineProperty(xhrPrototype, 'overrideMimeType', {\n    value: function xmlHttpRequestOverrideMimeType(mimeType) {\n    }\n   });\n  }\n  if ('responseType' in xhr) {\n   return;\n  }\n  Object.defineProperty(xhrPrototype, 'responseType', {\n   get: function xmlHttpRequestGetResponseType() {\n    return this._responseType || 'text';\n   },\n   set: function xmlHttpRequestSetResponseType(value) {\n    if (value === 'text' || value === 'arraybuffer') {\n     this._responseType = value;\n     if (value === 'arraybuffer' && typeof this.overrideMimeType === 'function') {\n      this.overrideMimeType('text/plain; charset=x-user-defined');\n     }\n    }\n   }\n  });\n  if (typeof VBArray !== 'undefined') {\n   Object.defineProperty(xhrPrototype, 'response', {\n    get: function xmlHttpRequestResponseGet() {\n     if (this.responseType === 'arraybuffer') {\n      return new Uint8Array(new VBArray(this.responseBody).toArray());\n     }\n     return this.responseText;\n    }\n   });\n   return;\n  }\n  Object.defineProperty(xhrPrototype, 'response', {\n   get: function xmlHttpRequestResponseGet() {\n    if (this.responseType !== 'arraybuffer') {\n     return this.responseText;\n    }\n    var text = this.responseText;\n    var i, n = text.length;\n    var result = new Uint8Array(n);\n    for (i = 0; i < n; ++i) {\n     result[i] = text.charCodeAt(i) & 0xFF;\n    }\n    return result.buffer;\n   }\n  });\n }());\n (function checkWindowBtoaCompatibility() {\n  if ('btoa' in globalScope) {\n   return;\n  }\n  var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  globalScope.btoa = function (chars) {\n   var buffer = '';\n   var i, n;\n   for (i = 0, n = chars.length; i < n; i += 3) {\n    var b1 = chars.charCodeAt(i) & 0xFF;\n    var b2 = chars.charCodeAt(i + 1) & 0xFF;\n    var b3 = chars.charCodeAt(i + 2) & 0xFF;\n    var d1 = b1 >> 2, d2 = (b1 & 3) << 4 | b2 >> 4;\n    var d3 = i + 1 < n ? (b2 & 0xF) << 2 | b3 >> 6 : 64;\n    var d4 = i + 2 < n ? b3 & 0x3F : 64;\n    buffer += digits.charAt(d1) + digits.charAt(d2) + digits.charAt(d3) + digits.charAt(d4);\n   }\n   return buffer;\n  };\n }());\n (function checkWindowAtobCompatibility() {\n  if ('atob' in globalScope) {\n   return;\n  }\n  var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  globalScope.atob = function (input) {\n   input = input.replace(/=+$/, '');\n   if (input.length % 4 === 1) {\n    throw new Error('bad atob input');\n   }\n   for (var bc = 0, bs, buffer, idx = 0, output = ''; buffer = input.charAt(idx++); ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {\n    buffer = digits.indexOf(buffer);\n   }\n   return output;\n  };\n }());\n (function checkFunctionPrototypeBindCompatibility() {\n  if (typeof Function.prototype.bind !== 'undefined') {\n   return;\n  }\n  Function.prototype.bind = function functionPrototypeBind(obj) {\n   var fn = this, headArgs = Array.prototype.slice.call(arguments, 1);\n   var bound = function functionPrototypeBindBound() {\n    var args = headArgs.concat(Array.prototype.slice.call(arguments));\n    return fn.apply(obj, args);\n   };\n   return bound;\n  };\n }());\n (function checkDatasetProperty() {\n  if (!hasDOM) {\n   return;\n  }\n  var div = document.createElement('div');\n  if ('dataset' in div) {\n   return;\n  }\n  Object.defineProperty(HTMLElement.prototype, 'dataset', {\n   get: function () {\n    if (this._dataset) {\n     return this._dataset;\n    }\n    var dataset = {};\n    for (var j = 0, jj = this.attributes.length; j < jj; j++) {\n     var attribute = this.attributes[j];\n     if (attribute.name.substring(0, 5) !== 'data-') {\n      continue;\n     }\n     var key = attribute.name.substring(5).replace(/\\-([a-z])/g, function (all, ch) {\n      return ch.toUpperCase();\n     });\n     dataset[key] = attribute.value;\n    }\n    Object.defineProperty(this, '_dataset', {\n     value: dataset,\n     writable: false,\n     enumerable: false\n    });\n    return dataset;\n   },\n   enumerable: true\n  });\n }());\n (function checkClassListProperty() {\n  function changeList(element, itemName, add, remove) {\n   var s = element.className || '';\n   var list = s.split(/\\s+/g);\n   if (list[0] === '') {\n    list.shift();\n   }\n   var index = list.indexOf(itemName);\n   if (index < 0 && add) {\n    list.push(itemName);\n   }\n   if (index >= 0 && remove) {\n    list.splice(index, 1);\n   }\n   element.className = list.join(' ');\n   return index >= 0;\n  }\n  if (!hasDOM) {\n   return;\n  }\n  var div = document.createElement('div');\n  if ('classList' in div) {\n   return;\n  }\n  var classListPrototype = {\n   add: function (name) {\n    changeList(this.element, name, true, false);\n   },\n   contains: function (name) {\n    return changeList(this.element, name, false, false);\n   },\n   remove: function (name) {\n    changeList(this.element, name, false, true);\n   },\n   toggle: function (name) {\n    changeList(this.element, name, true, true);\n   }\n  };\n  Object.defineProperty(HTMLElement.prototype, 'classList', {\n   get: function () {\n    if (this._classList) {\n     return this._classList;\n    }\n    var classList = Object.create(classListPrototype, {\n     element: {\n      value: this,\n      writable: false,\n      enumerable: true\n     }\n    });\n    Object.defineProperty(this, '_classList', {\n     value: classList,\n     writable: false,\n     enumerable: false\n    });\n    return classList;\n   },\n   enumerable: true\n  });\n }());\n (function checkWorkerConsoleCompatibility() {\n  if (typeof importScripts === 'undefined' || 'console' in globalScope) {\n   return;\n  }\n  var consoleTimer = {};\n  var workerConsole = {\n   log: function log() {\n    var args = Array.prototype.slice.call(arguments);\n    globalScope.postMessage({\n     targetName: 'main',\n     action: 'console_log',\n     data: args\n    });\n   },\n   error: function error() {\n    var args = Array.prototype.slice.call(arguments);\n    globalScope.postMessage({\n     targetName: 'main',\n     action: 'console_error',\n     data: args\n    });\n   },\n   time: function time(name) {\n    consoleTimer[name] = Date.now();\n   },\n   timeEnd: function timeEnd(name) {\n    var time = consoleTimer[name];\n    if (!time) {\n     throw new Error('Unknown timer name ' + name);\n    }\n    this.log('Timer:', name, Date.now() - time);\n   }\n  };\n  globalScope.console = workerConsole;\n }());\n (function checkConsoleCompatibility() {\n  if (!hasDOM) {\n   return;\n  }\n  if (!('console' in window)) {\n   window.console = {\n    log: function () {\n    },\n    error: function () {\n    },\n    warn: function () {\n    }\n   };\n   return;\n  }\n  if (!('bind' in console.log)) {\n   console.log = function (fn) {\n    return function (msg) {\n     return fn(msg);\n    };\n   }(console.log);\n   console.error = function (fn) {\n    return function (msg) {\n     return fn(msg);\n    };\n   }(console.error);\n   console.warn = function (fn) {\n    return function (msg) {\n     return fn(msg);\n    };\n   }(console.warn);\n   return;\n  }\n }());\n (function checkOnClickCompatibility() {\n  function ignoreIfTargetDisabled(event) {\n   if (isDisabled(event.target)) {\n    event.stopPropagation();\n   }\n  }\n  function isDisabled(node) {\n   return node.disabled || node.parentNode && isDisabled(node.parentNode);\n  }\n  if (isOpera) {\n   document.addEventListener('click', ignoreIfTargetDisabled, true);\n  }\n }());\n (function checkOnBlobSupport() {\n  if (isIE || isIOSChrome) {\n   PDFJS.disableCreateObjectURL = true;\n  }\n }());\n (function checkNavigatorLanguage() {\n  if (typeof navigator === 'undefined') {\n   return;\n  }\n  if ('language' in navigator) {\n   return;\n  }\n  PDFJS.locale = navigator.userLanguage || 'en-US';\n }());\n (function checkRangeRequests() {\n  if (isSafari || isAndroidPre3 || isChromeWithRangeBug || isIOS) {\n   PDFJS.disableRange = true;\n   PDFJS.disableStream = true;\n  }\n }());\n (function checkHistoryManipulation() {\n  if (!hasDOM) {\n   return;\n  }\n  if (!history.pushState || isAndroidPre3) {\n   PDFJS.disableHistory = true;\n  }\n }());\n (function checkSetPresenceInImageData() {\n  if (!hasDOM) {\n   return;\n  }\n  if (window.CanvasPixelArray) {\n   if (typeof window.CanvasPixelArray.prototype.set !== 'function') {\n    window.CanvasPixelArray.prototype.set = function (arr) {\n     for (var i = 0, ii = this.length; i < ii; i++) {\n      this[i] = arr[i];\n     }\n    };\n   }\n  } else {\n   var polyfill = false, versionMatch;\n   if (isChrome) {\n    versionMatch = userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\n    polyfill = versionMatch && parseInt(versionMatch[2]) < 21;\n   } else if (isAndroid) {\n    polyfill = isAndroidPre5;\n   } else if (isSafari) {\n    versionMatch = userAgent.match(/Version\\/([0-9]+)\\.([0-9]+)\\.([0-9]+) Safari\\//);\n    polyfill = versionMatch && parseInt(versionMatch[1]) < 6;\n   }\n   if (polyfill) {\n    var contextPrototype = window.CanvasRenderingContext2D.prototype;\n    var createImageData = contextPrototype.createImageData;\n    contextPrototype.createImageData = function (w, h) {\n     var imageData = createImageData.call(this, w, h);\n     imageData.data.set = function (arr) {\n      for (var i = 0, ii = this.length; i < ii; i++) {\n       this[i] = arr[i];\n      }\n     };\n     return imageData;\n    };\n    contextPrototype = null;\n   }\n  }\n }());\n (function checkRequestAnimationFrame() {\n  function fakeRequestAnimationFrame(callback) {\n   window.setTimeout(callback, 20);\n  }\n  if (!hasDOM) {\n   return;\n  }\n  if (isIOS) {\n   window.requestAnimationFrame = fakeRequestAnimationFrame;\n   return;\n  }\n  if ('requestAnimationFrame' in window) {\n   return;\n  }\n  window.requestAnimationFrame = window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || fakeRequestAnimationFrame;\n }());\n (function checkCanvasSizeLimitation() {\n  if (isIOS || isAndroid) {\n   PDFJS.maxCanvasPixels = 5242880;\n  }\n }());\n (function checkFullscreenSupport() {\n  if (!hasDOM) {\n   return;\n  }\n  if (isIE && window.parent !== window) {\n   PDFJS.disableFullscreen = true;\n  }\n }());\n (function checkCurrentScript() {\n  if (!hasDOM) {\n   return;\n  }\n  if ('currentScript' in document) {\n   return;\n  }\n  Object.defineProperty(document, 'currentScript', {\n   get: function () {\n    var scripts = document.getElementsByTagName('script');\n    return scripts[scripts.length - 1];\n   },\n   enumerable: true,\n   configurable: true\n  });\n }());\n (function checkInputTypeNumberAssign() {\n  if (!hasDOM) {\n   return;\n  }\n  var el = document.createElement('input');\n  try {\n   el.type = 'number';\n  } catch (ex) {\n   var inputProto = el.constructor.prototype;\n   var typeProperty = Object.getOwnPropertyDescriptor(inputProto, 'type');\n   Object.defineProperty(inputProto, 'type', {\n    get: function () {\n     return typeProperty.get.call(this);\n    },\n    set: function (value) {\n     typeProperty.set.call(this, value === 'number' ? 'text' : value);\n    },\n    enumerable: true,\n    configurable: true\n   });\n  }\n }());\n (function checkDocumentReadyState() {\n  if (!hasDOM) {\n   return;\n  }\n  if (!document.attachEvent) {\n   return;\n  }\n  var documentProto = document.constructor.prototype;\n  var readyStateProto = Object.getOwnPropertyDescriptor(documentProto, 'readyState');\n  Object.defineProperty(documentProto, 'readyState', {\n   get: function () {\n    var value = readyStateProto.get.call(this);\n    return value === 'interactive' ? 'loading' : value;\n   },\n   set: function (value) {\n    readyStateProto.set.call(this, value);\n   },\n   enumerable: true,\n   configurable: true\n  });\n }());\n (function checkChildNodeRemove() {\n  if (!hasDOM) {\n   return;\n  }\n  if (typeof Element.prototype.remove !== 'undefined') {\n   return;\n  }\n  Element.prototype.remove = function () {\n   if (this.parentNode) {\n    this.parentNode.removeChild(this);\n   }\n  };\n }());\n (function checkPromise() {\n  if (globalScope.Promise) {\n   if (typeof globalScope.Promise.all !== 'function') {\n    globalScope.Promise.all = function (iterable) {\n     var count = 0, results = [], resolve, reject;\n     var promise = new globalScope.Promise(function (resolve_, reject_) {\n      resolve = resolve_;\n      reject = reject_;\n     });\n     iterable.forEach(function (p, i) {\n      count++;\n      p.then(function (result) {\n       results[i] = result;\n       count--;\n       if (count === 0) {\n        resolve(results);\n       }\n      }, reject);\n     });\n     if (count === 0) {\n      resolve(results);\n     }\n     return promise;\n    };\n   }\n   if (typeof globalScope.Promise.resolve !== 'function') {\n    globalScope.Promise.resolve = function (value) {\n     return new globalScope.Promise(function (resolve) {\n      resolve(value);\n     });\n    };\n   }\n   if (typeof globalScope.Promise.reject !== 'function') {\n    globalScope.Promise.reject = function (reason) {\n     return new globalScope.Promise(function (resolve, reject) {\n      reject(reason);\n     });\n    };\n   }\n   if (typeof globalScope.Promise.prototype.catch !== 'function') {\n    globalScope.Promise.prototype.catch = function (onReject) {\n     return globalScope.Promise.prototype.then(undefined, onReject);\n    };\n   }\n   return;\n  }\n  var STATUS_PENDING = 0;\n  var STATUS_RESOLVED = 1;\n  var STATUS_REJECTED = 2;\n  var REJECTION_TIMEOUT = 500;\n  var HandlerManager = {\n   handlers: [],\n   running: false,\n   unhandledRejections: [],\n   pendingRejectionCheck: false,\n   scheduleHandlers: function scheduleHandlers(promise) {\n    if (promise._status === STATUS_PENDING) {\n     return;\n    }\n    this.handlers = this.handlers.concat(promise._handlers);\n    promise._handlers = [];\n    if (this.running) {\n     return;\n    }\n    this.running = true;\n    setTimeout(this.runHandlers.bind(this), 0);\n   },\n   runHandlers: function runHandlers() {\n    var RUN_TIMEOUT = 1;\n    var timeoutAt = Date.now() + RUN_TIMEOUT;\n    while (this.handlers.length > 0) {\n     var handler = this.handlers.shift();\n     var nextStatus = handler.thisPromise._status;\n     var nextValue = handler.thisPromise._value;\n     try {\n      if (nextStatus === STATUS_RESOLVED) {\n       if (typeof handler.onResolve === 'function') {\n        nextValue = handler.onResolve(nextValue);\n       }\n      } else if (typeof handler.onReject === 'function') {\n       nextValue = handler.onReject(nextValue);\n       nextStatus = STATUS_RESOLVED;\n       if (handler.thisPromise._unhandledRejection) {\n        this.removeUnhandeledRejection(handler.thisPromise);\n       }\n      }\n     } catch (ex) {\n      nextStatus = STATUS_REJECTED;\n      nextValue = ex;\n     }\n     handler.nextPromise._updateStatus(nextStatus, nextValue);\n     if (Date.now() >= timeoutAt) {\n      break;\n     }\n    }\n    if (this.handlers.length > 0) {\n     setTimeout(this.runHandlers.bind(this), 0);\n     return;\n    }\n    this.running = false;\n   },\n   addUnhandledRejection: function addUnhandledRejection(promise) {\n    this.unhandledRejections.push({\n     promise: promise,\n     time: Date.now()\n    });\n    this.scheduleRejectionCheck();\n   },\n   removeUnhandeledRejection: function removeUnhandeledRejection(promise) {\n    promise._unhandledRejection = false;\n    for (var i = 0; i < this.unhandledRejections.length; i++) {\n     if (this.unhandledRejections[i].promise === promise) {\n      this.unhandledRejections.splice(i);\n      i--;\n     }\n    }\n   },\n   scheduleRejectionCheck: function scheduleRejectionCheck() {\n    if (this.pendingRejectionCheck) {\n     return;\n    }\n    this.pendingRejectionCheck = true;\n    setTimeout(function rejectionCheck() {\n     this.pendingRejectionCheck = false;\n     var now = Date.now();\n     for (var i = 0; i < this.unhandledRejections.length; i++) {\n      if (now - this.unhandledRejections[i].time > REJECTION_TIMEOUT) {\n       var unhandled = this.unhandledRejections[i].promise._value;\n       var msg = 'Unhandled rejection: ' + unhandled;\n       if (unhandled.stack) {\n        msg += '\\n' + unhandled.stack;\n       }\n       try {\n        throw new Error(msg);\n       } catch (_) {\n        console.warn(msg);\n       }\n       this.unhandledRejections.splice(i);\n       i--;\n      }\n     }\n     if (this.unhandledRejections.length) {\n      this.scheduleRejectionCheck();\n     }\n    }.bind(this), REJECTION_TIMEOUT);\n   }\n  };\n  var Promise = function Promise(resolver) {\n   this._status = STATUS_PENDING;\n   this._handlers = [];\n   try {\n    resolver.call(this, this._resolve.bind(this), this._reject.bind(this));\n   } catch (e) {\n    this._reject(e);\n   }\n  };\n  Promise.all = function Promise_all(promises) {\n   var resolveAll, rejectAll;\n   var deferred = new Promise(function (resolve, reject) {\n    resolveAll = resolve;\n    rejectAll = reject;\n   });\n   var unresolved = promises.length;\n   var results = [];\n   if (unresolved === 0) {\n    resolveAll(results);\n    return deferred;\n   }\n   function reject(reason) {\n    if (deferred._status === STATUS_REJECTED) {\n     return;\n    }\n    results = [];\n    rejectAll(reason);\n   }\n   for (var i = 0, ii = promises.length; i < ii; ++i) {\n    var promise = promises[i];\n    var resolve = function (i) {\n     return function (value) {\n      if (deferred._status === STATUS_REJECTED) {\n       return;\n      }\n      results[i] = value;\n      unresolved--;\n      if (unresolved === 0) {\n       resolveAll(results);\n      }\n     };\n    }(i);\n    if (Promise.isPromise(promise)) {\n     promise.then(resolve, reject);\n    } else {\n     resolve(promise);\n    }\n   }\n   return deferred;\n  };\n  Promise.isPromise = function Promise_isPromise(value) {\n   return value && typeof value.then === 'function';\n  };\n  Promise.resolve = function Promise_resolve(value) {\n   return new Promise(function (resolve) {\n    resolve(value);\n   });\n  };\n  Promise.reject = function Promise_reject(reason) {\n   return new Promise(function (resolve, reject) {\n    reject(reason);\n   });\n  };\n  Promise.prototype = {\n   _status: null,\n   _value: null,\n   _handlers: null,\n   _unhandledRejection: null,\n   _updateStatus: function Promise__updateStatus(status, value) {\n    if (this._status === STATUS_RESOLVED || this._status === STATUS_REJECTED) {\n     return;\n    }\n    if (status === STATUS_RESOLVED && Promise.isPromise(value)) {\n     value.then(this._updateStatus.bind(this, STATUS_RESOLVED), this._updateStatus.bind(this, STATUS_REJECTED));\n     return;\n    }\n    this._status = status;\n    this._value = value;\n    if (status === STATUS_REJECTED && this._handlers.length === 0) {\n     this._unhandledRejection = true;\n     HandlerManager.addUnhandledRejection(this);\n    }\n    HandlerManager.scheduleHandlers(this);\n   },\n   _resolve: function Promise_resolve(value) {\n    this._updateStatus(STATUS_RESOLVED, value);\n   },\n   _reject: function Promise_reject(reason) {\n    this._updateStatus(STATUS_REJECTED, reason);\n   },\n   then: function Promise_then(onResolve, onReject) {\n    var nextPromise = new Promise(function (resolve, reject) {\n     this.resolve = resolve;\n     this.reject = reject;\n    });\n    this._handlers.push({\n     thisPromise: this,\n     onResolve: onResolve,\n     onReject: onReject,\n     nextPromise: nextPromise\n    });\n    HandlerManager.scheduleHandlers(this);\n    return nextPromise;\n   },\n   catch: function Promise_catch(onReject) {\n    return this.then(undefined, onReject);\n   }\n  };\n  globalScope.Promise = Promise;\n }());\n (function checkWeakMap() {\n  if (globalScope.WeakMap) {\n   return;\n  }\n  var id = 0;\n  function WeakMap() {\n   this.id = '$weakmap' + id++;\n  }\n  WeakMap.prototype = {\n   has: function (obj) {\n    return !!Object.getOwnPropertyDescriptor(obj, this.id);\n   },\n   get: function (obj, defaultValue) {\n    return this.has(obj) ? obj[this.id] : defaultValue;\n   },\n   set: function (obj, value) {\n    Object.defineProperty(obj, this.id, {\n     value: value,\n     enumerable: false,\n     configurable: true\n    });\n   },\n   delete: function (obj) {\n    delete obj[this.id];\n   }\n  };\n  globalScope.WeakMap = WeakMap;\n }());\n (function checkURLConstructor() {\n  var hasWorkingUrl = false;\n  try {\n   if (typeof URL === 'function' && typeof URL.prototype === 'object' && 'origin' in URL.prototype) {\n    var u = new URL('b', 'http://a');\n    u.pathname = 'c%20d';\n    hasWorkingUrl = u.href === 'http://a/c%20d';\n   }\n  } catch (e) {\n  }\n  if (hasWorkingUrl) {\n   return;\n  }\n  var relative = Object.create(null);\n  relative['ftp'] = 21;\n  relative['file'] = 0;\n  relative['gopher'] = 70;\n  relative['http'] = 80;\n  relative['https'] = 443;\n  relative['ws'] = 80;\n  relative['wss'] = 443;\n  var relativePathDotMapping = Object.create(null);\n  relativePathDotMapping['%2e'] = '.';\n  relativePathDotMapping['.%2e'] = '..';\n  relativePathDotMapping['%2e.'] = '..';\n  relativePathDotMapping['%2e%2e'] = '..';\n  function isRelativeScheme(scheme) {\n   return relative[scheme] !== undefined;\n  }\n  function invalid() {\n   clear.call(this);\n   this._isInvalid = true;\n  }\n  function IDNAToASCII(h) {\n   if (h === '') {\n    invalid.call(this);\n   }\n   return h.toLowerCase();\n  }\n  function percentEscape(c) {\n   var unicode = c.charCodeAt(0);\n   if (unicode > 0x20 && unicode < 0x7F && [\n     0x22,\n     0x23,\n     0x3C,\n     0x3E,\n     0x3F,\n     0x60\n    ].indexOf(unicode) === -1) {\n    return c;\n   }\n   return encodeURIComponent(c);\n  }\n  function percentEscapeQuery(c) {\n   var unicode = c.charCodeAt(0);\n   if (unicode > 0x20 && unicode < 0x7F && [\n     0x22,\n     0x23,\n     0x3C,\n     0x3E,\n     0x60\n    ].indexOf(unicode) === -1) {\n    return c;\n   }\n   return encodeURIComponent(c);\n  }\n  var EOF, ALPHA = /[a-zA-Z]/, ALPHANUMERIC = /[a-zA-Z0-9\\+\\-\\.]/;\n  function parse(input, stateOverride, base) {\n   function err(message) {\n    errors.push(message);\n   }\n   var state = stateOverride || 'scheme start', cursor = 0, buffer = '', seenAt = false, seenBracket = false, errors = [];\n   loop:\n    while ((input[cursor - 1] !== EOF || cursor === 0) && !this._isInvalid) {\n     var c = input[cursor];\n     switch (state) {\n     case 'scheme start':\n      if (c && ALPHA.test(c)) {\n       buffer += c.toLowerCase();\n       state = 'scheme';\n      } else if (!stateOverride) {\n       buffer = '';\n       state = 'no scheme';\n       continue;\n      } else {\n       err('Invalid scheme.');\n       break loop;\n      }\n      break;\n     case 'scheme':\n      if (c && ALPHANUMERIC.test(c)) {\n       buffer += c.toLowerCase();\n      } else if (c === ':') {\n       this._scheme = buffer;\n       buffer = '';\n       if (stateOverride) {\n        break loop;\n       }\n       if (isRelativeScheme(this._scheme)) {\n        this._isRelative = true;\n       }\n       if (this._scheme === 'file') {\n        state = 'relative';\n       } else if (this._isRelative && base && base._scheme === this._scheme) {\n        state = 'relative or authority';\n       } else if (this._isRelative) {\n        state = 'authority first slash';\n       } else {\n        state = 'scheme data';\n       }\n      } else if (!stateOverride) {\n       buffer = '';\n       cursor = 0;\n       state = 'no scheme';\n       continue;\n      } else if (EOF === c) {\n       break loop;\n      } else {\n       err('Code point not allowed in scheme: ' + c);\n       break loop;\n      }\n      break;\n     case 'scheme data':\n      if (c === '?') {\n       this._query = '?';\n       state = 'query';\n      } else if (c === '#') {\n       this._fragment = '#';\n       state = 'fragment';\n      } else {\n       if (EOF !== c && '\\t' !== c && '\\n' !== c && '\\r' !== c) {\n        this._schemeData += percentEscape(c);\n       }\n      }\n      break;\n     case 'no scheme':\n      if (!base || !isRelativeScheme(base._scheme)) {\n       err('Missing scheme.');\n       invalid.call(this);\n      } else {\n       state = 'relative';\n       continue;\n      }\n      break;\n     case 'relative or authority':\n      if (c === '/' && input[cursor + 1] === '/') {\n       state = 'authority ignore slashes';\n      } else {\n       err('Expected /, got: ' + c);\n       state = 'relative';\n       continue;\n      }\n      break;\n     case 'relative':\n      this._isRelative = true;\n      if ('file' !== this._scheme) {\n       this._scheme = base._scheme;\n      }\n      if (EOF === c) {\n       this._host = base._host;\n       this._port = base._port;\n       this._path = base._path.slice();\n       this._query = base._query;\n       this._username = base._username;\n       this._password = base._password;\n       break loop;\n      } else if (c === '/' || c === '\\\\') {\n       if (c === '\\\\') {\n        err('\\\\ is an invalid code point.');\n       }\n       state = 'relative slash';\n      } else if (c === '?') {\n       this._host = base._host;\n       this._port = base._port;\n       this._path = base._path.slice();\n       this._query = '?';\n       this._username = base._username;\n       this._password = base._password;\n       state = 'query';\n      } else if (c === '#') {\n       this._host = base._host;\n       this._port = base._port;\n       this._path = base._path.slice();\n       this._query = base._query;\n       this._fragment = '#';\n       this._username = base._username;\n       this._password = base._password;\n       state = 'fragment';\n      } else {\n       var nextC = input[cursor + 1];\n       var nextNextC = input[cursor + 2];\n       if ('file' !== this._scheme || !ALPHA.test(c) || nextC !== ':' && nextC !== '|' || EOF !== nextNextC && '/' !== nextNextC && '\\\\' !== nextNextC && '?' !== nextNextC && '#' !== nextNextC) {\n        this._host = base._host;\n        this._port = base._port;\n        this._username = base._username;\n        this._password = base._password;\n        this._path = base._path.slice();\n        this._path.pop();\n       }\n       state = 'relative path';\n       continue;\n      }\n      break;\n     case 'relative slash':\n      if (c === '/' || c === '\\\\') {\n       if (c === '\\\\') {\n        err('\\\\ is an invalid code point.');\n       }\n       if (this._scheme === 'file') {\n        state = 'file host';\n       } else {\n        state = 'authority ignore slashes';\n       }\n      } else {\n       if ('file' !== this._scheme) {\n        this._host = base._host;\n        this._port = base._port;\n        this._username = base._username;\n        this._password = base._password;\n       }\n       state = 'relative path';\n       continue;\n      }\n      break;\n     case 'authority first slash':\n      if (c === '/') {\n       state = 'authority second slash';\n      } else {\n       err('Expected \\'/\\', got: ' + c);\n       state = 'authority ignore slashes';\n       continue;\n      }\n      break;\n     case 'authority second slash':\n      state = 'authority ignore slashes';\n      if ('/' !== c) {\n       err('Expected \\'/\\', got: ' + c);\n       continue;\n      }\n      break;\n     case 'authority ignore slashes':\n      if ('/' !== c && '\\\\' !== c) {\n       state = 'authority';\n       continue;\n      } else {\n       err('Expected authority, got: ' + c);\n      }\n      break;\n     case 'authority':\n      if (c === '@') {\n       if (seenAt) {\n        err('@ already seen.');\n        buffer += '%40';\n       }\n       seenAt = true;\n       for (var i = 0; i < buffer.length; i++) {\n        var cp = buffer[i];\n        if (cp === '\\t' || cp === '\\n' || cp === '\\r') {\n         err('Invalid whitespace in authority.');\n         continue;\n        }\n        if (cp === ':' && this._password === null) {\n         this._password = '';\n         continue;\n        }\n        var tempC = percentEscape(cp);\n        if (null !== this._password) {\n         this._password += tempC;\n        } else {\n         this._username += tempC;\n        }\n       }\n       buffer = '';\n      } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n       cursor -= buffer.length;\n       buffer = '';\n       state = 'host';\n       continue;\n      } else {\n       buffer += c;\n      }\n      break;\n     case 'file host':\n      if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n       if (buffer.length === 2 && ALPHA.test(buffer[0]) && (buffer[1] === ':' || buffer[1] === '|')) {\n        state = 'relative path';\n       } else if (buffer.length === 0) {\n        state = 'relative path start';\n       } else {\n        this._host = IDNAToASCII.call(this, buffer);\n        buffer = '';\n        state = 'relative path start';\n       }\n       continue;\n      } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n       err('Invalid whitespace in file host.');\n      } else {\n       buffer += c;\n      }\n      break;\n     case 'host':\n     case 'hostname':\n      if (c === ':' && !seenBracket) {\n       this._host = IDNAToASCII.call(this, buffer);\n       buffer = '';\n       state = 'port';\n       if (stateOverride === 'hostname') {\n        break loop;\n       }\n      } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n       this._host = IDNAToASCII.call(this, buffer);\n       buffer = '';\n       state = 'relative path start';\n       if (stateOverride) {\n        break loop;\n       }\n       continue;\n      } else if ('\\t' !== c && '\\n' !== c && '\\r' !== c) {\n       if (c === '[') {\n        seenBracket = true;\n       } else if (c === ']') {\n        seenBracket = false;\n       }\n       buffer += c;\n      } else {\n       err('Invalid code point in host/hostname: ' + c);\n      }\n      break;\n     case 'port':\n      if (/[0-9]/.test(c)) {\n       buffer += c;\n      } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#' || stateOverride) {\n       if ('' !== buffer) {\n        var temp = parseInt(buffer, 10);\n        if (temp !== relative[this._scheme]) {\n         this._port = temp + '';\n        }\n        buffer = '';\n       }\n       if (stateOverride) {\n        break loop;\n       }\n       state = 'relative path start';\n       continue;\n      } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n       err('Invalid code point in port: ' + c);\n      } else {\n       invalid.call(this);\n      }\n      break;\n     case 'relative path start':\n      if (c === '\\\\') {\n       err('\\'\\\\\\' not allowed in path.');\n      }\n      state = 'relative path';\n      if ('/' !== c && '\\\\' !== c) {\n       continue;\n      }\n      break;\n     case 'relative path':\n      if (c === EOF || c === '/' || c === '\\\\' || !stateOverride && (c === '?' || c === '#')) {\n       if (c === '\\\\') {\n        err('\\\\ not allowed in relative path.');\n       }\n       var tmp;\n       if (tmp = relativePathDotMapping[buffer.toLowerCase()]) {\n        buffer = tmp;\n       }\n       if (buffer === '..') {\n        this._path.pop();\n        if ('/' !== c && '\\\\' !== c) {\n         this._path.push('');\n        }\n       } else if (buffer === '.' && '/' !== c && '\\\\' !== c) {\n        this._path.push('');\n       } else if ('.' !== buffer) {\n        if (this._scheme === 'file' && this._path.length === 0 && buffer.length === 2 && ALPHA.test(buffer[0]) && buffer[1] === '|') {\n         buffer = buffer[0] + ':';\n        }\n        this._path.push(buffer);\n       }\n       buffer = '';\n       if (c === '?') {\n        this._query = '?';\n        state = 'query';\n       } else if (c === '#') {\n        this._fragment = '#';\n        state = 'fragment';\n       }\n      } else if ('\\t' !== c && '\\n' !== c && '\\r' !== c) {\n       buffer += percentEscape(c);\n      }\n      break;\n     case 'query':\n      if (!stateOverride && c === '#') {\n       this._fragment = '#';\n       state = 'fragment';\n      } else if (EOF !== c && '\\t' !== c && '\\n' !== c && '\\r' !== c) {\n       this._query += percentEscapeQuery(c);\n      }\n      break;\n     case 'fragment':\n      if (EOF !== c && '\\t' !== c && '\\n' !== c && '\\r' !== c) {\n       this._fragment += c;\n      }\n      break;\n     }\n     cursor++;\n    }\n  }\n  function clear() {\n   this._scheme = '';\n   this._schemeData = '';\n   this._username = '';\n   this._password = null;\n   this._host = '';\n   this._port = '';\n   this._path = [];\n   this._query = '';\n   this._fragment = '';\n   this._isInvalid = false;\n   this._isRelative = false;\n  }\n  function JURL(url, base) {\n   if (base !== undefined && !(base instanceof JURL)) {\n    base = new JURL(String(base));\n   }\n   this._url = url;\n   clear.call(this);\n   var input = url.replace(/^[ \\t\\r\\n\\f]+|[ \\t\\r\\n\\f]+$/g, '');\n   parse.call(this, input, null, base);\n  }\n  JURL.prototype = {\n   toString: function () {\n    return this.href;\n   },\n   get href() {\n    if (this._isInvalid) {\n     return this._url;\n    }\n    var authority = '';\n    if ('' !== this._username || null !== this._password) {\n     authority = this._username + (null !== this._password ? ':' + this._password : '') + '@';\n    }\n    return this.protocol + (this._isRelative ? '//' + authority + this.host : '') + this.pathname + this._query + this._fragment;\n   },\n   set href(href) {\n    clear.call(this);\n    parse.call(this, href);\n   },\n   get protocol() {\n    return this._scheme + ':';\n   },\n   set protocol(protocol) {\n    if (this._isInvalid) {\n     return;\n    }\n    parse.call(this, protocol + ':', 'scheme start');\n   },\n   get host() {\n    return this._isInvalid ? '' : this._port ? this._host + ':' + this._port : this._host;\n   },\n   set host(host) {\n    if (this._isInvalid || !this._isRelative) {\n     return;\n    }\n    parse.call(this, host, 'host');\n   },\n   get hostname() {\n    return this._host;\n   },\n   set hostname(hostname) {\n    if (this._isInvalid || !this._isRelative) {\n     return;\n    }\n    parse.call(this, hostname, 'hostname');\n   },\n   get port() {\n    return this._port;\n   },\n   set port(port) {\n    if (this._isInvalid || !this._isRelative) {\n     return;\n    }\n    parse.call(this, port, 'port');\n   },\n   get pathname() {\n    return this._isInvalid ? '' : this._isRelative ? '/' + this._path.join('/') : this._schemeData;\n   },\n   set pathname(pathname) {\n    if (this._isInvalid || !this._isRelative) {\n     return;\n    }\n    this._path = [];\n    parse.call(this, pathname, 'relative path start');\n   },\n   get search() {\n    return this._isInvalid || !this._query || this._query === '?' ? '' : this._query;\n   },\n   set search(search) {\n    if (this._isInvalid || !this._isRelative) {\n     return;\n    }\n    this._query = '?';\n    if (search[0] === '?') {\n     search = search.slice(1);\n    }\n    parse.call(this, search, 'query');\n   },\n   get hash() {\n    return this._isInvalid || !this._fragment || this._fragment === '#' ? '' : this._fragment;\n   },\n   set hash(hash) {\n    if (this._isInvalid) {\n     return;\n    }\n    this._fragment = '#';\n    if (hash[0] === '#') {\n     hash = hash.slice(1);\n    }\n    parse.call(this, hash, 'fragment');\n   },\n   get origin() {\n    var host;\n    if (this._isInvalid || !this._scheme) {\n     return '';\n    }\n    switch (this._scheme) {\n    case 'data':\n    case 'file':\n    case 'javascript':\n    case 'mailto':\n     return 'null';\n    }\n    host = this.host;\n    if (!host) {\n     return '';\n    }\n    return this._scheme + '://' + host;\n   }\n  };\n  var OriginalURL = globalScope.URL;\n  if (OriginalURL) {\n   JURL.createObjectURL = function (blob) {\n    return OriginalURL.createObjectURL.apply(OriginalURL, arguments);\n   };\n   JURL.revokeObjectURL = function (url) {\n    OriginalURL.revokeObjectURL(url);\n   };\n  }\n  globalScope.URL = JURL;\n }());\n}\n/* WEBPACK VAR INJECTION */}.call(exports, __w_pdfjs_require__(9)))\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar pdfjsVersion = '1.7.363';\nvar pdfjsBuild = '14b91a47';\nvar pdfjsCoreWorker = __w_pdfjs_require__(8);\n{\n __w_pdfjs_require__(19);\n}\nexports.WorkerMessageHandler = pdfjsCoreWorker.WorkerMessageHandler;\n\n/***/ })\n/******/ ]);\n});\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(185)))\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 21.5a54c805aa33b31f5e0c.js","/*** IMPORTS FROM imports-loader ***/\nvar $ = require(\"jquery\");\nvar jQuery = require(\"jquery\");\n\n/* Copyright 2017 Mozilla Foundation\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"pdfjs-dist/build/pdf.worker\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"pdfjs-dist/build/pdf.worker\"] = factory();\n\telse\n\t\troot[\"pdfjs-dist/build/pdf.worker\"] = root.pdfjsDistBuildPdfWorker = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __w_pdfjs_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\ti: moduleId,\n/******/ \t\t\tl: false,\n/******/ \t\t\texports: {}\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __w_pdfjs_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.l = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__w_pdfjs_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__w_pdfjs_require__.c = installedModules;\n/******/\n/******/ \t// identity function for calling harmony imports with the correct context\n/******/ \t__w_pdfjs_require__.i = function(value) { return value; };\n/******/\n/******/ \t// define getter function for harmony exports\n/******/ \t__w_pdfjs_require__.d = function(exports, name, getter) {\n/******/ \t\tif(!__w_pdfjs_require__.o(exports, name)) {\n/******/ \t\t\tObject.defineProperty(exports, name, {\n/******/ \t\t\t\tconfigurable: false,\n/******/ \t\t\t\tenumerable: true,\n/******/ \t\t\t\tget: getter\n/******/ \t\t\t});\n/******/ \t\t}\n/******/ \t};\n/******/\n/******/ \t// getDefaultExport function for compatibility with non-harmony modules\n/******/ \t__w_pdfjs_require__.n = function(module) {\n/******/ \t\tvar getter = module && module.__esModule ?\n/******/ \t\t\tfunction getDefault() { return module['default']; } :\n/******/ \t\t\tfunction getModuleExports() { return module; };\n/******/ \t\t__w_pdfjs_require__.d(getter, 'a', getter);\n/******/ \t\treturn getter;\n/******/ \t};\n/******/\n/******/ \t// Object.prototype.hasOwnProperty.call\n/******/ \t__w_pdfjs_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__w_pdfjs_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __w_pdfjs_require__(__w_pdfjs_require__.s = 37);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\nvar compatibility = __w_pdfjs_require__(36);\nvar globalScope = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this;\nvar FONT_IDENTITY_MATRIX = [\n 0.001,\n 0,\n 0,\n 0.001,\n 0,\n 0\n];\nvar TextRenderingMode = {\n FILL: 0,\n STROKE: 1,\n FILL_STROKE: 2,\n INVISIBLE: 3,\n FILL_ADD_TO_PATH: 4,\n STROKE_ADD_TO_PATH: 5,\n FILL_STROKE_ADD_TO_PATH: 6,\n ADD_TO_PATH: 7,\n FILL_STROKE_MASK: 3,\n ADD_TO_PATH_FLAG: 4\n};\nvar ImageKind = {\n GRAYSCALE_1BPP: 1,\n RGB_24BPP: 2,\n RGBA_32BPP: 3\n};\nvar AnnotationType = {\n TEXT: 1,\n LINK: 2,\n FREETEXT: 3,\n LINE: 4,\n SQUARE: 5,\n CIRCLE: 6,\n POLYGON: 7,\n POLYLINE: 8,\n HIGHLIGHT: 9,\n UNDERLINE: 10,\n SQUIGGLY: 11,\n STRIKEOUT: 12,\n STAMP: 13,\n CARET: 14,\n INK: 15,\n POPUP: 16,\n FILEATTACHMENT: 17,\n SOUND: 18,\n MOVIE: 19,\n WIDGET: 20,\n SCREEN: 21,\n PRINTERMARK: 22,\n TRAPNET: 23,\n WATERMARK: 24,\n THREED: 25,\n REDACT: 26\n};\nvar AnnotationFlag = {\n INVISIBLE: 0x01,\n HIDDEN: 0x02,\n PRINT: 0x04,\n NOZOOM: 0x08,\n NOROTATE: 0x10,\n NOVIEW: 0x20,\n READONLY: 0x40,\n LOCKED: 0x80,\n TOGGLENOVIEW: 0x100,\n LOCKEDCONTENTS: 0x200\n};\nvar AnnotationFieldFlag = {\n READONLY: 0x0000001,\n REQUIRED: 0x0000002,\n NOEXPORT: 0x0000004,\n MULTILINE: 0x0001000,\n PASSWORD: 0x0002000,\n NOTOGGLETOOFF: 0x0004000,\n RADIO: 0x0008000,\n PUSHBUTTON: 0x0010000,\n COMBO: 0x0020000,\n EDIT: 0x0040000,\n SORT: 0x0080000,\n FILESELECT: 0x0100000,\n MULTISELECT: 0x0200000,\n DONOTSPELLCHECK: 0x0400000,\n DONOTSCROLL: 0x0800000,\n COMB: 0x1000000,\n RICHTEXT: 0x2000000,\n RADIOSINUNISON: 0x2000000,\n COMMITONSELCHANGE: 0x4000000\n};\nvar AnnotationBorderStyleType = {\n SOLID: 1,\n DASHED: 2,\n BEVELED: 3,\n INSET: 4,\n UNDERLINE: 5\n};\nvar StreamType = {\n UNKNOWN: 0,\n FLATE: 1,\n LZW: 2,\n DCT: 3,\n JPX: 4,\n JBIG: 5,\n A85: 6,\n AHX: 7,\n CCF: 8,\n RL: 9\n};\nvar FontType = {\n UNKNOWN: 0,\n TYPE1: 1,\n TYPE1C: 2,\n CIDFONTTYPE0: 3,\n CIDFONTTYPE0C: 4,\n TRUETYPE: 5,\n CIDFONTTYPE2: 6,\n TYPE3: 7,\n OPENTYPE: 8,\n TYPE0: 9,\n MMTYPE1: 10\n};\nvar VERBOSITY_LEVELS = {\n errors: 0,\n warnings: 1,\n infos: 5\n};\nvar CMapCompressionType = {\n NONE: 0,\n BINARY: 1,\n STREAM: 2\n};\nvar OPS = {\n dependency: 1,\n setLineWidth: 2,\n setLineCap: 3,\n setLineJoin: 4,\n setMiterLimit: 5,\n setDash: 6,\n setRenderingIntent: 7,\n setFlatness: 8,\n setGState: 9,\n save: 10,\n restore: 11,\n transform: 12,\n moveTo: 13,\n lineTo: 14,\n curveTo: 15,\n curveTo2: 16,\n curveTo3: 17,\n closePath: 18,\n rectangle: 19,\n stroke: 20,\n closeStroke: 21,\n fill: 22,\n eoFill: 23,\n fillStroke: 24,\n eoFillStroke: 25,\n closeFillStroke: 26,\n closeEOFillStroke: 27,\n endPath: 28,\n clip: 29,\n eoClip: 30,\n beginText: 31,\n endText: 32,\n setCharSpacing: 33,\n setWordSpacing: 34,\n setHScale: 35,\n setLeading: 36,\n setFont: 37,\n setTextRenderingMode: 38,\n setTextRise: 39,\n moveText: 40,\n setLeadingMoveText: 41,\n setTextMatrix: 42,\n nextLine: 43,\n showText: 44,\n showSpacedText: 45,\n nextLineShowText: 46,\n nextLineSetSpacingShowText: 47,\n setCharWidth: 48,\n setCharWidthAndBounds: 49,\n setStrokeColorSpace: 50,\n setFillColorSpace: 51,\n setStrokeColor: 52,\n setStrokeColorN: 53,\n setFillColor: 54,\n setFillColorN: 55,\n setStrokeGray: 56,\n setFillGray: 57,\n setStrokeRGBColor: 58,\n setFillRGBColor: 59,\n setStrokeCMYKColor: 60,\n setFillCMYKColor: 61,\n shadingFill: 62,\n beginInlineImage: 63,\n beginImageData: 64,\n endInlineImage: 65,\n paintXObject: 66,\n markPoint: 67,\n markPointProps: 68,\n beginMarkedContent: 69,\n beginMarkedContentProps: 70,\n endMarkedContent: 71,\n beginCompat: 72,\n endCompat: 73,\n paintFormXObjectBegin: 74,\n paintFormXObjectEnd: 75,\n beginGroup: 76,\n endGroup: 77,\n beginAnnotations: 78,\n endAnnotations: 79,\n beginAnnotation: 80,\n endAnnotation: 81,\n paintJpegXObject: 82,\n paintImageMaskXObject: 83,\n paintImageMaskXObjectGroup: 84,\n paintImageXObject: 85,\n paintInlineImageXObject: 86,\n paintInlineImageXObjectGroup: 87,\n paintImageXObjectRepeat: 88,\n paintImageMaskXObjectRepeat: 89,\n paintSolidColorImageMask: 90,\n constructPath: 91\n};\nvar verbosity = VERBOSITY_LEVELS.warnings;\nfunction setVerbosityLevel(level) {\n verbosity = level;\n}\nfunction getVerbosityLevel() {\n return verbosity;\n}\nfunction info(msg) {\n if (verbosity >= VERBOSITY_LEVELS.infos) {\n  console.log('Info: ' + msg);\n }\n}\nfunction warn(msg) {\n if (verbosity >= VERBOSITY_LEVELS.warnings) {\n  console.log('Warning: ' + msg);\n }\n}\nfunction deprecated(details) {\n console.log('Deprecated API usage: ' + details);\n}\nfunction error(msg) {\n if (verbosity >= VERBOSITY_LEVELS.errors) {\n  console.log('Error: ' + msg);\n  console.log(backtrace());\n }\n throw new Error(msg);\n}\nfunction backtrace() {\n try {\n  throw new Error();\n } catch (e) {\n  return e.stack ? e.stack.split('\\n').slice(2).join('\\n') : '';\n }\n}\nfunction assert(cond, msg) {\n if (!cond) {\n  error(msg);\n }\n}\nvar UNSUPPORTED_FEATURES = {\n unknown: 'unknown',\n forms: 'forms',\n javaScript: 'javaScript',\n smask: 'smask',\n shadingPattern: 'shadingPattern',\n font: 'font'\n};\nfunction isSameOrigin(baseUrl, otherUrl) {\n try {\n  var base = new URL(baseUrl);\n  if (!base.origin || base.origin === 'null') {\n   return false;\n  }\n } catch (e) {\n  return false;\n }\n var other = new URL(otherUrl, base);\n return base.origin === other.origin;\n}\nfunction isValidProtocol(url) {\n if (!url) {\n  return false;\n }\n switch (url.protocol) {\n case 'http:':\n case 'https:':\n case 'ftp:':\n case 'mailto:':\n case 'tel:':\n  return true;\n default:\n  return false;\n }\n}\nfunction createValidAbsoluteUrl(url, baseUrl) {\n if (!url) {\n  return null;\n }\n try {\n  var absoluteUrl = baseUrl ? new URL(url, baseUrl) : new URL(url);\n  if (isValidProtocol(absoluteUrl)) {\n   return absoluteUrl;\n  }\n } catch (ex) {\n }\n return null;\n}\nfunction shadow(obj, prop, value) {\n Object.defineProperty(obj, prop, {\n  value: value,\n  enumerable: true,\n  configurable: true,\n  writable: false\n });\n return value;\n}\nfunction getLookupTableFactory(initializer) {\n var lookup;\n return function () {\n  if (initializer) {\n   lookup = Object.create(null);\n   initializer(lookup);\n   initializer = null;\n  }\n  return lookup;\n };\n}\nvar PasswordResponses = {\n NEED_PASSWORD: 1,\n INCORRECT_PASSWORD: 2\n};\nvar PasswordException = function PasswordExceptionClosure() {\n function PasswordException(msg, code) {\n  this.name = 'PasswordException';\n  this.message = msg;\n  this.code = code;\n }\n PasswordException.prototype = new Error();\n PasswordException.constructor = PasswordException;\n return PasswordException;\n}();\nvar UnknownErrorException = function UnknownErrorExceptionClosure() {\n function UnknownErrorException(msg, details) {\n  this.name = 'UnknownErrorException';\n  this.message = msg;\n  this.details = details;\n }\n UnknownErrorException.prototype = new Error();\n UnknownErrorException.constructor = UnknownErrorException;\n return UnknownErrorException;\n}();\nvar InvalidPDFException = function InvalidPDFExceptionClosure() {\n function InvalidPDFException(msg) {\n  this.name = 'InvalidPDFException';\n  this.message = msg;\n }\n InvalidPDFException.prototype = new Error();\n InvalidPDFException.constructor = InvalidPDFException;\n return InvalidPDFException;\n}();\nvar MissingPDFException = function MissingPDFExceptionClosure() {\n function MissingPDFException(msg) {\n  this.name = 'MissingPDFException';\n  this.message = msg;\n }\n MissingPDFException.prototype = new Error();\n MissingPDFException.constructor = MissingPDFException;\n return MissingPDFException;\n}();\nvar UnexpectedResponseException = function UnexpectedResponseExceptionClosure() {\n function UnexpectedResponseException(msg, status) {\n  this.name = 'UnexpectedResponseException';\n  this.message = msg;\n  this.status = status;\n }\n UnexpectedResponseException.prototype = new Error();\n UnexpectedResponseException.constructor = UnexpectedResponseException;\n return UnexpectedResponseException;\n}();\nvar NotImplementedException = function NotImplementedExceptionClosure() {\n function NotImplementedException(msg) {\n  this.message = msg;\n }\n NotImplementedException.prototype = new Error();\n NotImplementedException.prototype.name = 'NotImplementedException';\n NotImplementedException.constructor = NotImplementedException;\n return NotImplementedException;\n}();\nvar MissingDataException = function MissingDataExceptionClosure() {\n function MissingDataException(begin, end) {\n  this.begin = begin;\n  this.end = end;\n  this.message = 'Missing data [' + begin + ', ' + end + ')';\n }\n MissingDataException.prototype = new Error();\n MissingDataException.prototype.name = 'MissingDataException';\n MissingDataException.constructor = MissingDataException;\n return MissingDataException;\n}();\nvar XRefParseException = function XRefParseExceptionClosure() {\n function XRefParseException(msg) {\n  this.message = msg;\n }\n XRefParseException.prototype = new Error();\n XRefParseException.prototype.name = 'XRefParseException';\n XRefParseException.constructor = XRefParseException;\n return XRefParseException;\n}();\nvar NullCharactersRegExp = /\\x00/g;\nfunction removeNullCharacters(str) {\n if (typeof str !== 'string') {\n  warn('The argument for removeNullCharacters must be a string.');\n  return str;\n }\n return str.replace(NullCharactersRegExp, '');\n}\nfunction bytesToString(bytes) {\n assert(bytes !== null && typeof bytes === 'object' && bytes.length !== undefined, 'Invalid argument for bytesToString');\n var length = bytes.length;\n var MAX_ARGUMENT_COUNT = 8192;\n if (length < MAX_ARGUMENT_COUNT) {\n  return String.fromCharCode.apply(null, bytes);\n }\n var strBuf = [];\n for (var i = 0; i < length; i += MAX_ARGUMENT_COUNT) {\n  var chunkEnd = Math.min(i + MAX_ARGUMENT_COUNT, length);\n  var chunk = bytes.subarray(i, chunkEnd);\n  strBuf.push(String.fromCharCode.apply(null, chunk));\n }\n return strBuf.join('');\n}\nfunction stringToBytes(str) {\n assert(typeof str === 'string', 'Invalid argument for stringToBytes');\n var length = str.length;\n var bytes = new Uint8Array(length);\n for (var i = 0; i < length; ++i) {\n  bytes[i] = str.charCodeAt(i) & 0xFF;\n }\n return bytes;\n}\nfunction arrayByteLength(arr) {\n if (arr.length !== undefined) {\n  return arr.length;\n }\n assert(arr.byteLength !== undefined);\n return arr.byteLength;\n}\nfunction arraysToBytes(arr) {\n if (arr.length === 1 && arr[0] instanceof Uint8Array) {\n  return arr[0];\n }\n var resultLength = 0;\n var i, ii = arr.length;\n var item, itemLength;\n for (i = 0; i < ii; i++) {\n  item = arr[i];\n  itemLength = arrayByteLength(item);\n  resultLength += itemLength;\n }\n var pos = 0;\n var data = new Uint8Array(resultLength);\n for (i = 0; i < ii; i++) {\n  item = arr[i];\n  if (!(item instanceof Uint8Array)) {\n   if (typeof item === 'string') {\n    item = stringToBytes(item);\n   } else {\n    item = new Uint8Array(item);\n   }\n  }\n  itemLength = item.byteLength;\n  data.set(item, pos);\n  pos += itemLength;\n }\n return data;\n}\nfunction string32(value) {\n return String.fromCharCode(value >> 24 & 0xff, value >> 16 & 0xff, value >> 8 & 0xff, value & 0xff);\n}\nfunction log2(x) {\n var n = 1, i = 0;\n while (x > n) {\n  n <<= 1;\n  i++;\n }\n return i;\n}\nfunction readInt8(data, start) {\n return data[start] << 24 >> 24;\n}\nfunction readUint16(data, offset) {\n return data[offset] << 8 | data[offset + 1];\n}\nfunction readUint32(data, offset) {\n return (data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3]) >>> 0;\n}\nfunction isLittleEndian() {\n var buffer8 = new Uint8Array(2);\n buffer8[0] = 1;\n var buffer16 = new Uint16Array(buffer8.buffer);\n return buffer16[0] === 1;\n}\nfunction isEvalSupported() {\n try {\n  new Function('');\n  return true;\n } catch (e) {\n  return false;\n }\n}\nvar Uint32ArrayView = function Uint32ArrayViewClosure() {\n function Uint32ArrayView(buffer, length) {\n  this.buffer = buffer;\n  this.byteLength = buffer.length;\n  this.length = length === undefined ? this.byteLength >> 2 : length;\n  ensureUint32ArrayViewProps(this.length);\n }\n Uint32ArrayView.prototype = Object.create(null);\n var uint32ArrayViewSetters = 0;\n function createUint32ArrayProp(index) {\n  return {\n   get: function () {\n    var buffer = this.buffer, offset = index << 2;\n    return (buffer[offset] | buffer[offset + 1] << 8 | buffer[offset + 2] << 16 | buffer[offset + 3] << 24) >>> 0;\n   },\n   set: function (value) {\n    var buffer = this.buffer, offset = index << 2;\n    buffer[offset] = value & 255;\n    buffer[offset + 1] = value >> 8 & 255;\n    buffer[offset + 2] = value >> 16 & 255;\n    buffer[offset + 3] = value >>> 24 & 255;\n   }\n  };\n }\n function ensureUint32ArrayViewProps(length) {\n  while (uint32ArrayViewSetters < length) {\n   Object.defineProperty(Uint32ArrayView.prototype, uint32ArrayViewSetters, createUint32ArrayProp(uint32ArrayViewSetters));\n   uint32ArrayViewSetters++;\n  }\n }\n return Uint32ArrayView;\n}();\nexports.Uint32ArrayView = Uint32ArrayView;\nvar IDENTITY_MATRIX = [\n 1,\n 0,\n 0,\n 1,\n 0,\n 0\n];\nvar Util = function UtilClosure() {\n function Util() {\n }\n var rgbBuf = [\n  'rgb(',\n  0,\n  ',',\n  0,\n  ',',\n  0,\n  ')'\n ];\n Util.makeCssRgb = function Util_makeCssRgb(r, g, b) {\n  rgbBuf[1] = r;\n  rgbBuf[3] = g;\n  rgbBuf[5] = b;\n  return rgbBuf.join('');\n };\n Util.transform = function Util_transform(m1, m2) {\n  return [\n   m1[0] * m2[0] + m1[2] * m2[1],\n   m1[1] * m2[0] + m1[3] * m2[1],\n   m1[0] * m2[2] + m1[2] * m2[3],\n   m1[1] * m2[2] + m1[3] * m2[3],\n   m1[0] * m2[4] + m1[2] * m2[5] + m1[4],\n   m1[1] * m2[4] + m1[3] * m2[5] + m1[5]\n  ];\n };\n Util.applyTransform = function Util_applyTransform(p, m) {\n  var xt = p[0] * m[0] + p[1] * m[2] + m[4];\n  var yt = p[0] * m[1] + p[1] * m[3] + m[5];\n  return [\n   xt,\n   yt\n  ];\n };\n Util.applyInverseTransform = function Util_applyInverseTransform(p, m) {\n  var d = m[0] * m[3] - m[1] * m[2];\n  var xt = (p[0] * m[3] - p[1] * m[2] + m[2] * m[5] - m[4] * m[3]) / d;\n  var yt = (-p[0] * m[1] + p[1] * m[0] + m[4] * m[1] - m[5] * m[0]) / d;\n  return [\n   xt,\n   yt\n  ];\n };\n Util.getAxialAlignedBoundingBox = function Util_getAxialAlignedBoundingBox(r, m) {\n  var p1 = Util.applyTransform(r, m);\n  var p2 = Util.applyTransform(r.slice(2, 4), m);\n  var p3 = Util.applyTransform([\n   r[0],\n   r[3]\n  ], m);\n  var p4 = Util.applyTransform([\n   r[2],\n   r[1]\n  ], m);\n  return [\n   Math.min(p1[0], p2[0], p3[0], p4[0]),\n   Math.min(p1[1], p2[1], p3[1], p4[1]),\n   Math.max(p1[0], p2[0], p3[0], p4[0]),\n   Math.max(p1[1], p2[1], p3[1], p4[1])\n  ];\n };\n Util.inverseTransform = function Util_inverseTransform(m) {\n  var d = m[0] * m[3] - m[1] * m[2];\n  return [\n   m[3] / d,\n   -m[1] / d,\n   -m[2] / d,\n   m[0] / d,\n   (m[2] * m[5] - m[4] * m[3]) / d,\n   (m[4] * m[1] - m[5] * m[0]) / d\n  ];\n };\n Util.apply3dTransform = function Util_apply3dTransform(m, v) {\n  return [\n   m[0] * v[0] + m[1] * v[1] + m[2] * v[2],\n   m[3] * v[0] + m[4] * v[1] + m[5] * v[2],\n   m[6] * v[0] + m[7] * v[1] + m[8] * v[2]\n  ];\n };\n Util.singularValueDecompose2dScale = function Util_singularValueDecompose2dScale(m) {\n  var transpose = [\n   m[0],\n   m[2],\n   m[1],\n   m[3]\n  ];\n  var a = m[0] * transpose[0] + m[1] * transpose[2];\n  var b = m[0] * transpose[1] + m[1] * transpose[3];\n  var c = m[2] * transpose[0] + m[3] * transpose[2];\n  var d = m[2] * transpose[1] + m[3] * transpose[3];\n  var first = (a + d) / 2;\n  var second = Math.sqrt((a + d) * (a + d) - 4 * (a * d - c * b)) / 2;\n  var sx = first + second || 1;\n  var sy = first - second || 1;\n  return [\n   Math.sqrt(sx),\n   Math.sqrt(sy)\n  ];\n };\n Util.normalizeRect = function Util_normalizeRect(rect) {\n  var r = rect.slice(0);\n  if (rect[0] > rect[2]) {\n   r[0] = rect[2];\n   r[2] = rect[0];\n  }\n  if (rect[1] > rect[3]) {\n   r[1] = rect[3];\n   r[3] = rect[1];\n  }\n  return r;\n };\n Util.intersect = function Util_intersect(rect1, rect2) {\n  function compare(a, b) {\n   return a - b;\n  }\n  var orderedX = [\n    rect1[0],\n    rect1[2],\n    rect2[0],\n    rect2[2]\n   ].sort(compare), orderedY = [\n    rect1[1],\n    rect1[3],\n    rect2[1],\n    rect2[3]\n   ].sort(compare), result = [];\n  rect1 = Util.normalizeRect(rect1);\n  rect2 = Util.normalizeRect(rect2);\n  if (orderedX[0] === rect1[0] && orderedX[1] === rect2[0] || orderedX[0] === rect2[0] && orderedX[1] === rect1[0]) {\n   result[0] = orderedX[1];\n   result[2] = orderedX[2];\n  } else {\n   return false;\n  }\n  if (orderedY[0] === rect1[1] && orderedY[1] === rect2[1] || orderedY[0] === rect2[1] && orderedY[1] === rect1[1]) {\n   result[1] = orderedY[1];\n   result[3] = orderedY[2];\n  } else {\n   return false;\n  }\n  return result;\n };\n Util.sign = function Util_sign(num) {\n  return num < 0 ? -1 : 1;\n };\n var ROMAN_NUMBER_MAP = [\n  '',\n  'C',\n  'CC',\n  'CCC',\n  'CD',\n  'D',\n  'DC',\n  'DCC',\n  'DCCC',\n  'CM',\n  '',\n  'X',\n  'XX',\n  'XXX',\n  'XL',\n  'L',\n  'LX',\n  'LXX',\n  'LXXX',\n  'XC',\n  '',\n  'I',\n  'II',\n  'III',\n  'IV',\n  'V',\n  'VI',\n  'VII',\n  'VIII',\n  'IX'\n ];\n Util.toRoman = function Util_toRoman(number, lowerCase) {\n  assert(isInt(number) && number > 0, 'The number should be a positive integer.');\n  var pos, romanBuf = [];\n  while (number >= 1000) {\n   number -= 1000;\n   romanBuf.push('M');\n  }\n  pos = number / 100 | 0;\n  number %= 100;\n  romanBuf.push(ROMAN_NUMBER_MAP[pos]);\n  pos = number / 10 | 0;\n  number %= 10;\n  romanBuf.push(ROMAN_NUMBER_MAP[10 + pos]);\n  romanBuf.push(ROMAN_NUMBER_MAP[20 + number]);\n  var romanStr = romanBuf.join('');\n  return lowerCase ? romanStr.toLowerCase() : romanStr;\n };\n Util.appendToArray = function Util_appendToArray(arr1, arr2) {\n  Array.prototype.push.apply(arr1, arr2);\n };\n Util.prependToArray = function Util_prependToArray(arr1, arr2) {\n  Array.prototype.unshift.apply(arr1, arr2);\n };\n Util.extendObj = function extendObj(obj1, obj2) {\n  for (var key in obj2) {\n   obj1[key] = obj2[key];\n  }\n };\n Util.getInheritableProperty = function Util_getInheritableProperty(dict, name, getArray) {\n  while (dict && !dict.has(name)) {\n   dict = dict.get('Parent');\n  }\n  if (!dict) {\n   return null;\n  }\n  return getArray ? dict.getArray(name) : dict.get(name);\n };\n Util.inherit = function Util_inherit(sub, base, prototype) {\n  sub.prototype = Object.create(base.prototype);\n  sub.prototype.constructor = sub;\n  for (var prop in prototype) {\n   sub.prototype[prop] = prototype[prop];\n  }\n };\n Util.loadScript = function Util_loadScript(src, callback) {\n  var script = document.createElement('script');\n  var loaded = false;\n  script.setAttribute('src', src);\n  if (callback) {\n   script.onload = function () {\n    if (!loaded) {\n     callback();\n    }\n    loaded = true;\n   };\n  }\n  document.getElementsByTagName('head')[0].appendChild(script);\n };\n return Util;\n}();\nvar PageViewport = function PageViewportClosure() {\n function PageViewport(viewBox, scale, rotation, offsetX, offsetY, dontFlip) {\n  this.viewBox = viewBox;\n  this.scale = scale;\n  this.rotation = rotation;\n  this.offsetX = offsetX;\n  this.offsetY = offsetY;\n  var centerX = (viewBox[2] + viewBox[0]) / 2;\n  var centerY = (viewBox[3] + viewBox[1]) / 2;\n  var rotateA, rotateB, rotateC, rotateD;\n  rotation = rotation % 360;\n  rotation = rotation < 0 ? rotation + 360 : rotation;\n  switch (rotation) {\n  case 180:\n   rotateA = -1;\n   rotateB = 0;\n   rotateC = 0;\n   rotateD = 1;\n   break;\n  case 90:\n   rotateA = 0;\n   rotateB = 1;\n   rotateC = 1;\n   rotateD = 0;\n   break;\n  case 270:\n   rotateA = 0;\n   rotateB = -1;\n   rotateC = -1;\n   rotateD = 0;\n   break;\n  default:\n   rotateA = 1;\n   rotateB = 0;\n   rotateC = 0;\n   rotateD = -1;\n   break;\n  }\n  if (dontFlip) {\n   rotateC = -rotateC;\n   rotateD = -rotateD;\n  }\n  var offsetCanvasX, offsetCanvasY;\n  var width, height;\n  if (rotateA === 0) {\n   offsetCanvasX = Math.abs(centerY - viewBox[1]) * scale + offsetX;\n   offsetCanvasY = Math.abs(centerX - viewBox[0]) * scale + offsetY;\n   width = Math.abs(viewBox[3] - viewBox[1]) * scale;\n   height = Math.abs(viewBox[2] - viewBox[0]) * scale;\n  } else {\n   offsetCanvasX = Math.abs(centerX - viewBox[0]) * scale + offsetX;\n   offsetCanvasY = Math.abs(centerY - viewBox[1]) * scale + offsetY;\n   width = Math.abs(viewBox[2] - viewBox[0]) * scale;\n   height = Math.abs(viewBox[3] - viewBox[1]) * scale;\n  }\n  this.transform = [\n   rotateA * scale,\n   rotateB * scale,\n   rotateC * scale,\n   rotateD * scale,\n   offsetCanvasX - rotateA * scale * centerX - rotateC * scale * centerY,\n   offsetCanvasY - rotateB * scale * centerX - rotateD * scale * centerY\n  ];\n  this.width = width;\n  this.height = height;\n  this.fontScale = scale;\n }\n PageViewport.prototype = {\n  clone: function PageViewPort_clone(args) {\n   args = args || {};\n   var scale = 'scale' in args ? args.scale : this.scale;\n   var rotation = 'rotation' in args ? args.rotation : this.rotation;\n   return new PageViewport(this.viewBox.slice(), scale, rotation, this.offsetX, this.offsetY, args.dontFlip);\n  },\n  convertToViewportPoint: function PageViewport_convertToViewportPoint(x, y) {\n   return Util.applyTransform([\n    x,\n    y\n   ], this.transform);\n  },\n  convertToViewportRectangle: function PageViewport_convertToViewportRectangle(rect) {\n   var tl = Util.applyTransform([\n    rect[0],\n    rect[1]\n   ], this.transform);\n   var br = Util.applyTransform([\n    rect[2],\n    rect[3]\n   ], this.transform);\n   return [\n    tl[0],\n    tl[1],\n    br[0],\n    br[1]\n   ];\n  },\n  convertToPdfPoint: function PageViewport_convertToPdfPoint(x, y) {\n   return Util.applyInverseTransform([\n    x,\n    y\n   ], this.transform);\n  }\n };\n return PageViewport;\n}();\nvar PDFStringTranslateTable = [\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0x2D8,\n 0x2C7,\n 0x2C6,\n 0x2D9,\n 0x2DD,\n 0x2DB,\n 0x2DA,\n 0x2DC,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0,\n 0x2022,\n 0x2020,\n 0x2021,\n 0x2026,\n 0x2014,\n 0x2013,\n 0x192,\n 0x2044,\n 0x2039,\n 0x203A,\n 0x2212,\n 0x2030,\n 0x201E,\n 0x201C,\n 0x201D,\n 0x2018,\n 0x2019,\n 0x201A,\n 0x2122,\n 0xFB01,\n 0xFB02,\n 0x141,\n 0x152,\n 0x160,\n 0x178,\n 0x17D,\n 0x131,\n 0x142,\n 0x153,\n 0x161,\n 0x17E,\n 0,\n 0x20AC\n];\nfunction stringToPDFString(str) {\n var i, n = str.length, strBuf = [];\n if (str[0] === '\\xFE' && str[1] === '\\xFF') {\n  for (i = 2; i < n; i += 2) {\n   strBuf.push(String.fromCharCode(str.charCodeAt(i) << 8 | str.charCodeAt(i + 1)));\n  }\n } else {\n  for (i = 0; i < n; ++i) {\n   var code = PDFStringTranslateTable[str.charCodeAt(i)];\n   strBuf.push(code ? String.fromCharCode(code) : str.charAt(i));\n  }\n }\n return strBuf.join('');\n}\nfunction stringToUTF8String(str) {\n return decodeURIComponent(escape(str));\n}\nfunction utf8StringToString(str) {\n return unescape(encodeURIComponent(str));\n}\nfunction isEmptyObj(obj) {\n for (var key in obj) {\n  return false;\n }\n return true;\n}\nfunction isBool(v) {\n return typeof v === 'boolean';\n}\nfunction isInt(v) {\n return typeof v === 'number' && (v | 0) === v;\n}\nfunction isNum(v) {\n return typeof v === 'number';\n}\nfunction isString(v) {\n return typeof v === 'string';\n}\nfunction isArray(v) {\n return v instanceof Array;\n}\nfunction isArrayBuffer(v) {\n return typeof v === 'object' && v !== null && v.byteLength !== undefined;\n}\nfunction isSpace(ch) {\n return ch === 0x20 || ch === 0x09 || ch === 0x0D || ch === 0x0A;\n}\nfunction isNodeJS() {\n if (typeof __pdfjsdev_webpack__ === 'undefined') {\n  return typeof process === 'object' && process + '' === '[object process]';\n }\n return false;\n}\nfunction createPromiseCapability() {\n var capability = {};\n capability.promise = new Promise(function (resolve, reject) {\n  capability.resolve = resolve;\n  capability.reject = reject;\n });\n return capability;\n}\nvar StatTimer = function StatTimerClosure() {\n function rpad(str, pad, length) {\n  while (str.length < length) {\n   str += pad;\n  }\n  return str;\n }\n function StatTimer() {\n  this.started = Object.create(null);\n  this.times = [];\n  this.enabled = true;\n }\n StatTimer.prototype = {\n  time: function StatTimer_time(name) {\n   if (!this.enabled) {\n    return;\n   }\n   if (name in this.started) {\n    warn('Timer is already running for ' + name);\n   }\n   this.started[name] = Date.now();\n  },\n  timeEnd: function StatTimer_timeEnd(name) {\n   if (!this.enabled) {\n    return;\n   }\n   if (!(name in this.started)) {\n    warn('Timer has not been started for ' + name);\n   }\n   this.times.push({\n    'name': name,\n    'start': this.started[name],\n    'end': Date.now()\n   });\n   delete this.started[name];\n  },\n  toString: function StatTimer_toString() {\n   var i, ii;\n   var times = this.times;\n   var out = '';\n   var longest = 0;\n   for (i = 0, ii = times.length; i < ii; ++i) {\n    var name = times[i]['name'];\n    if (name.length > longest) {\n     longest = name.length;\n    }\n   }\n   for (i = 0, ii = times.length; i < ii; ++i) {\n    var span = times[i];\n    var duration = span.end - span.start;\n    out += rpad(span['name'], ' ', longest) + ' ' + duration + 'ms\\n';\n   }\n   return out;\n  }\n };\n return StatTimer;\n}();\nvar createBlob = function createBlob(data, contentType) {\n if (typeof Blob !== 'undefined') {\n  return new Blob([data], { type: contentType });\n }\n warn('The \"Blob\" constructor is not supported.');\n};\nvar createObjectURL = function createObjectURLClosure() {\n var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n return function createObjectURL(data, contentType, forceDataSchema) {\n  if (!forceDataSchema && typeof URL !== 'undefined' && URL.createObjectURL) {\n   var blob = createBlob(data, contentType);\n   return URL.createObjectURL(blob);\n  }\n  var buffer = 'data:' + contentType + ';base64,';\n  for (var i = 0, ii = data.length; i < ii; i += 3) {\n   var b1 = data[i] & 0xFF;\n   var b2 = data[i + 1] & 0xFF;\n   var b3 = data[i + 2] & 0xFF;\n   var d1 = b1 >> 2, d2 = (b1 & 3) << 4 | b2 >> 4;\n   var d3 = i + 1 < ii ? (b2 & 0xF) << 2 | b3 >> 6 : 64;\n   var d4 = i + 2 < ii ? b3 & 0x3F : 64;\n   buffer += digits[d1] + digits[d2] + digits[d3] + digits[d4];\n  }\n  return buffer;\n };\n}();\nfunction MessageHandler(sourceName, targetName, comObj) {\n this.sourceName = sourceName;\n this.targetName = targetName;\n this.comObj = comObj;\n this.callbackIndex = 1;\n this.postMessageTransfers = true;\n var callbacksCapabilities = this.callbacksCapabilities = Object.create(null);\n var ah = this.actionHandler = Object.create(null);\n this._onComObjOnMessage = function messageHandlerComObjOnMessage(event) {\n  var data = event.data;\n  if (data.targetName !== this.sourceName) {\n   return;\n  }\n  if (data.isReply) {\n   var callbackId = data.callbackId;\n   if (data.callbackId in callbacksCapabilities) {\n    var callback = callbacksCapabilities[callbackId];\n    delete callbacksCapabilities[callbackId];\n    if ('error' in data) {\n     callback.reject(data.error);\n    } else {\n     callback.resolve(data.data);\n    }\n   } else {\n    error('Cannot resolve callback ' + callbackId);\n   }\n  } else if (data.action in ah) {\n   var action = ah[data.action];\n   if (data.callbackId) {\n    var sourceName = this.sourceName;\n    var targetName = data.sourceName;\n    Promise.resolve().then(function () {\n     return action[0].call(action[1], data.data);\n    }).then(function (result) {\n     comObj.postMessage({\n      sourceName: sourceName,\n      targetName: targetName,\n      isReply: true,\n      callbackId: data.callbackId,\n      data: result\n     });\n    }, function (reason) {\n     if (reason instanceof Error) {\n      reason = reason + '';\n     }\n     comObj.postMessage({\n      sourceName: sourceName,\n      targetName: targetName,\n      isReply: true,\n      callbackId: data.callbackId,\n      error: reason\n     });\n    });\n   } else {\n    action[0].call(action[1], data.data);\n   }\n  } else {\n   error('Unknown action from worker: ' + data.action);\n  }\n }.bind(this);\n comObj.addEventListener('message', this._onComObjOnMessage);\n}\nMessageHandler.prototype = {\n on: function messageHandlerOn(actionName, handler, scope) {\n  var ah = this.actionHandler;\n  if (ah[actionName]) {\n   error('There is already an actionName called \"' + actionName + '\"');\n  }\n  ah[actionName] = [\n   handler,\n   scope\n  ];\n },\n send: function messageHandlerSend(actionName, data, transfers) {\n  var message = {\n   sourceName: this.sourceName,\n   targetName: this.targetName,\n   action: actionName,\n   data: data\n  };\n  this.postMessage(message, transfers);\n },\n sendWithPromise: function messageHandlerSendWithPromise(actionName, data, transfers) {\n  var callbackId = this.callbackIndex++;\n  var message = {\n   sourceName: this.sourceName,\n   targetName: this.targetName,\n   action: actionName,\n   data: data,\n   callbackId: callbackId\n  };\n  var capability = createPromiseCapability();\n  this.callbacksCapabilities[callbackId] = capability;\n  try {\n   this.postMessage(message, transfers);\n  } catch (e) {\n   capability.reject(e);\n  }\n  return capability.promise;\n },\n postMessage: function (message, transfers) {\n  if (transfers && this.postMessageTransfers) {\n   this.comObj.postMessage(message, transfers);\n  } else {\n   this.comObj.postMessage(message);\n  }\n },\n destroy: function () {\n  this.comObj.removeEventListener('message', this._onComObjOnMessage);\n }\n};\nfunction loadJpegStream(id, imageUrl, objs) {\n var img = new Image();\n img.onload = function loadJpegStream_onloadClosure() {\n  objs.resolve(id, img);\n };\n img.onerror = function loadJpegStream_onerrorClosure() {\n  objs.resolve(id, null);\n  warn('Error during JPEG image loading');\n };\n img.src = imageUrl;\n}\nexports.FONT_IDENTITY_MATRIX = FONT_IDENTITY_MATRIX;\nexports.IDENTITY_MATRIX = IDENTITY_MATRIX;\nexports.OPS = OPS;\nexports.VERBOSITY_LEVELS = VERBOSITY_LEVELS;\nexports.UNSUPPORTED_FEATURES = UNSUPPORTED_FEATURES;\nexports.AnnotationBorderStyleType = AnnotationBorderStyleType;\nexports.AnnotationFieldFlag = AnnotationFieldFlag;\nexports.AnnotationFlag = AnnotationFlag;\nexports.AnnotationType = AnnotationType;\nexports.FontType = FontType;\nexports.ImageKind = ImageKind;\nexports.CMapCompressionType = CMapCompressionType;\nexports.InvalidPDFException = InvalidPDFException;\nexports.MessageHandler = MessageHandler;\nexports.MissingDataException = MissingDataException;\nexports.MissingPDFException = MissingPDFException;\nexports.NotImplementedException = NotImplementedException;\nexports.PageViewport = PageViewport;\nexports.PasswordException = PasswordException;\nexports.PasswordResponses = PasswordResponses;\nexports.StatTimer = StatTimer;\nexports.StreamType = StreamType;\nexports.TextRenderingMode = TextRenderingMode;\nexports.UnexpectedResponseException = UnexpectedResponseException;\nexports.UnknownErrorException = UnknownErrorException;\nexports.Util = Util;\nexports.XRefParseException = XRefParseException;\nexports.arrayByteLength = arrayByteLength;\nexports.arraysToBytes = arraysToBytes;\nexports.assert = assert;\nexports.bytesToString = bytesToString;\nexports.createBlob = createBlob;\nexports.createPromiseCapability = createPromiseCapability;\nexports.createObjectURL = createObjectURL;\nexports.deprecated = deprecated;\nexports.error = error;\nexports.getLookupTableFactory = getLookupTableFactory;\nexports.getVerbosityLevel = getVerbosityLevel;\nexports.globalScope = globalScope;\nexports.info = info;\nexports.isArray = isArray;\nexports.isArrayBuffer = isArrayBuffer;\nexports.isBool = isBool;\nexports.isEmptyObj = isEmptyObj;\nexports.isInt = isInt;\nexports.isNum = isNum;\nexports.isString = isString;\nexports.isSpace = isSpace;\nexports.isNodeJS = isNodeJS;\nexports.isSameOrigin = isSameOrigin;\nexports.createValidAbsoluteUrl = createValidAbsoluteUrl;\nexports.isLittleEndian = isLittleEndian;\nexports.isEvalSupported = isEvalSupported;\nexports.loadJpegStream = loadJpegStream;\nexports.log2 = log2;\nexports.readInt8 = readInt8;\nexports.readUint16 = readUint16;\nexports.readUint32 = readUint32;\nexports.removeNullCharacters = removeNullCharacters;\nexports.setVerbosityLevel = setVerbosityLevel;\nexports.shadow = shadow;\nexports.string32 = string32;\nexports.stringToBytes = stringToBytes;\nexports.stringToPDFString = stringToPDFString;\nexports.stringToUTF8String = stringToUTF8String;\nexports.utf8StringToString = utf8StringToString;\nexports.warn = warn;\n/* WEBPACK VAR INJECTION */}.call(exports, __w_pdfjs_require__(9)))\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar isArray = sharedUtil.isArray;\nvar EOF = {};\nvar Name = function NameClosure() {\n function Name(name) {\n  this.name = name;\n }\n Name.prototype = {};\n var nameCache = Object.create(null);\n Name.get = function Name_get(name) {\n  var nameValue = nameCache[name];\n  return nameValue ? nameValue : nameCache[name] = new Name(name);\n };\n return Name;\n}();\nvar Cmd = function CmdClosure() {\n function Cmd(cmd) {\n  this.cmd = cmd;\n }\n Cmd.prototype = {};\n var cmdCache = Object.create(null);\n Cmd.get = function Cmd_get(cmd) {\n  var cmdValue = cmdCache[cmd];\n  return cmdValue ? cmdValue : cmdCache[cmd] = new Cmd(cmd);\n };\n return Cmd;\n}();\nvar Dict = function DictClosure() {\n var nonSerializable = function nonSerializableClosure() {\n  return nonSerializable;\n };\n function Dict(xref) {\n  this.map = Object.create(null);\n  this.xref = xref;\n  this.objId = null;\n  this.suppressEncryption = false;\n  this.__nonSerializable__ = nonSerializable;\n }\n Dict.prototype = {\n  assignXref: function Dict_assignXref(newXref) {\n   this.xref = newXref;\n  },\n  get: function Dict_get(key1, key2, key3) {\n   var value;\n   var xref = this.xref, suppressEncryption = this.suppressEncryption;\n   if (typeof (value = this.map[key1]) !== 'undefined' || key1 in this.map || typeof key2 === 'undefined') {\n    return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n   }\n   if (typeof (value = this.map[key2]) !== 'undefined' || key2 in this.map || typeof key3 === 'undefined') {\n    return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n   }\n   value = this.map[key3] || null;\n   return xref ? xref.fetchIfRef(value, suppressEncryption) : value;\n  },\n  getAsync: function Dict_getAsync(key1, key2, key3) {\n   var value;\n   var xref = this.xref, suppressEncryption = this.suppressEncryption;\n   if (typeof (value = this.map[key1]) !== 'undefined' || key1 in this.map || typeof key2 === 'undefined') {\n    if (xref) {\n     return xref.fetchIfRefAsync(value, suppressEncryption);\n    }\n    return Promise.resolve(value);\n   }\n   if (typeof (value = this.map[key2]) !== 'undefined' || key2 in this.map || typeof key3 === 'undefined') {\n    if (xref) {\n     return xref.fetchIfRefAsync(value, suppressEncryption);\n    }\n    return Promise.resolve(value);\n   }\n   value = this.map[key3] || null;\n   if (xref) {\n    return xref.fetchIfRefAsync(value, suppressEncryption);\n   }\n   return Promise.resolve(value);\n  },\n  getArray: function Dict_getArray(key1, key2, key3) {\n   var value = this.get(key1, key2, key3);\n   var xref = this.xref, suppressEncryption = this.suppressEncryption;\n   if (!isArray(value) || !xref) {\n    return value;\n   }\n   value = value.slice();\n   for (var i = 0, ii = value.length; i < ii; i++) {\n    if (!isRef(value[i])) {\n     continue;\n    }\n    value[i] = xref.fetch(value[i], suppressEncryption);\n   }\n   return value;\n  },\n  getRaw: function Dict_getRaw(key) {\n   return this.map[key];\n  },\n  getKeys: function Dict_getKeys() {\n   return Object.keys(this.map);\n  },\n  set: function Dict_set(key, value) {\n   this.map[key] = value;\n  },\n  has: function Dict_has(key) {\n   return key in this.map;\n  },\n  forEach: function Dict_forEach(callback) {\n   for (var key in this.map) {\n    callback(key, this.get(key));\n   }\n  }\n };\n Dict.empty = new Dict(null);\n Dict.merge = function Dict_merge(xref, dictArray) {\n  var mergedDict = new Dict(xref);\n  for (var i = 0, ii = dictArray.length; i < ii; i++) {\n   var dict = dictArray[i];\n   if (!isDict(dict)) {\n    continue;\n   }\n   for (var keyName in dict.map) {\n    if (mergedDict.map[keyName]) {\n     continue;\n    }\n    mergedDict.map[keyName] = dict.map[keyName];\n   }\n  }\n  return mergedDict;\n };\n return Dict;\n}();\nvar Ref = function RefClosure() {\n function Ref(num, gen) {\n  this.num = num;\n  this.gen = gen;\n }\n Ref.prototype = {\n  toString: function Ref_toString() {\n   var str = this.num + 'R';\n   if (this.gen !== 0) {\n    str += this.gen;\n   }\n   return str;\n  }\n };\n return Ref;\n}();\nvar RefSet = function RefSetClosure() {\n function RefSet() {\n  this.dict = Object.create(null);\n }\n RefSet.prototype = {\n  has: function RefSet_has(ref) {\n   return ref.toString() in this.dict;\n  },\n  put: function RefSet_put(ref) {\n   this.dict[ref.toString()] = true;\n  },\n  remove: function RefSet_remove(ref) {\n   delete this.dict[ref.toString()];\n  }\n };\n return RefSet;\n}();\nvar RefSetCache = function RefSetCacheClosure() {\n function RefSetCache() {\n  this.dict = Object.create(null);\n }\n RefSetCache.prototype = {\n  get: function RefSetCache_get(ref) {\n   return this.dict[ref.toString()];\n  },\n  has: function RefSetCache_has(ref) {\n   return ref.toString() in this.dict;\n  },\n  put: function RefSetCache_put(ref, obj) {\n   this.dict[ref.toString()] = obj;\n  },\n  putAlias: function RefSetCache_putAlias(ref, aliasRef) {\n   this.dict[ref.toString()] = this.get(aliasRef);\n  },\n  forEach: function RefSetCache_forEach(fn, thisArg) {\n   for (var i in this.dict) {\n    fn.call(thisArg, this.dict[i]);\n   }\n  },\n  clear: function RefSetCache_clear() {\n   this.dict = Object.create(null);\n  }\n };\n return RefSetCache;\n}();\nfunction isEOF(v) {\n return v === EOF;\n}\nfunction isName(v, name) {\n return v instanceof Name && (name === undefined || v.name === name);\n}\nfunction isCmd(v, cmd) {\n return v instanceof Cmd && (cmd === undefined || v.cmd === cmd);\n}\nfunction isDict(v, type) {\n return v instanceof Dict && (type === undefined || isName(v.get('Type'), type));\n}\nfunction isRef(v) {\n return v instanceof Ref;\n}\nfunction isRefsEqual(v1, v2) {\n return v1.num === v2.num && v1.gen === v2.gen;\n}\nfunction isStream(v) {\n return typeof v === 'object' && v !== null && v.getBytes !== undefined;\n}\nexports.EOF = EOF;\nexports.Cmd = Cmd;\nexports.Dict = Dict;\nexports.Name = Name;\nexports.Ref = Ref;\nexports.RefSet = RefSet;\nexports.RefSetCache = RefSetCache;\nexports.isEOF = isEOF;\nexports.isCmd = isCmd;\nexports.isDict = isDict;\nexports.isName = isName;\nexports.isRef = isRef;\nexports.isRefsEqual = isRefsEqual;\nexports.isStream = isStream;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar coreJbig2 = __w_pdfjs_require__(28);\nvar coreJpg = __w_pdfjs_require__(29);\nvar coreJpx = __w_pdfjs_require__(15);\nvar Util = sharedUtil.Util;\nvar error = sharedUtil.error;\nvar info = sharedUtil.info;\nvar isInt = sharedUtil.isInt;\nvar isArray = sharedUtil.isArray;\nvar createObjectURL = sharedUtil.createObjectURL;\nvar shadow = sharedUtil.shadow;\nvar isSpace = sharedUtil.isSpace;\nvar Dict = corePrimitives.Dict;\nvar isDict = corePrimitives.isDict;\nvar isStream = corePrimitives.isStream;\nvar Jbig2Image = coreJbig2.Jbig2Image;\nvar JpegImage = coreJpg.JpegImage;\nvar JpxImage = coreJpx.JpxImage;\nvar Stream = function StreamClosure() {\n function Stream(arrayBuffer, start, length, dict) {\n  this.bytes = arrayBuffer instanceof Uint8Array ? arrayBuffer : new Uint8Array(arrayBuffer);\n  this.start = start || 0;\n  this.pos = this.start;\n  this.end = start + length || this.bytes.length;\n  this.dict = dict;\n }\n Stream.prototype = {\n  get length() {\n   return this.end - this.start;\n  },\n  get isEmpty() {\n   return this.length === 0;\n  },\n  getByte: function Stream_getByte() {\n   if (this.pos >= this.end) {\n    return -1;\n   }\n   return this.bytes[this.pos++];\n  },\n  getUint16: function Stream_getUint16() {\n   var b0 = this.getByte();\n   var b1 = this.getByte();\n   if (b0 === -1 || b1 === -1) {\n    return -1;\n   }\n   return (b0 << 8) + b1;\n  },\n  getInt32: function Stream_getInt32() {\n   var b0 = this.getByte();\n   var b1 = this.getByte();\n   var b2 = this.getByte();\n   var b3 = this.getByte();\n   return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  },\n  getBytes: function Stream_getBytes(length) {\n   var bytes = this.bytes;\n   var pos = this.pos;\n   var strEnd = this.end;\n   if (!length) {\n    return bytes.subarray(pos, strEnd);\n   }\n   var end = pos + length;\n   if (end > strEnd) {\n    end = strEnd;\n   }\n   this.pos = end;\n   return bytes.subarray(pos, end);\n  },\n  peekByte: function Stream_peekByte() {\n   var peekedByte = this.getByte();\n   this.pos--;\n   return peekedByte;\n  },\n  peekBytes: function Stream_peekBytes(length) {\n   var bytes = this.getBytes(length);\n   this.pos -= bytes.length;\n   return bytes;\n  },\n  skip: function Stream_skip(n) {\n   if (!n) {\n    n = 1;\n   }\n   this.pos += n;\n  },\n  reset: function Stream_reset() {\n   this.pos = this.start;\n  },\n  moveStart: function Stream_moveStart() {\n   this.start = this.pos;\n  },\n  makeSubStream: function Stream_makeSubStream(start, length, dict) {\n   return new Stream(this.bytes.buffer, start, length, dict);\n  }\n };\n return Stream;\n}();\nvar StringStream = function StringStreamClosure() {\n function StringStream(str) {\n  var length = str.length;\n  var bytes = new Uint8Array(length);\n  for (var n = 0; n < length; ++n) {\n   bytes[n] = str.charCodeAt(n);\n  }\n  Stream.call(this, bytes);\n }\n StringStream.prototype = Stream.prototype;\n return StringStream;\n}();\nvar DecodeStream = function DecodeStreamClosure() {\n var emptyBuffer = new Uint8Array(0);\n function DecodeStream(maybeMinBufferLength) {\n  this.pos = 0;\n  this.bufferLength = 0;\n  this.eof = false;\n  this.buffer = emptyBuffer;\n  this.minBufferLength = 512;\n  if (maybeMinBufferLength) {\n   while (this.minBufferLength < maybeMinBufferLength) {\n    this.minBufferLength *= 2;\n   }\n  }\n }\n DecodeStream.prototype = {\n  get isEmpty() {\n   while (!this.eof && this.bufferLength === 0) {\n    this.readBlock();\n   }\n   return this.bufferLength === 0;\n  },\n  ensureBuffer: function DecodeStream_ensureBuffer(requested) {\n   var buffer = this.buffer;\n   if (requested <= buffer.byteLength) {\n    return buffer;\n   }\n   var size = this.minBufferLength;\n   while (size < requested) {\n    size *= 2;\n   }\n   var buffer2 = new Uint8Array(size);\n   buffer2.set(buffer);\n   return this.buffer = buffer2;\n  },\n  getByte: function DecodeStream_getByte() {\n   var pos = this.pos;\n   while (this.bufferLength <= pos) {\n    if (this.eof) {\n     return -1;\n    }\n    this.readBlock();\n   }\n   return this.buffer[this.pos++];\n  },\n  getUint16: function DecodeStream_getUint16() {\n   var b0 = this.getByte();\n   var b1 = this.getByte();\n   if (b0 === -1 || b1 === -1) {\n    return -1;\n   }\n   return (b0 << 8) + b1;\n  },\n  getInt32: function DecodeStream_getInt32() {\n   var b0 = this.getByte();\n   var b1 = this.getByte();\n   var b2 = this.getByte();\n   var b3 = this.getByte();\n   return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  },\n  getBytes: function DecodeStream_getBytes(length) {\n   var end, pos = this.pos;\n   if (length) {\n    this.ensureBuffer(pos + length);\n    end = pos + length;\n    while (!this.eof && this.bufferLength < end) {\n     this.readBlock();\n    }\n    var bufEnd = this.bufferLength;\n    if (end > bufEnd) {\n     end = bufEnd;\n    }\n   } else {\n    while (!this.eof) {\n     this.readBlock();\n    }\n    end = this.bufferLength;\n   }\n   this.pos = end;\n   return this.buffer.subarray(pos, end);\n  },\n  peekByte: function DecodeStream_peekByte() {\n   var peekedByte = this.getByte();\n   this.pos--;\n   return peekedByte;\n  },\n  peekBytes: function DecodeStream_peekBytes(length) {\n   var bytes = this.getBytes(length);\n   this.pos -= bytes.length;\n   return bytes;\n  },\n  makeSubStream: function DecodeStream_makeSubStream(start, length, dict) {\n   var end = start + length;\n   while (this.bufferLength <= end && !this.eof) {\n    this.readBlock();\n   }\n   return new Stream(this.buffer, start, length, dict);\n  },\n  skip: function DecodeStream_skip(n) {\n   if (!n) {\n    n = 1;\n   }\n   this.pos += n;\n  },\n  reset: function DecodeStream_reset() {\n   this.pos = 0;\n  },\n  getBaseStreams: function DecodeStream_getBaseStreams() {\n   if (this.str && this.str.getBaseStreams) {\n    return this.str.getBaseStreams();\n   }\n   return [];\n  }\n };\n return DecodeStream;\n}();\nvar StreamsSequenceStream = function StreamsSequenceStreamClosure() {\n function StreamsSequenceStream(streams) {\n  this.streams = streams;\n  DecodeStream.call(this, null);\n }\n StreamsSequenceStream.prototype = Object.create(DecodeStream.prototype);\n StreamsSequenceStream.prototype.readBlock = function streamSequenceStreamReadBlock() {\n  var streams = this.streams;\n  if (streams.length === 0) {\n   this.eof = true;\n   return;\n  }\n  var stream = streams.shift();\n  var chunk = stream.getBytes();\n  var bufferLength = this.bufferLength;\n  var newLength = bufferLength + chunk.length;\n  var buffer = this.ensureBuffer(newLength);\n  buffer.set(chunk, bufferLength);\n  this.bufferLength = newLength;\n };\n StreamsSequenceStream.prototype.getBaseStreams = function StreamsSequenceStream_getBaseStreams() {\n  var baseStreams = [];\n  for (var i = 0, ii = this.streams.length; i < ii; i++) {\n   var stream = this.streams[i];\n   if (stream.getBaseStreams) {\n    Util.appendToArray(baseStreams, stream.getBaseStreams());\n   }\n  }\n  return baseStreams;\n };\n return StreamsSequenceStream;\n}();\nvar FlateStream = function FlateStreamClosure() {\n var codeLenCodeMap = new Int32Array([\n  16,\n  17,\n  18,\n  0,\n  8,\n  7,\n  9,\n  6,\n  10,\n  5,\n  11,\n  4,\n  12,\n  3,\n  13,\n  2,\n  14,\n  1,\n  15\n ]);\n var lengthDecode = new Int32Array([\n  0x00003,\n  0x00004,\n  0x00005,\n  0x00006,\n  0x00007,\n  0x00008,\n  0x00009,\n  0x0000a,\n  0x1000b,\n  0x1000d,\n  0x1000f,\n  0x10011,\n  0x20013,\n  0x20017,\n  0x2001b,\n  0x2001f,\n  0x30023,\n  0x3002b,\n  0x30033,\n  0x3003b,\n  0x40043,\n  0x40053,\n  0x40063,\n  0x40073,\n  0x50083,\n  0x500a3,\n  0x500c3,\n  0x500e3,\n  0x00102,\n  0x00102,\n  0x00102\n ]);\n var distDecode = new Int32Array([\n  0x00001,\n  0x00002,\n  0x00003,\n  0x00004,\n  0x10005,\n  0x10007,\n  0x20009,\n  0x2000d,\n  0x30011,\n  0x30019,\n  0x40021,\n  0x40031,\n  0x50041,\n  0x50061,\n  0x60081,\n  0x600c1,\n  0x70101,\n  0x70181,\n  0x80201,\n  0x80301,\n  0x90401,\n  0x90601,\n  0xa0801,\n  0xa0c01,\n  0xb1001,\n  0xb1801,\n  0xc2001,\n  0xc3001,\n  0xd4001,\n  0xd6001\n ]);\n var fixedLitCodeTab = [\n  new Int32Array([\n   0x70100,\n   0x80050,\n   0x80010,\n   0x80118,\n   0x70110,\n   0x80070,\n   0x80030,\n   0x900c0,\n   0x70108,\n   0x80060,\n   0x80020,\n   0x900a0,\n   0x80000,\n   0x80080,\n   0x80040,\n   0x900e0,\n   0x70104,\n   0x80058,\n   0x80018,\n   0x90090,\n   0x70114,\n   0x80078,\n   0x80038,\n   0x900d0,\n   0x7010c,\n   0x80068,\n   0x80028,\n   0x900b0,\n   0x80008,\n   0x80088,\n   0x80048,\n   0x900f0,\n   0x70102,\n   0x80054,\n   0x80014,\n   0x8011c,\n   0x70112,\n   0x80074,\n   0x80034,\n   0x900c8,\n   0x7010a,\n   0x80064,\n   0x80024,\n   0x900a8,\n   0x80004,\n   0x80084,\n   0x80044,\n   0x900e8,\n   0x70106,\n   0x8005c,\n   0x8001c,\n   0x90098,\n   0x70116,\n   0x8007c,\n   0x8003c,\n   0x900d8,\n   0x7010e,\n   0x8006c,\n   0x8002c,\n   0x900b8,\n   0x8000c,\n   0x8008c,\n   0x8004c,\n   0x900f8,\n   0x70101,\n   0x80052,\n   0x80012,\n   0x8011a,\n   0x70111,\n   0x80072,\n   0x80032,\n   0x900c4,\n   0x70109,\n   0x80062,\n   0x80022,\n   0x900a4,\n   0x80002,\n   0x80082,\n   0x80042,\n   0x900e4,\n   0x70105,\n   0x8005a,\n   0x8001a,\n   0x90094,\n   0x70115,\n   0x8007a,\n   0x8003a,\n   0x900d4,\n   0x7010d,\n   0x8006a,\n   0x8002a,\n   0x900b4,\n   0x8000a,\n   0x8008a,\n   0x8004a,\n   0x900f4,\n   0x70103,\n   0x80056,\n   0x80016,\n   0x8011e,\n   0x70113,\n   0x80076,\n   0x80036,\n   0x900cc,\n   0x7010b,\n   0x80066,\n   0x80026,\n   0x900ac,\n   0x80006,\n   0x80086,\n   0x80046,\n   0x900ec,\n   0x70107,\n   0x8005e,\n   0x8001e,\n   0x9009c,\n   0x70117,\n   0x8007e,\n   0x8003e,\n   0x900dc,\n   0x7010f,\n   0x8006e,\n   0x8002e,\n   0x900bc,\n   0x8000e,\n   0x8008e,\n   0x8004e,\n   0x900fc,\n   0x70100,\n   0x80051,\n   0x80011,\n   0x80119,\n   0x70110,\n   0x80071,\n   0x80031,\n   0x900c2,\n   0x70108,\n   0x80061,\n   0x80021,\n   0x900a2,\n   0x80001,\n   0x80081,\n   0x80041,\n   0x900e2,\n   0x70104,\n   0x80059,\n   0x80019,\n   0x90092,\n   0x70114,\n   0x80079,\n   0x80039,\n   0x900d2,\n   0x7010c,\n   0x80069,\n   0x80029,\n   0x900b2,\n   0x80009,\n   0x80089,\n   0x80049,\n   0x900f2,\n   0x70102,\n   0x80055,\n   0x80015,\n   0x8011d,\n   0x70112,\n   0x80075,\n   0x80035,\n   0x900ca,\n   0x7010a,\n   0x80065,\n   0x80025,\n   0x900aa,\n   0x80005,\n   0x80085,\n   0x80045,\n   0x900ea,\n   0x70106,\n   0x8005d,\n   0x8001d,\n   0x9009a,\n   0x70116,\n   0x8007d,\n   0x8003d,\n   0x900da,\n   0x7010e,\n   0x8006d,\n   0x8002d,\n   0x900ba,\n   0x8000d,\n   0x8008d,\n   0x8004d,\n   0x900fa,\n   0x70101,\n   0x80053,\n   0x80013,\n   0x8011b,\n   0x70111,\n   0x80073,\n   0x80033,\n   0x900c6,\n   0x70109,\n   0x80063,\n   0x80023,\n   0x900a6,\n   0x80003,\n   0x80083,\n   0x80043,\n   0x900e6,\n   0x70105,\n   0x8005b,\n   0x8001b,\n   0x90096,\n   0x70115,\n   0x8007b,\n   0x8003b,\n   0x900d6,\n   0x7010d,\n   0x8006b,\n   0x8002b,\n   0x900b6,\n   0x8000b,\n   0x8008b,\n   0x8004b,\n   0x900f6,\n   0x70103,\n   0x80057,\n   0x80017,\n   0x8011f,\n   0x70113,\n   0x80077,\n   0x80037,\n   0x900ce,\n   0x7010b,\n   0x80067,\n   0x80027,\n   0x900ae,\n   0x80007,\n   0x80087,\n   0x80047,\n   0x900ee,\n   0x70107,\n   0x8005f,\n   0x8001f,\n   0x9009e,\n   0x70117,\n   0x8007f,\n   0x8003f,\n   0x900de,\n   0x7010f,\n   0x8006f,\n   0x8002f,\n   0x900be,\n   0x8000f,\n   0x8008f,\n   0x8004f,\n   0x900fe,\n   0x70100,\n   0x80050,\n   0x80010,\n   0x80118,\n   0x70110,\n   0x80070,\n   0x80030,\n   0x900c1,\n   0x70108,\n   0x80060,\n   0x80020,\n   0x900a1,\n   0x80000,\n   0x80080,\n   0x80040,\n   0x900e1,\n   0x70104,\n   0x80058,\n   0x80018,\n   0x90091,\n   0x70114,\n   0x80078,\n   0x80038,\n   0x900d1,\n   0x7010c,\n   0x80068,\n   0x80028,\n   0x900b1,\n   0x80008,\n   0x80088,\n   0x80048,\n   0x900f1,\n   0x70102,\n   0x80054,\n   0x80014,\n   0x8011c,\n   0x70112,\n   0x80074,\n   0x80034,\n   0x900c9,\n   0x7010a,\n   0x80064,\n   0x80024,\n   0x900a9,\n   0x80004,\n   0x80084,\n   0x80044,\n   0x900e9,\n   0x70106,\n   0x8005c,\n   0x8001c,\n   0x90099,\n   0x70116,\n   0x8007c,\n   0x8003c,\n   0x900d9,\n   0x7010e,\n   0x8006c,\n   0x8002c,\n   0x900b9,\n   0x8000c,\n   0x8008c,\n   0x8004c,\n   0x900f9,\n   0x70101,\n   0x80052,\n   0x80012,\n   0x8011a,\n   0x70111,\n   0x80072,\n   0x80032,\n   0x900c5,\n   0x70109,\n   0x80062,\n   0x80022,\n   0x900a5,\n   0x80002,\n   0x80082,\n   0x80042,\n   0x900e5,\n   0x70105,\n   0x8005a,\n   0x8001a,\n   0x90095,\n   0x70115,\n   0x8007a,\n   0x8003a,\n   0x900d5,\n   0x7010d,\n   0x8006a,\n   0x8002a,\n   0x900b5,\n   0x8000a,\n   0x8008a,\n   0x8004a,\n   0x900f5,\n   0x70103,\n   0x80056,\n   0x80016,\n   0x8011e,\n   0x70113,\n   0x80076,\n   0x80036,\n   0x900cd,\n   0x7010b,\n   0x80066,\n   0x80026,\n   0x900ad,\n   0x80006,\n   0x80086,\n   0x80046,\n   0x900ed,\n   0x70107,\n   0x8005e,\n   0x8001e,\n   0x9009d,\n   0x70117,\n   0x8007e,\n   0x8003e,\n   0x900dd,\n   0x7010f,\n   0x8006e,\n   0x8002e,\n   0x900bd,\n   0x8000e,\n   0x8008e,\n   0x8004e,\n   0x900fd,\n   0x70100,\n   0x80051,\n   0x80011,\n   0x80119,\n   0x70110,\n   0x80071,\n   0x80031,\n   0x900c3,\n   0x70108,\n   0x80061,\n   0x80021,\n   0x900a3,\n   0x80001,\n   0x80081,\n   0x80041,\n   0x900e3,\n   0x70104,\n   0x80059,\n   0x80019,\n   0x90093,\n   0x70114,\n   0x80079,\n   0x80039,\n   0x900d3,\n   0x7010c,\n   0x80069,\n   0x80029,\n   0x900b3,\n   0x80009,\n   0x80089,\n   0x80049,\n   0x900f3,\n   0x70102,\n   0x80055,\n   0x80015,\n   0x8011d,\n   0x70112,\n   0x80075,\n   0x80035,\n   0x900cb,\n   0x7010a,\n   0x80065,\n   0x80025,\n   0x900ab,\n   0x80005,\n   0x80085,\n   0x80045,\n   0x900eb,\n   0x70106,\n   0x8005d,\n   0x8001d,\n   0x9009b,\n   0x70116,\n   0x8007d,\n   0x8003d,\n   0x900db,\n   0x7010e,\n   0x8006d,\n   0x8002d,\n   0x900bb,\n   0x8000d,\n   0x8008d,\n   0x8004d,\n   0x900fb,\n   0x70101,\n   0x80053,\n   0x80013,\n   0x8011b,\n   0x70111,\n   0x80073,\n   0x80033,\n   0x900c7,\n   0x70109,\n   0x80063,\n   0x80023,\n   0x900a7,\n   0x80003,\n   0x80083,\n   0x80043,\n   0x900e7,\n   0x70105,\n   0x8005b,\n   0x8001b,\n   0x90097,\n   0x70115,\n   0x8007b,\n   0x8003b,\n   0x900d7,\n   0x7010d,\n   0x8006b,\n   0x8002b,\n   0x900b7,\n   0x8000b,\n   0x8008b,\n   0x8004b,\n   0x900f7,\n   0x70103,\n   0x80057,\n   0x80017,\n   0x8011f,\n   0x70113,\n   0x80077,\n   0x80037,\n   0x900cf,\n   0x7010b,\n   0x80067,\n   0x80027,\n   0x900af,\n   0x80007,\n   0x80087,\n   0x80047,\n   0x900ef,\n   0x70107,\n   0x8005f,\n   0x8001f,\n   0x9009f,\n   0x70117,\n   0x8007f,\n   0x8003f,\n   0x900df,\n   0x7010f,\n   0x8006f,\n   0x8002f,\n   0x900bf,\n   0x8000f,\n   0x8008f,\n   0x8004f,\n   0x900ff\n  ]),\n  9\n ];\n var fixedDistCodeTab = [\n  new Int32Array([\n   0x50000,\n   0x50010,\n   0x50008,\n   0x50018,\n   0x50004,\n   0x50014,\n   0x5000c,\n   0x5001c,\n   0x50002,\n   0x50012,\n   0x5000a,\n   0x5001a,\n   0x50006,\n   0x50016,\n   0x5000e,\n   0x00000,\n   0x50001,\n   0x50011,\n   0x50009,\n   0x50019,\n   0x50005,\n   0x50015,\n   0x5000d,\n   0x5001d,\n   0x50003,\n   0x50013,\n   0x5000b,\n   0x5001b,\n   0x50007,\n   0x50017,\n   0x5000f,\n   0x00000\n  ]),\n  5\n ];\n function FlateStream(str, maybeLength) {\n  this.str = str;\n  this.dict = str.dict;\n  var cmf = str.getByte();\n  var flg = str.getByte();\n  if (cmf === -1 || flg === -1) {\n   error('Invalid header in flate stream: ' + cmf + ', ' + flg);\n  }\n  if ((cmf & 0x0f) !== 0x08) {\n   error('Unknown compression method in flate stream: ' + cmf + ', ' + flg);\n  }\n  if (((cmf << 8) + flg) % 31 !== 0) {\n   error('Bad FCHECK in flate stream: ' + cmf + ', ' + flg);\n  }\n  if (flg & 0x20) {\n   error('FDICT bit set in flate stream: ' + cmf + ', ' + flg);\n  }\n  this.codeSize = 0;\n  this.codeBuf = 0;\n  DecodeStream.call(this, maybeLength);\n }\n FlateStream.prototype = Object.create(DecodeStream.prototype);\n FlateStream.prototype.getBits = function FlateStream_getBits(bits) {\n  var str = this.str;\n  var codeSize = this.codeSize;\n  var codeBuf = this.codeBuf;\n  var b;\n  while (codeSize < bits) {\n   if ((b = str.getByte()) === -1) {\n    error('Bad encoding in flate stream');\n   }\n   codeBuf |= b << codeSize;\n   codeSize += 8;\n  }\n  b = codeBuf & (1 << bits) - 1;\n  this.codeBuf = codeBuf >> bits;\n  this.codeSize = codeSize -= bits;\n  return b;\n };\n FlateStream.prototype.getCode = function FlateStream_getCode(table) {\n  var str = this.str;\n  var codes = table[0];\n  var maxLen = table[1];\n  var codeSize = this.codeSize;\n  var codeBuf = this.codeBuf;\n  var b;\n  while (codeSize < maxLen) {\n   if ((b = str.getByte()) === -1) {\n    break;\n   }\n   codeBuf |= b << codeSize;\n   codeSize += 8;\n  }\n  var code = codes[codeBuf & (1 << maxLen) - 1];\n  var codeLen = code >> 16;\n  var codeVal = code & 0xffff;\n  if (codeLen < 1 || codeSize < codeLen) {\n   error('Bad encoding in flate stream');\n  }\n  this.codeBuf = codeBuf >> codeLen;\n  this.codeSize = codeSize - codeLen;\n  return codeVal;\n };\n FlateStream.prototype.generateHuffmanTable = function flateStreamGenerateHuffmanTable(lengths) {\n  var n = lengths.length;\n  var maxLen = 0;\n  var i;\n  for (i = 0; i < n; ++i) {\n   if (lengths[i] > maxLen) {\n    maxLen = lengths[i];\n   }\n  }\n  var size = 1 << maxLen;\n  var codes = new Int32Array(size);\n  for (var len = 1, code = 0, skip = 2; len <= maxLen; ++len, code <<= 1, skip <<= 1) {\n   for (var val = 0; val < n; ++val) {\n    if (lengths[val] === len) {\n     var code2 = 0;\n     var t = code;\n     for (i = 0; i < len; ++i) {\n      code2 = code2 << 1 | t & 1;\n      t >>= 1;\n     }\n     for (i = code2; i < size; i += skip) {\n      codes[i] = len << 16 | val;\n     }\n     ++code;\n    }\n   }\n  }\n  return [\n   codes,\n   maxLen\n  ];\n };\n FlateStream.prototype.readBlock = function FlateStream_readBlock() {\n  var buffer, len;\n  var str = this.str;\n  var hdr = this.getBits(3);\n  if (hdr & 1) {\n   this.eof = true;\n  }\n  hdr >>= 1;\n  if (hdr === 0) {\n   var b;\n   if ((b = str.getByte()) === -1) {\n    error('Bad block header in flate stream');\n   }\n   var blockLen = b;\n   if ((b = str.getByte()) === -1) {\n    error('Bad block header in flate stream');\n   }\n   blockLen |= b << 8;\n   if ((b = str.getByte()) === -1) {\n    error('Bad block header in flate stream');\n   }\n   var check = b;\n   if ((b = str.getByte()) === -1) {\n    error('Bad block header in flate stream');\n   }\n   check |= b << 8;\n   if (check !== (~blockLen & 0xffff) && (blockLen !== 0 || check !== 0)) {\n    error('Bad uncompressed block length in flate stream');\n   }\n   this.codeBuf = 0;\n   this.codeSize = 0;\n   var bufferLength = this.bufferLength;\n   buffer = this.ensureBuffer(bufferLength + blockLen);\n   var end = bufferLength + blockLen;\n   this.bufferLength = end;\n   if (blockLen === 0) {\n    if (str.peekByte() === -1) {\n     this.eof = true;\n    }\n   } else {\n    for (var n = bufferLength; n < end; ++n) {\n     if ((b = str.getByte()) === -1) {\n      this.eof = true;\n      break;\n     }\n     buffer[n] = b;\n    }\n   }\n   return;\n  }\n  var litCodeTable;\n  var distCodeTable;\n  if (hdr === 1) {\n   litCodeTable = fixedLitCodeTab;\n   distCodeTable = fixedDistCodeTab;\n  } else if (hdr === 2) {\n   var numLitCodes = this.getBits(5) + 257;\n   var numDistCodes = this.getBits(5) + 1;\n   var numCodeLenCodes = this.getBits(4) + 4;\n   var codeLenCodeLengths = new Uint8Array(codeLenCodeMap.length);\n   var i;\n   for (i = 0; i < numCodeLenCodes; ++i) {\n    codeLenCodeLengths[codeLenCodeMap[i]] = this.getBits(3);\n   }\n   var codeLenCodeTab = this.generateHuffmanTable(codeLenCodeLengths);\n   len = 0;\n   i = 0;\n   var codes = numLitCodes + numDistCodes;\n   var codeLengths = new Uint8Array(codes);\n   var bitsLength, bitsOffset, what;\n   while (i < codes) {\n    var code = this.getCode(codeLenCodeTab);\n    if (code === 16) {\n     bitsLength = 2;\n     bitsOffset = 3;\n     what = len;\n    } else if (code === 17) {\n     bitsLength = 3;\n     bitsOffset = 3;\n     what = len = 0;\n    } else if (code === 18) {\n     bitsLength = 7;\n     bitsOffset = 11;\n     what = len = 0;\n    } else {\n     codeLengths[i++] = len = code;\n     continue;\n    }\n    var repeatLength = this.getBits(bitsLength) + bitsOffset;\n    while (repeatLength-- > 0) {\n     codeLengths[i++] = what;\n    }\n   }\n   litCodeTable = this.generateHuffmanTable(codeLengths.subarray(0, numLitCodes));\n   distCodeTable = this.generateHuffmanTable(codeLengths.subarray(numLitCodes, codes));\n  } else {\n   error('Unknown block type in flate stream');\n  }\n  buffer = this.buffer;\n  var limit = buffer ? buffer.length : 0;\n  var pos = this.bufferLength;\n  while (true) {\n   var code1 = this.getCode(litCodeTable);\n   if (code1 < 256) {\n    if (pos + 1 >= limit) {\n     buffer = this.ensureBuffer(pos + 1);\n     limit = buffer.length;\n    }\n    buffer[pos++] = code1;\n    continue;\n   }\n   if (code1 === 256) {\n    this.bufferLength = pos;\n    return;\n   }\n   code1 -= 257;\n   code1 = lengthDecode[code1];\n   var code2 = code1 >> 16;\n   if (code2 > 0) {\n    code2 = this.getBits(code2);\n   }\n   len = (code1 & 0xffff) + code2;\n   code1 = this.getCode(distCodeTable);\n   code1 = distDecode[code1];\n   code2 = code1 >> 16;\n   if (code2 > 0) {\n    code2 = this.getBits(code2);\n   }\n   var dist = (code1 & 0xffff) + code2;\n   if (pos + len >= limit) {\n    buffer = this.ensureBuffer(pos + len);\n    limit = buffer.length;\n   }\n   for (var k = 0; k < len; ++k, ++pos) {\n    buffer[pos] = buffer[pos - dist];\n   }\n  }\n };\n return FlateStream;\n}();\nvar PredictorStream = function PredictorStreamClosure() {\n function PredictorStream(str, maybeLength, params) {\n  if (!isDict(params)) {\n   return str;\n  }\n  var predictor = this.predictor = params.get('Predictor') || 1;\n  if (predictor <= 1) {\n   return str;\n  }\n  if (predictor !== 2 && (predictor < 10 || predictor > 15)) {\n   error('Unsupported predictor: ' + predictor);\n  }\n  if (predictor === 2) {\n   this.readBlock = this.readBlockTiff;\n  } else {\n   this.readBlock = this.readBlockPng;\n  }\n  this.str = str;\n  this.dict = str.dict;\n  var colors = this.colors = params.get('Colors') || 1;\n  var bits = this.bits = params.get('BitsPerComponent') || 8;\n  var columns = this.columns = params.get('Columns') || 1;\n  this.pixBytes = colors * bits + 7 >> 3;\n  this.rowBytes = columns * colors * bits + 7 >> 3;\n  DecodeStream.call(this, maybeLength);\n  return this;\n }\n PredictorStream.prototype = Object.create(DecodeStream.prototype);\n PredictorStream.prototype.readBlockTiff = function predictorStreamReadBlockTiff() {\n  var rowBytes = this.rowBytes;\n  var bufferLength = this.bufferLength;\n  var buffer = this.ensureBuffer(bufferLength + rowBytes);\n  var bits = this.bits;\n  var colors = this.colors;\n  var rawBytes = this.str.getBytes(rowBytes);\n  this.eof = !rawBytes.length;\n  if (this.eof) {\n   return;\n  }\n  var inbuf = 0, outbuf = 0;\n  var inbits = 0, outbits = 0;\n  var pos = bufferLength;\n  var i;\n  if (bits === 1 && colors === 1) {\n   for (i = 0; i < rowBytes; ++i) {\n    var c = rawBytes[i] ^ inbuf;\n    c ^= c >> 1;\n    c ^= c >> 2;\n    c ^= c >> 4;\n    inbuf = (c & 1) << 7;\n    buffer[pos++] = c;\n   }\n  } else if (bits === 8) {\n   for (i = 0; i < colors; ++i) {\n    buffer[pos++] = rawBytes[i];\n   }\n   for (; i < rowBytes; ++i) {\n    buffer[pos] = buffer[pos - colors] + rawBytes[i];\n    pos++;\n   }\n  } else {\n   var compArray = new Uint8Array(colors + 1);\n   var bitMask = (1 << bits) - 1;\n   var j = 0, k = bufferLength;\n   var columns = this.columns;\n   for (i = 0; i < columns; ++i) {\n    for (var kk = 0; kk < colors; ++kk) {\n     if (inbits < bits) {\n      inbuf = inbuf << 8 | rawBytes[j++] & 0xFF;\n      inbits += 8;\n     }\n     compArray[kk] = compArray[kk] + (inbuf >> inbits - bits) & bitMask;\n     inbits -= bits;\n     outbuf = outbuf << bits | compArray[kk];\n     outbits += bits;\n     if (outbits >= 8) {\n      buffer[k++] = outbuf >> outbits - 8 & 0xFF;\n      outbits -= 8;\n     }\n    }\n   }\n   if (outbits > 0) {\n    buffer[k++] = (outbuf << 8 - outbits) + (inbuf & (1 << 8 - outbits) - 1);\n   }\n  }\n  this.bufferLength += rowBytes;\n };\n PredictorStream.prototype.readBlockPng = function predictorStreamReadBlockPng() {\n  var rowBytes = this.rowBytes;\n  var pixBytes = this.pixBytes;\n  var predictor = this.str.getByte();\n  var rawBytes = this.str.getBytes(rowBytes);\n  this.eof = !rawBytes.length;\n  if (this.eof) {\n   return;\n  }\n  var bufferLength = this.bufferLength;\n  var buffer = this.ensureBuffer(bufferLength + rowBytes);\n  var prevRow = buffer.subarray(bufferLength - rowBytes, bufferLength);\n  if (prevRow.length === 0) {\n   prevRow = new Uint8Array(rowBytes);\n  }\n  var i, j = bufferLength, up, c;\n  switch (predictor) {\n  case 0:\n   for (i = 0; i < rowBytes; ++i) {\n    buffer[j++] = rawBytes[i];\n   }\n   break;\n  case 1:\n   for (i = 0; i < pixBytes; ++i) {\n    buffer[j++] = rawBytes[i];\n   }\n   for (; i < rowBytes; ++i) {\n    buffer[j] = buffer[j - pixBytes] + rawBytes[i] & 0xFF;\n    j++;\n   }\n   break;\n  case 2:\n   for (i = 0; i < rowBytes; ++i) {\n    buffer[j++] = prevRow[i] + rawBytes[i] & 0xFF;\n   }\n   break;\n  case 3:\n   for (i = 0; i < pixBytes; ++i) {\n    buffer[j++] = (prevRow[i] >> 1) + rawBytes[i];\n   }\n   for (; i < rowBytes; ++i) {\n    buffer[j] = (prevRow[i] + buffer[j - pixBytes] >> 1) + rawBytes[i] & 0xFF;\n    j++;\n   }\n   break;\n  case 4:\n   for (i = 0; i < pixBytes; ++i) {\n    up = prevRow[i];\n    c = rawBytes[i];\n    buffer[j++] = up + c;\n   }\n   for (; i < rowBytes; ++i) {\n    up = prevRow[i];\n    var upLeft = prevRow[i - pixBytes];\n    var left = buffer[j - pixBytes];\n    var p = left + up - upLeft;\n    var pa = p - left;\n    if (pa < 0) {\n     pa = -pa;\n    }\n    var pb = p - up;\n    if (pb < 0) {\n     pb = -pb;\n    }\n    var pc = p - upLeft;\n    if (pc < 0) {\n     pc = -pc;\n    }\n    c = rawBytes[i];\n    if (pa <= pb && pa <= pc) {\n     buffer[j++] = left + c;\n    } else if (pb <= pc) {\n     buffer[j++] = up + c;\n    } else {\n     buffer[j++] = upLeft + c;\n    }\n   }\n   break;\n  default:\n   error('Unsupported predictor: ' + predictor);\n  }\n  this.bufferLength += rowBytes;\n };\n return PredictorStream;\n}();\nvar JpegStream = function JpegStreamClosure() {\n function JpegStream(stream, maybeLength, dict, params) {\n  var ch;\n  while ((ch = stream.getByte()) !== -1) {\n   if (ch === 0xFF) {\n    stream.skip(-1);\n    break;\n   }\n  }\n  this.stream = stream;\n  this.maybeLength = maybeLength;\n  this.dict = dict;\n  this.params = params;\n  DecodeStream.call(this, maybeLength);\n }\n JpegStream.prototype = Object.create(DecodeStream.prototype);\n Object.defineProperty(JpegStream.prototype, 'bytes', {\n  get: function JpegStream_bytes() {\n   return shadow(this, 'bytes', this.stream.getBytes(this.maybeLength));\n  },\n  configurable: true\n });\n JpegStream.prototype.ensureBuffer = function JpegStream_ensureBuffer(req) {\n  if (this.bufferLength) {\n   return;\n  }\n  var jpegImage = new JpegImage();\n  var decodeArr = this.dict.getArray('Decode', 'D');\n  if (this.forceRGB && isArray(decodeArr)) {\n   var bitsPerComponent = this.dict.get('BitsPerComponent') || 8;\n   var decodeArrLength = decodeArr.length;\n   var transform = new Int32Array(decodeArrLength);\n   var transformNeeded = false;\n   var maxValue = (1 << bitsPerComponent) - 1;\n   for (var i = 0; i < decodeArrLength; i += 2) {\n    transform[i] = (decodeArr[i + 1] - decodeArr[i]) * 256 | 0;\n    transform[i + 1] = decodeArr[i] * maxValue | 0;\n    if (transform[i] !== 256 || transform[i + 1] !== 0) {\n     transformNeeded = true;\n    }\n   }\n   if (transformNeeded) {\n    jpegImage.decodeTransform = transform;\n   }\n  }\n  if (isDict(this.params)) {\n   var colorTransform = this.params.get('ColorTransform');\n   if (isInt(colorTransform)) {\n    jpegImage.colorTransform = colorTransform;\n   }\n  }\n  jpegImage.parse(this.bytes);\n  var data = jpegImage.getData(this.drawWidth, this.drawHeight, this.forceRGB);\n  this.buffer = data;\n  this.bufferLength = data.length;\n  this.eof = true;\n };\n JpegStream.prototype.getBytes = function JpegStream_getBytes(length) {\n  this.ensureBuffer();\n  return this.buffer;\n };\n JpegStream.prototype.getIR = function JpegStream_getIR(forceDataSchema) {\n  return createObjectURL(this.bytes, 'image/jpeg', forceDataSchema);\n };\n return JpegStream;\n}();\nvar JpxStream = function JpxStreamClosure() {\n function JpxStream(stream, maybeLength, dict, params) {\n  this.stream = stream;\n  this.maybeLength = maybeLength;\n  this.dict = dict;\n  this.params = params;\n  DecodeStream.call(this, maybeLength);\n }\n JpxStream.prototype = Object.create(DecodeStream.prototype);\n Object.defineProperty(JpxStream.prototype, 'bytes', {\n  get: function JpxStream_bytes() {\n   return shadow(this, 'bytes', this.stream.getBytes(this.maybeLength));\n  },\n  configurable: true\n });\n JpxStream.prototype.ensureBuffer = function JpxStream_ensureBuffer(req) {\n  if (this.bufferLength) {\n   return;\n  }\n  var jpxImage = new JpxImage();\n  jpxImage.parse(this.bytes);\n  var width = jpxImage.width;\n  var height = jpxImage.height;\n  var componentsCount = jpxImage.componentsCount;\n  var tileCount = jpxImage.tiles.length;\n  if (tileCount === 1) {\n   this.buffer = jpxImage.tiles[0].items;\n  } else {\n   var data = new Uint8Array(width * height * componentsCount);\n   for (var k = 0; k < tileCount; k++) {\n    var tileComponents = jpxImage.tiles[k];\n    var tileWidth = tileComponents.width;\n    var tileHeight = tileComponents.height;\n    var tileLeft = tileComponents.left;\n    var tileTop = tileComponents.top;\n    var src = tileComponents.items;\n    var srcPosition = 0;\n    var dataPosition = (width * tileTop + tileLeft) * componentsCount;\n    var imgRowSize = width * componentsCount;\n    var tileRowSize = tileWidth * componentsCount;\n    for (var j = 0; j < tileHeight; j++) {\n     var rowBytes = src.subarray(srcPosition, srcPosition + tileRowSize);\n     data.set(rowBytes, dataPosition);\n     srcPosition += tileRowSize;\n     dataPosition += imgRowSize;\n    }\n   }\n   this.buffer = data;\n  }\n  this.bufferLength = this.buffer.length;\n  this.eof = true;\n };\n return JpxStream;\n}();\nvar Jbig2Stream = function Jbig2StreamClosure() {\n function Jbig2Stream(stream, maybeLength, dict, params) {\n  this.stream = stream;\n  this.maybeLength = maybeLength;\n  this.dict = dict;\n  this.params = params;\n  DecodeStream.call(this, maybeLength);\n }\n Jbig2Stream.prototype = Object.create(DecodeStream.prototype);\n Object.defineProperty(Jbig2Stream.prototype, 'bytes', {\n  get: function Jbig2Stream_bytes() {\n   return shadow(this, 'bytes', this.stream.getBytes(this.maybeLength));\n  },\n  configurable: true\n });\n Jbig2Stream.prototype.ensureBuffer = function Jbig2Stream_ensureBuffer(req) {\n  if (this.bufferLength) {\n   return;\n  }\n  var jbig2Image = new Jbig2Image();\n  var chunks = [];\n  if (isDict(this.params)) {\n   var globalsStream = this.params.get('JBIG2Globals');\n   if (isStream(globalsStream)) {\n    var globals = globalsStream.getBytes();\n    chunks.push({\n     data: globals,\n     start: 0,\n     end: globals.length\n    });\n   }\n  }\n  chunks.push({\n   data: this.bytes,\n   start: 0,\n   end: this.bytes.length\n  });\n  var data = jbig2Image.parseChunks(chunks);\n  var dataLength = data.length;\n  for (var i = 0; i < dataLength; i++) {\n   data[i] ^= 0xFF;\n  }\n  this.buffer = data;\n  this.bufferLength = dataLength;\n  this.eof = true;\n };\n return Jbig2Stream;\n}();\nvar DecryptStream = function DecryptStreamClosure() {\n function DecryptStream(str, maybeLength, decrypt) {\n  this.str = str;\n  this.dict = str.dict;\n  this.decrypt = decrypt;\n  this.nextChunk = null;\n  this.initialized = false;\n  DecodeStream.call(this, maybeLength);\n }\n var chunkSize = 512;\n DecryptStream.prototype = Object.create(DecodeStream.prototype);\n DecryptStream.prototype.readBlock = function DecryptStream_readBlock() {\n  var chunk;\n  if (this.initialized) {\n   chunk = this.nextChunk;\n  } else {\n   chunk = this.str.getBytes(chunkSize);\n   this.initialized = true;\n  }\n  if (!chunk || chunk.length === 0) {\n   this.eof = true;\n   return;\n  }\n  this.nextChunk = this.str.getBytes(chunkSize);\n  var hasMoreData = this.nextChunk && this.nextChunk.length > 0;\n  var decrypt = this.decrypt;\n  chunk = decrypt(chunk, !hasMoreData);\n  var bufferLength = this.bufferLength;\n  var i, n = chunk.length;\n  var buffer = this.ensureBuffer(bufferLength + n);\n  for (i = 0; i < n; i++) {\n   buffer[bufferLength++] = chunk[i];\n  }\n  this.bufferLength = bufferLength;\n };\n return DecryptStream;\n}();\nvar Ascii85Stream = function Ascii85StreamClosure() {\n function Ascii85Stream(str, maybeLength) {\n  this.str = str;\n  this.dict = str.dict;\n  this.input = new Uint8Array(5);\n  if (maybeLength) {\n   maybeLength = 0.8 * maybeLength;\n  }\n  DecodeStream.call(this, maybeLength);\n }\n Ascii85Stream.prototype = Object.create(DecodeStream.prototype);\n Ascii85Stream.prototype.readBlock = function Ascii85Stream_readBlock() {\n  var TILDA_CHAR = 0x7E;\n  var Z_LOWER_CHAR = 0x7A;\n  var EOF = -1;\n  var str = this.str;\n  var c = str.getByte();\n  while (isSpace(c)) {\n   c = str.getByte();\n  }\n  if (c === EOF || c === TILDA_CHAR) {\n   this.eof = true;\n   return;\n  }\n  var bufferLength = this.bufferLength, buffer;\n  var i;\n  if (c === Z_LOWER_CHAR) {\n   buffer = this.ensureBuffer(bufferLength + 4);\n   for (i = 0; i < 4; ++i) {\n    buffer[bufferLength + i] = 0;\n   }\n   this.bufferLength += 4;\n  } else {\n   var input = this.input;\n   input[0] = c;\n   for (i = 1; i < 5; ++i) {\n    c = str.getByte();\n    while (isSpace(c)) {\n     c = str.getByte();\n    }\n    input[i] = c;\n    if (c === EOF || c === TILDA_CHAR) {\n     break;\n    }\n   }\n   buffer = this.ensureBuffer(bufferLength + i - 1);\n   this.bufferLength += i - 1;\n   if (i < 5) {\n    for (; i < 5; ++i) {\n     input[i] = 0x21 + 84;\n    }\n    this.eof = true;\n   }\n   var t = 0;\n   for (i = 0; i < 5; ++i) {\n    t = t * 85 + (input[i] - 0x21);\n   }\n   for (i = 3; i >= 0; --i) {\n    buffer[bufferLength + i] = t & 0xFF;\n    t >>= 8;\n   }\n  }\n };\n return Ascii85Stream;\n}();\nvar AsciiHexStream = function AsciiHexStreamClosure() {\n function AsciiHexStream(str, maybeLength) {\n  this.str = str;\n  this.dict = str.dict;\n  this.firstDigit = -1;\n  if (maybeLength) {\n   maybeLength = 0.5 * maybeLength;\n  }\n  DecodeStream.call(this, maybeLength);\n }\n AsciiHexStream.prototype = Object.create(DecodeStream.prototype);\n AsciiHexStream.prototype.readBlock = function AsciiHexStream_readBlock() {\n  var UPSTREAM_BLOCK_SIZE = 8000;\n  var bytes = this.str.getBytes(UPSTREAM_BLOCK_SIZE);\n  if (!bytes.length) {\n   this.eof = true;\n   return;\n  }\n  var maxDecodeLength = bytes.length + 1 >> 1;\n  var buffer = this.ensureBuffer(this.bufferLength + maxDecodeLength);\n  var bufferLength = this.bufferLength;\n  var firstDigit = this.firstDigit;\n  for (var i = 0, ii = bytes.length; i < ii; i++) {\n   var ch = bytes[i], digit;\n   if (ch >= 0x30 && ch <= 0x39) {\n    digit = ch & 0x0F;\n   } else if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n    digit = (ch & 0x0F) + 9;\n   } else if (ch === 0x3E) {\n    this.eof = true;\n    break;\n   } else {\n    continue;\n   }\n   if (firstDigit < 0) {\n    firstDigit = digit;\n   } else {\n    buffer[bufferLength++] = firstDigit << 4 | digit;\n    firstDigit = -1;\n   }\n  }\n  if (firstDigit >= 0 && this.eof) {\n   buffer[bufferLength++] = firstDigit << 4;\n   firstDigit = -1;\n  }\n  this.firstDigit = firstDigit;\n  this.bufferLength = bufferLength;\n };\n return AsciiHexStream;\n}();\nvar RunLengthStream = function RunLengthStreamClosure() {\n function RunLengthStream(str, maybeLength) {\n  this.str = str;\n  this.dict = str.dict;\n  DecodeStream.call(this, maybeLength);\n }\n RunLengthStream.prototype = Object.create(DecodeStream.prototype);\n RunLengthStream.prototype.readBlock = function RunLengthStream_readBlock() {\n  var repeatHeader = this.str.getBytes(2);\n  if (!repeatHeader || repeatHeader.length < 2 || repeatHeader[0] === 128) {\n   this.eof = true;\n   return;\n  }\n  var buffer;\n  var bufferLength = this.bufferLength;\n  var n = repeatHeader[0];\n  if (n < 128) {\n   buffer = this.ensureBuffer(bufferLength + n + 1);\n   buffer[bufferLength++] = repeatHeader[1];\n   if (n > 0) {\n    var source = this.str.getBytes(n);\n    buffer.set(source, bufferLength);\n    bufferLength += n;\n   }\n  } else {\n   n = 257 - n;\n   var b = repeatHeader[1];\n   buffer = this.ensureBuffer(bufferLength + n + 1);\n   for (var i = 0; i < n; i++) {\n    buffer[bufferLength++] = b;\n   }\n  }\n  this.bufferLength = bufferLength;\n };\n return RunLengthStream;\n}();\nvar CCITTFaxStream = function CCITTFaxStreamClosure() {\n var ccittEOL = -2;\n var ccittEOF = -1;\n var twoDimPass = 0;\n var twoDimHoriz = 1;\n var twoDimVert0 = 2;\n var twoDimVertR1 = 3;\n var twoDimVertL1 = 4;\n var twoDimVertR2 = 5;\n var twoDimVertL2 = 6;\n var twoDimVertR3 = 7;\n var twoDimVertL3 = 8;\n var twoDimTable = [\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   7,\n   twoDimVertL3\n  ],\n  [\n   7,\n   twoDimVertR3\n  ],\n  [\n   6,\n   twoDimVertL2\n  ],\n  [\n   6,\n   twoDimVertL2\n  ],\n  [\n   6,\n   twoDimVertR2\n  ],\n  [\n   6,\n   twoDimVertR2\n  ],\n  [\n   4,\n   twoDimPass\n  ],\n  [\n   4,\n   twoDimPass\n  ],\n  [\n   4,\n   twoDimPass\n  ],\n  [\n   4,\n   twoDimPass\n  ],\n  [\n   4,\n   twoDimPass\n  ],\n  [\n   4,\n   twoDimPass\n  ],\n  [\n   4,\n   twoDimPass\n  ],\n  [\n   4,\n   twoDimPass\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimHoriz\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertL1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   3,\n   twoDimVertR1\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ],\n  [\n   1,\n   twoDimVert0\n  ]\n ];\n var whiteTable1 = [\n  [\n   -1,\n   -1\n  ],\n  [\n   12,\n   ccittEOL\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   11,\n   1792\n  ],\n  [\n   11,\n   1792\n  ],\n  [\n   12,\n   1984\n  ],\n  [\n   12,\n   2048\n  ],\n  [\n   12,\n   2112\n  ],\n  [\n   12,\n   2176\n  ],\n  [\n   12,\n   2240\n  ],\n  [\n   12,\n   2304\n  ],\n  [\n   11,\n   1856\n  ],\n  [\n   11,\n   1856\n  ],\n  [\n   11,\n   1920\n  ],\n  [\n   11,\n   1920\n  ],\n  [\n   12,\n   2368\n  ],\n  [\n   12,\n   2432\n  ],\n  [\n   12,\n   2496\n  ],\n  [\n   12,\n   2560\n  ]\n ];\n var whiteTable2 = [\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   8,\n   29\n  ],\n  [\n   8,\n   29\n  ],\n  [\n   8,\n   30\n  ],\n  [\n   8,\n   30\n  ],\n  [\n   8,\n   45\n  ],\n  [\n   8,\n   45\n  ],\n  [\n   8,\n   46\n  ],\n  [\n   8,\n   46\n  ],\n  [\n   7,\n   22\n  ],\n  [\n   7,\n   22\n  ],\n  [\n   7,\n   22\n  ],\n  [\n   7,\n   22\n  ],\n  [\n   7,\n   23\n  ],\n  [\n   7,\n   23\n  ],\n  [\n   7,\n   23\n  ],\n  [\n   7,\n   23\n  ],\n  [\n   8,\n   47\n  ],\n  [\n   8,\n   47\n  ],\n  [\n   8,\n   48\n  ],\n  [\n   8,\n   48\n  ],\n  [\n   6,\n   13\n  ],\n  [\n   6,\n   13\n  ],\n  [\n   6,\n   13\n  ],\n  [\n   6,\n   13\n  ],\n  [\n   6,\n   13\n  ],\n  [\n   6,\n   13\n  ],\n  [\n   6,\n   13\n  ],\n  [\n   6,\n   13\n  ],\n  [\n   7,\n   20\n  ],\n  [\n   7,\n   20\n  ],\n  [\n   7,\n   20\n  ],\n  [\n   7,\n   20\n  ],\n  [\n   8,\n   33\n  ],\n  [\n   8,\n   33\n  ],\n  [\n   8,\n   34\n  ],\n  [\n   8,\n   34\n  ],\n  [\n   8,\n   35\n  ],\n  [\n   8,\n   35\n  ],\n  [\n   8,\n   36\n  ],\n  [\n   8,\n   36\n  ],\n  [\n   8,\n   37\n  ],\n  [\n   8,\n   37\n  ],\n  [\n   8,\n   38\n  ],\n  [\n   8,\n   38\n  ],\n  [\n   7,\n   19\n  ],\n  [\n   7,\n   19\n  ],\n  [\n   7,\n   19\n  ],\n  [\n   7,\n   19\n  ],\n  [\n   8,\n   31\n  ],\n  [\n   8,\n   31\n  ],\n  [\n   8,\n   32\n  ],\n  [\n   8,\n   32\n  ],\n  [\n   6,\n   1\n  ],\n  [\n   6,\n   1\n  ],\n  [\n   6,\n   1\n  ],\n  [\n   6,\n   1\n  ],\n  [\n   6,\n   1\n  ],\n  [\n   6,\n   1\n  ],\n  [\n   6,\n   1\n  ],\n  [\n   6,\n   1\n  ],\n  [\n   6,\n   12\n  ],\n  [\n   6,\n   12\n  ],\n  [\n   6,\n   12\n  ],\n  [\n   6,\n   12\n  ],\n  [\n   6,\n   12\n  ],\n  [\n   6,\n   12\n  ],\n  [\n   6,\n   12\n  ],\n  [\n   6,\n   12\n  ],\n  [\n   8,\n   53\n  ],\n  [\n   8,\n   53\n  ],\n  [\n   8,\n   54\n  ],\n  [\n   8,\n   54\n  ],\n  [\n   7,\n   26\n  ],\n  [\n   7,\n   26\n  ],\n  [\n   7,\n   26\n  ],\n  [\n   7,\n   26\n  ],\n  [\n   8,\n   39\n  ],\n  [\n   8,\n   39\n  ],\n  [\n   8,\n   40\n  ],\n  [\n   8,\n   40\n  ],\n  [\n   8,\n   41\n  ],\n  [\n   8,\n   41\n  ],\n  [\n   8,\n   42\n  ],\n  [\n   8,\n   42\n  ],\n  [\n   8,\n   43\n  ],\n  [\n   8,\n   43\n  ],\n  [\n   8,\n   44\n  ],\n  [\n   8,\n   44\n  ],\n  [\n   7,\n   21\n  ],\n  [\n   7,\n   21\n  ],\n  [\n   7,\n   21\n  ],\n  [\n   7,\n   21\n  ],\n  [\n   7,\n   28\n  ],\n  [\n   7,\n   28\n  ],\n  [\n   7,\n   28\n  ],\n  [\n   7,\n   28\n  ],\n  [\n   8,\n   61\n  ],\n  [\n   8,\n   61\n  ],\n  [\n   8,\n   62\n  ],\n  [\n   8,\n   62\n  ],\n  [\n   8,\n   63\n  ],\n  [\n   8,\n   63\n  ],\n  [\n   8,\n   0\n  ],\n  [\n   8,\n   0\n  ],\n  [\n   8,\n   320\n  ],\n  [\n   8,\n   320\n  ],\n  [\n   8,\n   384\n  ],\n  [\n   8,\n   384\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   10\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   5,\n   11\n  ],\n  [\n   7,\n   27\n  ],\n  [\n   7,\n   27\n  ],\n  [\n   7,\n   27\n  ],\n  [\n   7,\n   27\n  ],\n  [\n   8,\n   59\n  ],\n  [\n   8,\n   59\n  ],\n  [\n   8,\n   60\n  ],\n  [\n   8,\n   60\n  ],\n  [\n   9,\n   1472\n  ],\n  [\n   9,\n   1536\n  ],\n  [\n   9,\n   1600\n  ],\n  [\n   9,\n   1728\n  ],\n  [\n   7,\n   18\n  ],\n  [\n   7,\n   18\n  ],\n  [\n   7,\n   18\n  ],\n  [\n   7,\n   18\n  ],\n  [\n   7,\n   24\n  ],\n  [\n   7,\n   24\n  ],\n  [\n   7,\n   24\n  ],\n  [\n   7,\n   24\n  ],\n  [\n   8,\n   49\n  ],\n  [\n   8,\n   49\n  ],\n  [\n   8,\n   50\n  ],\n  [\n   8,\n   50\n  ],\n  [\n   8,\n   51\n  ],\n  [\n   8,\n   51\n  ],\n  [\n   8,\n   52\n  ],\n  [\n   8,\n   52\n  ],\n  [\n   7,\n   25\n  ],\n  [\n   7,\n   25\n  ],\n  [\n   7,\n   25\n  ],\n  [\n   7,\n   25\n  ],\n  [\n   8,\n   55\n  ],\n  [\n   8,\n   55\n  ],\n  [\n   8,\n   56\n  ],\n  [\n   8,\n   56\n  ],\n  [\n   8,\n   57\n  ],\n  [\n   8,\n   57\n  ],\n  [\n   8,\n   58\n  ],\n  [\n   8,\n   58\n  ],\n  [\n   6,\n   192\n  ],\n  [\n   6,\n   192\n  ],\n  [\n   6,\n   192\n  ],\n  [\n   6,\n   192\n  ],\n  [\n   6,\n   192\n  ],\n  [\n   6,\n   192\n  ],\n  [\n   6,\n   192\n  ],\n  [\n   6,\n   192\n  ],\n  [\n   6,\n   1664\n  ],\n  [\n   6,\n   1664\n  ],\n  [\n   6,\n   1664\n  ],\n  [\n   6,\n   1664\n  ],\n  [\n   6,\n   1664\n  ],\n  [\n   6,\n   1664\n  ],\n  [\n   6,\n   1664\n  ],\n  [\n   6,\n   1664\n  ],\n  [\n   8,\n   448\n  ],\n  [\n   8,\n   448\n  ],\n  [\n   8,\n   512\n  ],\n  [\n   8,\n   512\n  ],\n  [\n   9,\n   704\n  ],\n  [\n   9,\n   768\n  ],\n  [\n   8,\n   640\n  ],\n  [\n   8,\n   640\n  ],\n  [\n   8,\n   576\n  ],\n  [\n   8,\n   576\n  ],\n  [\n   9,\n   832\n  ],\n  [\n   9,\n   896\n  ],\n  [\n   9,\n   960\n  ],\n  [\n   9,\n   1024\n  ],\n  [\n   9,\n   1088\n  ],\n  [\n   9,\n   1152\n  ],\n  [\n   9,\n   1216\n  ],\n  [\n   9,\n   1280\n  ],\n  [\n   9,\n   1344\n  ],\n  [\n   9,\n   1408\n  ],\n  [\n   7,\n   256\n  ],\n  [\n   7,\n   256\n  ],\n  [\n   7,\n   256\n  ],\n  [\n   7,\n   256\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   2\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   4,\n   3\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   128\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   8\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   5,\n   9\n  ],\n  [\n   6,\n   16\n  ],\n  [\n   6,\n   16\n  ],\n  [\n   6,\n   16\n  ],\n  [\n   6,\n   16\n  ],\n  [\n   6,\n   16\n  ],\n  [\n   6,\n   16\n  ],\n  [\n   6,\n   16\n  ],\n  [\n   6,\n   16\n  ],\n  [\n   6,\n   17\n  ],\n  [\n   6,\n   17\n  ],\n  [\n   6,\n   17\n  ],\n  [\n   6,\n   17\n  ],\n  [\n   6,\n   17\n  ],\n  [\n   6,\n   17\n  ],\n  [\n   6,\n   17\n  ],\n  [\n   6,\n   17\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   4\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   6,\n   14\n  ],\n  [\n   6,\n   14\n  ],\n  [\n   6,\n   14\n  ],\n  [\n   6,\n   14\n  ],\n  [\n   6,\n   14\n  ],\n  [\n   6,\n   14\n  ],\n  [\n   6,\n   14\n  ],\n  [\n   6,\n   14\n  ],\n  [\n   6,\n   15\n  ],\n  [\n   6,\n   15\n  ],\n  [\n   6,\n   15\n  ],\n  [\n   6,\n   15\n  ],\n  [\n   6,\n   15\n  ],\n  [\n   6,\n   15\n  ],\n  [\n   6,\n   15\n  ],\n  [\n   6,\n   15\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   5,\n   64\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ],\n  [\n   4,\n   7\n  ]\n ];\n var blackTable1 = [\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   12,\n   ccittEOL\n  ],\n  [\n   12,\n   ccittEOL\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   11,\n   1792\n  ],\n  [\n   11,\n   1792\n  ],\n  [\n   11,\n   1792\n  ],\n  [\n   11,\n   1792\n  ],\n  [\n   12,\n   1984\n  ],\n  [\n   12,\n   1984\n  ],\n  [\n   12,\n   2048\n  ],\n  [\n   12,\n   2048\n  ],\n  [\n   12,\n   2112\n  ],\n  [\n   12,\n   2112\n  ],\n  [\n   12,\n   2176\n  ],\n  [\n   12,\n   2176\n  ],\n  [\n   12,\n   2240\n  ],\n  [\n   12,\n   2240\n  ],\n  [\n   12,\n   2304\n  ],\n  [\n   12,\n   2304\n  ],\n  [\n   11,\n   1856\n  ],\n  [\n   11,\n   1856\n  ],\n  [\n   11,\n   1856\n  ],\n  [\n   11,\n   1856\n  ],\n  [\n   11,\n   1920\n  ],\n  [\n   11,\n   1920\n  ],\n  [\n   11,\n   1920\n  ],\n  [\n   11,\n   1920\n  ],\n  [\n   12,\n   2368\n  ],\n  [\n   12,\n   2368\n  ],\n  [\n   12,\n   2432\n  ],\n  [\n   12,\n   2432\n  ],\n  [\n   12,\n   2496\n  ],\n  [\n   12,\n   2496\n  ],\n  [\n   12,\n   2560\n  ],\n  [\n   12,\n   2560\n  ],\n  [\n   10,\n   18\n  ],\n  [\n   10,\n   18\n  ],\n  [\n   10,\n   18\n  ],\n  [\n   10,\n   18\n  ],\n  [\n   10,\n   18\n  ],\n  [\n   10,\n   18\n  ],\n  [\n   10,\n   18\n  ],\n  [\n   10,\n   18\n  ],\n  [\n   12,\n   52\n  ],\n  [\n   12,\n   52\n  ],\n  [\n   13,\n   640\n  ],\n  [\n   13,\n   704\n  ],\n  [\n   13,\n   768\n  ],\n  [\n   13,\n   832\n  ],\n  [\n   12,\n   55\n  ],\n  [\n   12,\n   55\n  ],\n  [\n   12,\n   56\n  ],\n  [\n   12,\n   56\n  ],\n  [\n   13,\n   1280\n  ],\n  [\n   13,\n   1344\n  ],\n  [\n   13,\n   1408\n  ],\n  [\n   13,\n   1472\n  ],\n  [\n   12,\n   59\n  ],\n  [\n   12,\n   59\n  ],\n  [\n   12,\n   60\n  ],\n  [\n   12,\n   60\n  ],\n  [\n   13,\n   1536\n  ],\n  [\n   13,\n   1600\n  ],\n  [\n   11,\n   24\n  ],\n  [\n   11,\n   24\n  ],\n  [\n   11,\n   24\n  ],\n  [\n   11,\n   24\n  ],\n  [\n   11,\n   25\n  ],\n  [\n   11,\n   25\n  ],\n  [\n   11,\n   25\n  ],\n  [\n   11,\n   25\n  ],\n  [\n   13,\n   1664\n  ],\n  [\n   13,\n   1728\n  ],\n  [\n   12,\n   320\n  ],\n  [\n   12,\n   320\n  ],\n  [\n   12,\n   384\n  ],\n  [\n   12,\n   384\n  ],\n  [\n   12,\n   448\n  ],\n  [\n   12,\n   448\n  ],\n  [\n   13,\n   512\n  ],\n  [\n   13,\n   576\n  ],\n  [\n   12,\n   53\n  ],\n  [\n   12,\n   53\n  ],\n  [\n   12,\n   54\n  ],\n  [\n   12,\n   54\n  ],\n  [\n   13,\n   896\n  ],\n  [\n   13,\n   960\n  ],\n  [\n   13,\n   1024\n  ],\n  [\n   13,\n   1088\n  ],\n  [\n   13,\n   1152\n  ],\n  [\n   13,\n   1216\n  ],\n  [\n   10,\n   64\n  ],\n  [\n   10,\n   64\n  ],\n  [\n   10,\n   64\n  ],\n  [\n   10,\n   64\n  ],\n  [\n   10,\n   64\n  ],\n  [\n   10,\n   64\n  ],\n  [\n   10,\n   64\n  ],\n  [\n   10,\n   64\n  ]\n ];\n var blackTable2 = [\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   8,\n   13\n  ],\n  [\n   11,\n   23\n  ],\n  [\n   11,\n   23\n  ],\n  [\n   12,\n   50\n  ],\n  [\n   12,\n   51\n  ],\n  [\n   12,\n   44\n  ],\n  [\n   12,\n   45\n  ],\n  [\n   12,\n   46\n  ],\n  [\n   12,\n   47\n  ],\n  [\n   12,\n   57\n  ],\n  [\n   12,\n   58\n  ],\n  [\n   12,\n   61\n  ],\n  [\n   12,\n   256\n  ],\n  [\n   10,\n   16\n  ],\n  [\n   10,\n   16\n  ],\n  [\n   10,\n   16\n  ],\n  [\n   10,\n   16\n  ],\n  [\n   10,\n   17\n  ],\n  [\n   10,\n   17\n  ],\n  [\n   10,\n   17\n  ],\n  [\n   10,\n   17\n  ],\n  [\n   12,\n   48\n  ],\n  [\n   12,\n   49\n  ],\n  [\n   12,\n   62\n  ],\n  [\n   12,\n   63\n  ],\n  [\n   12,\n   30\n  ],\n  [\n   12,\n   31\n  ],\n  [\n   12,\n   32\n  ],\n  [\n   12,\n   33\n  ],\n  [\n   12,\n   40\n  ],\n  [\n   12,\n   41\n  ],\n  [\n   11,\n   22\n  ],\n  [\n   11,\n   22\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   8,\n   14\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   10\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   7,\n   11\n  ],\n  [\n   9,\n   15\n  ],\n  [\n   9,\n   15\n  ],\n  [\n   9,\n   15\n  ],\n  [\n   9,\n   15\n  ],\n  [\n   9,\n   15\n  ],\n  [\n   9,\n   15\n  ],\n  [\n   9,\n   15\n  ],\n  [\n   9,\n   15\n  ],\n  [\n   12,\n   128\n  ],\n  [\n   12,\n   192\n  ],\n  [\n   12,\n   26\n  ],\n  [\n   12,\n   27\n  ],\n  [\n   12,\n   28\n  ],\n  [\n   12,\n   29\n  ],\n  [\n   11,\n   19\n  ],\n  [\n   11,\n   19\n  ],\n  [\n   11,\n   20\n  ],\n  [\n   11,\n   20\n  ],\n  [\n   12,\n   34\n  ],\n  [\n   12,\n   35\n  ],\n  [\n   12,\n   36\n  ],\n  [\n   12,\n   37\n  ],\n  [\n   12,\n   38\n  ],\n  [\n   12,\n   39\n  ],\n  [\n   11,\n   21\n  ],\n  [\n   11,\n   21\n  ],\n  [\n   12,\n   42\n  ],\n  [\n   12,\n   43\n  ],\n  [\n   10,\n   0\n  ],\n  [\n   10,\n   0\n  ],\n  [\n   10,\n   0\n  ],\n  [\n   10,\n   0\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ],\n  [\n   7,\n   12\n  ]\n ];\n var blackTable3 = [\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   -1,\n   -1\n  ],\n  [\n   6,\n   9\n  ],\n  [\n   6,\n   8\n  ],\n  [\n   5,\n   7\n  ],\n  [\n   5,\n   7\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   6\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   4,\n   5\n  ],\n  [\n   3,\n   1\n  ],\n  [\n   3,\n   1\n  ],\n  [\n   3,\n   1\n  ],\n  [\n   3,\n   1\n  ],\n  [\n   3,\n   1\n  ],\n  [\n   3,\n   1\n  ],\n  [\n   3,\n   1\n  ],\n  [\n   3,\n   1\n  ],\n  [\n   3,\n   4\n  ],\n  [\n   3,\n   4\n  ],\n  [\n   3,\n   4\n  ],\n  [\n   3,\n   4\n  ],\n  [\n   3,\n   4\n  ],\n  [\n   3,\n   4\n  ],\n  [\n   3,\n   4\n  ],\n  [\n   3,\n   4\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   3\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ],\n  [\n   2,\n   2\n  ]\n ];\n function CCITTFaxStream(str, maybeLength, params) {\n  this.str = str;\n  this.dict = str.dict;\n  params = params || Dict.empty;\n  this.encoding = params.get('K') || 0;\n  this.eoline = params.get('EndOfLine') || false;\n  this.byteAlign = params.get('EncodedByteAlign') || false;\n  this.columns = params.get('Columns') || 1728;\n  this.rows = params.get('Rows') || 0;\n  var eoblock = params.get('EndOfBlock');\n  if (eoblock === null || eoblock === undefined) {\n   eoblock = true;\n  }\n  this.eoblock = eoblock;\n  this.black = params.get('BlackIs1') || false;\n  this.codingLine = new Uint32Array(this.columns + 1);\n  this.refLine = new Uint32Array(this.columns + 2);\n  this.codingLine[0] = this.columns;\n  this.codingPos = 0;\n  this.row = 0;\n  this.nextLine2D = this.encoding < 0;\n  this.inputBits = 0;\n  this.inputBuf = 0;\n  this.outputBits = 0;\n  var code1;\n  while ((code1 = this.lookBits(12)) === 0) {\n   this.eatBits(1);\n  }\n  if (code1 === 1) {\n   this.eatBits(12);\n  }\n  if (this.encoding > 0) {\n   this.nextLine2D = !this.lookBits(1);\n   this.eatBits(1);\n  }\n  DecodeStream.call(this, maybeLength);\n }\n CCITTFaxStream.prototype = Object.create(DecodeStream.prototype);\n CCITTFaxStream.prototype.readBlock = function CCITTFaxStream_readBlock() {\n  while (!this.eof) {\n   var c = this.lookChar();\n   this.ensureBuffer(this.bufferLength + 1);\n   this.buffer[this.bufferLength++] = c;\n  }\n };\n CCITTFaxStream.prototype.addPixels = function ccittFaxStreamAddPixels(a1, blackPixels) {\n  var codingLine = this.codingLine;\n  var codingPos = this.codingPos;\n  if (a1 > codingLine[codingPos]) {\n   if (a1 > this.columns) {\n    info('row is wrong length');\n    this.err = true;\n    a1 = this.columns;\n   }\n   if (codingPos & 1 ^ blackPixels) {\n    ++codingPos;\n   }\n   codingLine[codingPos] = a1;\n  }\n  this.codingPos = codingPos;\n };\n CCITTFaxStream.prototype.addPixelsNeg = function ccittFaxStreamAddPixelsNeg(a1, blackPixels) {\n  var codingLine = this.codingLine;\n  var codingPos = this.codingPos;\n  if (a1 > codingLine[codingPos]) {\n   if (a1 > this.columns) {\n    info('row is wrong length');\n    this.err = true;\n    a1 = this.columns;\n   }\n   if (codingPos & 1 ^ blackPixels) {\n    ++codingPos;\n   }\n   codingLine[codingPos] = a1;\n  } else if (a1 < codingLine[codingPos]) {\n   if (a1 < 0) {\n    info('invalid code');\n    this.err = true;\n    a1 = 0;\n   }\n   while (codingPos > 0 && a1 < codingLine[codingPos - 1]) {\n    --codingPos;\n   }\n   codingLine[codingPos] = a1;\n  }\n  this.codingPos = codingPos;\n };\n CCITTFaxStream.prototype.lookChar = function CCITTFaxStream_lookChar() {\n  var refLine = this.refLine;\n  var codingLine = this.codingLine;\n  var columns = this.columns;\n  var refPos, blackPixels, bits, i;\n  if (this.outputBits === 0) {\n   if (this.eof) {\n    return null;\n   }\n   this.err = false;\n   var code1, code2, code3;\n   if (this.nextLine2D) {\n    for (i = 0; codingLine[i] < columns; ++i) {\n     refLine[i] = codingLine[i];\n    }\n    refLine[i++] = columns;\n    refLine[i] = columns;\n    codingLine[0] = 0;\n    this.codingPos = 0;\n    refPos = 0;\n    blackPixels = 0;\n    while (codingLine[this.codingPos] < columns) {\n     code1 = this.getTwoDimCode();\n     switch (code1) {\n     case twoDimPass:\n      this.addPixels(refLine[refPos + 1], blackPixels);\n      if (refLine[refPos + 1] < columns) {\n       refPos += 2;\n      }\n      break;\n     case twoDimHoriz:\n      code1 = code2 = 0;\n      if (blackPixels) {\n       do {\n        code1 += code3 = this.getBlackCode();\n       } while (code3 >= 64);\n       do {\n        code2 += code3 = this.getWhiteCode();\n       } while (code3 >= 64);\n      } else {\n       do {\n        code1 += code3 = this.getWhiteCode();\n       } while (code3 >= 64);\n       do {\n        code2 += code3 = this.getBlackCode();\n       } while (code3 >= 64);\n      }\n      this.addPixels(codingLine[this.codingPos] + code1, blackPixels);\n      if (codingLine[this.codingPos] < columns) {\n       this.addPixels(codingLine[this.codingPos] + code2, blackPixels ^ 1);\n      }\n      while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n       refPos += 2;\n      }\n      break;\n     case twoDimVertR3:\n      this.addPixels(refLine[refPos] + 3, blackPixels);\n      blackPixels ^= 1;\n      if (codingLine[this.codingPos] < columns) {\n       ++refPos;\n       while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n        refPos += 2;\n       }\n      }\n      break;\n     case twoDimVertR2:\n      this.addPixels(refLine[refPos] + 2, blackPixels);\n      blackPixels ^= 1;\n      if (codingLine[this.codingPos] < columns) {\n       ++refPos;\n       while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n        refPos += 2;\n       }\n      }\n      break;\n     case twoDimVertR1:\n      this.addPixels(refLine[refPos] + 1, blackPixels);\n      blackPixels ^= 1;\n      if (codingLine[this.codingPos] < columns) {\n       ++refPos;\n       while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n        refPos += 2;\n       }\n      }\n      break;\n     case twoDimVert0:\n      this.addPixels(refLine[refPos], blackPixels);\n      blackPixels ^= 1;\n      if (codingLine[this.codingPos] < columns) {\n       ++refPos;\n       while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n        refPos += 2;\n       }\n      }\n      break;\n     case twoDimVertL3:\n      this.addPixelsNeg(refLine[refPos] - 3, blackPixels);\n      blackPixels ^= 1;\n      if (codingLine[this.codingPos] < columns) {\n       if (refPos > 0) {\n        --refPos;\n       } else {\n        ++refPos;\n       }\n       while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n        refPos += 2;\n       }\n      }\n      break;\n     case twoDimVertL2:\n      this.addPixelsNeg(refLine[refPos] - 2, blackPixels);\n      blackPixels ^= 1;\n      if (codingLine[this.codingPos] < columns) {\n       if (refPos > 0) {\n        --refPos;\n       } else {\n        ++refPos;\n       }\n       while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n        refPos += 2;\n       }\n      }\n      break;\n     case twoDimVertL1:\n      this.addPixelsNeg(refLine[refPos] - 1, blackPixels);\n      blackPixels ^= 1;\n      if (codingLine[this.codingPos] < columns) {\n       if (refPos > 0) {\n        --refPos;\n       } else {\n        ++refPos;\n       }\n       while (refLine[refPos] <= codingLine[this.codingPos] && refLine[refPos] < columns) {\n        refPos += 2;\n       }\n      }\n      break;\n     case ccittEOF:\n      this.addPixels(columns, 0);\n      this.eof = true;\n      break;\n     default:\n      info('bad 2d code');\n      this.addPixels(columns, 0);\n      this.err = true;\n     }\n    }\n   } else {\n    codingLine[0] = 0;\n    this.codingPos = 0;\n    blackPixels = 0;\n    while (codingLine[this.codingPos] < columns) {\n     code1 = 0;\n     if (blackPixels) {\n      do {\n       code1 += code3 = this.getBlackCode();\n      } while (code3 >= 64);\n     } else {\n      do {\n       code1 += code3 = this.getWhiteCode();\n      } while (code3 >= 64);\n     }\n     this.addPixels(codingLine[this.codingPos] + code1, blackPixels);\n     blackPixels ^= 1;\n    }\n   }\n   var gotEOL = false;\n   if (this.byteAlign) {\n    this.inputBits &= ~7;\n   }\n   if (!this.eoblock && this.row === this.rows - 1) {\n    this.eof = true;\n   } else {\n    code1 = this.lookBits(12);\n    if (this.eoline) {\n     while (code1 !== ccittEOF && code1 !== 1) {\n      this.eatBits(1);\n      code1 = this.lookBits(12);\n     }\n    } else {\n     while (code1 === 0) {\n      this.eatBits(1);\n      code1 = this.lookBits(12);\n     }\n    }\n    if (code1 === 1) {\n     this.eatBits(12);\n     gotEOL = true;\n    } else if (code1 === ccittEOF) {\n     this.eof = true;\n    }\n   }\n   if (!this.eof && this.encoding > 0) {\n    this.nextLine2D = !this.lookBits(1);\n    this.eatBits(1);\n   }\n   if (this.eoblock && gotEOL && this.byteAlign) {\n    code1 = this.lookBits(12);\n    if (code1 === 1) {\n     this.eatBits(12);\n     if (this.encoding > 0) {\n      this.lookBits(1);\n      this.eatBits(1);\n     }\n     if (this.encoding >= 0) {\n      for (i = 0; i < 4; ++i) {\n       code1 = this.lookBits(12);\n       if (code1 !== 1) {\n        info('bad rtc code: ' + code1);\n       }\n       this.eatBits(12);\n       if (this.encoding > 0) {\n        this.lookBits(1);\n        this.eatBits(1);\n       }\n      }\n     }\n     this.eof = true;\n    }\n   } else if (this.err && this.eoline) {\n    while (true) {\n     code1 = this.lookBits(13);\n     if (code1 === ccittEOF) {\n      this.eof = true;\n      return null;\n     }\n     if (code1 >> 1 === 1) {\n      break;\n     }\n     this.eatBits(1);\n    }\n    this.eatBits(12);\n    if (this.encoding > 0) {\n     this.eatBits(1);\n     this.nextLine2D = !(code1 & 1);\n    }\n   }\n   if (codingLine[0] > 0) {\n    this.outputBits = codingLine[this.codingPos = 0];\n   } else {\n    this.outputBits = codingLine[this.codingPos = 1];\n   }\n   this.row++;\n  }\n  var c;\n  if (this.outputBits >= 8) {\n   c = this.codingPos & 1 ? 0 : 0xFF;\n   this.outputBits -= 8;\n   if (this.outputBits === 0 && codingLine[this.codingPos] < columns) {\n    this.codingPos++;\n    this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n   }\n  } else {\n   bits = 8;\n   c = 0;\n   do {\n    if (this.outputBits > bits) {\n     c <<= bits;\n     if (!(this.codingPos & 1)) {\n      c |= 0xFF >> 8 - bits;\n     }\n     this.outputBits -= bits;\n     bits = 0;\n    } else {\n     c <<= this.outputBits;\n     if (!(this.codingPos & 1)) {\n      c |= 0xFF >> 8 - this.outputBits;\n     }\n     bits -= this.outputBits;\n     this.outputBits = 0;\n     if (codingLine[this.codingPos] < columns) {\n      this.codingPos++;\n      this.outputBits = codingLine[this.codingPos] - codingLine[this.codingPos - 1];\n     } else if (bits > 0) {\n      c <<= bits;\n      bits = 0;\n     }\n    }\n   } while (bits);\n  }\n  if (this.black) {\n   c ^= 0xFF;\n  }\n  return c;\n };\n CCITTFaxStream.prototype.findTableCode = function ccittFaxStreamFindTableCode(start, end, table, limit) {\n  var limitValue = limit || 0;\n  for (var i = start; i <= end; ++i) {\n   var code = this.lookBits(i);\n   if (code === ccittEOF) {\n    return [\n     true,\n     1,\n     false\n    ];\n   }\n   if (i < end) {\n    code <<= end - i;\n   }\n   if (!limitValue || code >= limitValue) {\n    var p = table[code - limitValue];\n    if (p[0] === i) {\n     this.eatBits(i);\n     return [\n      true,\n      p[1],\n      true\n     ];\n    }\n   }\n  }\n  return [\n   false,\n   0,\n   false\n  ];\n };\n CCITTFaxStream.prototype.getTwoDimCode = function ccittFaxStreamGetTwoDimCode() {\n  var code = 0;\n  var p;\n  if (this.eoblock) {\n   code = this.lookBits(7);\n   p = twoDimTable[code];\n   if (p && p[0] > 0) {\n    this.eatBits(p[0]);\n    return p[1];\n   }\n  } else {\n   var result = this.findTableCode(1, 7, twoDimTable);\n   if (result[0] && result[2]) {\n    return result[1];\n   }\n  }\n  info('Bad two dim code');\n  return ccittEOF;\n };\n CCITTFaxStream.prototype.getWhiteCode = function ccittFaxStreamGetWhiteCode() {\n  var code = 0;\n  var p;\n  if (this.eoblock) {\n   code = this.lookBits(12);\n   if (code === ccittEOF) {\n    return 1;\n   }\n   if (code >> 5 === 0) {\n    p = whiteTable1[code];\n   } else {\n    p = whiteTable2[code >> 3];\n   }\n   if (p[0] > 0) {\n    this.eatBits(p[0]);\n    return p[1];\n   }\n  } else {\n   var result = this.findTableCode(1, 9, whiteTable2);\n   if (result[0]) {\n    return result[1];\n   }\n   result = this.findTableCode(11, 12, whiteTable1);\n   if (result[0]) {\n    return result[1];\n   }\n  }\n  info('bad white code');\n  this.eatBits(1);\n  return 1;\n };\n CCITTFaxStream.prototype.getBlackCode = function ccittFaxStreamGetBlackCode() {\n  var code, p;\n  if (this.eoblock) {\n   code = this.lookBits(13);\n   if (code === ccittEOF) {\n    return 1;\n   }\n   if (code >> 7 === 0) {\n    p = blackTable1[code];\n   } else if (code >> 9 === 0 && code >> 7 !== 0) {\n    p = blackTable2[(code >> 1) - 64];\n   } else {\n    p = blackTable3[code >> 7];\n   }\n   if (p[0] > 0) {\n    this.eatBits(p[0]);\n    return p[1];\n   }\n  } else {\n   var result = this.findTableCode(2, 6, blackTable3);\n   if (result[0]) {\n    return result[1];\n   }\n   result = this.findTableCode(7, 12, blackTable2, 64);\n   if (result[0]) {\n    return result[1];\n   }\n   result = this.findTableCode(10, 13, blackTable1);\n   if (result[0]) {\n    return result[1];\n   }\n  }\n  info('bad black code');\n  this.eatBits(1);\n  return 1;\n };\n CCITTFaxStream.prototype.lookBits = function CCITTFaxStream_lookBits(n) {\n  var c;\n  while (this.inputBits < n) {\n   if ((c = this.str.getByte()) === -1) {\n    if (this.inputBits === 0) {\n     return ccittEOF;\n    }\n    return this.inputBuf << n - this.inputBits & 0xFFFF >> 16 - n;\n   }\n   this.inputBuf = this.inputBuf << 8 | c;\n   this.inputBits += 8;\n  }\n  return this.inputBuf >> this.inputBits - n & 0xFFFF >> 16 - n;\n };\n CCITTFaxStream.prototype.eatBits = function CCITTFaxStream_eatBits(n) {\n  if ((this.inputBits -= n) < 0) {\n   this.inputBits = 0;\n  }\n };\n return CCITTFaxStream;\n}();\nvar LZWStream = function LZWStreamClosure() {\n function LZWStream(str, maybeLength, earlyChange) {\n  this.str = str;\n  this.dict = str.dict;\n  this.cachedData = 0;\n  this.bitsCached = 0;\n  var maxLzwDictionarySize = 4096;\n  var lzwState = {\n   earlyChange: earlyChange,\n   codeLength: 9,\n   nextCode: 258,\n   dictionaryValues: new Uint8Array(maxLzwDictionarySize),\n   dictionaryLengths: new Uint16Array(maxLzwDictionarySize),\n   dictionaryPrevCodes: new Uint16Array(maxLzwDictionarySize),\n   currentSequence: new Uint8Array(maxLzwDictionarySize),\n   currentSequenceLength: 0\n  };\n  for (var i = 0; i < 256; ++i) {\n   lzwState.dictionaryValues[i] = i;\n   lzwState.dictionaryLengths[i] = 1;\n  }\n  this.lzwState = lzwState;\n  DecodeStream.call(this, maybeLength);\n }\n LZWStream.prototype = Object.create(DecodeStream.prototype);\n LZWStream.prototype.readBits = function LZWStream_readBits(n) {\n  var bitsCached = this.bitsCached;\n  var cachedData = this.cachedData;\n  while (bitsCached < n) {\n   var c = this.str.getByte();\n   if (c === -1) {\n    this.eof = true;\n    return null;\n   }\n   cachedData = cachedData << 8 | c;\n   bitsCached += 8;\n  }\n  this.bitsCached = bitsCached -= n;\n  this.cachedData = cachedData;\n  this.lastCode = null;\n  return cachedData >>> bitsCached & (1 << n) - 1;\n };\n LZWStream.prototype.readBlock = function LZWStream_readBlock() {\n  var blockSize = 512;\n  var estimatedDecodedSize = blockSize * 2, decodedSizeDelta = blockSize;\n  var i, j, q;\n  var lzwState = this.lzwState;\n  if (!lzwState) {\n   return;\n  }\n  var earlyChange = lzwState.earlyChange;\n  var nextCode = lzwState.nextCode;\n  var dictionaryValues = lzwState.dictionaryValues;\n  var dictionaryLengths = lzwState.dictionaryLengths;\n  var dictionaryPrevCodes = lzwState.dictionaryPrevCodes;\n  var codeLength = lzwState.codeLength;\n  var prevCode = lzwState.prevCode;\n  var currentSequence = lzwState.currentSequence;\n  var currentSequenceLength = lzwState.currentSequenceLength;\n  var decodedLength = 0;\n  var currentBufferLength = this.bufferLength;\n  var buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n  for (i = 0; i < blockSize; i++) {\n   var code = this.readBits(codeLength);\n   var hasPrev = currentSequenceLength > 0;\n   if (code < 256) {\n    currentSequence[0] = code;\n    currentSequenceLength = 1;\n   } else if (code >= 258) {\n    if (code < nextCode) {\n     currentSequenceLength = dictionaryLengths[code];\n     for (j = currentSequenceLength - 1, q = code; j >= 0; j--) {\n      currentSequence[j] = dictionaryValues[q];\n      q = dictionaryPrevCodes[q];\n     }\n    } else {\n     currentSequence[currentSequenceLength++] = currentSequence[0];\n    }\n   } else if (code === 256) {\n    codeLength = 9;\n    nextCode = 258;\n    currentSequenceLength = 0;\n    continue;\n   } else {\n    this.eof = true;\n    delete this.lzwState;\n    break;\n   }\n   if (hasPrev) {\n    dictionaryPrevCodes[nextCode] = prevCode;\n    dictionaryLengths[nextCode] = dictionaryLengths[prevCode] + 1;\n    dictionaryValues[nextCode] = currentSequence[0];\n    nextCode++;\n    codeLength = nextCode + earlyChange & nextCode + earlyChange - 1 ? codeLength : Math.min(Math.log(nextCode + earlyChange) / 0.6931471805599453 + 1, 12) | 0;\n   }\n   prevCode = code;\n   decodedLength += currentSequenceLength;\n   if (estimatedDecodedSize < decodedLength) {\n    do {\n     estimatedDecodedSize += decodedSizeDelta;\n    } while (estimatedDecodedSize < decodedLength);\n    buffer = this.ensureBuffer(this.bufferLength + estimatedDecodedSize);\n   }\n   for (j = 0; j < currentSequenceLength; j++) {\n    buffer[currentBufferLength++] = currentSequence[j];\n   }\n  }\n  lzwState.nextCode = nextCode;\n  lzwState.codeLength = codeLength;\n  lzwState.prevCode = prevCode;\n  lzwState.currentSequenceLength = currentSequenceLength;\n  this.bufferLength = currentBufferLength;\n };\n return LZWStream;\n}();\nvar NullStream = function NullStreamClosure() {\n function NullStream() {\n  Stream.call(this, new Uint8Array(0));\n }\n NullStream.prototype = Stream.prototype;\n return NullStream;\n}();\nexports.Ascii85Stream = Ascii85Stream;\nexports.AsciiHexStream = AsciiHexStream;\nexports.CCITTFaxStream = CCITTFaxStream;\nexports.DecryptStream = DecryptStream;\nexports.DecodeStream = DecodeStream;\nexports.FlateStream = FlateStream;\nexports.Jbig2Stream = Jbig2Stream;\nexports.JpegStream = JpegStream;\nexports.JpxStream = JpxStream;\nexports.NullStream = NullStream;\nexports.PredictorStream = PredictorStream;\nexports.RunLengthStream = RunLengthStream;\nexports.Stream = Stream;\nexports.StreamsSequenceStream = StreamsSequenceStream;\nexports.StringStream = StringStream;\nexports.LZWStream = LZWStream;\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar coreFunction = __w_pdfjs_require__(6);\nvar error = sharedUtil.error;\nvar info = sharedUtil.info;\nvar isArray = sharedUtil.isArray;\nvar isString = sharedUtil.isString;\nvar shadow = sharedUtil.shadow;\nvar warn = sharedUtil.warn;\nvar isDict = corePrimitives.isDict;\nvar isName = corePrimitives.isName;\nvar isStream = corePrimitives.isStream;\nvar PDFFunction = coreFunction.PDFFunction;\nvar ColorSpace = function ColorSpaceClosure() {\n function resizeRgbImage(src, bpc, w1, h1, w2, h2, alpha01, dest) {\n  var COMPONENTS = 3;\n  alpha01 = alpha01 !== 1 ? 0 : alpha01;\n  var xRatio = w1 / w2;\n  var yRatio = h1 / h2;\n  var i, j, py, newIndex = 0, oldIndex;\n  var xScaled = new Uint16Array(w2);\n  var w1Scanline = w1 * COMPONENTS;\n  for (i = 0; i < w2; i++) {\n   xScaled[i] = Math.floor(i * xRatio) * COMPONENTS;\n  }\n  for (i = 0; i < h2; i++) {\n   py = Math.floor(i * yRatio) * w1Scanline;\n   for (j = 0; j < w2; j++) {\n    oldIndex = py + xScaled[j];\n    dest[newIndex++] = src[oldIndex++];\n    dest[newIndex++] = src[oldIndex++];\n    dest[newIndex++] = src[oldIndex++];\n    newIndex += alpha01;\n   }\n  }\n }\n function ColorSpace() {\n  error('should not call ColorSpace constructor');\n }\n ColorSpace.prototype = {\n  getRgb: function ColorSpace_getRgb(src, srcOffset) {\n   var rgb = new Uint8Array(3);\n   this.getRgbItem(src, srcOffset, rgb, 0);\n   return rgb;\n  },\n  getRgbItem: function ColorSpace_getRgbItem(src, srcOffset, dest, destOffset) {\n   error('Should not call ColorSpace.getRgbItem');\n  },\n  getRgbBuffer: function ColorSpace_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n   error('Should not call ColorSpace.getRgbBuffer');\n  },\n  getOutputLength: function ColorSpace_getOutputLength(inputLength, alpha01) {\n   error('Should not call ColorSpace.getOutputLength');\n  },\n  isPassthrough: function ColorSpace_isPassthrough(bits) {\n   return false;\n  },\n  fillRgb: function ColorSpace_fillRgb(dest, originalWidth, originalHeight, width, height, actualHeight, bpc, comps, alpha01) {\n   var count = originalWidth * originalHeight;\n   var rgbBuf = null;\n   var numComponentColors = 1 << bpc;\n   var needsResizing = originalHeight !== height || originalWidth !== width;\n   var i, ii;\n   if (this.isPassthrough(bpc)) {\n    rgbBuf = comps;\n   } else if (this.numComps === 1 && count > numComponentColors && this.name !== 'DeviceGray' && this.name !== 'DeviceRGB') {\n    var allColors = bpc <= 8 ? new Uint8Array(numComponentColors) : new Uint16Array(numComponentColors);\n    var key;\n    for (i = 0; i < numComponentColors; i++) {\n     allColors[i] = i;\n    }\n    var colorMap = new Uint8Array(numComponentColors * 3);\n    this.getRgbBuffer(allColors, 0, numComponentColors, colorMap, 0, bpc, 0);\n    var destPos, rgbPos;\n    if (!needsResizing) {\n     destPos = 0;\n     for (i = 0; i < count; ++i) {\n      key = comps[i] * 3;\n      dest[destPos++] = colorMap[key];\n      dest[destPos++] = colorMap[key + 1];\n      dest[destPos++] = colorMap[key + 2];\n      destPos += alpha01;\n     }\n    } else {\n     rgbBuf = new Uint8Array(count * 3);\n     rgbPos = 0;\n     for (i = 0; i < count; ++i) {\n      key = comps[i] * 3;\n      rgbBuf[rgbPos++] = colorMap[key];\n      rgbBuf[rgbPos++] = colorMap[key + 1];\n      rgbBuf[rgbPos++] = colorMap[key + 2];\n     }\n    }\n   } else {\n    if (!needsResizing) {\n     this.getRgbBuffer(comps, 0, width * actualHeight, dest, 0, bpc, alpha01);\n    } else {\n     rgbBuf = new Uint8Array(count * 3);\n     this.getRgbBuffer(comps, 0, count, rgbBuf, 0, bpc, 0);\n    }\n   }\n   if (rgbBuf) {\n    if (needsResizing) {\n     resizeRgbImage(rgbBuf, bpc, originalWidth, originalHeight, width, height, alpha01, dest);\n    } else {\n     rgbPos = 0;\n     destPos = 0;\n     for (i = 0, ii = width * actualHeight; i < ii; i++) {\n      dest[destPos++] = rgbBuf[rgbPos++];\n      dest[destPos++] = rgbBuf[rgbPos++];\n      dest[destPos++] = rgbBuf[rgbPos++];\n      destPos += alpha01;\n     }\n    }\n   }\n  },\n  usesZeroToOneRange: true\n };\n ColorSpace.parse = function ColorSpace_parse(cs, xref, res) {\n  var IR = ColorSpace.parseToIR(cs, xref, res);\n  if (IR instanceof AlternateCS) {\n   return IR;\n  }\n  return ColorSpace.fromIR(IR);\n };\n ColorSpace.fromIR = function ColorSpace_fromIR(IR) {\n  var name = isArray(IR) ? IR[0] : IR;\n  var whitePoint, blackPoint, gamma;\n  switch (name) {\n  case 'DeviceGrayCS':\n   return this.singletons.gray;\n  case 'DeviceRgbCS':\n   return this.singletons.rgb;\n  case 'DeviceCmykCS':\n   return this.singletons.cmyk;\n  case 'CalGrayCS':\n   whitePoint = IR[1];\n   blackPoint = IR[2];\n   gamma = IR[3];\n   return new CalGrayCS(whitePoint, blackPoint, gamma);\n  case 'CalRGBCS':\n   whitePoint = IR[1];\n   blackPoint = IR[2];\n   gamma = IR[3];\n   var matrix = IR[4];\n   return new CalRGBCS(whitePoint, blackPoint, gamma, matrix);\n  case 'PatternCS':\n   var basePatternCS = IR[1];\n   if (basePatternCS) {\n    basePatternCS = ColorSpace.fromIR(basePatternCS);\n   }\n   return new PatternCS(basePatternCS);\n  case 'IndexedCS':\n   var baseIndexedCS = IR[1];\n   var hiVal = IR[2];\n   var lookup = IR[3];\n   return new IndexedCS(ColorSpace.fromIR(baseIndexedCS), hiVal, lookup);\n  case 'AlternateCS':\n   var numComps = IR[1];\n   var alt = IR[2];\n   var tintFnIR = IR[3];\n   return new AlternateCS(numComps, ColorSpace.fromIR(alt), PDFFunction.fromIR(tintFnIR));\n  case 'LabCS':\n   whitePoint = IR[1];\n   blackPoint = IR[2];\n   var range = IR[3];\n   return new LabCS(whitePoint, blackPoint, range);\n  default:\n   error('Unknown name ' + name);\n  }\n  return null;\n };\n ColorSpace.parseToIR = function ColorSpace_parseToIR(cs, xref, res) {\n  if (isName(cs)) {\n   var colorSpaces = res.get('ColorSpace');\n   if (isDict(colorSpaces)) {\n    var refcs = colorSpaces.get(cs.name);\n    if (refcs) {\n     cs = refcs;\n    }\n   }\n  }\n  cs = xref.fetchIfRef(cs);\n  if (isName(cs)) {\n   switch (cs.name) {\n   case 'DeviceGray':\n   case 'G':\n    return 'DeviceGrayCS';\n   case 'DeviceRGB':\n   case 'RGB':\n    return 'DeviceRgbCS';\n   case 'DeviceCMYK':\n   case 'CMYK':\n    return 'DeviceCmykCS';\n   case 'Pattern':\n    return [\n     'PatternCS',\n     null\n    ];\n   default:\n    error('unrecognized colorspace ' + cs.name);\n   }\n  } else if (isArray(cs)) {\n   var mode = xref.fetchIfRef(cs[0]).name;\n   var numComps, params, alt, whitePoint, blackPoint, gamma;\n   switch (mode) {\n   case 'DeviceGray':\n   case 'G':\n    return 'DeviceGrayCS';\n   case 'DeviceRGB':\n   case 'RGB':\n    return 'DeviceRgbCS';\n   case 'DeviceCMYK':\n   case 'CMYK':\n    return 'DeviceCmykCS';\n   case 'CalGray':\n    params = xref.fetchIfRef(cs[1]);\n    whitePoint = params.getArray('WhitePoint');\n    blackPoint = params.getArray('BlackPoint');\n    gamma = params.get('Gamma');\n    return [\n     'CalGrayCS',\n     whitePoint,\n     blackPoint,\n     gamma\n    ];\n   case 'CalRGB':\n    params = xref.fetchIfRef(cs[1]);\n    whitePoint = params.getArray('WhitePoint');\n    blackPoint = params.getArray('BlackPoint');\n    gamma = params.getArray('Gamma');\n    var matrix = params.getArray('Matrix');\n    return [\n     'CalRGBCS',\n     whitePoint,\n     blackPoint,\n     gamma,\n     matrix\n    ];\n   case 'ICCBased':\n    var stream = xref.fetchIfRef(cs[1]);\n    var dict = stream.dict;\n    numComps = dict.get('N');\n    alt = dict.get('Alternate');\n    if (alt) {\n     var altIR = ColorSpace.parseToIR(alt, xref, res);\n     var altCS = ColorSpace.fromIR(altIR);\n     if (altCS.numComps === numComps) {\n      return altIR;\n     }\n     warn('ICCBased color space: Ignoring incorrect /Alternate entry.');\n    }\n    if (numComps === 1) {\n     return 'DeviceGrayCS';\n    } else if (numComps === 3) {\n     return 'DeviceRgbCS';\n    } else if (numComps === 4) {\n     return 'DeviceCmykCS';\n    }\n    break;\n   case 'Pattern':\n    var basePatternCS = cs[1] || null;\n    if (basePatternCS) {\n     basePatternCS = ColorSpace.parseToIR(basePatternCS, xref, res);\n    }\n    return [\n     'PatternCS',\n     basePatternCS\n    ];\n   case 'Indexed':\n   case 'I':\n    var baseIndexedCS = ColorSpace.parseToIR(cs[1], xref, res);\n    var hiVal = xref.fetchIfRef(cs[2]) + 1;\n    var lookup = xref.fetchIfRef(cs[3]);\n    if (isStream(lookup)) {\n     lookup = lookup.getBytes();\n    }\n    return [\n     'IndexedCS',\n     baseIndexedCS,\n     hiVal,\n     lookup\n    ];\n   case 'Separation':\n   case 'DeviceN':\n    var name = xref.fetchIfRef(cs[1]);\n    numComps = isArray(name) ? name.length : 1;\n    alt = ColorSpace.parseToIR(cs[2], xref, res);\n    var tintFnIR = PDFFunction.getIR(xref, xref.fetchIfRef(cs[3]));\n    return [\n     'AlternateCS',\n     numComps,\n     alt,\n     tintFnIR\n    ];\n   case 'Lab':\n    params = xref.fetchIfRef(cs[1]);\n    whitePoint = params.getArray('WhitePoint');\n    blackPoint = params.getArray('BlackPoint');\n    var range = params.getArray('Range');\n    return [\n     'LabCS',\n     whitePoint,\n     blackPoint,\n     range\n    ];\n   default:\n    error('unimplemented color space object \"' + mode + '\"');\n   }\n  } else {\n   error('unrecognized color space object: \"' + cs + '\"');\n  }\n  return null;\n };\n ColorSpace.isDefaultDecode = function ColorSpace_isDefaultDecode(decode, n) {\n  if (!isArray(decode)) {\n   return true;\n  }\n  if (n * 2 !== decode.length) {\n   warn('The decode map is not the correct length');\n   return true;\n  }\n  for (var i = 0, ii = decode.length; i < ii; i += 2) {\n   if (decode[i] !== 0 || decode[i + 1] !== 1) {\n    return false;\n   }\n  }\n  return true;\n };\n ColorSpace.singletons = {\n  get gray() {\n   return shadow(this, 'gray', new DeviceGrayCS());\n  },\n  get rgb() {\n   return shadow(this, 'rgb', new DeviceRgbCS());\n  },\n  get cmyk() {\n   return shadow(this, 'cmyk', new DeviceCmykCS());\n  }\n };\n return ColorSpace;\n}();\nvar AlternateCS = function AlternateCSClosure() {\n function AlternateCS(numComps, base, tintFn) {\n  this.name = 'Alternate';\n  this.numComps = numComps;\n  this.defaultColor = new Float32Array(numComps);\n  for (var i = 0; i < numComps; ++i) {\n   this.defaultColor[i] = 1;\n  }\n  this.base = base;\n  this.tintFn = tintFn;\n  this.tmpBuf = new Float32Array(base.numComps);\n }\n AlternateCS.prototype = {\n  getRgb: ColorSpace.prototype.getRgb,\n  getRgbItem: function AlternateCS_getRgbItem(src, srcOffset, dest, destOffset) {\n   var tmpBuf = this.tmpBuf;\n   this.tintFn(src, srcOffset, tmpBuf, 0);\n   this.base.getRgbItem(tmpBuf, 0, dest, destOffset);\n  },\n  getRgbBuffer: function AlternateCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n   var tintFn = this.tintFn;\n   var base = this.base;\n   var scale = 1 / ((1 << bits) - 1);\n   var baseNumComps = base.numComps;\n   var usesZeroToOneRange = base.usesZeroToOneRange;\n   var isPassthrough = (base.isPassthrough(8) || !usesZeroToOneRange) && alpha01 === 0;\n   var pos = isPassthrough ? destOffset : 0;\n   var baseBuf = isPassthrough ? dest : new Uint8Array(baseNumComps * count);\n   var numComps = this.numComps;\n   var scaled = new Float32Array(numComps);\n   var tinted = new Float32Array(baseNumComps);\n   var i, j;\n   for (i = 0; i < count; i++) {\n    for (j = 0; j < numComps; j++) {\n     scaled[j] = src[srcOffset++] * scale;\n    }\n    tintFn(scaled, 0, tinted, 0);\n    if (usesZeroToOneRange) {\n     for (j = 0; j < baseNumComps; j++) {\n      baseBuf[pos++] = tinted[j] * 255;\n     }\n    } else {\n     base.getRgbItem(tinted, 0, baseBuf, pos);\n     pos += baseNumComps;\n    }\n   }\n   if (!isPassthrough) {\n    base.getRgbBuffer(baseBuf, 0, count, dest, destOffset, 8, alpha01);\n   }\n  },\n  getOutputLength: function AlternateCS_getOutputLength(inputLength, alpha01) {\n   return this.base.getOutputLength(inputLength * this.base.numComps / this.numComps, alpha01);\n  },\n  isPassthrough: ColorSpace.prototype.isPassthrough,\n  fillRgb: ColorSpace.prototype.fillRgb,\n  isDefaultDecode: function AlternateCS_isDefaultDecode(decodeMap) {\n   return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n  },\n  usesZeroToOneRange: true\n };\n return AlternateCS;\n}();\nvar PatternCS = function PatternCSClosure() {\n function PatternCS(baseCS) {\n  this.name = 'Pattern';\n  this.base = baseCS;\n }\n PatternCS.prototype = {};\n return PatternCS;\n}();\nvar IndexedCS = function IndexedCSClosure() {\n function IndexedCS(base, highVal, lookup) {\n  this.name = 'Indexed';\n  this.numComps = 1;\n  this.defaultColor = new Uint8Array(this.numComps);\n  this.base = base;\n  this.highVal = highVal;\n  var baseNumComps = base.numComps;\n  var length = baseNumComps * highVal;\n  if (isStream(lookup)) {\n   this.lookup = new Uint8Array(length);\n   var bytes = lookup.getBytes(length);\n   this.lookup.set(bytes);\n  } else if (isString(lookup)) {\n   this.lookup = new Uint8Array(length);\n   for (var i = 0; i < length; ++i) {\n    this.lookup[i] = lookup.charCodeAt(i);\n   }\n  } else if (lookup instanceof Uint8Array || lookup instanceof Array) {\n   this.lookup = lookup;\n  } else {\n   error('Unrecognized lookup table: ' + lookup);\n  }\n }\n IndexedCS.prototype = {\n  getRgb: ColorSpace.prototype.getRgb,\n  getRgbItem: function IndexedCS_getRgbItem(src, srcOffset, dest, destOffset) {\n   var numComps = this.base.numComps;\n   var start = src[srcOffset] * numComps;\n   this.base.getRgbItem(this.lookup, start, dest, destOffset);\n  },\n  getRgbBuffer: function IndexedCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n   var base = this.base;\n   var numComps = base.numComps;\n   var outputDelta = base.getOutputLength(numComps, alpha01);\n   var lookup = this.lookup;\n   for (var i = 0; i < count; ++i) {\n    var lookupPos = src[srcOffset++] * numComps;\n    base.getRgbBuffer(lookup, lookupPos, 1, dest, destOffset, 8, alpha01);\n    destOffset += outputDelta;\n   }\n  },\n  getOutputLength: function IndexedCS_getOutputLength(inputLength, alpha01) {\n   return this.base.getOutputLength(inputLength * this.base.numComps, alpha01);\n  },\n  isPassthrough: ColorSpace.prototype.isPassthrough,\n  fillRgb: ColorSpace.prototype.fillRgb,\n  isDefaultDecode: function IndexedCS_isDefaultDecode(decodeMap) {\n   return true;\n  },\n  usesZeroToOneRange: true\n };\n return IndexedCS;\n}();\nvar DeviceGrayCS = function DeviceGrayCSClosure() {\n function DeviceGrayCS() {\n  this.name = 'DeviceGray';\n  this.numComps = 1;\n  this.defaultColor = new Float32Array(this.numComps);\n }\n DeviceGrayCS.prototype = {\n  getRgb: ColorSpace.prototype.getRgb,\n  getRgbItem: function DeviceGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n   var c = src[srcOffset] * 255 | 0;\n   c = c < 0 ? 0 : c > 255 ? 255 : c;\n   dest[destOffset] = dest[destOffset + 1] = dest[destOffset + 2] = c;\n  },\n  getRgbBuffer: function DeviceGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n   var scale = 255 / ((1 << bits) - 1);\n   var j = srcOffset, q = destOffset;\n   for (var i = 0; i < count; ++i) {\n    var c = scale * src[j++] | 0;\n    dest[q++] = c;\n    dest[q++] = c;\n    dest[q++] = c;\n    q += alpha01;\n   }\n  },\n  getOutputLength: function DeviceGrayCS_getOutputLength(inputLength, alpha01) {\n   return inputLength * (3 + alpha01);\n  },\n  isPassthrough: ColorSpace.prototype.isPassthrough,\n  fillRgb: ColorSpace.prototype.fillRgb,\n  isDefaultDecode: function DeviceGrayCS_isDefaultDecode(decodeMap) {\n   return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n  },\n  usesZeroToOneRange: true\n };\n return DeviceGrayCS;\n}();\nvar DeviceRgbCS = function DeviceRgbCSClosure() {\n function DeviceRgbCS() {\n  this.name = 'DeviceRGB';\n  this.numComps = 3;\n  this.defaultColor = new Float32Array(this.numComps);\n }\n DeviceRgbCS.prototype = {\n  getRgb: ColorSpace.prototype.getRgb,\n  getRgbItem: function DeviceRgbCS_getRgbItem(src, srcOffset, dest, destOffset) {\n   var r = src[srcOffset] * 255 | 0;\n   var g = src[srcOffset + 1] * 255 | 0;\n   var b = src[srcOffset + 2] * 255 | 0;\n   dest[destOffset] = r < 0 ? 0 : r > 255 ? 255 : r;\n   dest[destOffset + 1] = g < 0 ? 0 : g > 255 ? 255 : g;\n   dest[destOffset + 2] = b < 0 ? 0 : b > 255 ? 255 : b;\n  },\n  getRgbBuffer: function DeviceRgbCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n   if (bits === 8 && alpha01 === 0) {\n    dest.set(src.subarray(srcOffset, srcOffset + count * 3), destOffset);\n    return;\n   }\n   var scale = 255 / ((1 << bits) - 1);\n   var j = srcOffset, q = destOffset;\n   for (var i = 0; i < count; ++i) {\n    dest[q++] = scale * src[j++] | 0;\n    dest[q++] = scale * src[j++] | 0;\n    dest[q++] = scale * src[j++] | 0;\n    q += alpha01;\n   }\n  },\n  getOutputLength: function DeviceRgbCS_getOutputLength(inputLength, alpha01) {\n   return inputLength * (3 + alpha01) / 3 | 0;\n  },\n  isPassthrough: function DeviceRgbCS_isPassthrough(bits) {\n   return bits === 8;\n  },\n  fillRgb: ColorSpace.prototype.fillRgb,\n  isDefaultDecode: function DeviceRgbCS_isDefaultDecode(decodeMap) {\n   return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n  },\n  usesZeroToOneRange: true\n };\n return DeviceRgbCS;\n}();\nvar DeviceCmykCS = function DeviceCmykCSClosure() {\n function convertToRgb(src, srcOffset, srcScale, dest, destOffset) {\n  var c = src[srcOffset + 0] * srcScale;\n  var m = src[srcOffset + 1] * srcScale;\n  var y = src[srcOffset + 2] * srcScale;\n  var k = src[srcOffset + 3] * srcScale;\n  var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k + -285.2331026137004) + m * (1.7149763477362134 * m - 5.6096736904047315 * y + -17.873870861415444 * k - 5.497006427196366) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 17.5119270841813) + k * (-21.86122147463605 * k - 189.48180835922747) + 255 | 0;\n  var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k + -79.2970844816548) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 190.9453302588951) + y * (4.444339102852739 * y + 9.8632861493405 * k - 24.86741582555878) + k * (-20.737325471181034 * k - 187.80453709719578) + 255 | 0;\n  var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k + -14.183576799673286) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 112.23884253719248) + y * (0.03296041114873217 * y + 115.60384449646641 * k + -193.58209356861505) + k * (-22.33816807309886 * k - 180.12613974708367) + 255 | 0;\n  dest[destOffset] = r > 255 ? 255 : r < 0 ? 0 : r;\n  dest[destOffset + 1] = g > 255 ? 255 : g < 0 ? 0 : g;\n  dest[destOffset + 2] = b > 255 ? 255 : b < 0 ? 0 : b;\n }\n function DeviceCmykCS() {\n  this.name = 'DeviceCMYK';\n  this.numComps = 4;\n  this.defaultColor = new Float32Array(this.numComps);\n  this.defaultColor[3] = 1;\n }\n DeviceCmykCS.prototype = {\n  getRgb: ColorSpace.prototype.getRgb,\n  getRgbItem: function DeviceCmykCS_getRgbItem(src, srcOffset, dest, destOffset) {\n   convertToRgb(src, srcOffset, 1, dest, destOffset);\n  },\n  getRgbBuffer: function DeviceCmykCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n   var scale = 1 / ((1 << bits) - 1);\n   for (var i = 0; i < count; i++) {\n    convertToRgb(src, srcOffset, scale, dest, destOffset);\n    srcOffset += 4;\n    destOffset += 3 + alpha01;\n   }\n  },\n  getOutputLength: function DeviceCmykCS_getOutputLength(inputLength, alpha01) {\n   return inputLength / 4 * (3 + alpha01) | 0;\n  },\n  isPassthrough: ColorSpace.prototype.isPassthrough,\n  fillRgb: ColorSpace.prototype.fillRgb,\n  isDefaultDecode: function DeviceCmykCS_isDefaultDecode(decodeMap) {\n   return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n  },\n  usesZeroToOneRange: true\n };\n return DeviceCmykCS;\n}();\nvar CalGrayCS = function CalGrayCSClosure() {\n function CalGrayCS(whitePoint, blackPoint, gamma) {\n  this.name = 'CalGray';\n  this.numComps = 1;\n  this.defaultColor = new Float32Array(this.numComps);\n  if (!whitePoint) {\n   error('WhitePoint missing - required for color space CalGray');\n  }\n  blackPoint = blackPoint || [\n   0,\n   0,\n   0\n  ];\n  gamma = gamma || 1;\n  this.XW = whitePoint[0];\n  this.YW = whitePoint[1];\n  this.ZW = whitePoint[2];\n  this.XB = blackPoint[0];\n  this.YB = blackPoint[1];\n  this.ZB = blackPoint[2];\n  this.G = gamma;\n  if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n   error('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n  }\n  if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n   info('Invalid BlackPoint for ' + this.name + ', falling back to default');\n   this.XB = this.YB = this.ZB = 0;\n  }\n  if (this.XB !== 0 || this.YB !== 0 || this.ZB !== 0) {\n   warn(this.name + ', BlackPoint: XB: ' + this.XB + ', YB: ' + this.YB + ', ZB: ' + this.ZB + ', only default values are supported.');\n  }\n  if (this.G < 1) {\n   info('Invalid Gamma: ' + this.G + ' for ' + this.name + ', falling back to default');\n   this.G = 1;\n  }\n }\n function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n  var A = src[srcOffset] * scale;\n  var AG = Math.pow(A, cs.G);\n  var L = cs.YW * AG;\n  var val = Math.max(295.8 * Math.pow(L, 0.333333333333333333) - 40.8, 0) | 0;\n  dest[destOffset] = val;\n  dest[destOffset + 1] = val;\n  dest[destOffset + 2] = val;\n }\n CalGrayCS.prototype = {\n  getRgb: ColorSpace.prototype.getRgb,\n  getRgbItem: function CalGrayCS_getRgbItem(src, srcOffset, dest, destOffset) {\n   convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n  },\n  getRgbBuffer: function CalGrayCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n   var scale = 1 / ((1 << bits) - 1);\n   for (var i = 0; i < count; ++i) {\n    convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n    srcOffset += 1;\n    destOffset += 3 + alpha01;\n   }\n  },\n  getOutputLength: function CalGrayCS_getOutputLength(inputLength, alpha01) {\n   return inputLength * (3 + alpha01);\n  },\n  isPassthrough: ColorSpace.prototype.isPassthrough,\n  fillRgb: ColorSpace.prototype.fillRgb,\n  isDefaultDecode: function CalGrayCS_isDefaultDecode(decodeMap) {\n   return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n  },\n  usesZeroToOneRange: true\n };\n return CalGrayCS;\n}();\nvar CalRGBCS = function CalRGBCSClosure() {\n var BRADFORD_SCALE_MATRIX = new Float32Array([\n  0.8951,\n  0.2664,\n  -0.1614,\n  -0.7502,\n  1.7135,\n  0.0367,\n  0.0389,\n  -0.0685,\n  1.0296\n ]);\n var BRADFORD_SCALE_INVERSE_MATRIX = new Float32Array([\n  0.9869929,\n  -0.1470543,\n  0.1599627,\n  0.4323053,\n  0.5183603,\n  0.0492912,\n  -0.0085287,\n  0.0400428,\n  0.9684867\n ]);\n var SRGB_D65_XYZ_TO_RGB_MATRIX = new Float32Array([\n  3.2404542,\n  -1.5371385,\n  -0.4985314,\n  -0.9692660,\n  1.8760108,\n  0.0415560,\n  0.0556434,\n  -0.2040259,\n  1.0572252\n ]);\n var FLAT_WHITEPOINT_MATRIX = new Float32Array([\n  1,\n  1,\n  1\n ]);\n var tempNormalizeMatrix = new Float32Array(3);\n var tempConvertMatrix1 = new Float32Array(3);\n var tempConvertMatrix2 = new Float32Array(3);\n var DECODE_L_CONSTANT = Math.pow((8 + 16) / 116, 3) / 8.0;\n function CalRGBCS(whitePoint, blackPoint, gamma, matrix) {\n  this.name = 'CalRGB';\n  this.numComps = 3;\n  this.defaultColor = new Float32Array(this.numComps);\n  if (!whitePoint) {\n   error('WhitePoint missing - required for color space CalRGB');\n  }\n  blackPoint = blackPoint || new Float32Array(3);\n  gamma = gamma || new Float32Array([\n   1,\n   1,\n   1\n  ]);\n  matrix = matrix || new Float32Array([\n   1,\n   0,\n   0,\n   0,\n   1,\n   0,\n   0,\n   0,\n   1\n  ]);\n  var XW = whitePoint[0];\n  var YW = whitePoint[1];\n  var ZW = whitePoint[2];\n  this.whitePoint = whitePoint;\n  var XB = blackPoint[0];\n  var YB = blackPoint[1];\n  var ZB = blackPoint[2];\n  this.blackPoint = blackPoint;\n  this.GR = gamma[0];\n  this.GG = gamma[1];\n  this.GB = gamma[2];\n  this.MXA = matrix[0];\n  this.MYA = matrix[1];\n  this.MZA = matrix[2];\n  this.MXB = matrix[3];\n  this.MYB = matrix[4];\n  this.MZB = matrix[5];\n  this.MXC = matrix[6];\n  this.MYC = matrix[7];\n  this.MZC = matrix[8];\n  if (XW < 0 || ZW < 0 || YW !== 1) {\n   error('Invalid WhitePoint components for ' + this.name + ', no fallback available');\n  }\n  if (XB < 0 || YB < 0 || ZB < 0) {\n   info('Invalid BlackPoint for ' + this.name + ' [' + XB + ', ' + YB + ', ' + ZB + '], falling back to default');\n   this.blackPoint = new Float32Array(3);\n  }\n  if (this.GR < 0 || this.GG < 0 || this.GB < 0) {\n   info('Invalid Gamma [' + this.GR + ', ' + this.GG + ', ' + this.GB + '] for ' + this.name + ', falling back to default');\n   this.GR = this.GG = this.GB = 1;\n  }\n  if (this.MXA < 0 || this.MYA < 0 || this.MZA < 0 || this.MXB < 0 || this.MYB < 0 || this.MZB < 0 || this.MXC < 0 || this.MYC < 0 || this.MZC < 0) {\n   info('Invalid Matrix for ' + this.name + ' [' + this.MXA + ', ' + this.MYA + ', ' + this.MZA + this.MXB + ', ' + this.MYB + ', ' + this.MZB + this.MXC + ', ' + this.MYC + ', ' + this.MZC + '], falling back to default');\n   this.MXA = this.MYB = this.MZC = 1;\n   this.MXB = this.MYA = this.MZA = this.MXC = this.MYC = this.MZB = 0;\n  }\n }\n function matrixProduct(a, b, result) {\n  result[0] = a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\n  result[1] = a[3] * b[0] + a[4] * b[1] + a[5] * b[2];\n  result[2] = a[6] * b[0] + a[7] * b[1] + a[8] * b[2];\n }\n function convertToFlat(sourceWhitePoint, LMS, result) {\n  result[0] = LMS[0] * 1 / sourceWhitePoint[0];\n  result[1] = LMS[1] * 1 / sourceWhitePoint[1];\n  result[2] = LMS[2] * 1 / sourceWhitePoint[2];\n }\n function convertToD65(sourceWhitePoint, LMS, result) {\n  var D65X = 0.95047;\n  var D65Y = 1;\n  var D65Z = 1.08883;\n  result[0] = LMS[0] * D65X / sourceWhitePoint[0];\n  result[1] = LMS[1] * D65Y / sourceWhitePoint[1];\n  result[2] = LMS[2] * D65Z / sourceWhitePoint[2];\n }\n function sRGBTransferFunction(color) {\n  if (color <= 0.0031308) {\n   return adjustToRange(0, 1, 12.92 * color);\n  }\n  return adjustToRange(0, 1, (1 + 0.055) * Math.pow(color, 1 / 2.4) - 0.055);\n }\n function adjustToRange(min, max, value) {\n  return Math.max(min, Math.min(max, value));\n }\n function decodeL(L) {\n  if (L < 0) {\n   return -decodeL(-L);\n  }\n  if (L > 8.0) {\n   return Math.pow((L + 16) / 116, 3);\n  }\n  return L * DECODE_L_CONSTANT;\n }\n function compensateBlackPoint(sourceBlackPoint, XYZ_Flat, result) {\n  if (sourceBlackPoint[0] === 0 && sourceBlackPoint[1] === 0 && sourceBlackPoint[2] === 0) {\n   result[0] = XYZ_Flat[0];\n   result[1] = XYZ_Flat[1];\n   result[2] = XYZ_Flat[2];\n   return;\n  }\n  var zeroDecodeL = decodeL(0);\n  var X_DST = zeroDecodeL;\n  var X_SRC = decodeL(sourceBlackPoint[0]);\n  var Y_DST = zeroDecodeL;\n  var Y_SRC = decodeL(sourceBlackPoint[1]);\n  var Z_DST = zeroDecodeL;\n  var Z_SRC = decodeL(sourceBlackPoint[2]);\n  var X_Scale = (1 - X_DST) / (1 - X_SRC);\n  var X_Offset = 1 - X_Scale;\n  var Y_Scale = (1 - Y_DST) / (1 - Y_SRC);\n  var Y_Offset = 1 - Y_Scale;\n  var Z_Scale = (1 - Z_DST) / (1 - Z_SRC);\n  var Z_Offset = 1 - Z_Scale;\n  result[0] = XYZ_Flat[0] * X_Scale + X_Offset;\n  result[1] = XYZ_Flat[1] * Y_Scale + Y_Offset;\n  result[2] = XYZ_Flat[2] * Z_Scale + Z_Offset;\n }\n function normalizeWhitePointToFlat(sourceWhitePoint, XYZ_In, result) {\n  if (sourceWhitePoint[0] === 1 && sourceWhitePoint[2] === 1) {\n   result[0] = XYZ_In[0];\n   result[1] = XYZ_In[1];\n   result[2] = XYZ_In[2];\n   return;\n  }\n  var LMS = result;\n  matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n  var LMS_Flat = tempNormalizeMatrix;\n  convertToFlat(sourceWhitePoint, LMS, LMS_Flat);\n  matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_Flat, result);\n }\n function normalizeWhitePointToD65(sourceWhitePoint, XYZ_In, result) {\n  var LMS = result;\n  matrixProduct(BRADFORD_SCALE_MATRIX, XYZ_In, LMS);\n  var LMS_D65 = tempNormalizeMatrix;\n  convertToD65(sourceWhitePoint, LMS, LMS_D65);\n  matrixProduct(BRADFORD_SCALE_INVERSE_MATRIX, LMS_D65, result);\n }\n function convertToRgb(cs, src, srcOffset, dest, destOffset, scale) {\n  var A = adjustToRange(0, 1, src[srcOffset] * scale);\n  var B = adjustToRange(0, 1, src[srcOffset + 1] * scale);\n  var C = adjustToRange(0, 1, src[srcOffset + 2] * scale);\n  var AGR = Math.pow(A, cs.GR);\n  var BGG = Math.pow(B, cs.GG);\n  var CGB = Math.pow(C, cs.GB);\n  var X = cs.MXA * AGR + cs.MXB * BGG + cs.MXC * CGB;\n  var Y = cs.MYA * AGR + cs.MYB * BGG + cs.MYC * CGB;\n  var Z = cs.MZA * AGR + cs.MZB * BGG + cs.MZC * CGB;\n  var XYZ = tempConvertMatrix1;\n  XYZ[0] = X;\n  XYZ[1] = Y;\n  XYZ[2] = Z;\n  var XYZ_Flat = tempConvertMatrix2;\n  normalizeWhitePointToFlat(cs.whitePoint, XYZ, XYZ_Flat);\n  var XYZ_Black = tempConvertMatrix1;\n  compensateBlackPoint(cs.blackPoint, XYZ_Flat, XYZ_Black);\n  var XYZ_D65 = tempConvertMatrix2;\n  normalizeWhitePointToD65(FLAT_WHITEPOINT_MATRIX, XYZ_Black, XYZ_D65);\n  var SRGB = tempConvertMatrix1;\n  matrixProduct(SRGB_D65_XYZ_TO_RGB_MATRIX, XYZ_D65, SRGB);\n  var sR = sRGBTransferFunction(SRGB[0]);\n  var sG = sRGBTransferFunction(SRGB[1]);\n  var sB = sRGBTransferFunction(SRGB[2]);\n  dest[destOffset] = Math.round(sR * 255);\n  dest[destOffset + 1] = Math.round(sG * 255);\n  dest[destOffset + 2] = Math.round(sB * 255);\n }\n CalRGBCS.prototype = {\n  getRgb: function CalRGBCS_getRgb(src, srcOffset) {\n   var rgb = new Uint8Array(3);\n   this.getRgbItem(src, srcOffset, rgb, 0);\n   return rgb;\n  },\n  getRgbItem: function CalRGBCS_getRgbItem(src, srcOffset, dest, destOffset) {\n   convertToRgb(this, src, srcOffset, dest, destOffset, 1);\n  },\n  getRgbBuffer: function CalRGBCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n   var scale = 1 / ((1 << bits) - 1);\n   for (var i = 0; i < count; ++i) {\n    convertToRgb(this, src, srcOffset, dest, destOffset, scale);\n    srcOffset += 3;\n    destOffset += 3 + alpha01;\n   }\n  },\n  getOutputLength: function CalRGBCS_getOutputLength(inputLength, alpha01) {\n   return inputLength * (3 + alpha01) / 3 | 0;\n  },\n  isPassthrough: ColorSpace.prototype.isPassthrough,\n  fillRgb: ColorSpace.prototype.fillRgb,\n  isDefaultDecode: function CalRGBCS_isDefaultDecode(decodeMap) {\n   return ColorSpace.isDefaultDecode(decodeMap, this.numComps);\n  },\n  usesZeroToOneRange: true\n };\n return CalRGBCS;\n}();\nvar LabCS = function LabCSClosure() {\n function LabCS(whitePoint, blackPoint, range) {\n  this.name = 'Lab';\n  this.numComps = 3;\n  this.defaultColor = new Float32Array(this.numComps);\n  if (!whitePoint) {\n   error('WhitePoint missing - required for color space Lab');\n  }\n  blackPoint = blackPoint || [\n   0,\n   0,\n   0\n  ];\n  range = range || [\n   -100,\n   100,\n   -100,\n   100\n  ];\n  this.XW = whitePoint[0];\n  this.YW = whitePoint[1];\n  this.ZW = whitePoint[2];\n  this.amin = range[0];\n  this.amax = range[1];\n  this.bmin = range[2];\n  this.bmax = range[3];\n  this.XB = blackPoint[0];\n  this.YB = blackPoint[1];\n  this.ZB = blackPoint[2];\n  if (this.XW < 0 || this.ZW < 0 || this.YW !== 1) {\n   error('Invalid WhitePoint components, no fallback available');\n  }\n  if (this.XB < 0 || this.YB < 0 || this.ZB < 0) {\n   info('Invalid BlackPoint, falling back to default');\n   this.XB = this.YB = this.ZB = 0;\n  }\n  if (this.amin > this.amax || this.bmin > this.bmax) {\n   info('Invalid Range, falling back to defaults');\n   this.amin = -100;\n   this.amax = 100;\n   this.bmin = -100;\n   this.bmax = 100;\n  }\n }\n function fn_g(x) {\n  var result;\n  if (x >= 6 / 29) {\n   result = x * x * x;\n  } else {\n   result = 108 / 841 * (x - 4 / 29);\n  }\n  return result;\n }\n function decode(value, high1, low2, high2) {\n  return low2 + value * (high2 - low2) / high1;\n }\n function convertToRgb(cs, src, srcOffset, maxVal, dest, destOffset) {\n  var Ls = src[srcOffset];\n  var as = src[srcOffset + 1];\n  var bs = src[srcOffset + 2];\n  if (maxVal !== false) {\n   Ls = decode(Ls, maxVal, 0, 100);\n   as = decode(as, maxVal, cs.amin, cs.amax);\n   bs = decode(bs, maxVal, cs.bmin, cs.bmax);\n  }\n  as = as > cs.amax ? cs.amax : as < cs.amin ? cs.amin : as;\n  bs = bs > cs.bmax ? cs.bmax : bs < cs.bmin ? cs.bmin : bs;\n  var M = (Ls + 16) / 116;\n  var L = M + as / 500;\n  var N = M - bs / 200;\n  var X = cs.XW * fn_g(L);\n  var Y = cs.YW * fn_g(M);\n  var Z = cs.ZW * fn_g(N);\n  var r, g, b;\n  if (cs.ZW < 1) {\n   r = X * 3.1339 + Y * -1.6170 + Z * -0.4906;\n   g = X * -0.9785 + Y * 1.9160 + Z * 0.0333;\n   b = X * 0.0720 + Y * -0.2290 + Z * 1.4057;\n  } else {\n   r = X * 3.2406 + Y * -1.5372 + Z * -0.4986;\n   g = X * -0.9689 + Y * 1.8758 + Z * 0.0415;\n   b = X * 0.0557 + Y * -0.2040 + Z * 1.0570;\n  }\n  dest[destOffset] = r <= 0 ? 0 : r >= 1 ? 255 : Math.sqrt(r) * 255 | 0;\n  dest[destOffset + 1] = g <= 0 ? 0 : g >= 1 ? 255 : Math.sqrt(g) * 255 | 0;\n  dest[destOffset + 2] = b <= 0 ? 0 : b >= 1 ? 255 : Math.sqrt(b) * 255 | 0;\n }\n LabCS.prototype = {\n  getRgb: ColorSpace.prototype.getRgb,\n  getRgbItem: function LabCS_getRgbItem(src, srcOffset, dest, destOffset) {\n   convertToRgb(this, src, srcOffset, false, dest, destOffset);\n  },\n  getRgbBuffer: function LabCS_getRgbBuffer(src, srcOffset, count, dest, destOffset, bits, alpha01) {\n   var maxVal = (1 << bits) - 1;\n   for (var i = 0; i < count; i++) {\n    convertToRgb(this, src, srcOffset, maxVal, dest, destOffset);\n    srcOffset += 3;\n    destOffset += 3 + alpha01;\n   }\n  },\n  getOutputLength: function LabCS_getOutputLength(inputLength, alpha01) {\n   return inputLength * (3 + alpha01) / 3 | 0;\n  },\n  isPassthrough: ColorSpace.prototype.isPassthrough,\n  fillRgb: ColorSpace.prototype.fillRgb,\n  isDefaultDecode: function LabCS_isDefaultDecode(decodeMap) {\n   return true;\n  },\n  usesZeroToOneRange: false\n };\n return LabCS;\n}();\nexports.ColorSpace = ColorSpace;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar ExpertEncoding = [\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n 'space',\n 'exclamsmall',\n 'Hungarumlautsmall',\n '',\n 'dollaroldstyle',\n 'dollarsuperior',\n 'ampersandsmall',\n 'Acutesmall',\n 'parenleftsuperior',\n 'parenrightsuperior',\n 'twodotenleader',\n 'onedotenleader',\n 'comma',\n 'hyphen',\n 'period',\n 'fraction',\n 'zerooldstyle',\n 'oneoldstyle',\n 'twooldstyle',\n 'threeoldstyle',\n 'fouroldstyle',\n 'fiveoldstyle',\n 'sixoldstyle',\n 'sevenoldstyle',\n 'eightoldstyle',\n 'nineoldstyle',\n 'colon',\n 'semicolon',\n 'commasuperior',\n 'threequartersemdash',\n 'periodsuperior',\n 'questionsmall',\n '',\n 'asuperior',\n 'bsuperior',\n 'centsuperior',\n 'dsuperior',\n 'esuperior',\n '',\n '',\n 'isuperior',\n '',\n '',\n 'lsuperior',\n 'msuperior',\n 'nsuperior',\n 'osuperior',\n '',\n '',\n 'rsuperior',\n 'ssuperior',\n 'tsuperior',\n '',\n 'ff',\n 'fi',\n 'fl',\n 'ffi',\n 'ffl',\n 'parenleftinferior',\n '',\n 'parenrightinferior',\n 'Circumflexsmall',\n 'hyphensuperior',\n 'Gravesmall',\n 'Asmall',\n 'Bsmall',\n 'Csmall',\n 'Dsmall',\n 'Esmall',\n 'Fsmall',\n 'Gsmall',\n 'Hsmall',\n 'Ismall',\n 'Jsmall',\n 'Ksmall',\n 'Lsmall',\n 'Msmall',\n 'Nsmall',\n 'Osmall',\n 'Psmall',\n 'Qsmall',\n 'Rsmall',\n 'Ssmall',\n 'Tsmall',\n 'Usmall',\n 'Vsmall',\n 'Wsmall',\n 'Xsmall',\n 'Ysmall',\n 'Zsmall',\n 'colonmonetary',\n 'onefitted',\n 'rupiah',\n 'Tildesmall',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n 'exclamdownsmall',\n 'centoldstyle',\n 'Lslashsmall',\n '',\n '',\n 'Scaronsmall',\n 'Zcaronsmall',\n 'Dieresissmall',\n 'Brevesmall',\n 'Caronsmall',\n '',\n 'Dotaccentsmall',\n '',\n '',\n 'Macronsmall',\n '',\n '',\n 'figuredash',\n 'hypheninferior',\n '',\n '',\n 'Ogoneksmall',\n 'Ringsmall',\n 'Cedillasmall',\n '',\n '',\n '',\n 'onequarter',\n 'onehalf',\n 'threequarters',\n 'questiondownsmall',\n 'oneeighth',\n 'threeeighths',\n 'fiveeighths',\n 'seveneighths',\n 'onethird',\n 'twothirds',\n '',\n '',\n 'zerosuperior',\n 'onesuperior',\n 'twosuperior',\n 'threesuperior',\n 'foursuperior',\n 'fivesuperior',\n 'sixsuperior',\n 'sevensuperior',\n 'eightsuperior',\n 'ninesuperior',\n 'zeroinferior',\n 'oneinferior',\n 'twoinferior',\n 'threeinferior',\n 'fourinferior',\n 'fiveinferior',\n 'sixinferior',\n 'seveninferior',\n 'eightinferior',\n 'nineinferior',\n 'centinferior',\n 'dollarinferior',\n 'periodinferior',\n 'commainferior',\n 'Agravesmall',\n 'Aacutesmall',\n 'Acircumflexsmall',\n 'Atildesmall',\n 'Adieresissmall',\n 'Aringsmall',\n 'AEsmall',\n 'Ccedillasmall',\n 'Egravesmall',\n 'Eacutesmall',\n 'Ecircumflexsmall',\n 'Edieresissmall',\n 'Igravesmall',\n 'Iacutesmall',\n 'Icircumflexsmall',\n 'Idieresissmall',\n 'Ethsmall',\n 'Ntildesmall',\n 'Ogravesmall',\n 'Oacutesmall',\n 'Ocircumflexsmall',\n 'Otildesmall',\n 'Odieresissmall',\n 'OEsmall',\n 'Oslashsmall',\n 'Ugravesmall',\n 'Uacutesmall',\n 'Ucircumflexsmall',\n 'Udieresissmall',\n 'Yacutesmall',\n 'Thornsmall',\n 'Ydieresissmall'\n];\nvar MacExpertEncoding = [\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n 'space',\n 'exclamsmall',\n 'Hungarumlautsmall',\n 'centoldstyle',\n 'dollaroldstyle',\n 'dollarsuperior',\n 'ampersandsmall',\n 'Acutesmall',\n 'parenleftsuperior',\n 'parenrightsuperior',\n 'twodotenleader',\n 'onedotenleader',\n 'comma',\n 'hyphen',\n 'period',\n 'fraction',\n 'zerooldstyle',\n 'oneoldstyle',\n 'twooldstyle',\n 'threeoldstyle',\n 'fouroldstyle',\n 'fiveoldstyle',\n 'sixoldstyle',\n 'sevenoldstyle',\n 'eightoldstyle',\n 'nineoldstyle',\n 'colon',\n 'semicolon',\n '',\n 'threequartersemdash',\n '',\n 'questionsmall',\n '',\n '',\n '',\n '',\n 'Ethsmall',\n '',\n '',\n 'onequarter',\n 'onehalf',\n 'threequarters',\n 'oneeighth',\n 'threeeighths',\n 'fiveeighths',\n 'seveneighths',\n 'onethird',\n 'twothirds',\n '',\n '',\n '',\n '',\n '',\n '',\n 'ff',\n 'fi',\n 'fl',\n 'ffi',\n 'ffl',\n 'parenleftinferior',\n '',\n 'parenrightinferior',\n 'Circumflexsmall',\n 'hypheninferior',\n 'Gravesmall',\n 'Asmall',\n 'Bsmall',\n 'Csmall',\n 'Dsmall',\n 'Esmall',\n 'Fsmall',\n 'Gsmall',\n 'Hsmall',\n 'Ismall',\n 'Jsmall',\n 'Ksmall',\n 'Lsmall',\n 'Msmall',\n 'Nsmall',\n 'Osmall',\n 'Psmall',\n 'Qsmall',\n 'Rsmall',\n 'Ssmall',\n 'Tsmall',\n 'Usmall',\n 'Vsmall',\n 'Wsmall',\n 'Xsmall',\n 'Ysmall',\n 'Zsmall',\n 'colonmonetary',\n 'onefitted',\n 'rupiah',\n 'Tildesmall',\n '',\n '',\n 'asuperior',\n 'centsuperior',\n '',\n '',\n '',\n '',\n 'Aacutesmall',\n 'Agravesmall',\n 'Acircumflexsmall',\n 'Adieresissmall',\n 'Atildesmall',\n 'Aringsmall',\n 'Ccedillasmall',\n 'Eacutesmall',\n 'Egravesmall',\n 'Ecircumflexsmall',\n 'Edieresissmall',\n 'Iacutesmall',\n 'Igravesmall',\n 'Icircumflexsmall',\n 'Idieresissmall',\n 'Ntildesmall',\n 'Oacutesmall',\n 'Ogravesmall',\n 'Ocircumflexsmall',\n 'Odieresissmall',\n 'Otildesmall',\n 'Uacutesmall',\n 'Ugravesmall',\n 'Ucircumflexsmall',\n 'Udieresissmall',\n '',\n 'eightsuperior',\n 'fourinferior',\n 'threeinferior',\n 'sixinferior',\n 'eightinferior',\n 'seveninferior',\n 'Scaronsmall',\n '',\n 'centinferior',\n 'twoinferior',\n '',\n 'Dieresissmall',\n '',\n 'Caronsmall',\n 'osuperior',\n 'fiveinferior',\n '',\n 'commainferior',\n 'periodinferior',\n 'Yacutesmall',\n '',\n 'dollarinferior',\n '',\n 'Thornsmall',\n '',\n 'nineinferior',\n 'zeroinferior',\n 'Zcaronsmall',\n 'AEsmall',\n 'Oslashsmall',\n 'questiondownsmall',\n 'oneinferior',\n 'Lslashsmall',\n '',\n '',\n '',\n '',\n '',\n '',\n 'Cedillasmall',\n '',\n '',\n '',\n '',\n '',\n 'OEsmall',\n 'figuredash',\n 'hyphensuperior',\n '',\n '',\n '',\n '',\n 'exclamdownsmall',\n '',\n 'Ydieresissmall',\n '',\n 'onesuperior',\n 'twosuperior',\n 'threesuperior',\n 'foursuperior',\n 'fivesuperior',\n 'sixsuperior',\n 'sevensuperior',\n 'ninesuperior',\n 'zerosuperior',\n '',\n 'esuperior',\n 'rsuperior',\n 'tsuperior',\n '',\n '',\n 'isuperior',\n 'ssuperior',\n 'dsuperior',\n '',\n '',\n '',\n '',\n '',\n 'lsuperior',\n 'Ogoneksmall',\n 'Brevesmall',\n 'Macronsmall',\n 'bsuperior',\n 'nsuperior',\n 'msuperior',\n 'commasuperior',\n 'periodsuperior',\n 'Dotaccentsmall',\n 'Ringsmall'\n];\nvar MacRomanEncoding = [\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n 'space',\n 'exclam',\n 'quotedbl',\n 'numbersign',\n 'dollar',\n 'percent',\n 'ampersand',\n 'quotesingle',\n 'parenleft',\n 'parenright',\n 'asterisk',\n 'plus',\n 'comma',\n 'hyphen',\n 'period',\n 'slash',\n 'zero',\n 'one',\n 'two',\n 'three',\n 'four',\n 'five',\n 'six',\n 'seven',\n 'eight',\n 'nine',\n 'colon',\n 'semicolon',\n 'less',\n 'equal',\n 'greater',\n 'question',\n 'at',\n 'A',\n 'B',\n 'C',\n 'D',\n 'E',\n 'F',\n 'G',\n 'H',\n 'I',\n 'J',\n 'K',\n 'L',\n 'M',\n 'N',\n 'O',\n 'P',\n 'Q',\n 'R',\n 'S',\n 'T',\n 'U',\n 'V',\n 'W',\n 'X',\n 'Y',\n 'Z',\n 'bracketleft',\n 'backslash',\n 'bracketright',\n 'asciicircum',\n 'underscore',\n 'grave',\n 'a',\n 'b',\n 'c',\n 'd',\n 'e',\n 'f',\n 'g',\n 'h',\n 'i',\n 'j',\n 'k',\n 'l',\n 'm',\n 'n',\n 'o',\n 'p',\n 'q',\n 'r',\n 's',\n 't',\n 'u',\n 'v',\n 'w',\n 'x',\n 'y',\n 'z',\n 'braceleft',\n 'bar',\n 'braceright',\n 'asciitilde',\n '',\n 'Adieresis',\n 'Aring',\n 'Ccedilla',\n 'Eacute',\n 'Ntilde',\n 'Odieresis',\n 'Udieresis',\n 'aacute',\n 'agrave',\n 'acircumflex',\n 'adieresis',\n 'atilde',\n 'aring',\n 'ccedilla',\n 'eacute',\n 'egrave',\n 'ecircumflex',\n 'edieresis',\n 'iacute',\n 'igrave',\n 'icircumflex',\n 'idieresis',\n 'ntilde',\n 'oacute',\n 'ograve',\n 'ocircumflex',\n 'odieresis',\n 'otilde',\n 'uacute',\n 'ugrave',\n 'ucircumflex',\n 'udieresis',\n 'dagger',\n 'degree',\n 'cent',\n 'sterling',\n 'section',\n 'bullet',\n 'paragraph',\n 'germandbls',\n 'registered',\n 'copyright',\n 'trademark',\n 'acute',\n 'dieresis',\n 'notequal',\n 'AE',\n 'Oslash',\n 'infinity',\n 'plusminus',\n 'lessequal',\n 'greaterequal',\n 'yen',\n 'mu',\n 'partialdiff',\n 'summation',\n 'product',\n 'pi',\n 'integral',\n 'ordfeminine',\n 'ordmasculine',\n 'Omega',\n 'ae',\n 'oslash',\n 'questiondown',\n 'exclamdown',\n 'logicalnot',\n 'radical',\n 'florin',\n 'approxequal',\n 'Delta',\n 'guillemotleft',\n 'guillemotright',\n 'ellipsis',\n 'space',\n 'Agrave',\n 'Atilde',\n 'Otilde',\n 'OE',\n 'oe',\n 'endash',\n 'emdash',\n 'quotedblleft',\n 'quotedblright',\n 'quoteleft',\n 'quoteright',\n 'divide',\n 'lozenge',\n 'ydieresis',\n 'Ydieresis',\n 'fraction',\n 'currency',\n 'guilsinglleft',\n 'guilsinglright',\n 'fi',\n 'fl',\n 'daggerdbl',\n 'periodcentered',\n 'quotesinglbase',\n 'quotedblbase',\n 'perthousand',\n 'Acircumflex',\n 'Ecircumflex',\n 'Aacute',\n 'Edieresis',\n 'Egrave',\n 'Iacute',\n 'Icircumflex',\n 'Idieresis',\n 'Igrave',\n 'Oacute',\n 'Ocircumflex',\n 'apple',\n 'Ograve',\n 'Uacute',\n 'Ucircumflex',\n 'Ugrave',\n 'dotlessi',\n 'circumflex',\n 'tilde',\n 'macron',\n 'breve',\n 'dotaccent',\n 'ring',\n 'cedilla',\n 'hungarumlaut',\n 'ogonek',\n 'caron'\n];\nvar StandardEncoding = [\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n 'space',\n 'exclam',\n 'quotedbl',\n 'numbersign',\n 'dollar',\n 'percent',\n 'ampersand',\n 'quoteright',\n 'parenleft',\n 'parenright',\n 'asterisk',\n 'plus',\n 'comma',\n 'hyphen',\n 'period',\n 'slash',\n 'zero',\n 'one',\n 'two',\n 'three',\n 'four',\n 'five',\n 'six',\n 'seven',\n 'eight',\n 'nine',\n 'colon',\n 'semicolon',\n 'less',\n 'equal',\n 'greater',\n 'question',\n 'at',\n 'A',\n 'B',\n 'C',\n 'D',\n 'E',\n 'F',\n 'G',\n 'H',\n 'I',\n 'J',\n 'K',\n 'L',\n 'M',\n 'N',\n 'O',\n 'P',\n 'Q',\n 'R',\n 'S',\n 'T',\n 'U',\n 'V',\n 'W',\n 'X',\n 'Y',\n 'Z',\n 'bracketleft',\n 'backslash',\n 'bracketright',\n 'asciicircum',\n 'underscore',\n 'quoteleft',\n 'a',\n 'b',\n 'c',\n 'd',\n 'e',\n 'f',\n 'g',\n 'h',\n 'i',\n 'j',\n 'k',\n 'l',\n 'm',\n 'n',\n 'o',\n 'p',\n 'q',\n 'r',\n 's',\n 't',\n 'u',\n 'v',\n 'w',\n 'x',\n 'y',\n 'z',\n 'braceleft',\n 'bar',\n 'braceright',\n 'asciitilde',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n 'exclamdown',\n 'cent',\n 'sterling',\n 'fraction',\n 'yen',\n 'florin',\n 'section',\n 'currency',\n 'quotesingle',\n 'quotedblleft',\n 'guillemotleft',\n 'guilsinglleft',\n 'guilsinglright',\n 'fi',\n 'fl',\n '',\n 'endash',\n 'dagger',\n 'daggerdbl',\n 'periodcentered',\n '',\n 'paragraph',\n 'bullet',\n 'quotesinglbase',\n 'quotedblbase',\n 'quotedblright',\n 'guillemotright',\n 'ellipsis',\n 'perthousand',\n '',\n 'questiondown',\n '',\n 'grave',\n 'acute',\n 'circumflex',\n 'tilde',\n 'macron',\n 'breve',\n 'dotaccent',\n 'dieresis',\n '',\n 'ring',\n 'cedilla',\n '',\n 'hungarumlaut',\n 'ogonek',\n 'caron',\n 'emdash',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n 'AE',\n '',\n 'ordfeminine',\n '',\n '',\n '',\n '',\n 'Lslash',\n 'Oslash',\n 'OE',\n 'ordmasculine',\n '',\n '',\n '',\n '',\n '',\n 'ae',\n '',\n '',\n '',\n 'dotlessi',\n '',\n '',\n 'lslash',\n 'oslash',\n 'oe',\n 'germandbls'\n];\nvar WinAnsiEncoding = [\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n 'space',\n 'exclam',\n 'quotedbl',\n 'numbersign',\n 'dollar',\n 'percent',\n 'ampersand',\n 'quotesingle',\n 'parenleft',\n 'parenright',\n 'asterisk',\n 'plus',\n 'comma',\n 'hyphen',\n 'period',\n 'slash',\n 'zero',\n 'one',\n 'two',\n 'three',\n 'four',\n 'five',\n 'six',\n 'seven',\n 'eight',\n 'nine',\n 'colon',\n 'semicolon',\n 'less',\n 'equal',\n 'greater',\n 'question',\n 'at',\n 'A',\n 'B',\n 'C',\n 'D',\n 'E',\n 'F',\n 'G',\n 'H',\n 'I',\n 'J',\n 'K',\n 'L',\n 'M',\n 'N',\n 'O',\n 'P',\n 'Q',\n 'R',\n 'S',\n 'T',\n 'U',\n 'V',\n 'W',\n 'X',\n 'Y',\n 'Z',\n 'bracketleft',\n 'backslash',\n 'bracketright',\n 'asciicircum',\n 'underscore',\n 'grave',\n 'a',\n 'b',\n 'c',\n 'd',\n 'e',\n 'f',\n 'g',\n 'h',\n 'i',\n 'j',\n 'k',\n 'l',\n 'm',\n 'n',\n 'o',\n 'p',\n 'q',\n 'r',\n 's',\n 't',\n 'u',\n 'v',\n 'w',\n 'x',\n 'y',\n 'z',\n 'braceleft',\n 'bar',\n 'braceright',\n 'asciitilde',\n 'bullet',\n 'Euro',\n 'bullet',\n 'quotesinglbase',\n 'florin',\n 'quotedblbase',\n 'ellipsis',\n 'dagger',\n 'daggerdbl',\n 'circumflex',\n 'perthousand',\n 'Scaron',\n 'guilsinglleft',\n 'OE',\n 'bullet',\n 'Zcaron',\n 'bullet',\n 'bullet',\n 'quoteleft',\n 'quoteright',\n 'quotedblleft',\n 'quotedblright',\n 'bullet',\n 'endash',\n 'emdash',\n 'tilde',\n 'trademark',\n 'scaron',\n 'guilsinglright',\n 'oe',\n 'bullet',\n 'zcaron',\n 'Ydieresis',\n 'space',\n 'exclamdown',\n 'cent',\n 'sterling',\n 'currency',\n 'yen',\n 'brokenbar',\n 'section',\n 'dieresis',\n 'copyright',\n 'ordfeminine',\n 'guillemotleft',\n 'logicalnot',\n 'hyphen',\n 'registered',\n 'macron',\n 'degree',\n 'plusminus',\n 'twosuperior',\n 'threesuperior',\n 'acute',\n 'mu',\n 'paragraph',\n 'periodcentered',\n 'cedilla',\n 'onesuperior',\n 'ordmasculine',\n 'guillemotright',\n 'onequarter',\n 'onehalf',\n 'threequarters',\n 'questiondown',\n 'Agrave',\n 'Aacute',\n 'Acircumflex',\n 'Atilde',\n 'Adieresis',\n 'Aring',\n 'AE',\n 'Ccedilla',\n 'Egrave',\n 'Eacute',\n 'Ecircumflex',\n 'Edieresis',\n 'Igrave',\n 'Iacute',\n 'Icircumflex',\n 'Idieresis',\n 'Eth',\n 'Ntilde',\n 'Ograve',\n 'Oacute',\n 'Ocircumflex',\n 'Otilde',\n 'Odieresis',\n 'multiply',\n 'Oslash',\n 'Ugrave',\n 'Uacute',\n 'Ucircumflex',\n 'Udieresis',\n 'Yacute',\n 'Thorn',\n 'germandbls',\n 'agrave',\n 'aacute',\n 'acircumflex',\n 'atilde',\n 'adieresis',\n 'aring',\n 'ae',\n 'ccedilla',\n 'egrave',\n 'eacute',\n 'ecircumflex',\n 'edieresis',\n 'igrave',\n 'iacute',\n 'icircumflex',\n 'idieresis',\n 'eth',\n 'ntilde',\n 'ograve',\n 'oacute',\n 'ocircumflex',\n 'otilde',\n 'odieresis',\n 'divide',\n 'oslash',\n 'ugrave',\n 'uacute',\n 'ucircumflex',\n 'udieresis',\n 'yacute',\n 'thorn',\n 'ydieresis'\n];\nvar SymbolSetEncoding = [\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n 'space',\n 'exclam',\n 'universal',\n 'numbersign',\n 'existential',\n 'percent',\n 'ampersand',\n 'suchthat',\n 'parenleft',\n 'parenright',\n 'asteriskmath',\n 'plus',\n 'comma',\n 'minus',\n 'period',\n 'slash',\n 'zero',\n 'one',\n 'two',\n 'three',\n 'four',\n 'five',\n 'six',\n 'seven',\n 'eight',\n 'nine',\n 'colon',\n 'semicolon',\n 'less',\n 'equal',\n 'greater',\n 'question',\n 'congruent',\n 'Alpha',\n 'Beta',\n 'Chi',\n 'Delta',\n 'Epsilon',\n 'Phi',\n 'Gamma',\n 'Eta',\n 'Iota',\n 'theta1',\n 'Kappa',\n 'Lambda',\n 'Mu',\n 'Nu',\n 'Omicron',\n 'Pi',\n 'Theta',\n 'Rho',\n 'Sigma',\n 'Tau',\n 'Upsilon',\n 'sigma1',\n 'Omega',\n 'Xi',\n 'Psi',\n 'Zeta',\n 'bracketleft',\n 'therefore',\n 'bracketright',\n 'perpendicular',\n 'underscore',\n 'radicalex',\n 'alpha',\n 'beta',\n 'chi',\n 'delta',\n 'epsilon',\n 'phi',\n 'gamma',\n 'eta',\n 'iota',\n 'phi1',\n 'kappa',\n 'lambda',\n 'mu',\n 'nu',\n 'omicron',\n 'pi',\n 'theta',\n 'rho',\n 'sigma',\n 'tau',\n 'upsilon',\n 'omega1',\n 'omega',\n 'xi',\n 'psi',\n 'zeta',\n 'braceleft',\n 'bar',\n 'braceright',\n 'similar',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n 'Euro',\n 'Upsilon1',\n 'minute',\n 'lessequal',\n 'fraction',\n 'infinity',\n 'florin',\n 'club',\n 'diamond',\n 'heart',\n 'spade',\n 'arrowboth',\n 'arrowleft',\n 'arrowup',\n 'arrowright',\n 'arrowdown',\n 'degree',\n 'plusminus',\n 'second',\n 'greaterequal',\n 'multiply',\n 'proportional',\n 'partialdiff',\n 'bullet',\n 'divide',\n 'notequal',\n 'equivalence',\n 'approxequal',\n 'ellipsis',\n 'arrowvertex',\n 'arrowhorizex',\n 'carriagereturn',\n 'aleph',\n 'Ifraktur',\n 'Rfraktur',\n 'weierstrass',\n 'circlemultiply',\n 'circleplus',\n 'emptyset',\n 'intersection',\n 'union',\n 'propersuperset',\n 'reflexsuperset',\n 'notsubset',\n 'propersubset',\n 'reflexsubset',\n 'element',\n 'notelement',\n 'angle',\n 'gradient',\n 'registerserif',\n 'copyrightserif',\n 'trademarkserif',\n 'product',\n 'radical',\n 'dotmath',\n 'logicalnot',\n 'logicaland',\n 'logicalor',\n 'arrowdblboth',\n 'arrowdblleft',\n 'arrowdblup',\n 'arrowdblright',\n 'arrowdbldown',\n 'lozenge',\n 'angleleft',\n 'registersans',\n 'copyrightsans',\n 'trademarksans',\n 'summation',\n 'parenlefttp',\n 'parenleftex',\n 'parenleftbt',\n 'bracketlefttp',\n 'bracketleftex',\n 'bracketleftbt',\n 'bracelefttp',\n 'braceleftmid',\n 'braceleftbt',\n 'braceex',\n '',\n 'angleright',\n 'integral',\n 'integraltp',\n 'integralex',\n 'integralbt',\n 'parenrighttp',\n 'parenrightex',\n 'parenrightbt',\n 'bracketrighttp',\n 'bracketrightex',\n 'bracketrightbt',\n 'bracerighttp',\n 'bracerightmid',\n 'bracerightbt'\n];\nvar ZapfDingbatsEncoding = [\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n 'space',\n 'a1',\n 'a2',\n 'a202',\n 'a3',\n 'a4',\n 'a5',\n 'a119',\n 'a118',\n 'a117',\n 'a11',\n 'a12',\n 'a13',\n 'a14',\n 'a15',\n 'a16',\n 'a105',\n 'a17',\n 'a18',\n 'a19',\n 'a20',\n 'a21',\n 'a22',\n 'a23',\n 'a24',\n 'a25',\n 'a26',\n 'a27',\n 'a28',\n 'a6',\n 'a7',\n 'a8',\n 'a9',\n 'a10',\n 'a29',\n 'a30',\n 'a31',\n 'a32',\n 'a33',\n 'a34',\n 'a35',\n 'a36',\n 'a37',\n 'a38',\n 'a39',\n 'a40',\n 'a41',\n 'a42',\n 'a43',\n 'a44',\n 'a45',\n 'a46',\n 'a47',\n 'a48',\n 'a49',\n 'a50',\n 'a51',\n 'a52',\n 'a53',\n 'a54',\n 'a55',\n 'a56',\n 'a57',\n 'a58',\n 'a59',\n 'a60',\n 'a61',\n 'a62',\n 'a63',\n 'a64',\n 'a65',\n 'a66',\n 'a67',\n 'a68',\n 'a69',\n 'a70',\n 'a71',\n 'a72',\n 'a73',\n 'a74',\n 'a203',\n 'a75',\n 'a204',\n 'a76',\n 'a77',\n 'a78',\n 'a79',\n 'a81',\n 'a82',\n 'a83',\n 'a84',\n 'a97',\n 'a98',\n 'a99',\n 'a100',\n '',\n 'a89',\n 'a90',\n 'a93',\n 'a94',\n 'a91',\n 'a92',\n 'a205',\n 'a85',\n 'a206',\n 'a86',\n 'a87',\n 'a88',\n 'a95',\n 'a96',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n '',\n 'a101',\n 'a102',\n 'a103',\n 'a104',\n 'a106',\n 'a107',\n 'a108',\n 'a112',\n 'a111',\n 'a110',\n 'a109',\n 'a120',\n 'a121',\n 'a122',\n 'a123',\n 'a124',\n 'a125',\n 'a126',\n 'a127',\n 'a128',\n 'a129',\n 'a130',\n 'a131',\n 'a132',\n 'a133',\n 'a134',\n 'a135',\n 'a136',\n 'a137',\n 'a138',\n 'a139',\n 'a140',\n 'a141',\n 'a142',\n 'a143',\n 'a144',\n 'a145',\n 'a146',\n 'a147',\n 'a148',\n 'a149',\n 'a150',\n 'a151',\n 'a152',\n 'a153',\n 'a154',\n 'a155',\n 'a156',\n 'a157',\n 'a158',\n 'a159',\n 'a160',\n 'a161',\n 'a163',\n 'a164',\n 'a196',\n 'a165',\n 'a192',\n 'a166',\n 'a167',\n 'a168',\n 'a169',\n 'a170',\n 'a171',\n 'a172',\n 'a173',\n 'a162',\n 'a174',\n 'a175',\n 'a176',\n 'a177',\n 'a178',\n 'a179',\n 'a193',\n 'a180',\n 'a199',\n 'a181',\n 'a200',\n 'a182',\n '',\n 'a201',\n 'a183',\n 'a184',\n 'a197',\n 'a185',\n 'a194',\n 'a198',\n 'a186',\n 'a195',\n 'a187',\n 'a188',\n 'a189',\n 'a190',\n 'a191'\n];\nfunction getEncoding(encodingName) {\n switch (encodingName) {\n case 'WinAnsiEncoding':\n  return WinAnsiEncoding;\n case 'StandardEncoding':\n  return StandardEncoding;\n case 'MacRomanEncoding':\n  return MacRomanEncoding;\n case 'SymbolSetEncoding':\n  return SymbolSetEncoding;\n case 'ZapfDingbatsEncoding':\n  return ZapfDingbatsEncoding;\n case 'ExpertEncoding':\n  return ExpertEncoding;\n case 'MacExpertEncoding':\n  return MacExpertEncoding;\n default:\n  return null;\n }\n}\nexports.WinAnsiEncoding = WinAnsiEncoding;\nexports.StandardEncoding = StandardEncoding;\nexports.MacRomanEncoding = MacRomanEncoding;\nexports.SymbolSetEncoding = SymbolSetEncoding;\nexports.ZapfDingbatsEncoding = ZapfDingbatsEncoding;\nexports.ExpertEncoding = ExpertEncoding;\nexports.getEncoding = getEncoding;\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar coreStream = __w_pdfjs_require__(2);\nvar MissingDataException = sharedUtil.MissingDataException;\nvar StreamType = sharedUtil.StreamType;\nvar assert = sharedUtil.assert;\nvar error = sharedUtil.error;\nvar info = sharedUtil.info;\nvar isArray = sharedUtil.isArray;\nvar isInt = sharedUtil.isInt;\nvar isNum = sharedUtil.isNum;\nvar isString = sharedUtil.isString;\nvar warn = sharedUtil.warn;\nvar EOF = corePrimitives.EOF;\nvar Cmd = corePrimitives.Cmd;\nvar Dict = corePrimitives.Dict;\nvar Name = corePrimitives.Name;\nvar Ref = corePrimitives.Ref;\nvar isEOF = corePrimitives.isEOF;\nvar isCmd = corePrimitives.isCmd;\nvar isDict = corePrimitives.isDict;\nvar isName = corePrimitives.isName;\nvar Ascii85Stream = coreStream.Ascii85Stream;\nvar AsciiHexStream = coreStream.AsciiHexStream;\nvar CCITTFaxStream = coreStream.CCITTFaxStream;\nvar FlateStream = coreStream.FlateStream;\nvar Jbig2Stream = coreStream.Jbig2Stream;\nvar JpegStream = coreStream.JpegStream;\nvar JpxStream = coreStream.JpxStream;\nvar LZWStream = coreStream.LZWStream;\nvar NullStream = coreStream.NullStream;\nvar PredictorStream = coreStream.PredictorStream;\nvar RunLengthStream = coreStream.RunLengthStream;\nvar MAX_LENGTH_TO_CACHE = 1000;\nvar Parser = function ParserClosure() {\n function Parser(lexer, allowStreams, xref, recoveryMode) {\n  this.lexer = lexer;\n  this.allowStreams = allowStreams;\n  this.xref = xref;\n  this.recoveryMode = recoveryMode || false;\n  this.imageCache = Object.create(null);\n  this.refill();\n }\n Parser.prototype = {\n  refill: function Parser_refill() {\n   this.buf1 = this.lexer.getObj();\n   this.buf2 = this.lexer.getObj();\n  },\n  shift: function Parser_shift() {\n   if (isCmd(this.buf2, 'ID')) {\n    this.buf1 = this.buf2;\n    this.buf2 = null;\n   } else {\n    this.buf1 = this.buf2;\n    this.buf2 = this.lexer.getObj();\n   }\n  },\n  tryShift: function Parser_tryShift() {\n   try {\n    this.shift();\n    return true;\n   } catch (e) {\n    if (e instanceof MissingDataException) {\n     throw e;\n    }\n    return false;\n   }\n  },\n  getObj: function Parser_getObj(cipherTransform) {\n   var buf1 = this.buf1;\n   this.shift();\n   if (buf1 instanceof Cmd) {\n    switch (buf1.cmd) {\n    case 'BI':\n     return this.makeInlineImage(cipherTransform);\n    case '[':\n     var array = [];\n     while (!isCmd(this.buf1, ']') && !isEOF(this.buf1)) {\n      array.push(this.getObj(cipherTransform));\n     }\n     if (isEOF(this.buf1)) {\n      if (!this.recoveryMode) {\n       error('End of file inside array');\n      }\n      return array;\n     }\n     this.shift();\n     return array;\n    case '<<':\n     var dict = new Dict(this.xref);\n     while (!isCmd(this.buf1, '>>') && !isEOF(this.buf1)) {\n      if (!isName(this.buf1)) {\n       info('Malformed dictionary: key must be a name object');\n       this.shift();\n       continue;\n      }\n      var key = this.buf1.name;\n      this.shift();\n      if (isEOF(this.buf1)) {\n       break;\n      }\n      dict.set(key, this.getObj(cipherTransform));\n     }\n     if (isEOF(this.buf1)) {\n      if (!this.recoveryMode) {\n       error('End of file inside dictionary');\n      }\n      return dict;\n     }\n     if (isCmd(this.buf2, 'stream')) {\n      return this.allowStreams ? this.makeStream(dict, cipherTransform) : dict;\n     }\n     this.shift();\n     return dict;\n    default:\n     return buf1;\n    }\n   }\n   if (isInt(buf1)) {\n    var num = buf1;\n    if (isInt(this.buf1) && isCmd(this.buf2, 'R')) {\n     var ref = new Ref(num, this.buf1);\n     this.shift();\n     this.shift();\n     return ref;\n    }\n    return num;\n   }\n   if (isString(buf1)) {\n    var str = buf1;\n    if (cipherTransform) {\n     str = cipherTransform.decryptString(str);\n    }\n    return str;\n   }\n   return buf1;\n  },\n  findDefaultInlineStreamEnd: function Parser_findDefaultInlineStreamEnd(stream) {\n   var E = 0x45, I = 0x49, SPACE = 0x20, LF = 0xA, CR = 0xD;\n   var startPos = stream.pos, state = 0, ch, i, n, followingBytes;\n   while ((ch = stream.getByte()) !== -1) {\n    if (state === 0) {\n     state = ch === E ? 1 : 0;\n    } else if (state === 1) {\n     state = ch === I ? 2 : 0;\n    } else {\n     assert(state === 2);\n     if (ch === SPACE || ch === LF || ch === CR) {\n      n = 5;\n      followingBytes = stream.peekBytes(n);\n      for (i = 0; i < n; i++) {\n       ch = followingBytes[i];\n       if (ch !== LF && ch !== CR && (ch < SPACE || ch > 0x7F)) {\n        state = 0;\n        break;\n       }\n      }\n      if (state === 2) {\n       break;\n      }\n     } else {\n      state = 0;\n     }\n    }\n   }\n   return stream.pos - 4 - startPos;\n  },\n  findDCTDecodeInlineStreamEnd: function Parser_findDCTDecodeInlineStreamEnd(stream) {\n   var startPos = stream.pos, foundEOI = false, b, markerLength, length;\n   while ((b = stream.getByte()) !== -1) {\n    if (b !== 0xFF) {\n     continue;\n    }\n    switch (stream.getByte()) {\n    case 0x00:\n     break;\n    case 0xFF:\n     stream.skip(-1);\n     break;\n    case 0xD9:\n     foundEOI = true;\n     break;\n    case 0xC0:\n    case 0xC1:\n    case 0xC2:\n    case 0xC3:\n    case 0xC5:\n    case 0xC6:\n    case 0xC7:\n    case 0xC9:\n    case 0xCA:\n    case 0xCB:\n    case 0xCD:\n    case 0xCE:\n    case 0xCF:\n    case 0xC4:\n    case 0xCC:\n    case 0xDA:\n    case 0xDB:\n    case 0xDC:\n    case 0xDD:\n    case 0xDE:\n    case 0xDF:\n    case 0xE0:\n    case 0xE1:\n    case 0xE2:\n    case 0xE3:\n    case 0xE4:\n    case 0xE5:\n    case 0xE6:\n    case 0xE7:\n    case 0xE8:\n    case 0xE9:\n    case 0xEA:\n    case 0xEB:\n    case 0xEC:\n    case 0xED:\n    case 0xEE:\n    case 0xEF:\n    case 0xFE:\n     markerLength = stream.getUint16();\n     if (markerLength > 2) {\n      stream.skip(markerLength - 2);\n     } else {\n      stream.skip(-2);\n     }\n     break;\n    }\n    if (foundEOI) {\n     break;\n    }\n   }\n   length = stream.pos - startPos;\n   if (b === -1) {\n    warn('Inline DCTDecode image stream: ' + 'EOI marker not found, searching for /EI/ instead.');\n    stream.skip(-length);\n    return this.findDefaultInlineStreamEnd(stream);\n   }\n   this.inlineStreamSkipEI(stream);\n   return length;\n  },\n  findASCII85DecodeInlineStreamEnd: function Parser_findASCII85DecodeInlineStreamEnd(stream) {\n   var TILDE = 0x7E, GT = 0x3E;\n   var startPos = stream.pos, ch, length;\n   while ((ch = stream.getByte()) !== -1) {\n    if (ch === TILDE && stream.peekByte() === GT) {\n     stream.skip();\n     break;\n    }\n   }\n   length = stream.pos - startPos;\n   if (ch === -1) {\n    warn('Inline ASCII85Decode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n    stream.skip(-length);\n    return this.findDefaultInlineStreamEnd(stream);\n   }\n   this.inlineStreamSkipEI(stream);\n   return length;\n  },\n  findASCIIHexDecodeInlineStreamEnd: function Parser_findASCIIHexDecodeInlineStreamEnd(stream) {\n   var GT = 0x3E;\n   var startPos = stream.pos, ch, length;\n   while ((ch = stream.getByte()) !== -1) {\n    if (ch === GT) {\n     break;\n    }\n   }\n   length = stream.pos - startPos;\n   if (ch === -1) {\n    warn('Inline ASCIIHexDecode image stream: ' + 'EOD marker not found, searching for /EI/ instead.');\n    stream.skip(-length);\n    return this.findDefaultInlineStreamEnd(stream);\n   }\n   this.inlineStreamSkipEI(stream);\n   return length;\n  },\n  inlineStreamSkipEI: function Parser_inlineStreamSkipEI(stream) {\n   var E = 0x45, I = 0x49;\n   var state = 0, ch;\n   while ((ch = stream.getByte()) !== -1) {\n    if (state === 0) {\n     state = ch === E ? 1 : 0;\n    } else if (state === 1) {\n     state = ch === I ? 2 : 0;\n    } else if (state === 2) {\n     break;\n    }\n   }\n  },\n  makeInlineImage: function Parser_makeInlineImage(cipherTransform) {\n   var lexer = this.lexer;\n   var stream = lexer.stream;\n   var dict = new Dict(this.xref);\n   while (!isCmd(this.buf1, 'ID') && !isEOF(this.buf1)) {\n    if (!isName(this.buf1)) {\n     error('Dictionary key must be a name object');\n    }\n    var key = this.buf1.name;\n    this.shift();\n    if (isEOF(this.buf1)) {\n     break;\n    }\n    dict.set(key, this.getObj(cipherTransform));\n   }\n   var filter = dict.get('Filter', 'F'), filterName;\n   if (isName(filter)) {\n    filterName = filter.name;\n   } else if (isArray(filter)) {\n    var filterZero = this.xref.fetchIfRef(filter[0]);\n    if (isName(filterZero)) {\n     filterName = filterZero.name;\n    }\n   }\n   var startPos = stream.pos, length, i, ii;\n   if (filterName === 'DCTDecode' || filterName === 'DCT') {\n    length = this.findDCTDecodeInlineStreamEnd(stream);\n   } else if (filterName === 'ASCII85Decide' || filterName === 'A85') {\n    length = this.findASCII85DecodeInlineStreamEnd(stream);\n   } else if (filterName === 'ASCIIHexDecode' || filterName === 'AHx') {\n    length = this.findASCIIHexDecodeInlineStreamEnd(stream);\n   } else {\n    length = this.findDefaultInlineStreamEnd(stream);\n   }\n   var imageStream = stream.makeSubStream(startPos, length, dict);\n   var adler32;\n   if (length < MAX_LENGTH_TO_CACHE) {\n    var imageBytes = imageStream.getBytes();\n    imageStream.reset();\n    var a = 1;\n    var b = 0;\n    for (i = 0, ii = imageBytes.length; i < ii; ++i) {\n     a += imageBytes[i] & 0xff;\n     b += a;\n    }\n    adler32 = b % 65521 << 16 | a % 65521;\n    if (this.imageCache.adler32 === adler32) {\n     this.buf2 = Cmd.get('EI');\n     this.shift();\n     this.imageCache[adler32].reset();\n     return this.imageCache[adler32];\n    }\n   }\n   if (cipherTransform) {\n    imageStream = cipherTransform.createStream(imageStream, length);\n   }\n   imageStream = this.filter(imageStream, dict, length);\n   imageStream.dict = dict;\n   if (adler32 !== undefined) {\n    imageStream.cacheKey = 'inline_' + length + '_' + adler32;\n    this.imageCache[adler32] = imageStream;\n   }\n   this.buf2 = Cmd.get('EI');\n   this.shift();\n   return imageStream;\n  },\n  makeStream: function Parser_makeStream(dict, cipherTransform) {\n   var lexer = this.lexer;\n   var stream = lexer.stream;\n   lexer.skipToNextLine();\n   var pos = stream.pos - 1;\n   var length = dict.get('Length');\n   if (!isInt(length)) {\n    info('Bad ' + length + ' attribute in stream');\n    length = 0;\n   }\n   stream.pos = pos + length;\n   lexer.nextChar();\n   if (this.tryShift() && isCmd(this.buf2, 'endstream')) {\n    this.shift();\n   } else {\n    stream.pos = pos;\n    var SCAN_BLOCK_SIZE = 2048;\n    var ENDSTREAM_SIGNATURE_LENGTH = 9;\n    var ENDSTREAM_SIGNATURE = [\n     0x65,\n     0x6E,\n     0x64,\n     0x73,\n     0x74,\n     0x72,\n     0x65,\n     0x61,\n     0x6D\n    ];\n    var skipped = 0, found = false, i, j;\n    while (stream.pos < stream.end) {\n     var scanBytes = stream.peekBytes(SCAN_BLOCK_SIZE);\n     var scanLength = scanBytes.length - ENDSTREAM_SIGNATURE_LENGTH;\n     if (scanLength <= 0) {\n      break;\n     }\n     found = false;\n     i = 0;\n     while (i < scanLength) {\n      j = 0;\n      while (j < ENDSTREAM_SIGNATURE_LENGTH && scanBytes[i + j] === ENDSTREAM_SIGNATURE[j]) {\n       j++;\n      }\n      if (j >= ENDSTREAM_SIGNATURE_LENGTH) {\n       found = true;\n       break;\n      }\n      i++;\n     }\n     if (found) {\n      skipped += i;\n      stream.pos += i;\n      break;\n     }\n     skipped += scanLength;\n     stream.pos += scanLength;\n    }\n    if (!found) {\n     error('Missing endstream');\n    }\n    length = skipped;\n    lexer.nextChar();\n    this.shift();\n    this.shift();\n   }\n   this.shift();\n   stream = stream.makeSubStream(pos, length, dict);\n   if (cipherTransform) {\n    stream = cipherTransform.createStream(stream, length);\n   }\n   stream = this.filter(stream, dict, length);\n   stream.dict = dict;\n   return stream;\n  },\n  filter: function Parser_filter(stream, dict, length) {\n   var filter = dict.get('Filter', 'F');\n   var params = dict.get('DecodeParms', 'DP');\n   if (isName(filter)) {\n    if (isArray(params)) {\n     params = this.xref.fetchIfRef(params[0]);\n    }\n    return this.makeFilter(stream, filter.name, length, params);\n   }\n   var maybeLength = length;\n   if (isArray(filter)) {\n    var filterArray = filter;\n    var paramsArray = params;\n    for (var i = 0, ii = filterArray.length; i < ii; ++i) {\n     filter = this.xref.fetchIfRef(filterArray[i]);\n     if (!isName(filter)) {\n      error('Bad filter name: ' + filter);\n     }\n     params = null;\n     if (isArray(paramsArray) && i in paramsArray) {\n      params = this.xref.fetchIfRef(paramsArray[i]);\n     }\n     stream = this.makeFilter(stream, filter.name, maybeLength, params);\n     maybeLength = null;\n    }\n   }\n   return stream;\n  },\n  makeFilter: function Parser_makeFilter(stream, name, maybeLength, params) {\n   if (maybeLength === 0) {\n    warn('Empty \"' + name + '\" stream.');\n    return new NullStream(stream);\n   }\n   try {\n    var xrefStreamStats = this.xref.stats.streamTypes;\n    if (name === 'FlateDecode' || name === 'Fl') {\n     xrefStreamStats[StreamType.FLATE] = true;\n     if (params) {\n      return new PredictorStream(new FlateStream(stream, maybeLength), maybeLength, params);\n     }\n     return new FlateStream(stream, maybeLength);\n    }\n    if (name === 'LZWDecode' || name === 'LZW') {\n     xrefStreamStats[StreamType.LZW] = true;\n     var earlyChange = 1;\n     if (params) {\n      if (params.has('EarlyChange')) {\n       earlyChange = params.get('EarlyChange');\n      }\n      return new PredictorStream(new LZWStream(stream, maybeLength, earlyChange), maybeLength, params);\n     }\n     return new LZWStream(stream, maybeLength, earlyChange);\n    }\n    if (name === 'DCTDecode' || name === 'DCT') {\n     xrefStreamStats[StreamType.DCT] = true;\n     return new JpegStream(stream, maybeLength, stream.dict, params);\n    }\n    if (name === 'JPXDecode' || name === 'JPX') {\n     xrefStreamStats[StreamType.JPX] = true;\n     return new JpxStream(stream, maybeLength, stream.dict, params);\n    }\n    if (name === 'ASCII85Decode' || name === 'A85') {\n     xrefStreamStats[StreamType.A85] = true;\n     return new Ascii85Stream(stream, maybeLength);\n    }\n    if (name === 'ASCIIHexDecode' || name === 'AHx') {\n     xrefStreamStats[StreamType.AHX] = true;\n     return new AsciiHexStream(stream, maybeLength);\n    }\n    if (name === 'CCITTFaxDecode' || name === 'CCF') {\n     xrefStreamStats[StreamType.CCF] = true;\n     return new CCITTFaxStream(stream, maybeLength, params);\n    }\n    if (name === 'RunLengthDecode' || name === 'RL') {\n     xrefStreamStats[StreamType.RL] = true;\n     return new RunLengthStream(stream, maybeLength);\n    }\n    if (name === 'JBIG2Decode') {\n     xrefStreamStats[StreamType.JBIG] = true;\n     return new Jbig2Stream(stream, maybeLength, stream.dict, params);\n    }\n    warn('filter \"' + name + '\" not supported yet');\n    return stream;\n   } catch (ex) {\n    if (ex instanceof MissingDataException) {\n     throw ex;\n    }\n    warn('Invalid stream: \\\"' + ex + '\\\"');\n    return new NullStream(stream);\n   }\n  }\n };\n return Parser;\n}();\nvar Lexer = function LexerClosure() {\n function Lexer(stream, knownCommands) {\n  this.stream = stream;\n  this.nextChar();\n  this.strBuf = [];\n  this.knownCommands = knownCommands;\n }\n var specialChars = [\n  1,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  1,\n  1,\n  0,\n  1,\n  1,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  1,\n  0,\n  0,\n  0,\n  0,\n  2,\n  0,\n  0,\n  2,\n  2,\n  0,\n  0,\n  0,\n  0,\n  0,\n  2,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  2,\n  0,\n  2,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  2,\n  0,\n  2,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  2,\n  0,\n  2,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0,\n  0\n ];\n function toHexDigit(ch) {\n  if (ch >= 0x30 && ch <= 0x39) {\n   return ch & 0x0F;\n  }\n  if (ch >= 0x41 && ch <= 0x46 || ch >= 0x61 && ch <= 0x66) {\n   return (ch & 0x0F) + 9;\n  }\n  return -1;\n }\n Lexer.prototype = {\n  nextChar: function Lexer_nextChar() {\n   return this.currentChar = this.stream.getByte();\n  },\n  peekChar: function Lexer_peekChar() {\n   return this.stream.peekByte();\n  },\n  getNumber: function Lexer_getNumber() {\n   var ch = this.currentChar;\n   var eNotation = false;\n   var divideBy = 0;\n   var sign = 1;\n   if (ch === 0x2D) {\n    sign = -1;\n    ch = this.nextChar();\n    if (ch === 0x2D) {\n     ch = this.nextChar();\n    }\n   } else if (ch === 0x2B) {\n    ch = this.nextChar();\n   }\n   if (ch === 0x2E) {\n    divideBy = 10;\n    ch = this.nextChar();\n   }\n   if (ch < 0x30 || ch > 0x39) {\n    error('Invalid number: ' + String.fromCharCode(ch));\n    return 0;\n   }\n   var baseValue = ch - 0x30;\n   var powerValue = 0;\n   var powerValueSign = 1;\n   while ((ch = this.nextChar()) >= 0) {\n    if (0x30 <= ch && ch <= 0x39) {\n     var currentDigit = ch - 0x30;\n     if (eNotation) {\n      powerValue = powerValue * 10 + currentDigit;\n     } else {\n      if (divideBy !== 0) {\n       divideBy *= 10;\n      }\n      baseValue = baseValue * 10 + currentDigit;\n     }\n    } else if (ch === 0x2E) {\n     if (divideBy === 0) {\n      divideBy = 1;\n     } else {\n      break;\n     }\n    } else if (ch === 0x2D) {\n     warn('Badly formatted number');\n    } else if (ch === 0x45 || ch === 0x65) {\n     ch = this.peekChar();\n     if (ch === 0x2B || ch === 0x2D) {\n      powerValueSign = ch === 0x2D ? -1 : 1;\n      this.nextChar();\n     } else if (ch < 0x30 || ch > 0x39) {\n      break;\n     }\n     eNotation = true;\n    } else {\n     break;\n    }\n   }\n   if (divideBy !== 0) {\n    baseValue /= divideBy;\n   }\n   if (eNotation) {\n    baseValue *= Math.pow(10, powerValueSign * powerValue);\n   }\n   return sign * baseValue;\n  },\n  getString: function Lexer_getString() {\n   var numParen = 1;\n   var done = false;\n   var strBuf = this.strBuf;\n   strBuf.length = 0;\n   var ch = this.nextChar();\n   while (true) {\n    var charBuffered = false;\n    switch (ch | 0) {\n    case -1:\n     warn('Unterminated string');\n     done = true;\n     break;\n    case 0x28:\n     ++numParen;\n     strBuf.push('(');\n     break;\n    case 0x29:\n     if (--numParen === 0) {\n      this.nextChar();\n      done = true;\n     } else {\n      strBuf.push(')');\n     }\n     break;\n    case 0x5C:\n     ch = this.nextChar();\n     switch (ch) {\n     case -1:\n      warn('Unterminated string');\n      done = true;\n      break;\n     case 0x6E:\n      strBuf.push('\\n');\n      break;\n     case 0x72:\n      strBuf.push('\\r');\n      break;\n     case 0x74:\n      strBuf.push('\\t');\n      break;\n     case 0x62:\n      strBuf.push('\\b');\n      break;\n     case 0x66:\n      strBuf.push('\\f');\n      break;\n     case 0x5C:\n     case 0x28:\n     case 0x29:\n      strBuf.push(String.fromCharCode(ch));\n      break;\n     case 0x30:\n     case 0x31:\n     case 0x32:\n     case 0x33:\n     case 0x34:\n     case 0x35:\n     case 0x36:\n     case 0x37:\n      var x = ch & 0x0F;\n      ch = this.nextChar();\n      charBuffered = true;\n      if (ch >= 0x30 && ch <= 0x37) {\n       x = (x << 3) + (ch & 0x0F);\n       ch = this.nextChar();\n       if (ch >= 0x30 && ch <= 0x37) {\n        charBuffered = false;\n        x = (x << 3) + (ch & 0x0F);\n       }\n      }\n      strBuf.push(String.fromCharCode(x));\n      break;\n     case 0x0D:\n      if (this.peekChar() === 0x0A) {\n       this.nextChar();\n      }\n      break;\n     case 0x0A:\n      break;\n     default:\n      strBuf.push(String.fromCharCode(ch));\n      break;\n     }\n     break;\n    default:\n     strBuf.push(String.fromCharCode(ch));\n     break;\n    }\n    if (done) {\n     break;\n    }\n    if (!charBuffered) {\n     ch = this.nextChar();\n    }\n   }\n   return strBuf.join('');\n  },\n  getName: function Lexer_getName() {\n   var ch, previousCh;\n   var strBuf = this.strBuf;\n   strBuf.length = 0;\n   while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n    if (ch === 0x23) {\n     ch = this.nextChar();\n     if (specialChars[ch]) {\n      warn('Lexer_getName: ' + 'NUMBER SIGN (#) should be followed by a hexadecimal number.');\n      strBuf.push('#');\n      break;\n     }\n     var x = toHexDigit(ch);\n     if (x !== -1) {\n      previousCh = ch;\n      ch = this.nextChar();\n      var x2 = toHexDigit(ch);\n      if (x2 === -1) {\n       warn('Lexer_getName: Illegal digit (' + String.fromCharCode(ch) + ') in hexadecimal number.');\n       strBuf.push('#', String.fromCharCode(previousCh));\n       if (specialChars[ch]) {\n        break;\n       }\n       strBuf.push(String.fromCharCode(ch));\n       continue;\n      }\n      strBuf.push(String.fromCharCode(x << 4 | x2));\n     } else {\n      strBuf.push('#', String.fromCharCode(ch));\n     }\n    } else {\n     strBuf.push(String.fromCharCode(ch));\n    }\n   }\n   if (strBuf.length > 127) {\n    warn('name token is longer than allowed by the spec: ' + strBuf.length);\n   }\n   return Name.get(strBuf.join(''));\n  },\n  getHexString: function Lexer_getHexString() {\n   var strBuf = this.strBuf;\n   strBuf.length = 0;\n   var ch = this.currentChar;\n   var isFirstHex = true;\n   var firstDigit;\n   var secondDigit;\n   while (true) {\n    if (ch < 0) {\n     warn('Unterminated hex string');\n     break;\n    } else if (ch === 0x3E) {\n     this.nextChar();\n     break;\n    } else if (specialChars[ch] === 1) {\n     ch = this.nextChar();\n     continue;\n    } else {\n     if (isFirstHex) {\n      firstDigit = toHexDigit(ch);\n      if (firstDigit === -1) {\n       warn('Ignoring invalid character \"' + ch + '\" in hex string');\n       ch = this.nextChar();\n       continue;\n      }\n     } else {\n      secondDigit = toHexDigit(ch);\n      if (secondDigit === -1) {\n       warn('Ignoring invalid character \"' + ch + '\" in hex string');\n       ch = this.nextChar();\n       continue;\n      }\n      strBuf.push(String.fromCharCode(firstDigit << 4 | secondDigit));\n     }\n     isFirstHex = !isFirstHex;\n     ch = this.nextChar();\n    }\n   }\n   return strBuf.join('');\n  },\n  getObj: function Lexer_getObj() {\n   var comment = false;\n   var ch = this.currentChar;\n   while (true) {\n    if (ch < 0) {\n     return EOF;\n    }\n    if (comment) {\n     if (ch === 0x0A || ch === 0x0D) {\n      comment = false;\n     }\n    } else if (ch === 0x25) {\n     comment = true;\n    } else if (specialChars[ch] !== 1) {\n     break;\n    }\n    ch = this.nextChar();\n   }\n   switch (ch | 0) {\n   case 0x30:\n   case 0x31:\n   case 0x32:\n   case 0x33:\n   case 0x34:\n   case 0x35:\n   case 0x36:\n   case 0x37:\n   case 0x38:\n   case 0x39:\n   case 0x2B:\n   case 0x2D:\n   case 0x2E:\n    return this.getNumber();\n   case 0x28:\n    return this.getString();\n   case 0x2F:\n    return this.getName();\n   case 0x5B:\n    this.nextChar();\n    return Cmd.get('[');\n   case 0x5D:\n    this.nextChar();\n    return Cmd.get(']');\n   case 0x3C:\n    ch = this.nextChar();\n    if (ch === 0x3C) {\n     this.nextChar();\n     return Cmd.get('<<');\n    }\n    return this.getHexString();\n   case 0x3E:\n    ch = this.nextChar();\n    if (ch === 0x3E) {\n     this.nextChar();\n     return Cmd.get('>>');\n    }\n    return Cmd.get('>');\n   case 0x7B:\n    this.nextChar();\n    return Cmd.get('{');\n   case 0x7D:\n    this.nextChar();\n    return Cmd.get('}');\n   case 0x29:\n    this.nextChar();\n    error('Illegal character: ' + ch);\n    break;\n   }\n   var str = String.fromCharCode(ch);\n   var knownCommands = this.knownCommands;\n   var knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n   while ((ch = this.nextChar()) >= 0 && !specialChars[ch]) {\n    var possibleCommand = str + String.fromCharCode(ch);\n    if (knownCommandFound && knownCommands[possibleCommand] === undefined) {\n     break;\n    }\n    if (str.length === 128) {\n     error('Command token too long: ' + str.length);\n    }\n    str = possibleCommand;\n    knownCommandFound = knownCommands && knownCommands[str] !== undefined;\n   }\n   if (str === 'true') {\n    return true;\n   }\n   if (str === 'false') {\n    return false;\n   }\n   if (str === 'null') {\n    return null;\n   }\n   return Cmd.get(str);\n  },\n  skipToNextLine: function Lexer_skipToNextLine() {\n   var ch = this.currentChar;\n   while (ch >= 0) {\n    if (ch === 0x0D) {\n     ch = this.nextChar();\n     if (ch === 0x0A) {\n      this.nextChar();\n     }\n     break;\n    } else if (ch === 0x0A) {\n     this.nextChar();\n     break;\n    }\n    ch = this.nextChar();\n   }\n  }\n };\n return Lexer;\n}();\nvar Linearization = {\n create: function LinearizationCreate(stream) {\n  function getInt(name, allowZeroValue) {\n   var obj = linDict.get(name);\n   if (isInt(obj) && (allowZeroValue ? obj >= 0 : obj > 0)) {\n    return obj;\n   }\n   throw new Error('The \"' + name + '\" parameter in the linearization ' + 'dictionary is invalid.');\n  }\n  function getHints() {\n   var hints = linDict.get('H'), hintsLength, item;\n   if (isArray(hints) && ((hintsLength = hints.length) === 2 || hintsLength === 4)) {\n    for (var index = 0; index < hintsLength; index++) {\n     if (!(isInt(item = hints[index]) && item > 0)) {\n      throw new Error('Hint (' + index + ') in the linearization dictionary is invalid.');\n     }\n    }\n    return hints;\n   }\n   throw new Error('Hint array in the linearization dictionary is invalid.');\n  }\n  var parser = new Parser(new Lexer(stream), false, null);\n  var obj1 = parser.getObj();\n  var obj2 = parser.getObj();\n  var obj3 = parser.getObj();\n  var linDict = parser.getObj();\n  var obj, length;\n  if (!(isInt(obj1) && isInt(obj2) && isCmd(obj3, 'obj') && isDict(linDict) && isNum(obj = linDict.get('Linearized')) && obj > 0)) {\n   return null;\n  } else if ((length = getInt('L')) !== stream.length) {\n   throw new Error('The \"L\" parameter in the linearization dictionary ' + 'does not equal the stream length.');\n  }\n  return {\n   length: length,\n   hints: getHints(),\n   objectNumberFirst: getInt('O'),\n   endFirst: getInt('E'),\n   numPages: getInt('N'),\n   mainXRefEntriesOffset: getInt('T'),\n   pageFirst: linDict.has('P') ? getInt('P', true) : 0\n  };\n }\n};\nexports.Lexer = Lexer;\nexports.Linearization = Linearization;\nexports.Parser = Parser;\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar corePsParser = __w_pdfjs_require__(34);\nvar error = sharedUtil.error;\nvar info = sharedUtil.info;\nvar isArray = sharedUtil.isArray;\nvar isBool = sharedUtil.isBool;\nvar isDict = corePrimitives.isDict;\nvar isStream = corePrimitives.isStream;\nvar PostScriptLexer = corePsParser.PostScriptLexer;\nvar PostScriptParser = corePsParser.PostScriptParser;\nvar PDFFunction = function PDFFunctionClosure() {\n var CONSTRUCT_SAMPLED = 0;\n var CONSTRUCT_INTERPOLATED = 2;\n var CONSTRUCT_STICHED = 3;\n var CONSTRUCT_POSTSCRIPT = 4;\n return {\n  getSampleArray: function PDFFunction_getSampleArray(size, outputSize, bps, str) {\n   var i, ii;\n   var length = 1;\n   for (i = 0, ii = size.length; i < ii; i++) {\n    length *= size[i];\n   }\n   length *= outputSize;\n   var array = new Array(length);\n   var codeSize = 0;\n   var codeBuf = 0;\n   var sampleMul = 1.0 / (Math.pow(2.0, bps) - 1);\n   var strBytes = str.getBytes((length * bps + 7) / 8);\n   var strIdx = 0;\n   for (i = 0; i < length; i++) {\n    while (codeSize < bps) {\n     codeBuf <<= 8;\n     codeBuf |= strBytes[strIdx++];\n     codeSize += 8;\n    }\n    codeSize -= bps;\n    array[i] = (codeBuf >> codeSize) * sampleMul;\n    codeBuf &= (1 << codeSize) - 1;\n   }\n   return array;\n  },\n  getIR: function PDFFunction_getIR(xref, fn) {\n   var dict = fn.dict;\n   if (!dict) {\n    dict = fn;\n   }\n   var types = [\n    this.constructSampled,\n    null,\n    this.constructInterpolated,\n    this.constructStiched,\n    this.constructPostScript\n   ];\n   var typeNum = dict.get('FunctionType');\n   var typeFn = types[typeNum];\n   if (!typeFn) {\n    error('Unknown type of function');\n   }\n   return typeFn.call(this, fn, dict, xref);\n  },\n  fromIR: function PDFFunction_fromIR(IR) {\n   var type = IR[0];\n   switch (type) {\n   case CONSTRUCT_SAMPLED:\n    return this.constructSampledFromIR(IR);\n   case CONSTRUCT_INTERPOLATED:\n    return this.constructInterpolatedFromIR(IR);\n   case CONSTRUCT_STICHED:\n    return this.constructStichedFromIR(IR);\n   default:\n    return this.constructPostScriptFromIR(IR);\n   }\n  },\n  parse: function PDFFunction_parse(xref, fn) {\n   var IR = this.getIR(xref, fn);\n   return this.fromIR(IR);\n  },\n  parseArray: function PDFFunction_parseArray(xref, fnObj) {\n   if (!isArray(fnObj)) {\n    return this.parse(xref, fnObj);\n   }\n   var fnArray = [];\n   for (var j = 0, jj = fnObj.length; j < jj; j++) {\n    var obj = xref.fetchIfRef(fnObj[j]);\n    fnArray.push(PDFFunction.parse(xref, obj));\n   }\n   return function (src, srcOffset, dest, destOffset) {\n    for (var i = 0, ii = fnArray.length; i < ii; i++) {\n     fnArray[i](src, srcOffset, dest, destOffset + i);\n    }\n   };\n  },\n  constructSampled: function PDFFunction_constructSampled(str, dict) {\n   function toMultiArray(arr) {\n    var inputLength = arr.length;\n    var out = [];\n    var index = 0;\n    for (var i = 0; i < inputLength; i += 2) {\n     out[index] = [\n      arr[i],\n      arr[i + 1]\n     ];\n     ++index;\n    }\n    return out;\n   }\n   var domain = dict.getArray('Domain');\n   var range = dict.getArray('Range');\n   if (!domain || !range) {\n    error('No domain or range');\n   }\n   var inputSize = domain.length / 2;\n   var outputSize = range.length / 2;\n   domain = toMultiArray(domain);\n   range = toMultiArray(range);\n   var size = dict.get('Size');\n   var bps = dict.get('BitsPerSample');\n   var order = dict.get('Order') || 1;\n   if (order !== 1) {\n    info('No support for cubic spline interpolation: ' + order);\n   }\n   var encode = dict.getArray('Encode');\n   if (!encode) {\n    encode = [];\n    for (var i = 0; i < inputSize; ++i) {\n     encode.push(0);\n     encode.push(size[i] - 1);\n    }\n   }\n   encode = toMultiArray(encode);\n   var decode = dict.getArray('Decode');\n   if (!decode) {\n    decode = range;\n   } else {\n    decode = toMultiArray(decode);\n   }\n   var samples = this.getSampleArray(size, outputSize, bps, str);\n   return [\n    CONSTRUCT_SAMPLED,\n    inputSize,\n    domain,\n    encode,\n    decode,\n    samples,\n    size,\n    outputSize,\n    Math.pow(2, bps) - 1,\n    range\n   ];\n  },\n  constructSampledFromIR: function PDFFunction_constructSampledFromIR(IR) {\n   function interpolate(x, xmin, xmax, ymin, ymax) {\n    return ymin + (x - xmin) * ((ymax - ymin) / (xmax - xmin));\n   }\n   return function constructSampledFromIRResult(src, srcOffset, dest, destOffset) {\n    var m = IR[1];\n    var domain = IR[2];\n    var encode = IR[3];\n    var decode = IR[4];\n    var samples = IR[5];\n    var size = IR[6];\n    var n = IR[7];\n    var range = IR[9];\n    var cubeVertices = 1 << m;\n    var cubeN = new Float64Array(cubeVertices);\n    var cubeVertex = new Uint32Array(cubeVertices);\n    var i, j;\n    for (j = 0; j < cubeVertices; j++) {\n     cubeN[j] = 1;\n    }\n    var k = n, pos = 1;\n    for (i = 0; i < m; ++i) {\n     var domain_2i = domain[i][0];\n     var domain_2i_1 = domain[i][1];\n     var xi = Math.min(Math.max(src[srcOffset + i], domain_2i), domain_2i_1);\n     var e = interpolate(xi, domain_2i, domain_2i_1, encode[i][0], encode[i][1]);\n     var size_i = size[i];\n     e = Math.min(Math.max(e, 0), size_i - 1);\n     var e0 = e < size_i - 1 ? Math.floor(e) : e - 1;\n     var n0 = e0 + 1 - e;\n     var n1 = e - e0;\n     var offset0 = e0 * k;\n     var offset1 = offset0 + k;\n     for (j = 0; j < cubeVertices; j++) {\n      if (j & pos) {\n       cubeN[j] *= n1;\n       cubeVertex[j] += offset1;\n      } else {\n       cubeN[j] *= n0;\n       cubeVertex[j] += offset0;\n      }\n     }\n     k *= size_i;\n     pos <<= 1;\n    }\n    for (j = 0; j < n; ++j) {\n     var rj = 0;\n     for (i = 0; i < cubeVertices; i++) {\n      rj += samples[cubeVertex[i] + j] * cubeN[i];\n     }\n     rj = interpolate(rj, 0, 1, decode[j][0], decode[j][1]);\n     dest[destOffset + j] = Math.min(Math.max(rj, range[j][0]), range[j][1]);\n    }\n   };\n  },\n  constructInterpolated: function PDFFunction_constructInterpolated(str, dict) {\n   var c0 = dict.getArray('C0') || [0];\n   var c1 = dict.getArray('C1') || [1];\n   var n = dict.get('N');\n   if (!isArray(c0) || !isArray(c1)) {\n    error('Illegal dictionary for interpolated function');\n   }\n   var length = c0.length;\n   var diff = [];\n   for (var i = 0; i < length; ++i) {\n    diff.push(c1[i] - c0[i]);\n   }\n   return [\n    CONSTRUCT_INTERPOLATED,\n    c0,\n    diff,\n    n\n   ];\n  },\n  constructInterpolatedFromIR: function PDFFunction_constructInterpolatedFromIR(IR) {\n   var c0 = IR[1];\n   var diff = IR[2];\n   var n = IR[3];\n   var length = diff.length;\n   return function constructInterpolatedFromIRResult(src, srcOffset, dest, destOffset) {\n    var x = n === 1 ? src[srcOffset] : Math.pow(src[srcOffset], n);\n    for (var j = 0; j < length; ++j) {\n     dest[destOffset + j] = c0[j] + x * diff[j];\n    }\n   };\n  },\n  constructStiched: function PDFFunction_constructStiched(fn, dict, xref) {\n   var domain = dict.getArray('Domain');\n   if (!domain) {\n    error('No domain');\n   }\n   var inputSize = domain.length / 2;\n   if (inputSize !== 1) {\n    error('Bad domain for stiched function');\n   }\n   var fnRefs = dict.get('Functions');\n   var fns = [];\n   for (var i = 0, ii = fnRefs.length; i < ii; ++i) {\n    fns.push(PDFFunction.getIR(xref, xref.fetchIfRef(fnRefs[i])));\n   }\n   var bounds = dict.getArray('Bounds');\n   var encode = dict.getArray('Encode');\n   return [\n    CONSTRUCT_STICHED,\n    domain,\n    bounds,\n    encode,\n    fns\n   ];\n  },\n  constructStichedFromIR: function PDFFunction_constructStichedFromIR(IR) {\n   var domain = IR[1];\n   var bounds = IR[2];\n   var encode = IR[3];\n   var fnsIR = IR[4];\n   var fns = [];\n   var tmpBuf = new Float32Array(1);\n   for (var i = 0, ii = fnsIR.length; i < ii; i++) {\n    fns.push(PDFFunction.fromIR(fnsIR[i]));\n   }\n   return function constructStichedFromIRResult(src, srcOffset, dest, destOffset) {\n    var clip = function constructStichedFromIRClip(v, min, max) {\n     if (v > max) {\n      v = max;\n     } else if (v < min) {\n      v = min;\n     }\n     return v;\n    };\n    var v = clip(src[srcOffset], domain[0], domain[1]);\n    for (var i = 0, ii = bounds.length; i < ii; ++i) {\n     if (v < bounds[i]) {\n      break;\n     }\n    }\n    var dmin = domain[0];\n    if (i > 0) {\n     dmin = bounds[i - 1];\n    }\n    var dmax = domain[1];\n    if (i < bounds.length) {\n     dmax = bounds[i];\n    }\n    var rmin = encode[2 * i];\n    var rmax = encode[2 * i + 1];\n    tmpBuf[0] = dmin === dmax ? rmin : rmin + (v - dmin) * (rmax - rmin) / (dmax - dmin);\n    fns[i](tmpBuf, 0, dest, destOffset);\n   };\n  },\n  constructPostScript: function PDFFunction_constructPostScript(fn, dict, xref) {\n   var domain = dict.getArray('Domain');\n   var range = dict.getArray('Range');\n   if (!domain) {\n    error('No domain.');\n   }\n   if (!range) {\n    error('No range.');\n   }\n   var lexer = new PostScriptLexer(fn);\n   var parser = new PostScriptParser(lexer);\n   var code = parser.parse();\n   return [\n    CONSTRUCT_POSTSCRIPT,\n    domain,\n    range,\n    code\n   ];\n  },\n  constructPostScriptFromIR: function PDFFunction_constructPostScriptFromIR(IR) {\n   var domain = IR[1];\n   var range = IR[2];\n   var code = IR[3];\n   var compiled = new PostScriptCompiler().compile(code, domain, range);\n   if (compiled) {\n    return new Function('src', 'srcOffset', 'dest', 'destOffset', compiled);\n   }\n   info('Unable to compile PS function');\n   var numOutputs = range.length >> 1;\n   var numInputs = domain.length >> 1;\n   var evaluator = new PostScriptEvaluator(code);\n   var cache = Object.create(null);\n   var MAX_CACHE_SIZE = 2048 * 4;\n   var cache_available = MAX_CACHE_SIZE;\n   var tmpBuf = new Float32Array(numInputs);\n   return function constructPostScriptFromIRResult(src, srcOffset, dest, destOffset) {\n    var i, value;\n    var key = '';\n    var input = tmpBuf;\n    for (i = 0; i < numInputs; i++) {\n     value = src[srcOffset + i];\n     input[i] = value;\n     key += value + '_';\n    }\n    var cachedValue = cache[key];\n    if (cachedValue !== undefined) {\n     dest.set(cachedValue, destOffset);\n     return;\n    }\n    var output = new Float32Array(numOutputs);\n    var stack = evaluator.execute(input);\n    var stackIndex = stack.length - numOutputs;\n    for (i = 0; i < numOutputs; i++) {\n     value = stack[stackIndex + i];\n     var bound = range[i * 2];\n     if (value < bound) {\n      value = bound;\n     } else {\n      bound = range[i * 2 + 1];\n      if (value > bound) {\n       value = bound;\n      }\n     }\n     output[i] = value;\n    }\n    if (cache_available > 0) {\n     cache_available--;\n     cache[key] = output;\n    }\n    dest.set(output, destOffset);\n   };\n  }\n };\n}();\nfunction isPDFFunction(v) {\n var fnDict;\n if (typeof v !== 'object') {\n  return false;\n } else if (isDict(v)) {\n  fnDict = v;\n } else if (isStream(v)) {\n  fnDict = v.dict;\n } else {\n  return false;\n }\n return fnDict.has('FunctionType');\n}\nvar PostScriptStack = function PostScriptStackClosure() {\n var MAX_STACK_SIZE = 100;\n function PostScriptStack(initialStack) {\n  this.stack = !initialStack ? [] : Array.prototype.slice.call(initialStack, 0);\n }\n PostScriptStack.prototype = {\n  push: function PostScriptStack_push(value) {\n   if (this.stack.length >= MAX_STACK_SIZE) {\n    error('PostScript function stack overflow.');\n   }\n   this.stack.push(value);\n  },\n  pop: function PostScriptStack_pop() {\n   if (this.stack.length <= 0) {\n    error('PostScript function stack underflow.');\n   }\n   return this.stack.pop();\n  },\n  copy: function PostScriptStack_copy(n) {\n   if (this.stack.length + n >= MAX_STACK_SIZE) {\n    error('PostScript function stack overflow.');\n   }\n   var stack = this.stack;\n   for (var i = stack.length - n, j = n - 1; j >= 0; j--, i++) {\n    stack.push(stack[i]);\n   }\n  },\n  index: function PostScriptStack_index(n) {\n   this.push(this.stack[this.stack.length - n - 1]);\n  },\n  roll: function PostScriptStack_roll(n, p) {\n   var stack = this.stack;\n   var l = stack.length - n;\n   var r = stack.length - 1, c = l + (p - Math.floor(p / n) * n), i, j, t;\n   for (i = l, j = r; i < j; i++, j--) {\n    t = stack[i];\n    stack[i] = stack[j];\n    stack[j] = t;\n   }\n   for (i = l, j = c - 1; i < j; i++, j--) {\n    t = stack[i];\n    stack[i] = stack[j];\n    stack[j] = t;\n   }\n   for (i = c, j = r; i < j; i++, j--) {\n    t = stack[i];\n    stack[i] = stack[j];\n    stack[j] = t;\n   }\n  }\n };\n return PostScriptStack;\n}();\nvar PostScriptEvaluator = function PostScriptEvaluatorClosure() {\n function PostScriptEvaluator(operators) {\n  this.operators = operators;\n }\n PostScriptEvaluator.prototype = {\n  execute: function PostScriptEvaluator_execute(initialStack) {\n   var stack = new PostScriptStack(initialStack);\n   var counter = 0;\n   var operators = this.operators;\n   var length = operators.length;\n   var operator, a, b;\n   while (counter < length) {\n    operator = operators[counter++];\n    if (typeof operator === 'number') {\n     stack.push(operator);\n     continue;\n    }\n    switch (operator) {\n    case 'jz':\n     b = stack.pop();\n     a = stack.pop();\n     if (!a) {\n      counter = b;\n     }\n     break;\n    case 'j':\n     a = stack.pop();\n     counter = a;\n     break;\n    case 'abs':\n     a = stack.pop();\n     stack.push(Math.abs(a));\n     break;\n    case 'add':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(a + b);\n     break;\n    case 'and':\n     b = stack.pop();\n     a = stack.pop();\n     if (isBool(a) && isBool(b)) {\n      stack.push(a && b);\n     } else {\n      stack.push(a & b);\n     }\n     break;\n    case 'atan':\n     a = stack.pop();\n     stack.push(Math.atan(a));\n     break;\n    case 'bitshift':\n     b = stack.pop();\n     a = stack.pop();\n     if (a > 0) {\n      stack.push(a << b);\n     } else {\n      stack.push(a >> b);\n     }\n     break;\n    case 'ceiling':\n     a = stack.pop();\n     stack.push(Math.ceil(a));\n     break;\n    case 'copy':\n     a = stack.pop();\n     stack.copy(a);\n     break;\n    case 'cos':\n     a = stack.pop();\n     stack.push(Math.cos(a));\n     break;\n    case 'cvi':\n     a = stack.pop() | 0;\n     stack.push(a);\n     break;\n    case 'cvr':\n     break;\n    case 'div':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(a / b);\n     break;\n    case 'dup':\n     stack.copy(1);\n     break;\n    case 'eq':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(a === b);\n     break;\n    case 'exch':\n     stack.roll(2, 1);\n     break;\n    case 'exp':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(Math.pow(a, b));\n     break;\n    case 'false':\n     stack.push(false);\n     break;\n    case 'floor':\n     a = stack.pop();\n     stack.push(Math.floor(a));\n     break;\n    case 'ge':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(a >= b);\n     break;\n    case 'gt':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(a > b);\n     break;\n    case 'idiv':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(a / b | 0);\n     break;\n    case 'index':\n     a = stack.pop();\n     stack.index(a);\n     break;\n    case 'le':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(a <= b);\n     break;\n    case 'ln':\n     a = stack.pop();\n     stack.push(Math.log(a));\n     break;\n    case 'log':\n     a = stack.pop();\n     stack.push(Math.log(a) / Math.LN10);\n     break;\n    case 'lt':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(a < b);\n     break;\n    case 'mod':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(a % b);\n     break;\n    case 'mul':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(a * b);\n     break;\n    case 'ne':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(a !== b);\n     break;\n    case 'neg':\n     a = stack.pop();\n     stack.push(-a);\n     break;\n    case 'not':\n     a = stack.pop();\n     if (isBool(a)) {\n      stack.push(!a);\n     } else {\n      stack.push(~a);\n     }\n     break;\n    case 'or':\n     b = stack.pop();\n     a = stack.pop();\n     if (isBool(a) && isBool(b)) {\n      stack.push(a || b);\n     } else {\n      stack.push(a | b);\n     }\n     break;\n    case 'pop':\n     stack.pop();\n     break;\n    case 'roll':\n     b = stack.pop();\n     a = stack.pop();\n     stack.roll(a, b);\n     break;\n    case 'round':\n     a = stack.pop();\n     stack.push(Math.round(a));\n     break;\n    case 'sin':\n     a = stack.pop();\n     stack.push(Math.sin(a));\n     break;\n    case 'sqrt':\n     a = stack.pop();\n     stack.push(Math.sqrt(a));\n     break;\n    case 'sub':\n     b = stack.pop();\n     a = stack.pop();\n     stack.push(a - b);\n     break;\n    case 'true':\n     stack.push(true);\n     break;\n    case 'truncate':\n     a = stack.pop();\n     a = a < 0 ? Math.ceil(a) : Math.floor(a);\n     stack.push(a);\n     break;\n    case 'xor':\n     b = stack.pop();\n     a = stack.pop();\n     if (isBool(a) && isBool(b)) {\n      stack.push(a !== b);\n     } else {\n      stack.push(a ^ b);\n     }\n     break;\n    default:\n     error('Unknown operator ' + operator);\n     break;\n    }\n   }\n   return stack.stack;\n  }\n };\n return PostScriptEvaluator;\n}();\nvar PostScriptCompiler = function PostScriptCompilerClosure() {\n function AstNode(type) {\n  this.type = type;\n }\n AstNode.prototype.visit = function (visitor) {\n  throw new Error('abstract method');\n };\n function AstArgument(index, min, max) {\n  AstNode.call(this, 'args');\n  this.index = index;\n  this.min = min;\n  this.max = max;\n }\n AstArgument.prototype = Object.create(AstNode.prototype);\n AstArgument.prototype.visit = function (visitor) {\n  visitor.visitArgument(this);\n };\n function AstLiteral(number) {\n  AstNode.call(this, 'literal');\n  this.number = number;\n  this.min = number;\n  this.max = number;\n }\n AstLiteral.prototype = Object.create(AstNode.prototype);\n AstLiteral.prototype.visit = function (visitor) {\n  visitor.visitLiteral(this);\n };\n function AstBinaryOperation(op, arg1, arg2, min, max) {\n  AstNode.call(this, 'binary');\n  this.op = op;\n  this.arg1 = arg1;\n  this.arg2 = arg2;\n  this.min = min;\n  this.max = max;\n }\n AstBinaryOperation.prototype = Object.create(AstNode.prototype);\n AstBinaryOperation.prototype.visit = function (visitor) {\n  visitor.visitBinaryOperation(this);\n };\n function AstMin(arg, max) {\n  AstNode.call(this, 'max');\n  this.arg = arg;\n  this.min = arg.min;\n  this.max = max;\n }\n AstMin.prototype = Object.create(AstNode.prototype);\n AstMin.prototype.visit = function (visitor) {\n  visitor.visitMin(this);\n };\n function AstVariable(index, min, max) {\n  AstNode.call(this, 'var');\n  this.index = index;\n  this.min = min;\n  this.max = max;\n }\n AstVariable.prototype = Object.create(AstNode.prototype);\n AstVariable.prototype.visit = function (visitor) {\n  visitor.visitVariable(this);\n };\n function AstVariableDefinition(variable, arg) {\n  AstNode.call(this, 'definition');\n  this.variable = variable;\n  this.arg = arg;\n }\n AstVariableDefinition.prototype = Object.create(AstNode.prototype);\n AstVariableDefinition.prototype.visit = function (visitor) {\n  visitor.visitVariableDefinition(this);\n };\n function ExpressionBuilderVisitor() {\n  this.parts = [];\n }\n ExpressionBuilderVisitor.prototype = {\n  visitArgument: function (arg) {\n   this.parts.push('Math.max(', arg.min, ', Math.min(', arg.max, ', src[srcOffset + ', arg.index, ']))');\n  },\n  visitVariable: function (variable) {\n   this.parts.push('v', variable.index);\n  },\n  visitLiteral: function (literal) {\n   this.parts.push(literal.number);\n  },\n  visitBinaryOperation: function (operation) {\n   this.parts.push('(');\n   operation.arg1.visit(this);\n   this.parts.push(' ', operation.op, ' ');\n   operation.arg2.visit(this);\n   this.parts.push(')');\n  },\n  visitVariableDefinition: function (definition) {\n   this.parts.push('var ');\n   definition.variable.visit(this);\n   this.parts.push(' = ');\n   definition.arg.visit(this);\n   this.parts.push(';');\n  },\n  visitMin: function (max) {\n   this.parts.push('Math.min(');\n   max.arg.visit(this);\n   this.parts.push(', ', max.max, ')');\n  },\n  toString: function () {\n   return this.parts.join('');\n  }\n };\n function buildAddOperation(num1, num2) {\n  if (num2.type === 'literal' && num2.number === 0) {\n   return num1;\n  }\n  if (num1.type === 'literal' && num1.number === 0) {\n   return num2;\n  }\n  if (num2.type === 'literal' && num1.type === 'literal') {\n   return new AstLiteral(num1.number + num2.number);\n  }\n  return new AstBinaryOperation('+', num1, num2, num1.min + num2.min, num1.max + num2.max);\n }\n function buildMulOperation(num1, num2) {\n  if (num2.type === 'literal') {\n   if (num2.number === 0) {\n    return new AstLiteral(0);\n   } else if (num2.number === 1) {\n    return num1;\n   } else if (num1.type === 'literal') {\n    return new AstLiteral(num1.number * num2.number);\n   }\n  }\n  if (num1.type === 'literal') {\n   if (num1.number === 0) {\n    return new AstLiteral(0);\n   } else if (num1.number === 1) {\n    return num2;\n   }\n  }\n  var min = Math.min(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n  var max = Math.max(num1.min * num2.min, num1.min * num2.max, num1.max * num2.min, num1.max * num2.max);\n  return new AstBinaryOperation('*', num1, num2, min, max);\n }\n function buildSubOperation(num1, num2) {\n  if (num2.type === 'literal') {\n   if (num2.number === 0) {\n    return num1;\n   } else if (num1.type === 'literal') {\n    return new AstLiteral(num1.number - num2.number);\n   }\n  }\n  if (num2.type === 'binary' && num2.op === '-' && num1.type === 'literal' && num1.number === 1 && num2.arg1.type === 'literal' && num2.arg1.number === 1) {\n   return num2.arg2;\n  }\n  return new AstBinaryOperation('-', num1, num2, num1.min - num2.max, num1.max - num2.min);\n }\n function buildMinOperation(num1, max) {\n  if (num1.min >= max) {\n   return new AstLiteral(max);\n  } else if (num1.max <= max) {\n   return num1;\n  }\n  return new AstMin(num1, max);\n }\n function PostScriptCompiler() {\n }\n PostScriptCompiler.prototype = {\n  compile: function PostScriptCompiler_compile(code, domain, range) {\n   var stack = [];\n   var i, ii;\n   var instructions = [];\n   var inputSize = domain.length >> 1, outputSize = range.length >> 1;\n   var lastRegister = 0;\n   var n, j;\n   var num1, num2, ast1, ast2, tmpVar, item;\n   for (i = 0; i < inputSize; i++) {\n    stack.push(new AstArgument(i, domain[i * 2], domain[i * 2 + 1]));\n   }\n   for (i = 0, ii = code.length; i < ii; i++) {\n    item = code[i];\n    if (typeof item === 'number') {\n     stack.push(new AstLiteral(item));\n     continue;\n    }\n    switch (item) {\n    case 'add':\n     if (stack.length < 2) {\n      return null;\n     }\n     num2 = stack.pop();\n     num1 = stack.pop();\n     stack.push(buildAddOperation(num1, num2));\n     break;\n    case 'cvr':\n     if (stack.length < 1) {\n      return null;\n     }\n     break;\n    case 'mul':\n     if (stack.length < 2) {\n      return null;\n     }\n     num2 = stack.pop();\n     num1 = stack.pop();\n     stack.push(buildMulOperation(num1, num2));\n     break;\n    case 'sub':\n     if (stack.length < 2) {\n      return null;\n     }\n     num2 = stack.pop();\n     num1 = stack.pop();\n     stack.push(buildSubOperation(num1, num2));\n     break;\n    case 'exch':\n     if (stack.length < 2) {\n      return null;\n     }\n     ast1 = stack.pop();\n     ast2 = stack.pop();\n     stack.push(ast1, ast2);\n     break;\n    case 'pop':\n     if (stack.length < 1) {\n      return null;\n     }\n     stack.pop();\n     break;\n    case 'index':\n     if (stack.length < 1) {\n      return null;\n     }\n     num1 = stack.pop();\n     if (num1.type !== 'literal') {\n      return null;\n     }\n     n = num1.number;\n     if (n < 0 || (n | 0) !== n || stack.length < n) {\n      return null;\n     }\n     ast1 = stack[stack.length - n - 1];\n     if (ast1.type === 'literal' || ast1.type === 'var') {\n      stack.push(ast1);\n      break;\n     }\n     tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n     stack[stack.length - n - 1] = tmpVar;\n     stack.push(tmpVar);\n     instructions.push(new AstVariableDefinition(tmpVar, ast1));\n     break;\n    case 'dup':\n     if (stack.length < 1) {\n      return null;\n     }\n     if (typeof code[i + 1] === 'number' && code[i + 2] === 'gt' && code[i + 3] === i + 7 && code[i + 4] === 'jz' && code[i + 5] === 'pop' && code[i + 6] === code[i + 1]) {\n      num1 = stack.pop();\n      stack.push(buildMinOperation(num1, code[i + 1]));\n      i += 6;\n      break;\n     }\n     ast1 = stack[stack.length - 1];\n     if (ast1.type === 'literal' || ast1.type === 'var') {\n      stack.push(ast1);\n      break;\n     }\n     tmpVar = new AstVariable(lastRegister++, ast1.min, ast1.max);\n     stack[stack.length - 1] = tmpVar;\n     stack.push(tmpVar);\n     instructions.push(new AstVariableDefinition(tmpVar, ast1));\n     break;\n    case 'roll':\n     if (stack.length < 2) {\n      return null;\n     }\n     num2 = stack.pop();\n     num1 = stack.pop();\n     if (num2.type !== 'literal' || num1.type !== 'literal') {\n      return null;\n     }\n     j = num2.number;\n     n = num1.number;\n     if (n <= 0 || (n | 0) !== n || (j | 0) !== j || stack.length < n) {\n      return null;\n     }\n     j = (j % n + n) % n;\n     if (j === 0) {\n      break;\n     }\n     Array.prototype.push.apply(stack, stack.splice(stack.length - n, n - j));\n     break;\n    default:\n     return null;\n    }\n   }\n   if (stack.length !== outputSize) {\n    return null;\n   }\n   var result = [];\n   instructions.forEach(function (instruction) {\n    var statementBuilder = new ExpressionBuilderVisitor();\n    instruction.visit(statementBuilder);\n    result.push(statementBuilder.toString());\n   });\n   stack.forEach(function (expr, i) {\n    var statementBuilder = new ExpressionBuilderVisitor();\n    expr.visit(statementBuilder);\n    var min = range[i * 2], max = range[i * 2 + 1];\n    var out = [statementBuilder.toString()];\n    if (min > expr.min) {\n     out.unshift('Math.max(', min, ', ');\n     out.push(')');\n    }\n    if (max < expr.max) {\n     out.unshift('Math.min(', max, ', ');\n     out.push(')');\n    }\n    out.unshift('dest[destOffset + ', i, '] = ');\n    out.push(';');\n    result.push(out.join(''));\n   });\n   return result.join('\\n');\n  }\n };\n return PostScriptCompiler;\n}();\nexports.isPDFFunction = isPDFFunction;\nexports.PDFFunction = PDFFunction;\nexports.PostScriptEvaluator = PostScriptEvaluator;\nexports.PostScriptCompiler = PostScriptCompiler;\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar getLookupTableFactory = sharedUtil.getLookupTableFactory;\nvar getGlyphsUnicode = getLookupTableFactory(function (t) {\n t['A'] = 0x0041;\n t['AE'] = 0x00C6;\n t['AEacute'] = 0x01FC;\n t['AEmacron'] = 0x01E2;\n t['AEsmall'] = 0xF7E6;\n t['Aacute'] = 0x00C1;\n t['Aacutesmall'] = 0xF7E1;\n t['Abreve'] = 0x0102;\n t['Abreveacute'] = 0x1EAE;\n t['Abrevecyrillic'] = 0x04D0;\n t['Abrevedotbelow'] = 0x1EB6;\n t['Abrevegrave'] = 0x1EB0;\n t['Abrevehookabove'] = 0x1EB2;\n t['Abrevetilde'] = 0x1EB4;\n t['Acaron'] = 0x01CD;\n t['Acircle'] = 0x24B6;\n t['Acircumflex'] = 0x00C2;\n t['Acircumflexacute'] = 0x1EA4;\n t['Acircumflexdotbelow'] = 0x1EAC;\n t['Acircumflexgrave'] = 0x1EA6;\n t['Acircumflexhookabove'] = 0x1EA8;\n t['Acircumflexsmall'] = 0xF7E2;\n t['Acircumflextilde'] = 0x1EAA;\n t['Acute'] = 0xF6C9;\n t['Acutesmall'] = 0xF7B4;\n t['Acyrillic'] = 0x0410;\n t['Adblgrave'] = 0x0200;\n t['Adieresis'] = 0x00C4;\n t['Adieresiscyrillic'] = 0x04D2;\n t['Adieresismacron'] = 0x01DE;\n t['Adieresissmall'] = 0xF7E4;\n t['Adotbelow'] = 0x1EA0;\n t['Adotmacron'] = 0x01E0;\n t['Agrave'] = 0x00C0;\n t['Agravesmall'] = 0xF7E0;\n t['Ahookabove'] = 0x1EA2;\n t['Aiecyrillic'] = 0x04D4;\n t['Ainvertedbreve'] = 0x0202;\n t['Alpha'] = 0x0391;\n t['Alphatonos'] = 0x0386;\n t['Amacron'] = 0x0100;\n t['Amonospace'] = 0xFF21;\n t['Aogonek'] = 0x0104;\n t['Aring'] = 0x00C5;\n t['Aringacute'] = 0x01FA;\n t['Aringbelow'] = 0x1E00;\n t['Aringsmall'] = 0xF7E5;\n t['Asmall'] = 0xF761;\n t['Atilde'] = 0x00C3;\n t['Atildesmall'] = 0xF7E3;\n t['Aybarmenian'] = 0x0531;\n t['B'] = 0x0042;\n t['Bcircle'] = 0x24B7;\n t['Bdotaccent'] = 0x1E02;\n t['Bdotbelow'] = 0x1E04;\n t['Becyrillic'] = 0x0411;\n t['Benarmenian'] = 0x0532;\n t['Beta'] = 0x0392;\n t['Bhook'] = 0x0181;\n t['Blinebelow'] = 0x1E06;\n t['Bmonospace'] = 0xFF22;\n t['Brevesmall'] = 0xF6F4;\n t['Bsmall'] = 0xF762;\n t['Btopbar'] = 0x0182;\n t['C'] = 0x0043;\n t['Caarmenian'] = 0x053E;\n t['Cacute'] = 0x0106;\n t['Caron'] = 0xF6CA;\n t['Caronsmall'] = 0xF6F5;\n t['Ccaron'] = 0x010C;\n t['Ccedilla'] = 0x00C7;\n t['Ccedillaacute'] = 0x1E08;\n t['Ccedillasmall'] = 0xF7E7;\n t['Ccircle'] = 0x24B8;\n t['Ccircumflex'] = 0x0108;\n t['Cdot'] = 0x010A;\n t['Cdotaccent'] = 0x010A;\n t['Cedillasmall'] = 0xF7B8;\n t['Chaarmenian'] = 0x0549;\n t['Cheabkhasiancyrillic'] = 0x04BC;\n t['Checyrillic'] = 0x0427;\n t['Chedescenderabkhasiancyrillic'] = 0x04BE;\n t['Chedescendercyrillic'] = 0x04B6;\n t['Chedieresiscyrillic'] = 0x04F4;\n t['Cheharmenian'] = 0x0543;\n t['Chekhakassiancyrillic'] = 0x04CB;\n t['Cheverticalstrokecyrillic'] = 0x04B8;\n t['Chi'] = 0x03A7;\n t['Chook'] = 0x0187;\n t['Circumflexsmall'] = 0xF6F6;\n t['Cmonospace'] = 0xFF23;\n t['Coarmenian'] = 0x0551;\n t['Csmall'] = 0xF763;\n t['D'] = 0x0044;\n t['DZ'] = 0x01F1;\n t['DZcaron'] = 0x01C4;\n t['Daarmenian'] = 0x0534;\n t['Dafrican'] = 0x0189;\n t['Dcaron'] = 0x010E;\n t['Dcedilla'] = 0x1E10;\n t['Dcircle'] = 0x24B9;\n t['Dcircumflexbelow'] = 0x1E12;\n t['Dcroat'] = 0x0110;\n t['Ddotaccent'] = 0x1E0A;\n t['Ddotbelow'] = 0x1E0C;\n t['Decyrillic'] = 0x0414;\n t['Deicoptic'] = 0x03EE;\n t['Delta'] = 0x2206;\n t['Deltagreek'] = 0x0394;\n t['Dhook'] = 0x018A;\n t['Dieresis'] = 0xF6CB;\n t['DieresisAcute'] = 0xF6CC;\n t['DieresisGrave'] = 0xF6CD;\n t['Dieresissmall'] = 0xF7A8;\n t['Digammagreek'] = 0x03DC;\n t['Djecyrillic'] = 0x0402;\n t['Dlinebelow'] = 0x1E0E;\n t['Dmonospace'] = 0xFF24;\n t['Dotaccentsmall'] = 0xF6F7;\n t['Dslash'] = 0x0110;\n t['Dsmall'] = 0xF764;\n t['Dtopbar'] = 0x018B;\n t['Dz'] = 0x01F2;\n t['Dzcaron'] = 0x01C5;\n t['Dzeabkhasiancyrillic'] = 0x04E0;\n t['Dzecyrillic'] = 0x0405;\n t['Dzhecyrillic'] = 0x040F;\n t['E'] = 0x0045;\n t['Eacute'] = 0x00C9;\n t['Eacutesmall'] = 0xF7E9;\n t['Ebreve'] = 0x0114;\n t['Ecaron'] = 0x011A;\n t['Ecedillabreve'] = 0x1E1C;\n t['Echarmenian'] = 0x0535;\n t['Ecircle'] = 0x24BA;\n t['Ecircumflex'] = 0x00CA;\n t['Ecircumflexacute'] = 0x1EBE;\n t['Ecircumflexbelow'] = 0x1E18;\n t['Ecircumflexdotbelow'] = 0x1EC6;\n t['Ecircumflexgrave'] = 0x1EC0;\n t['Ecircumflexhookabove'] = 0x1EC2;\n t['Ecircumflexsmall'] = 0xF7EA;\n t['Ecircumflextilde'] = 0x1EC4;\n t['Ecyrillic'] = 0x0404;\n t['Edblgrave'] = 0x0204;\n t['Edieresis'] = 0x00CB;\n t['Edieresissmall'] = 0xF7EB;\n t['Edot'] = 0x0116;\n t['Edotaccent'] = 0x0116;\n t['Edotbelow'] = 0x1EB8;\n t['Efcyrillic'] = 0x0424;\n t['Egrave'] = 0x00C8;\n t['Egravesmall'] = 0xF7E8;\n t['Eharmenian'] = 0x0537;\n t['Ehookabove'] = 0x1EBA;\n t['Eightroman'] = 0x2167;\n t['Einvertedbreve'] = 0x0206;\n t['Eiotifiedcyrillic'] = 0x0464;\n t['Elcyrillic'] = 0x041B;\n t['Elevenroman'] = 0x216A;\n t['Emacron'] = 0x0112;\n t['Emacronacute'] = 0x1E16;\n t['Emacrongrave'] = 0x1E14;\n t['Emcyrillic'] = 0x041C;\n t['Emonospace'] = 0xFF25;\n t['Encyrillic'] = 0x041D;\n t['Endescendercyrillic'] = 0x04A2;\n t['Eng'] = 0x014A;\n t['Enghecyrillic'] = 0x04A4;\n t['Enhookcyrillic'] = 0x04C7;\n t['Eogonek'] = 0x0118;\n t['Eopen'] = 0x0190;\n t['Epsilon'] = 0x0395;\n t['Epsilontonos'] = 0x0388;\n t['Ercyrillic'] = 0x0420;\n t['Ereversed'] = 0x018E;\n t['Ereversedcyrillic'] = 0x042D;\n t['Escyrillic'] = 0x0421;\n t['Esdescendercyrillic'] = 0x04AA;\n t['Esh'] = 0x01A9;\n t['Esmall'] = 0xF765;\n t['Eta'] = 0x0397;\n t['Etarmenian'] = 0x0538;\n t['Etatonos'] = 0x0389;\n t['Eth'] = 0x00D0;\n t['Ethsmall'] = 0xF7F0;\n t['Etilde'] = 0x1EBC;\n t['Etildebelow'] = 0x1E1A;\n t['Euro'] = 0x20AC;\n t['Ezh'] = 0x01B7;\n t['Ezhcaron'] = 0x01EE;\n t['Ezhreversed'] = 0x01B8;\n t['F'] = 0x0046;\n t['Fcircle'] = 0x24BB;\n t['Fdotaccent'] = 0x1E1E;\n t['Feharmenian'] = 0x0556;\n t['Feicoptic'] = 0x03E4;\n t['Fhook'] = 0x0191;\n t['Fitacyrillic'] = 0x0472;\n t['Fiveroman'] = 0x2164;\n t['Fmonospace'] = 0xFF26;\n t['Fourroman'] = 0x2163;\n t['Fsmall'] = 0xF766;\n t['G'] = 0x0047;\n t['GBsquare'] = 0x3387;\n t['Gacute'] = 0x01F4;\n t['Gamma'] = 0x0393;\n t['Gammaafrican'] = 0x0194;\n t['Gangiacoptic'] = 0x03EA;\n t['Gbreve'] = 0x011E;\n t['Gcaron'] = 0x01E6;\n t['Gcedilla'] = 0x0122;\n t['Gcircle'] = 0x24BC;\n t['Gcircumflex'] = 0x011C;\n t['Gcommaaccent'] = 0x0122;\n t['Gdot'] = 0x0120;\n t['Gdotaccent'] = 0x0120;\n t['Gecyrillic'] = 0x0413;\n t['Ghadarmenian'] = 0x0542;\n t['Ghemiddlehookcyrillic'] = 0x0494;\n t['Ghestrokecyrillic'] = 0x0492;\n t['Gheupturncyrillic'] = 0x0490;\n t['Ghook'] = 0x0193;\n t['Gimarmenian'] = 0x0533;\n t['Gjecyrillic'] = 0x0403;\n t['Gmacron'] = 0x1E20;\n t['Gmonospace'] = 0xFF27;\n t['Grave'] = 0xF6CE;\n t['Gravesmall'] = 0xF760;\n t['Gsmall'] = 0xF767;\n t['Gsmallhook'] = 0x029B;\n t['Gstroke'] = 0x01E4;\n t['H'] = 0x0048;\n t['H18533'] = 0x25CF;\n t['H18543'] = 0x25AA;\n t['H18551'] = 0x25AB;\n t['H22073'] = 0x25A1;\n t['HPsquare'] = 0x33CB;\n t['Haabkhasiancyrillic'] = 0x04A8;\n t['Hadescendercyrillic'] = 0x04B2;\n t['Hardsigncyrillic'] = 0x042A;\n t['Hbar'] = 0x0126;\n t['Hbrevebelow'] = 0x1E2A;\n t['Hcedilla'] = 0x1E28;\n t['Hcircle'] = 0x24BD;\n t['Hcircumflex'] = 0x0124;\n t['Hdieresis'] = 0x1E26;\n t['Hdotaccent'] = 0x1E22;\n t['Hdotbelow'] = 0x1E24;\n t['Hmonospace'] = 0xFF28;\n t['Hoarmenian'] = 0x0540;\n t['Horicoptic'] = 0x03E8;\n t['Hsmall'] = 0xF768;\n t['Hungarumlaut'] = 0xF6CF;\n t['Hungarumlautsmall'] = 0xF6F8;\n t['Hzsquare'] = 0x3390;\n t['I'] = 0x0049;\n t['IAcyrillic'] = 0x042F;\n t['IJ'] = 0x0132;\n t['IUcyrillic'] = 0x042E;\n t['Iacute'] = 0x00CD;\n t['Iacutesmall'] = 0xF7ED;\n t['Ibreve'] = 0x012C;\n t['Icaron'] = 0x01CF;\n t['Icircle'] = 0x24BE;\n t['Icircumflex'] = 0x00CE;\n t['Icircumflexsmall'] = 0xF7EE;\n t['Icyrillic'] = 0x0406;\n t['Idblgrave'] = 0x0208;\n t['Idieresis'] = 0x00CF;\n t['Idieresisacute'] = 0x1E2E;\n t['Idieresiscyrillic'] = 0x04E4;\n t['Idieresissmall'] = 0xF7EF;\n t['Idot'] = 0x0130;\n t['Idotaccent'] = 0x0130;\n t['Idotbelow'] = 0x1ECA;\n t['Iebrevecyrillic'] = 0x04D6;\n t['Iecyrillic'] = 0x0415;\n t['Ifraktur'] = 0x2111;\n t['Igrave'] = 0x00CC;\n t['Igravesmall'] = 0xF7EC;\n t['Ihookabove'] = 0x1EC8;\n t['Iicyrillic'] = 0x0418;\n t['Iinvertedbreve'] = 0x020A;\n t['Iishortcyrillic'] = 0x0419;\n t['Imacron'] = 0x012A;\n t['Imacroncyrillic'] = 0x04E2;\n t['Imonospace'] = 0xFF29;\n t['Iniarmenian'] = 0x053B;\n t['Iocyrillic'] = 0x0401;\n t['Iogonek'] = 0x012E;\n t['Iota'] = 0x0399;\n t['Iotaafrican'] = 0x0196;\n t['Iotadieresis'] = 0x03AA;\n t['Iotatonos'] = 0x038A;\n t['Ismall'] = 0xF769;\n t['Istroke'] = 0x0197;\n t['Itilde'] = 0x0128;\n t['Itildebelow'] = 0x1E2C;\n t['Izhitsacyrillic'] = 0x0474;\n t['Izhitsadblgravecyrillic'] = 0x0476;\n t['J'] = 0x004A;\n t['Jaarmenian'] = 0x0541;\n t['Jcircle'] = 0x24BF;\n t['Jcircumflex'] = 0x0134;\n t['Jecyrillic'] = 0x0408;\n t['Jheharmenian'] = 0x054B;\n t['Jmonospace'] = 0xFF2A;\n t['Jsmall'] = 0xF76A;\n t['K'] = 0x004B;\n t['KBsquare'] = 0x3385;\n t['KKsquare'] = 0x33CD;\n t['Kabashkircyrillic'] = 0x04A0;\n t['Kacute'] = 0x1E30;\n t['Kacyrillic'] = 0x041A;\n t['Kadescendercyrillic'] = 0x049A;\n t['Kahookcyrillic'] = 0x04C3;\n t['Kappa'] = 0x039A;\n t['Kastrokecyrillic'] = 0x049E;\n t['Kaverticalstrokecyrillic'] = 0x049C;\n t['Kcaron'] = 0x01E8;\n t['Kcedilla'] = 0x0136;\n t['Kcircle'] = 0x24C0;\n t['Kcommaaccent'] = 0x0136;\n t['Kdotbelow'] = 0x1E32;\n t['Keharmenian'] = 0x0554;\n t['Kenarmenian'] = 0x053F;\n t['Khacyrillic'] = 0x0425;\n t['Kheicoptic'] = 0x03E6;\n t['Khook'] = 0x0198;\n t['Kjecyrillic'] = 0x040C;\n t['Klinebelow'] = 0x1E34;\n t['Kmonospace'] = 0xFF2B;\n t['Koppacyrillic'] = 0x0480;\n t['Koppagreek'] = 0x03DE;\n t['Ksicyrillic'] = 0x046E;\n t['Ksmall'] = 0xF76B;\n t['L'] = 0x004C;\n t['LJ'] = 0x01C7;\n t['LL'] = 0xF6BF;\n t['Lacute'] = 0x0139;\n t['Lambda'] = 0x039B;\n t['Lcaron'] = 0x013D;\n t['Lcedilla'] = 0x013B;\n t['Lcircle'] = 0x24C1;\n t['Lcircumflexbelow'] = 0x1E3C;\n t['Lcommaaccent'] = 0x013B;\n t['Ldot'] = 0x013F;\n t['Ldotaccent'] = 0x013F;\n t['Ldotbelow'] = 0x1E36;\n t['Ldotbelowmacron'] = 0x1E38;\n t['Liwnarmenian'] = 0x053C;\n t['Lj'] = 0x01C8;\n t['Ljecyrillic'] = 0x0409;\n t['Llinebelow'] = 0x1E3A;\n t['Lmonospace'] = 0xFF2C;\n t['Lslash'] = 0x0141;\n t['Lslashsmall'] = 0xF6F9;\n t['Lsmall'] = 0xF76C;\n t['M'] = 0x004D;\n t['MBsquare'] = 0x3386;\n t['Macron'] = 0xF6D0;\n t['Macronsmall'] = 0xF7AF;\n t['Macute'] = 0x1E3E;\n t['Mcircle'] = 0x24C2;\n t['Mdotaccent'] = 0x1E40;\n t['Mdotbelow'] = 0x1E42;\n t['Menarmenian'] = 0x0544;\n t['Mmonospace'] = 0xFF2D;\n t['Msmall'] = 0xF76D;\n t['Mturned'] = 0x019C;\n t['Mu'] = 0x039C;\n t['N'] = 0x004E;\n t['NJ'] = 0x01CA;\n t['Nacute'] = 0x0143;\n t['Ncaron'] = 0x0147;\n t['Ncedilla'] = 0x0145;\n t['Ncircle'] = 0x24C3;\n t['Ncircumflexbelow'] = 0x1E4A;\n t['Ncommaaccent'] = 0x0145;\n t['Ndotaccent'] = 0x1E44;\n t['Ndotbelow'] = 0x1E46;\n t['Nhookleft'] = 0x019D;\n t['Nineroman'] = 0x2168;\n t['Nj'] = 0x01CB;\n t['Njecyrillic'] = 0x040A;\n t['Nlinebelow'] = 0x1E48;\n t['Nmonospace'] = 0xFF2E;\n t['Nowarmenian'] = 0x0546;\n t['Nsmall'] = 0xF76E;\n t['Ntilde'] = 0x00D1;\n t['Ntildesmall'] = 0xF7F1;\n t['Nu'] = 0x039D;\n t['O'] = 0x004F;\n t['OE'] = 0x0152;\n t['OEsmall'] = 0xF6FA;\n t['Oacute'] = 0x00D3;\n t['Oacutesmall'] = 0xF7F3;\n t['Obarredcyrillic'] = 0x04E8;\n t['Obarreddieresiscyrillic'] = 0x04EA;\n t['Obreve'] = 0x014E;\n t['Ocaron'] = 0x01D1;\n t['Ocenteredtilde'] = 0x019F;\n t['Ocircle'] = 0x24C4;\n t['Ocircumflex'] = 0x00D4;\n t['Ocircumflexacute'] = 0x1ED0;\n t['Ocircumflexdotbelow'] = 0x1ED8;\n t['Ocircumflexgrave'] = 0x1ED2;\n t['Ocircumflexhookabove'] = 0x1ED4;\n t['Ocircumflexsmall'] = 0xF7F4;\n t['Ocircumflextilde'] = 0x1ED6;\n t['Ocyrillic'] = 0x041E;\n t['Odblacute'] = 0x0150;\n t['Odblgrave'] = 0x020C;\n t['Odieresis'] = 0x00D6;\n t['Odieresiscyrillic'] = 0x04E6;\n t['Odieresissmall'] = 0xF7F6;\n t['Odotbelow'] = 0x1ECC;\n t['Ogoneksmall'] = 0xF6FB;\n t['Ograve'] = 0x00D2;\n t['Ogravesmall'] = 0xF7F2;\n t['Oharmenian'] = 0x0555;\n t['Ohm'] = 0x2126;\n t['Ohookabove'] = 0x1ECE;\n t['Ohorn'] = 0x01A0;\n t['Ohornacute'] = 0x1EDA;\n t['Ohorndotbelow'] = 0x1EE2;\n t['Ohorngrave'] = 0x1EDC;\n t['Ohornhookabove'] = 0x1EDE;\n t['Ohorntilde'] = 0x1EE0;\n t['Ohungarumlaut'] = 0x0150;\n t['Oi'] = 0x01A2;\n t['Oinvertedbreve'] = 0x020E;\n t['Omacron'] = 0x014C;\n t['Omacronacute'] = 0x1E52;\n t['Omacrongrave'] = 0x1E50;\n t['Omega'] = 0x2126;\n t['Omegacyrillic'] = 0x0460;\n t['Omegagreek'] = 0x03A9;\n t['Omegaroundcyrillic'] = 0x047A;\n t['Omegatitlocyrillic'] = 0x047C;\n t['Omegatonos'] = 0x038F;\n t['Omicron'] = 0x039F;\n t['Omicrontonos'] = 0x038C;\n t['Omonospace'] = 0xFF2F;\n t['Oneroman'] = 0x2160;\n t['Oogonek'] = 0x01EA;\n t['Oogonekmacron'] = 0x01EC;\n t['Oopen'] = 0x0186;\n t['Oslash'] = 0x00D8;\n t['Oslashacute'] = 0x01FE;\n t['Oslashsmall'] = 0xF7F8;\n t['Osmall'] = 0xF76F;\n t['Ostrokeacute'] = 0x01FE;\n t['Otcyrillic'] = 0x047E;\n t['Otilde'] = 0x00D5;\n t['Otildeacute'] = 0x1E4C;\n t['Otildedieresis'] = 0x1E4E;\n t['Otildesmall'] = 0xF7F5;\n t['P'] = 0x0050;\n t['Pacute'] = 0x1E54;\n t['Pcircle'] = 0x24C5;\n t['Pdotaccent'] = 0x1E56;\n t['Pecyrillic'] = 0x041F;\n t['Peharmenian'] = 0x054A;\n t['Pemiddlehookcyrillic'] = 0x04A6;\n t['Phi'] = 0x03A6;\n t['Phook'] = 0x01A4;\n t['Pi'] = 0x03A0;\n t['Piwrarmenian'] = 0x0553;\n t['Pmonospace'] = 0xFF30;\n t['Psi'] = 0x03A8;\n t['Psicyrillic'] = 0x0470;\n t['Psmall'] = 0xF770;\n t['Q'] = 0x0051;\n t['Qcircle'] = 0x24C6;\n t['Qmonospace'] = 0xFF31;\n t['Qsmall'] = 0xF771;\n t['R'] = 0x0052;\n t['Raarmenian'] = 0x054C;\n t['Racute'] = 0x0154;\n t['Rcaron'] = 0x0158;\n t['Rcedilla'] = 0x0156;\n t['Rcircle'] = 0x24C7;\n t['Rcommaaccent'] = 0x0156;\n t['Rdblgrave'] = 0x0210;\n t['Rdotaccent'] = 0x1E58;\n t['Rdotbelow'] = 0x1E5A;\n t['Rdotbelowmacron'] = 0x1E5C;\n t['Reharmenian'] = 0x0550;\n t['Rfraktur'] = 0x211C;\n t['Rho'] = 0x03A1;\n t['Ringsmall'] = 0xF6FC;\n t['Rinvertedbreve'] = 0x0212;\n t['Rlinebelow'] = 0x1E5E;\n t['Rmonospace'] = 0xFF32;\n t['Rsmall'] = 0xF772;\n t['Rsmallinverted'] = 0x0281;\n t['Rsmallinvertedsuperior'] = 0x02B6;\n t['S'] = 0x0053;\n t['SF010000'] = 0x250C;\n t['SF020000'] = 0x2514;\n t['SF030000'] = 0x2510;\n t['SF040000'] = 0x2518;\n t['SF050000'] = 0x253C;\n t['SF060000'] = 0x252C;\n t['SF070000'] = 0x2534;\n t['SF080000'] = 0x251C;\n t['SF090000'] = 0x2524;\n t['SF100000'] = 0x2500;\n t['SF110000'] = 0x2502;\n t['SF190000'] = 0x2561;\n t['SF200000'] = 0x2562;\n t['SF210000'] = 0x2556;\n t['SF220000'] = 0x2555;\n t['SF230000'] = 0x2563;\n t['SF240000'] = 0x2551;\n t['SF250000'] = 0x2557;\n t['SF260000'] = 0x255D;\n t['SF270000'] = 0x255C;\n t['SF280000'] = 0x255B;\n t['SF360000'] = 0x255E;\n t['SF370000'] = 0x255F;\n t['SF380000'] = 0x255A;\n t['SF390000'] = 0x2554;\n t['SF400000'] = 0x2569;\n t['SF410000'] = 0x2566;\n t['SF420000'] = 0x2560;\n t['SF430000'] = 0x2550;\n t['SF440000'] = 0x256C;\n t['SF450000'] = 0x2567;\n t['SF460000'] = 0x2568;\n t['SF470000'] = 0x2564;\n t['SF480000'] = 0x2565;\n t['SF490000'] = 0x2559;\n t['SF500000'] = 0x2558;\n t['SF510000'] = 0x2552;\n t['SF520000'] = 0x2553;\n t['SF530000'] = 0x256B;\n t['SF540000'] = 0x256A;\n t['Sacute'] = 0x015A;\n t['Sacutedotaccent'] = 0x1E64;\n t['Sampigreek'] = 0x03E0;\n t['Scaron'] = 0x0160;\n t['Scarondotaccent'] = 0x1E66;\n t['Scaronsmall'] = 0xF6FD;\n t['Scedilla'] = 0x015E;\n t['Schwa'] = 0x018F;\n t['Schwacyrillic'] = 0x04D8;\n t['Schwadieresiscyrillic'] = 0x04DA;\n t['Scircle'] = 0x24C8;\n t['Scircumflex'] = 0x015C;\n t['Scommaaccent'] = 0x0218;\n t['Sdotaccent'] = 0x1E60;\n t['Sdotbelow'] = 0x1E62;\n t['Sdotbelowdotaccent'] = 0x1E68;\n t['Seharmenian'] = 0x054D;\n t['Sevenroman'] = 0x2166;\n t['Shaarmenian'] = 0x0547;\n t['Shacyrillic'] = 0x0428;\n t['Shchacyrillic'] = 0x0429;\n t['Sheicoptic'] = 0x03E2;\n t['Shhacyrillic'] = 0x04BA;\n t['Shimacoptic'] = 0x03EC;\n t['Sigma'] = 0x03A3;\n t['Sixroman'] = 0x2165;\n t['Smonospace'] = 0xFF33;\n t['Softsigncyrillic'] = 0x042C;\n t['Ssmall'] = 0xF773;\n t['Stigmagreek'] = 0x03DA;\n t['T'] = 0x0054;\n t['Tau'] = 0x03A4;\n t['Tbar'] = 0x0166;\n t['Tcaron'] = 0x0164;\n t['Tcedilla'] = 0x0162;\n t['Tcircle'] = 0x24C9;\n t['Tcircumflexbelow'] = 0x1E70;\n t['Tcommaaccent'] = 0x0162;\n t['Tdotaccent'] = 0x1E6A;\n t['Tdotbelow'] = 0x1E6C;\n t['Tecyrillic'] = 0x0422;\n t['Tedescendercyrillic'] = 0x04AC;\n t['Tenroman'] = 0x2169;\n t['Tetsecyrillic'] = 0x04B4;\n t['Theta'] = 0x0398;\n t['Thook'] = 0x01AC;\n t['Thorn'] = 0x00DE;\n t['Thornsmall'] = 0xF7FE;\n t['Threeroman'] = 0x2162;\n t['Tildesmall'] = 0xF6FE;\n t['Tiwnarmenian'] = 0x054F;\n t['Tlinebelow'] = 0x1E6E;\n t['Tmonospace'] = 0xFF34;\n t['Toarmenian'] = 0x0539;\n t['Tonefive'] = 0x01BC;\n t['Tonesix'] = 0x0184;\n t['Tonetwo'] = 0x01A7;\n t['Tretroflexhook'] = 0x01AE;\n t['Tsecyrillic'] = 0x0426;\n t['Tshecyrillic'] = 0x040B;\n t['Tsmall'] = 0xF774;\n t['Twelveroman'] = 0x216B;\n t['Tworoman'] = 0x2161;\n t['U'] = 0x0055;\n t['Uacute'] = 0x00DA;\n t['Uacutesmall'] = 0xF7FA;\n t['Ubreve'] = 0x016C;\n t['Ucaron'] = 0x01D3;\n t['Ucircle'] = 0x24CA;\n t['Ucircumflex'] = 0x00DB;\n t['Ucircumflexbelow'] = 0x1E76;\n t['Ucircumflexsmall'] = 0xF7FB;\n t['Ucyrillic'] = 0x0423;\n t['Udblacute'] = 0x0170;\n t['Udblgrave'] = 0x0214;\n t['Udieresis'] = 0x00DC;\n t['Udieresisacute'] = 0x01D7;\n t['Udieresisbelow'] = 0x1E72;\n t['Udieresiscaron'] = 0x01D9;\n t['Udieresiscyrillic'] = 0x04F0;\n t['Udieresisgrave'] = 0x01DB;\n t['Udieresismacron'] = 0x01D5;\n t['Udieresissmall'] = 0xF7FC;\n t['Udotbelow'] = 0x1EE4;\n t['Ugrave'] = 0x00D9;\n t['Ugravesmall'] = 0xF7F9;\n t['Uhookabove'] = 0x1EE6;\n t['Uhorn'] = 0x01AF;\n t['Uhornacute'] = 0x1EE8;\n t['Uhorndotbelow'] = 0x1EF0;\n t['Uhorngrave'] = 0x1EEA;\n t['Uhornhookabove'] = 0x1EEC;\n t['Uhorntilde'] = 0x1EEE;\n t['Uhungarumlaut'] = 0x0170;\n t['Uhungarumlautcyrillic'] = 0x04F2;\n t['Uinvertedbreve'] = 0x0216;\n t['Ukcyrillic'] = 0x0478;\n t['Umacron'] = 0x016A;\n t['Umacroncyrillic'] = 0x04EE;\n t['Umacrondieresis'] = 0x1E7A;\n t['Umonospace'] = 0xFF35;\n t['Uogonek'] = 0x0172;\n t['Upsilon'] = 0x03A5;\n t['Upsilon1'] = 0x03D2;\n t['Upsilonacutehooksymbolgreek'] = 0x03D3;\n t['Upsilonafrican'] = 0x01B1;\n t['Upsilondieresis'] = 0x03AB;\n t['Upsilondieresishooksymbolgreek'] = 0x03D4;\n t['Upsilonhooksymbol'] = 0x03D2;\n t['Upsilontonos'] = 0x038E;\n t['Uring'] = 0x016E;\n t['Ushortcyrillic'] = 0x040E;\n t['Usmall'] = 0xF775;\n t['Ustraightcyrillic'] = 0x04AE;\n t['Ustraightstrokecyrillic'] = 0x04B0;\n t['Utilde'] = 0x0168;\n t['Utildeacute'] = 0x1E78;\n t['Utildebelow'] = 0x1E74;\n t['V'] = 0x0056;\n t['Vcircle'] = 0x24CB;\n t['Vdotbelow'] = 0x1E7E;\n t['Vecyrillic'] = 0x0412;\n t['Vewarmenian'] = 0x054E;\n t['Vhook'] = 0x01B2;\n t['Vmonospace'] = 0xFF36;\n t['Voarmenian'] = 0x0548;\n t['Vsmall'] = 0xF776;\n t['Vtilde'] = 0x1E7C;\n t['W'] = 0x0057;\n t['Wacute'] = 0x1E82;\n t['Wcircle'] = 0x24CC;\n t['Wcircumflex'] = 0x0174;\n t['Wdieresis'] = 0x1E84;\n t['Wdotaccent'] = 0x1E86;\n t['Wdotbelow'] = 0x1E88;\n t['Wgrave'] = 0x1E80;\n t['Wmonospace'] = 0xFF37;\n t['Wsmall'] = 0xF777;\n t['X'] = 0x0058;\n t['Xcircle'] = 0x24CD;\n t['Xdieresis'] = 0x1E8C;\n t['Xdotaccent'] = 0x1E8A;\n t['Xeharmenian'] = 0x053D;\n t['Xi'] = 0x039E;\n t['Xmonospace'] = 0xFF38;\n t['Xsmall'] = 0xF778;\n t['Y'] = 0x0059;\n t['Yacute'] = 0x00DD;\n t['Yacutesmall'] = 0xF7FD;\n t['Yatcyrillic'] = 0x0462;\n t['Ycircle'] = 0x24CE;\n t['Ycircumflex'] = 0x0176;\n t['Ydieresis'] = 0x0178;\n t['Ydieresissmall'] = 0xF7FF;\n t['Ydotaccent'] = 0x1E8E;\n t['Ydotbelow'] = 0x1EF4;\n t['Yericyrillic'] = 0x042B;\n t['Yerudieresiscyrillic'] = 0x04F8;\n t['Ygrave'] = 0x1EF2;\n t['Yhook'] = 0x01B3;\n t['Yhookabove'] = 0x1EF6;\n t['Yiarmenian'] = 0x0545;\n t['Yicyrillic'] = 0x0407;\n t['Yiwnarmenian'] = 0x0552;\n t['Ymonospace'] = 0xFF39;\n t['Ysmall'] = 0xF779;\n t['Ytilde'] = 0x1EF8;\n t['Yusbigcyrillic'] = 0x046A;\n t['Yusbigiotifiedcyrillic'] = 0x046C;\n t['Yuslittlecyrillic'] = 0x0466;\n t['Yuslittleiotifiedcyrillic'] = 0x0468;\n t['Z'] = 0x005A;\n t['Zaarmenian'] = 0x0536;\n t['Zacute'] = 0x0179;\n t['Zcaron'] = 0x017D;\n t['Zcaronsmall'] = 0xF6FF;\n t['Zcircle'] = 0x24CF;\n t['Zcircumflex'] = 0x1E90;\n t['Zdot'] = 0x017B;\n t['Zdotaccent'] = 0x017B;\n t['Zdotbelow'] = 0x1E92;\n t['Zecyrillic'] = 0x0417;\n t['Zedescendercyrillic'] = 0x0498;\n t['Zedieresiscyrillic'] = 0x04DE;\n t['Zeta'] = 0x0396;\n t['Zhearmenian'] = 0x053A;\n t['Zhebrevecyrillic'] = 0x04C1;\n t['Zhecyrillic'] = 0x0416;\n t['Zhedescendercyrillic'] = 0x0496;\n t['Zhedieresiscyrillic'] = 0x04DC;\n t['Zlinebelow'] = 0x1E94;\n t['Zmonospace'] = 0xFF3A;\n t['Zsmall'] = 0xF77A;\n t['Zstroke'] = 0x01B5;\n t['a'] = 0x0061;\n t['aabengali'] = 0x0986;\n t['aacute'] = 0x00E1;\n t['aadeva'] = 0x0906;\n t['aagujarati'] = 0x0A86;\n t['aagurmukhi'] = 0x0A06;\n t['aamatragurmukhi'] = 0x0A3E;\n t['aarusquare'] = 0x3303;\n t['aavowelsignbengali'] = 0x09BE;\n t['aavowelsigndeva'] = 0x093E;\n t['aavowelsigngujarati'] = 0x0ABE;\n t['abbreviationmarkarmenian'] = 0x055F;\n t['abbreviationsigndeva'] = 0x0970;\n t['abengali'] = 0x0985;\n t['abopomofo'] = 0x311A;\n t['abreve'] = 0x0103;\n t['abreveacute'] = 0x1EAF;\n t['abrevecyrillic'] = 0x04D1;\n t['abrevedotbelow'] = 0x1EB7;\n t['abrevegrave'] = 0x1EB1;\n t['abrevehookabove'] = 0x1EB3;\n t['abrevetilde'] = 0x1EB5;\n t['acaron'] = 0x01CE;\n t['acircle'] = 0x24D0;\n t['acircumflex'] = 0x00E2;\n t['acircumflexacute'] = 0x1EA5;\n t['acircumflexdotbelow'] = 0x1EAD;\n t['acircumflexgrave'] = 0x1EA7;\n t['acircumflexhookabove'] = 0x1EA9;\n t['acircumflextilde'] = 0x1EAB;\n t['acute'] = 0x00B4;\n t['acutebelowcmb'] = 0x0317;\n t['acutecmb'] = 0x0301;\n t['acutecomb'] = 0x0301;\n t['acutedeva'] = 0x0954;\n t['acutelowmod'] = 0x02CF;\n t['acutetonecmb'] = 0x0341;\n t['acyrillic'] = 0x0430;\n t['adblgrave'] = 0x0201;\n t['addakgurmukhi'] = 0x0A71;\n t['adeva'] = 0x0905;\n t['adieresis'] = 0x00E4;\n t['adieresiscyrillic'] = 0x04D3;\n t['adieresismacron'] = 0x01DF;\n t['adotbelow'] = 0x1EA1;\n t['adotmacron'] = 0x01E1;\n t['ae'] = 0x00E6;\n t['aeacute'] = 0x01FD;\n t['aekorean'] = 0x3150;\n t['aemacron'] = 0x01E3;\n t['afii00208'] = 0x2015;\n t['afii08941'] = 0x20A4;\n t['afii10017'] = 0x0410;\n t['afii10018'] = 0x0411;\n t['afii10019'] = 0x0412;\n t['afii10020'] = 0x0413;\n t['afii10021'] = 0x0414;\n t['afii10022'] = 0x0415;\n t['afii10023'] = 0x0401;\n t['afii10024'] = 0x0416;\n t['afii10025'] = 0x0417;\n t['afii10026'] = 0x0418;\n t['afii10027'] = 0x0419;\n t['afii10028'] = 0x041A;\n t['afii10029'] = 0x041B;\n t['afii10030'] = 0x041C;\n t['afii10031'] = 0x041D;\n t['afii10032'] = 0x041E;\n t['afii10033'] = 0x041F;\n t['afii10034'] = 0x0420;\n t['afii10035'] = 0x0421;\n t['afii10036'] = 0x0422;\n t['afii10037'] = 0x0423;\n t['afii10038'] = 0x0424;\n t['afii10039'] = 0x0425;\n t['afii10040'] = 0x0426;\n t['afii10041'] = 0x0427;\n t['afii10042'] = 0x0428;\n t['afii10043'] = 0x0429;\n t['afii10044'] = 0x042A;\n t['afii10045'] = 0x042B;\n t['afii10046'] = 0x042C;\n t['afii10047'] = 0x042D;\n t['afii10048'] = 0x042E;\n t['afii10049'] = 0x042F;\n t['afii10050'] = 0x0490;\n t['afii10051'] = 0x0402;\n t['afii10052'] = 0x0403;\n t['afii10053'] = 0x0404;\n t['afii10054'] = 0x0405;\n t['afii10055'] = 0x0406;\n t['afii10056'] = 0x0407;\n t['afii10057'] = 0x0408;\n t['afii10058'] = 0x0409;\n t['afii10059'] = 0x040A;\n t['afii10060'] = 0x040B;\n t['afii10061'] = 0x040C;\n t['afii10062'] = 0x040E;\n t['afii10063'] = 0xF6C4;\n t['afii10064'] = 0xF6C5;\n t['afii10065'] = 0x0430;\n t['afii10066'] = 0x0431;\n t['afii10067'] = 0x0432;\n t['afii10068'] = 0x0433;\n t['afii10069'] = 0x0434;\n t['afii10070'] = 0x0435;\n t['afii10071'] = 0x0451;\n t['afii10072'] = 0x0436;\n t['afii10073'] = 0x0437;\n t['afii10074'] = 0x0438;\n t['afii10075'] = 0x0439;\n t['afii10076'] = 0x043A;\n t['afii10077'] = 0x043B;\n t['afii10078'] = 0x043C;\n t['afii10079'] = 0x043D;\n t['afii10080'] = 0x043E;\n t['afii10081'] = 0x043F;\n t['afii10082'] = 0x0440;\n t['afii10083'] = 0x0441;\n t['afii10084'] = 0x0442;\n t['afii10085'] = 0x0443;\n t['afii10086'] = 0x0444;\n t['afii10087'] = 0x0445;\n t['afii10088'] = 0x0446;\n t['afii10089'] = 0x0447;\n t['afii10090'] = 0x0448;\n t['afii10091'] = 0x0449;\n t['afii10092'] = 0x044A;\n t['afii10093'] = 0x044B;\n t['afii10094'] = 0x044C;\n t['afii10095'] = 0x044D;\n t['afii10096'] = 0x044E;\n t['afii10097'] = 0x044F;\n t['afii10098'] = 0x0491;\n t['afii10099'] = 0x0452;\n t['afii10100'] = 0x0453;\n t['afii10101'] = 0x0454;\n t['afii10102'] = 0x0455;\n t['afii10103'] = 0x0456;\n t['afii10104'] = 0x0457;\n t['afii10105'] = 0x0458;\n t['afii10106'] = 0x0459;\n t['afii10107'] = 0x045A;\n t['afii10108'] = 0x045B;\n t['afii10109'] = 0x045C;\n t['afii10110'] = 0x045E;\n t['afii10145'] = 0x040F;\n t['afii10146'] = 0x0462;\n t['afii10147'] = 0x0472;\n t['afii10148'] = 0x0474;\n t['afii10192'] = 0xF6C6;\n t['afii10193'] = 0x045F;\n t['afii10194'] = 0x0463;\n t['afii10195'] = 0x0473;\n t['afii10196'] = 0x0475;\n t['afii10831'] = 0xF6C7;\n t['afii10832'] = 0xF6C8;\n t['afii10846'] = 0x04D9;\n t['afii299'] = 0x200E;\n t['afii300'] = 0x200F;\n t['afii301'] = 0x200D;\n t['afii57381'] = 0x066A;\n t['afii57388'] = 0x060C;\n t['afii57392'] = 0x0660;\n t['afii57393'] = 0x0661;\n t['afii57394'] = 0x0662;\n t['afii57395'] = 0x0663;\n t['afii57396'] = 0x0664;\n t['afii57397'] = 0x0665;\n t['afii57398'] = 0x0666;\n t['afii57399'] = 0x0667;\n t['afii57400'] = 0x0668;\n t['afii57401'] = 0x0669;\n t['afii57403'] = 0x061B;\n t['afii57407'] = 0x061F;\n t['afii57409'] = 0x0621;\n t['afii57410'] = 0x0622;\n t['afii57411'] = 0x0623;\n t['afii57412'] = 0x0624;\n t['afii57413'] = 0x0625;\n t['afii57414'] = 0x0626;\n t['afii57415'] = 0x0627;\n t['afii57416'] = 0x0628;\n t['afii57417'] = 0x0629;\n t['afii57418'] = 0x062A;\n t['afii57419'] = 0x062B;\n t['afii57420'] = 0x062C;\n t['afii57421'] = 0x062D;\n t['afii57422'] = 0x062E;\n t['afii57423'] = 0x062F;\n t['afii57424'] = 0x0630;\n t['afii57425'] = 0x0631;\n t['afii57426'] = 0x0632;\n t['afii57427'] = 0x0633;\n t['afii57428'] = 0x0634;\n t['afii57429'] = 0x0635;\n t['afii57430'] = 0x0636;\n t['afii57431'] = 0x0637;\n t['afii57432'] = 0x0638;\n t['afii57433'] = 0x0639;\n t['afii57434'] = 0x063A;\n t['afii57440'] = 0x0640;\n t['afii57441'] = 0x0641;\n t['afii57442'] = 0x0642;\n t['afii57443'] = 0x0643;\n t['afii57444'] = 0x0644;\n t['afii57445'] = 0x0645;\n t['afii57446'] = 0x0646;\n t['afii57448'] = 0x0648;\n t['afii57449'] = 0x0649;\n t['afii57450'] = 0x064A;\n t['afii57451'] = 0x064B;\n t['afii57452'] = 0x064C;\n t['afii57453'] = 0x064D;\n t['afii57454'] = 0x064E;\n t['afii57455'] = 0x064F;\n t['afii57456'] = 0x0650;\n t['afii57457'] = 0x0651;\n t['afii57458'] = 0x0652;\n t['afii57470'] = 0x0647;\n t['afii57505'] = 0x06A4;\n t['afii57506'] = 0x067E;\n t['afii57507'] = 0x0686;\n t['afii57508'] = 0x0698;\n t['afii57509'] = 0x06AF;\n t['afii57511'] = 0x0679;\n t['afii57512'] = 0x0688;\n t['afii57513'] = 0x0691;\n t['afii57514'] = 0x06BA;\n t['afii57519'] = 0x06D2;\n t['afii57534'] = 0x06D5;\n t['afii57636'] = 0x20AA;\n t['afii57645'] = 0x05BE;\n t['afii57658'] = 0x05C3;\n t['afii57664'] = 0x05D0;\n t['afii57665'] = 0x05D1;\n t['afii57666'] = 0x05D2;\n t['afii57667'] = 0x05D3;\n t['afii57668'] = 0x05D4;\n t['afii57669'] = 0x05D5;\n t['afii57670'] = 0x05D6;\n t['afii57671'] = 0x05D7;\n t['afii57672'] = 0x05D8;\n t['afii57673'] = 0x05D9;\n t['afii57674'] = 0x05DA;\n t['afii57675'] = 0x05DB;\n t['afii57676'] = 0x05DC;\n t['afii57677'] = 0x05DD;\n t['afii57678'] = 0x05DE;\n t['afii57679'] = 0x05DF;\n t['afii57680'] = 0x05E0;\n t['afii57681'] = 0x05E1;\n t['afii57682'] = 0x05E2;\n t['afii57683'] = 0x05E3;\n t['afii57684'] = 0x05E4;\n t['afii57685'] = 0x05E5;\n t['afii57686'] = 0x05E6;\n t['afii57687'] = 0x05E7;\n t['afii57688'] = 0x05E8;\n t['afii57689'] = 0x05E9;\n t['afii57690'] = 0x05EA;\n t['afii57694'] = 0xFB2A;\n t['afii57695'] = 0xFB2B;\n t['afii57700'] = 0xFB4B;\n t['afii57705'] = 0xFB1F;\n t['afii57716'] = 0x05F0;\n t['afii57717'] = 0x05F1;\n t['afii57718'] = 0x05F2;\n t['afii57723'] = 0xFB35;\n t['afii57793'] = 0x05B4;\n t['afii57794'] = 0x05B5;\n t['afii57795'] = 0x05B6;\n t['afii57796'] = 0x05BB;\n t['afii57797'] = 0x05B8;\n t['afii57798'] = 0x05B7;\n t['afii57799'] = 0x05B0;\n t['afii57800'] = 0x05B2;\n t['afii57801'] = 0x05B1;\n t['afii57802'] = 0x05B3;\n t['afii57803'] = 0x05C2;\n t['afii57804'] = 0x05C1;\n t['afii57806'] = 0x05B9;\n t['afii57807'] = 0x05BC;\n t['afii57839'] = 0x05BD;\n t['afii57841'] = 0x05BF;\n t['afii57842'] = 0x05C0;\n t['afii57929'] = 0x02BC;\n t['afii61248'] = 0x2105;\n t['afii61289'] = 0x2113;\n t['afii61352'] = 0x2116;\n t['afii61573'] = 0x202C;\n t['afii61574'] = 0x202D;\n t['afii61575'] = 0x202E;\n t['afii61664'] = 0x200C;\n t['afii63167'] = 0x066D;\n t['afii64937'] = 0x02BD;\n t['agrave'] = 0x00E0;\n t['agujarati'] = 0x0A85;\n t['agurmukhi'] = 0x0A05;\n t['ahiragana'] = 0x3042;\n t['ahookabove'] = 0x1EA3;\n t['aibengali'] = 0x0990;\n t['aibopomofo'] = 0x311E;\n t['aideva'] = 0x0910;\n t['aiecyrillic'] = 0x04D5;\n t['aigujarati'] = 0x0A90;\n t['aigurmukhi'] = 0x0A10;\n t['aimatragurmukhi'] = 0x0A48;\n t['ainarabic'] = 0x0639;\n t['ainfinalarabic'] = 0xFECA;\n t['aininitialarabic'] = 0xFECB;\n t['ainmedialarabic'] = 0xFECC;\n t['ainvertedbreve'] = 0x0203;\n t['aivowelsignbengali'] = 0x09C8;\n t['aivowelsigndeva'] = 0x0948;\n t['aivowelsigngujarati'] = 0x0AC8;\n t['akatakana'] = 0x30A2;\n t['akatakanahalfwidth'] = 0xFF71;\n t['akorean'] = 0x314F;\n t['alef'] = 0x05D0;\n t['alefarabic'] = 0x0627;\n t['alefdageshhebrew'] = 0xFB30;\n t['aleffinalarabic'] = 0xFE8E;\n t['alefhamzaabovearabic'] = 0x0623;\n t['alefhamzaabovefinalarabic'] = 0xFE84;\n t['alefhamzabelowarabic'] = 0x0625;\n t['alefhamzabelowfinalarabic'] = 0xFE88;\n t['alefhebrew'] = 0x05D0;\n t['aleflamedhebrew'] = 0xFB4F;\n t['alefmaddaabovearabic'] = 0x0622;\n t['alefmaddaabovefinalarabic'] = 0xFE82;\n t['alefmaksuraarabic'] = 0x0649;\n t['alefmaksurafinalarabic'] = 0xFEF0;\n t['alefmaksurainitialarabic'] = 0xFEF3;\n t['alefmaksuramedialarabic'] = 0xFEF4;\n t['alefpatahhebrew'] = 0xFB2E;\n t['alefqamatshebrew'] = 0xFB2F;\n t['aleph'] = 0x2135;\n t['allequal'] = 0x224C;\n t['alpha'] = 0x03B1;\n t['alphatonos'] = 0x03AC;\n t['amacron'] = 0x0101;\n t['amonospace'] = 0xFF41;\n t['ampersand'] = 0x0026;\n t['ampersandmonospace'] = 0xFF06;\n t['ampersandsmall'] = 0xF726;\n t['amsquare'] = 0x33C2;\n t['anbopomofo'] = 0x3122;\n t['angbopomofo'] = 0x3124;\n t['angbracketleft'] = 0x3008;\n t['angbracketright'] = 0x3009;\n t['angkhankhuthai'] = 0x0E5A;\n t['angle'] = 0x2220;\n t['anglebracketleft'] = 0x3008;\n t['anglebracketleftvertical'] = 0xFE3F;\n t['anglebracketright'] = 0x3009;\n t['anglebracketrightvertical'] = 0xFE40;\n t['angleleft'] = 0x2329;\n t['angleright'] = 0x232A;\n t['angstrom'] = 0x212B;\n t['anoteleia'] = 0x0387;\n t['anudattadeva'] = 0x0952;\n t['anusvarabengali'] = 0x0982;\n t['anusvaradeva'] = 0x0902;\n t['anusvaragujarati'] = 0x0A82;\n t['aogonek'] = 0x0105;\n t['apaatosquare'] = 0x3300;\n t['aparen'] = 0x249C;\n t['apostrophearmenian'] = 0x055A;\n t['apostrophemod'] = 0x02BC;\n t['apple'] = 0xF8FF;\n t['approaches'] = 0x2250;\n t['approxequal'] = 0x2248;\n t['approxequalorimage'] = 0x2252;\n t['approximatelyequal'] = 0x2245;\n t['araeaekorean'] = 0x318E;\n t['araeakorean'] = 0x318D;\n t['arc'] = 0x2312;\n t['arighthalfring'] = 0x1E9A;\n t['aring'] = 0x00E5;\n t['aringacute'] = 0x01FB;\n t['aringbelow'] = 0x1E01;\n t['arrowboth'] = 0x2194;\n t['arrowdashdown'] = 0x21E3;\n t['arrowdashleft'] = 0x21E0;\n t['arrowdashright'] = 0x21E2;\n t['arrowdashup'] = 0x21E1;\n t['arrowdblboth'] = 0x21D4;\n t['arrowdbldown'] = 0x21D3;\n t['arrowdblleft'] = 0x21D0;\n t['arrowdblright'] = 0x21D2;\n t['arrowdblup'] = 0x21D1;\n t['arrowdown'] = 0x2193;\n t['arrowdownleft'] = 0x2199;\n t['arrowdownright'] = 0x2198;\n t['arrowdownwhite'] = 0x21E9;\n t['arrowheaddownmod'] = 0x02C5;\n t['arrowheadleftmod'] = 0x02C2;\n t['arrowheadrightmod'] = 0x02C3;\n t['arrowheadupmod'] = 0x02C4;\n t['arrowhorizex'] = 0xF8E7;\n t['arrowleft'] = 0x2190;\n t['arrowleftdbl'] = 0x21D0;\n t['arrowleftdblstroke'] = 0x21CD;\n t['arrowleftoverright'] = 0x21C6;\n t['arrowleftwhite'] = 0x21E6;\n t['arrowright'] = 0x2192;\n t['arrowrightdblstroke'] = 0x21CF;\n t['arrowrightheavy'] = 0x279E;\n t['arrowrightoverleft'] = 0x21C4;\n t['arrowrightwhite'] = 0x21E8;\n t['arrowtableft'] = 0x21E4;\n t['arrowtabright'] = 0x21E5;\n t['arrowup'] = 0x2191;\n t['arrowupdn'] = 0x2195;\n t['arrowupdnbse'] = 0x21A8;\n t['arrowupdownbase'] = 0x21A8;\n t['arrowupleft'] = 0x2196;\n t['arrowupleftofdown'] = 0x21C5;\n t['arrowupright'] = 0x2197;\n t['arrowupwhite'] = 0x21E7;\n t['arrowvertex'] = 0xF8E6;\n t['asciicircum'] = 0x005E;\n t['asciicircummonospace'] = 0xFF3E;\n t['asciitilde'] = 0x007E;\n t['asciitildemonospace'] = 0xFF5E;\n t['ascript'] = 0x0251;\n t['ascriptturned'] = 0x0252;\n t['asmallhiragana'] = 0x3041;\n t['asmallkatakana'] = 0x30A1;\n t['asmallkatakanahalfwidth'] = 0xFF67;\n t['asterisk'] = 0x002A;\n t['asteriskaltonearabic'] = 0x066D;\n t['asteriskarabic'] = 0x066D;\n t['asteriskmath'] = 0x2217;\n t['asteriskmonospace'] = 0xFF0A;\n t['asterisksmall'] = 0xFE61;\n t['asterism'] = 0x2042;\n t['asuperior'] = 0xF6E9;\n t['asymptoticallyequal'] = 0x2243;\n t['at'] = 0x0040;\n t['atilde'] = 0x00E3;\n t['atmonospace'] = 0xFF20;\n t['atsmall'] = 0xFE6B;\n t['aturned'] = 0x0250;\n t['aubengali'] = 0x0994;\n t['aubopomofo'] = 0x3120;\n t['audeva'] = 0x0914;\n t['augujarati'] = 0x0A94;\n t['augurmukhi'] = 0x0A14;\n t['aulengthmarkbengali'] = 0x09D7;\n t['aumatragurmukhi'] = 0x0A4C;\n t['auvowelsignbengali'] = 0x09CC;\n t['auvowelsigndeva'] = 0x094C;\n t['auvowelsigngujarati'] = 0x0ACC;\n t['avagrahadeva'] = 0x093D;\n t['aybarmenian'] = 0x0561;\n t['ayin'] = 0x05E2;\n t['ayinaltonehebrew'] = 0xFB20;\n t['ayinhebrew'] = 0x05E2;\n t['b'] = 0x0062;\n t['babengali'] = 0x09AC;\n t['backslash'] = 0x005C;\n t['backslashmonospace'] = 0xFF3C;\n t['badeva'] = 0x092C;\n t['bagujarati'] = 0x0AAC;\n t['bagurmukhi'] = 0x0A2C;\n t['bahiragana'] = 0x3070;\n t['bahtthai'] = 0x0E3F;\n t['bakatakana'] = 0x30D0;\n t['bar'] = 0x007C;\n t['barmonospace'] = 0xFF5C;\n t['bbopomofo'] = 0x3105;\n t['bcircle'] = 0x24D1;\n t['bdotaccent'] = 0x1E03;\n t['bdotbelow'] = 0x1E05;\n t['beamedsixteenthnotes'] = 0x266C;\n t['because'] = 0x2235;\n t['becyrillic'] = 0x0431;\n t['beharabic'] = 0x0628;\n t['behfinalarabic'] = 0xFE90;\n t['behinitialarabic'] = 0xFE91;\n t['behiragana'] = 0x3079;\n t['behmedialarabic'] = 0xFE92;\n t['behmeeminitialarabic'] = 0xFC9F;\n t['behmeemisolatedarabic'] = 0xFC08;\n t['behnoonfinalarabic'] = 0xFC6D;\n t['bekatakana'] = 0x30D9;\n t['benarmenian'] = 0x0562;\n t['bet'] = 0x05D1;\n t['beta'] = 0x03B2;\n t['betasymbolgreek'] = 0x03D0;\n t['betdagesh'] = 0xFB31;\n t['betdageshhebrew'] = 0xFB31;\n t['bethebrew'] = 0x05D1;\n t['betrafehebrew'] = 0xFB4C;\n t['bhabengali'] = 0x09AD;\n t['bhadeva'] = 0x092D;\n t['bhagujarati'] = 0x0AAD;\n t['bhagurmukhi'] = 0x0A2D;\n t['bhook'] = 0x0253;\n t['bihiragana'] = 0x3073;\n t['bikatakana'] = 0x30D3;\n t['bilabialclick'] = 0x0298;\n t['bindigurmukhi'] = 0x0A02;\n t['birusquare'] = 0x3331;\n t['blackcircle'] = 0x25CF;\n t['blackdiamond'] = 0x25C6;\n t['blackdownpointingtriangle'] = 0x25BC;\n t['blackleftpointingpointer'] = 0x25C4;\n t['blackleftpointingtriangle'] = 0x25C0;\n t['blacklenticularbracketleft'] = 0x3010;\n t['blacklenticularbracketleftvertical'] = 0xFE3B;\n t['blacklenticularbracketright'] = 0x3011;\n t['blacklenticularbracketrightvertical'] = 0xFE3C;\n t['blacklowerlefttriangle'] = 0x25E3;\n t['blacklowerrighttriangle'] = 0x25E2;\n t['blackrectangle'] = 0x25AC;\n t['blackrightpointingpointer'] = 0x25BA;\n t['blackrightpointingtriangle'] = 0x25B6;\n t['blacksmallsquare'] = 0x25AA;\n t['blacksmilingface'] = 0x263B;\n t['blacksquare'] = 0x25A0;\n t['blackstar'] = 0x2605;\n t['blackupperlefttriangle'] = 0x25E4;\n t['blackupperrighttriangle'] = 0x25E5;\n t['blackuppointingsmalltriangle'] = 0x25B4;\n t['blackuppointingtriangle'] = 0x25B2;\n t['blank'] = 0x2423;\n t['blinebelow'] = 0x1E07;\n t['block'] = 0x2588;\n t['bmonospace'] = 0xFF42;\n t['bobaimaithai'] = 0x0E1A;\n t['bohiragana'] = 0x307C;\n t['bokatakana'] = 0x30DC;\n t['bparen'] = 0x249D;\n t['bqsquare'] = 0x33C3;\n t['braceex'] = 0xF8F4;\n t['braceleft'] = 0x007B;\n t['braceleftbt'] = 0xF8F3;\n t['braceleftmid'] = 0xF8F2;\n t['braceleftmonospace'] = 0xFF5B;\n t['braceleftsmall'] = 0xFE5B;\n t['bracelefttp'] = 0xF8F1;\n t['braceleftvertical'] = 0xFE37;\n t['braceright'] = 0x007D;\n t['bracerightbt'] = 0xF8FE;\n t['bracerightmid'] = 0xF8FD;\n t['bracerightmonospace'] = 0xFF5D;\n t['bracerightsmall'] = 0xFE5C;\n t['bracerighttp'] = 0xF8FC;\n t['bracerightvertical'] = 0xFE38;\n t['bracketleft'] = 0x005B;\n t['bracketleftbt'] = 0xF8F0;\n t['bracketleftex'] = 0xF8EF;\n t['bracketleftmonospace'] = 0xFF3B;\n t['bracketlefttp'] = 0xF8EE;\n t['bracketright'] = 0x005D;\n t['bracketrightbt'] = 0xF8FB;\n t['bracketrightex'] = 0xF8FA;\n t['bracketrightmonospace'] = 0xFF3D;\n t['bracketrighttp'] = 0xF8F9;\n t['breve'] = 0x02D8;\n t['brevebelowcmb'] = 0x032E;\n t['brevecmb'] = 0x0306;\n t['breveinvertedbelowcmb'] = 0x032F;\n t['breveinvertedcmb'] = 0x0311;\n t['breveinverteddoublecmb'] = 0x0361;\n t['bridgebelowcmb'] = 0x032A;\n t['bridgeinvertedbelowcmb'] = 0x033A;\n t['brokenbar'] = 0x00A6;\n t['bstroke'] = 0x0180;\n t['bsuperior'] = 0xF6EA;\n t['btopbar'] = 0x0183;\n t['buhiragana'] = 0x3076;\n t['bukatakana'] = 0x30D6;\n t['bullet'] = 0x2022;\n t['bulletinverse'] = 0x25D8;\n t['bulletoperator'] = 0x2219;\n t['bullseye'] = 0x25CE;\n t['c'] = 0x0063;\n t['caarmenian'] = 0x056E;\n t['cabengali'] = 0x099A;\n t['cacute'] = 0x0107;\n t['cadeva'] = 0x091A;\n t['cagujarati'] = 0x0A9A;\n t['cagurmukhi'] = 0x0A1A;\n t['calsquare'] = 0x3388;\n t['candrabindubengali'] = 0x0981;\n t['candrabinducmb'] = 0x0310;\n t['candrabindudeva'] = 0x0901;\n t['candrabindugujarati'] = 0x0A81;\n t['capslock'] = 0x21EA;\n t['careof'] = 0x2105;\n t['caron'] = 0x02C7;\n t['caronbelowcmb'] = 0x032C;\n t['caroncmb'] = 0x030C;\n t['carriagereturn'] = 0x21B5;\n t['cbopomofo'] = 0x3118;\n t['ccaron'] = 0x010D;\n t['ccedilla'] = 0x00E7;\n t['ccedillaacute'] = 0x1E09;\n t['ccircle'] = 0x24D2;\n t['ccircumflex'] = 0x0109;\n t['ccurl'] = 0x0255;\n t['cdot'] = 0x010B;\n t['cdotaccent'] = 0x010B;\n t['cdsquare'] = 0x33C5;\n t['cedilla'] = 0x00B8;\n t['cedillacmb'] = 0x0327;\n t['cent'] = 0x00A2;\n t['centigrade'] = 0x2103;\n t['centinferior'] = 0xF6DF;\n t['centmonospace'] = 0xFFE0;\n t['centoldstyle'] = 0xF7A2;\n t['centsuperior'] = 0xF6E0;\n t['chaarmenian'] = 0x0579;\n t['chabengali'] = 0x099B;\n t['chadeva'] = 0x091B;\n t['chagujarati'] = 0x0A9B;\n t['chagurmukhi'] = 0x0A1B;\n t['chbopomofo'] = 0x3114;\n t['cheabkhasiancyrillic'] = 0x04BD;\n t['checkmark'] = 0x2713;\n t['checyrillic'] = 0x0447;\n t['chedescenderabkhasiancyrillic'] = 0x04BF;\n t['chedescendercyrillic'] = 0x04B7;\n t['chedieresiscyrillic'] = 0x04F5;\n t['cheharmenian'] = 0x0573;\n t['chekhakassiancyrillic'] = 0x04CC;\n t['cheverticalstrokecyrillic'] = 0x04B9;\n t['chi'] = 0x03C7;\n t['chieuchacirclekorean'] = 0x3277;\n t['chieuchaparenkorean'] = 0x3217;\n t['chieuchcirclekorean'] = 0x3269;\n t['chieuchkorean'] = 0x314A;\n t['chieuchparenkorean'] = 0x3209;\n t['chochangthai'] = 0x0E0A;\n t['chochanthai'] = 0x0E08;\n t['chochingthai'] = 0x0E09;\n t['chochoethai'] = 0x0E0C;\n t['chook'] = 0x0188;\n t['cieucacirclekorean'] = 0x3276;\n t['cieucaparenkorean'] = 0x3216;\n t['cieuccirclekorean'] = 0x3268;\n t['cieuckorean'] = 0x3148;\n t['cieucparenkorean'] = 0x3208;\n t['cieucuparenkorean'] = 0x321C;\n t['circle'] = 0x25CB;\n t['circlecopyrt'] = 0x00A9;\n t['circlemultiply'] = 0x2297;\n t['circleot'] = 0x2299;\n t['circleplus'] = 0x2295;\n t['circlepostalmark'] = 0x3036;\n t['circlewithlefthalfblack'] = 0x25D0;\n t['circlewithrighthalfblack'] = 0x25D1;\n t['circumflex'] = 0x02C6;\n t['circumflexbelowcmb'] = 0x032D;\n t['circumflexcmb'] = 0x0302;\n t['clear'] = 0x2327;\n t['clickalveolar'] = 0x01C2;\n t['clickdental'] = 0x01C0;\n t['clicklateral'] = 0x01C1;\n t['clickretroflex'] = 0x01C3;\n t['club'] = 0x2663;\n t['clubsuitblack'] = 0x2663;\n t['clubsuitwhite'] = 0x2667;\n t['cmcubedsquare'] = 0x33A4;\n t['cmonospace'] = 0xFF43;\n t['cmsquaredsquare'] = 0x33A0;\n t['coarmenian'] = 0x0581;\n t['colon'] = 0x003A;\n t['colonmonetary'] = 0x20A1;\n t['colonmonospace'] = 0xFF1A;\n t['colonsign'] = 0x20A1;\n t['colonsmall'] = 0xFE55;\n t['colontriangularhalfmod'] = 0x02D1;\n t['colontriangularmod'] = 0x02D0;\n t['comma'] = 0x002C;\n t['commaabovecmb'] = 0x0313;\n t['commaaboverightcmb'] = 0x0315;\n t['commaaccent'] = 0xF6C3;\n t['commaarabic'] = 0x060C;\n t['commaarmenian'] = 0x055D;\n t['commainferior'] = 0xF6E1;\n t['commamonospace'] = 0xFF0C;\n t['commareversedabovecmb'] = 0x0314;\n t['commareversedmod'] = 0x02BD;\n t['commasmall'] = 0xFE50;\n t['commasuperior'] = 0xF6E2;\n t['commaturnedabovecmb'] = 0x0312;\n t['commaturnedmod'] = 0x02BB;\n t['compass'] = 0x263C;\n t['congruent'] = 0x2245;\n t['contourintegral'] = 0x222E;\n t['control'] = 0x2303;\n t['controlACK'] = 0x0006;\n t['controlBEL'] = 0x0007;\n t['controlBS'] = 0x0008;\n t['controlCAN'] = 0x0018;\n t['controlCR'] = 0x000D;\n t['controlDC1'] = 0x0011;\n t['controlDC2'] = 0x0012;\n t['controlDC3'] = 0x0013;\n t['controlDC4'] = 0x0014;\n t['controlDEL'] = 0x007F;\n t['controlDLE'] = 0x0010;\n t['controlEM'] = 0x0019;\n t['controlENQ'] = 0x0005;\n t['controlEOT'] = 0x0004;\n t['controlESC'] = 0x001B;\n t['controlETB'] = 0x0017;\n t['controlETX'] = 0x0003;\n t['controlFF'] = 0x000C;\n t['controlFS'] = 0x001C;\n t['controlGS'] = 0x001D;\n t['controlHT'] = 0x0009;\n t['controlLF'] = 0x000A;\n t['controlNAK'] = 0x0015;\n t['controlNULL'] = 0x0000;\n t['controlRS'] = 0x001E;\n t['controlSI'] = 0x000F;\n t['controlSO'] = 0x000E;\n t['controlSOT'] = 0x0002;\n t['controlSTX'] = 0x0001;\n t['controlSUB'] = 0x001A;\n t['controlSYN'] = 0x0016;\n t['controlUS'] = 0x001F;\n t['controlVT'] = 0x000B;\n t['copyright'] = 0x00A9;\n t['copyrightsans'] = 0xF8E9;\n t['copyrightserif'] = 0xF6D9;\n t['cornerbracketleft'] = 0x300C;\n t['cornerbracketlefthalfwidth'] = 0xFF62;\n t['cornerbracketleftvertical'] = 0xFE41;\n t['cornerbracketright'] = 0x300D;\n t['cornerbracketrighthalfwidth'] = 0xFF63;\n t['cornerbracketrightvertical'] = 0xFE42;\n t['corporationsquare'] = 0x337F;\n t['cosquare'] = 0x33C7;\n t['coverkgsquare'] = 0x33C6;\n t['cparen'] = 0x249E;\n t['cruzeiro'] = 0x20A2;\n t['cstretched'] = 0x0297;\n t['curlyand'] = 0x22CF;\n t['curlyor'] = 0x22CE;\n t['currency'] = 0x00A4;\n t['cyrBreve'] = 0xF6D1;\n t['cyrFlex'] = 0xF6D2;\n t['cyrbreve'] = 0xF6D4;\n t['cyrflex'] = 0xF6D5;\n t['d'] = 0x0064;\n t['daarmenian'] = 0x0564;\n t['dabengali'] = 0x09A6;\n t['dadarabic'] = 0x0636;\n t['dadeva'] = 0x0926;\n t['dadfinalarabic'] = 0xFEBE;\n t['dadinitialarabic'] = 0xFEBF;\n t['dadmedialarabic'] = 0xFEC0;\n t['dagesh'] = 0x05BC;\n t['dageshhebrew'] = 0x05BC;\n t['dagger'] = 0x2020;\n t['daggerdbl'] = 0x2021;\n t['dagujarati'] = 0x0AA6;\n t['dagurmukhi'] = 0x0A26;\n t['dahiragana'] = 0x3060;\n t['dakatakana'] = 0x30C0;\n t['dalarabic'] = 0x062F;\n t['dalet'] = 0x05D3;\n t['daletdagesh'] = 0xFB33;\n t['daletdageshhebrew'] = 0xFB33;\n t['dalethebrew'] = 0x05D3;\n t['dalfinalarabic'] = 0xFEAA;\n t['dammaarabic'] = 0x064F;\n t['dammalowarabic'] = 0x064F;\n t['dammatanaltonearabic'] = 0x064C;\n t['dammatanarabic'] = 0x064C;\n t['danda'] = 0x0964;\n t['dargahebrew'] = 0x05A7;\n t['dargalefthebrew'] = 0x05A7;\n t['dasiapneumatacyrilliccmb'] = 0x0485;\n t['dblGrave'] = 0xF6D3;\n t['dblanglebracketleft'] = 0x300A;\n t['dblanglebracketleftvertical'] = 0xFE3D;\n t['dblanglebracketright'] = 0x300B;\n t['dblanglebracketrightvertical'] = 0xFE3E;\n t['dblarchinvertedbelowcmb'] = 0x032B;\n t['dblarrowleft'] = 0x21D4;\n t['dblarrowright'] = 0x21D2;\n t['dbldanda'] = 0x0965;\n t['dblgrave'] = 0xF6D6;\n t['dblgravecmb'] = 0x030F;\n t['dblintegral'] = 0x222C;\n t['dbllowline'] = 0x2017;\n t['dbllowlinecmb'] = 0x0333;\n t['dbloverlinecmb'] = 0x033F;\n t['dblprimemod'] = 0x02BA;\n t['dblverticalbar'] = 0x2016;\n t['dblverticallineabovecmb'] = 0x030E;\n t['dbopomofo'] = 0x3109;\n t['dbsquare'] = 0x33C8;\n t['dcaron'] = 0x010F;\n t['dcedilla'] = 0x1E11;\n t['dcircle'] = 0x24D3;\n t['dcircumflexbelow'] = 0x1E13;\n t['dcroat'] = 0x0111;\n t['ddabengali'] = 0x09A1;\n t['ddadeva'] = 0x0921;\n t['ddagujarati'] = 0x0AA1;\n t['ddagurmukhi'] = 0x0A21;\n t['ddalarabic'] = 0x0688;\n t['ddalfinalarabic'] = 0xFB89;\n t['dddhadeva'] = 0x095C;\n t['ddhabengali'] = 0x09A2;\n t['ddhadeva'] = 0x0922;\n t['ddhagujarati'] = 0x0AA2;\n t['ddhagurmukhi'] = 0x0A22;\n t['ddotaccent'] = 0x1E0B;\n t['ddotbelow'] = 0x1E0D;\n t['decimalseparatorarabic'] = 0x066B;\n t['decimalseparatorpersian'] = 0x066B;\n t['decyrillic'] = 0x0434;\n t['degree'] = 0x00B0;\n t['dehihebrew'] = 0x05AD;\n t['dehiragana'] = 0x3067;\n t['deicoptic'] = 0x03EF;\n t['dekatakana'] = 0x30C7;\n t['deleteleft'] = 0x232B;\n t['deleteright'] = 0x2326;\n t['delta'] = 0x03B4;\n t['deltaturned'] = 0x018D;\n t['denominatorminusonenumeratorbengali'] = 0x09F8;\n t['dezh'] = 0x02A4;\n t['dhabengali'] = 0x09A7;\n t['dhadeva'] = 0x0927;\n t['dhagujarati'] = 0x0AA7;\n t['dhagurmukhi'] = 0x0A27;\n t['dhook'] = 0x0257;\n t['dialytikatonos'] = 0x0385;\n t['dialytikatonoscmb'] = 0x0344;\n t['diamond'] = 0x2666;\n t['diamondsuitwhite'] = 0x2662;\n t['dieresis'] = 0x00A8;\n t['dieresisacute'] = 0xF6D7;\n t['dieresisbelowcmb'] = 0x0324;\n t['dieresiscmb'] = 0x0308;\n t['dieresisgrave'] = 0xF6D8;\n t['dieresistonos'] = 0x0385;\n t['dihiragana'] = 0x3062;\n t['dikatakana'] = 0x30C2;\n t['dittomark'] = 0x3003;\n t['divide'] = 0x00F7;\n t['divides'] = 0x2223;\n t['divisionslash'] = 0x2215;\n t['djecyrillic'] = 0x0452;\n t['dkshade'] = 0x2593;\n t['dlinebelow'] = 0x1E0F;\n t['dlsquare'] = 0x3397;\n t['dmacron'] = 0x0111;\n t['dmonospace'] = 0xFF44;\n t['dnblock'] = 0x2584;\n t['dochadathai'] = 0x0E0E;\n t['dodekthai'] = 0x0E14;\n t['dohiragana'] = 0x3069;\n t['dokatakana'] = 0x30C9;\n t['dollar'] = 0x0024;\n t['dollarinferior'] = 0xF6E3;\n t['dollarmonospace'] = 0xFF04;\n t['dollaroldstyle'] = 0xF724;\n t['dollarsmall'] = 0xFE69;\n t['dollarsuperior'] = 0xF6E4;\n t['dong'] = 0x20AB;\n t['dorusquare'] = 0x3326;\n t['dotaccent'] = 0x02D9;\n t['dotaccentcmb'] = 0x0307;\n t['dotbelowcmb'] = 0x0323;\n t['dotbelowcomb'] = 0x0323;\n t['dotkatakana'] = 0x30FB;\n t['dotlessi'] = 0x0131;\n t['dotlessj'] = 0xF6BE;\n t['dotlessjstrokehook'] = 0x0284;\n t['dotmath'] = 0x22C5;\n t['dottedcircle'] = 0x25CC;\n t['doubleyodpatah'] = 0xFB1F;\n t['doubleyodpatahhebrew'] = 0xFB1F;\n t['downtackbelowcmb'] = 0x031E;\n t['downtackmod'] = 0x02D5;\n t['dparen'] = 0x249F;\n t['dsuperior'] = 0xF6EB;\n t['dtail'] = 0x0256;\n t['dtopbar'] = 0x018C;\n t['duhiragana'] = 0x3065;\n t['dukatakana'] = 0x30C5;\n t['dz'] = 0x01F3;\n t['dzaltone'] = 0x02A3;\n t['dzcaron'] = 0x01C6;\n t['dzcurl'] = 0x02A5;\n t['dzeabkhasiancyrillic'] = 0x04E1;\n t['dzecyrillic'] = 0x0455;\n t['dzhecyrillic'] = 0x045F;\n t['e'] = 0x0065;\n t['eacute'] = 0x00E9;\n t['earth'] = 0x2641;\n t['ebengali'] = 0x098F;\n t['ebopomofo'] = 0x311C;\n t['ebreve'] = 0x0115;\n t['ecandradeva'] = 0x090D;\n t['ecandragujarati'] = 0x0A8D;\n t['ecandravowelsigndeva'] = 0x0945;\n t['ecandravowelsigngujarati'] = 0x0AC5;\n t['ecaron'] = 0x011B;\n t['ecedillabreve'] = 0x1E1D;\n t['echarmenian'] = 0x0565;\n t['echyiwnarmenian'] = 0x0587;\n t['ecircle'] = 0x24D4;\n t['ecircumflex'] = 0x00EA;\n t['ecircumflexacute'] = 0x1EBF;\n t['ecircumflexbelow'] = 0x1E19;\n t['ecircumflexdotbelow'] = 0x1EC7;\n t['ecircumflexgrave'] = 0x1EC1;\n t['ecircumflexhookabove'] = 0x1EC3;\n t['ecircumflextilde'] = 0x1EC5;\n t['ecyrillic'] = 0x0454;\n t['edblgrave'] = 0x0205;\n t['edeva'] = 0x090F;\n t['edieresis'] = 0x00EB;\n t['edot'] = 0x0117;\n t['edotaccent'] = 0x0117;\n t['edotbelow'] = 0x1EB9;\n t['eegurmukhi'] = 0x0A0F;\n t['eematragurmukhi'] = 0x0A47;\n t['efcyrillic'] = 0x0444;\n t['egrave'] = 0x00E8;\n t['egujarati'] = 0x0A8F;\n t['eharmenian'] = 0x0567;\n t['ehbopomofo'] = 0x311D;\n t['ehiragana'] = 0x3048;\n t['ehookabove'] = 0x1EBB;\n t['eibopomofo'] = 0x311F;\n t['eight'] = 0x0038;\n t['eightarabic'] = 0x0668;\n t['eightbengali'] = 0x09EE;\n t['eightcircle'] = 0x2467;\n t['eightcircleinversesansserif'] = 0x2791;\n t['eightdeva'] = 0x096E;\n t['eighteencircle'] = 0x2471;\n t['eighteenparen'] = 0x2485;\n t['eighteenperiod'] = 0x2499;\n t['eightgujarati'] = 0x0AEE;\n t['eightgurmukhi'] = 0x0A6E;\n t['eighthackarabic'] = 0x0668;\n t['eighthangzhou'] = 0x3028;\n t['eighthnotebeamed'] = 0x266B;\n t['eightideographicparen'] = 0x3227;\n t['eightinferior'] = 0x2088;\n t['eightmonospace'] = 0xFF18;\n t['eightoldstyle'] = 0xF738;\n t['eightparen'] = 0x247B;\n t['eightperiod'] = 0x248F;\n t['eightpersian'] = 0x06F8;\n t['eightroman'] = 0x2177;\n t['eightsuperior'] = 0x2078;\n t['eightthai'] = 0x0E58;\n t['einvertedbreve'] = 0x0207;\n t['eiotifiedcyrillic'] = 0x0465;\n t['ekatakana'] = 0x30A8;\n t['ekatakanahalfwidth'] = 0xFF74;\n t['ekonkargurmukhi'] = 0x0A74;\n t['ekorean'] = 0x3154;\n t['elcyrillic'] = 0x043B;\n t['element'] = 0x2208;\n t['elevencircle'] = 0x246A;\n t['elevenparen'] = 0x247E;\n t['elevenperiod'] = 0x2492;\n t['elevenroman'] = 0x217A;\n t['ellipsis'] = 0x2026;\n t['ellipsisvertical'] = 0x22EE;\n t['emacron'] = 0x0113;\n t['emacronacute'] = 0x1E17;\n t['emacrongrave'] = 0x1E15;\n t['emcyrillic'] = 0x043C;\n t['emdash'] = 0x2014;\n t['emdashvertical'] = 0xFE31;\n t['emonospace'] = 0xFF45;\n t['emphasismarkarmenian'] = 0x055B;\n t['emptyset'] = 0x2205;\n t['enbopomofo'] = 0x3123;\n t['encyrillic'] = 0x043D;\n t['endash'] = 0x2013;\n t['endashvertical'] = 0xFE32;\n t['endescendercyrillic'] = 0x04A3;\n t['eng'] = 0x014B;\n t['engbopomofo'] = 0x3125;\n t['enghecyrillic'] = 0x04A5;\n t['enhookcyrillic'] = 0x04C8;\n t['enspace'] = 0x2002;\n t['eogonek'] = 0x0119;\n t['eokorean'] = 0x3153;\n t['eopen'] = 0x025B;\n t['eopenclosed'] = 0x029A;\n t['eopenreversed'] = 0x025C;\n t['eopenreversedclosed'] = 0x025E;\n t['eopenreversedhook'] = 0x025D;\n t['eparen'] = 0x24A0;\n t['epsilon'] = 0x03B5;\n t['epsilontonos'] = 0x03AD;\n t['equal'] = 0x003D;\n t['equalmonospace'] = 0xFF1D;\n t['equalsmall'] = 0xFE66;\n t['equalsuperior'] = 0x207C;\n t['equivalence'] = 0x2261;\n t['erbopomofo'] = 0x3126;\n t['ercyrillic'] = 0x0440;\n t['ereversed'] = 0x0258;\n t['ereversedcyrillic'] = 0x044D;\n t['escyrillic'] = 0x0441;\n t['esdescendercyrillic'] = 0x04AB;\n t['esh'] = 0x0283;\n t['eshcurl'] = 0x0286;\n t['eshortdeva'] = 0x090E;\n t['eshortvowelsigndeva'] = 0x0946;\n t['eshreversedloop'] = 0x01AA;\n t['eshsquatreversed'] = 0x0285;\n t['esmallhiragana'] = 0x3047;\n t['esmallkatakana'] = 0x30A7;\n t['esmallkatakanahalfwidth'] = 0xFF6A;\n t['estimated'] = 0x212E;\n t['esuperior'] = 0xF6EC;\n t['eta'] = 0x03B7;\n t['etarmenian'] = 0x0568;\n t['etatonos'] = 0x03AE;\n t['eth'] = 0x00F0;\n t['etilde'] = 0x1EBD;\n t['etildebelow'] = 0x1E1B;\n t['etnahtafoukhhebrew'] = 0x0591;\n t['etnahtafoukhlefthebrew'] = 0x0591;\n t['etnahtahebrew'] = 0x0591;\n t['etnahtalefthebrew'] = 0x0591;\n t['eturned'] = 0x01DD;\n t['eukorean'] = 0x3161;\n t['euro'] = 0x20AC;\n t['evowelsignbengali'] = 0x09C7;\n t['evowelsigndeva'] = 0x0947;\n t['evowelsigngujarati'] = 0x0AC7;\n t['exclam'] = 0x0021;\n t['exclamarmenian'] = 0x055C;\n t['exclamdbl'] = 0x203C;\n t['exclamdown'] = 0x00A1;\n t['exclamdownsmall'] = 0xF7A1;\n t['exclammonospace'] = 0xFF01;\n t['exclamsmall'] = 0xF721;\n t['existential'] = 0x2203;\n t['ezh'] = 0x0292;\n t['ezhcaron'] = 0x01EF;\n t['ezhcurl'] = 0x0293;\n t['ezhreversed'] = 0x01B9;\n t['ezhtail'] = 0x01BA;\n t['f'] = 0x0066;\n t['fadeva'] = 0x095E;\n t['fagurmukhi'] = 0x0A5E;\n t['fahrenheit'] = 0x2109;\n t['fathaarabic'] = 0x064E;\n t['fathalowarabic'] = 0x064E;\n t['fathatanarabic'] = 0x064B;\n t['fbopomofo'] = 0x3108;\n t['fcircle'] = 0x24D5;\n t['fdotaccent'] = 0x1E1F;\n t['feharabic'] = 0x0641;\n t['feharmenian'] = 0x0586;\n t['fehfinalarabic'] = 0xFED2;\n t['fehinitialarabic'] = 0xFED3;\n t['fehmedialarabic'] = 0xFED4;\n t['feicoptic'] = 0x03E5;\n t['female'] = 0x2640;\n t['ff'] = 0xFB00;\n t['ffi'] = 0xFB03;\n t['ffl'] = 0xFB04;\n t['fi'] = 0xFB01;\n t['fifteencircle'] = 0x246E;\n t['fifteenparen'] = 0x2482;\n t['fifteenperiod'] = 0x2496;\n t['figuredash'] = 0x2012;\n t['filledbox'] = 0x25A0;\n t['filledrect'] = 0x25AC;\n t['finalkaf'] = 0x05DA;\n t['finalkafdagesh'] = 0xFB3A;\n t['finalkafdageshhebrew'] = 0xFB3A;\n t['finalkafhebrew'] = 0x05DA;\n t['finalmem'] = 0x05DD;\n t['finalmemhebrew'] = 0x05DD;\n t['finalnun'] = 0x05DF;\n t['finalnunhebrew'] = 0x05DF;\n t['finalpe'] = 0x05E3;\n t['finalpehebrew'] = 0x05E3;\n t['finaltsadi'] = 0x05E5;\n t['finaltsadihebrew'] = 0x05E5;\n t['firsttonechinese'] = 0x02C9;\n t['fisheye'] = 0x25C9;\n t['fitacyrillic'] = 0x0473;\n t['five'] = 0x0035;\n t['fivearabic'] = 0x0665;\n t['fivebengali'] = 0x09EB;\n t['fivecircle'] = 0x2464;\n t['fivecircleinversesansserif'] = 0x278E;\n t['fivedeva'] = 0x096B;\n t['fiveeighths'] = 0x215D;\n t['fivegujarati'] = 0x0AEB;\n t['fivegurmukhi'] = 0x0A6B;\n t['fivehackarabic'] = 0x0665;\n t['fivehangzhou'] = 0x3025;\n t['fiveideographicparen'] = 0x3224;\n t['fiveinferior'] = 0x2085;\n t['fivemonospace'] = 0xFF15;\n t['fiveoldstyle'] = 0xF735;\n t['fiveparen'] = 0x2478;\n t['fiveperiod'] = 0x248C;\n t['fivepersian'] = 0x06F5;\n t['fiveroman'] = 0x2174;\n t['fivesuperior'] = 0x2075;\n t['fivethai'] = 0x0E55;\n t['fl'] = 0xFB02;\n t['florin'] = 0x0192;\n t['fmonospace'] = 0xFF46;\n t['fmsquare'] = 0x3399;\n t['fofanthai'] = 0x0E1F;\n t['fofathai'] = 0x0E1D;\n t['fongmanthai'] = 0x0E4F;\n t['forall'] = 0x2200;\n t['four'] = 0x0034;\n t['fourarabic'] = 0x0664;\n t['fourbengali'] = 0x09EA;\n t['fourcircle'] = 0x2463;\n t['fourcircleinversesansserif'] = 0x278D;\n t['fourdeva'] = 0x096A;\n t['fourgujarati'] = 0x0AEA;\n t['fourgurmukhi'] = 0x0A6A;\n t['fourhackarabic'] = 0x0664;\n t['fourhangzhou'] = 0x3024;\n t['fourideographicparen'] = 0x3223;\n t['fourinferior'] = 0x2084;\n t['fourmonospace'] = 0xFF14;\n t['fournumeratorbengali'] = 0x09F7;\n t['fouroldstyle'] = 0xF734;\n t['fourparen'] = 0x2477;\n t['fourperiod'] = 0x248B;\n t['fourpersian'] = 0x06F4;\n t['fourroman'] = 0x2173;\n t['foursuperior'] = 0x2074;\n t['fourteencircle'] = 0x246D;\n t['fourteenparen'] = 0x2481;\n t['fourteenperiod'] = 0x2495;\n t['fourthai'] = 0x0E54;\n t['fourthtonechinese'] = 0x02CB;\n t['fparen'] = 0x24A1;\n t['fraction'] = 0x2044;\n t['franc'] = 0x20A3;\n t['g'] = 0x0067;\n t['gabengali'] = 0x0997;\n t['gacute'] = 0x01F5;\n t['gadeva'] = 0x0917;\n t['gafarabic'] = 0x06AF;\n t['gaffinalarabic'] = 0xFB93;\n t['gafinitialarabic'] = 0xFB94;\n t['gafmedialarabic'] = 0xFB95;\n t['gagujarati'] = 0x0A97;\n t['gagurmukhi'] = 0x0A17;\n t['gahiragana'] = 0x304C;\n t['gakatakana'] = 0x30AC;\n t['gamma'] = 0x03B3;\n t['gammalatinsmall'] = 0x0263;\n t['gammasuperior'] = 0x02E0;\n t['gangiacoptic'] = 0x03EB;\n t['gbopomofo'] = 0x310D;\n t['gbreve'] = 0x011F;\n t['gcaron'] = 0x01E7;\n t['gcedilla'] = 0x0123;\n t['gcircle'] = 0x24D6;\n t['gcircumflex'] = 0x011D;\n t['gcommaaccent'] = 0x0123;\n t['gdot'] = 0x0121;\n t['gdotaccent'] = 0x0121;\n t['gecyrillic'] = 0x0433;\n t['gehiragana'] = 0x3052;\n t['gekatakana'] = 0x30B2;\n t['geometricallyequal'] = 0x2251;\n t['gereshaccenthebrew'] = 0x059C;\n t['gereshhebrew'] = 0x05F3;\n t['gereshmuqdamhebrew'] = 0x059D;\n t['germandbls'] = 0x00DF;\n t['gershayimaccenthebrew'] = 0x059E;\n t['gershayimhebrew'] = 0x05F4;\n t['getamark'] = 0x3013;\n t['ghabengali'] = 0x0998;\n t['ghadarmenian'] = 0x0572;\n t['ghadeva'] = 0x0918;\n t['ghagujarati'] = 0x0A98;\n t['ghagurmukhi'] = 0x0A18;\n t['ghainarabic'] = 0x063A;\n t['ghainfinalarabic'] = 0xFECE;\n t['ghaininitialarabic'] = 0xFECF;\n t['ghainmedialarabic'] = 0xFED0;\n t['ghemiddlehookcyrillic'] = 0x0495;\n t['ghestrokecyrillic'] = 0x0493;\n t['gheupturncyrillic'] = 0x0491;\n t['ghhadeva'] = 0x095A;\n t['ghhagurmukhi'] = 0x0A5A;\n t['ghook'] = 0x0260;\n t['ghzsquare'] = 0x3393;\n t['gihiragana'] = 0x304E;\n t['gikatakana'] = 0x30AE;\n t['gimarmenian'] = 0x0563;\n t['gimel'] = 0x05D2;\n t['gimeldagesh'] = 0xFB32;\n t['gimeldageshhebrew'] = 0xFB32;\n t['gimelhebrew'] = 0x05D2;\n t['gjecyrillic'] = 0x0453;\n t['glottalinvertedstroke'] = 0x01BE;\n t['glottalstop'] = 0x0294;\n t['glottalstopinverted'] = 0x0296;\n t['glottalstopmod'] = 0x02C0;\n t['glottalstopreversed'] = 0x0295;\n t['glottalstopreversedmod'] = 0x02C1;\n t['glottalstopreversedsuperior'] = 0x02E4;\n t['glottalstopstroke'] = 0x02A1;\n t['glottalstopstrokereversed'] = 0x02A2;\n t['gmacron'] = 0x1E21;\n t['gmonospace'] = 0xFF47;\n t['gohiragana'] = 0x3054;\n t['gokatakana'] = 0x30B4;\n t['gparen'] = 0x24A2;\n t['gpasquare'] = 0x33AC;\n t['gradient'] = 0x2207;\n t['grave'] = 0x0060;\n t['gravebelowcmb'] = 0x0316;\n t['gravecmb'] = 0x0300;\n t['gravecomb'] = 0x0300;\n t['gravedeva'] = 0x0953;\n t['gravelowmod'] = 0x02CE;\n t['gravemonospace'] = 0xFF40;\n t['gravetonecmb'] = 0x0340;\n t['greater'] = 0x003E;\n t['greaterequal'] = 0x2265;\n t['greaterequalorless'] = 0x22DB;\n t['greatermonospace'] = 0xFF1E;\n t['greaterorequivalent'] = 0x2273;\n t['greaterorless'] = 0x2277;\n t['greateroverequal'] = 0x2267;\n t['greatersmall'] = 0xFE65;\n t['gscript'] = 0x0261;\n t['gstroke'] = 0x01E5;\n t['guhiragana'] = 0x3050;\n t['guillemotleft'] = 0x00AB;\n t['guillemotright'] = 0x00BB;\n t['guilsinglleft'] = 0x2039;\n t['guilsinglright'] = 0x203A;\n t['gukatakana'] = 0x30B0;\n t['guramusquare'] = 0x3318;\n t['gysquare'] = 0x33C9;\n t['h'] = 0x0068;\n t['haabkhasiancyrillic'] = 0x04A9;\n t['haaltonearabic'] = 0x06C1;\n t['habengali'] = 0x09B9;\n t['hadescendercyrillic'] = 0x04B3;\n t['hadeva'] = 0x0939;\n t['hagujarati'] = 0x0AB9;\n t['hagurmukhi'] = 0x0A39;\n t['haharabic'] = 0x062D;\n t['hahfinalarabic'] = 0xFEA2;\n t['hahinitialarabic'] = 0xFEA3;\n t['hahiragana'] = 0x306F;\n t['hahmedialarabic'] = 0xFEA4;\n t['haitusquare'] = 0x332A;\n t['hakatakana'] = 0x30CF;\n t['hakatakanahalfwidth'] = 0xFF8A;\n t['halantgurmukhi'] = 0x0A4D;\n t['hamzaarabic'] = 0x0621;\n t['hamzalowarabic'] = 0x0621;\n t['hangulfiller'] = 0x3164;\n t['hardsigncyrillic'] = 0x044A;\n t['harpoonleftbarbup'] = 0x21BC;\n t['harpoonrightbarbup'] = 0x21C0;\n t['hasquare'] = 0x33CA;\n t['hatafpatah'] = 0x05B2;\n t['hatafpatah16'] = 0x05B2;\n t['hatafpatah23'] = 0x05B2;\n t['hatafpatah2f'] = 0x05B2;\n t['hatafpatahhebrew'] = 0x05B2;\n t['hatafpatahnarrowhebrew'] = 0x05B2;\n t['hatafpatahquarterhebrew'] = 0x05B2;\n t['hatafpatahwidehebrew'] = 0x05B2;\n t['hatafqamats'] = 0x05B3;\n t['hatafqamats1b'] = 0x05B3;\n t['hatafqamats28'] = 0x05B3;\n t['hatafqamats34'] = 0x05B3;\n t['hatafqamatshebrew'] = 0x05B3;\n t['hatafqamatsnarrowhebrew'] = 0x05B3;\n t['hatafqamatsquarterhebrew'] = 0x05B3;\n t['hatafqamatswidehebrew'] = 0x05B3;\n t['hatafsegol'] = 0x05B1;\n t['hatafsegol17'] = 0x05B1;\n t['hatafsegol24'] = 0x05B1;\n t['hatafsegol30'] = 0x05B1;\n t['hatafsegolhebrew'] = 0x05B1;\n t['hatafsegolnarrowhebrew'] = 0x05B1;\n t['hatafsegolquarterhebrew'] = 0x05B1;\n t['hatafsegolwidehebrew'] = 0x05B1;\n t['hbar'] = 0x0127;\n t['hbopomofo'] = 0x310F;\n t['hbrevebelow'] = 0x1E2B;\n t['hcedilla'] = 0x1E29;\n t['hcircle'] = 0x24D7;\n t['hcircumflex'] = 0x0125;\n t['hdieresis'] = 0x1E27;\n t['hdotaccent'] = 0x1E23;\n t['hdotbelow'] = 0x1E25;\n t['he'] = 0x05D4;\n t['heart'] = 0x2665;\n t['heartsuitblack'] = 0x2665;\n t['heartsuitwhite'] = 0x2661;\n t['hedagesh'] = 0xFB34;\n t['hedageshhebrew'] = 0xFB34;\n t['hehaltonearabic'] = 0x06C1;\n t['heharabic'] = 0x0647;\n t['hehebrew'] = 0x05D4;\n t['hehfinalaltonearabic'] = 0xFBA7;\n t['hehfinalalttwoarabic'] = 0xFEEA;\n t['hehfinalarabic'] = 0xFEEA;\n t['hehhamzaabovefinalarabic'] = 0xFBA5;\n t['hehhamzaaboveisolatedarabic'] = 0xFBA4;\n t['hehinitialaltonearabic'] = 0xFBA8;\n t['hehinitialarabic'] = 0xFEEB;\n t['hehiragana'] = 0x3078;\n t['hehmedialaltonearabic'] = 0xFBA9;\n t['hehmedialarabic'] = 0xFEEC;\n t['heiseierasquare'] = 0x337B;\n t['hekatakana'] = 0x30D8;\n t['hekatakanahalfwidth'] = 0xFF8D;\n t['hekutaarusquare'] = 0x3336;\n t['henghook'] = 0x0267;\n t['herutusquare'] = 0x3339;\n t['het'] = 0x05D7;\n t['hethebrew'] = 0x05D7;\n t['hhook'] = 0x0266;\n t['hhooksuperior'] = 0x02B1;\n t['hieuhacirclekorean'] = 0x327B;\n t['hieuhaparenkorean'] = 0x321B;\n t['hieuhcirclekorean'] = 0x326D;\n t['hieuhkorean'] = 0x314E;\n t['hieuhparenkorean'] = 0x320D;\n t['hihiragana'] = 0x3072;\n t['hikatakana'] = 0x30D2;\n t['hikatakanahalfwidth'] = 0xFF8B;\n t['hiriq'] = 0x05B4;\n t['hiriq14'] = 0x05B4;\n t['hiriq21'] = 0x05B4;\n t['hiriq2d'] = 0x05B4;\n t['hiriqhebrew'] = 0x05B4;\n t['hiriqnarrowhebrew'] = 0x05B4;\n t['hiriqquarterhebrew'] = 0x05B4;\n t['hiriqwidehebrew'] = 0x05B4;\n t['hlinebelow'] = 0x1E96;\n t['hmonospace'] = 0xFF48;\n t['hoarmenian'] = 0x0570;\n t['hohipthai'] = 0x0E2B;\n t['hohiragana'] = 0x307B;\n t['hokatakana'] = 0x30DB;\n t['hokatakanahalfwidth'] = 0xFF8E;\n t['holam'] = 0x05B9;\n t['holam19'] = 0x05B9;\n t['holam26'] = 0x05B9;\n t['holam32'] = 0x05B9;\n t['holamhebrew'] = 0x05B9;\n t['holamnarrowhebrew'] = 0x05B9;\n t['holamquarterhebrew'] = 0x05B9;\n t['holamwidehebrew'] = 0x05B9;\n t['honokhukthai'] = 0x0E2E;\n t['hookabovecomb'] = 0x0309;\n t['hookcmb'] = 0x0309;\n t['hookpalatalizedbelowcmb'] = 0x0321;\n t['hookretroflexbelowcmb'] = 0x0322;\n t['hoonsquare'] = 0x3342;\n t['horicoptic'] = 0x03E9;\n t['horizontalbar'] = 0x2015;\n t['horncmb'] = 0x031B;\n t['hotsprings'] = 0x2668;\n t['house'] = 0x2302;\n t['hparen'] = 0x24A3;\n t['hsuperior'] = 0x02B0;\n t['hturned'] = 0x0265;\n t['huhiragana'] = 0x3075;\n t['huiitosquare'] = 0x3333;\n t['hukatakana'] = 0x30D5;\n t['hukatakanahalfwidth'] = 0xFF8C;\n t['hungarumlaut'] = 0x02DD;\n t['hungarumlautcmb'] = 0x030B;\n t['hv'] = 0x0195;\n t['hyphen'] = 0x002D;\n t['hypheninferior'] = 0xF6E5;\n t['hyphenmonospace'] = 0xFF0D;\n t['hyphensmall'] = 0xFE63;\n t['hyphensuperior'] = 0xF6E6;\n t['hyphentwo'] = 0x2010;\n t['i'] = 0x0069;\n t['iacute'] = 0x00ED;\n t['iacyrillic'] = 0x044F;\n t['ibengali'] = 0x0987;\n t['ibopomofo'] = 0x3127;\n t['ibreve'] = 0x012D;\n t['icaron'] = 0x01D0;\n t['icircle'] = 0x24D8;\n t['icircumflex'] = 0x00EE;\n t['icyrillic'] = 0x0456;\n t['idblgrave'] = 0x0209;\n t['ideographearthcircle'] = 0x328F;\n t['ideographfirecircle'] = 0x328B;\n t['ideographicallianceparen'] = 0x323F;\n t['ideographiccallparen'] = 0x323A;\n t['ideographiccentrecircle'] = 0x32A5;\n t['ideographicclose'] = 0x3006;\n t['ideographiccomma'] = 0x3001;\n t['ideographiccommaleft'] = 0xFF64;\n t['ideographiccongratulationparen'] = 0x3237;\n t['ideographiccorrectcircle'] = 0x32A3;\n t['ideographicearthparen'] = 0x322F;\n t['ideographicenterpriseparen'] = 0x323D;\n t['ideographicexcellentcircle'] = 0x329D;\n t['ideographicfestivalparen'] = 0x3240;\n t['ideographicfinancialcircle'] = 0x3296;\n t['ideographicfinancialparen'] = 0x3236;\n t['ideographicfireparen'] = 0x322B;\n t['ideographichaveparen'] = 0x3232;\n t['ideographichighcircle'] = 0x32A4;\n t['ideographiciterationmark'] = 0x3005;\n t['ideographiclaborcircle'] = 0x3298;\n t['ideographiclaborparen'] = 0x3238;\n t['ideographicleftcircle'] = 0x32A7;\n t['ideographiclowcircle'] = 0x32A6;\n t['ideographicmedicinecircle'] = 0x32A9;\n t['ideographicmetalparen'] = 0x322E;\n t['ideographicmoonparen'] = 0x322A;\n t['ideographicnameparen'] = 0x3234;\n t['ideographicperiod'] = 0x3002;\n t['ideographicprintcircle'] = 0x329E;\n t['ideographicreachparen'] = 0x3243;\n t['ideographicrepresentparen'] = 0x3239;\n t['ideographicresourceparen'] = 0x323E;\n t['ideographicrightcircle'] = 0x32A8;\n t['ideographicsecretcircle'] = 0x3299;\n t['ideographicselfparen'] = 0x3242;\n t['ideographicsocietyparen'] = 0x3233;\n t['ideographicspace'] = 0x3000;\n t['ideographicspecialparen'] = 0x3235;\n t['ideographicstockparen'] = 0x3231;\n t['ideographicstudyparen'] = 0x323B;\n t['ideographicsunparen'] = 0x3230;\n t['ideographicsuperviseparen'] = 0x323C;\n t['ideographicwaterparen'] = 0x322C;\n t['ideographicwoodparen'] = 0x322D;\n t['ideographiczero'] = 0x3007;\n t['ideographmetalcircle'] = 0x328E;\n t['ideographmooncircle'] = 0x328A;\n t['ideographnamecircle'] = 0x3294;\n t['ideographsuncircle'] = 0x3290;\n t['ideographwatercircle'] = 0x328C;\n t['ideographwoodcircle'] = 0x328D;\n t['ideva'] = 0x0907;\n t['idieresis'] = 0x00EF;\n t['idieresisacute'] = 0x1E2F;\n t['idieresiscyrillic'] = 0x04E5;\n t['idotbelow'] = 0x1ECB;\n t['iebrevecyrillic'] = 0x04D7;\n t['iecyrillic'] = 0x0435;\n t['ieungacirclekorean'] = 0x3275;\n t['ieungaparenkorean'] = 0x3215;\n t['ieungcirclekorean'] = 0x3267;\n t['ieungkorean'] = 0x3147;\n t['ieungparenkorean'] = 0x3207;\n t['igrave'] = 0x00EC;\n t['igujarati'] = 0x0A87;\n t['igurmukhi'] = 0x0A07;\n t['ihiragana'] = 0x3044;\n t['ihookabove'] = 0x1EC9;\n t['iibengali'] = 0x0988;\n t['iicyrillic'] = 0x0438;\n t['iideva'] = 0x0908;\n t['iigujarati'] = 0x0A88;\n t['iigurmukhi'] = 0x0A08;\n t['iimatragurmukhi'] = 0x0A40;\n t['iinvertedbreve'] = 0x020B;\n t['iishortcyrillic'] = 0x0439;\n t['iivowelsignbengali'] = 0x09C0;\n t['iivowelsigndeva'] = 0x0940;\n t['iivowelsigngujarati'] = 0x0AC0;\n t['ij'] = 0x0133;\n t['ikatakana'] = 0x30A4;\n t['ikatakanahalfwidth'] = 0xFF72;\n t['ikorean'] = 0x3163;\n t['ilde'] = 0x02DC;\n t['iluyhebrew'] = 0x05AC;\n t['imacron'] = 0x012B;\n t['imacroncyrillic'] = 0x04E3;\n t['imageorapproximatelyequal'] = 0x2253;\n t['imatragurmukhi'] = 0x0A3F;\n t['imonospace'] = 0xFF49;\n t['increment'] = 0x2206;\n t['infinity'] = 0x221E;\n t['iniarmenian'] = 0x056B;\n t['integral'] = 0x222B;\n t['integralbottom'] = 0x2321;\n t['integralbt'] = 0x2321;\n t['integralex'] = 0xF8F5;\n t['integraltop'] = 0x2320;\n t['integraltp'] = 0x2320;\n t['intersection'] = 0x2229;\n t['intisquare'] = 0x3305;\n t['invbullet'] = 0x25D8;\n t['invcircle'] = 0x25D9;\n t['invsmileface'] = 0x263B;\n t['iocyrillic'] = 0x0451;\n t['iogonek'] = 0x012F;\n t['iota'] = 0x03B9;\n t['iotadieresis'] = 0x03CA;\n t['iotadieresistonos'] = 0x0390;\n t['iotalatin'] = 0x0269;\n t['iotatonos'] = 0x03AF;\n t['iparen'] = 0x24A4;\n t['irigurmukhi'] = 0x0A72;\n t['ismallhiragana'] = 0x3043;\n t['ismallkatakana'] = 0x30A3;\n t['ismallkatakanahalfwidth'] = 0xFF68;\n t['issharbengali'] = 0x09FA;\n t['istroke'] = 0x0268;\n t['isuperior'] = 0xF6ED;\n t['iterationhiragana'] = 0x309D;\n t['iterationkatakana'] = 0x30FD;\n t['itilde'] = 0x0129;\n t['itildebelow'] = 0x1E2D;\n t['iubopomofo'] = 0x3129;\n t['iucyrillic'] = 0x044E;\n t['ivowelsignbengali'] = 0x09BF;\n t['ivowelsigndeva'] = 0x093F;\n t['ivowelsigngujarati'] = 0x0ABF;\n t['izhitsacyrillic'] = 0x0475;\n t['izhitsadblgravecyrillic'] = 0x0477;\n t['j'] = 0x006A;\n t['jaarmenian'] = 0x0571;\n t['jabengali'] = 0x099C;\n t['jadeva'] = 0x091C;\n t['jagujarati'] = 0x0A9C;\n t['jagurmukhi'] = 0x0A1C;\n t['jbopomofo'] = 0x3110;\n t['jcaron'] = 0x01F0;\n t['jcircle'] = 0x24D9;\n t['jcircumflex'] = 0x0135;\n t['jcrossedtail'] = 0x029D;\n t['jdotlessstroke'] = 0x025F;\n t['jecyrillic'] = 0x0458;\n t['jeemarabic'] = 0x062C;\n t['jeemfinalarabic'] = 0xFE9E;\n t['jeeminitialarabic'] = 0xFE9F;\n t['jeemmedialarabic'] = 0xFEA0;\n t['jeharabic'] = 0x0698;\n t['jehfinalarabic'] = 0xFB8B;\n t['jhabengali'] = 0x099D;\n t['jhadeva'] = 0x091D;\n t['jhagujarati'] = 0x0A9D;\n t['jhagurmukhi'] = 0x0A1D;\n t['jheharmenian'] = 0x057B;\n t['jis'] = 0x3004;\n t['jmonospace'] = 0xFF4A;\n t['jparen'] = 0x24A5;\n t['jsuperior'] = 0x02B2;\n t['k'] = 0x006B;\n t['kabashkircyrillic'] = 0x04A1;\n t['kabengali'] = 0x0995;\n t['kacute'] = 0x1E31;\n t['kacyrillic'] = 0x043A;\n t['kadescendercyrillic'] = 0x049B;\n t['kadeva'] = 0x0915;\n t['kaf'] = 0x05DB;\n t['kafarabic'] = 0x0643;\n t['kafdagesh'] = 0xFB3B;\n t['kafdageshhebrew'] = 0xFB3B;\n t['kaffinalarabic'] = 0xFEDA;\n t['kafhebrew'] = 0x05DB;\n t['kafinitialarabic'] = 0xFEDB;\n t['kafmedialarabic'] = 0xFEDC;\n t['kafrafehebrew'] = 0xFB4D;\n t['kagujarati'] = 0x0A95;\n t['kagurmukhi'] = 0x0A15;\n t['kahiragana'] = 0x304B;\n t['kahookcyrillic'] = 0x04C4;\n t['kakatakana'] = 0x30AB;\n t['kakatakanahalfwidth'] = 0xFF76;\n t['kappa'] = 0x03BA;\n t['kappasymbolgreek'] = 0x03F0;\n t['kapyeounmieumkorean'] = 0x3171;\n t['kapyeounphieuphkorean'] = 0x3184;\n t['kapyeounpieupkorean'] = 0x3178;\n t['kapyeounssangpieupkorean'] = 0x3179;\n t['karoriisquare'] = 0x330D;\n t['kashidaautoarabic'] = 0x0640;\n t['kashidaautonosidebearingarabic'] = 0x0640;\n t['kasmallkatakana'] = 0x30F5;\n t['kasquare'] = 0x3384;\n t['kasraarabic'] = 0x0650;\n t['kasratanarabic'] = 0x064D;\n t['kastrokecyrillic'] = 0x049F;\n t['katahiraprolongmarkhalfwidth'] = 0xFF70;\n t['kaverticalstrokecyrillic'] = 0x049D;\n t['kbopomofo'] = 0x310E;\n t['kcalsquare'] = 0x3389;\n t['kcaron'] = 0x01E9;\n t['kcedilla'] = 0x0137;\n t['kcircle'] = 0x24DA;\n t['kcommaaccent'] = 0x0137;\n t['kdotbelow'] = 0x1E33;\n t['keharmenian'] = 0x0584;\n t['kehiragana'] = 0x3051;\n t['kekatakana'] = 0x30B1;\n t['kekatakanahalfwidth'] = 0xFF79;\n t['kenarmenian'] = 0x056F;\n t['kesmallkatakana'] = 0x30F6;\n t['kgreenlandic'] = 0x0138;\n t['khabengali'] = 0x0996;\n t['khacyrillic'] = 0x0445;\n t['khadeva'] = 0x0916;\n t['khagujarati'] = 0x0A96;\n t['khagurmukhi'] = 0x0A16;\n t['khaharabic'] = 0x062E;\n t['khahfinalarabic'] = 0xFEA6;\n t['khahinitialarabic'] = 0xFEA7;\n t['khahmedialarabic'] = 0xFEA8;\n t['kheicoptic'] = 0x03E7;\n t['khhadeva'] = 0x0959;\n t['khhagurmukhi'] = 0x0A59;\n t['khieukhacirclekorean'] = 0x3278;\n t['khieukhaparenkorean'] = 0x3218;\n t['khieukhcirclekorean'] = 0x326A;\n t['khieukhkorean'] = 0x314B;\n t['khieukhparenkorean'] = 0x320A;\n t['khokhaithai'] = 0x0E02;\n t['khokhonthai'] = 0x0E05;\n t['khokhuatthai'] = 0x0E03;\n t['khokhwaithai'] = 0x0E04;\n t['khomutthai'] = 0x0E5B;\n t['khook'] = 0x0199;\n t['khorakhangthai'] = 0x0E06;\n t['khzsquare'] = 0x3391;\n t['kihiragana'] = 0x304D;\n t['kikatakana'] = 0x30AD;\n t['kikatakanahalfwidth'] = 0xFF77;\n t['kiroguramusquare'] = 0x3315;\n t['kiromeetorusquare'] = 0x3316;\n t['kirosquare'] = 0x3314;\n t['kiyeokacirclekorean'] = 0x326E;\n t['kiyeokaparenkorean'] = 0x320E;\n t['kiyeokcirclekorean'] = 0x3260;\n t['kiyeokkorean'] = 0x3131;\n t['kiyeokparenkorean'] = 0x3200;\n t['kiyeoksioskorean'] = 0x3133;\n t['kjecyrillic'] = 0x045C;\n t['klinebelow'] = 0x1E35;\n t['klsquare'] = 0x3398;\n t['kmcubedsquare'] = 0x33A6;\n t['kmonospace'] = 0xFF4B;\n t['kmsquaredsquare'] = 0x33A2;\n t['kohiragana'] = 0x3053;\n t['kohmsquare'] = 0x33C0;\n t['kokaithai'] = 0x0E01;\n t['kokatakana'] = 0x30B3;\n t['kokatakanahalfwidth'] = 0xFF7A;\n t['kooposquare'] = 0x331E;\n t['koppacyrillic'] = 0x0481;\n t['koreanstandardsymbol'] = 0x327F;\n t['koroniscmb'] = 0x0343;\n t['kparen'] = 0x24A6;\n t['kpasquare'] = 0x33AA;\n t['ksicyrillic'] = 0x046F;\n t['ktsquare'] = 0x33CF;\n t['kturned'] = 0x029E;\n t['kuhiragana'] = 0x304F;\n t['kukatakana'] = 0x30AF;\n t['kukatakanahalfwidth'] = 0xFF78;\n t['kvsquare'] = 0x33B8;\n t['kwsquare'] = 0x33BE;\n t['l'] = 0x006C;\n t['labengali'] = 0x09B2;\n t['lacute'] = 0x013A;\n t['ladeva'] = 0x0932;\n t['lagujarati'] = 0x0AB2;\n t['lagurmukhi'] = 0x0A32;\n t['lakkhangyaothai'] = 0x0E45;\n t['lamaleffinalarabic'] = 0xFEFC;\n t['lamalefhamzaabovefinalarabic'] = 0xFEF8;\n t['lamalefhamzaaboveisolatedarabic'] = 0xFEF7;\n t['lamalefhamzabelowfinalarabic'] = 0xFEFA;\n t['lamalefhamzabelowisolatedarabic'] = 0xFEF9;\n t['lamalefisolatedarabic'] = 0xFEFB;\n t['lamalefmaddaabovefinalarabic'] = 0xFEF6;\n t['lamalefmaddaaboveisolatedarabic'] = 0xFEF5;\n t['lamarabic'] = 0x0644;\n t['lambda'] = 0x03BB;\n t['lambdastroke'] = 0x019B;\n t['lamed'] = 0x05DC;\n t['lameddagesh'] = 0xFB3C;\n t['lameddageshhebrew'] = 0xFB3C;\n t['lamedhebrew'] = 0x05DC;\n t['lamfinalarabic'] = 0xFEDE;\n t['lamhahinitialarabic'] = 0xFCCA;\n t['laminitialarabic'] = 0xFEDF;\n t['lamjeeminitialarabic'] = 0xFCC9;\n t['lamkhahinitialarabic'] = 0xFCCB;\n t['lamlamhehisolatedarabic'] = 0xFDF2;\n t['lammedialarabic'] = 0xFEE0;\n t['lammeemhahinitialarabic'] = 0xFD88;\n t['lammeeminitialarabic'] = 0xFCCC;\n t['largecircle'] = 0x25EF;\n t['lbar'] = 0x019A;\n t['lbelt'] = 0x026C;\n t['lbopomofo'] = 0x310C;\n t['lcaron'] = 0x013E;\n t['lcedilla'] = 0x013C;\n t['lcircle'] = 0x24DB;\n t['lcircumflexbelow'] = 0x1E3D;\n t['lcommaaccent'] = 0x013C;\n t['ldot'] = 0x0140;\n t['ldotaccent'] = 0x0140;\n t['ldotbelow'] = 0x1E37;\n t['ldotbelowmacron'] = 0x1E39;\n t['leftangleabovecmb'] = 0x031A;\n t['lefttackbelowcmb'] = 0x0318;\n t['less'] = 0x003C;\n t['lessequal'] = 0x2264;\n t['lessequalorgreater'] = 0x22DA;\n t['lessmonospace'] = 0xFF1C;\n t['lessorequivalent'] = 0x2272;\n t['lessorgreater'] = 0x2276;\n t['lessoverequal'] = 0x2266;\n t['lesssmall'] = 0xFE64;\n t['lezh'] = 0x026E;\n t['lfblock'] = 0x258C;\n t['lhookretroflex'] = 0x026D;\n t['lira'] = 0x20A4;\n t['liwnarmenian'] = 0x056C;\n t['lj'] = 0x01C9;\n t['ljecyrillic'] = 0x0459;\n t['ll'] = 0xF6C0;\n t['lladeva'] = 0x0933;\n t['llagujarati'] = 0x0AB3;\n t['llinebelow'] = 0x1E3B;\n t['llladeva'] = 0x0934;\n t['llvocalicbengali'] = 0x09E1;\n t['llvocalicdeva'] = 0x0961;\n t['llvocalicvowelsignbengali'] = 0x09E3;\n t['llvocalicvowelsigndeva'] = 0x0963;\n t['lmiddletilde'] = 0x026B;\n t['lmonospace'] = 0xFF4C;\n t['lmsquare'] = 0x33D0;\n t['lochulathai'] = 0x0E2C;\n t['logicaland'] = 0x2227;\n t['logicalnot'] = 0x00AC;\n t['logicalnotreversed'] = 0x2310;\n t['logicalor'] = 0x2228;\n t['lolingthai'] = 0x0E25;\n t['longs'] = 0x017F;\n t['lowlinecenterline'] = 0xFE4E;\n t['lowlinecmb'] = 0x0332;\n t['lowlinedashed'] = 0xFE4D;\n t['lozenge'] = 0x25CA;\n t['lparen'] = 0x24A7;\n t['lslash'] = 0x0142;\n t['lsquare'] = 0x2113;\n t['lsuperior'] = 0xF6EE;\n t['ltshade'] = 0x2591;\n t['luthai'] = 0x0E26;\n t['lvocalicbengali'] = 0x098C;\n t['lvocalicdeva'] = 0x090C;\n t['lvocalicvowelsignbengali'] = 0x09E2;\n t['lvocalicvowelsigndeva'] = 0x0962;\n t['lxsquare'] = 0x33D3;\n t['m'] = 0x006D;\n t['mabengali'] = 0x09AE;\n t['macron'] = 0x00AF;\n t['macronbelowcmb'] = 0x0331;\n t['macroncmb'] = 0x0304;\n t['macronlowmod'] = 0x02CD;\n t['macronmonospace'] = 0xFFE3;\n t['macute'] = 0x1E3F;\n t['madeva'] = 0x092E;\n t['magujarati'] = 0x0AAE;\n t['magurmukhi'] = 0x0A2E;\n t['mahapakhhebrew'] = 0x05A4;\n t['mahapakhlefthebrew'] = 0x05A4;\n t['mahiragana'] = 0x307E;\n t['maichattawalowleftthai'] = 0xF895;\n t['maichattawalowrightthai'] = 0xF894;\n t['maichattawathai'] = 0x0E4B;\n t['maichattawaupperleftthai'] = 0xF893;\n t['maieklowleftthai'] = 0xF88C;\n t['maieklowrightthai'] = 0xF88B;\n t['maiekthai'] = 0x0E48;\n t['maiekupperleftthai'] = 0xF88A;\n t['maihanakatleftthai'] = 0xF884;\n t['maihanakatthai'] = 0x0E31;\n t['maitaikhuleftthai'] = 0xF889;\n t['maitaikhuthai'] = 0x0E47;\n t['maitholowleftthai'] = 0xF88F;\n t['maitholowrightthai'] = 0xF88E;\n t['maithothai'] = 0x0E49;\n t['maithoupperleftthai'] = 0xF88D;\n t['maitrilowleftthai'] = 0xF892;\n t['maitrilowrightthai'] = 0xF891;\n t['maitrithai'] = 0x0E4A;\n t['maitriupperleftthai'] = 0xF890;\n t['maiyamokthai'] = 0x0E46;\n t['makatakana'] = 0x30DE;\n t['makatakanahalfwidth'] = 0xFF8F;\n t['male'] = 0x2642;\n t['mansyonsquare'] = 0x3347;\n t['maqafhebrew'] = 0x05BE;\n t['mars'] = 0x2642;\n t['masoracirclehebrew'] = 0x05AF;\n t['masquare'] = 0x3383;\n t['mbopomofo'] = 0x3107;\n t['mbsquare'] = 0x33D4;\n t['mcircle'] = 0x24DC;\n t['mcubedsquare'] = 0x33A5;\n t['mdotaccent'] = 0x1E41;\n t['mdotbelow'] = 0x1E43;\n t['meemarabic'] = 0x0645;\n t['meemfinalarabic'] = 0xFEE2;\n t['meeminitialarabic'] = 0xFEE3;\n t['meemmedialarabic'] = 0xFEE4;\n t['meemmeeminitialarabic'] = 0xFCD1;\n t['meemmeemisolatedarabic'] = 0xFC48;\n t['meetorusquare'] = 0x334D;\n t['mehiragana'] = 0x3081;\n t['meizierasquare'] = 0x337E;\n t['mekatakana'] = 0x30E1;\n t['mekatakanahalfwidth'] = 0xFF92;\n t['mem'] = 0x05DE;\n t['memdagesh'] = 0xFB3E;\n t['memdageshhebrew'] = 0xFB3E;\n t['memhebrew'] = 0x05DE;\n t['menarmenian'] = 0x0574;\n t['merkhahebrew'] = 0x05A5;\n t['merkhakefulahebrew'] = 0x05A6;\n t['merkhakefulalefthebrew'] = 0x05A6;\n t['merkhalefthebrew'] = 0x05A5;\n t['mhook'] = 0x0271;\n t['mhzsquare'] = 0x3392;\n t['middledotkatakanahalfwidth'] = 0xFF65;\n t['middot'] = 0x00B7;\n t['mieumacirclekorean'] = 0x3272;\n t['mieumaparenkorean'] = 0x3212;\n t['mieumcirclekorean'] = 0x3264;\n t['mieumkorean'] = 0x3141;\n t['mieumpansioskorean'] = 0x3170;\n t['mieumparenkorean'] = 0x3204;\n t['mieumpieupkorean'] = 0x316E;\n t['mieumsioskorean'] = 0x316F;\n t['mihiragana'] = 0x307F;\n t['mikatakana'] = 0x30DF;\n t['mikatakanahalfwidth'] = 0xFF90;\n t['minus'] = 0x2212;\n t['minusbelowcmb'] = 0x0320;\n t['minuscircle'] = 0x2296;\n t['minusmod'] = 0x02D7;\n t['minusplus'] = 0x2213;\n t['minute'] = 0x2032;\n t['miribaarusquare'] = 0x334A;\n t['mirisquare'] = 0x3349;\n t['mlonglegturned'] = 0x0270;\n t['mlsquare'] = 0x3396;\n t['mmcubedsquare'] = 0x33A3;\n t['mmonospace'] = 0xFF4D;\n t['mmsquaredsquare'] = 0x339F;\n t['mohiragana'] = 0x3082;\n t['mohmsquare'] = 0x33C1;\n t['mokatakana'] = 0x30E2;\n t['mokatakanahalfwidth'] = 0xFF93;\n t['molsquare'] = 0x33D6;\n t['momathai'] = 0x0E21;\n t['moverssquare'] = 0x33A7;\n t['moverssquaredsquare'] = 0x33A8;\n t['mparen'] = 0x24A8;\n t['mpasquare'] = 0x33AB;\n t['mssquare'] = 0x33B3;\n t['msuperior'] = 0xF6EF;\n t['mturned'] = 0x026F;\n t['mu'] = 0x00B5;\n t['mu1'] = 0x00B5;\n t['muasquare'] = 0x3382;\n t['muchgreater'] = 0x226B;\n t['muchless'] = 0x226A;\n t['mufsquare'] = 0x338C;\n t['mugreek'] = 0x03BC;\n t['mugsquare'] = 0x338D;\n t['muhiragana'] = 0x3080;\n t['mukatakana'] = 0x30E0;\n t['mukatakanahalfwidth'] = 0xFF91;\n t['mulsquare'] = 0x3395;\n t['multiply'] = 0x00D7;\n t['mumsquare'] = 0x339B;\n t['munahhebrew'] = 0x05A3;\n t['munahlefthebrew'] = 0x05A3;\n t['musicalnote'] = 0x266A;\n t['musicalnotedbl'] = 0x266B;\n t['musicflatsign'] = 0x266D;\n t['musicsharpsign'] = 0x266F;\n t['mussquare'] = 0x33B2;\n t['muvsquare'] = 0x33B6;\n t['muwsquare'] = 0x33BC;\n t['mvmegasquare'] = 0x33B9;\n t['mvsquare'] = 0x33B7;\n t['mwmegasquare'] = 0x33BF;\n t['mwsquare'] = 0x33BD;\n t['n'] = 0x006E;\n t['nabengali'] = 0x09A8;\n t['nabla'] = 0x2207;\n t['nacute'] = 0x0144;\n t['nadeva'] = 0x0928;\n t['nagujarati'] = 0x0AA8;\n t['nagurmukhi'] = 0x0A28;\n t['nahiragana'] = 0x306A;\n t['nakatakana'] = 0x30CA;\n t['nakatakanahalfwidth'] = 0xFF85;\n t['napostrophe'] = 0x0149;\n t['nasquare'] = 0x3381;\n t['nbopomofo'] = 0x310B;\n t['nbspace'] = 0x00A0;\n t['ncaron'] = 0x0148;\n t['ncedilla'] = 0x0146;\n t['ncircle'] = 0x24DD;\n t['ncircumflexbelow'] = 0x1E4B;\n t['ncommaaccent'] = 0x0146;\n t['ndotaccent'] = 0x1E45;\n t['ndotbelow'] = 0x1E47;\n t['nehiragana'] = 0x306D;\n t['nekatakana'] = 0x30CD;\n t['nekatakanahalfwidth'] = 0xFF88;\n t['newsheqelsign'] = 0x20AA;\n t['nfsquare'] = 0x338B;\n t['ngabengali'] = 0x0999;\n t['ngadeva'] = 0x0919;\n t['ngagujarati'] = 0x0A99;\n t['ngagurmukhi'] = 0x0A19;\n t['ngonguthai'] = 0x0E07;\n t['nhiragana'] = 0x3093;\n t['nhookleft'] = 0x0272;\n t['nhookretroflex'] = 0x0273;\n t['nieunacirclekorean'] = 0x326F;\n t['nieunaparenkorean'] = 0x320F;\n t['nieuncieuckorean'] = 0x3135;\n t['nieuncirclekorean'] = 0x3261;\n t['nieunhieuhkorean'] = 0x3136;\n t['nieunkorean'] = 0x3134;\n t['nieunpansioskorean'] = 0x3168;\n t['nieunparenkorean'] = 0x3201;\n t['nieunsioskorean'] = 0x3167;\n t['nieuntikeutkorean'] = 0x3166;\n t['nihiragana'] = 0x306B;\n t['nikatakana'] = 0x30CB;\n t['nikatakanahalfwidth'] = 0xFF86;\n t['nikhahitleftthai'] = 0xF899;\n t['nikhahitthai'] = 0x0E4D;\n t['nine'] = 0x0039;\n t['ninearabic'] = 0x0669;\n t['ninebengali'] = 0x09EF;\n t['ninecircle'] = 0x2468;\n t['ninecircleinversesansserif'] = 0x2792;\n t['ninedeva'] = 0x096F;\n t['ninegujarati'] = 0x0AEF;\n t['ninegurmukhi'] = 0x0A6F;\n t['ninehackarabic'] = 0x0669;\n t['ninehangzhou'] = 0x3029;\n t['nineideographicparen'] = 0x3228;\n t['nineinferior'] = 0x2089;\n t['ninemonospace'] = 0xFF19;\n t['nineoldstyle'] = 0xF739;\n t['nineparen'] = 0x247C;\n t['nineperiod'] = 0x2490;\n t['ninepersian'] = 0x06F9;\n t['nineroman'] = 0x2178;\n t['ninesuperior'] = 0x2079;\n t['nineteencircle'] = 0x2472;\n t['nineteenparen'] = 0x2486;\n t['nineteenperiod'] = 0x249A;\n t['ninethai'] = 0x0E59;\n t['nj'] = 0x01CC;\n t['njecyrillic'] = 0x045A;\n t['nkatakana'] = 0x30F3;\n t['nkatakanahalfwidth'] = 0xFF9D;\n t['nlegrightlong'] = 0x019E;\n t['nlinebelow'] = 0x1E49;\n t['nmonospace'] = 0xFF4E;\n t['nmsquare'] = 0x339A;\n t['nnabengali'] = 0x09A3;\n t['nnadeva'] = 0x0923;\n t['nnagujarati'] = 0x0AA3;\n t['nnagurmukhi'] = 0x0A23;\n t['nnnadeva'] = 0x0929;\n t['nohiragana'] = 0x306E;\n t['nokatakana'] = 0x30CE;\n t['nokatakanahalfwidth'] = 0xFF89;\n t['nonbreakingspace'] = 0x00A0;\n t['nonenthai'] = 0x0E13;\n t['nonuthai'] = 0x0E19;\n t['noonarabic'] = 0x0646;\n t['noonfinalarabic'] = 0xFEE6;\n t['noonghunnaarabic'] = 0x06BA;\n t['noonghunnafinalarabic'] = 0xFB9F;\n t['nooninitialarabic'] = 0xFEE7;\n t['noonjeeminitialarabic'] = 0xFCD2;\n t['noonjeemisolatedarabic'] = 0xFC4B;\n t['noonmedialarabic'] = 0xFEE8;\n t['noonmeeminitialarabic'] = 0xFCD5;\n t['noonmeemisolatedarabic'] = 0xFC4E;\n t['noonnoonfinalarabic'] = 0xFC8D;\n t['notcontains'] = 0x220C;\n t['notelement'] = 0x2209;\n t['notelementof'] = 0x2209;\n t['notequal'] = 0x2260;\n t['notgreater'] = 0x226F;\n t['notgreaternorequal'] = 0x2271;\n t['notgreaternorless'] = 0x2279;\n t['notidentical'] = 0x2262;\n t['notless'] = 0x226E;\n t['notlessnorequal'] = 0x2270;\n t['notparallel'] = 0x2226;\n t['notprecedes'] = 0x2280;\n t['notsubset'] = 0x2284;\n t['notsucceeds'] = 0x2281;\n t['notsuperset'] = 0x2285;\n t['nowarmenian'] = 0x0576;\n t['nparen'] = 0x24A9;\n t['nssquare'] = 0x33B1;\n t['nsuperior'] = 0x207F;\n t['ntilde'] = 0x00F1;\n t['nu'] = 0x03BD;\n t['nuhiragana'] = 0x306C;\n t['nukatakana'] = 0x30CC;\n t['nukatakanahalfwidth'] = 0xFF87;\n t['nuktabengali'] = 0x09BC;\n t['nuktadeva'] = 0x093C;\n t['nuktagujarati'] = 0x0ABC;\n t['nuktagurmukhi'] = 0x0A3C;\n t['numbersign'] = 0x0023;\n t['numbersignmonospace'] = 0xFF03;\n t['numbersignsmall'] = 0xFE5F;\n t['numeralsigngreek'] = 0x0374;\n t['numeralsignlowergreek'] = 0x0375;\n t['numero'] = 0x2116;\n t['nun'] = 0x05E0;\n t['nundagesh'] = 0xFB40;\n t['nundageshhebrew'] = 0xFB40;\n t['nunhebrew'] = 0x05E0;\n t['nvsquare'] = 0x33B5;\n t['nwsquare'] = 0x33BB;\n t['nyabengali'] = 0x099E;\n t['nyadeva'] = 0x091E;\n t['nyagujarati'] = 0x0A9E;\n t['nyagurmukhi'] = 0x0A1E;\n t['o'] = 0x006F;\n t['oacute'] = 0x00F3;\n t['oangthai'] = 0x0E2D;\n t['obarred'] = 0x0275;\n t['obarredcyrillic'] = 0x04E9;\n t['obarreddieresiscyrillic'] = 0x04EB;\n t['obengali'] = 0x0993;\n t['obopomofo'] = 0x311B;\n t['obreve'] = 0x014F;\n t['ocandradeva'] = 0x0911;\n t['ocandragujarati'] = 0x0A91;\n t['ocandravowelsigndeva'] = 0x0949;\n t['ocandravowelsigngujarati'] = 0x0AC9;\n t['ocaron'] = 0x01D2;\n t['ocircle'] = 0x24DE;\n t['ocircumflex'] = 0x00F4;\n t['ocircumflexacute'] = 0x1ED1;\n t['ocircumflexdotbelow'] = 0x1ED9;\n t['ocircumflexgrave'] = 0x1ED3;\n t['ocircumflexhookabove'] = 0x1ED5;\n t['ocircumflextilde'] = 0x1ED7;\n t['ocyrillic'] = 0x043E;\n t['odblacute'] = 0x0151;\n t['odblgrave'] = 0x020D;\n t['odeva'] = 0x0913;\n t['odieresis'] = 0x00F6;\n t['odieresiscyrillic'] = 0x04E7;\n t['odotbelow'] = 0x1ECD;\n t['oe'] = 0x0153;\n t['oekorean'] = 0x315A;\n t['ogonek'] = 0x02DB;\n t['ogonekcmb'] = 0x0328;\n t['ograve'] = 0x00F2;\n t['ogujarati'] = 0x0A93;\n t['oharmenian'] = 0x0585;\n t['ohiragana'] = 0x304A;\n t['ohookabove'] = 0x1ECF;\n t['ohorn'] = 0x01A1;\n t['ohornacute'] = 0x1EDB;\n t['ohorndotbelow'] = 0x1EE3;\n t['ohorngrave'] = 0x1EDD;\n t['ohornhookabove'] = 0x1EDF;\n t['ohorntilde'] = 0x1EE1;\n t['ohungarumlaut'] = 0x0151;\n t['oi'] = 0x01A3;\n t['oinvertedbreve'] = 0x020F;\n t['okatakana'] = 0x30AA;\n t['okatakanahalfwidth'] = 0xFF75;\n t['okorean'] = 0x3157;\n t['olehebrew'] = 0x05AB;\n t['omacron'] = 0x014D;\n t['omacronacute'] = 0x1E53;\n t['omacrongrave'] = 0x1E51;\n t['omdeva'] = 0x0950;\n t['omega'] = 0x03C9;\n t['omega1'] = 0x03D6;\n t['omegacyrillic'] = 0x0461;\n t['omegalatinclosed'] = 0x0277;\n t['omegaroundcyrillic'] = 0x047B;\n t['omegatitlocyrillic'] = 0x047D;\n t['omegatonos'] = 0x03CE;\n t['omgujarati'] = 0x0AD0;\n t['omicron'] = 0x03BF;\n t['omicrontonos'] = 0x03CC;\n t['omonospace'] = 0xFF4F;\n t['one'] = 0x0031;\n t['onearabic'] = 0x0661;\n t['onebengali'] = 0x09E7;\n t['onecircle'] = 0x2460;\n t['onecircleinversesansserif'] = 0x278A;\n t['onedeva'] = 0x0967;\n t['onedotenleader'] = 0x2024;\n t['oneeighth'] = 0x215B;\n t['onefitted'] = 0xF6DC;\n t['onegujarati'] = 0x0AE7;\n t['onegurmukhi'] = 0x0A67;\n t['onehackarabic'] = 0x0661;\n t['onehalf'] = 0x00BD;\n t['onehangzhou'] = 0x3021;\n t['oneideographicparen'] = 0x3220;\n t['oneinferior'] = 0x2081;\n t['onemonospace'] = 0xFF11;\n t['onenumeratorbengali'] = 0x09F4;\n t['oneoldstyle'] = 0xF731;\n t['oneparen'] = 0x2474;\n t['oneperiod'] = 0x2488;\n t['onepersian'] = 0x06F1;\n t['onequarter'] = 0x00BC;\n t['oneroman'] = 0x2170;\n t['onesuperior'] = 0x00B9;\n t['onethai'] = 0x0E51;\n t['onethird'] = 0x2153;\n t['oogonek'] = 0x01EB;\n t['oogonekmacron'] = 0x01ED;\n t['oogurmukhi'] = 0x0A13;\n t['oomatragurmukhi'] = 0x0A4B;\n t['oopen'] = 0x0254;\n t['oparen'] = 0x24AA;\n t['openbullet'] = 0x25E6;\n t['option'] = 0x2325;\n t['ordfeminine'] = 0x00AA;\n t['ordmasculine'] = 0x00BA;\n t['orthogonal'] = 0x221F;\n t['oshortdeva'] = 0x0912;\n t['oshortvowelsigndeva'] = 0x094A;\n t['oslash'] = 0x00F8;\n t['oslashacute'] = 0x01FF;\n t['osmallhiragana'] = 0x3049;\n t['osmallkatakana'] = 0x30A9;\n t['osmallkatakanahalfwidth'] = 0xFF6B;\n t['ostrokeacute'] = 0x01FF;\n t['osuperior'] = 0xF6F0;\n t['otcyrillic'] = 0x047F;\n t['otilde'] = 0x00F5;\n t['otildeacute'] = 0x1E4D;\n t['otildedieresis'] = 0x1E4F;\n t['oubopomofo'] = 0x3121;\n t['overline'] = 0x203E;\n t['overlinecenterline'] = 0xFE4A;\n t['overlinecmb'] = 0x0305;\n t['overlinedashed'] = 0xFE49;\n t['overlinedblwavy'] = 0xFE4C;\n t['overlinewavy'] = 0xFE4B;\n t['overscore'] = 0x00AF;\n t['ovowelsignbengali'] = 0x09CB;\n t['ovowelsigndeva'] = 0x094B;\n t['ovowelsigngujarati'] = 0x0ACB;\n t['p'] = 0x0070;\n t['paampssquare'] = 0x3380;\n t['paasentosquare'] = 0x332B;\n t['pabengali'] = 0x09AA;\n t['pacute'] = 0x1E55;\n t['padeva'] = 0x092A;\n t['pagedown'] = 0x21DF;\n t['pageup'] = 0x21DE;\n t['pagujarati'] = 0x0AAA;\n t['pagurmukhi'] = 0x0A2A;\n t['pahiragana'] = 0x3071;\n t['paiyannoithai'] = 0x0E2F;\n t['pakatakana'] = 0x30D1;\n t['palatalizationcyrilliccmb'] = 0x0484;\n t['palochkacyrillic'] = 0x04C0;\n t['pansioskorean'] = 0x317F;\n t['paragraph'] = 0x00B6;\n t['parallel'] = 0x2225;\n t['parenleft'] = 0x0028;\n t['parenleftaltonearabic'] = 0xFD3E;\n t['parenleftbt'] = 0xF8ED;\n t['parenleftex'] = 0xF8EC;\n t['parenleftinferior'] = 0x208D;\n t['parenleftmonospace'] = 0xFF08;\n t['parenleftsmall'] = 0xFE59;\n t['parenleftsuperior'] = 0x207D;\n t['parenlefttp'] = 0xF8EB;\n t['parenleftvertical'] = 0xFE35;\n t['parenright'] = 0x0029;\n t['parenrightaltonearabic'] = 0xFD3F;\n t['parenrightbt'] = 0xF8F8;\n t['parenrightex'] = 0xF8F7;\n t['parenrightinferior'] = 0x208E;\n t['parenrightmonospace'] = 0xFF09;\n t['parenrightsmall'] = 0xFE5A;\n t['parenrightsuperior'] = 0x207E;\n t['parenrighttp'] = 0xF8F6;\n t['parenrightvertical'] = 0xFE36;\n t['partialdiff'] = 0x2202;\n t['paseqhebrew'] = 0x05C0;\n t['pashtahebrew'] = 0x0599;\n t['pasquare'] = 0x33A9;\n t['patah'] = 0x05B7;\n t['patah11'] = 0x05B7;\n t['patah1d'] = 0x05B7;\n t['patah2a'] = 0x05B7;\n t['patahhebrew'] = 0x05B7;\n t['patahnarrowhebrew'] = 0x05B7;\n t['patahquarterhebrew'] = 0x05B7;\n t['patahwidehebrew'] = 0x05B7;\n t['pazerhebrew'] = 0x05A1;\n t['pbopomofo'] = 0x3106;\n t['pcircle'] = 0x24DF;\n t['pdotaccent'] = 0x1E57;\n t['pe'] = 0x05E4;\n t['pecyrillic'] = 0x043F;\n t['pedagesh'] = 0xFB44;\n t['pedageshhebrew'] = 0xFB44;\n t['peezisquare'] = 0x333B;\n t['pefinaldageshhebrew'] = 0xFB43;\n t['peharabic'] = 0x067E;\n t['peharmenian'] = 0x057A;\n t['pehebrew'] = 0x05E4;\n t['pehfinalarabic'] = 0xFB57;\n t['pehinitialarabic'] = 0xFB58;\n t['pehiragana'] = 0x307A;\n t['pehmedialarabic'] = 0xFB59;\n t['pekatakana'] = 0x30DA;\n t['pemiddlehookcyrillic'] = 0x04A7;\n t['perafehebrew'] = 0xFB4E;\n t['percent'] = 0x0025;\n t['percentarabic'] = 0x066A;\n t['percentmonospace'] = 0xFF05;\n t['percentsmall'] = 0xFE6A;\n t['period'] = 0x002E;\n t['periodarmenian'] = 0x0589;\n t['periodcentered'] = 0x00B7;\n t['periodhalfwidth'] = 0xFF61;\n t['periodinferior'] = 0xF6E7;\n t['periodmonospace'] = 0xFF0E;\n t['periodsmall'] = 0xFE52;\n t['periodsuperior'] = 0xF6E8;\n t['perispomenigreekcmb'] = 0x0342;\n t['perpendicular'] = 0x22A5;\n t['perthousand'] = 0x2030;\n t['peseta'] = 0x20A7;\n t['pfsquare'] = 0x338A;\n t['phabengali'] = 0x09AB;\n t['phadeva'] = 0x092B;\n t['phagujarati'] = 0x0AAB;\n t['phagurmukhi'] = 0x0A2B;\n t['phi'] = 0x03C6;\n t['phi1'] = 0x03D5;\n t['phieuphacirclekorean'] = 0x327A;\n t['phieuphaparenkorean'] = 0x321A;\n t['phieuphcirclekorean'] = 0x326C;\n t['phieuphkorean'] = 0x314D;\n t['phieuphparenkorean'] = 0x320C;\n t['philatin'] = 0x0278;\n t['phinthuthai'] = 0x0E3A;\n t['phisymbolgreek'] = 0x03D5;\n t['phook'] = 0x01A5;\n t['phophanthai'] = 0x0E1E;\n t['phophungthai'] = 0x0E1C;\n t['phosamphaothai'] = 0x0E20;\n t['pi'] = 0x03C0;\n t['pieupacirclekorean'] = 0x3273;\n t['pieupaparenkorean'] = 0x3213;\n t['pieupcieuckorean'] = 0x3176;\n t['pieupcirclekorean'] = 0x3265;\n t['pieupkiyeokkorean'] = 0x3172;\n t['pieupkorean'] = 0x3142;\n t['pieupparenkorean'] = 0x3205;\n t['pieupsioskiyeokkorean'] = 0x3174;\n t['pieupsioskorean'] = 0x3144;\n t['pieupsiostikeutkorean'] = 0x3175;\n t['pieupthieuthkorean'] = 0x3177;\n t['pieuptikeutkorean'] = 0x3173;\n t['pihiragana'] = 0x3074;\n t['pikatakana'] = 0x30D4;\n t['pisymbolgreek'] = 0x03D6;\n t['piwrarmenian'] = 0x0583;\n t['plus'] = 0x002B;\n t['plusbelowcmb'] = 0x031F;\n t['pluscircle'] = 0x2295;\n t['plusminus'] = 0x00B1;\n t['plusmod'] = 0x02D6;\n t['plusmonospace'] = 0xFF0B;\n t['plussmall'] = 0xFE62;\n t['plussuperior'] = 0x207A;\n t['pmonospace'] = 0xFF50;\n t['pmsquare'] = 0x33D8;\n t['pohiragana'] = 0x307D;\n t['pointingindexdownwhite'] = 0x261F;\n t['pointingindexleftwhite'] = 0x261C;\n t['pointingindexrightwhite'] = 0x261E;\n t['pointingindexupwhite'] = 0x261D;\n t['pokatakana'] = 0x30DD;\n t['poplathai'] = 0x0E1B;\n t['postalmark'] = 0x3012;\n t['postalmarkface'] = 0x3020;\n t['pparen'] = 0x24AB;\n t['precedes'] = 0x227A;\n t['prescription'] = 0x211E;\n t['primemod'] = 0x02B9;\n t['primereversed'] = 0x2035;\n t['product'] = 0x220F;\n t['projective'] = 0x2305;\n t['prolongedkana'] = 0x30FC;\n t['propellor'] = 0x2318;\n t['propersubset'] = 0x2282;\n t['propersuperset'] = 0x2283;\n t['proportion'] = 0x2237;\n t['proportional'] = 0x221D;\n t['psi'] = 0x03C8;\n t['psicyrillic'] = 0x0471;\n t['psilipneumatacyrilliccmb'] = 0x0486;\n t['pssquare'] = 0x33B0;\n t['puhiragana'] = 0x3077;\n t['pukatakana'] = 0x30D7;\n t['pvsquare'] = 0x33B4;\n t['pwsquare'] = 0x33BA;\n t['q'] = 0x0071;\n t['qadeva'] = 0x0958;\n t['qadmahebrew'] = 0x05A8;\n t['qafarabic'] = 0x0642;\n t['qaffinalarabic'] = 0xFED6;\n t['qafinitialarabic'] = 0xFED7;\n t['qafmedialarabic'] = 0xFED8;\n t['qamats'] = 0x05B8;\n t['qamats10'] = 0x05B8;\n t['qamats1a'] = 0x05B8;\n t['qamats1c'] = 0x05B8;\n t['qamats27'] = 0x05B8;\n t['qamats29'] = 0x05B8;\n t['qamats33'] = 0x05B8;\n t['qamatsde'] = 0x05B8;\n t['qamatshebrew'] = 0x05B8;\n t['qamatsnarrowhebrew'] = 0x05B8;\n t['qamatsqatanhebrew'] = 0x05B8;\n t['qamatsqatannarrowhebrew'] = 0x05B8;\n t['qamatsqatanquarterhebrew'] = 0x05B8;\n t['qamatsqatanwidehebrew'] = 0x05B8;\n t['qamatsquarterhebrew'] = 0x05B8;\n t['qamatswidehebrew'] = 0x05B8;\n t['qarneyparahebrew'] = 0x059F;\n t['qbopomofo'] = 0x3111;\n t['qcircle'] = 0x24E0;\n t['qhook'] = 0x02A0;\n t['qmonospace'] = 0xFF51;\n t['qof'] = 0x05E7;\n t['qofdagesh'] = 0xFB47;\n t['qofdageshhebrew'] = 0xFB47;\n t['qofhebrew'] = 0x05E7;\n t['qparen'] = 0x24AC;\n t['quarternote'] = 0x2669;\n t['qubuts'] = 0x05BB;\n t['qubuts18'] = 0x05BB;\n t['qubuts25'] = 0x05BB;\n t['qubuts31'] = 0x05BB;\n t['qubutshebrew'] = 0x05BB;\n t['qubutsnarrowhebrew'] = 0x05BB;\n t['qubutsquarterhebrew'] = 0x05BB;\n t['qubutswidehebrew'] = 0x05BB;\n t['question'] = 0x003F;\n t['questionarabic'] = 0x061F;\n t['questionarmenian'] = 0x055E;\n t['questiondown'] = 0x00BF;\n t['questiondownsmall'] = 0xF7BF;\n t['questiongreek'] = 0x037E;\n t['questionmonospace'] = 0xFF1F;\n t['questionsmall'] = 0xF73F;\n t['quotedbl'] = 0x0022;\n t['quotedblbase'] = 0x201E;\n t['quotedblleft'] = 0x201C;\n t['quotedblmonospace'] = 0xFF02;\n t['quotedblprime'] = 0x301E;\n t['quotedblprimereversed'] = 0x301D;\n t['quotedblright'] = 0x201D;\n t['quoteleft'] = 0x2018;\n t['quoteleftreversed'] = 0x201B;\n t['quotereversed'] = 0x201B;\n t['quoteright'] = 0x2019;\n t['quoterightn'] = 0x0149;\n t['quotesinglbase'] = 0x201A;\n t['quotesingle'] = 0x0027;\n t['quotesinglemonospace'] = 0xFF07;\n t['r'] = 0x0072;\n t['raarmenian'] = 0x057C;\n t['rabengali'] = 0x09B0;\n t['racute'] = 0x0155;\n t['radeva'] = 0x0930;\n t['radical'] = 0x221A;\n t['radicalex'] = 0xF8E5;\n t['radoverssquare'] = 0x33AE;\n t['radoverssquaredsquare'] = 0x33AF;\n t['radsquare'] = 0x33AD;\n t['rafe'] = 0x05BF;\n t['rafehebrew'] = 0x05BF;\n t['ragujarati'] = 0x0AB0;\n t['ragurmukhi'] = 0x0A30;\n t['rahiragana'] = 0x3089;\n t['rakatakana'] = 0x30E9;\n t['rakatakanahalfwidth'] = 0xFF97;\n t['ralowerdiagonalbengali'] = 0x09F1;\n t['ramiddlediagonalbengali'] = 0x09F0;\n t['ramshorn'] = 0x0264;\n t['ratio'] = 0x2236;\n t['rbopomofo'] = 0x3116;\n t['rcaron'] = 0x0159;\n t['rcedilla'] = 0x0157;\n t['rcircle'] = 0x24E1;\n t['rcommaaccent'] = 0x0157;\n t['rdblgrave'] = 0x0211;\n t['rdotaccent'] = 0x1E59;\n t['rdotbelow'] = 0x1E5B;\n t['rdotbelowmacron'] = 0x1E5D;\n t['referencemark'] = 0x203B;\n t['reflexsubset'] = 0x2286;\n t['reflexsuperset'] = 0x2287;\n t['registered'] = 0x00AE;\n t['registersans'] = 0xF8E8;\n t['registerserif'] = 0xF6DA;\n t['reharabic'] = 0x0631;\n t['reharmenian'] = 0x0580;\n t['rehfinalarabic'] = 0xFEAE;\n t['rehiragana'] = 0x308C;\n t['rekatakana'] = 0x30EC;\n t['rekatakanahalfwidth'] = 0xFF9A;\n t['resh'] = 0x05E8;\n t['reshdageshhebrew'] = 0xFB48;\n t['reshhebrew'] = 0x05E8;\n t['reversedtilde'] = 0x223D;\n t['reviahebrew'] = 0x0597;\n t['reviamugrashhebrew'] = 0x0597;\n t['revlogicalnot'] = 0x2310;\n t['rfishhook'] = 0x027E;\n t['rfishhookreversed'] = 0x027F;\n t['rhabengali'] = 0x09DD;\n t['rhadeva'] = 0x095D;\n t['rho'] = 0x03C1;\n t['rhook'] = 0x027D;\n t['rhookturned'] = 0x027B;\n t['rhookturnedsuperior'] = 0x02B5;\n t['rhosymbolgreek'] = 0x03F1;\n t['rhotichookmod'] = 0x02DE;\n t['rieulacirclekorean'] = 0x3271;\n t['rieulaparenkorean'] = 0x3211;\n t['rieulcirclekorean'] = 0x3263;\n t['rieulhieuhkorean'] = 0x3140;\n t['rieulkiyeokkorean'] = 0x313A;\n t['rieulkiyeoksioskorean'] = 0x3169;\n t['rieulkorean'] = 0x3139;\n t['rieulmieumkorean'] = 0x313B;\n t['rieulpansioskorean'] = 0x316C;\n t['rieulparenkorean'] = 0x3203;\n t['rieulphieuphkorean'] = 0x313F;\n t['rieulpieupkorean'] = 0x313C;\n t['rieulpieupsioskorean'] = 0x316B;\n t['rieulsioskorean'] = 0x313D;\n t['rieulthieuthkorean'] = 0x313E;\n t['rieultikeutkorean'] = 0x316A;\n t['rieulyeorinhieuhkorean'] = 0x316D;\n t['rightangle'] = 0x221F;\n t['righttackbelowcmb'] = 0x0319;\n t['righttriangle'] = 0x22BF;\n t['rihiragana'] = 0x308A;\n t['rikatakana'] = 0x30EA;\n t['rikatakanahalfwidth'] = 0xFF98;\n t['ring'] = 0x02DA;\n t['ringbelowcmb'] = 0x0325;\n t['ringcmb'] = 0x030A;\n t['ringhalfleft'] = 0x02BF;\n t['ringhalfleftarmenian'] = 0x0559;\n t['ringhalfleftbelowcmb'] = 0x031C;\n t['ringhalfleftcentered'] = 0x02D3;\n t['ringhalfright'] = 0x02BE;\n t['ringhalfrightbelowcmb'] = 0x0339;\n t['ringhalfrightcentered'] = 0x02D2;\n t['rinvertedbreve'] = 0x0213;\n t['rittorusquare'] = 0x3351;\n t['rlinebelow'] = 0x1E5F;\n t['rlongleg'] = 0x027C;\n t['rlonglegturned'] = 0x027A;\n t['rmonospace'] = 0xFF52;\n t['rohiragana'] = 0x308D;\n t['rokatakana'] = 0x30ED;\n t['rokatakanahalfwidth'] = 0xFF9B;\n t['roruathai'] = 0x0E23;\n t['rparen'] = 0x24AD;\n t['rrabengali'] = 0x09DC;\n t['rradeva'] = 0x0931;\n t['rragurmukhi'] = 0x0A5C;\n t['rreharabic'] = 0x0691;\n t['rrehfinalarabic'] = 0xFB8D;\n t['rrvocalicbengali'] = 0x09E0;\n t['rrvocalicdeva'] = 0x0960;\n t['rrvocalicgujarati'] = 0x0AE0;\n t['rrvocalicvowelsignbengali'] = 0x09C4;\n t['rrvocalicvowelsigndeva'] = 0x0944;\n t['rrvocalicvowelsigngujarati'] = 0x0AC4;\n t['rsuperior'] = 0xF6F1;\n t['rtblock'] = 0x2590;\n t['rturned'] = 0x0279;\n t['rturnedsuperior'] = 0x02B4;\n t['ruhiragana'] = 0x308B;\n t['rukatakana'] = 0x30EB;\n t['rukatakanahalfwidth'] = 0xFF99;\n t['rupeemarkbengali'] = 0x09F2;\n t['rupeesignbengali'] = 0x09F3;\n t['rupiah'] = 0xF6DD;\n t['ruthai'] = 0x0E24;\n t['rvocalicbengali'] = 0x098B;\n t['rvocalicdeva'] = 0x090B;\n t['rvocalicgujarati'] = 0x0A8B;\n t['rvocalicvowelsignbengali'] = 0x09C3;\n t['rvocalicvowelsigndeva'] = 0x0943;\n t['rvocalicvowelsigngujarati'] = 0x0AC3;\n t['s'] = 0x0073;\n t['sabengali'] = 0x09B8;\n t['sacute'] = 0x015B;\n t['sacutedotaccent'] = 0x1E65;\n t['sadarabic'] = 0x0635;\n t['sadeva'] = 0x0938;\n t['sadfinalarabic'] = 0xFEBA;\n t['sadinitialarabic'] = 0xFEBB;\n t['sadmedialarabic'] = 0xFEBC;\n t['sagujarati'] = 0x0AB8;\n t['sagurmukhi'] = 0x0A38;\n t['sahiragana'] = 0x3055;\n t['sakatakana'] = 0x30B5;\n t['sakatakanahalfwidth'] = 0xFF7B;\n t['sallallahoualayhewasallamarabic'] = 0xFDFA;\n t['samekh'] = 0x05E1;\n t['samekhdagesh'] = 0xFB41;\n t['samekhdageshhebrew'] = 0xFB41;\n t['samekhhebrew'] = 0x05E1;\n t['saraaathai'] = 0x0E32;\n t['saraaethai'] = 0x0E41;\n t['saraaimaimalaithai'] = 0x0E44;\n t['saraaimaimuanthai'] = 0x0E43;\n t['saraamthai'] = 0x0E33;\n t['saraathai'] = 0x0E30;\n t['saraethai'] = 0x0E40;\n t['saraiileftthai'] = 0xF886;\n t['saraiithai'] = 0x0E35;\n t['saraileftthai'] = 0xF885;\n t['saraithai'] = 0x0E34;\n t['saraothai'] = 0x0E42;\n t['saraueeleftthai'] = 0xF888;\n t['saraueethai'] = 0x0E37;\n t['saraueleftthai'] = 0xF887;\n t['sarauethai'] = 0x0E36;\n t['sarauthai'] = 0x0E38;\n t['sarauuthai'] = 0x0E39;\n t['sbopomofo'] = 0x3119;\n t['scaron'] = 0x0161;\n t['scarondotaccent'] = 0x1E67;\n t['scedilla'] = 0x015F;\n t['schwa'] = 0x0259;\n t['schwacyrillic'] = 0x04D9;\n t['schwadieresiscyrillic'] = 0x04DB;\n t['schwahook'] = 0x025A;\n t['scircle'] = 0x24E2;\n t['scircumflex'] = 0x015D;\n t['scommaaccent'] = 0x0219;\n t['sdotaccent'] = 0x1E61;\n t['sdotbelow'] = 0x1E63;\n t['sdotbelowdotaccent'] = 0x1E69;\n t['seagullbelowcmb'] = 0x033C;\n t['second'] = 0x2033;\n t['secondtonechinese'] = 0x02CA;\n t['section'] = 0x00A7;\n t['seenarabic'] = 0x0633;\n t['seenfinalarabic'] = 0xFEB2;\n t['seeninitialarabic'] = 0xFEB3;\n t['seenmedialarabic'] = 0xFEB4;\n t['segol'] = 0x05B6;\n t['segol13'] = 0x05B6;\n t['segol1f'] = 0x05B6;\n t['segol2c'] = 0x05B6;\n t['segolhebrew'] = 0x05B6;\n t['segolnarrowhebrew'] = 0x05B6;\n t['segolquarterhebrew'] = 0x05B6;\n t['segoltahebrew'] = 0x0592;\n t['segolwidehebrew'] = 0x05B6;\n t['seharmenian'] = 0x057D;\n t['sehiragana'] = 0x305B;\n t['sekatakana'] = 0x30BB;\n t['sekatakanahalfwidth'] = 0xFF7E;\n t['semicolon'] = 0x003B;\n t['semicolonarabic'] = 0x061B;\n t['semicolonmonospace'] = 0xFF1B;\n t['semicolonsmall'] = 0xFE54;\n t['semivoicedmarkkana'] = 0x309C;\n t['semivoicedmarkkanahalfwidth'] = 0xFF9F;\n t['sentisquare'] = 0x3322;\n t['sentosquare'] = 0x3323;\n t['seven'] = 0x0037;\n t['sevenarabic'] = 0x0667;\n t['sevenbengali'] = 0x09ED;\n t['sevencircle'] = 0x2466;\n t['sevencircleinversesansserif'] = 0x2790;\n t['sevendeva'] = 0x096D;\n t['seveneighths'] = 0x215E;\n t['sevengujarati'] = 0x0AED;\n t['sevengurmukhi'] = 0x0A6D;\n t['sevenhackarabic'] = 0x0667;\n t['sevenhangzhou'] = 0x3027;\n t['sevenideographicparen'] = 0x3226;\n t['seveninferior'] = 0x2087;\n t['sevenmonospace'] = 0xFF17;\n t['sevenoldstyle'] = 0xF737;\n t['sevenparen'] = 0x247A;\n t['sevenperiod'] = 0x248E;\n t['sevenpersian'] = 0x06F7;\n t['sevenroman'] = 0x2176;\n t['sevensuperior'] = 0x2077;\n t['seventeencircle'] = 0x2470;\n t['seventeenparen'] = 0x2484;\n t['seventeenperiod'] = 0x2498;\n t['seventhai'] = 0x0E57;\n t['sfthyphen'] = 0x00AD;\n t['shaarmenian'] = 0x0577;\n t['shabengali'] = 0x09B6;\n t['shacyrillic'] = 0x0448;\n t['shaddaarabic'] = 0x0651;\n t['shaddadammaarabic'] = 0xFC61;\n t['shaddadammatanarabic'] = 0xFC5E;\n t['shaddafathaarabic'] = 0xFC60;\n t['shaddakasraarabic'] = 0xFC62;\n t['shaddakasratanarabic'] = 0xFC5F;\n t['shade'] = 0x2592;\n t['shadedark'] = 0x2593;\n t['shadelight'] = 0x2591;\n t['shademedium'] = 0x2592;\n t['shadeva'] = 0x0936;\n t['shagujarati'] = 0x0AB6;\n t['shagurmukhi'] = 0x0A36;\n t['shalshelethebrew'] = 0x0593;\n t['shbopomofo'] = 0x3115;\n t['shchacyrillic'] = 0x0449;\n t['sheenarabic'] = 0x0634;\n t['sheenfinalarabic'] = 0xFEB6;\n t['sheeninitialarabic'] = 0xFEB7;\n t['sheenmedialarabic'] = 0xFEB8;\n t['sheicoptic'] = 0x03E3;\n t['sheqel'] = 0x20AA;\n t['sheqelhebrew'] = 0x20AA;\n t['sheva'] = 0x05B0;\n t['sheva115'] = 0x05B0;\n t['sheva15'] = 0x05B0;\n t['sheva22'] = 0x05B0;\n t['sheva2e'] = 0x05B0;\n t['shevahebrew'] = 0x05B0;\n t['shevanarrowhebrew'] = 0x05B0;\n t['shevaquarterhebrew'] = 0x05B0;\n t['shevawidehebrew'] = 0x05B0;\n t['shhacyrillic'] = 0x04BB;\n t['shimacoptic'] = 0x03ED;\n t['shin'] = 0x05E9;\n t['shindagesh'] = 0xFB49;\n t['shindageshhebrew'] = 0xFB49;\n t['shindageshshindot'] = 0xFB2C;\n t['shindageshshindothebrew'] = 0xFB2C;\n t['shindageshsindot'] = 0xFB2D;\n t['shindageshsindothebrew'] = 0xFB2D;\n t['shindothebrew'] = 0x05C1;\n t['shinhebrew'] = 0x05E9;\n t['shinshindot'] = 0xFB2A;\n t['shinshindothebrew'] = 0xFB2A;\n t['shinsindot'] = 0xFB2B;\n t['shinsindothebrew'] = 0xFB2B;\n t['shook'] = 0x0282;\n t['sigma'] = 0x03C3;\n t['sigma1'] = 0x03C2;\n t['sigmafinal'] = 0x03C2;\n t['sigmalunatesymbolgreek'] = 0x03F2;\n t['sihiragana'] = 0x3057;\n t['sikatakana'] = 0x30B7;\n t['sikatakanahalfwidth'] = 0xFF7C;\n t['siluqhebrew'] = 0x05BD;\n t['siluqlefthebrew'] = 0x05BD;\n t['similar'] = 0x223C;\n t['sindothebrew'] = 0x05C2;\n t['siosacirclekorean'] = 0x3274;\n t['siosaparenkorean'] = 0x3214;\n t['sioscieuckorean'] = 0x317E;\n t['sioscirclekorean'] = 0x3266;\n t['sioskiyeokkorean'] = 0x317A;\n t['sioskorean'] = 0x3145;\n t['siosnieunkorean'] = 0x317B;\n t['siosparenkorean'] = 0x3206;\n t['siospieupkorean'] = 0x317D;\n t['siostikeutkorean'] = 0x317C;\n t['six'] = 0x0036;\n t['sixarabic'] = 0x0666;\n t['sixbengali'] = 0x09EC;\n t['sixcircle'] = 0x2465;\n t['sixcircleinversesansserif'] = 0x278F;\n t['sixdeva'] = 0x096C;\n t['sixgujarati'] = 0x0AEC;\n t['sixgurmukhi'] = 0x0A6C;\n t['sixhackarabic'] = 0x0666;\n t['sixhangzhou'] = 0x3026;\n t['sixideographicparen'] = 0x3225;\n t['sixinferior'] = 0x2086;\n t['sixmonospace'] = 0xFF16;\n t['sixoldstyle'] = 0xF736;\n t['sixparen'] = 0x2479;\n t['sixperiod'] = 0x248D;\n t['sixpersian'] = 0x06F6;\n t['sixroman'] = 0x2175;\n t['sixsuperior'] = 0x2076;\n t['sixteencircle'] = 0x246F;\n t['sixteencurrencydenominatorbengali'] = 0x09F9;\n t['sixteenparen'] = 0x2483;\n t['sixteenperiod'] = 0x2497;\n t['sixthai'] = 0x0E56;\n t['slash'] = 0x002F;\n t['slashmonospace'] = 0xFF0F;\n t['slong'] = 0x017F;\n t['slongdotaccent'] = 0x1E9B;\n t['smileface'] = 0x263A;\n t['smonospace'] = 0xFF53;\n t['sofpasuqhebrew'] = 0x05C3;\n t['softhyphen'] = 0x00AD;\n t['softsigncyrillic'] = 0x044C;\n t['sohiragana'] = 0x305D;\n t['sokatakana'] = 0x30BD;\n t['sokatakanahalfwidth'] = 0xFF7F;\n t['soliduslongoverlaycmb'] = 0x0338;\n t['solidusshortoverlaycmb'] = 0x0337;\n t['sorusithai'] = 0x0E29;\n t['sosalathai'] = 0x0E28;\n t['sosothai'] = 0x0E0B;\n t['sosuathai'] = 0x0E2A;\n t['space'] = 0x0020;\n t['spacehackarabic'] = 0x0020;\n t['spade'] = 0x2660;\n t['spadesuitblack'] = 0x2660;\n t['spadesuitwhite'] = 0x2664;\n t['sparen'] = 0x24AE;\n t['squarebelowcmb'] = 0x033B;\n t['squarecc'] = 0x33C4;\n t['squarecm'] = 0x339D;\n t['squarediagonalcrosshatchfill'] = 0x25A9;\n t['squarehorizontalfill'] = 0x25A4;\n t['squarekg'] = 0x338F;\n t['squarekm'] = 0x339E;\n t['squarekmcapital'] = 0x33CE;\n t['squareln'] = 0x33D1;\n t['squarelog'] = 0x33D2;\n t['squaremg'] = 0x338E;\n t['squaremil'] = 0x33D5;\n t['squaremm'] = 0x339C;\n t['squaremsquared'] = 0x33A1;\n t['squareorthogonalcrosshatchfill'] = 0x25A6;\n t['squareupperlefttolowerrightfill'] = 0x25A7;\n t['squareupperrighttolowerleftfill'] = 0x25A8;\n t['squareverticalfill'] = 0x25A5;\n t['squarewhitewithsmallblack'] = 0x25A3;\n t['srsquare'] = 0x33DB;\n t['ssabengali'] = 0x09B7;\n t['ssadeva'] = 0x0937;\n t['ssagujarati'] = 0x0AB7;\n t['ssangcieuckorean'] = 0x3149;\n t['ssanghieuhkorean'] = 0x3185;\n t['ssangieungkorean'] = 0x3180;\n t['ssangkiyeokkorean'] = 0x3132;\n t['ssangnieunkorean'] = 0x3165;\n t['ssangpieupkorean'] = 0x3143;\n t['ssangsioskorean'] = 0x3146;\n t['ssangtikeutkorean'] = 0x3138;\n t['ssuperior'] = 0xF6F2;\n t['sterling'] = 0x00A3;\n t['sterlingmonospace'] = 0xFFE1;\n t['strokelongoverlaycmb'] = 0x0336;\n t['strokeshortoverlaycmb'] = 0x0335;\n t['subset'] = 0x2282;\n t['subsetnotequal'] = 0x228A;\n t['subsetorequal'] = 0x2286;\n t['succeeds'] = 0x227B;\n t['suchthat'] = 0x220B;\n t['suhiragana'] = 0x3059;\n t['sukatakana'] = 0x30B9;\n t['sukatakanahalfwidth'] = 0xFF7D;\n t['sukunarabic'] = 0x0652;\n t['summation'] = 0x2211;\n t['sun'] = 0x263C;\n t['superset'] = 0x2283;\n t['supersetnotequal'] = 0x228B;\n t['supersetorequal'] = 0x2287;\n t['svsquare'] = 0x33DC;\n t['syouwaerasquare'] = 0x337C;\n t['t'] = 0x0074;\n t['tabengali'] = 0x09A4;\n t['tackdown'] = 0x22A4;\n t['tackleft'] = 0x22A3;\n t['tadeva'] = 0x0924;\n t['tagujarati'] = 0x0AA4;\n t['tagurmukhi'] = 0x0A24;\n t['taharabic'] = 0x0637;\n t['tahfinalarabic'] = 0xFEC2;\n t['tahinitialarabic'] = 0xFEC3;\n t['tahiragana'] = 0x305F;\n t['tahmedialarabic'] = 0xFEC4;\n t['taisyouerasquare'] = 0x337D;\n t['takatakana'] = 0x30BF;\n t['takatakanahalfwidth'] = 0xFF80;\n t['tatweelarabic'] = 0x0640;\n t['tau'] = 0x03C4;\n t['tav'] = 0x05EA;\n t['tavdages'] = 0xFB4A;\n t['tavdagesh'] = 0xFB4A;\n t['tavdageshhebrew'] = 0xFB4A;\n t['tavhebrew'] = 0x05EA;\n t['tbar'] = 0x0167;\n t['tbopomofo'] = 0x310A;\n t['tcaron'] = 0x0165;\n t['tccurl'] = 0x02A8;\n t['tcedilla'] = 0x0163;\n t['tcheharabic'] = 0x0686;\n t['tchehfinalarabic'] = 0xFB7B;\n t['tchehinitialarabic'] = 0xFB7C;\n t['tchehmedialarabic'] = 0xFB7D;\n t['tcircle'] = 0x24E3;\n t['tcircumflexbelow'] = 0x1E71;\n t['tcommaaccent'] = 0x0163;\n t['tdieresis'] = 0x1E97;\n t['tdotaccent'] = 0x1E6B;\n t['tdotbelow'] = 0x1E6D;\n t['tecyrillic'] = 0x0442;\n t['tedescendercyrillic'] = 0x04AD;\n t['teharabic'] = 0x062A;\n t['tehfinalarabic'] = 0xFE96;\n t['tehhahinitialarabic'] = 0xFCA2;\n t['tehhahisolatedarabic'] = 0xFC0C;\n t['tehinitialarabic'] = 0xFE97;\n t['tehiragana'] = 0x3066;\n t['tehjeeminitialarabic'] = 0xFCA1;\n t['tehjeemisolatedarabic'] = 0xFC0B;\n t['tehmarbutaarabic'] = 0x0629;\n t['tehmarbutafinalarabic'] = 0xFE94;\n t['tehmedialarabic'] = 0xFE98;\n t['tehmeeminitialarabic'] = 0xFCA4;\n t['tehmeemisolatedarabic'] = 0xFC0E;\n t['tehnoonfinalarabic'] = 0xFC73;\n t['tekatakana'] = 0x30C6;\n t['tekatakanahalfwidth'] = 0xFF83;\n t['telephone'] = 0x2121;\n t['telephoneblack'] = 0x260E;\n t['telishagedolahebrew'] = 0x05A0;\n t['telishaqetanahebrew'] = 0x05A9;\n t['tencircle'] = 0x2469;\n t['tenideographicparen'] = 0x3229;\n t['tenparen'] = 0x247D;\n t['tenperiod'] = 0x2491;\n t['tenroman'] = 0x2179;\n t['tesh'] = 0x02A7;\n t['tet'] = 0x05D8;\n t['tetdagesh'] = 0xFB38;\n t['tetdageshhebrew'] = 0xFB38;\n t['tethebrew'] = 0x05D8;\n t['tetsecyrillic'] = 0x04B5;\n t['tevirhebrew'] = 0x059B;\n t['tevirlefthebrew'] = 0x059B;\n t['thabengali'] = 0x09A5;\n t['thadeva'] = 0x0925;\n t['thagujarati'] = 0x0AA5;\n t['thagurmukhi'] = 0x0A25;\n t['thalarabic'] = 0x0630;\n t['thalfinalarabic'] = 0xFEAC;\n t['thanthakhatlowleftthai'] = 0xF898;\n t['thanthakhatlowrightthai'] = 0xF897;\n t['thanthakhatthai'] = 0x0E4C;\n t['thanthakhatupperleftthai'] = 0xF896;\n t['theharabic'] = 0x062B;\n t['thehfinalarabic'] = 0xFE9A;\n t['thehinitialarabic'] = 0xFE9B;\n t['thehmedialarabic'] = 0xFE9C;\n t['thereexists'] = 0x2203;\n t['therefore'] = 0x2234;\n t['theta'] = 0x03B8;\n t['theta1'] = 0x03D1;\n t['thetasymbolgreek'] = 0x03D1;\n t['thieuthacirclekorean'] = 0x3279;\n t['thieuthaparenkorean'] = 0x3219;\n t['thieuthcirclekorean'] = 0x326B;\n t['thieuthkorean'] = 0x314C;\n t['thieuthparenkorean'] = 0x320B;\n t['thirteencircle'] = 0x246C;\n t['thirteenparen'] = 0x2480;\n t['thirteenperiod'] = 0x2494;\n t['thonangmonthothai'] = 0x0E11;\n t['thook'] = 0x01AD;\n t['thophuthaothai'] = 0x0E12;\n t['thorn'] = 0x00FE;\n t['thothahanthai'] = 0x0E17;\n t['thothanthai'] = 0x0E10;\n t['thothongthai'] = 0x0E18;\n t['thothungthai'] = 0x0E16;\n t['thousandcyrillic'] = 0x0482;\n t['thousandsseparatorarabic'] = 0x066C;\n t['thousandsseparatorpersian'] = 0x066C;\n t['three'] = 0x0033;\n t['threearabic'] = 0x0663;\n t['threebengali'] = 0x09E9;\n t['threecircle'] = 0x2462;\n t['threecircleinversesansserif'] = 0x278C;\n t['threedeva'] = 0x0969;\n t['threeeighths'] = 0x215C;\n t['threegujarati'] = 0x0AE9;\n t['threegurmukhi'] = 0x0A69;\n t['threehackarabic'] = 0x0663;\n t['threehangzhou'] = 0x3023;\n t['threeideographicparen'] = 0x3222;\n t['threeinferior'] = 0x2083;\n t['threemonospace'] = 0xFF13;\n t['threenumeratorbengali'] = 0x09F6;\n t['threeoldstyle'] = 0xF733;\n t['threeparen'] = 0x2476;\n t['threeperiod'] = 0x248A;\n t['threepersian'] = 0x06F3;\n t['threequarters'] = 0x00BE;\n t['threequartersemdash'] = 0xF6DE;\n t['threeroman'] = 0x2172;\n t['threesuperior'] = 0x00B3;\n t['threethai'] = 0x0E53;\n t['thzsquare'] = 0x3394;\n t['tihiragana'] = 0x3061;\n t['tikatakana'] = 0x30C1;\n t['tikatakanahalfwidth'] = 0xFF81;\n t['tikeutacirclekorean'] = 0x3270;\n t['tikeutaparenkorean'] = 0x3210;\n t['tikeutcirclekorean'] = 0x3262;\n t['tikeutkorean'] = 0x3137;\n t['tikeutparenkorean'] = 0x3202;\n t['tilde'] = 0x02DC;\n t['tildebelowcmb'] = 0x0330;\n t['tildecmb'] = 0x0303;\n t['tildecomb'] = 0x0303;\n t['tildedoublecmb'] = 0x0360;\n t['tildeoperator'] = 0x223C;\n t['tildeoverlaycmb'] = 0x0334;\n t['tildeverticalcmb'] = 0x033E;\n t['timescircle'] = 0x2297;\n t['tipehahebrew'] = 0x0596;\n t['tipehalefthebrew'] = 0x0596;\n t['tippigurmukhi'] = 0x0A70;\n t['titlocyrilliccmb'] = 0x0483;\n t['tiwnarmenian'] = 0x057F;\n t['tlinebelow'] = 0x1E6F;\n t['tmonospace'] = 0xFF54;\n t['toarmenian'] = 0x0569;\n t['tohiragana'] = 0x3068;\n t['tokatakana'] = 0x30C8;\n t['tokatakanahalfwidth'] = 0xFF84;\n t['tonebarextrahighmod'] = 0x02E5;\n t['tonebarextralowmod'] = 0x02E9;\n t['tonebarhighmod'] = 0x02E6;\n t['tonebarlowmod'] = 0x02E8;\n t['tonebarmidmod'] = 0x02E7;\n t['tonefive'] = 0x01BD;\n t['tonesix'] = 0x0185;\n t['tonetwo'] = 0x01A8;\n t['tonos'] = 0x0384;\n t['tonsquare'] = 0x3327;\n t['topatakthai'] = 0x0E0F;\n t['tortoiseshellbracketleft'] = 0x3014;\n t['tortoiseshellbracketleftsmall'] = 0xFE5D;\n t['tortoiseshellbracketleftvertical'] = 0xFE39;\n t['tortoiseshellbracketright'] = 0x3015;\n t['tortoiseshellbracketrightsmall'] = 0xFE5E;\n t['tortoiseshellbracketrightvertical'] = 0xFE3A;\n t['totaothai'] = 0x0E15;\n t['tpalatalhook'] = 0x01AB;\n t['tparen'] = 0x24AF;\n t['trademark'] = 0x2122;\n t['trademarksans'] = 0xF8EA;\n t['trademarkserif'] = 0xF6DB;\n t['tretroflexhook'] = 0x0288;\n t['triagdn'] = 0x25BC;\n t['triaglf'] = 0x25C4;\n t['triagrt'] = 0x25BA;\n t['triagup'] = 0x25B2;\n t['ts'] = 0x02A6;\n t['tsadi'] = 0x05E6;\n t['tsadidagesh'] = 0xFB46;\n t['tsadidageshhebrew'] = 0xFB46;\n t['tsadihebrew'] = 0x05E6;\n t['tsecyrillic'] = 0x0446;\n t['tsere'] = 0x05B5;\n t['tsere12'] = 0x05B5;\n t['tsere1e'] = 0x05B5;\n t['tsere2b'] = 0x05B5;\n t['tserehebrew'] = 0x05B5;\n t['tserenarrowhebrew'] = 0x05B5;\n t['tserequarterhebrew'] = 0x05B5;\n t['tserewidehebrew'] = 0x05B5;\n t['tshecyrillic'] = 0x045B;\n t['tsuperior'] = 0xF6F3;\n t['ttabengali'] = 0x099F;\n t['ttadeva'] = 0x091F;\n t['ttagujarati'] = 0x0A9F;\n t['ttagurmukhi'] = 0x0A1F;\n t['tteharabic'] = 0x0679;\n t['ttehfinalarabic'] = 0xFB67;\n t['ttehinitialarabic'] = 0xFB68;\n t['ttehmedialarabic'] = 0xFB69;\n t['tthabengali'] = 0x09A0;\n t['tthadeva'] = 0x0920;\n t['tthagujarati'] = 0x0AA0;\n t['tthagurmukhi'] = 0x0A20;\n t['tturned'] = 0x0287;\n t['tuhiragana'] = 0x3064;\n t['tukatakana'] = 0x30C4;\n t['tukatakanahalfwidth'] = 0xFF82;\n t['tusmallhiragana'] = 0x3063;\n t['tusmallkatakana'] = 0x30C3;\n t['tusmallkatakanahalfwidth'] = 0xFF6F;\n t['twelvecircle'] = 0x246B;\n t['twelveparen'] = 0x247F;\n t['twelveperiod'] = 0x2493;\n t['twelveroman'] = 0x217B;\n t['twentycircle'] = 0x2473;\n t['twentyhangzhou'] = 0x5344;\n t['twentyparen'] = 0x2487;\n t['twentyperiod'] = 0x249B;\n t['two'] = 0x0032;\n t['twoarabic'] = 0x0662;\n t['twobengali'] = 0x09E8;\n t['twocircle'] = 0x2461;\n t['twocircleinversesansserif'] = 0x278B;\n t['twodeva'] = 0x0968;\n t['twodotenleader'] = 0x2025;\n t['twodotleader'] = 0x2025;\n t['twodotleadervertical'] = 0xFE30;\n t['twogujarati'] = 0x0AE8;\n t['twogurmukhi'] = 0x0A68;\n t['twohackarabic'] = 0x0662;\n t['twohangzhou'] = 0x3022;\n t['twoideographicparen'] = 0x3221;\n t['twoinferior'] = 0x2082;\n t['twomonospace'] = 0xFF12;\n t['twonumeratorbengali'] = 0x09F5;\n t['twooldstyle'] = 0xF732;\n t['twoparen'] = 0x2475;\n t['twoperiod'] = 0x2489;\n t['twopersian'] = 0x06F2;\n t['tworoman'] = 0x2171;\n t['twostroke'] = 0x01BB;\n t['twosuperior'] = 0x00B2;\n t['twothai'] = 0x0E52;\n t['twothirds'] = 0x2154;\n t['u'] = 0x0075;\n t['uacute'] = 0x00FA;\n t['ubar'] = 0x0289;\n t['ubengali'] = 0x0989;\n t['ubopomofo'] = 0x3128;\n t['ubreve'] = 0x016D;\n t['ucaron'] = 0x01D4;\n t['ucircle'] = 0x24E4;\n t['ucircumflex'] = 0x00FB;\n t['ucircumflexbelow'] = 0x1E77;\n t['ucyrillic'] = 0x0443;\n t['udattadeva'] = 0x0951;\n t['udblacute'] = 0x0171;\n t['udblgrave'] = 0x0215;\n t['udeva'] = 0x0909;\n t['udieresis'] = 0x00FC;\n t['udieresisacute'] = 0x01D8;\n t['udieresisbelow'] = 0x1E73;\n t['udieresiscaron'] = 0x01DA;\n t['udieresiscyrillic'] = 0x04F1;\n t['udieresisgrave'] = 0x01DC;\n t['udieresismacron'] = 0x01D6;\n t['udotbelow'] = 0x1EE5;\n t['ugrave'] = 0x00F9;\n t['ugujarati'] = 0x0A89;\n t['ugurmukhi'] = 0x0A09;\n t['uhiragana'] = 0x3046;\n t['uhookabove'] = 0x1EE7;\n t['uhorn'] = 0x01B0;\n t['uhornacute'] = 0x1EE9;\n t['uhorndotbelow'] = 0x1EF1;\n t['uhorngrave'] = 0x1EEB;\n t['uhornhookabove'] = 0x1EED;\n t['uhorntilde'] = 0x1EEF;\n t['uhungarumlaut'] = 0x0171;\n t['uhungarumlautcyrillic'] = 0x04F3;\n t['uinvertedbreve'] = 0x0217;\n t['ukatakana'] = 0x30A6;\n t['ukatakanahalfwidth'] = 0xFF73;\n t['ukcyrillic'] = 0x0479;\n t['ukorean'] = 0x315C;\n t['umacron'] = 0x016B;\n t['umacroncyrillic'] = 0x04EF;\n t['umacrondieresis'] = 0x1E7B;\n t['umatragurmukhi'] = 0x0A41;\n t['umonospace'] = 0xFF55;\n t['underscore'] = 0x005F;\n t['underscoredbl'] = 0x2017;\n t['underscoremonospace'] = 0xFF3F;\n t['underscorevertical'] = 0xFE33;\n t['underscorewavy'] = 0xFE4F;\n t['union'] = 0x222A;\n t['universal'] = 0x2200;\n t['uogonek'] = 0x0173;\n t['uparen'] = 0x24B0;\n t['upblock'] = 0x2580;\n t['upperdothebrew'] = 0x05C4;\n t['upsilon'] = 0x03C5;\n t['upsilondieresis'] = 0x03CB;\n t['upsilondieresistonos'] = 0x03B0;\n t['upsilonlatin'] = 0x028A;\n t['upsilontonos'] = 0x03CD;\n t['uptackbelowcmb'] = 0x031D;\n t['uptackmod'] = 0x02D4;\n t['uragurmukhi'] = 0x0A73;\n t['uring'] = 0x016F;\n t['ushortcyrillic'] = 0x045E;\n t['usmallhiragana'] = 0x3045;\n t['usmallkatakana'] = 0x30A5;\n t['usmallkatakanahalfwidth'] = 0xFF69;\n t['ustraightcyrillic'] = 0x04AF;\n t['ustraightstrokecyrillic'] = 0x04B1;\n t['utilde'] = 0x0169;\n t['utildeacute'] = 0x1E79;\n t['utildebelow'] = 0x1E75;\n t['uubengali'] = 0x098A;\n t['uudeva'] = 0x090A;\n t['uugujarati'] = 0x0A8A;\n t['uugurmukhi'] = 0x0A0A;\n t['uumatragurmukhi'] = 0x0A42;\n t['uuvowelsignbengali'] = 0x09C2;\n t['uuvowelsigndeva'] = 0x0942;\n t['uuvowelsigngujarati'] = 0x0AC2;\n t['uvowelsignbengali'] = 0x09C1;\n t['uvowelsigndeva'] = 0x0941;\n t['uvowelsigngujarati'] = 0x0AC1;\n t['v'] = 0x0076;\n t['vadeva'] = 0x0935;\n t['vagujarati'] = 0x0AB5;\n t['vagurmukhi'] = 0x0A35;\n t['vakatakana'] = 0x30F7;\n t['vav'] = 0x05D5;\n t['vavdagesh'] = 0xFB35;\n t['vavdagesh65'] = 0xFB35;\n t['vavdageshhebrew'] = 0xFB35;\n t['vavhebrew'] = 0x05D5;\n t['vavholam'] = 0xFB4B;\n t['vavholamhebrew'] = 0xFB4B;\n t['vavvavhebrew'] = 0x05F0;\n t['vavyodhebrew'] = 0x05F1;\n t['vcircle'] = 0x24E5;\n t['vdotbelow'] = 0x1E7F;\n t['vecyrillic'] = 0x0432;\n t['veharabic'] = 0x06A4;\n t['vehfinalarabic'] = 0xFB6B;\n t['vehinitialarabic'] = 0xFB6C;\n t['vehmedialarabic'] = 0xFB6D;\n t['vekatakana'] = 0x30F9;\n t['venus'] = 0x2640;\n t['verticalbar'] = 0x007C;\n t['verticallineabovecmb'] = 0x030D;\n t['verticallinebelowcmb'] = 0x0329;\n t['verticallinelowmod'] = 0x02CC;\n t['verticallinemod'] = 0x02C8;\n t['vewarmenian'] = 0x057E;\n t['vhook'] = 0x028B;\n t['vikatakana'] = 0x30F8;\n t['viramabengali'] = 0x09CD;\n t['viramadeva'] = 0x094D;\n t['viramagujarati'] = 0x0ACD;\n t['visargabengali'] = 0x0983;\n t['visargadeva'] = 0x0903;\n t['visargagujarati'] = 0x0A83;\n t['vmonospace'] = 0xFF56;\n t['voarmenian'] = 0x0578;\n t['voicediterationhiragana'] = 0x309E;\n t['voicediterationkatakana'] = 0x30FE;\n t['voicedmarkkana'] = 0x309B;\n t['voicedmarkkanahalfwidth'] = 0xFF9E;\n t['vokatakana'] = 0x30FA;\n t['vparen'] = 0x24B1;\n t['vtilde'] = 0x1E7D;\n t['vturned'] = 0x028C;\n t['vuhiragana'] = 0x3094;\n t['vukatakana'] = 0x30F4;\n t['w'] = 0x0077;\n t['wacute'] = 0x1E83;\n t['waekorean'] = 0x3159;\n t['wahiragana'] = 0x308F;\n t['wakatakana'] = 0x30EF;\n t['wakatakanahalfwidth'] = 0xFF9C;\n t['wakorean'] = 0x3158;\n t['wasmallhiragana'] = 0x308E;\n t['wasmallkatakana'] = 0x30EE;\n t['wattosquare'] = 0x3357;\n t['wavedash'] = 0x301C;\n t['wavyunderscorevertical'] = 0xFE34;\n t['wawarabic'] = 0x0648;\n t['wawfinalarabic'] = 0xFEEE;\n t['wawhamzaabovearabic'] = 0x0624;\n t['wawhamzaabovefinalarabic'] = 0xFE86;\n t['wbsquare'] = 0x33DD;\n t['wcircle'] = 0x24E6;\n t['wcircumflex'] = 0x0175;\n t['wdieresis'] = 0x1E85;\n t['wdotaccent'] = 0x1E87;\n t['wdotbelow'] = 0x1E89;\n t['wehiragana'] = 0x3091;\n t['weierstrass'] = 0x2118;\n t['wekatakana'] = 0x30F1;\n t['wekorean'] = 0x315E;\n t['weokorean'] = 0x315D;\n t['wgrave'] = 0x1E81;\n t['whitebullet'] = 0x25E6;\n t['whitecircle'] = 0x25CB;\n t['whitecircleinverse'] = 0x25D9;\n t['whitecornerbracketleft'] = 0x300E;\n t['whitecornerbracketleftvertical'] = 0xFE43;\n t['whitecornerbracketright'] = 0x300F;\n t['whitecornerbracketrightvertical'] = 0xFE44;\n t['whitediamond'] = 0x25C7;\n t['whitediamondcontainingblacksmalldiamond'] = 0x25C8;\n t['whitedownpointingsmalltriangle'] = 0x25BF;\n t['whitedownpointingtriangle'] = 0x25BD;\n t['whiteleftpointingsmalltriangle'] = 0x25C3;\n t['whiteleftpointingtriangle'] = 0x25C1;\n t['whitelenticularbracketleft'] = 0x3016;\n t['whitelenticularbracketright'] = 0x3017;\n t['whiterightpointingsmalltriangle'] = 0x25B9;\n t['whiterightpointingtriangle'] = 0x25B7;\n t['whitesmallsquare'] = 0x25AB;\n t['whitesmilingface'] = 0x263A;\n t['whitesquare'] = 0x25A1;\n t['whitestar'] = 0x2606;\n t['whitetelephone'] = 0x260F;\n t['whitetortoiseshellbracketleft'] = 0x3018;\n t['whitetortoiseshellbracketright'] = 0x3019;\n t['whiteuppointingsmalltriangle'] = 0x25B5;\n t['whiteuppointingtriangle'] = 0x25B3;\n t['wihiragana'] = 0x3090;\n t['wikatakana'] = 0x30F0;\n t['wikorean'] = 0x315F;\n t['wmonospace'] = 0xFF57;\n t['wohiragana'] = 0x3092;\n t['wokatakana'] = 0x30F2;\n t['wokatakanahalfwidth'] = 0xFF66;\n t['won'] = 0x20A9;\n t['wonmonospace'] = 0xFFE6;\n t['wowaenthai'] = 0x0E27;\n t['wparen'] = 0x24B2;\n t['wring'] = 0x1E98;\n t['wsuperior'] = 0x02B7;\n t['wturned'] = 0x028D;\n t['wynn'] = 0x01BF;\n t['x'] = 0x0078;\n t['xabovecmb'] = 0x033D;\n t['xbopomofo'] = 0x3112;\n t['xcircle'] = 0x24E7;\n t['xdieresis'] = 0x1E8D;\n t['xdotaccent'] = 0x1E8B;\n t['xeharmenian'] = 0x056D;\n t['xi'] = 0x03BE;\n t['xmonospace'] = 0xFF58;\n t['xparen'] = 0x24B3;\n t['xsuperior'] = 0x02E3;\n t['y'] = 0x0079;\n t['yaadosquare'] = 0x334E;\n t['yabengali'] = 0x09AF;\n t['yacute'] = 0x00FD;\n t['yadeva'] = 0x092F;\n t['yaekorean'] = 0x3152;\n t['yagujarati'] = 0x0AAF;\n t['yagurmukhi'] = 0x0A2F;\n t['yahiragana'] = 0x3084;\n t['yakatakana'] = 0x30E4;\n t['yakatakanahalfwidth'] = 0xFF94;\n t['yakorean'] = 0x3151;\n t['yamakkanthai'] = 0x0E4E;\n t['yasmallhiragana'] = 0x3083;\n t['yasmallkatakana'] = 0x30E3;\n t['yasmallkatakanahalfwidth'] = 0xFF6C;\n t['yatcyrillic'] = 0x0463;\n t['ycircle'] = 0x24E8;\n t['ycircumflex'] = 0x0177;\n t['ydieresis'] = 0x00FF;\n t['ydotaccent'] = 0x1E8F;\n t['ydotbelow'] = 0x1EF5;\n t['yeharabic'] = 0x064A;\n t['yehbarreearabic'] = 0x06D2;\n t['yehbarreefinalarabic'] = 0xFBAF;\n t['yehfinalarabic'] = 0xFEF2;\n t['yehhamzaabovearabic'] = 0x0626;\n t['yehhamzaabovefinalarabic'] = 0xFE8A;\n t['yehhamzaaboveinitialarabic'] = 0xFE8B;\n t['yehhamzaabovemedialarabic'] = 0xFE8C;\n t['yehinitialarabic'] = 0xFEF3;\n t['yehmedialarabic'] = 0xFEF4;\n t['yehmeeminitialarabic'] = 0xFCDD;\n t['yehmeemisolatedarabic'] = 0xFC58;\n t['yehnoonfinalarabic'] = 0xFC94;\n t['yehthreedotsbelowarabic'] = 0x06D1;\n t['yekorean'] = 0x3156;\n t['yen'] = 0x00A5;\n t['yenmonospace'] = 0xFFE5;\n t['yeokorean'] = 0x3155;\n t['yeorinhieuhkorean'] = 0x3186;\n t['yerahbenyomohebrew'] = 0x05AA;\n t['yerahbenyomolefthebrew'] = 0x05AA;\n t['yericyrillic'] = 0x044B;\n t['yerudieresiscyrillic'] = 0x04F9;\n t['yesieungkorean'] = 0x3181;\n t['yesieungpansioskorean'] = 0x3183;\n t['yesieungsioskorean'] = 0x3182;\n t['yetivhebrew'] = 0x059A;\n t['ygrave'] = 0x1EF3;\n t['yhook'] = 0x01B4;\n t['yhookabove'] = 0x1EF7;\n t['yiarmenian'] = 0x0575;\n t['yicyrillic'] = 0x0457;\n t['yikorean'] = 0x3162;\n t['yinyang'] = 0x262F;\n t['yiwnarmenian'] = 0x0582;\n t['ymonospace'] = 0xFF59;\n t['yod'] = 0x05D9;\n t['yoddagesh'] = 0xFB39;\n t['yoddageshhebrew'] = 0xFB39;\n t['yodhebrew'] = 0x05D9;\n t['yodyodhebrew'] = 0x05F2;\n t['yodyodpatahhebrew'] = 0xFB1F;\n t['yohiragana'] = 0x3088;\n t['yoikorean'] = 0x3189;\n t['yokatakana'] = 0x30E8;\n t['yokatakanahalfwidth'] = 0xFF96;\n t['yokorean'] = 0x315B;\n t['yosmallhiragana'] = 0x3087;\n t['yosmallkatakana'] = 0x30E7;\n t['yosmallkatakanahalfwidth'] = 0xFF6E;\n t['yotgreek'] = 0x03F3;\n t['yoyaekorean'] = 0x3188;\n t['yoyakorean'] = 0x3187;\n t['yoyakthai'] = 0x0E22;\n t['yoyingthai'] = 0x0E0D;\n t['yparen'] = 0x24B4;\n t['ypogegrammeni'] = 0x037A;\n t['ypogegrammenigreekcmb'] = 0x0345;\n t['yr'] = 0x01A6;\n t['yring'] = 0x1E99;\n t['ysuperior'] = 0x02B8;\n t['ytilde'] = 0x1EF9;\n t['yturned'] = 0x028E;\n t['yuhiragana'] = 0x3086;\n t['yuikorean'] = 0x318C;\n t['yukatakana'] = 0x30E6;\n t['yukatakanahalfwidth'] = 0xFF95;\n t['yukorean'] = 0x3160;\n t['yusbigcyrillic'] = 0x046B;\n t['yusbigiotifiedcyrillic'] = 0x046D;\n t['yuslittlecyrillic'] = 0x0467;\n t['yuslittleiotifiedcyrillic'] = 0x0469;\n t['yusmallhiragana'] = 0x3085;\n t['yusmallkatakana'] = 0x30E5;\n t['yusmallkatakanahalfwidth'] = 0xFF6D;\n t['yuyekorean'] = 0x318B;\n t['yuyeokorean'] = 0x318A;\n t['yyabengali'] = 0x09DF;\n t['yyadeva'] = 0x095F;\n t['z'] = 0x007A;\n t['zaarmenian'] = 0x0566;\n t['zacute'] = 0x017A;\n t['zadeva'] = 0x095B;\n t['zagurmukhi'] = 0x0A5B;\n t['zaharabic'] = 0x0638;\n t['zahfinalarabic'] = 0xFEC6;\n t['zahinitialarabic'] = 0xFEC7;\n t['zahiragana'] = 0x3056;\n t['zahmedialarabic'] = 0xFEC8;\n t['zainarabic'] = 0x0632;\n t['zainfinalarabic'] = 0xFEB0;\n t['zakatakana'] = 0x30B6;\n t['zaqefgadolhebrew'] = 0x0595;\n t['zaqefqatanhebrew'] = 0x0594;\n t['zarqahebrew'] = 0x0598;\n t['zayin'] = 0x05D6;\n t['zayindagesh'] = 0xFB36;\n t['zayindageshhebrew'] = 0xFB36;\n t['zayinhebrew'] = 0x05D6;\n t['zbopomofo'] = 0x3117;\n t['zcaron'] = 0x017E;\n t['zcircle'] = 0x24E9;\n t['zcircumflex'] = 0x1E91;\n t['zcurl'] = 0x0291;\n t['zdot'] = 0x017C;\n t['zdotaccent'] = 0x017C;\n t['zdotbelow'] = 0x1E93;\n t['zecyrillic'] = 0x0437;\n t['zedescendercyrillic'] = 0x0499;\n t['zedieresiscyrillic'] = 0x04DF;\n t['zehiragana'] = 0x305C;\n t['zekatakana'] = 0x30BC;\n t['zero'] = 0x0030;\n t['zeroarabic'] = 0x0660;\n t['zerobengali'] = 0x09E6;\n t['zerodeva'] = 0x0966;\n t['zerogujarati'] = 0x0AE6;\n t['zerogurmukhi'] = 0x0A66;\n t['zerohackarabic'] = 0x0660;\n t['zeroinferior'] = 0x2080;\n t['zeromonospace'] = 0xFF10;\n t['zerooldstyle'] = 0xF730;\n t['zeropersian'] = 0x06F0;\n t['zerosuperior'] = 0x2070;\n t['zerothai'] = 0x0E50;\n t['zerowidthjoiner'] = 0xFEFF;\n t['zerowidthnonjoiner'] = 0x200C;\n t['zerowidthspace'] = 0x200B;\n t['zeta'] = 0x03B6;\n t['zhbopomofo'] = 0x3113;\n t['zhearmenian'] = 0x056A;\n t['zhebrevecyrillic'] = 0x04C2;\n t['zhecyrillic'] = 0x0436;\n t['zhedescendercyrillic'] = 0x0497;\n t['zhedieresiscyrillic'] = 0x04DD;\n t['zihiragana'] = 0x3058;\n t['zikatakana'] = 0x30B8;\n t['zinorhebrew'] = 0x05AE;\n t['zlinebelow'] = 0x1E95;\n t['zmonospace'] = 0xFF5A;\n t['zohiragana'] = 0x305E;\n t['zokatakana'] = 0x30BE;\n t['zparen'] = 0x24B5;\n t['zretroflexhook'] = 0x0290;\n t['zstroke'] = 0x01B6;\n t['zuhiragana'] = 0x305A;\n t['zukatakana'] = 0x30BA;\n t['.notdef'] = 0x0000;\n t['angbracketleftbig'] = 0x2329;\n t['angbracketleftBig'] = 0x2329;\n t['angbracketleftbigg'] = 0x2329;\n t['angbracketleftBigg'] = 0x2329;\n t['angbracketrightBig'] = 0x232A;\n t['angbracketrightbig'] = 0x232A;\n t['angbracketrightBigg'] = 0x232A;\n t['angbracketrightbigg'] = 0x232A;\n t['arrowhookleft'] = 0x21AA;\n t['arrowhookright'] = 0x21A9;\n t['arrowlefttophalf'] = 0x21BC;\n t['arrowleftbothalf'] = 0x21BD;\n t['arrownortheast'] = 0x2197;\n t['arrownorthwest'] = 0x2196;\n t['arrowrighttophalf'] = 0x21C0;\n t['arrowrightbothalf'] = 0x21C1;\n t['arrowsoutheast'] = 0x2198;\n t['arrowsouthwest'] = 0x2199;\n t['backslashbig'] = 0x2216;\n t['backslashBig'] = 0x2216;\n t['backslashBigg'] = 0x2216;\n t['backslashbigg'] = 0x2216;\n t['bardbl'] = 0x2016;\n t['bracehtipdownleft'] = 0xFE37;\n t['bracehtipdownright'] = 0xFE37;\n t['bracehtipupleft'] = 0xFE38;\n t['bracehtipupright'] = 0xFE38;\n t['braceleftBig'] = 0x007B;\n t['braceleftbig'] = 0x007B;\n t['braceleftbigg'] = 0x007B;\n t['braceleftBigg'] = 0x007B;\n t['bracerightBig'] = 0x007D;\n t['bracerightbig'] = 0x007D;\n t['bracerightbigg'] = 0x007D;\n t['bracerightBigg'] = 0x007D;\n t['bracketleftbig'] = 0x005B;\n t['bracketleftBig'] = 0x005B;\n t['bracketleftbigg'] = 0x005B;\n t['bracketleftBigg'] = 0x005B;\n t['bracketrightBig'] = 0x005D;\n t['bracketrightbig'] = 0x005D;\n t['bracketrightbigg'] = 0x005D;\n t['bracketrightBigg'] = 0x005D;\n t['ceilingleftbig'] = 0x2308;\n t['ceilingleftBig'] = 0x2308;\n t['ceilingleftBigg'] = 0x2308;\n t['ceilingleftbigg'] = 0x2308;\n t['ceilingrightbig'] = 0x2309;\n t['ceilingrightBig'] = 0x2309;\n t['ceilingrightbigg'] = 0x2309;\n t['ceilingrightBigg'] = 0x2309;\n t['circledotdisplay'] = 0x2299;\n t['circledottext'] = 0x2299;\n t['circlemultiplydisplay'] = 0x2297;\n t['circlemultiplytext'] = 0x2297;\n t['circleplusdisplay'] = 0x2295;\n t['circleplustext'] = 0x2295;\n t['contintegraldisplay'] = 0x222E;\n t['contintegraltext'] = 0x222E;\n t['coproductdisplay'] = 0x2210;\n t['coproducttext'] = 0x2210;\n t['floorleftBig'] = 0x230A;\n t['floorleftbig'] = 0x230A;\n t['floorleftbigg'] = 0x230A;\n t['floorleftBigg'] = 0x230A;\n t['floorrightbig'] = 0x230B;\n t['floorrightBig'] = 0x230B;\n t['floorrightBigg'] = 0x230B;\n t['floorrightbigg'] = 0x230B;\n t['hatwide'] = 0x0302;\n t['hatwider'] = 0x0302;\n t['hatwidest'] = 0x0302;\n t['intercal'] = 0x1D40;\n t['integraldisplay'] = 0x222B;\n t['integraltext'] = 0x222B;\n t['intersectiondisplay'] = 0x22C2;\n t['intersectiontext'] = 0x22C2;\n t['logicalanddisplay'] = 0x2227;\n t['logicalandtext'] = 0x2227;\n t['logicalordisplay'] = 0x2228;\n t['logicalortext'] = 0x2228;\n t['parenleftBig'] = 0x0028;\n t['parenleftbig'] = 0x0028;\n t['parenleftBigg'] = 0x0028;\n t['parenleftbigg'] = 0x0028;\n t['parenrightBig'] = 0x0029;\n t['parenrightbig'] = 0x0029;\n t['parenrightBigg'] = 0x0029;\n t['parenrightbigg'] = 0x0029;\n t['prime'] = 0x2032;\n t['productdisplay'] = 0x220F;\n t['producttext'] = 0x220F;\n t['radicalbig'] = 0x221A;\n t['radicalBig'] = 0x221A;\n t['radicalBigg'] = 0x221A;\n t['radicalbigg'] = 0x221A;\n t['radicalbt'] = 0x221A;\n t['radicaltp'] = 0x221A;\n t['radicalvertex'] = 0x221A;\n t['slashbig'] = 0x002F;\n t['slashBig'] = 0x002F;\n t['slashBigg'] = 0x002F;\n t['slashbigg'] = 0x002F;\n t['summationdisplay'] = 0x2211;\n t['summationtext'] = 0x2211;\n t['tildewide'] = 0x02DC;\n t['tildewider'] = 0x02DC;\n t['tildewidest'] = 0x02DC;\n t['uniondisplay'] = 0x22C3;\n t['unionmultidisplay'] = 0x228E;\n t['unionmultitext'] = 0x228E;\n t['unionsqdisplay'] = 0x2294;\n t['unionsqtext'] = 0x2294;\n t['uniontext'] = 0x22C3;\n t['vextenddouble'] = 0x2225;\n t['vextendsingle'] = 0x2223;\n});\nvar getDingbatsGlyphsUnicode = getLookupTableFactory(function (t) {\n t['space'] = 0x0020;\n t['a1'] = 0x2701;\n t['a2'] = 0x2702;\n t['a202'] = 0x2703;\n t['a3'] = 0x2704;\n t['a4'] = 0x260E;\n t['a5'] = 0x2706;\n t['a119'] = 0x2707;\n t['a118'] = 0x2708;\n t['a117'] = 0x2709;\n t['a11'] = 0x261B;\n t['a12'] = 0x261E;\n t['a13'] = 0x270C;\n t['a14'] = 0x270D;\n t['a15'] = 0x270E;\n t['a16'] = 0x270F;\n t['a105'] = 0x2710;\n t['a17'] = 0x2711;\n t['a18'] = 0x2712;\n t['a19'] = 0x2713;\n t['a20'] = 0x2714;\n t['a21'] = 0x2715;\n t['a22'] = 0x2716;\n t['a23'] = 0x2717;\n t['a24'] = 0x2718;\n t['a25'] = 0x2719;\n t['a26'] = 0x271A;\n t['a27'] = 0x271B;\n t['a28'] = 0x271C;\n t['a6'] = 0x271D;\n t['a7'] = 0x271E;\n t['a8'] = 0x271F;\n t['a9'] = 0x2720;\n t['a10'] = 0x2721;\n t['a29'] = 0x2722;\n t['a30'] = 0x2723;\n t['a31'] = 0x2724;\n t['a32'] = 0x2725;\n t['a33'] = 0x2726;\n t['a34'] = 0x2727;\n t['a35'] = 0x2605;\n t['a36'] = 0x2729;\n t['a37'] = 0x272A;\n t['a38'] = 0x272B;\n t['a39'] = 0x272C;\n t['a40'] = 0x272D;\n t['a41'] = 0x272E;\n t['a42'] = 0x272F;\n t['a43'] = 0x2730;\n t['a44'] = 0x2731;\n t['a45'] = 0x2732;\n t['a46'] = 0x2733;\n t['a47'] = 0x2734;\n t['a48'] = 0x2735;\n t['a49'] = 0x2736;\n t['a50'] = 0x2737;\n t['a51'] = 0x2738;\n t['a52'] = 0x2739;\n t['a53'] = 0x273A;\n t['a54'] = 0x273B;\n t['a55'] = 0x273C;\n t['a56'] = 0x273D;\n t['a57'] = 0x273E;\n t['a58'] = 0x273F;\n t['a59'] = 0x2740;\n t['a60'] = 0x2741;\n t['a61'] = 0x2742;\n t['a62'] = 0x2743;\n t['a63'] = 0x2744;\n t['a64'] = 0x2745;\n t['a65'] = 0x2746;\n t['a66'] = 0x2747;\n t['a67'] = 0x2748;\n t['a68'] = 0x2749;\n t['a69'] = 0x274A;\n t['a70'] = 0x274B;\n t['a71'] = 0x25CF;\n t['a72'] = 0x274D;\n t['a73'] = 0x25A0;\n t['a74'] = 0x274F;\n t['a203'] = 0x2750;\n t['a75'] = 0x2751;\n t['a204'] = 0x2752;\n t['a76'] = 0x25B2;\n t['a77'] = 0x25BC;\n t['a78'] = 0x25C6;\n t['a79'] = 0x2756;\n t['a81'] = 0x25D7;\n t['a82'] = 0x2758;\n t['a83'] = 0x2759;\n t['a84'] = 0x275A;\n t['a97'] = 0x275B;\n t['a98'] = 0x275C;\n t['a99'] = 0x275D;\n t['a100'] = 0x275E;\n t['a101'] = 0x2761;\n t['a102'] = 0x2762;\n t['a103'] = 0x2763;\n t['a104'] = 0x2764;\n t['a106'] = 0x2765;\n t['a107'] = 0x2766;\n t['a108'] = 0x2767;\n t['a112'] = 0x2663;\n t['a111'] = 0x2666;\n t['a110'] = 0x2665;\n t['a109'] = 0x2660;\n t['a120'] = 0x2460;\n t['a121'] = 0x2461;\n t['a122'] = 0x2462;\n t['a123'] = 0x2463;\n t['a124'] = 0x2464;\n t['a125'] = 0x2465;\n t['a126'] = 0x2466;\n t['a127'] = 0x2467;\n t['a128'] = 0x2468;\n t['a129'] = 0x2469;\n t['a130'] = 0x2776;\n t['a131'] = 0x2777;\n t['a132'] = 0x2778;\n t['a133'] = 0x2779;\n t['a134'] = 0x277A;\n t['a135'] = 0x277B;\n t['a136'] = 0x277C;\n t['a137'] = 0x277D;\n t['a138'] = 0x277E;\n t['a139'] = 0x277F;\n t['a140'] = 0x2780;\n t['a141'] = 0x2781;\n t['a142'] = 0x2782;\n t['a143'] = 0x2783;\n t['a144'] = 0x2784;\n t['a145'] = 0x2785;\n t['a146'] = 0x2786;\n t['a147'] = 0x2787;\n t['a148'] = 0x2788;\n t['a149'] = 0x2789;\n t['a150'] = 0x278A;\n t['a151'] = 0x278B;\n t['a152'] = 0x278C;\n t['a153'] = 0x278D;\n t['a154'] = 0x278E;\n t['a155'] = 0x278F;\n t['a156'] = 0x2790;\n t['a157'] = 0x2791;\n t['a158'] = 0x2792;\n t['a159'] = 0x2793;\n t['a160'] = 0x2794;\n t['a161'] = 0x2192;\n t['a163'] = 0x2194;\n t['a164'] = 0x2195;\n t['a196'] = 0x2798;\n t['a165'] = 0x2799;\n t['a192'] = 0x279A;\n t['a166'] = 0x279B;\n t['a167'] = 0x279C;\n t['a168'] = 0x279D;\n t['a169'] = 0x279E;\n t['a170'] = 0x279F;\n t['a171'] = 0x27A0;\n t['a172'] = 0x27A1;\n t['a173'] = 0x27A2;\n t['a162'] = 0x27A3;\n t['a174'] = 0x27A4;\n t['a175'] = 0x27A5;\n t['a176'] = 0x27A6;\n t['a177'] = 0x27A7;\n t['a178'] = 0x27A8;\n t['a179'] = 0x27A9;\n t['a193'] = 0x27AA;\n t['a180'] = 0x27AB;\n t['a199'] = 0x27AC;\n t['a181'] = 0x27AD;\n t['a200'] = 0x27AE;\n t['a182'] = 0x27AF;\n t['a201'] = 0x27B1;\n t['a183'] = 0x27B2;\n t['a184'] = 0x27B3;\n t['a197'] = 0x27B4;\n t['a185'] = 0x27B5;\n t['a194'] = 0x27B6;\n t['a198'] = 0x27B7;\n t['a186'] = 0x27B8;\n t['a195'] = 0x27B9;\n t['a187'] = 0x27BA;\n t['a188'] = 0x27BB;\n t['a189'] = 0x27BC;\n t['a190'] = 0x27BD;\n t['a191'] = 0x27BE;\n t['a89'] = 0x2768;\n t['a90'] = 0x2769;\n t['a93'] = 0x276A;\n t['a94'] = 0x276B;\n t['a91'] = 0x276C;\n t['a92'] = 0x276D;\n t['a205'] = 0x276E;\n t['a85'] = 0x276F;\n t['a206'] = 0x2770;\n t['a86'] = 0x2771;\n t['a87'] = 0x2772;\n t['a88'] = 0x2773;\n t['a95'] = 0x2774;\n t['a96'] = 0x2775;\n t['.notdef'] = 0x0000;\n});\nexports.getGlyphsUnicode = getGlyphsUnicode;\nexports.getDingbatsGlyphsUnicode = getDingbatsGlyphsUnicode;\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar corePdfManager = __w_pdfjs_require__(33);\nvar UNSUPPORTED_FEATURES = sharedUtil.UNSUPPORTED_FEATURES;\nvar InvalidPDFException = sharedUtil.InvalidPDFException;\nvar MessageHandler = sharedUtil.MessageHandler;\nvar MissingPDFException = sharedUtil.MissingPDFException;\nvar UnexpectedResponseException = sharedUtil.UnexpectedResponseException;\nvar PasswordException = sharedUtil.PasswordException;\nvar UnknownErrorException = sharedUtil.UnknownErrorException;\nvar XRefParseException = sharedUtil.XRefParseException;\nvar arrayByteLength = sharedUtil.arrayByteLength;\nvar arraysToBytes = sharedUtil.arraysToBytes;\nvar assert = sharedUtil.assert;\nvar createPromiseCapability = sharedUtil.createPromiseCapability;\nvar info = sharedUtil.info;\nvar warn = sharedUtil.warn;\nvar setVerbosityLevel = sharedUtil.setVerbosityLevel;\nvar isNodeJS = sharedUtil.isNodeJS;\nvar Ref = corePrimitives.Ref;\nvar LocalPdfManager = corePdfManager.LocalPdfManager;\nvar NetworkPdfManager = corePdfManager.NetworkPdfManager;\nvar WorkerTask = function WorkerTaskClosure() {\n function WorkerTask(name) {\n  this.name = name;\n  this.terminated = false;\n  this._capability = createPromiseCapability();\n }\n WorkerTask.prototype = {\n  get finished() {\n   return this._capability.promise;\n  },\n  finish: function () {\n   this._capability.resolve();\n  },\n  terminate: function () {\n   this.terminated = true;\n  },\n  ensureNotTerminated: function () {\n   if (this.terminated) {\n    throw new Error('Worker task was terminated');\n   }\n  }\n };\n return WorkerTask;\n}();\nvar PDFWorkerStream = function PDFWorkerStreamClosure() {\n function PDFWorkerStream(params, msgHandler) {\n  this._queuedChunks = [];\n  var initialData = params.initialData;\n  if (initialData && initialData.length > 0) {\n   this._queuedChunks.push(initialData);\n  }\n  this._msgHandler = msgHandler;\n  this._isRangeSupported = !params.disableRange;\n  this._isStreamingSupported = !params.disableStream;\n  this._contentLength = params.length;\n  this._fullRequestReader = null;\n  this._rangeReaders = [];\n  msgHandler.on('OnDataRange', this._onReceiveData.bind(this));\n  msgHandler.on('OnDataProgress', this._onProgress.bind(this));\n }\n PDFWorkerStream.prototype = {\n  _onReceiveData: function PDFWorkerStream_onReceiveData(args) {\n   if (args.begin === undefined) {\n    if (this._fullRequestReader) {\n     this._fullRequestReader._enqueue(args.chunk);\n    } else {\n     this._queuedChunks.push(args.chunk);\n    }\n   } else {\n    var found = this._rangeReaders.some(function (rangeReader) {\n     if (rangeReader._begin !== args.begin) {\n      return false;\n     }\n     rangeReader._enqueue(args.chunk);\n     return true;\n    });\n    assert(found);\n   }\n  },\n  _onProgress: function PDFWorkerStream_onProgress(evt) {\n   if (this._rangeReaders.length > 0) {\n    var firstReader = this._rangeReaders[0];\n    if (firstReader.onProgress) {\n     firstReader.onProgress({ loaded: evt.loaded });\n    }\n   }\n  },\n  _removeRangeReader: function PDFWorkerStream_removeRangeReader(reader) {\n   var i = this._rangeReaders.indexOf(reader);\n   if (i >= 0) {\n    this._rangeReaders.splice(i, 1);\n   }\n  },\n  getFullReader: function PDFWorkerStream_getFullReader() {\n   assert(!this._fullRequestReader);\n   var queuedChunks = this._queuedChunks;\n   this._queuedChunks = null;\n   return new PDFWorkerStreamReader(this, queuedChunks);\n  },\n  getRangeReader: function PDFWorkerStream_getRangeReader(begin, end) {\n   var reader = new PDFWorkerStreamRangeReader(this, begin, end);\n   this._msgHandler.send('RequestDataRange', {\n    begin: begin,\n    end: end\n   });\n   this._rangeReaders.push(reader);\n   return reader;\n  },\n  cancelAllRequests: function PDFWorkerStream_cancelAllRequests(reason) {\n   if (this._fullRequestReader) {\n    this._fullRequestReader.cancel(reason);\n   }\n   var readers = this._rangeReaders.slice(0);\n   readers.forEach(function (rangeReader) {\n    rangeReader.cancel(reason);\n   });\n  }\n };\n function PDFWorkerStreamReader(stream, queuedChunks) {\n  this._stream = stream;\n  this._done = false;\n  this._queuedChunks = queuedChunks || [];\n  this._requests = [];\n  this._headersReady = Promise.resolve();\n  stream._fullRequestReader = this;\n  this.onProgress = null;\n }\n PDFWorkerStreamReader.prototype = {\n  _enqueue: function PDFWorkerStreamReader_enqueue(chunk) {\n   if (this._done) {\n    return;\n   }\n   if (this._requests.length > 0) {\n    var requestCapability = this._requests.shift();\n    requestCapability.resolve({\n     value: chunk,\n     done: false\n    });\n    return;\n   }\n   this._queuedChunks.push(chunk);\n  },\n  get headersReady() {\n   return this._headersReady;\n  },\n  get isRangeSupported() {\n   return this._stream._isRangeSupported;\n  },\n  get isStreamingSupported() {\n   return this._stream._isStreamingSupported;\n  },\n  get contentLength() {\n   return this._stream._contentLength;\n  },\n  read: function PDFWorkerStreamReader_read() {\n   if (this._queuedChunks.length > 0) {\n    var chunk = this._queuedChunks.shift();\n    return Promise.resolve({\n     value: chunk,\n     done: false\n    });\n   }\n   if (this._done) {\n    return Promise.resolve({\n     value: undefined,\n     done: true\n    });\n   }\n   var requestCapability = createPromiseCapability();\n   this._requests.push(requestCapability);\n   return requestCapability.promise;\n  },\n  cancel: function PDFWorkerStreamReader_cancel(reason) {\n   this._done = true;\n   this._requests.forEach(function (requestCapability) {\n    requestCapability.resolve({\n     value: undefined,\n     done: true\n    });\n   });\n   this._requests = [];\n  }\n };\n function PDFWorkerStreamRangeReader(stream, begin, end) {\n  this._stream = stream;\n  this._begin = begin;\n  this._end = end;\n  this._queuedChunk = null;\n  this._requests = [];\n  this._done = false;\n  this.onProgress = null;\n }\n PDFWorkerStreamRangeReader.prototype = {\n  _enqueue: function PDFWorkerStreamRangeReader_enqueue(chunk) {\n   if (this._done) {\n    return;\n   }\n   if (this._requests.length === 0) {\n    this._queuedChunk = chunk;\n   } else {\n    var requestsCapability = this._requests.shift();\n    requestsCapability.resolve({\n     value: chunk,\n     done: false\n    });\n    this._requests.forEach(function (requestCapability) {\n     requestCapability.resolve({\n      value: undefined,\n      done: true\n     });\n    });\n    this._requests = [];\n   }\n   this._done = true;\n   this._stream._removeRangeReader(this);\n  },\n  get isStreamingSupported() {\n   return false;\n  },\n  read: function PDFWorkerStreamRangeReader_read() {\n   if (this._queuedChunk) {\n    return Promise.resolve({\n     value: this._queuedChunk,\n     done: false\n    });\n   }\n   if (this._done) {\n    return Promise.resolve({\n     value: undefined,\n     done: true\n    });\n   }\n   var requestCapability = createPromiseCapability();\n   this._requests.push(requestCapability);\n   return requestCapability.promise;\n  },\n  cancel: function PDFWorkerStreamRangeReader_cancel(reason) {\n   this._done = true;\n   this._requests.forEach(function (requestCapability) {\n    requestCapability.resolve({\n     value: undefined,\n     done: true\n    });\n   });\n   this._requests = [];\n   this._stream._removeRangeReader(this);\n  }\n };\n return PDFWorkerStream;\n}();\nvar PDFNetworkStream;\nfunction setPDFNetworkStreamClass(cls) {\n PDFNetworkStream = cls;\n}\nvar WorkerMessageHandler = {\n setup: function wphSetup(handler, port) {\n  var testMessageProcessed = false;\n  handler.on('test', function wphSetupTest(data) {\n   if (testMessageProcessed) {\n    return;\n   }\n   testMessageProcessed = true;\n   if (!(data instanceof Uint8Array)) {\n    handler.send('test', 'main', false);\n    return;\n   }\n   var supportTransfers = data[0] === 255;\n   handler.postMessageTransfers = supportTransfers;\n   var xhr = new XMLHttpRequest();\n   var responseExists = 'response' in xhr;\n   try {\n    xhr.responseType;\n   } catch (e) {\n    responseExists = false;\n   }\n   if (!responseExists) {\n    handler.send('test', false);\n    return;\n   }\n   handler.send('test', {\n    supportTypedArray: true,\n    supportTransfers: supportTransfers\n   });\n  });\n  handler.on('configure', function wphConfigure(data) {\n   setVerbosityLevel(data.verbosity);\n  });\n  handler.on('GetDocRequest', function wphSetupDoc(data) {\n   return WorkerMessageHandler.createDocumentHandler(data, port);\n  });\n },\n createDocumentHandler: function wphCreateDocumentHandler(docParams, port) {\n  var pdfManager;\n  var terminated = false;\n  var cancelXHRs = null;\n  var WorkerTasks = [];\n  var docId = docParams.docId;\n  var docBaseUrl = docParams.docBaseUrl;\n  var workerHandlerName = docParams.docId + '_worker';\n  var handler = new MessageHandler(workerHandlerName, docId, port);\n  handler.postMessageTransfers = docParams.postMessageTransfers;\n  function ensureNotTerminated() {\n   if (terminated) {\n    throw new Error('Worker was terminated');\n   }\n  }\n  function startWorkerTask(task) {\n   WorkerTasks.push(task);\n  }\n  function finishWorkerTask(task) {\n   task.finish();\n   var i = WorkerTasks.indexOf(task);\n   WorkerTasks.splice(i, 1);\n  }\n  function loadDocument(recoveryMode) {\n   var loadDocumentCapability = createPromiseCapability();\n   var parseSuccess = function parseSuccess() {\n    var numPagesPromise = pdfManager.ensureDoc('numPages');\n    var fingerprintPromise = pdfManager.ensureDoc('fingerprint');\n    var encryptedPromise = pdfManager.ensureXRef('encrypt');\n    Promise.all([\n     numPagesPromise,\n     fingerprintPromise,\n     encryptedPromise\n    ]).then(function onDocReady(results) {\n     var doc = {\n      numPages: results[0],\n      fingerprint: results[1],\n      encrypted: !!results[2]\n     };\n     loadDocumentCapability.resolve(doc);\n    }, parseFailure);\n   };\n   var parseFailure = function parseFailure(e) {\n    loadDocumentCapability.reject(e);\n   };\n   pdfManager.ensureDoc('checkHeader', []).then(function () {\n    pdfManager.ensureDoc('parseStartXRef', []).then(function () {\n     pdfManager.ensureDoc('parse', [recoveryMode]).then(parseSuccess, parseFailure);\n    }, parseFailure);\n   }, parseFailure);\n   return loadDocumentCapability.promise;\n  }\n  function getPdfManager(data, evaluatorOptions) {\n   var pdfManagerCapability = createPromiseCapability();\n   var pdfManager;\n   var source = data.source;\n   if (source.data) {\n    try {\n     pdfManager = new LocalPdfManager(docId, source.data, source.password, evaluatorOptions, docBaseUrl);\n     pdfManagerCapability.resolve(pdfManager);\n    } catch (ex) {\n     pdfManagerCapability.reject(ex);\n    }\n    return pdfManagerCapability.promise;\n   }\n   var pdfStream;\n   try {\n    if (source.chunkedViewerLoading) {\n     pdfStream = new PDFWorkerStream(source, handler);\n    } else {\n     assert(PDFNetworkStream, 'pdfjs/core/network module is not loaded');\n     pdfStream = new PDFNetworkStream(data);\n    }\n   } catch (ex) {\n    pdfManagerCapability.reject(ex);\n    return pdfManagerCapability.promise;\n   }\n   var fullRequest = pdfStream.getFullReader();\n   fullRequest.headersReady.then(function () {\n    if (!fullRequest.isStreamingSupported || !fullRequest.isRangeSupported) {\n     fullRequest.onProgress = function (evt) {\n      handler.send('DocProgress', {\n       loaded: evt.loaded,\n       total: evt.total\n      });\n     };\n    }\n    if (!fullRequest.isRangeSupported) {\n     return;\n    }\n    var disableAutoFetch = source.disableAutoFetch || fullRequest.isStreamingSupported;\n    pdfManager = new NetworkPdfManager(docId, pdfStream, {\n     msgHandler: handler,\n     url: source.url,\n     password: source.password,\n     length: fullRequest.contentLength,\n     disableAutoFetch: disableAutoFetch,\n     rangeChunkSize: source.rangeChunkSize\n    }, evaluatorOptions, docBaseUrl);\n    pdfManagerCapability.resolve(pdfManager);\n    cancelXHRs = null;\n   }).catch(function (reason) {\n    pdfManagerCapability.reject(reason);\n    cancelXHRs = null;\n   });\n   var cachedChunks = [], loaded = 0;\n   var flushChunks = function () {\n    var pdfFile = arraysToBytes(cachedChunks);\n    if (source.length && pdfFile.length !== source.length) {\n     warn('reported HTTP length is different from actual');\n    }\n    try {\n     pdfManager = new LocalPdfManager(docId, pdfFile, source.password, evaluatorOptions, docBaseUrl);\n     pdfManagerCapability.resolve(pdfManager);\n    } catch (ex) {\n     pdfManagerCapability.reject(ex);\n    }\n    cachedChunks = [];\n   };\n   var readPromise = new Promise(function (resolve, reject) {\n    var readChunk = function (chunk) {\n     try {\n      ensureNotTerminated();\n      if (chunk.done) {\n       if (!pdfManager) {\n        flushChunks();\n       }\n       cancelXHRs = null;\n       return;\n      }\n      var data = chunk.value;\n      loaded += arrayByteLength(data);\n      if (!fullRequest.isStreamingSupported) {\n       handler.send('DocProgress', {\n        loaded: loaded,\n        total: Math.max(loaded, fullRequest.contentLength || 0)\n       });\n      }\n      if (pdfManager) {\n       pdfManager.sendProgressiveData(data);\n      } else {\n       cachedChunks.push(data);\n      }\n      fullRequest.read().then(readChunk, reject);\n     } catch (e) {\n      reject(e);\n     }\n    };\n    fullRequest.read().then(readChunk, reject);\n   });\n   readPromise.catch(function (e) {\n    pdfManagerCapability.reject(e);\n    cancelXHRs = null;\n   });\n   cancelXHRs = function () {\n    pdfStream.cancelAllRequests('abort');\n   };\n   return pdfManagerCapability.promise;\n  }\n  function setupDoc(data) {\n   function onSuccess(doc) {\n    ensureNotTerminated();\n    handler.send('GetDoc', { pdfInfo: doc });\n   }\n   function onFailure(e) {\n    if (e instanceof PasswordException) {\n     var task = new WorkerTask('PasswordException: response ' + e.code);\n     startWorkerTask(task);\n     handler.sendWithPromise('PasswordRequest', e).then(function (data) {\n      finishWorkerTask(task);\n      pdfManager.updatePassword(data.password);\n      pdfManagerReady();\n     }).catch(function (ex) {\n      finishWorkerTask(task);\n      handler.send('PasswordException', ex);\n     }.bind(null, e));\n    } else if (e instanceof InvalidPDFException) {\n     handler.send('InvalidPDF', e);\n    } else if (e instanceof MissingPDFException) {\n     handler.send('MissingPDF', e);\n    } else if (e instanceof UnexpectedResponseException) {\n     handler.send('UnexpectedResponse', e);\n    } else {\n     handler.send('UnknownError', new UnknownErrorException(e.message, e.toString()));\n    }\n   }\n   function pdfManagerReady() {\n    ensureNotTerminated();\n    loadDocument(false).then(onSuccess, function loadFailure(ex) {\n     ensureNotTerminated();\n     if (!(ex instanceof XRefParseException)) {\n      onFailure(ex);\n      return;\n     }\n     pdfManager.requestLoadedStream();\n     pdfManager.onLoadedStream().then(function () {\n      ensureNotTerminated();\n      loadDocument(true).then(onSuccess, onFailure);\n     });\n    }, onFailure);\n   }\n   ensureNotTerminated();\n   var evaluatorOptions = {\n    forceDataSchema: data.disableCreateObjectURL,\n    maxImageSize: data.maxImageSize === undefined ? -1 : data.maxImageSize,\n    disableFontFace: data.disableFontFace,\n    disableNativeImageDecoder: data.disableNativeImageDecoder\n   };\n   getPdfManager(data, evaluatorOptions).then(function (newPdfManager) {\n    if (terminated) {\n     newPdfManager.terminate();\n     throw new Error('Worker was terminated');\n    }\n    pdfManager = newPdfManager;\n    handler.send('PDFManagerReady', null);\n    pdfManager.onLoadedStream().then(function (stream) {\n     handler.send('DataLoaded', { length: stream.bytes.byteLength });\n    });\n   }).then(pdfManagerReady, onFailure);\n  }\n  handler.on('GetPage', function wphSetupGetPage(data) {\n   return pdfManager.getPage(data.pageIndex).then(function (page) {\n    var rotatePromise = pdfManager.ensure(page, 'rotate');\n    var refPromise = pdfManager.ensure(page, 'ref');\n    var userUnitPromise = pdfManager.ensure(page, 'userUnit');\n    var viewPromise = pdfManager.ensure(page, 'view');\n    return Promise.all([\n     rotatePromise,\n     refPromise,\n     userUnitPromise,\n     viewPromise\n    ]).then(function (results) {\n     return {\n      rotate: results[0],\n      ref: results[1],\n      userUnit: results[2],\n      view: results[3]\n     };\n    });\n   });\n  });\n  handler.on('GetPageIndex', function wphSetupGetPageIndex(data) {\n   var ref = new Ref(data.ref.num, data.ref.gen);\n   var catalog = pdfManager.pdfDocument.catalog;\n   return catalog.getPageIndex(ref);\n  });\n  handler.on('GetDestinations', function wphSetupGetDestinations(data) {\n   return pdfManager.ensureCatalog('destinations');\n  });\n  handler.on('GetDestination', function wphSetupGetDestination(data) {\n   return pdfManager.ensureCatalog('getDestination', [data.id]);\n  });\n  handler.on('GetPageLabels', function wphSetupGetPageLabels(data) {\n   return pdfManager.ensureCatalog('pageLabels');\n  });\n  handler.on('GetAttachments', function wphSetupGetAttachments(data) {\n   return pdfManager.ensureCatalog('attachments');\n  });\n  handler.on('GetJavaScript', function wphSetupGetJavaScript(data) {\n   return pdfManager.ensureCatalog('javaScript');\n  });\n  handler.on('GetOutline', function wphSetupGetOutline(data) {\n   return pdfManager.ensureCatalog('documentOutline');\n  });\n  handler.on('GetMetadata', function wphSetupGetMetadata(data) {\n   return Promise.all([\n    pdfManager.ensureDoc('documentInfo'),\n    pdfManager.ensureCatalog('metadata')\n   ]);\n  });\n  handler.on('GetData', function wphSetupGetData(data) {\n   pdfManager.requestLoadedStream();\n   return pdfManager.onLoadedStream().then(function (stream) {\n    return stream.bytes;\n   });\n  });\n  handler.on('GetStats', function wphSetupGetStats(data) {\n   return pdfManager.pdfDocument.xref.stats;\n  });\n  handler.on('GetAnnotations', function wphSetupGetAnnotations(data) {\n   return pdfManager.getPage(data.pageIndex).then(function (page) {\n    return pdfManager.ensure(page, 'getAnnotationsData', [data.intent]);\n   });\n  });\n  handler.on('RenderPageRequest', function wphSetupRenderPage(data) {\n   var pageIndex = data.pageIndex;\n   pdfManager.getPage(pageIndex).then(function (page) {\n    var task = new WorkerTask('RenderPageRequest: page ' + pageIndex);\n    startWorkerTask(task);\n    var pageNum = pageIndex + 1;\n    var start = Date.now();\n    page.getOperatorList(handler, task, data.intent, data.renderInteractiveForms).then(function (operatorList) {\n     finishWorkerTask(task);\n     info('page=' + pageNum + ' - getOperatorList: time=' + (Date.now() - start) + 'ms, len=' + operatorList.totalLength);\n    }, function (e) {\n     finishWorkerTask(task);\n     if (task.terminated) {\n      return;\n     }\n     handler.send('UnsupportedFeature', { featureId: UNSUPPORTED_FEATURES.unknown });\n     var minimumStackMessage = 'worker.js: while trying to getPage() and getOperatorList()';\n     var wrappedException;\n     if (typeof e === 'string') {\n      wrappedException = {\n       message: e,\n       stack: minimumStackMessage\n      };\n     } else if (typeof e === 'object') {\n      wrappedException = {\n       message: e.message || e.toString(),\n       stack: e.stack || minimumStackMessage\n      };\n     } else {\n      wrappedException = {\n       message: 'Unknown exception type: ' + typeof e,\n       stack: minimumStackMessage\n      };\n     }\n     handler.send('PageError', {\n      pageNum: pageNum,\n      error: wrappedException,\n      intent: data.intent\n     });\n    });\n   });\n  }, this);\n  handler.on('GetTextContent', function wphExtractText(data) {\n   var pageIndex = data.pageIndex;\n   var normalizeWhitespace = data.normalizeWhitespace;\n   var combineTextItems = data.combineTextItems;\n   return pdfManager.getPage(pageIndex).then(function (page) {\n    var task = new WorkerTask('GetTextContent: page ' + pageIndex);\n    startWorkerTask(task);\n    var pageNum = pageIndex + 1;\n    var start = Date.now();\n    return page.extractTextContent(task, normalizeWhitespace, combineTextItems).then(function (textContent) {\n     finishWorkerTask(task);\n     info('text indexing: page=' + pageNum + ' - time=' + (Date.now() - start) + 'ms');\n     return textContent;\n    }, function (reason) {\n     finishWorkerTask(task);\n     if (task.terminated) {\n      return;\n     }\n     throw reason;\n    });\n   });\n  });\n  handler.on('Cleanup', function wphCleanup(data) {\n   return pdfManager.cleanup();\n  });\n  handler.on('Terminate', function wphTerminate(data) {\n   terminated = true;\n   if (pdfManager) {\n    pdfManager.terminate();\n    pdfManager = null;\n   }\n   if (cancelXHRs) {\n    cancelXHRs();\n   }\n   var waitOn = [];\n   WorkerTasks.forEach(function (task) {\n    waitOn.push(task.finished);\n    task.terminate();\n   });\n   return Promise.all(waitOn).then(function () {\n    handler.destroy();\n    handler = null;\n   });\n  });\n  handler.on('Ready', function wphReady(data) {\n   setupDoc(docParams);\n   docParams = null;\n  });\n  return workerHandlerName;\n }\n};\nfunction initializeWorker() {\n var handler = new MessageHandler('worker', 'main', self);\n WorkerMessageHandler.setup(handler, self);\n handler.send('ready', null);\n}\nif (typeof window === 'undefined' && !isNodeJS()) {\n initializeWorker();\n}\nexports.setPDFNetworkStreamClass = setPDFNetworkStreamClass;\nexports.WorkerTask = WorkerTask;\nexports.WorkerMessageHandler = WorkerMessageHandler;\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\nvar g;\ng = function () {\n return this;\n}();\ntry {\n g = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n if (typeof window === \"object\")\n  g = window;\n}\nmodule.exports = g;\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar ArithmeticDecoder = function ArithmeticDecoderClosure() {\n var QeTable = [\n  {\n   qe: 0x5601,\n   nmps: 1,\n   nlps: 1,\n   switchFlag: 1\n  },\n  {\n   qe: 0x3401,\n   nmps: 2,\n   nlps: 6,\n   switchFlag: 0\n  },\n  {\n   qe: 0x1801,\n   nmps: 3,\n   nlps: 9,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0AC1,\n   nmps: 4,\n   nlps: 12,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0521,\n   nmps: 5,\n   nlps: 29,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0221,\n   nmps: 38,\n   nlps: 33,\n   switchFlag: 0\n  },\n  {\n   qe: 0x5601,\n   nmps: 7,\n   nlps: 6,\n   switchFlag: 1\n  },\n  {\n   qe: 0x5401,\n   nmps: 8,\n   nlps: 14,\n   switchFlag: 0\n  },\n  {\n   qe: 0x4801,\n   nmps: 9,\n   nlps: 14,\n   switchFlag: 0\n  },\n  {\n   qe: 0x3801,\n   nmps: 10,\n   nlps: 14,\n   switchFlag: 0\n  },\n  {\n   qe: 0x3001,\n   nmps: 11,\n   nlps: 17,\n   switchFlag: 0\n  },\n  {\n   qe: 0x2401,\n   nmps: 12,\n   nlps: 18,\n   switchFlag: 0\n  },\n  {\n   qe: 0x1C01,\n   nmps: 13,\n   nlps: 20,\n   switchFlag: 0\n  },\n  {\n   qe: 0x1601,\n   nmps: 29,\n   nlps: 21,\n   switchFlag: 0\n  },\n  {\n   qe: 0x5601,\n   nmps: 15,\n   nlps: 14,\n   switchFlag: 1\n  },\n  {\n   qe: 0x5401,\n   nmps: 16,\n   nlps: 14,\n   switchFlag: 0\n  },\n  {\n   qe: 0x5101,\n   nmps: 17,\n   nlps: 15,\n   switchFlag: 0\n  },\n  {\n   qe: 0x4801,\n   nmps: 18,\n   nlps: 16,\n   switchFlag: 0\n  },\n  {\n   qe: 0x3801,\n   nmps: 19,\n   nlps: 17,\n   switchFlag: 0\n  },\n  {\n   qe: 0x3401,\n   nmps: 20,\n   nlps: 18,\n   switchFlag: 0\n  },\n  {\n   qe: 0x3001,\n   nmps: 21,\n   nlps: 19,\n   switchFlag: 0\n  },\n  {\n   qe: 0x2801,\n   nmps: 22,\n   nlps: 19,\n   switchFlag: 0\n  },\n  {\n   qe: 0x2401,\n   nmps: 23,\n   nlps: 20,\n   switchFlag: 0\n  },\n  {\n   qe: 0x2201,\n   nmps: 24,\n   nlps: 21,\n   switchFlag: 0\n  },\n  {\n   qe: 0x1C01,\n   nmps: 25,\n   nlps: 22,\n   switchFlag: 0\n  },\n  {\n   qe: 0x1801,\n   nmps: 26,\n   nlps: 23,\n   switchFlag: 0\n  },\n  {\n   qe: 0x1601,\n   nmps: 27,\n   nlps: 24,\n   switchFlag: 0\n  },\n  {\n   qe: 0x1401,\n   nmps: 28,\n   nlps: 25,\n   switchFlag: 0\n  },\n  {\n   qe: 0x1201,\n   nmps: 29,\n   nlps: 26,\n   switchFlag: 0\n  },\n  {\n   qe: 0x1101,\n   nmps: 30,\n   nlps: 27,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0AC1,\n   nmps: 31,\n   nlps: 28,\n   switchFlag: 0\n  },\n  {\n   qe: 0x09C1,\n   nmps: 32,\n   nlps: 29,\n   switchFlag: 0\n  },\n  {\n   qe: 0x08A1,\n   nmps: 33,\n   nlps: 30,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0521,\n   nmps: 34,\n   nlps: 31,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0441,\n   nmps: 35,\n   nlps: 32,\n   switchFlag: 0\n  },\n  {\n   qe: 0x02A1,\n   nmps: 36,\n   nlps: 33,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0221,\n   nmps: 37,\n   nlps: 34,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0141,\n   nmps: 38,\n   nlps: 35,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0111,\n   nmps: 39,\n   nlps: 36,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0085,\n   nmps: 40,\n   nlps: 37,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0049,\n   nmps: 41,\n   nlps: 38,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0025,\n   nmps: 42,\n   nlps: 39,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0015,\n   nmps: 43,\n   nlps: 40,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0009,\n   nmps: 44,\n   nlps: 41,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0005,\n   nmps: 45,\n   nlps: 42,\n   switchFlag: 0\n  },\n  {\n   qe: 0x0001,\n   nmps: 45,\n   nlps: 43,\n   switchFlag: 0\n  },\n  {\n   qe: 0x5601,\n   nmps: 46,\n   nlps: 46,\n   switchFlag: 0\n  }\n ];\n function ArithmeticDecoder(data, start, end) {\n  this.data = data;\n  this.bp = start;\n  this.dataEnd = end;\n  this.chigh = data[start];\n  this.clow = 0;\n  this.byteIn();\n  this.chigh = this.chigh << 7 & 0xFFFF | this.clow >> 9 & 0x7F;\n  this.clow = this.clow << 7 & 0xFFFF;\n  this.ct -= 7;\n  this.a = 0x8000;\n }\n ArithmeticDecoder.prototype = {\n  byteIn: function ArithmeticDecoder_byteIn() {\n   var data = this.data;\n   var bp = this.bp;\n   if (data[bp] === 0xFF) {\n    var b1 = data[bp + 1];\n    if (b1 > 0x8F) {\n     this.clow += 0xFF00;\n     this.ct = 8;\n    } else {\n     bp++;\n     this.clow += data[bp] << 9;\n     this.ct = 7;\n     this.bp = bp;\n    }\n   } else {\n    bp++;\n    this.clow += bp < this.dataEnd ? data[bp] << 8 : 0xFF00;\n    this.ct = 8;\n    this.bp = bp;\n   }\n   if (this.clow > 0xFFFF) {\n    this.chigh += this.clow >> 16;\n    this.clow &= 0xFFFF;\n   }\n  },\n  readBit: function ArithmeticDecoder_readBit(contexts, pos) {\n   var cx_index = contexts[pos] >> 1, cx_mps = contexts[pos] & 1;\n   var qeTableIcx = QeTable[cx_index];\n   var qeIcx = qeTableIcx.qe;\n   var d;\n   var a = this.a - qeIcx;\n   if (this.chigh < qeIcx) {\n    if (a < qeIcx) {\n     a = qeIcx;\n     d = cx_mps;\n     cx_index = qeTableIcx.nmps;\n    } else {\n     a = qeIcx;\n     d = 1 ^ cx_mps;\n     if (qeTableIcx.switchFlag === 1) {\n      cx_mps = d;\n     }\n     cx_index = qeTableIcx.nlps;\n    }\n   } else {\n    this.chigh -= qeIcx;\n    if ((a & 0x8000) !== 0) {\n     this.a = a;\n     return cx_mps;\n    }\n    if (a < qeIcx) {\n     d = 1 ^ cx_mps;\n     if (qeTableIcx.switchFlag === 1) {\n      cx_mps = d;\n     }\n     cx_index = qeTableIcx.nlps;\n    } else {\n     d = cx_mps;\n     cx_index = qeTableIcx.nmps;\n    }\n   }\n   do {\n    if (this.ct === 0) {\n     this.byteIn();\n    }\n    a <<= 1;\n    this.chigh = this.chigh << 1 & 0xFFFF | this.clow >> 15 & 1;\n    this.clow = this.clow << 1 & 0xFFFF;\n    this.ct--;\n   } while ((a & 0x8000) === 0);\n   this.a = a;\n   contexts[pos] = cx_index << 1 | cx_mps;\n   return d;\n  }\n };\n return ArithmeticDecoder;\n}();\nexports.ArithmeticDecoder = ArithmeticDecoder;\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar coreCharsets = __w_pdfjs_require__(22);\nvar coreEncodings = __w_pdfjs_require__(4);\nvar error = sharedUtil.error;\nvar info = sharedUtil.info;\nvar bytesToString = sharedUtil.bytesToString;\nvar warn = sharedUtil.warn;\nvar isArray = sharedUtil.isArray;\nvar Util = sharedUtil.Util;\nvar stringToBytes = sharedUtil.stringToBytes;\nvar assert = sharedUtil.assert;\nvar ISOAdobeCharset = coreCharsets.ISOAdobeCharset;\nvar ExpertCharset = coreCharsets.ExpertCharset;\nvar ExpertSubsetCharset = coreCharsets.ExpertSubsetCharset;\nvar StandardEncoding = coreEncodings.StandardEncoding;\nvar ExpertEncoding = coreEncodings.ExpertEncoding;\nvar MAX_SUBR_NESTING = 10;\nvar CFFStandardStrings = [\n '.notdef',\n 'space',\n 'exclam',\n 'quotedbl',\n 'numbersign',\n 'dollar',\n 'percent',\n 'ampersand',\n 'quoteright',\n 'parenleft',\n 'parenright',\n 'asterisk',\n 'plus',\n 'comma',\n 'hyphen',\n 'period',\n 'slash',\n 'zero',\n 'one',\n 'two',\n 'three',\n 'four',\n 'five',\n 'six',\n 'seven',\n 'eight',\n 'nine',\n 'colon',\n 'semicolon',\n 'less',\n 'equal',\n 'greater',\n 'question',\n 'at',\n 'A',\n 'B',\n 'C',\n 'D',\n 'E',\n 'F',\n 'G',\n 'H',\n 'I',\n 'J',\n 'K',\n 'L',\n 'M',\n 'N',\n 'O',\n 'P',\n 'Q',\n 'R',\n 'S',\n 'T',\n 'U',\n 'V',\n 'W',\n 'X',\n 'Y',\n 'Z',\n 'bracketleft',\n 'backslash',\n 'bracketright',\n 'asciicircum',\n 'underscore',\n 'quoteleft',\n 'a',\n 'b',\n 'c',\n 'd',\n 'e',\n 'f',\n 'g',\n 'h',\n 'i',\n 'j',\n 'k',\n 'l',\n 'm',\n 'n',\n 'o',\n 'p',\n 'q',\n 'r',\n 's',\n 't',\n 'u',\n 'v',\n 'w',\n 'x',\n 'y',\n 'z',\n 'braceleft',\n 'bar',\n 'braceright',\n 'asciitilde',\n 'exclamdown',\n 'cent',\n 'sterling',\n 'fraction',\n 'yen',\n 'florin',\n 'section',\n 'currency',\n 'quotesingle',\n 'quotedblleft',\n 'guillemotleft',\n 'guilsinglleft',\n 'guilsinglright',\n 'fi',\n 'fl',\n 'endash',\n 'dagger',\n 'daggerdbl',\n 'periodcentered',\n 'paragraph',\n 'bullet',\n 'quotesinglbase',\n 'quotedblbase',\n 'quotedblright',\n 'guillemotright',\n 'ellipsis',\n 'perthousand',\n 'questiondown',\n 'grave',\n 'acute',\n 'circumflex',\n 'tilde',\n 'macron',\n 'breve',\n 'dotaccent',\n 'dieresis',\n 'ring',\n 'cedilla',\n 'hungarumlaut',\n 'ogonek',\n 'caron',\n 'emdash',\n 'AE',\n 'ordfeminine',\n 'Lslash',\n 'Oslash',\n 'OE',\n 'ordmasculine',\n 'ae',\n 'dotlessi',\n 'lslash',\n 'oslash',\n 'oe',\n 'germandbls',\n 'onesuperior',\n 'logicalnot',\n 'mu',\n 'trademark',\n 'Eth',\n 'onehalf',\n 'plusminus',\n 'Thorn',\n 'onequarter',\n 'divide',\n 'brokenbar',\n 'degree',\n 'thorn',\n 'threequarters',\n 'twosuperior',\n 'registered',\n 'minus',\n 'eth',\n 'multiply',\n 'threesuperior',\n 'copyright',\n 'Aacute',\n 'Acircumflex',\n 'Adieresis',\n 'Agrave',\n 'Aring',\n 'Atilde',\n 'Ccedilla',\n 'Eacute',\n 'Ecircumflex',\n 'Edieresis',\n 'Egrave',\n 'Iacute',\n 'Icircumflex',\n 'Idieresis',\n 'Igrave',\n 'Ntilde',\n 'Oacute',\n 'Ocircumflex',\n 'Odieresis',\n 'Ograve',\n 'Otilde',\n 'Scaron',\n 'Uacute',\n 'Ucircumflex',\n 'Udieresis',\n 'Ugrave',\n 'Yacute',\n 'Ydieresis',\n 'Zcaron',\n 'aacute',\n 'acircumflex',\n 'adieresis',\n 'agrave',\n 'aring',\n 'atilde',\n 'ccedilla',\n 'eacute',\n 'ecircumflex',\n 'edieresis',\n 'egrave',\n 'iacute',\n 'icircumflex',\n 'idieresis',\n 'igrave',\n 'ntilde',\n 'oacute',\n 'ocircumflex',\n 'odieresis',\n 'ograve',\n 'otilde',\n 'scaron',\n 'uacute',\n 'ucircumflex',\n 'udieresis',\n 'ugrave',\n 'yacute',\n 'ydieresis',\n 'zcaron',\n 'exclamsmall',\n 'Hungarumlautsmall',\n 'dollaroldstyle',\n 'dollarsuperior',\n 'ampersandsmall',\n 'Acutesmall',\n 'parenleftsuperior',\n 'parenrightsuperior',\n 'twodotenleader',\n 'onedotenleader',\n 'zerooldstyle',\n 'oneoldstyle',\n 'twooldstyle',\n 'threeoldstyle',\n 'fouroldstyle',\n 'fiveoldstyle',\n 'sixoldstyle',\n 'sevenoldstyle',\n 'eightoldstyle',\n 'nineoldstyle',\n 'commasuperior',\n 'threequartersemdash',\n 'periodsuperior',\n 'questionsmall',\n 'asuperior',\n 'bsuperior',\n 'centsuperior',\n 'dsuperior',\n 'esuperior',\n 'isuperior',\n 'lsuperior',\n 'msuperior',\n 'nsuperior',\n 'osuperior',\n 'rsuperior',\n 'ssuperior',\n 'tsuperior',\n 'ff',\n 'ffi',\n 'ffl',\n 'parenleftinferior',\n 'parenrightinferior',\n 'Circumflexsmall',\n 'hyphensuperior',\n 'Gravesmall',\n 'Asmall',\n 'Bsmall',\n 'Csmall',\n 'Dsmall',\n 'Esmall',\n 'Fsmall',\n 'Gsmall',\n 'Hsmall',\n 'Ismall',\n 'Jsmall',\n 'Ksmall',\n 'Lsmall',\n 'Msmall',\n 'Nsmall',\n 'Osmall',\n 'Psmall',\n 'Qsmall',\n 'Rsmall',\n 'Ssmall',\n 'Tsmall',\n 'Usmall',\n 'Vsmall',\n 'Wsmall',\n 'Xsmall',\n 'Ysmall',\n 'Zsmall',\n 'colonmonetary',\n 'onefitted',\n 'rupiah',\n 'Tildesmall',\n 'exclamdownsmall',\n 'centoldstyle',\n 'Lslashsmall',\n 'Scaronsmall',\n 'Zcaronsmall',\n 'Dieresissmall',\n 'Brevesmall',\n 'Caronsmall',\n 'Dotaccentsmall',\n 'Macronsmall',\n 'figuredash',\n 'hypheninferior',\n 'Ogoneksmall',\n 'Ringsmall',\n 'Cedillasmall',\n 'questiondownsmall',\n 'oneeighth',\n 'threeeighths',\n 'fiveeighths',\n 'seveneighths',\n 'onethird',\n 'twothirds',\n 'zerosuperior',\n 'foursuperior',\n 'fivesuperior',\n 'sixsuperior',\n 'sevensuperior',\n 'eightsuperior',\n 'ninesuperior',\n 'zeroinferior',\n 'oneinferior',\n 'twoinferior',\n 'threeinferior',\n 'fourinferior',\n 'fiveinferior',\n 'sixinferior',\n 'seveninferior',\n 'eightinferior',\n 'nineinferior',\n 'centinferior',\n 'dollarinferior',\n 'periodinferior',\n 'commainferior',\n 'Agravesmall',\n 'Aacutesmall',\n 'Acircumflexsmall',\n 'Atildesmall',\n 'Adieresissmall',\n 'Aringsmall',\n 'AEsmall',\n 'Ccedillasmall',\n 'Egravesmall',\n 'Eacutesmall',\n 'Ecircumflexsmall',\n 'Edieresissmall',\n 'Igravesmall',\n 'Iacutesmall',\n 'Icircumflexsmall',\n 'Idieresissmall',\n 'Ethsmall',\n 'Ntildesmall',\n 'Ogravesmall',\n 'Oacutesmall',\n 'Ocircumflexsmall',\n 'Otildesmall',\n 'Odieresissmall',\n 'OEsmall',\n 'Oslashsmall',\n 'Ugravesmall',\n 'Uacutesmall',\n 'Ucircumflexsmall',\n 'Udieresissmall',\n 'Yacutesmall',\n 'Thornsmall',\n 'Ydieresissmall',\n '001.000',\n '001.001',\n '001.002',\n '001.003',\n 'Black',\n 'Bold',\n 'Book',\n 'Light',\n 'Medium',\n 'Regular',\n 'Roman',\n 'Semibold'\n];\nvar CFFParser = function CFFParserClosure() {\n var CharstringValidationData = [\n  null,\n  {\n   id: 'hstem',\n   min: 2,\n   stackClearing: true,\n   stem: true\n  },\n  null,\n  {\n   id: 'vstem',\n   min: 2,\n   stackClearing: true,\n   stem: true\n  },\n  {\n   id: 'vmoveto',\n   min: 1,\n   stackClearing: true\n  },\n  {\n   id: 'rlineto',\n   min: 2,\n   resetStack: true\n  },\n  {\n   id: 'hlineto',\n   min: 1,\n   resetStack: true\n  },\n  {\n   id: 'vlineto',\n   min: 1,\n   resetStack: true\n  },\n  {\n   id: 'rrcurveto',\n   min: 6,\n   resetStack: true\n  },\n  null,\n  {\n   id: 'callsubr',\n   min: 1,\n   undefStack: true\n  },\n  {\n   id: 'return',\n   min: 0,\n   undefStack: true\n  },\n  null,\n  null,\n  {\n   id: 'endchar',\n   min: 0,\n   stackClearing: true\n  },\n  null,\n  null,\n  null,\n  {\n   id: 'hstemhm',\n   min: 2,\n   stackClearing: true,\n   stem: true\n  },\n  {\n   id: 'hintmask',\n   min: 0,\n   stackClearing: true\n  },\n  {\n   id: 'cntrmask',\n   min: 0,\n   stackClearing: true\n  },\n  {\n   id: 'rmoveto',\n   min: 2,\n   stackClearing: true\n  },\n  {\n   id: 'hmoveto',\n   min: 1,\n   stackClearing: true\n  },\n  {\n   id: 'vstemhm',\n   min: 2,\n   stackClearing: true,\n   stem: true\n  },\n  {\n   id: 'rcurveline',\n   min: 8,\n   resetStack: true\n  },\n  {\n   id: 'rlinecurve',\n   min: 8,\n   resetStack: true\n  },\n  {\n   id: 'vvcurveto',\n   min: 4,\n   resetStack: true\n  },\n  {\n   id: 'hhcurveto',\n   min: 4,\n   resetStack: true\n  },\n  null,\n  {\n   id: 'callgsubr',\n   min: 1,\n   undefStack: true\n  },\n  {\n   id: 'vhcurveto',\n   min: 4,\n   resetStack: true\n  },\n  {\n   id: 'hvcurveto',\n   min: 4,\n   resetStack: true\n  }\n ];\n var CharstringValidationData12 = [\n  null,\n  null,\n  null,\n  {\n   id: 'and',\n   min: 2,\n   stackDelta: -1\n  },\n  {\n   id: 'or',\n   min: 2,\n   stackDelta: -1\n  },\n  {\n   id: 'not',\n   min: 1,\n   stackDelta: 0\n  },\n  null,\n  null,\n  null,\n  {\n   id: 'abs',\n   min: 1,\n   stackDelta: 0\n  },\n  {\n   id: 'add',\n   min: 2,\n   stackDelta: -1,\n   stackFn: function stack_div(stack, index) {\n    stack[index - 2] = stack[index - 2] + stack[index - 1];\n   }\n  },\n  {\n   id: 'sub',\n   min: 2,\n   stackDelta: -1,\n   stackFn: function stack_div(stack, index) {\n    stack[index - 2] = stack[index - 2] - stack[index - 1];\n   }\n  },\n  {\n   id: 'div',\n   min: 2,\n   stackDelta: -1,\n   stackFn: function stack_div(stack, index) {\n    stack[index - 2] = stack[index - 2] / stack[index - 1];\n   }\n  },\n  null,\n  {\n   id: 'neg',\n   min: 1,\n   stackDelta: 0,\n   stackFn: function stack_div(stack, index) {\n    stack[index - 1] = -stack[index - 1];\n   }\n  },\n  {\n   id: 'eq',\n   min: 2,\n   stackDelta: -1\n  },\n  null,\n  null,\n  {\n   id: 'drop',\n   min: 1,\n   stackDelta: -1\n  },\n  null,\n  {\n   id: 'put',\n   min: 2,\n   stackDelta: -2\n  },\n  {\n   id: 'get',\n   min: 1,\n   stackDelta: 0\n  },\n  {\n   id: 'ifelse',\n   min: 4,\n   stackDelta: -3\n  },\n  {\n   id: 'random',\n   min: 0,\n   stackDelta: 1\n  },\n  {\n   id: 'mul',\n   min: 2,\n   stackDelta: -1,\n   stackFn: function stack_div(stack, index) {\n    stack[index - 2] = stack[index - 2] * stack[index - 1];\n   }\n  },\n  null,\n  {\n   id: 'sqrt',\n   min: 1,\n   stackDelta: 0\n  },\n  {\n   id: 'dup',\n   min: 1,\n   stackDelta: 1\n  },\n  {\n   id: 'exch',\n   min: 2,\n   stackDelta: 0\n  },\n  {\n   id: 'index',\n   min: 2,\n   stackDelta: 0\n  },\n  {\n   id: 'roll',\n   min: 3,\n   stackDelta: -2\n  },\n  null,\n  null,\n  null,\n  {\n   id: 'hflex',\n   min: 7,\n   resetStack: true\n  },\n  {\n   id: 'flex',\n   min: 13,\n   resetStack: true\n  },\n  {\n   id: 'hflex1',\n   min: 9,\n   resetStack: true\n  },\n  {\n   id: 'flex1',\n   min: 11,\n   resetStack: true\n  }\n ];\n function CFFParser(file, properties, seacAnalysisEnabled) {\n  this.bytes = file.getBytes();\n  this.properties = properties;\n  this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n }\n CFFParser.prototype = {\n  parse: function CFFParser_parse() {\n   var properties = this.properties;\n   var cff = new CFF();\n   this.cff = cff;\n   var header = this.parseHeader();\n   var nameIndex = this.parseIndex(header.endPos);\n   var topDictIndex = this.parseIndex(nameIndex.endPos);\n   var stringIndex = this.parseIndex(topDictIndex.endPos);\n   var globalSubrIndex = this.parseIndex(stringIndex.endPos);\n   var topDictParsed = this.parseDict(topDictIndex.obj.get(0));\n   var topDict = this.createDict(CFFTopDict, topDictParsed, cff.strings);\n   cff.header = header.obj;\n   cff.names = this.parseNameIndex(nameIndex.obj);\n   cff.strings = this.parseStringIndex(stringIndex.obj);\n   cff.topDict = topDict;\n   cff.globalSubrIndex = globalSubrIndex.obj;\n   this.parsePrivateDict(cff.topDict);\n   cff.isCIDFont = topDict.hasName('ROS');\n   var charStringOffset = topDict.getByName('CharStrings');\n   var charStringIndex = this.parseIndex(charStringOffset).obj;\n   var fontMatrix = topDict.getByName('FontMatrix');\n   if (fontMatrix) {\n    properties.fontMatrix = fontMatrix;\n   }\n   var fontBBox = topDict.getByName('FontBBox');\n   if (fontBBox) {\n    properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n    properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n    properties.ascentScaled = true;\n   }\n   var charset, encoding;\n   if (cff.isCIDFont) {\n    var fdArrayIndex = this.parseIndex(topDict.getByName('FDArray')).obj;\n    for (var i = 0, ii = fdArrayIndex.count; i < ii; ++i) {\n     var dictRaw = fdArrayIndex.get(i);\n     var fontDict = this.createDict(CFFTopDict, this.parseDict(dictRaw), cff.strings);\n     this.parsePrivateDict(fontDict);\n     cff.fdArray.push(fontDict);\n    }\n    encoding = null;\n    charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, true);\n    cff.fdSelect = this.parseFDSelect(topDict.getByName('FDSelect'), charStringIndex.count);\n   } else {\n    charset = this.parseCharsets(topDict.getByName('charset'), charStringIndex.count, cff.strings, false);\n    encoding = this.parseEncoding(topDict.getByName('Encoding'), properties, cff.strings, charset.charset);\n   }\n   cff.charset = charset;\n   cff.encoding = encoding;\n   var charStringsAndSeacs = this.parseCharStrings(charStringIndex, topDict.privateDict.subrsIndex, globalSubrIndex.obj, cff.fdSelect, cff.fdArray);\n   cff.charStrings = charStringsAndSeacs.charStrings;\n   cff.seacs = charStringsAndSeacs.seacs;\n   cff.widths = charStringsAndSeacs.widths;\n   return cff;\n  },\n  parseHeader: function CFFParser_parseHeader() {\n   var bytes = this.bytes;\n   var bytesLength = bytes.length;\n   var offset = 0;\n   while (offset < bytesLength && bytes[offset] !== 1) {\n    ++offset;\n   }\n   if (offset >= bytesLength) {\n    error('Invalid CFF header');\n   } else if (offset !== 0) {\n    info('cff data is shifted');\n    bytes = bytes.subarray(offset);\n    this.bytes = bytes;\n   }\n   var major = bytes[0];\n   var minor = bytes[1];\n   var hdrSize = bytes[2];\n   var offSize = bytes[3];\n   var header = new CFFHeader(major, minor, hdrSize, offSize);\n   return {\n    obj: header,\n    endPos: hdrSize\n   };\n  },\n  parseDict: function CFFParser_parseDict(dict) {\n   var pos = 0;\n   function parseOperand() {\n    var value = dict[pos++];\n    if (value === 30) {\n     return parseFloatOperand();\n    } else if (value === 28) {\n     value = dict[pos++];\n     value = (value << 24 | dict[pos++] << 16) >> 16;\n     return value;\n    } else if (value === 29) {\n     value = dict[pos++];\n     value = value << 8 | dict[pos++];\n     value = value << 8 | dict[pos++];\n     value = value << 8 | dict[pos++];\n     return value;\n    } else if (value >= 32 && value <= 246) {\n     return value - 139;\n    } else if (value >= 247 && value <= 250) {\n     return (value - 247) * 256 + dict[pos++] + 108;\n    } else if (value >= 251 && value <= 254) {\n     return -((value - 251) * 256) - dict[pos++] - 108;\n    }\n    warn('CFFParser_parseDict: \"' + value + '\" is a reserved command.');\n    return NaN;\n   }\n   function parseFloatOperand() {\n    var str = '';\n    var eof = 15;\n    var lookup = [\n     '0',\n     '1',\n     '2',\n     '3',\n     '4',\n     '5',\n     '6',\n     '7',\n     '8',\n     '9',\n     '.',\n     'E',\n     'E-',\n     null,\n     '-'\n    ];\n    var length = dict.length;\n    while (pos < length) {\n     var b = dict[pos++];\n     var b1 = b >> 4;\n     var b2 = b & 15;\n     if (b1 === eof) {\n      break;\n     }\n     str += lookup[b1];\n     if (b2 === eof) {\n      break;\n     }\n     str += lookup[b2];\n    }\n    return parseFloat(str);\n   }\n   var operands = [];\n   var entries = [];\n   pos = 0;\n   var end = dict.length;\n   while (pos < end) {\n    var b = dict[pos];\n    if (b <= 21) {\n     if (b === 12) {\n      b = b << 8 | dict[++pos];\n     }\n     entries.push([\n      b,\n      operands\n     ]);\n     operands = [];\n     ++pos;\n    } else {\n     operands.push(parseOperand());\n    }\n   }\n   return entries;\n  },\n  parseIndex: function CFFParser_parseIndex(pos) {\n   var cffIndex = new CFFIndex();\n   var bytes = this.bytes;\n   var count = bytes[pos++] << 8 | bytes[pos++];\n   var offsets = [];\n   var end = pos;\n   var i, ii;\n   if (count !== 0) {\n    var offsetSize = bytes[pos++];\n    var startPos = pos + (count + 1) * offsetSize - 1;\n    for (i = 0, ii = count + 1; i < ii; ++i) {\n     var offset = 0;\n     for (var j = 0; j < offsetSize; ++j) {\n      offset <<= 8;\n      offset += bytes[pos++];\n     }\n     offsets.push(startPos + offset);\n    }\n    end = offsets[count];\n   }\n   for (i = 0, ii = offsets.length - 1; i < ii; ++i) {\n    var offsetStart = offsets[i];\n    var offsetEnd = offsets[i + 1];\n    cffIndex.add(bytes.subarray(offsetStart, offsetEnd));\n   }\n   return {\n    obj: cffIndex,\n    endPos: end\n   };\n  },\n  parseNameIndex: function CFFParser_parseNameIndex(index) {\n   var names = [];\n   for (var i = 0, ii = index.count; i < ii; ++i) {\n    var name = index.get(i);\n    var length = Math.min(name.length, 127);\n    var data = [];\n    for (var j = 0; j < length; ++j) {\n     var c = name[j];\n     if (j === 0 && c === 0) {\n      data[j] = c;\n      continue;\n     }\n     if (c < 33 || c > 126 || c === 91 || c === 93 || c === 40 || c === 41 || c === 123 || c === 125 || c === 60 || c === 62 || c === 47 || c === 37 || c === 35) {\n      data[j] = 95;\n      continue;\n     }\n     data[j] = c;\n    }\n    names.push(bytesToString(data));\n   }\n   return names;\n  },\n  parseStringIndex: function CFFParser_parseStringIndex(index) {\n   var strings = new CFFStrings();\n   for (var i = 0, ii = index.count; i < ii; ++i) {\n    var data = index.get(i);\n    strings.add(bytesToString(data));\n   }\n   return strings;\n  },\n  createDict: function CFFParser_createDict(Type, dict, strings) {\n   var cffDict = new Type(strings);\n   for (var i = 0, ii = dict.length; i < ii; ++i) {\n    var pair = dict[i];\n    var key = pair[0];\n    var value = pair[1];\n    cffDict.setByKey(key, value);\n   }\n   return cffDict;\n  },\n  parseCharString: function CFFParser_parseCharString(state, data, localSubrIndex, globalSubrIndex) {\n   if (!data || state.callDepth > MAX_SUBR_NESTING) {\n    return false;\n   }\n   var stackSize = state.stackSize;\n   var stack = state.stack;\n   var length = data.length;\n   for (var j = 0; j < length;) {\n    var value = data[j++];\n    var validationCommand = null;\n    if (value === 12) {\n     var q = data[j++];\n     if (q === 0) {\n      data[j - 2] = 139;\n      data[j - 1] = 22;\n      stackSize = 0;\n     } else {\n      validationCommand = CharstringValidationData12[q];\n     }\n    } else if (value === 28) {\n     stack[stackSize] = (data[j] << 24 | data[j + 1] << 16) >> 16;\n     j += 2;\n     stackSize++;\n    } else if (value === 14) {\n     if (stackSize >= 4) {\n      stackSize -= 4;\n      if (this.seacAnalysisEnabled) {\n       state.seac = stack.slice(stackSize, stackSize + 4);\n       return false;\n      }\n     }\n     validationCommand = CharstringValidationData[value];\n    } else if (value >= 32 && value <= 246) {\n     stack[stackSize] = value - 139;\n     stackSize++;\n    } else if (value >= 247 && value <= 254) {\n     stack[stackSize] = value < 251 ? (value - 247 << 8) + data[j] + 108 : -(value - 251 << 8) - data[j] - 108;\n     j++;\n     stackSize++;\n    } else if (value === 255) {\n     stack[stackSize] = (data[j] << 24 | data[j + 1] << 16 | data[j + 2] << 8 | data[j + 3]) / 65536;\n     j += 4;\n     stackSize++;\n    } else if (value === 19 || value === 20) {\n     state.hints += stackSize >> 1;\n     j += state.hints + 7 >> 3;\n     stackSize %= 2;\n     validationCommand = CharstringValidationData[value];\n    } else if (value === 10 || value === 29) {\n     var subrsIndex;\n     if (value === 10) {\n      subrsIndex = localSubrIndex;\n     } else {\n      subrsIndex = globalSubrIndex;\n     }\n     if (!subrsIndex) {\n      validationCommand = CharstringValidationData[value];\n      warn('Missing subrsIndex for ' + validationCommand.id);\n      return false;\n     }\n     var bias = 32768;\n     if (subrsIndex.count < 1240) {\n      bias = 107;\n     } else if (subrsIndex.count < 33900) {\n      bias = 1131;\n     }\n     var subrNumber = stack[--stackSize] + bias;\n     if (subrNumber < 0 || subrNumber >= subrsIndex.count || isNaN(subrNumber)) {\n      validationCommand = CharstringValidationData[value];\n      warn('Out of bounds subrIndex for ' + validationCommand.id);\n      return false;\n     }\n     state.stackSize = stackSize;\n     state.callDepth++;\n     var valid = this.parseCharString(state, subrsIndex.get(subrNumber), localSubrIndex, globalSubrIndex);\n     if (!valid) {\n      return false;\n     }\n     state.callDepth--;\n     stackSize = state.stackSize;\n     continue;\n    } else if (value === 11) {\n     state.stackSize = stackSize;\n     return true;\n    } else {\n     validationCommand = CharstringValidationData[value];\n    }\n    if (validationCommand) {\n     if (validationCommand.stem) {\n      state.hints += stackSize >> 1;\n     }\n     if ('min' in validationCommand) {\n      if (!state.undefStack && stackSize < validationCommand.min) {\n       warn('Not enough parameters for ' + validationCommand.id + '; actual: ' + stackSize + ', expected: ' + validationCommand.min);\n       return false;\n      }\n     }\n     if (state.firstStackClearing && validationCommand.stackClearing) {\n      state.firstStackClearing = false;\n      stackSize -= validationCommand.min;\n      if (stackSize >= 2 && validationCommand.stem) {\n       stackSize %= 2;\n      } else if (stackSize > 1) {\n       warn('Found too many parameters for stack-clearing command');\n      }\n      if (stackSize > 0 && stack[stackSize - 1] >= 0) {\n       state.width = stack[stackSize - 1];\n      }\n     }\n     if ('stackDelta' in validationCommand) {\n      if ('stackFn' in validationCommand) {\n       validationCommand.stackFn(stack, stackSize);\n      }\n      stackSize += validationCommand.stackDelta;\n     } else if (validationCommand.stackClearing) {\n      stackSize = 0;\n     } else if (validationCommand.resetStack) {\n      stackSize = 0;\n      state.undefStack = false;\n     } else if (validationCommand.undefStack) {\n      stackSize = 0;\n      state.undefStack = true;\n      state.firstStackClearing = false;\n     }\n    }\n   }\n   state.stackSize = stackSize;\n   return true;\n  },\n  parseCharStrings: function CFFParser_parseCharStrings(charStrings, localSubrIndex, globalSubrIndex, fdSelect, fdArray) {\n   var seacs = [];\n   var widths = [];\n   var count = charStrings.count;\n   for (var i = 0; i < count; i++) {\n    var charstring = charStrings.get(i);\n    var state = {\n     callDepth: 0,\n     stackSize: 0,\n     stack: [],\n     undefStack: true,\n     hints: 0,\n     firstStackClearing: true,\n     seac: null,\n     width: null\n    };\n    var valid = true;\n    var localSubrToUse = null;\n    if (fdSelect && fdArray.length) {\n     var fdIndex = fdSelect.getFDIndex(i);\n     if (fdIndex === -1) {\n      warn('Glyph index is not in fd select.');\n      valid = false;\n     }\n     if (fdIndex >= fdArray.length) {\n      warn('Invalid fd index for glyph index.');\n      valid = false;\n     }\n     if (valid) {\n      localSubrToUse = fdArray[fdIndex].privateDict.subrsIndex;\n     }\n    } else if (localSubrIndex) {\n     localSubrToUse = localSubrIndex;\n    }\n    if (valid) {\n     valid = this.parseCharString(state, charstring, localSubrToUse, globalSubrIndex);\n    }\n    if (state.width !== null) {\n     widths[i] = state.width;\n    }\n    if (state.seac !== null) {\n     seacs[i] = state.seac;\n    }\n    if (!valid) {\n     charStrings.set(i, new Uint8Array([14]));\n    }\n   }\n   return {\n    charStrings: charStrings,\n    seacs: seacs,\n    widths: widths\n   };\n  },\n  emptyPrivateDictionary: function CFFParser_emptyPrivateDictionary(parentDict) {\n   var privateDict = this.createDict(CFFPrivateDict, [], parentDict.strings);\n   parentDict.setByKey(18, [\n    0,\n    0\n   ]);\n   parentDict.privateDict = privateDict;\n  },\n  parsePrivateDict: function CFFParser_parsePrivateDict(parentDict) {\n   if (!parentDict.hasName('Private')) {\n    this.emptyPrivateDictionary(parentDict);\n    return;\n   }\n   var privateOffset = parentDict.getByName('Private');\n   if (!isArray(privateOffset) || privateOffset.length !== 2) {\n    parentDict.removeByName('Private');\n    return;\n   }\n   var size = privateOffset[0];\n   var offset = privateOffset[1];\n   if (size === 0 || offset >= this.bytes.length) {\n    this.emptyPrivateDictionary(parentDict);\n    return;\n   }\n   var privateDictEnd = offset + size;\n   var dictData = this.bytes.subarray(offset, privateDictEnd);\n   var dict = this.parseDict(dictData);\n   var privateDict = this.createDict(CFFPrivateDict, dict, parentDict.strings);\n   parentDict.privateDict = privateDict;\n   if (!privateDict.getByName('Subrs')) {\n    return;\n   }\n   var subrsOffset = privateDict.getByName('Subrs');\n   var relativeOffset = offset + subrsOffset;\n   if (subrsOffset === 0 || relativeOffset >= this.bytes.length) {\n    this.emptyPrivateDictionary(parentDict);\n    return;\n   }\n   var subrsIndex = this.parseIndex(relativeOffset);\n   privateDict.subrsIndex = subrsIndex.obj;\n  },\n  parseCharsets: function CFFParser_parseCharsets(pos, length, strings, cid) {\n   if (pos === 0) {\n    return new CFFCharset(true, CFFCharsetPredefinedTypes.ISO_ADOBE, ISOAdobeCharset);\n   } else if (pos === 1) {\n    return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT, ExpertCharset);\n   } else if (pos === 2) {\n    return new CFFCharset(true, CFFCharsetPredefinedTypes.EXPERT_SUBSET, ExpertSubsetCharset);\n   }\n   var bytes = this.bytes;\n   var start = pos;\n   var format = bytes[pos++];\n   var charset = ['.notdef'];\n   var id, count, i;\n   length -= 1;\n   switch (format) {\n   case 0:\n    for (i = 0; i < length; i++) {\n     id = bytes[pos++] << 8 | bytes[pos++];\n     charset.push(cid ? id : strings.get(id));\n    }\n    break;\n   case 1:\n    while (charset.length <= length) {\n     id = bytes[pos++] << 8 | bytes[pos++];\n     count = bytes[pos++];\n     for (i = 0; i <= count; i++) {\n      charset.push(cid ? id++ : strings.get(id++));\n     }\n    }\n    break;\n   case 2:\n    while (charset.length <= length) {\n     id = bytes[pos++] << 8 | bytes[pos++];\n     count = bytes[pos++] << 8 | bytes[pos++];\n     for (i = 0; i <= count; i++) {\n      charset.push(cid ? id++ : strings.get(id++));\n     }\n    }\n    break;\n   default:\n    error('Unknown charset format');\n   }\n   var end = pos;\n   var raw = bytes.subarray(start, end);\n   return new CFFCharset(false, format, charset, raw);\n  },\n  parseEncoding: function CFFParser_parseEncoding(pos, properties, strings, charset) {\n   var encoding = Object.create(null);\n   var bytes = this.bytes;\n   var predefined = false;\n   var format, i, ii;\n   var raw = null;\n   function readSupplement() {\n    var supplementsCount = bytes[pos++];\n    for (i = 0; i < supplementsCount; i++) {\n     var code = bytes[pos++];\n     var sid = (bytes[pos++] << 8) + (bytes[pos++] & 0xff);\n     encoding[code] = charset.indexOf(strings.get(sid));\n    }\n   }\n   if (pos === 0 || pos === 1) {\n    predefined = true;\n    format = pos;\n    var baseEncoding = pos ? ExpertEncoding : StandardEncoding;\n    for (i = 0, ii = charset.length; i < ii; i++) {\n     var index = baseEncoding.indexOf(charset[i]);\n     if (index !== -1) {\n      encoding[index] = i;\n     }\n    }\n   } else {\n    var dataStart = pos;\n    format = bytes[pos++];\n    switch (format & 0x7f) {\n    case 0:\n     var glyphsCount = bytes[pos++];\n     for (i = 1; i <= glyphsCount; i++) {\n      encoding[bytes[pos++]] = i;\n     }\n     break;\n    case 1:\n     var rangesCount = bytes[pos++];\n     var gid = 1;\n     for (i = 0; i < rangesCount; i++) {\n      var start = bytes[pos++];\n      var left = bytes[pos++];\n      for (var j = start; j <= start + left; j++) {\n       encoding[j] = gid++;\n      }\n     }\n     break;\n    default:\n     error('Unknown encoding format: ' + format + ' in CFF');\n     break;\n    }\n    var dataEnd = pos;\n    if (format & 0x80) {\n     bytes[dataStart] &= 0x7f;\n     readSupplement();\n    }\n    raw = bytes.subarray(dataStart, dataEnd);\n   }\n   format = format & 0x7f;\n   return new CFFEncoding(predefined, format, encoding, raw);\n  },\n  parseFDSelect: function CFFParser_parseFDSelect(pos, length) {\n   var start = pos;\n   var bytes = this.bytes;\n   var format = bytes[pos++];\n   var fdSelect = [], rawBytes;\n   var i, invalidFirstGID = false;\n   switch (format) {\n   case 0:\n    for (i = 0; i < length; ++i) {\n     var id = bytes[pos++];\n     fdSelect.push(id);\n    }\n    rawBytes = bytes.subarray(start, pos);\n    break;\n   case 3:\n    var rangesCount = bytes[pos++] << 8 | bytes[pos++];\n    for (i = 0; i < rangesCount; ++i) {\n     var first = bytes[pos++] << 8 | bytes[pos++];\n     if (i === 0 && first !== 0) {\n      warn('parseFDSelect: The first range must have a first GID of 0' + ' -- trying to recover.');\n      invalidFirstGID = true;\n      first = 0;\n     }\n     var fdIndex = bytes[pos++];\n     var next = bytes[pos] << 8 | bytes[pos + 1];\n     for (var j = first; j < next; ++j) {\n      fdSelect.push(fdIndex);\n     }\n    }\n    pos += 2;\n    rawBytes = bytes.subarray(start, pos);\n    if (invalidFirstGID) {\n     rawBytes[3] = rawBytes[4] = 0;\n    }\n    break;\n   default:\n    error('parseFDSelect: Unknown format \"' + format + '\".');\n    break;\n   }\n   assert(fdSelect.length === length, 'parseFDSelect: Invalid font data.');\n   return new CFFFDSelect(fdSelect, rawBytes);\n  }\n };\n return CFFParser;\n}();\nvar CFF = function CFFClosure() {\n function CFF() {\n  this.header = null;\n  this.names = [];\n  this.topDict = null;\n  this.strings = new CFFStrings();\n  this.globalSubrIndex = null;\n  this.encoding = null;\n  this.charset = null;\n  this.charStrings = null;\n  this.fdArray = [];\n  this.fdSelect = null;\n  this.isCIDFont = false;\n }\n return CFF;\n}();\nvar CFFHeader = function CFFHeaderClosure() {\n function CFFHeader(major, minor, hdrSize, offSize) {\n  this.major = major;\n  this.minor = minor;\n  this.hdrSize = hdrSize;\n  this.offSize = offSize;\n }\n return CFFHeader;\n}();\nvar CFFStrings = function CFFStringsClosure() {\n function CFFStrings() {\n  this.strings = [];\n }\n CFFStrings.prototype = {\n  get: function CFFStrings_get(index) {\n   if (index >= 0 && index <= 390) {\n    return CFFStandardStrings[index];\n   }\n   if (index - 391 <= this.strings.length) {\n    return this.strings[index - 391];\n   }\n   return CFFStandardStrings[0];\n  },\n  add: function CFFStrings_add(value) {\n   this.strings.push(value);\n  },\n  get count() {\n   return this.strings.length;\n  }\n };\n return CFFStrings;\n}();\nvar CFFIndex = function CFFIndexClosure() {\n function CFFIndex() {\n  this.objects = [];\n  this.length = 0;\n }\n CFFIndex.prototype = {\n  add: function CFFIndex_add(data) {\n   this.length += data.length;\n   this.objects.push(data);\n  },\n  set: function CFFIndex_set(index, data) {\n   this.length += data.length - this.objects[index].length;\n   this.objects[index] = data;\n  },\n  get: function CFFIndex_get(index) {\n   return this.objects[index];\n  },\n  get count() {\n   return this.objects.length;\n  }\n };\n return CFFIndex;\n}();\nvar CFFDict = function CFFDictClosure() {\n function CFFDict(tables, strings) {\n  this.keyToNameMap = tables.keyToNameMap;\n  this.nameToKeyMap = tables.nameToKeyMap;\n  this.defaults = tables.defaults;\n  this.types = tables.types;\n  this.opcodes = tables.opcodes;\n  this.order = tables.order;\n  this.strings = strings;\n  this.values = Object.create(null);\n }\n CFFDict.prototype = {\n  setByKey: function CFFDict_setByKey(key, value) {\n   if (!(key in this.keyToNameMap)) {\n    return false;\n   }\n   var valueLength = value.length;\n   if (valueLength === 0) {\n    return true;\n   }\n   for (var i = 0; i < valueLength; i++) {\n    if (isNaN(value[i])) {\n     warn('Invalid CFFDict value: \"' + value + '\" for key \"' + key + '\".');\n     return true;\n    }\n   }\n   var type = this.types[key];\n   if (type === 'num' || type === 'sid' || type === 'offset') {\n    value = value[0];\n   }\n   this.values[key] = value;\n   return true;\n  },\n  setByName: function CFFDict_setByName(name, value) {\n   if (!(name in this.nameToKeyMap)) {\n    error('Invalid dictionary name \"' + name + '\"');\n   }\n   this.values[this.nameToKeyMap[name]] = value;\n  },\n  hasName: function CFFDict_hasName(name) {\n   return this.nameToKeyMap[name] in this.values;\n  },\n  getByName: function CFFDict_getByName(name) {\n   if (!(name in this.nameToKeyMap)) {\n    error('Invalid dictionary name \"' + name + '\"');\n   }\n   var key = this.nameToKeyMap[name];\n   if (!(key in this.values)) {\n    return this.defaults[key];\n   }\n   return this.values[key];\n  },\n  removeByName: function CFFDict_removeByName(name) {\n   delete this.values[this.nameToKeyMap[name]];\n  }\n };\n CFFDict.createTables = function CFFDict_createTables(layout) {\n  var tables = {\n   keyToNameMap: {},\n   nameToKeyMap: {},\n   defaults: {},\n   types: {},\n   opcodes: {},\n   order: []\n  };\n  for (var i = 0, ii = layout.length; i < ii; ++i) {\n   var entry = layout[i];\n   var key = isArray(entry[0]) ? (entry[0][0] << 8) + entry[0][1] : entry[0];\n   tables.keyToNameMap[key] = entry[1];\n   tables.nameToKeyMap[entry[1]] = key;\n   tables.types[key] = entry[2];\n   tables.defaults[key] = entry[3];\n   tables.opcodes[key] = isArray(entry[0]) ? entry[0] : [entry[0]];\n   tables.order.push(key);\n  }\n  return tables;\n };\n return CFFDict;\n}();\nvar CFFTopDict = function CFFTopDictClosure() {\n var layout = [\n  [\n   [\n    12,\n    30\n   ],\n   'ROS',\n   [\n    'sid',\n    'sid',\n    'num'\n   ],\n   null\n  ],\n  [\n   [\n    12,\n    20\n   ],\n   'SyntheticBase',\n   'num',\n   null\n  ],\n  [\n   0,\n   'version',\n   'sid',\n   null\n  ],\n  [\n   1,\n   'Notice',\n   'sid',\n   null\n  ],\n  [\n   [\n    12,\n    0\n   ],\n   'Copyright',\n   'sid',\n   null\n  ],\n  [\n   2,\n   'FullName',\n   'sid',\n   null\n  ],\n  [\n   3,\n   'FamilyName',\n   'sid',\n   null\n  ],\n  [\n   4,\n   'Weight',\n   'sid',\n   null\n  ],\n  [\n   [\n    12,\n    1\n   ],\n   'isFixedPitch',\n   'num',\n   0\n  ],\n  [\n   [\n    12,\n    2\n   ],\n   'ItalicAngle',\n   'num',\n   0\n  ],\n  [\n   [\n    12,\n    3\n   ],\n   'UnderlinePosition',\n   'num',\n   -100\n  ],\n  [\n   [\n    12,\n    4\n   ],\n   'UnderlineThickness',\n   'num',\n   50\n  ],\n  [\n   [\n    12,\n    5\n   ],\n   'PaintType',\n   'num',\n   0\n  ],\n  [\n   [\n    12,\n    6\n   ],\n   'CharstringType',\n   'num',\n   2\n  ],\n  [\n   [\n    12,\n    7\n   ],\n   'FontMatrix',\n   [\n    'num',\n    'num',\n    'num',\n    'num',\n    'num',\n    'num'\n   ],\n   [\n    0.001,\n    0,\n    0,\n    0.001,\n    0,\n    0\n   ]\n  ],\n  [\n   13,\n   'UniqueID',\n   'num',\n   null\n  ],\n  [\n   5,\n   'FontBBox',\n   [\n    'num',\n    'num',\n    'num',\n    'num'\n   ],\n   [\n    0,\n    0,\n    0,\n    0\n   ]\n  ],\n  [\n   [\n    12,\n    8\n   ],\n   'StrokeWidth',\n   'num',\n   0\n  ],\n  [\n   14,\n   'XUID',\n   'array',\n   null\n  ],\n  [\n   15,\n   'charset',\n   'offset',\n   0\n  ],\n  [\n   16,\n   'Encoding',\n   'offset',\n   0\n  ],\n  [\n   17,\n   'CharStrings',\n   'offset',\n   0\n  ],\n  [\n   18,\n   'Private',\n   [\n    'offset',\n    'offset'\n   ],\n   null\n  ],\n  [\n   [\n    12,\n    21\n   ],\n   'PostScript',\n   'sid',\n   null\n  ],\n  [\n   [\n    12,\n    22\n   ],\n   'BaseFontName',\n   'sid',\n   null\n  ],\n  [\n   [\n    12,\n    23\n   ],\n   'BaseFontBlend',\n   'delta',\n   null\n  ],\n  [\n   [\n    12,\n    31\n   ],\n   'CIDFontVersion',\n   'num',\n   0\n  ],\n  [\n   [\n    12,\n    32\n   ],\n   'CIDFontRevision',\n   'num',\n   0\n  ],\n  [\n   [\n    12,\n    33\n   ],\n   'CIDFontType',\n   'num',\n   0\n  ],\n  [\n   [\n    12,\n    34\n   ],\n   'CIDCount',\n   'num',\n   8720\n  ],\n  [\n   [\n    12,\n    35\n   ],\n   'UIDBase',\n   'num',\n   null\n  ],\n  [\n   [\n    12,\n    37\n   ],\n   'FDSelect',\n   'offset',\n   null\n  ],\n  [\n   [\n    12,\n    36\n   ],\n   'FDArray',\n   'offset',\n   null\n  ],\n  [\n   [\n    12,\n    38\n   ],\n   'FontName',\n   'sid',\n   null\n  ]\n ];\n var tables = null;\n function CFFTopDict(strings) {\n  if (tables === null) {\n   tables = CFFDict.createTables(layout);\n  }\n  CFFDict.call(this, tables, strings);\n  this.privateDict = null;\n }\n CFFTopDict.prototype = Object.create(CFFDict.prototype);\n return CFFTopDict;\n}();\nvar CFFPrivateDict = function CFFPrivateDictClosure() {\n var layout = [\n  [\n   6,\n   'BlueValues',\n   'delta',\n   null\n  ],\n  [\n   7,\n   'OtherBlues',\n   'delta',\n   null\n  ],\n  [\n   8,\n   'FamilyBlues',\n   'delta',\n   null\n  ],\n  [\n   9,\n   'FamilyOtherBlues',\n   'delta',\n   null\n  ],\n  [\n   [\n    12,\n    9\n   ],\n   'BlueScale',\n   'num',\n   0.039625\n  ],\n  [\n   [\n    12,\n    10\n   ],\n   'BlueShift',\n   'num',\n   7\n  ],\n  [\n   [\n    12,\n    11\n   ],\n   'BlueFuzz',\n   'num',\n   1\n  ],\n  [\n   10,\n   'StdHW',\n   'num',\n   null\n  ],\n  [\n   11,\n   'StdVW',\n   'num',\n   null\n  ],\n  [\n   [\n    12,\n    12\n   ],\n   'StemSnapH',\n   'delta',\n   null\n  ],\n  [\n   [\n    12,\n    13\n   ],\n   'StemSnapV',\n   'delta',\n   null\n  ],\n  [\n   [\n    12,\n    14\n   ],\n   'ForceBold',\n   'num',\n   0\n  ],\n  [\n   [\n    12,\n    17\n   ],\n   'LanguageGroup',\n   'num',\n   0\n  ],\n  [\n   [\n    12,\n    18\n   ],\n   'ExpansionFactor',\n   'num',\n   0.06\n  ],\n  [\n   [\n    12,\n    19\n   ],\n   'initialRandomSeed',\n   'num',\n   0\n  ],\n  [\n   20,\n   'defaultWidthX',\n   'num',\n   0\n  ],\n  [\n   21,\n   'nominalWidthX',\n   'num',\n   0\n  ],\n  [\n   19,\n   'Subrs',\n   'offset',\n   null\n  ]\n ];\n var tables = null;\n function CFFPrivateDict(strings) {\n  if (tables === null) {\n   tables = CFFDict.createTables(layout);\n  }\n  CFFDict.call(this, tables, strings);\n  this.subrsIndex = null;\n }\n CFFPrivateDict.prototype = Object.create(CFFDict.prototype);\n return CFFPrivateDict;\n}();\nvar CFFCharsetPredefinedTypes = {\n ISO_ADOBE: 0,\n EXPERT: 1,\n EXPERT_SUBSET: 2\n};\nvar CFFCharset = function CFFCharsetClosure() {\n function CFFCharset(predefined, format, charset, raw) {\n  this.predefined = predefined;\n  this.format = format;\n  this.charset = charset;\n  this.raw = raw;\n }\n return CFFCharset;\n}();\nvar CFFEncoding = function CFFEncodingClosure() {\n function CFFEncoding(predefined, format, encoding, raw) {\n  this.predefined = predefined;\n  this.format = format;\n  this.encoding = encoding;\n  this.raw = raw;\n }\n return CFFEncoding;\n}();\nvar CFFFDSelect = function CFFFDSelectClosure() {\n function CFFFDSelect(fdSelect, raw) {\n  this.fdSelect = fdSelect;\n  this.raw = raw;\n }\n CFFFDSelect.prototype = {\n  getFDIndex: function CFFFDSelect_get(glyphIndex) {\n   if (glyphIndex < 0 || glyphIndex >= this.fdSelect.length) {\n    return -1;\n   }\n   return this.fdSelect[glyphIndex];\n  }\n };\n return CFFFDSelect;\n}();\nvar CFFOffsetTracker = function CFFOffsetTrackerClosure() {\n function CFFOffsetTracker() {\n  this.offsets = Object.create(null);\n }\n CFFOffsetTracker.prototype = {\n  isTracking: function CFFOffsetTracker_isTracking(key) {\n   return key in this.offsets;\n  },\n  track: function CFFOffsetTracker_track(key, location) {\n   if (key in this.offsets) {\n    error('Already tracking location of ' + key);\n   }\n   this.offsets[key] = location;\n  },\n  offset: function CFFOffsetTracker_offset(value) {\n   for (var key in this.offsets) {\n    this.offsets[key] += value;\n   }\n  },\n  setEntryLocation: function CFFOffsetTracker_setEntryLocation(key, values, output) {\n   if (!(key in this.offsets)) {\n    error('Not tracking location of ' + key);\n   }\n   var data = output.data;\n   var dataOffset = this.offsets[key];\n   var size = 5;\n   for (var i = 0, ii = values.length; i < ii; ++i) {\n    var offset0 = i * size + dataOffset;\n    var offset1 = offset0 + 1;\n    var offset2 = offset0 + 2;\n    var offset3 = offset0 + 3;\n    var offset4 = offset0 + 4;\n    if (data[offset0] !== 0x1d || data[offset1] !== 0 || data[offset2] !== 0 || data[offset3] !== 0 || data[offset4] !== 0) {\n     error('writing to an offset that is not empty');\n    }\n    var value = values[i];\n    data[offset0] = 0x1d;\n    data[offset1] = value >> 24 & 0xFF;\n    data[offset2] = value >> 16 & 0xFF;\n    data[offset3] = value >> 8 & 0xFF;\n    data[offset4] = value & 0xFF;\n   }\n  }\n };\n return CFFOffsetTracker;\n}();\nvar CFFCompiler = function CFFCompilerClosure() {\n function CFFCompiler(cff) {\n  this.cff = cff;\n }\n CFFCompiler.prototype = {\n  compile: function CFFCompiler_compile() {\n   var cff = this.cff;\n   var output = {\n    data: [],\n    length: 0,\n    add: function CFFCompiler_add(data) {\n     this.data = this.data.concat(data);\n     this.length = this.data.length;\n    }\n   };\n   var header = this.compileHeader(cff.header);\n   output.add(header);\n   var nameIndex = this.compileNameIndex(cff.names);\n   output.add(nameIndex);\n   if (cff.isCIDFont) {\n    if (cff.topDict.hasName('FontMatrix')) {\n     var base = cff.topDict.getByName('FontMatrix');\n     cff.topDict.removeByName('FontMatrix');\n     for (var i = 0, ii = cff.fdArray.length; i < ii; i++) {\n      var subDict = cff.fdArray[i];\n      var matrix = base.slice(0);\n      if (subDict.hasName('FontMatrix')) {\n       matrix = Util.transform(matrix, subDict.getByName('FontMatrix'));\n      }\n      subDict.setByName('FontMatrix', matrix);\n     }\n    }\n   }\n   var compiled = this.compileTopDicts([cff.topDict], output.length, cff.isCIDFont);\n   output.add(compiled.output);\n   var topDictTracker = compiled.trackers[0];\n   var stringIndex = this.compileStringIndex(cff.strings.strings);\n   output.add(stringIndex);\n   var globalSubrIndex = this.compileIndex(cff.globalSubrIndex);\n   output.add(globalSubrIndex);\n   if (cff.encoding && cff.topDict.hasName('Encoding')) {\n    if (cff.encoding.predefined) {\n     topDictTracker.setEntryLocation('Encoding', [cff.encoding.format], output);\n    } else {\n     var encoding = this.compileEncoding(cff.encoding);\n     topDictTracker.setEntryLocation('Encoding', [output.length], output);\n     output.add(encoding);\n    }\n   }\n   if (cff.charset && cff.topDict.hasName('charset')) {\n    if (cff.charset.predefined) {\n     topDictTracker.setEntryLocation('charset', [cff.charset.format], output);\n    } else {\n     var charset = this.compileCharset(cff.charset);\n     topDictTracker.setEntryLocation('charset', [output.length], output);\n     output.add(charset);\n    }\n   }\n   var charStrings = this.compileCharStrings(cff.charStrings);\n   topDictTracker.setEntryLocation('CharStrings', [output.length], output);\n   output.add(charStrings);\n   if (cff.isCIDFont) {\n    topDictTracker.setEntryLocation('FDSelect', [output.length], output);\n    var fdSelect = this.compileFDSelect(cff.fdSelect.raw);\n    output.add(fdSelect);\n    compiled = this.compileTopDicts(cff.fdArray, output.length, true);\n    topDictTracker.setEntryLocation('FDArray', [output.length], output);\n    output.add(compiled.output);\n    var fontDictTrackers = compiled.trackers;\n    this.compilePrivateDicts(cff.fdArray, fontDictTrackers, output);\n   }\n   this.compilePrivateDicts([cff.topDict], [topDictTracker], output);\n   output.add([0]);\n   return output.data;\n  },\n  encodeNumber: function CFFCompiler_encodeNumber(value) {\n   if (parseFloat(value) === parseInt(value, 10) && !isNaN(value)) {\n    return this.encodeInteger(value);\n   }\n   return this.encodeFloat(value);\n  },\n  encodeFloat: function CFFCompiler_encodeFloat(num) {\n   var value = num.toString();\n   var m = /\\.(\\d*?)(?:9{5,20}|0{5,20})\\d{0,2}(?:e(.+)|$)/.exec(value);\n   if (m) {\n    var epsilon = parseFloat('1e' + ((m[2] ? +m[2] : 0) + m[1].length));\n    value = (Math.round(num * epsilon) / epsilon).toString();\n   }\n   var nibbles = '';\n   var i, ii;\n   for (i = 0, ii = value.length; i < ii; ++i) {\n    var a = value[i];\n    if (a === 'e') {\n     nibbles += value[++i] === '-' ? 'c' : 'b';\n    } else if (a === '.') {\n     nibbles += 'a';\n    } else if (a === '-') {\n     nibbles += 'e';\n    } else {\n     nibbles += a;\n    }\n   }\n   nibbles += nibbles.length & 1 ? 'f' : 'ff';\n   var out = [30];\n   for (i = 0, ii = nibbles.length; i < ii; i += 2) {\n    out.push(parseInt(nibbles.substr(i, 2), 16));\n   }\n   return out;\n  },\n  encodeInteger: function CFFCompiler_encodeInteger(value) {\n   var code;\n   if (value >= -107 && value <= 107) {\n    code = [value + 139];\n   } else if (value >= 108 && value <= 1131) {\n    value = value - 108;\n    code = [\n     (value >> 8) + 247,\n     value & 0xFF\n    ];\n   } else if (value >= -1131 && value <= -108) {\n    value = -value - 108;\n    code = [\n     (value >> 8) + 251,\n     value & 0xFF\n    ];\n   } else if (value >= -32768 && value <= 32767) {\n    code = [\n     0x1c,\n     value >> 8 & 0xFF,\n     value & 0xFF\n    ];\n   } else {\n    code = [\n     0x1d,\n     value >> 24 & 0xFF,\n     value >> 16 & 0xFF,\n     value >> 8 & 0xFF,\n     value & 0xFF\n    ];\n   }\n   return code;\n  },\n  compileHeader: function CFFCompiler_compileHeader(header) {\n   return [\n    header.major,\n    header.minor,\n    header.hdrSize,\n    header.offSize\n   ];\n  },\n  compileNameIndex: function CFFCompiler_compileNameIndex(names) {\n   var nameIndex = new CFFIndex();\n   for (var i = 0, ii = names.length; i < ii; ++i) {\n    nameIndex.add(stringToBytes(names[i]));\n   }\n   return this.compileIndex(nameIndex);\n  },\n  compileTopDicts: function CFFCompiler_compileTopDicts(dicts, length, removeCidKeys) {\n   var fontDictTrackers = [];\n   var fdArrayIndex = new CFFIndex();\n   for (var i = 0, ii = dicts.length; i < ii; ++i) {\n    var fontDict = dicts[i];\n    if (removeCidKeys) {\n     fontDict.removeByName('CIDFontVersion');\n     fontDict.removeByName('CIDFontRevision');\n     fontDict.removeByName('CIDFontType');\n     fontDict.removeByName('CIDCount');\n     fontDict.removeByName('UIDBase');\n    }\n    var fontDictTracker = new CFFOffsetTracker();\n    var fontDictData = this.compileDict(fontDict, fontDictTracker);\n    fontDictTrackers.push(fontDictTracker);\n    fdArrayIndex.add(fontDictData);\n    fontDictTracker.offset(length);\n   }\n   fdArrayIndex = this.compileIndex(fdArrayIndex, fontDictTrackers);\n   return {\n    trackers: fontDictTrackers,\n    output: fdArrayIndex\n   };\n  },\n  compilePrivateDicts: function CFFCompiler_compilePrivateDicts(dicts, trackers, output) {\n   for (var i = 0, ii = dicts.length; i < ii; ++i) {\n    var fontDict = dicts[i];\n    assert(fontDict.privateDict && fontDict.hasName('Private'), 'There must be an private dictionary.');\n    var privateDict = fontDict.privateDict;\n    var privateDictTracker = new CFFOffsetTracker();\n    var privateDictData = this.compileDict(privateDict, privateDictTracker);\n    var outputLength = output.length;\n    privateDictTracker.offset(outputLength);\n    if (!privateDictData.length) {\n     outputLength = 0;\n    }\n    trackers[i].setEntryLocation('Private', [\n     privateDictData.length,\n     outputLength\n    ], output);\n    output.add(privateDictData);\n    if (privateDict.subrsIndex && privateDict.hasName('Subrs')) {\n     var subrs = this.compileIndex(privateDict.subrsIndex);\n     privateDictTracker.setEntryLocation('Subrs', [privateDictData.length], output);\n     output.add(subrs);\n    }\n   }\n  },\n  compileDict: function CFFCompiler_compileDict(dict, offsetTracker) {\n   var out = [];\n   var order = dict.order;\n   for (var i = 0; i < order.length; ++i) {\n    var key = order[i];\n    if (!(key in dict.values)) {\n     continue;\n    }\n    var values = dict.values[key];\n    var types = dict.types[key];\n    if (!isArray(types)) {\n     types = [types];\n    }\n    if (!isArray(values)) {\n     values = [values];\n    }\n    if (values.length === 0) {\n     continue;\n    }\n    for (var j = 0, jj = types.length; j < jj; ++j) {\n     var type = types[j];\n     var value = values[j];\n     switch (type) {\n     case 'num':\n     case 'sid':\n      out = out.concat(this.encodeNumber(value));\n      break;\n     case 'offset':\n      var name = dict.keyToNameMap[key];\n      if (!offsetTracker.isTracking(name)) {\n       offsetTracker.track(name, out.length);\n      }\n      out = out.concat([\n       0x1d,\n       0,\n       0,\n       0,\n       0\n      ]);\n      break;\n     case 'array':\n     case 'delta':\n      out = out.concat(this.encodeNumber(value));\n      for (var k = 1, kk = values.length; k < kk; ++k) {\n       out = out.concat(this.encodeNumber(values[k]));\n      }\n      break;\n     default:\n      error('Unknown data type of ' + type);\n      break;\n     }\n    }\n    out = out.concat(dict.opcodes[key]);\n   }\n   return out;\n  },\n  compileStringIndex: function CFFCompiler_compileStringIndex(strings) {\n   var stringIndex = new CFFIndex();\n   for (var i = 0, ii = strings.length; i < ii; ++i) {\n    stringIndex.add(stringToBytes(strings[i]));\n   }\n   return this.compileIndex(stringIndex);\n  },\n  compileGlobalSubrIndex: function CFFCompiler_compileGlobalSubrIndex() {\n   var globalSubrIndex = this.cff.globalSubrIndex;\n   this.out.writeByteArray(this.compileIndex(globalSubrIndex));\n  },\n  compileCharStrings: function CFFCompiler_compileCharStrings(charStrings) {\n   return this.compileIndex(charStrings);\n  },\n  compileCharset: function CFFCompiler_compileCharset(charset) {\n   return this.compileTypedArray(charset.raw);\n  },\n  compileEncoding: function CFFCompiler_compileEncoding(encoding) {\n   return this.compileTypedArray(encoding.raw);\n  },\n  compileFDSelect: function CFFCompiler_compileFDSelect(fdSelect) {\n   return this.compileTypedArray(fdSelect);\n  },\n  compileTypedArray: function CFFCompiler_compileTypedArray(data) {\n   var out = [];\n   for (var i = 0, ii = data.length; i < ii; ++i) {\n    out[i] = data[i];\n   }\n   return out;\n  },\n  compileIndex: function CFFCompiler_compileIndex(index, trackers) {\n   trackers = trackers || [];\n   var objects = index.objects;\n   var count = objects.length;\n   if (count === 0) {\n    return [\n     0,\n     0,\n     0\n    ];\n   }\n   var data = [\n    count >> 8 & 0xFF,\n    count & 0xff\n   ];\n   var lastOffset = 1, i;\n   for (i = 0; i < count; ++i) {\n    lastOffset += objects[i].length;\n   }\n   var offsetSize;\n   if (lastOffset < 0x100) {\n    offsetSize = 1;\n   } else if (lastOffset < 0x10000) {\n    offsetSize = 2;\n   } else if (lastOffset < 0x1000000) {\n    offsetSize = 3;\n   } else {\n    offsetSize = 4;\n   }\n   data.push(offsetSize);\n   var relativeOffset = 1;\n   for (i = 0; i < count + 1; i++) {\n    if (offsetSize === 1) {\n     data.push(relativeOffset & 0xFF);\n    } else if (offsetSize === 2) {\n     data.push(relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n    } else if (offsetSize === 3) {\n     data.push(relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n    } else {\n     data.push(relativeOffset >>> 24 & 0xFF, relativeOffset >> 16 & 0xFF, relativeOffset >> 8 & 0xFF, relativeOffset & 0xFF);\n    }\n    if (objects[i]) {\n     relativeOffset += objects[i].length;\n    }\n   }\n   for (i = 0; i < count; i++) {\n    if (trackers[i]) {\n     trackers[i].offset(data.length);\n    }\n    for (var j = 0, jj = objects[i].length; j < jj; j++) {\n     data.push(objects[i][j]);\n    }\n   }\n   return data;\n  }\n };\n return CFFCompiler;\n}();\nexports.CFFStandardStrings = CFFStandardStrings;\nexports.CFFParser = CFFParser;\nexports.CFF = CFF;\nexports.CFFHeader = CFFHeader;\nexports.CFFStrings = CFFStrings;\nexports.CFFIndex = CFFIndex;\nexports.CFFCharset = CFFCharset;\nexports.CFFTopDict = CFFTopDict;\nexports.CFFPrivateDict = CFFPrivateDict;\nexports.CFFCompiler = CFFCompiler;\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar MissingDataException = sharedUtil.MissingDataException;\nvar arrayByteLength = sharedUtil.arrayByteLength;\nvar arraysToBytes = sharedUtil.arraysToBytes;\nvar assert = sharedUtil.assert;\nvar createPromiseCapability = sharedUtil.createPromiseCapability;\nvar isInt = sharedUtil.isInt;\nvar isEmptyObj = sharedUtil.isEmptyObj;\nvar ChunkedStream = function ChunkedStreamClosure() {\n function ChunkedStream(length, chunkSize, manager) {\n  this.bytes = new Uint8Array(length);\n  this.start = 0;\n  this.pos = 0;\n  this.end = length;\n  this.chunkSize = chunkSize;\n  this.loadedChunks = [];\n  this.numChunksLoaded = 0;\n  this.numChunks = Math.ceil(length / chunkSize);\n  this.manager = manager;\n  this.progressiveDataLength = 0;\n  this.lastSuccessfulEnsureByteChunk = -1;\n }\n ChunkedStream.prototype = {\n  getMissingChunks: function ChunkedStream_getMissingChunks() {\n   var chunks = [];\n   for (var chunk = 0, n = this.numChunks; chunk < n; ++chunk) {\n    if (!this.loadedChunks[chunk]) {\n     chunks.push(chunk);\n    }\n   }\n   return chunks;\n  },\n  getBaseStreams: function ChunkedStream_getBaseStreams() {\n   return [this];\n  },\n  allChunksLoaded: function ChunkedStream_allChunksLoaded() {\n   return this.numChunksLoaded === this.numChunks;\n  },\n  onReceiveData: function ChunkedStream_onReceiveData(begin, chunk) {\n   var end = begin + chunk.byteLength;\n   assert(begin % this.chunkSize === 0, 'Bad begin offset: ' + begin);\n   var length = this.bytes.length;\n   assert(end % this.chunkSize === 0 || end === length, 'Bad end offset: ' + end);\n   this.bytes.set(new Uint8Array(chunk), begin);\n   var chunkSize = this.chunkSize;\n   var beginChunk = Math.floor(begin / chunkSize);\n   var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n   var curChunk;\n   for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n    if (!this.loadedChunks[curChunk]) {\n     this.loadedChunks[curChunk] = true;\n     ++this.numChunksLoaded;\n    }\n   }\n  },\n  onReceiveProgressiveData: function ChunkedStream_onReceiveProgressiveData(data) {\n   var position = this.progressiveDataLength;\n   var beginChunk = Math.floor(position / this.chunkSize);\n   this.bytes.set(new Uint8Array(data), position);\n   position += data.byteLength;\n   this.progressiveDataLength = position;\n   var endChunk = position >= this.end ? this.numChunks : Math.floor(position / this.chunkSize);\n   var curChunk;\n   for (curChunk = beginChunk; curChunk < endChunk; ++curChunk) {\n    if (!this.loadedChunks[curChunk]) {\n     this.loadedChunks[curChunk] = true;\n     ++this.numChunksLoaded;\n    }\n   }\n  },\n  ensureByte: function ChunkedStream_ensureByte(pos) {\n   var chunk = Math.floor(pos / this.chunkSize);\n   if (chunk === this.lastSuccessfulEnsureByteChunk) {\n    return;\n   }\n   if (!this.loadedChunks[chunk]) {\n    throw new MissingDataException(pos, pos + 1);\n   }\n   this.lastSuccessfulEnsureByteChunk = chunk;\n  },\n  ensureRange: function ChunkedStream_ensureRange(begin, end) {\n   if (begin >= end) {\n    return;\n   }\n   if (end <= this.progressiveDataLength) {\n    return;\n   }\n   var chunkSize = this.chunkSize;\n   var beginChunk = Math.floor(begin / chunkSize);\n   var endChunk = Math.floor((end - 1) / chunkSize) + 1;\n   for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n    if (!this.loadedChunks[chunk]) {\n     throw new MissingDataException(begin, end);\n    }\n   }\n  },\n  nextEmptyChunk: function ChunkedStream_nextEmptyChunk(beginChunk) {\n   var chunk, numChunks = this.numChunks;\n   for (var i = 0; i < numChunks; ++i) {\n    chunk = (beginChunk + i) % numChunks;\n    if (!this.loadedChunks[chunk]) {\n     return chunk;\n    }\n   }\n   return null;\n  },\n  hasChunk: function ChunkedStream_hasChunk(chunk) {\n   return !!this.loadedChunks[chunk];\n  },\n  get length() {\n   return this.end - this.start;\n  },\n  get isEmpty() {\n   return this.length === 0;\n  },\n  getByte: function ChunkedStream_getByte() {\n   var pos = this.pos;\n   if (pos >= this.end) {\n    return -1;\n   }\n   this.ensureByte(pos);\n   return this.bytes[this.pos++];\n  },\n  getUint16: function ChunkedStream_getUint16() {\n   var b0 = this.getByte();\n   var b1 = this.getByte();\n   if (b0 === -1 || b1 === -1) {\n    return -1;\n   }\n   return (b0 << 8) + b1;\n  },\n  getInt32: function ChunkedStream_getInt32() {\n   var b0 = this.getByte();\n   var b1 = this.getByte();\n   var b2 = this.getByte();\n   var b3 = this.getByte();\n   return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n  },\n  getBytes: function ChunkedStream_getBytes(length) {\n   var bytes = this.bytes;\n   var pos = this.pos;\n   var strEnd = this.end;\n   if (!length) {\n    this.ensureRange(pos, strEnd);\n    return bytes.subarray(pos, strEnd);\n   }\n   var end = pos + length;\n   if (end > strEnd) {\n    end = strEnd;\n   }\n   this.ensureRange(pos, end);\n   this.pos = end;\n   return bytes.subarray(pos, end);\n  },\n  peekByte: function ChunkedStream_peekByte() {\n   var peekedByte = this.getByte();\n   this.pos--;\n   return peekedByte;\n  },\n  peekBytes: function ChunkedStream_peekBytes(length) {\n   var bytes = this.getBytes(length);\n   this.pos -= bytes.length;\n   return bytes;\n  },\n  getByteRange: function ChunkedStream_getBytes(begin, end) {\n   this.ensureRange(begin, end);\n   return this.bytes.subarray(begin, end);\n  },\n  skip: function ChunkedStream_skip(n) {\n   if (!n) {\n    n = 1;\n   }\n   this.pos += n;\n  },\n  reset: function ChunkedStream_reset() {\n   this.pos = this.start;\n  },\n  moveStart: function ChunkedStream_moveStart() {\n   this.start = this.pos;\n  },\n  makeSubStream: function ChunkedStream_makeSubStream(start, length, dict) {\n   this.ensureRange(start, start + length);\n   function ChunkedStreamSubstream() {\n   }\n   ChunkedStreamSubstream.prototype = Object.create(this);\n   ChunkedStreamSubstream.prototype.getMissingChunks = function () {\n    var chunkSize = this.chunkSize;\n    var beginChunk = Math.floor(this.start / chunkSize);\n    var endChunk = Math.floor((this.end - 1) / chunkSize) + 1;\n    var missingChunks = [];\n    for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n     if (!this.loadedChunks[chunk]) {\n      missingChunks.push(chunk);\n     }\n    }\n    return missingChunks;\n   };\n   var subStream = new ChunkedStreamSubstream();\n   subStream.pos = subStream.start = start;\n   subStream.end = start + length || this.end;\n   subStream.dict = dict;\n   return subStream;\n  }\n };\n return ChunkedStream;\n}();\nvar ChunkedStreamManager = function ChunkedStreamManagerClosure() {\n function ChunkedStreamManager(pdfNetworkStream, args) {\n  var chunkSize = args.rangeChunkSize;\n  var length = args.length;\n  this.stream = new ChunkedStream(length, chunkSize, this);\n  this.length = length;\n  this.chunkSize = chunkSize;\n  this.pdfNetworkStream = pdfNetworkStream;\n  this.url = args.url;\n  this.disableAutoFetch = args.disableAutoFetch;\n  this.msgHandler = args.msgHandler;\n  this.currRequestId = 0;\n  this.chunksNeededByRequest = Object.create(null);\n  this.requestsByChunk = Object.create(null);\n  this.promisesByRequest = Object.create(null);\n  this.progressiveDataLength = 0;\n  this.aborted = false;\n  this._loadedStreamCapability = createPromiseCapability();\n }\n ChunkedStreamManager.prototype = {\n  onLoadedStream: function ChunkedStreamManager_getLoadedStream() {\n   return this._loadedStreamCapability.promise;\n  },\n  sendRequest: function ChunkedStreamManager_sendRequest(begin, end) {\n   var rangeReader = this.pdfNetworkStream.getRangeReader(begin, end);\n   if (!rangeReader.isStreamingSupported) {\n    rangeReader.onProgress = this.onProgress.bind(this);\n   }\n   var chunks = [], loaded = 0;\n   var manager = this;\n   var promise = new Promise(function (resolve, reject) {\n    var readChunk = function (chunk) {\n     try {\n      if (!chunk.done) {\n       var data = chunk.value;\n       chunks.push(data);\n       loaded += arrayByteLength(data);\n       if (rangeReader.isStreamingSupported) {\n        manager.onProgress({ loaded: loaded });\n       }\n       rangeReader.read().then(readChunk, reject);\n       return;\n      }\n      var chunkData = arraysToBytes(chunks);\n      chunks = null;\n      resolve(chunkData);\n     } catch (e) {\n      reject(e);\n     }\n    };\n    rangeReader.read().then(readChunk, reject);\n   });\n   promise.then(function (data) {\n    if (this.aborted) {\n     return;\n    }\n    this.onReceiveData({\n     chunk: data,\n     begin: begin\n    });\n   }.bind(this));\n  },\n  requestAllChunks: function ChunkedStreamManager_requestAllChunks() {\n   var missingChunks = this.stream.getMissingChunks();\n   this._requestChunks(missingChunks);\n   return this._loadedStreamCapability.promise;\n  },\n  _requestChunks: function ChunkedStreamManager_requestChunks(chunks) {\n   var requestId = this.currRequestId++;\n   var i, ii;\n   var chunksNeeded = Object.create(null);\n   this.chunksNeededByRequest[requestId] = chunksNeeded;\n   for (i = 0, ii = chunks.length; i < ii; i++) {\n    if (!this.stream.hasChunk(chunks[i])) {\n     chunksNeeded[chunks[i]] = true;\n    }\n   }\n   if (isEmptyObj(chunksNeeded)) {\n    return Promise.resolve();\n   }\n   var capability = createPromiseCapability();\n   this.promisesByRequest[requestId] = capability;\n   var chunksToRequest = [];\n   for (var chunk in chunksNeeded) {\n    chunk = chunk | 0;\n    if (!(chunk in this.requestsByChunk)) {\n     this.requestsByChunk[chunk] = [];\n     chunksToRequest.push(chunk);\n    }\n    this.requestsByChunk[chunk].push(requestId);\n   }\n   if (!chunksToRequest.length) {\n    return capability.promise;\n   }\n   var groupedChunksToRequest = this.groupChunks(chunksToRequest);\n   for (i = 0; i < groupedChunksToRequest.length; ++i) {\n    var groupedChunk = groupedChunksToRequest[i];\n    var begin = groupedChunk.beginChunk * this.chunkSize;\n    var end = Math.min(groupedChunk.endChunk * this.chunkSize, this.length);\n    this.sendRequest(begin, end);\n   }\n   return capability.promise;\n  },\n  getStream: function ChunkedStreamManager_getStream() {\n   return this.stream;\n  },\n  requestRange: function ChunkedStreamManager_requestRange(begin, end) {\n   end = Math.min(end, this.length);\n   var beginChunk = this.getBeginChunk(begin);\n   var endChunk = this.getEndChunk(end);\n   var chunks = [];\n   for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n    chunks.push(chunk);\n   }\n   return this._requestChunks(chunks);\n  },\n  requestRanges: function ChunkedStreamManager_requestRanges(ranges) {\n   ranges = ranges || [];\n   var chunksToRequest = [];\n   for (var i = 0; i < ranges.length; i++) {\n    var beginChunk = this.getBeginChunk(ranges[i].begin);\n    var endChunk = this.getEndChunk(ranges[i].end);\n    for (var chunk = beginChunk; chunk < endChunk; ++chunk) {\n     if (chunksToRequest.indexOf(chunk) < 0) {\n      chunksToRequest.push(chunk);\n     }\n    }\n   }\n   chunksToRequest.sort(function (a, b) {\n    return a - b;\n   });\n   return this._requestChunks(chunksToRequest);\n  },\n  groupChunks: function ChunkedStreamManager_groupChunks(chunks) {\n   var groupedChunks = [];\n   var beginChunk = -1;\n   var prevChunk = -1;\n   for (var i = 0; i < chunks.length; ++i) {\n    var chunk = chunks[i];\n    if (beginChunk < 0) {\n     beginChunk = chunk;\n    }\n    if (prevChunk >= 0 && prevChunk + 1 !== chunk) {\n     groupedChunks.push({\n      beginChunk: beginChunk,\n      endChunk: prevChunk + 1\n     });\n     beginChunk = chunk;\n    }\n    if (i + 1 === chunks.length) {\n     groupedChunks.push({\n      beginChunk: beginChunk,\n      endChunk: chunk + 1\n     });\n    }\n    prevChunk = chunk;\n   }\n   return groupedChunks;\n  },\n  onProgress: function ChunkedStreamManager_onProgress(args) {\n   var bytesLoaded = this.stream.numChunksLoaded * this.chunkSize + args.loaded;\n   this.msgHandler.send('DocProgress', {\n    loaded: bytesLoaded,\n    total: this.length\n   });\n  },\n  onReceiveData: function ChunkedStreamManager_onReceiveData(args) {\n   var chunk = args.chunk;\n   var isProgressive = args.begin === undefined;\n   var begin = isProgressive ? this.progressiveDataLength : args.begin;\n   var end = begin + chunk.byteLength;\n   var beginChunk = Math.floor(begin / this.chunkSize);\n   var endChunk = end < this.length ? Math.floor(end / this.chunkSize) : Math.ceil(end / this.chunkSize);\n   if (isProgressive) {\n    this.stream.onReceiveProgressiveData(chunk);\n    this.progressiveDataLength = end;\n   } else {\n    this.stream.onReceiveData(begin, chunk);\n   }\n   if (this.stream.allChunksLoaded()) {\n    this._loadedStreamCapability.resolve(this.stream);\n   }\n   var loadedRequests = [];\n   var i, requestId;\n   for (chunk = beginChunk; chunk < endChunk; ++chunk) {\n    var requestIds = this.requestsByChunk[chunk] || [];\n    delete this.requestsByChunk[chunk];\n    for (i = 0; i < requestIds.length; ++i) {\n     requestId = requestIds[i];\n     var chunksNeeded = this.chunksNeededByRequest[requestId];\n     if (chunk in chunksNeeded) {\n      delete chunksNeeded[chunk];\n     }\n     if (!isEmptyObj(chunksNeeded)) {\n      continue;\n     }\n     loadedRequests.push(requestId);\n    }\n   }\n   if (!this.disableAutoFetch && isEmptyObj(this.requestsByChunk)) {\n    var nextEmptyChunk;\n    if (this.stream.numChunksLoaded === 1) {\n     var lastChunk = this.stream.numChunks - 1;\n     if (!this.stream.hasChunk(lastChunk)) {\n      nextEmptyChunk = lastChunk;\n     }\n    } else {\n     nextEmptyChunk = this.stream.nextEmptyChunk(endChunk);\n    }\n    if (isInt(nextEmptyChunk)) {\n     this._requestChunks([nextEmptyChunk]);\n    }\n   }\n   for (i = 0; i < loadedRequests.length; ++i) {\n    requestId = loadedRequests[i];\n    var capability = this.promisesByRequest[requestId];\n    delete this.promisesByRequest[requestId];\n    capability.resolve();\n   }\n   this.msgHandler.send('DocProgress', {\n    loaded: this.stream.numChunksLoaded * this.chunkSize,\n    total: this.length\n   });\n  },\n  onError: function ChunkedStreamManager_onError(err) {\n   this._loadedStreamCapability.reject(err);\n  },\n  getBeginChunk: function ChunkedStreamManager_getBeginChunk(begin) {\n   var chunk = Math.floor(begin / this.chunkSize);\n   return chunk;\n  },\n  getEndChunk: function ChunkedStreamManager_getEndChunk(end) {\n   var chunk = Math.floor((end - 1) / this.chunkSize) + 1;\n   return chunk;\n  },\n  abort: function ChunkedStreamManager_abort() {\n   this.aborted = true;\n   if (this.pdfNetworkStream) {\n    this.pdfNetworkStream.cancelAllRequests('abort');\n   }\n   for (var requestId in this.promisesByRequest) {\n    var capability = this.promisesByRequest[requestId];\n    capability.reject(new Error('Request was aborted'));\n   }\n  }\n };\n return ChunkedStreamManager;\n}();\nexports.ChunkedStream = ChunkedStream;\nexports.ChunkedStreamManager = ChunkedStreamManager;\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar coreStream = __w_pdfjs_require__(2);\nvar PasswordException = sharedUtil.PasswordException;\nvar PasswordResponses = sharedUtil.PasswordResponses;\nvar bytesToString = sharedUtil.bytesToString;\nvar warn = sharedUtil.warn;\nvar error = sharedUtil.error;\nvar assert = sharedUtil.assert;\nvar isInt = sharedUtil.isInt;\nvar stringToBytes = sharedUtil.stringToBytes;\nvar utf8StringToString = sharedUtil.utf8StringToString;\nvar Name = corePrimitives.Name;\nvar isName = corePrimitives.isName;\nvar isDict = corePrimitives.isDict;\nvar DecryptStream = coreStream.DecryptStream;\nvar ARCFourCipher = function ARCFourCipherClosure() {\n function ARCFourCipher(key) {\n  this.a = 0;\n  this.b = 0;\n  var s = new Uint8Array(256);\n  var i, j = 0, tmp, keyLength = key.length;\n  for (i = 0; i < 256; ++i) {\n   s[i] = i;\n  }\n  for (i = 0; i < 256; ++i) {\n   tmp = s[i];\n   j = j + tmp + key[i % keyLength] & 0xFF;\n   s[i] = s[j];\n   s[j] = tmp;\n  }\n  this.s = s;\n }\n ARCFourCipher.prototype = {\n  encryptBlock: function ARCFourCipher_encryptBlock(data) {\n   var i, n = data.length, tmp, tmp2;\n   var a = this.a, b = this.b, s = this.s;\n   var output = new Uint8Array(n);\n   for (i = 0; i < n; ++i) {\n    a = a + 1 & 0xFF;\n    tmp = s[a];\n    b = b + tmp & 0xFF;\n    tmp2 = s[b];\n    s[a] = tmp2;\n    s[b] = tmp;\n    output[i] = data[i] ^ s[tmp + tmp2 & 0xFF];\n   }\n   this.a = a;\n   this.b = b;\n   return output;\n  }\n };\n ARCFourCipher.prototype.decryptBlock = ARCFourCipher.prototype.encryptBlock;\n return ARCFourCipher;\n}();\nvar calculateMD5 = function calculateMD5Closure() {\n var r = new Uint8Array([\n  7,\n  12,\n  17,\n  22,\n  7,\n  12,\n  17,\n  22,\n  7,\n  12,\n  17,\n  22,\n  7,\n  12,\n  17,\n  22,\n  5,\n  9,\n  14,\n  20,\n  5,\n  9,\n  14,\n  20,\n  5,\n  9,\n  14,\n  20,\n  5,\n  9,\n  14,\n  20,\n  4,\n  11,\n  16,\n  23,\n  4,\n  11,\n  16,\n  23,\n  4,\n  11,\n  16,\n  23,\n  4,\n  11,\n  16,\n  23,\n  6,\n  10,\n  15,\n  21,\n  6,\n  10,\n  15,\n  21,\n  6,\n  10,\n  15,\n  21,\n  6,\n  10,\n  15,\n  21\n ]);\n var k = new Int32Array([\n  -680876936,\n  -389564586,\n  606105819,\n  -1044525330,\n  -176418897,\n  1200080426,\n  -1473231341,\n  -45705983,\n  1770035416,\n  -1958414417,\n  -42063,\n  -1990404162,\n  1804603682,\n  -40341101,\n  -1502002290,\n  1236535329,\n  -165796510,\n  -1069501632,\n  643717713,\n  -373897302,\n  -701558691,\n  38016083,\n  -660478335,\n  -405537848,\n  568446438,\n  -1019803690,\n  -187363961,\n  1163531501,\n  -1444681467,\n  -51403784,\n  1735328473,\n  -1926607734,\n  -378558,\n  -2022574463,\n  1839030562,\n  -35309556,\n  -1530992060,\n  1272893353,\n  -155497632,\n  -1094730640,\n  681279174,\n  -358537222,\n  -722521979,\n  76029189,\n  -640364487,\n  -421815835,\n  530742520,\n  -995338651,\n  -198630844,\n  1126891415,\n  -1416354905,\n  -57434055,\n  1700485571,\n  -1894986606,\n  -1051523,\n  -2054922799,\n  1873313359,\n  -30611744,\n  -1560198380,\n  1309151649,\n  -145523070,\n  -1120210379,\n  718787259,\n  -343485551\n ]);\n function hash(data, offset, length) {\n  var h0 = 1732584193, h1 = -271733879, h2 = -1732584194, h3 = 271733878;\n  var paddedLength = length + 72 & ~63;\n  var padded = new Uint8Array(paddedLength);\n  var i, j, n;\n  for (i = 0; i < length; ++i) {\n   padded[i] = data[offset++];\n  }\n  padded[i++] = 0x80;\n  n = paddedLength - 8;\n  while (i < n) {\n   padded[i++] = 0;\n  }\n  padded[i++] = length << 3 & 0xFF;\n  padded[i++] = length >> 5 & 0xFF;\n  padded[i++] = length >> 13 & 0xFF;\n  padded[i++] = length >> 21 & 0xFF;\n  padded[i++] = length >>> 29 & 0xFF;\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = 0;\n  var w = new Int32Array(16);\n  for (i = 0; i < paddedLength;) {\n   for (j = 0; j < 16; ++j, i += 4) {\n    w[j] = padded[i] | padded[i + 1] << 8 | padded[i + 2] << 16 | padded[i + 3] << 24;\n   }\n   var a = h0, b = h1, c = h2, d = h3, f, g;\n   for (j = 0; j < 64; ++j) {\n    if (j < 16) {\n     f = b & c | ~b & d;\n     g = j;\n    } else if (j < 32) {\n     f = d & b | ~d & c;\n     g = 5 * j + 1 & 15;\n    } else if (j < 48) {\n     f = b ^ c ^ d;\n     g = 3 * j + 5 & 15;\n    } else {\n     f = c ^ (b | ~d);\n     g = 7 * j & 15;\n    }\n    var tmp = d, rotateArg = a + f + k[j] + w[g] | 0, rotate = r[j];\n    d = c;\n    c = b;\n    b = b + (rotateArg << rotate | rotateArg >>> 32 - rotate) | 0;\n    a = tmp;\n   }\n   h0 = h0 + a | 0;\n   h1 = h1 + b | 0;\n   h2 = h2 + c | 0;\n   h3 = h3 + d | 0;\n  }\n  return new Uint8Array([\n   h0 & 0xFF,\n   h0 >> 8 & 0xFF,\n   h0 >> 16 & 0xFF,\n   h0 >>> 24 & 0xFF,\n   h1 & 0xFF,\n   h1 >> 8 & 0xFF,\n   h1 >> 16 & 0xFF,\n   h1 >>> 24 & 0xFF,\n   h2 & 0xFF,\n   h2 >> 8 & 0xFF,\n   h2 >> 16 & 0xFF,\n   h2 >>> 24 & 0xFF,\n   h3 & 0xFF,\n   h3 >> 8 & 0xFF,\n   h3 >> 16 & 0xFF,\n   h3 >>> 24 & 0xFF\n  ]);\n }\n return hash;\n}();\nvar Word64 = function Word64Closure() {\n function Word64(highInteger, lowInteger) {\n  this.high = highInteger | 0;\n  this.low = lowInteger | 0;\n }\n Word64.prototype = {\n  and: function Word64_and(word) {\n   this.high &= word.high;\n   this.low &= word.low;\n  },\n  xor: function Word64_xor(word) {\n   this.high ^= word.high;\n   this.low ^= word.low;\n  },\n  or: function Word64_or(word) {\n   this.high |= word.high;\n   this.low |= word.low;\n  },\n  shiftRight: function Word64_shiftRight(places) {\n   if (places >= 32) {\n    this.low = this.high >>> places - 32 | 0;\n    this.high = 0;\n   } else {\n    this.low = this.low >>> places | this.high << 32 - places;\n    this.high = this.high >>> places | 0;\n   }\n  },\n  shiftLeft: function Word64_shiftLeft(places) {\n   if (places >= 32) {\n    this.high = this.low << places - 32;\n    this.low = 0;\n   } else {\n    this.high = this.high << places | this.low >>> 32 - places;\n    this.low = this.low << places;\n   }\n  },\n  rotateRight: function Word64_rotateRight(places) {\n   var low, high;\n   if (places & 32) {\n    high = this.low;\n    low = this.high;\n   } else {\n    low = this.low;\n    high = this.high;\n   }\n   places &= 31;\n   this.low = low >>> places | high << 32 - places;\n   this.high = high >>> places | low << 32 - places;\n  },\n  not: function Word64_not() {\n   this.high = ~this.high;\n   this.low = ~this.low;\n  },\n  add: function Word64_add(word) {\n   var lowAdd = (this.low >>> 0) + (word.low >>> 0);\n   var highAdd = (this.high >>> 0) + (word.high >>> 0);\n   if (lowAdd > 0xFFFFFFFF) {\n    highAdd += 1;\n   }\n   this.low = lowAdd | 0;\n   this.high = highAdd | 0;\n  },\n  copyTo: function Word64_copyTo(bytes, offset) {\n   bytes[offset] = this.high >>> 24 & 0xFF;\n   bytes[offset + 1] = this.high >> 16 & 0xFF;\n   bytes[offset + 2] = this.high >> 8 & 0xFF;\n   bytes[offset + 3] = this.high & 0xFF;\n   bytes[offset + 4] = this.low >>> 24 & 0xFF;\n   bytes[offset + 5] = this.low >> 16 & 0xFF;\n   bytes[offset + 6] = this.low >> 8 & 0xFF;\n   bytes[offset + 7] = this.low & 0xFF;\n  },\n  assign: function Word64_assign(word) {\n   this.high = word.high;\n   this.low = word.low;\n  }\n };\n return Word64;\n}();\nvar calculateSHA256 = function calculateSHA256Closure() {\n function rotr(x, n) {\n  return x >>> n | x << 32 - n;\n }\n function ch(x, y, z) {\n  return x & y ^ ~x & z;\n }\n function maj(x, y, z) {\n  return x & y ^ x & z ^ y & z;\n }\n function sigma(x) {\n  return rotr(x, 2) ^ rotr(x, 13) ^ rotr(x, 22);\n }\n function sigmaPrime(x) {\n  return rotr(x, 6) ^ rotr(x, 11) ^ rotr(x, 25);\n }\n function littleSigma(x) {\n  return rotr(x, 7) ^ rotr(x, 18) ^ x >>> 3;\n }\n function littleSigmaPrime(x) {\n  return rotr(x, 17) ^ rotr(x, 19) ^ x >>> 10;\n }\n var k = [\n  0x428a2f98,\n  0x71374491,\n  0xb5c0fbcf,\n  0xe9b5dba5,\n  0x3956c25b,\n  0x59f111f1,\n  0x923f82a4,\n  0xab1c5ed5,\n  0xd807aa98,\n  0x12835b01,\n  0x243185be,\n  0x550c7dc3,\n  0x72be5d74,\n  0x80deb1fe,\n  0x9bdc06a7,\n  0xc19bf174,\n  0xe49b69c1,\n  0xefbe4786,\n  0x0fc19dc6,\n  0x240ca1cc,\n  0x2de92c6f,\n  0x4a7484aa,\n  0x5cb0a9dc,\n  0x76f988da,\n  0x983e5152,\n  0xa831c66d,\n  0xb00327c8,\n  0xbf597fc7,\n  0xc6e00bf3,\n  0xd5a79147,\n  0x06ca6351,\n  0x14292967,\n  0x27b70a85,\n  0x2e1b2138,\n  0x4d2c6dfc,\n  0x53380d13,\n  0x650a7354,\n  0x766a0abb,\n  0x81c2c92e,\n  0x92722c85,\n  0xa2bfe8a1,\n  0xa81a664b,\n  0xc24b8b70,\n  0xc76c51a3,\n  0xd192e819,\n  0xd6990624,\n  0xf40e3585,\n  0x106aa070,\n  0x19a4c116,\n  0x1e376c08,\n  0x2748774c,\n  0x34b0bcb5,\n  0x391c0cb3,\n  0x4ed8aa4a,\n  0x5b9cca4f,\n  0x682e6ff3,\n  0x748f82ee,\n  0x78a5636f,\n  0x84c87814,\n  0x8cc70208,\n  0x90befffa,\n  0xa4506ceb,\n  0xbef9a3f7,\n  0xc67178f2\n ];\n function hash(data, offset, length) {\n  var h0 = 0x6a09e667, h1 = 0xbb67ae85, h2 = 0x3c6ef372, h3 = 0xa54ff53a, h4 = 0x510e527f, h5 = 0x9b05688c, h6 = 0x1f83d9ab, h7 = 0x5be0cd19;\n  var paddedLength = Math.ceil((length + 9) / 64) * 64;\n  var padded = new Uint8Array(paddedLength);\n  var i, j, n;\n  for (i = 0; i < length; ++i) {\n   padded[i] = data[offset++];\n  }\n  padded[i++] = 0x80;\n  n = paddedLength - 8;\n  while (i < n) {\n   padded[i++] = 0;\n  }\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = length >>> 29 & 0xFF;\n  padded[i++] = length >> 21 & 0xFF;\n  padded[i++] = length >> 13 & 0xFF;\n  padded[i++] = length >> 5 & 0xFF;\n  padded[i++] = length << 3 & 0xFF;\n  var w = new Uint32Array(64);\n  for (i = 0; i < paddedLength;) {\n   for (j = 0; j < 16; ++j) {\n    w[j] = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n    i += 4;\n   }\n   for (j = 16; j < 64; ++j) {\n    w[j] = littleSigmaPrime(w[j - 2]) + w[j - 7] + littleSigma(w[j - 15]) + w[j - 16] | 0;\n   }\n   var a = h0, b = h1, c = h2, d = h3, e = h4, f = h5, g = h6, h = h7, t1, t2;\n   for (j = 0; j < 64; ++j) {\n    t1 = h + sigmaPrime(e) + ch(e, f, g) + k[j] + w[j];\n    t2 = sigma(a) + maj(a, b, c);\n    h = g;\n    g = f;\n    f = e;\n    e = d + t1 | 0;\n    d = c;\n    c = b;\n    b = a;\n    a = t1 + t2 | 0;\n   }\n   h0 = h0 + a | 0;\n   h1 = h1 + b | 0;\n   h2 = h2 + c | 0;\n   h3 = h3 + d | 0;\n   h4 = h4 + e | 0;\n   h5 = h5 + f | 0;\n   h6 = h6 + g | 0;\n   h7 = h7 + h | 0;\n  }\n  return new Uint8Array([\n   h0 >> 24 & 0xFF,\n   h0 >> 16 & 0xFF,\n   h0 >> 8 & 0xFF,\n   h0 & 0xFF,\n   h1 >> 24 & 0xFF,\n   h1 >> 16 & 0xFF,\n   h1 >> 8 & 0xFF,\n   h1 & 0xFF,\n   h2 >> 24 & 0xFF,\n   h2 >> 16 & 0xFF,\n   h2 >> 8 & 0xFF,\n   h2 & 0xFF,\n   h3 >> 24 & 0xFF,\n   h3 >> 16 & 0xFF,\n   h3 >> 8 & 0xFF,\n   h3 & 0xFF,\n   h4 >> 24 & 0xFF,\n   h4 >> 16 & 0xFF,\n   h4 >> 8 & 0xFF,\n   h4 & 0xFF,\n   h5 >> 24 & 0xFF,\n   h5 >> 16 & 0xFF,\n   h5 >> 8 & 0xFF,\n   h5 & 0xFF,\n   h6 >> 24 & 0xFF,\n   h6 >> 16 & 0xFF,\n   h6 >> 8 & 0xFF,\n   h6 & 0xFF,\n   h7 >> 24 & 0xFF,\n   h7 >> 16 & 0xFF,\n   h7 >> 8 & 0xFF,\n   h7 & 0xFF\n  ]);\n }\n return hash;\n}();\nvar calculateSHA512 = function calculateSHA512Closure() {\n function ch(result, x, y, z, tmp) {\n  result.assign(x);\n  result.and(y);\n  tmp.assign(x);\n  tmp.not();\n  tmp.and(z);\n  result.xor(tmp);\n }\n function maj(result, x, y, z, tmp) {\n  result.assign(x);\n  result.and(y);\n  tmp.assign(x);\n  tmp.and(z);\n  result.xor(tmp);\n  tmp.assign(y);\n  tmp.and(z);\n  result.xor(tmp);\n }\n function sigma(result, x, tmp) {\n  result.assign(x);\n  result.rotateRight(28);\n  tmp.assign(x);\n  tmp.rotateRight(34);\n  result.xor(tmp);\n  tmp.assign(x);\n  tmp.rotateRight(39);\n  result.xor(tmp);\n }\n function sigmaPrime(result, x, tmp) {\n  result.assign(x);\n  result.rotateRight(14);\n  tmp.assign(x);\n  tmp.rotateRight(18);\n  result.xor(tmp);\n  tmp.assign(x);\n  tmp.rotateRight(41);\n  result.xor(tmp);\n }\n function littleSigma(result, x, tmp) {\n  result.assign(x);\n  result.rotateRight(1);\n  tmp.assign(x);\n  tmp.rotateRight(8);\n  result.xor(tmp);\n  tmp.assign(x);\n  tmp.shiftRight(7);\n  result.xor(tmp);\n }\n function littleSigmaPrime(result, x, tmp) {\n  result.assign(x);\n  result.rotateRight(19);\n  tmp.assign(x);\n  tmp.rotateRight(61);\n  result.xor(tmp);\n  tmp.assign(x);\n  tmp.shiftRight(6);\n  result.xor(tmp);\n }\n var k = [\n  new Word64(0x428a2f98, 0xd728ae22),\n  new Word64(0x71374491, 0x23ef65cd),\n  new Word64(0xb5c0fbcf, 0xec4d3b2f),\n  new Word64(0xe9b5dba5, 0x8189dbbc),\n  new Word64(0x3956c25b, 0xf348b538),\n  new Word64(0x59f111f1, 0xb605d019),\n  new Word64(0x923f82a4, 0xaf194f9b),\n  new Word64(0xab1c5ed5, 0xda6d8118),\n  new Word64(0xd807aa98, 0xa3030242),\n  new Word64(0x12835b01, 0x45706fbe),\n  new Word64(0x243185be, 0x4ee4b28c),\n  new Word64(0x550c7dc3, 0xd5ffb4e2),\n  new Word64(0x72be5d74, 0xf27b896f),\n  new Word64(0x80deb1fe, 0x3b1696b1),\n  new Word64(0x9bdc06a7, 0x25c71235),\n  new Word64(0xc19bf174, 0xcf692694),\n  new Word64(0xe49b69c1, 0x9ef14ad2),\n  new Word64(0xefbe4786, 0x384f25e3),\n  new Word64(0x0fc19dc6, 0x8b8cd5b5),\n  new Word64(0x240ca1cc, 0x77ac9c65),\n  new Word64(0x2de92c6f, 0x592b0275),\n  new Word64(0x4a7484aa, 0x6ea6e483),\n  new Word64(0x5cb0a9dc, 0xbd41fbd4),\n  new Word64(0x76f988da, 0x831153b5),\n  new Word64(0x983e5152, 0xee66dfab),\n  new Word64(0xa831c66d, 0x2db43210),\n  new Word64(0xb00327c8, 0x98fb213f),\n  new Word64(0xbf597fc7, 0xbeef0ee4),\n  new Word64(0xc6e00bf3, 0x3da88fc2),\n  new Word64(0xd5a79147, 0x930aa725),\n  new Word64(0x06ca6351, 0xe003826f),\n  new Word64(0x14292967, 0x0a0e6e70),\n  new Word64(0x27b70a85, 0x46d22ffc),\n  new Word64(0x2e1b2138, 0x5c26c926),\n  new Word64(0x4d2c6dfc, 0x5ac42aed),\n  new Word64(0x53380d13, 0x9d95b3df),\n  new Word64(0x650a7354, 0x8baf63de),\n  new Word64(0x766a0abb, 0x3c77b2a8),\n  new Word64(0x81c2c92e, 0x47edaee6),\n  new Word64(0x92722c85, 0x1482353b),\n  new Word64(0xa2bfe8a1, 0x4cf10364),\n  new Word64(0xa81a664b, 0xbc423001),\n  new Word64(0xc24b8b70, 0xd0f89791),\n  new Word64(0xc76c51a3, 0x0654be30),\n  new Word64(0xd192e819, 0xd6ef5218),\n  new Word64(0xd6990624, 0x5565a910),\n  new Word64(0xf40e3585, 0x5771202a),\n  new Word64(0x106aa070, 0x32bbd1b8),\n  new Word64(0x19a4c116, 0xb8d2d0c8),\n  new Word64(0x1e376c08, 0x5141ab53),\n  new Word64(0x2748774c, 0xdf8eeb99),\n  new Word64(0x34b0bcb5, 0xe19b48a8),\n  new Word64(0x391c0cb3, 0xc5c95a63),\n  new Word64(0x4ed8aa4a, 0xe3418acb),\n  new Word64(0x5b9cca4f, 0x7763e373),\n  new Word64(0x682e6ff3, 0xd6b2b8a3),\n  new Word64(0x748f82ee, 0x5defb2fc),\n  new Word64(0x78a5636f, 0x43172f60),\n  new Word64(0x84c87814, 0xa1f0ab72),\n  new Word64(0x8cc70208, 0x1a6439ec),\n  new Word64(0x90befffa, 0x23631e28),\n  new Word64(0xa4506ceb, 0xde82bde9),\n  new Word64(0xbef9a3f7, 0xb2c67915),\n  new Word64(0xc67178f2, 0xe372532b),\n  new Word64(0xca273ece, 0xea26619c),\n  new Word64(0xd186b8c7, 0x21c0c207),\n  new Word64(0xeada7dd6, 0xcde0eb1e),\n  new Word64(0xf57d4f7f, 0xee6ed178),\n  new Word64(0x06f067aa, 0x72176fba),\n  new Word64(0x0a637dc5, 0xa2c898a6),\n  new Word64(0x113f9804, 0xbef90dae),\n  new Word64(0x1b710b35, 0x131c471b),\n  new Word64(0x28db77f5, 0x23047d84),\n  new Word64(0x32caab7b, 0x40c72493),\n  new Word64(0x3c9ebe0a, 0x15c9bebc),\n  new Word64(0x431d67c4, 0x9c100d4c),\n  new Word64(0x4cc5d4be, 0xcb3e42b6),\n  new Word64(0x597f299c, 0xfc657e2a),\n  new Word64(0x5fcb6fab, 0x3ad6faec),\n  new Word64(0x6c44198c, 0x4a475817)\n ];\n function hash(data, offset, length, mode384) {\n  mode384 = !!mode384;\n  var h0, h1, h2, h3, h4, h5, h6, h7;\n  if (!mode384) {\n   h0 = new Word64(0x6a09e667, 0xf3bcc908);\n   h1 = new Word64(0xbb67ae85, 0x84caa73b);\n   h2 = new Word64(0x3c6ef372, 0xfe94f82b);\n   h3 = new Word64(0xa54ff53a, 0x5f1d36f1);\n   h4 = new Word64(0x510e527f, 0xade682d1);\n   h5 = new Word64(0x9b05688c, 0x2b3e6c1f);\n   h6 = new Word64(0x1f83d9ab, 0xfb41bd6b);\n   h7 = new Word64(0x5be0cd19, 0x137e2179);\n  } else {\n   h0 = new Word64(0xcbbb9d5d, 0xc1059ed8);\n   h1 = new Word64(0x629a292a, 0x367cd507);\n   h2 = new Word64(0x9159015a, 0x3070dd17);\n   h3 = new Word64(0x152fecd8, 0xf70e5939);\n   h4 = new Word64(0x67332667, 0xffc00b31);\n   h5 = new Word64(0x8eb44a87, 0x68581511);\n   h6 = new Word64(0xdb0c2e0d, 0x64f98fa7);\n   h7 = new Word64(0x47b5481d, 0xbefa4fa4);\n  }\n  var paddedLength = Math.ceil((length + 17) / 128) * 128;\n  var padded = new Uint8Array(paddedLength);\n  var i, j, n;\n  for (i = 0; i < length; ++i) {\n   padded[i] = data[offset++];\n  }\n  padded[i++] = 0x80;\n  n = paddedLength - 16;\n  while (i < n) {\n   padded[i++] = 0;\n  }\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = 0;\n  padded[i++] = length >>> 29 & 0xFF;\n  padded[i++] = length >> 21 & 0xFF;\n  padded[i++] = length >> 13 & 0xFF;\n  padded[i++] = length >> 5 & 0xFF;\n  padded[i++] = length << 3 & 0xFF;\n  var w = new Array(80);\n  for (i = 0; i < 80; i++) {\n   w[i] = new Word64(0, 0);\n  }\n  var a = new Word64(0, 0), b = new Word64(0, 0), c = new Word64(0, 0);\n  var d = new Word64(0, 0), e = new Word64(0, 0), f = new Word64(0, 0);\n  var g = new Word64(0, 0), h = new Word64(0, 0);\n  var t1 = new Word64(0, 0), t2 = new Word64(0, 0);\n  var tmp1 = new Word64(0, 0), tmp2 = new Word64(0, 0), tmp3;\n  for (i = 0; i < paddedLength;) {\n   for (j = 0; j < 16; ++j) {\n    w[j].high = padded[i] << 24 | padded[i + 1] << 16 | padded[i + 2] << 8 | padded[i + 3];\n    w[j].low = padded[i + 4] << 24 | padded[i + 5] << 16 | padded[i + 6] << 8 | padded[i + 7];\n    i += 8;\n   }\n   for (j = 16; j < 80; ++j) {\n    tmp3 = w[j];\n    littleSigmaPrime(tmp3, w[j - 2], tmp2);\n    tmp3.add(w[j - 7]);\n    littleSigma(tmp1, w[j - 15], tmp2);\n    tmp3.add(tmp1);\n    tmp3.add(w[j - 16]);\n   }\n   a.assign(h0);\n   b.assign(h1);\n   c.assign(h2);\n   d.assign(h3);\n   e.assign(h4);\n   f.assign(h5);\n   g.assign(h6);\n   h.assign(h7);\n   for (j = 0; j < 80; ++j) {\n    t1.assign(h);\n    sigmaPrime(tmp1, e, tmp2);\n    t1.add(tmp1);\n    ch(tmp1, e, f, g, tmp2);\n    t1.add(tmp1);\n    t1.add(k[j]);\n    t1.add(w[j]);\n    sigma(t2, a, tmp2);\n    maj(tmp1, a, b, c, tmp2);\n    t2.add(tmp1);\n    tmp3 = h;\n    h = g;\n    g = f;\n    f = e;\n    d.add(t1);\n    e = d;\n    d = c;\n    c = b;\n    b = a;\n    tmp3.assign(t1);\n    tmp3.add(t2);\n    a = tmp3;\n   }\n   h0.add(a);\n   h1.add(b);\n   h2.add(c);\n   h3.add(d);\n   h4.add(e);\n   h5.add(f);\n   h6.add(g);\n   h7.add(h);\n  }\n  var result;\n  if (!mode384) {\n   result = new Uint8Array(64);\n   h0.copyTo(result, 0);\n   h1.copyTo(result, 8);\n   h2.copyTo(result, 16);\n   h3.copyTo(result, 24);\n   h4.copyTo(result, 32);\n   h5.copyTo(result, 40);\n   h6.copyTo(result, 48);\n   h7.copyTo(result, 56);\n  } else {\n   result = new Uint8Array(48);\n   h0.copyTo(result, 0);\n   h1.copyTo(result, 8);\n   h2.copyTo(result, 16);\n   h3.copyTo(result, 24);\n   h4.copyTo(result, 32);\n   h5.copyTo(result, 40);\n  }\n  return result;\n }\n return hash;\n}();\nvar calculateSHA384 = function calculateSHA384Closure() {\n function hash(data, offset, length) {\n  return calculateSHA512(data, offset, length, true);\n }\n return hash;\n}();\nvar NullCipher = function NullCipherClosure() {\n function NullCipher() {\n }\n NullCipher.prototype = {\n  decryptBlock: function NullCipher_decryptBlock(data) {\n   return data;\n  }\n };\n return NullCipher;\n}();\nvar AES128Cipher = function AES128CipherClosure() {\n var rcon = new Uint8Array([\n  0x8d,\n  0x01,\n  0x02,\n  0x04,\n  0x08,\n  0x10,\n  0x20,\n  0x40,\n  0x80,\n  0x1b,\n  0x36,\n  0x6c,\n  0xd8,\n  0xab,\n  0x4d,\n  0x9a,\n  0x2f,\n  0x5e,\n  0xbc,\n  0x63,\n  0xc6,\n  0x97,\n  0x35,\n  0x6a,\n  0xd4,\n  0xb3,\n  0x7d,\n  0xfa,\n  0xef,\n  0xc5,\n  0x91,\n  0x39,\n  0x72,\n  0xe4,\n  0xd3,\n  0xbd,\n  0x61,\n  0xc2,\n  0x9f,\n  0x25,\n  0x4a,\n  0x94,\n  0x33,\n  0x66,\n  0xcc,\n  0x83,\n  0x1d,\n  0x3a,\n  0x74,\n  0xe8,\n  0xcb,\n  0x8d,\n  0x01,\n  0x02,\n  0x04,\n  0x08,\n  0x10,\n  0x20,\n  0x40,\n  0x80,\n  0x1b,\n  0x36,\n  0x6c,\n  0xd8,\n  0xab,\n  0x4d,\n  0x9a,\n  0x2f,\n  0x5e,\n  0xbc,\n  0x63,\n  0xc6,\n  0x97,\n  0x35,\n  0x6a,\n  0xd4,\n  0xb3,\n  0x7d,\n  0xfa,\n  0xef,\n  0xc5,\n  0x91,\n  0x39,\n  0x72,\n  0xe4,\n  0xd3,\n  0xbd,\n  0x61,\n  0xc2,\n  0x9f,\n  0x25,\n  0x4a,\n  0x94,\n  0x33,\n  0x66,\n  0xcc,\n  0x83,\n  0x1d,\n  0x3a,\n  0x74,\n  0xe8,\n  0xcb,\n  0x8d,\n  0x01,\n  0x02,\n  0x04,\n  0x08,\n  0x10,\n  0x20,\n  0x40,\n  0x80,\n  0x1b,\n  0x36,\n  0x6c,\n  0xd8,\n  0xab,\n  0x4d,\n  0x9a,\n  0x2f,\n  0x5e,\n  0xbc,\n  0x63,\n  0xc6,\n  0x97,\n  0x35,\n  0x6a,\n  0xd4,\n  0xb3,\n  0x7d,\n  0xfa,\n  0xef,\n  0xc5,\n  0x91,\n  0x39,\n  0x72,\n  0xe4,\n  0xd3,\n  0xbd,\n  0x61,\n  0xc2,\n  0x9f,\n  0x25,\n  0x4a,\n  0x94,\n  0x33,\n  0x66,\n  0xcc,\n  0x83,\n  0x1d,\n  0x3a,\n  0x74,\n  0xe8,\n  0xcb,\n  0x8d,\n  0x01,\n  0x02,\n  0x04,\n  0x08,\n  0x10,\n  0x20,\n  0x40,\n  0x80,\n  0x1b,\n  0x36,\n  0x6c,\n  0xd8,\n  0xab,\n  0x4d,\n  0x9a,\n  0x2f,\n  0x5e,\n  0xbc,\n  0x63,\n  0xc6,\n  0x97,\n  0x35,\n  0x6a,\n  0xd4,\n  0xb3,\n  0x7d,\n  0xfa,\n  0xef,\n  0xc5,\n  0x91,\n  0x39,\n  0x72,\n  0xe4,\n  0xd3,\n  0xbd,\n  0x61,\n  0xc2,\n  0x9f,\n  0x25,\n  0x4a,\n  0x94,\n  0x33,\n  0x66,\n  0xcc,\n  0x83,\n  0x1d,\n  0x3a,\n  0x74,\n  0xe8,\n  0xcb,\n  0x8d,\n  0x01,\n  0x02,\n  0x04,\n  0x08,\n  0x10,\n  0x20,\n  0x40,\n  0x80,\n  0x1b,\n  0x36,\n  0x6c,\n  0xd8,\n  0xab,\n  0x4d,\n  0x9a,\n  0x2f,\n  0x5e,\n  0xbc,\n  0x63,\n  0xc6,\n  0x97,\n  0x35,\n  0x6a,\n  0xd4,\n  0xb3,\n  0x7d,\n  0xfa,\n  0xef,\n  0xc5,\n  0x91,\n  0x39,\n  0x72,\n  0xe4,\n  0xd3,\n  0xbd,\n  0x61,\n  0xc2,\n  0x9f,\n  0x25,\n  0x4a,\n  0x94,\n  0x33,\n  0x66,\n  0xcc,\n  0x83,\n  0x1d,\n  0x3a,\n  0x74,\n  0xe8,\n  0xcb,\n  0x8d\n ]);\n var s = new Uint8Array([\n  0x63,\n  0x7c,\n  0x77,\n  0x7b,\n  0xf2,\n  0x6b,\n  0x6f,\n  0xc5,\n  0x30,\n  0x01,\n  0x67,\n  0x2b,\n  0xfe,\n  0xd7,\n  0xab,\n  0x76,\n  0xca,\n  0x82,\n  0xc9,\n  0x7d,\n  0xfa,\n  0x59,\n  0x47,\n  0xf0,\n  0xad,\n  0xd4,\n  0xa2,\n  0xaf,\n  0x9c,\n  0xa4,\n  0x72,\n  0xc0,\n  0xb7,\n  0xfd,\n  0x93,\n  0x26,\n  0x36,\n  0x3f,\n  0xf7,\n  0xcc,\n  0x34,\n  0xa5,\n  0xe5,\n  0xf1,\n  0x71,\n  0xd8,\n  0x31,\n  0x15,\n  0x04,\n  0xc7,\n  0x23,\n  0xc3,\n  0x18,\n  0x96,\n  0x05,\n  0x9a,\n  0x07,\n  0x12,\n  0x80,\n  0xe2,\n  0xeb,\n  0x27,\n  0xb2,\n  0x75,\n  0x09,\n  0x83,\n  0x2c,\n  0x1a,\n  0x1b,\n  0x6e,\n  0x5a,\n  0xa0,\n  0x52,\n  0x3b,\n  0xd6,\n  0xb3,\n  0x29,\n  0xe3,\n  0x2f,\n  0x84,\n  0x53,\n  0xd1,\n  0x00,\n  0xed,\n  0x20,\n  0xfc,\n  0xb1,\n  0x5b,\n  0x6a,\n  0xcb,\n  0xbe,\n  0x39,\n  0x4a,\n  0x4c,\n  0x58,\n  0xcf,\n  0xd0,\n  0xef,\n  0xaa,\n  0xfb,\n  0x43,\n  0x4d,\n  0x33,\n  0x85,\n  0x45,\n  0xf9,\n  0x02,\n  0x7f,\n  0x50,\n  0x3c,\n  0x9f,\n  0xa8,\n  0x51,\n  0xa3,\n  0x40,\n  0x8f,\n  0x92,\n  0x9d,\n  0x38,\n  0xf5,\n  0xbc,\n  0xb6,\n  0xda,\n  0x21,\n  0x10,\n  0xff,\n  0xf3,\n  0xd2,\n  0xcd,\n  0x0c,\n  0x13,\n  0xec,\n  0x5f,\n  0x97,\n  0x44,\n  0x17,\n  0xc4,\n  0xa7,\n  0x7e,\n  0x3d,\n  0x64,\n  0x5d,\n  0x19,\n  0x73,\n  0x60,\n  0x81,\n  0x4f,\n  0xdc,\n  0x22,\n  0x2a,\n  0x90,\n  0x88,\n  0x46,\n  0xee,\n  0xb8,\n  0x14,\n  0xde,\n  0x5e,\n  0x0b,\n  0xdb,\n  0xe0,\n  0x32,\n  0x3a,\n  0x0a,\n  0x49,\n  0x06,\n  0x24,\n  0x5c,\n  0xc2,\n  0xd3,\n  0xac,\n  0x62,\n  0x91,\n  0x95,\n  0xe4,\n  0x79,\n  0xe7,\n  0xc8,\n  0x37,\n  0x6d,\n  0x8d,\n  0xd5,\n  0x4e,\n  0xa9,\n  0x6c,\n  0x56,\n  0xf4,\n  0xea,\n  0x65,\n  0x7a,\n  0xae,\n  0x08,\n  0xba,\n  0x78,\n  0x25,\n  0x2e,\n  0x1c,\n  0xa6,\n  0xb4,\n  0xc6,\n  0xe8,\n  0xdd,\n  0x74,\n  0x1f,\n  0x4b,\n  0xbd,\n  0x8b,\n  0x8a,\n  0x70,\n  0x3e,\n  0xb5,\n  0x66,\n  0x48,\n  0x03,\n  0xf6,\n  0x0e,\n  0x61,\n  0x35,\n  0x57,\n  0xb9,\n  0x86,\n  0xc1,\n  0x1d,\n  0x9e,\n  0xe1,\n  0xf8,\n  0x98,\n  0x11,\n  0x69,\n  0xd9,\n  0x8e,\n  0x94,\n  0x9b,\n  0x1e,\n  0x87,\n  0xe9,\n  0xce,\n  0x55,\n  0x28,\n  0xdf,\n  0x8c,\n  0xa1,\n  0x89,\n  0x0d,\n  0xbf,\n  0xe6,\n  0x42,\n  0x68,\n  0x41,\n  0x99,\n  0x2d,\n  0x0f,\n  0xb0,\n  0x54,\n  0xbb,\n  0x16\n ]);\n var inv_s = new Uint8Array([\n  0x52,\n  0x09,\n  0x6a,\n  0xd5,\n  0x30,\n  0x36,\n  0xa5,\n  0x38,\n  0xbf,\n  0x40,\n  0xa3,\n  0x9e,\n  0x81,\n  0xf3,\n  0xd7,\n  0xfb,\n  0x7c,\n  0xe3,\n  0x39,\n  0x82,\n  0x9b,\n  0x2f,\n  0xff,\n  0x87,\n  0x34,\n  0x8e,\n  0x43,\n  0x44,\n  0xc4,\n  0xde,\n  0xe9,\n  0xcb,\n  0x54,\n  0x7b,\n  0x94,\n  0x32,\n  0xa6,\n  0xc2,\n  0x23,\n  0x3d,\n  0xee,\n  0x4c,\n  0x95,\n  0x0b,\n  0x42,\n  0xfa,\n  0xc3,\n  0x4e,\n  0x08,\n  0x2e,\n  0xa1,\n  0x66,\n  0x28,\n  0xd9,\n  0x24,\n  0xb2,\n  0x76,\n  0x5b,\n  0xa2,\n  0x49,\n  0x6d,\n  0x8b,\n  0xd1,\n  0x25,\n  0x72,\n  0xf8,\n  0xf6,\n  0x64,\n  0x86,\n  0x68,\n  0x98,\n  0x16,\n  0xd4,\n  0xa4,\n  0x5c,\n  0xcc,\n  0x5d,\n  0x65,\n  0xb6,\n  0x92,\n  0x6c,\n  0x70,\n  0x48,\n  0x50,\n  0xfd,\n  0xed,\n  0xb9,\n  0xda,\n  0x5e,\n  0x15,\n  0x46,\n  0x57,\n  0xa7,\n  0x8d,\n  0x9d,\n  0x84,\n  0x90,\n  0xd8,\n  0xab,\n  0x00,\n  0x8c,\n  0xbc,\n  0xd3,\n  0x0a,\n  0xf7,\n  0xe4,\n  0x58,\n  0x05,\n  0xb8,\n  0xb3,\n  0x45,\n  0x06,\n  0xd0,\n  0x2c,\n  0x1e,\n  0x8f,\n  0xca,\n  0x3f,\n  0x0f,\n  0x02,\n  0xc1,\n  0xaf,\n  0xbd,\n  0x03,\n  0x01,\n  0x13,\n  0x8a,\n  0x6b,\n  0x3a,\n  0x91,\n  0x11,\n  0x41,\n  0x4f,\n  0x67,\n  0xdc,\n  0xea,\n  0x97,\n  0xf2,\n  0xcf,\n  0xce,\n  0xf0,\n  0xb4,\n  0xe6,\n  0x73,\n  0x96,\n  0xac,\n  0x74,\n  0x22,\n  0xe7,\n  0xad,\n  0x35,\n  0x85,\n  0xe2,\n  0xf9,\n  0x37,\n  0xe8,\n  0x1c,\n  0x75,\n  0xdf,\n  0x6e,\n  0x47,\n  0xf1,\n  0x1a,\n  0x71,\n  0x1d,\n  0x29,\n  0xc5,\n  0x89,\n  0x6f,\n  0xb7,\n  0x62,\n  0x0e,\n  0xaa,\n  0x18,\n  0xbe,\n  0x1b,\n  0xfc,\n  0x56,\n  0x3e,\n  0x4b,\n  0xc6,\n  0xd2,\n  0x79,\n  0x20,\n  0x9a,\n  0xdb,\n  0xc0,\n  0xfe,\n  0x78,\n  0xcd,\n  0x5a,\n  0xf4,\n  0x1f,\n  0xdd,\n  0xa8,\n  0x33,\n  0x88,\n  0x07,\n  0xc7,\n  0x31,\n  0xb1,\n  0x12,\n  0x10,\n  0x59,\n  0x27,\n  0x80,\n  0xec,\n  0x5f,\n  0x60,\n  0x51,\n  0x7f,\n  0xa9,\n  0x19,\n  0xb5,\n  0x4a,\n  0x0d,\n  0x2d,\n  0xe5,\n  0x7a,\n  0x9f,\n  0x93,\n  0xc9,\n  0x9c,\n  0xef,\n  0xa0,\n  0xe0,\n  0x3b,\n  0x4d,\n  0xae,\n  0x2a,\n  0xf5,\n  0xb0,\n  0xc8,\n  0xeb,\n  0xbb,\n  0x3c,\n  0x83,\n  0x53,\n  0x99,\n  0x61,\n  0x17,\n  0x2b,\n  0x04,\n  0x7e,\n  0xba,\n  0x77,\n  0xd6,\n  0x26,\n  0xe1,\n  0x69,\n  0x14,\n  0x63,\n  0x55,\n  0x21,\n  0x0c,\n  0x7d\n ]);\n var mixCol = new Uint8Array(256);\n for (var i = 0; i < 256; i++) {\n  if (i < 128) {\n   mixCol[i] = i << 1;\n  } else {\n   mixCol[i] = i << 1 ^ 0x1b;\n  }\n }\n var mix = new Uint32Array([\n  0x00000000,\n  0x0e090d0b,\n  0x1c121a16,\n  0x121b171d,\n  0x3824342c,\n  0x362d3927,\n  0x24362e3a,\n  0x2a3f2331,\n  0x70486858,\n  0x7e416553,\n  0x6c5a724e,\n  0x62537f45,\n  0x486c5c74,\n  0x4665517f,\n  0x547e4662,\n  0x5a774b69,\n  0xe090d0b0,\n  0xee99ddbb,\n  0xfc82caa6,\n  0xf28bc7ad,\n  0xd8b4e49c,\n  0xd6bde997,\n  0xc4a6fe8a,\n  0xcaaff381,\n  0x90d8b8e8,\n  0x9ed1b5e3,\n  0x8ccaa2fe,\n  0x82c3aff5,\n  0xa8fc8cc4,\n  0xa6f581cf,\n  0xb4ee96d2,\n  0xbae79bd9,\n  0xdb3bbb7b,\n  0xd532b670,\n  0xc729a16d,\n  0xc920ac66,\n  0xe31f8f57,\n  0xed16825c,\n  0xff0d9541,\n  0xf104984a,\n  0xab73d323,\n  0xa57ade28,\n  0xb761c935,\n  0xb968c43e,\n  0x9357e70f,\n  0x9d5eea04,\n  0x8f45fd19,\n  0x814cf012,\n  0x3bab6bcb,\n  0x35a266c0,\n  0x27b971dd,\n  0x29b07cd6,\n  0x038f5fe7,\n  0x0d8652ec,\n  0x1f9d45f1,\n  0x119448fa,\n  0x4be30393,\n  0x45ea0e98,\n  0x57f11985,\n  0x59f8148e,\n  0x73c737bf,\n  0x7dce3ab4,\n  0x6fd52da9,\n  0x61dc20a2,\n  0xad766df6,\n  0xa37f60fd,\n  0xb16477e0,\n  0xbf6d7aeb,\n  0x955259da,\n  0x9b5b54d1,\n  0x894043cc,\n  0x87494ec7,\n  0xdd3e05ae,\n  0xd33708a5,\n  0xc12c1fb8,\n  0xcf2512b3,\n  0xe51a3182,\n  0xeb133c89,\n  0xf9082b94,\n  0xf701269f,\n  0x4de6bd46,\n  0x43efb04d,\n  0x51f4a750,\n  0x5ffdaa5b,\n  0x75c2896a,\n  0x7bcb8461,\n  0x69d0937c,\n  0x67d99e77,\n  0x3daed51e,\n  0x33a7d815,\n  0x21bccf08,\n  0x2fb5c203,\n  0x058ae132,\n  0x0b83ec39,\n  0x1998fb24,\n  0x1791f62f,\n  0x764dd68d,\n  0x7844db86,\n  0x6a5fcc9b,\n  0x6456c190,\n  0x4e69e2a1,\n  0x4060efaa,\n  0x527bf8b7,\n  0x5c72f5bc,\n  0x0605bed5,\n  0x080cb3de,\n  0x1a17a4c3,\n  0x141ea9c8,\n  0x3e218af9,\n  0x302887f2,\n  0x223390ef,\n  0x2c3a9de4,\n  0x96dd063d,\n  0x98d40b36,\n  0x8acf1c2b,\n  0x84c61120,\n  0xaef93211,\n  0xa0f03f1a,\n  0xb2eb2807,\n  0xbce2250c,\n  0xe6956e65,\n  0xe89c636e,\n  0xfa877473,\n  0xf48e7978,\n  0xdeb15a49,\n  0xd0b85742,\n  0xc2a3405f,\n  0xccaa4d54,\n  0x41ecdaf7,\n  0x4fe5d7fc,\n  0x5dfec0e1,\n  0x53f7cdea,\n  0x79c8eedb,\n  0x77c1e3d0,\n  0x65daf4cd,\n  0x6bd3f9c6,\n  0x31a4b2af,\n  0x3fadbfa4,\n  0x2db6a8b9,\n  0x23bfa5b2,\n  0x09808683,\n  0x07898b88,\n  0x15929c95,\n  0x1b9b919e,\n  0xa17c0a47,\n  0xaf75074c,\n  0xbd6e1051,\n  0xb3671d5a,\n  0x99583e6b,\n  0x97513360,\n  0x854a247d,\n  0x8b432976,\n  0xd134621f,\n  0xdf3d6f14,\n  0xcd267809,\n  0xc32f7502,\n  0xe9105633,\n  0xe7195b38,\n  0xf5024c25,\n  0xfb0b412e,\n  0x9ad7618c,\n  0x94de6c87,\n  0x86c57b9a,\n  0x88cc7691,\n  0xa2f355a0,\n  0xacfa58ab,\n  0xbee14fb6,\n  0xb0e842bd,\n  0xea9f09d4,\n  0xe49604df,\n  0xf68d13c2,\n  0xf8841ec9,\n  0xd2bb3df8,\n  0xdcb230f3,\n  0xcea927ee,\n  0xc0a02ae5,\n  0x7a47b13c,\n  0x744ebc37,\n  0x6655ab2a,\n  0x685ca621,\n  0x42638510,\n  0x4c6a881b,\n  0x5e719f06,\n  0x5078920d,\n  0x0a0fd964,\n  0x0406d46f,\n  0x161dc372,\n  0x1814ce79,\n  0x322bed48,\n  0x3c22e043,\n  0x2e39f75e,\n  0x2030fa55,\n  0xec9ab701,\n  0xe293ba0a,\n  0xf088ad17,\n  0xfe81a01c,\n  0xd4be832d,\n  0xdab78e26,\n  0xc8ac993b,\n  0xc6a59430,\n  0x9cd2df59,\n  0x92dbd252,\n  0x80c0c54f,\n  0x8ec9c844,\n  0xa4f6eb75,\n  0xaaffe67e,\n  0xb8e4f163,\n  0xb6edfc68,\n  0x0c0a67b1,\n  0x02036aba,\n  0x10187da7,\n  0x1e1170ac,\n  0x342e539d,\n  0x3a275e96,\n  0x283c498b,\n  0x26354480,\n  0x7c420fe9,\n  0x724b02e2,\n  0x605015ff,\n  0x6e5918f4,\n  0x44663bc5,\n  0x4a6f36ce,\n  0x587421d3,\n  0x567d2cd8,\n  0x37a10c7a,\n  0x39a80171,\n  0x2bb3166c,\n  0x25ba1b67,\n  0x0f853856,\n  0x018c355d,\n  0x13972240,\n  0x1d9e2f4b,\n  0x47e96422,\n  0x49e06929,\n  0x5bfb7e34,\n  0x55f2733f,\n  0x7fcd500e,\n  0x71c45d05,\n  0x63df4a18,\n  0x6dd64713,\n  0xd731dcca,\n  0xd938d1c1,\n  0xcb23c6dc,\n  0xc52acbd7,\n  0xef15e8e6,\n  0xe11ce5ed,\n  0xf307f2f0,\n  0xfd0efffb,\n  0xa779b492,\n  0xa970b999,\n  0xbb6bae84,\n  0xb562a38f,\n  0x9f5d80be,\n  0x91548db5,\n  0x834f9aa8,\n  0x8d4697a3\n ]);\n function expandKey128(cipherKey) {\n  var b = 176, result = new Uint8Array(b);\n  result.set(cipherKey);\n  for (var j = 16, i = 1; j < b; ++i) {\n   var t1 = result[j - 3], t2 = result[j - 2], t3 = result[j - 1], t4 = result[j - 4];\n   t1 = s[t1];\n   t2 = s[t2];\n   t3 = s[t3];\n   t4 = s[t4];\n   t1 = t1 ^ rcon[i];\n   for (var n = 0; n < 4; ++n) {\n    result[j] = t1 ^= result[j - 16];\n    j++;\n    result[j] = t2 ^= result[j - 16];\n    j++;\n    result[j] = t3 ^= result[j - 16];\n    j++;\n    result[j] = t4 ^= result[j - 16];\n    j++;\n   }\n  }\n  return result;\n }\n function decrypt128(input, key) {\n  var state = new Uint8Array(16);\n  state.set(input);\n  var i, j, k;\n  var t, u, v;\n  for (j = 0, k = 160; j < 16; ++j, ++k) {\n   state[j] ^= key[k];\n  }\n  for (i = 9; i >= 1; --i) {\n   t = state[13];\n   state[13] = state[9];\n   state[9] = state[5];\n   state[5] = state[1];\n   state[1] = t;\n   t = state[14];\n   u = state[10];\n   state[14] = state[6];\n   state[10] = state[2];\n   state[6] = t;\n   state[2] = u;\n   t = state[15];\n   u = state[11];\n   v = state[7];\n   state[15] = state[3];\n   state[11] = t;\n   state[7] = u;\n   state[3] = v;\n   for (j = 0; j < 16; ++j) {\n    state[j] = inv_s[state[j]];\n   }\n   for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n    state[j] ^= key[k];\n   }\n   for (j = 0; j < 16; j += 4) {\n    var s0 = mix[state[j]], s1 = mix[state[j + 1]], s2 = mix[state[j + 2]], s3 = mix[state[j + 3]];\n    t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n    state[j] = t >>> 24 & 0xFF;\n    state[j + 1] = t >> 16 & 0xFF;\n    state[j + 2] = t >> 8 & 0xFF;\n    state[j + 3] = t & 0xFF;\n   }\n  }\n  t = state[13];\n  state[13] = state[9];\n  state[9] = state[5];\n  state[5] = state[1];\n  state[1] = t;\n  t = state[14];\n  u = state[10];\n  state[14] = state[6];\n  state[10] = state[2];\n  state[6] = t;\n  state[2] = u;\n  t = state[15];\n  u = state[11];\n  v = state[7];\n  state[15] = state[3];\n  state[11] = t;\n  state[7] = u;\n  state[3] = v;\n  for (j = 0; j < 16; ++j) {\n   state[j] = inv_s[state[j]];\n   state[j] ^= key[j];\n  }\n  return state;\n }\n function encrypt128(input, key) {\n  var t, u, v, k;\n  var state = new Uint8Array(16);\n  state.set(input);\n  for (j = 0; j < 16; ++j) {\n   state[j] ^= key[j];\n  }\n  for (i = 1; i < 10; i++) {\n   for (j = 0; j < 16; ++j) {\n    state[j] = s[state[j]];\n   }\n   v = state[1];\n   state[1] = state[5];\n   state[5] = state[9];\n   state[9] = state[13];\n   state[13] = v;\n   v = state[2];\n   u = state[6];\n   state[2] = state[10];\n   state[6] = state[14];\n   state[10] = v;\n   state[14] = u;\n   v = state[3];\n   u = state[7];\n   t = state[11];\n   state[3] = state[15];\n   state[7] = v;\n   state[11] = u;\n   state[15] = t;\n   for (var j = 0; j < 16; j += 4) {\n    var s0 = state[j + 0], s1 = state[j + 1];\n    var s2 = state[j + 2], s3 = state[j + 3];\n    t = s0 ^ s1 ^ s2 ^ s3;\n    state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n    state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n    state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n    state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n   }\n   for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n    state[j] ^= key[k];\n   }\n  }\n  for (j = 0; j < 16; ++j) {\n   state[j] = s[state[j]];\n  }\n  v = state[1];\n  state[1] = state[5];\n  state[5] = state[9];\n  state[9] = state[13];\n  state[13] = v;\n  v = state[2];\n  u = state[6];\n  state[2] = state[10];\n  state[6] = state[14];\n  state[10] = v;\n  state[14] = u;\n  v = state[3];\n  u = state[7];\n  t = state[11];\n  state[3] = state[15];\n  state[7] = v;\n  state[11] = u;\n  state[15] = t;\n  for (j = 0, k = 160; j < 16; ++j, ++k) {\n   state[j] ^= key[k];\n  }\n  return state;\n }\n function AES128Cipher(key) {\n  this.key = expandKey128(key);\n  this.buffer = new Uint8Array(16);\n  this.bufferPosition = 0;\n }\n function decryptBlock2(data, finalize) {\n  var i, j, ii, sourceLength = data.length, buffer = this.buffer, bufferLength = this.bufferPosition, result = [], iv = this.iv;\n  for (i = 0; i < sourceLength; ++i) {\n   buffer[bufferLength] = data[i];\n   ++bufferLength;\n   if (bufferLength < 16) {\n    continue;\n   }\n   var plain = decrypt128(buffer, this.key);\n   for (j = 0; j < 16; ++j) {\n    plain[j] ^= iv[j];\n   }\n   iv = buffer;\n   result.push(plain);\n   buffer = new Uint8Array(16);\n   bufferLength = 0;\n  }\n  this.buffer = buffer;\n  this.bufferLength = bufferLength;\n  this.iv = iv;\n  if (result.length === 0) {\n   return new Uint8Array([]);\n  }\n  var outputLength = 16 * result.length;\n  if (finalize) {\n   var lastBlock = result[result.length - 1];\n   var psLen = lastBlock[15];\n   if (psLen <= 16) {\n    for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n     if (lastBlock[i] !== psLen) {\n      psLen = 0;\n      break;\n     }\n    }\n    outputLength -= psLen;\n    result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n   }\n  }\n  var output = new Uint8Array(outputLength);\n  for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n   output.set(result[i], j);\n  }\n  return output;\n }\n AES128Cipher.prototype = {\n  decryptBlock: function AES128Cipher_decryptBlock(data, finalize) {\n   var i, sourceLength = data.length;\n   var buffer = this.buffer, bufferLength = this.bufferPosition;\n   for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n    buffer[bufferLength] = data[i];\n   }\n   if (bufferLength < 16) {\n    this.bufferLength = bufferLength;\n    return new Uint8Array([]);\n   }\n   this.iv = buffer;\n   this.buffer = new Uint8Array(16);\n   this.bufferLength = 0;\n   this.decryptBlock = decryptBlock2;\n   return this.decryptBlock(data.subarray(16), finalize);\n  },\n  encrypt: function AES128Cipher_encrypt(data, iv) {\n   var i, j, ii, sourceLength = data.length, buffer = this.buffer, bufferLength = this.bufferPosition, result = [];\n   if (!iv) {\n    iv = new Uint8Array(16);\n   }\n   for (i = 0; i < sourceLength; ++i) {\n    buffer[bufferLength] = data[i];\n    ++bufferLength;\n    if (bufferLength < 16) {\n     continue;\n    }\n    for (j = 0; j < 16; ++j) {\n     buffer[j] ^= iv[j];\n    }\n    var cipher = encrypt128(buffer, this.key);\n    iv = cipher;\n    result.push(cipher);\n    buffer = new Uint8Array(16);\n    bufferLength = 0;\n   }\n   this.buffer = buffer;\n   this.bufferLength = bufferLength;\n   this.iv = iv;\n   if (result.length === 0) {\n    return new Uint8Array([]);\n   }\n   var outputLength = 16 * result.length;\n   var output = new Uint8Array(outputLength);\n   for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n    output.set(result[i], j);\n   }\n   return output;\n  }\n };\n return AES128Cipher;\n}();\nvar AES256Cipher = function AES256CipherClosure() {\n var s = new Uint8Array([\n  0x63,\n  0x7c,\n  0x77,\n  0x7b,\n  0xf2,\n  0x6b,\n  0x6f,\n  0xc5,\n  0x30,\n  0x01,\n  0x67,\n  0x2b,\n  0xfe,\n  0xd7,\n  0xab,\n  0x76,\n  0xca,\n  0x82,\n  0xc9,\n  0x7d,\n  0xfa,\n  0x59,\n  0x47,\n  0xf0,\n  0xad,\n  0xd4,\n  0xa2,\n  0xaf,\n  0x9c,\n  0xa4,\n  0x72,\n  0xc0,\n  0xb7,\n  0xfd,\n  0x93,\n  0x26,\n  0x36,\n  0x3f,\n  0xf7,\n  0xcc,\n  0x34,\n  0xa5,\n  0xe5,\n  0xf1,\n  0x71,\n  0xd8,\n  0x31,\n  0x15,\n  0x04,\n  0xc7,\n  0x23,\n  0xc3,\n  0x18,\n  0x96,\n  0x05,\n  0x9a,\n  0x07,\n  0x12,\n  0x80,\n  0xe2,\n  0xeb,\n  0x27,\n  0xb2,\n  0x75,\n  0x09,\n  0x83,\n  0x2c,\n  0x1a,\n  0x1b,\n  0x6e,\n  0x5a,\n  0xa0,\n  0x52,\n  0x3b,\n  0xd6,\n  0xb3,\n  0x29,\n  0xe3,\n  0x2f,\n  0x84,\n  0x53,\n  0xd1,\n  0x00,\n  0xed,\n  0x20,\n  0xfc,\n  0xb1,\n  0x5b,\n  0x6a,\n  0xcb,\n  0xbe,\n  0x39,\n  0x4a,\n  0x4c,\n  0x58,\n  0xcf,\n  0xd0,\n  0xef,\n  0xaa,\n  0xfb,\n  0x43,\n  0x4d,\n  0x33,\n  0x85,\n  0x45,\n  0xf9,\n  0x02,\n  0x7f,\n  0x50,\n  0x3c,\n  0x9f,\n  0xa8,\n  0x51,\n  0xa3,\n  0x40,\n  0x8f,\n  0x92,\n  0x9d,\n  0x38,\n  0xf5,\n  0xbc,\n  0xb6,\n  0xda,\n  0x21,\n  0x10,\n  0xff,\n  0xf3,\n  0xd2,\n  0xcd,\n  0x0c,\n  0x13,\n  0xec,\n  0x5f,\n  0x97,\n  0x44,\n  0x17,\n  0xc4,\n  0xa7,\n  0x7e,\n  0x3d,\n  0x64,\n  0x5d,\n  0x19,\n  0x73,\n  0x60,\n  0x81,\n  0x4f,\n  0xdc,\n  0x22,\n  0x2a,\n  0x90,\n  0x88,\n  0x46,\n  0xee,\n  0xb8,\n  0x14,\n  0xde,\n  0x5e,\n  0x0b,\n  0xdb,\n  0xe0,\n  0x32,\n  0x3a,\n  0x0a,\n  0x49,\n  0x06,\n  0x24,\n  0x5c,\n  0xc2,\n  0xd3,\n  0xac,\n  0x62,\n  0x91,\n  0x95,\n  0xe4,\n  0x79,\n  0xe7,\n  0xc8,\n  0x37,\n  0x6d,\n  0x8d,\n  0xd5,\n  0x4e,\n  0xa9,\n  0x6c,\n  0x56,\n  0xf4,\n  0xea,\n  0x65,\n  0x7a,\n  0xae,\n  0x08,\n  0xba,\n  0x78,\n  0x25,\n  0x2e,\n  0x1c,\n  0xa6,\n  0xb4,\n  0xc6,\n  0xe8,\n  0xdd,\n  0x74,\n  0x1f,\n  0x4b,\n  0xbd,\n  0x8b,\n  0x8a,\n  0x70,\n  0x3e,\n  0xb5,\n  0x66,\n  0x48,\n  0x03,\n  0xf6,\n  0x0e,\n  0x61,\n  0x35,\n  0x57,\n  0xb9,\n  0x86,\n  0xc1,\n  0x1d,\n  0x9e,\n  0xe1,\n  0xf8,\n  0x98,\n  0x11,\n  0x69,\n  0xd9,\n  0x8e,\n  0x94,\n  0x9b,\n  0x1e,\n  0x87,\n  0xe9,\n  0xce,\n  0x55,\n  0x28,\n  0xdf,\n  0x8c,\n  0xa1,\n  0x89,\n  0x0d,\n  0xbf,\n  0xe6,\n  0x42,\n  0x68,\n  0x41,\n  0x99,\n  0x2d,\n  0x0f,\n  0xb0,\n  0x54,\n  0xbb,\n  0x16\n ]);\n var inv_s = new Uint8Array([\n  0x52,\n  0x09,\n  0x6a,\n  0xd5,\n  0x30,\n  0x36,\n  0xa5,\n  0x38,\n  0xbf,\n  0x40,\n  0xa3,\n  0x9e,\n  0x81,\n  0xf3,\n  0xd7,\n  0xfb,\n  0x7c,\n  0xe3,\n  0x39,\n  0x82,\n  0x9b,\n  0x2f,\n  0xff,\n  0x87,\n  0x34,\n  0x8e,\n  0x43,\n  0x44,\n  0xc4,\n  0xde,\n  0xe9,\n  0xcb,\n  0x54,\n  0x7b,\n  0x94,\n  0x32,\n  0xa6,\n  0xc2,\n  0x23,\n  0x3d,\n  0xee,\n  0x4c,\n  0x95,\n  0x0b,\n  0x42,\n  0xfa,\n  0xc3,\n  0x4e,\n  0x08,\n  0x2e,\n  0xa1,\n  0x66,\n  0x28,\n  0xd9,\n  0x24,\n  0xb2,\n  0x76,\n  0x5b,\n  0xa2,\n  0x49,\n  0x6d,\n  0x8b,\n  0xd1,\n  0x25,\n  0x72,\n  0xf8,\n  0xf6,\n  0x64,\n  0x86,\n  0x68,\n  0x98,\n  0x16,\n  0xd4,\n  0xa4,\n  0x5c,\n  0xcc,\n  0x5d,\n  0x65,\n  0xb6,\n  0x92,\n  0x6c,\n  0x70,\n  0x48,\n  0x50,\n  0xfd,\n  0xed,\n  0xb9,\n  0xda,\n  0x5e,\n  0x15,\n  0x46,\n  0x57,\n  0xa7,\n  0x8d,\n  0x9d,\n  0x84,\n  0x90,\n  0xd8,\n  0xab,\n  0x00,\n  0x8c,\n  0xbc,\n  0xd3,\n  0x0a,\n  0xf7,\n  0xe4,\n  0x58,\n  0x05,\n  0xb8,\n  0xb3,\n  0x45,\n  0x06,\n  0xd0,\n  0x2c,\n  0x1e,\n  0x8f,\n  0xca,\n  0x3f,\n  0x0f,\n  0x02,\n  0xc1,\n  0xaf,\n  0xbd,\n  0x03,\n  0x01,\n  0x13,\n  0x8a,\n  0x6b,\n  0x3a,\n  0x91,\n  0x11,\n  0x41,\n  0x4f,\n  0x67,\n  0xdc,\n  0xea,\n  0x97,\n  0xf2,\n  0xcf,\n  0xce,\n  0xf0,\n  0xb4,\n  0xe6,\n  0x73,\n  0x96,\n  0xac,\n  0x74,\n  0x22,\n  0xe7,\n  0xad,\n  0x35,\n  0x85,\n  0xe2,\n  0xf9,\n  0x37,\n  0xe8,\n  0x1c,\n  0x75,\n  0xdf,\n  0x6e,\n  0x47,\n  0xf1,\n  0x1a,\n  0x71,\n  0x1d,\n  0x29,\n  0xc5,\n  0x89,\n  0x6f,\n  0xb7,\n  0x62,\n  0x0e,\n  0xaa,\n  0x18,\n  0xbe,\n  0x1b,\n  0xfc,\n  0x56,\n  0x3e,\n  0x4b,\n  0xc6,\n  0xd2,\n  0x79,\n  0x20,\n  0x9a,\n  0xdb,\n  0xc0,\n  0xfe,\n  0x78,\n  0xcd,\n  0x5a,\n  0xf4,\n  0x1f,\n  0xdd,\n  0xa8,\n  0x33,\n  0x88,\n  0x07,\n  0xc7,\n  0x31,\n  0xb1,\n  0x12,\n  0x10,\n  0x59,\n  0x27,\n  0x80,\n  0xec,\n  0x5f,\n  0x60,\n  0x51,\n  0x7f,\n  0xa9,\n  0x19,\n  0xb5,\n  0x4a,\n  0x0d,\n  0x2d,\n  0xe5,\n  0x7a,\n  0x9f,\n  0x93,\n  0xc9,\n  0x9c,\n  0xef,\n  0xa0,\n  0xe0,\n  0x3b,\n  0x4d,\n  0xae,\n  0x2a,\n  0xf5,\n  0xb0,\n  0xc8,\n  0xeb,\n  0xbb,\n  0x3c,\n  0x83,\n  0x53,\n  0x99,\n  0x61,\n  0x17,\n  0x2b,\n  0x04,\n  0x7e,\n  0xba,\n  0x77,\n  0xd6,\n  0x26,\n  0xe1,\n  0x69,\n  0x14,\n  0x63,\n  0x55,\n  0x21,\n  0x0c,\n  0x7d\n ]);\n var mixCol = new Uint8Array(256);\n for (var i = 0; i < 256; i++) {\n  if (i < 128) {\n   mixCol[i] = i << 1;\n  } else {\n   mixCol[i] = i << 1 ^ 0x1b;\n  }\n }\n var mix = new Uint32Array([\n  0x00000000,\n  0x0e090d0b,\n  0x1c121a16,\n  0x121b171d,\n  0x3824342c,\n  0x362d3927,\n  0x24362e3a,\n  0x2a3f2331,\n  0x70486858,\n  0x7e416553,\n  0x6c5a724e,\n  0x62537f45,\n  0x486c5c74,\n  0x4665517f,\n  0x547e4662,\n  0x5a774b69,\n  0xe090d0b0,\n  0xee99ddbb,\n  0xfc82caa6,\n  0xf28bc7ad,\n  0xd8b4e49c,\n  0xd6bde997,\n  0xc4a6fe8a,\n  0xcaaff381,\n  0x90d8b8e8,\n  0x9ed1b5e3,\n  0x8ccaa2fe,\n  0x82c3aff5,\n  0xa8fc8cc4,\n  0xa6f581cf,\n  0xb4ee96d2,\n  0xbae79bd9,\n  0xdb3bbb7b,\n  0xd532b670,\n  0xc729a16d,\n  0xc920ac66,\n  0xe31f8f57,\n  0xed16825c,\n  0xff0d9541,\n  0xf104984a,\n  0xab73d323,\n  0xa57ade28,\n  0xb761c935,\n  0xb968c43e,\n  0x9357e70f,\n  0x9d5eea04,\n  0x8f45fd19,\n  0x814cf012,\n  0x3bab6bcb,\n  0x35a266c0,\n  0x27b971dd,\n  0x29b07cd6,\n  0x038f5fe7,\n  0x0d8652ec,\n  0x1f9d45f1,\n  0x119448fa,\n  0x4be30393,\n  0x45ea0e98,\n  0x57f11985,\n  0x59f8148e,\n  0x73c737bf,\n  0x7dce3ab4,\n  0x6fd52da9,\n  0x61dc20a2,\n  0xad766df6,\n  0xa37f60fd,\n  0xb16477e0,\n  0xbf6d7aeb,\n  0x955259da,\n  0x9b5b54d1,\n  0x894043cc,\n  0x87494ec7,\n  0xdd3e05ae,\n  0xd33708a5,\n  0xc12c1fb8,\n  0xcf2512b3,\n  0xe51a3182,\n  0xeb133c89,\n  0xf9082b94,\n  0xf701269f,\n  0x4de6bd46,\n  0x43efb04d,\n  0x51f4a750,\n  0x5ffdaa5b,\n  0x75c2896a,\n  0x7bcb8461,\n  0x69d0937c,\n  0x67d99e77,\n  0x3daed51e,\n  0x33a7d815,\n  0x21bccf08,\n  0x2fb5c203,\n  0x058ae132,\n  0x0b83ec39,\n  0x1998fb24,\n  0x1791f62f,\n  0x764dd68d,\n  0x7844db86,\n  0x6a5fcc9b,\n  0x6456c190,\n  0x4e69e2a1,\n  0x4060efaa,\n  0x527bf8b7,\n  0x5c72f5bc,\n  0x0605bed5,\n  0x080cb3de,\n  0x1a17a4c3,\n  0x141ea9c8,\n  0x3e218af9,\n  0x302887f2,\n  0x223390ef,\n  0x2c3a9de4,\n  0x96dd063d,\n  0x98d40b36,\n  0x8acf1c2b,\n  0x84c61120,\n  0xaef93211,\n  0xa0f03f1a,\n  0xb2eb2807,\n  0xbce2250c,\n  0xe6956e65,\n  0xe89c636e,\n  0xfa877473,\n  0xf48e7978,\n  0xdeb15a49,\n  0xd0b85742,\n  0xc2a3405f,\n  0xccaa4d54,\n  0x41ecdaf7,\n  0x4fe5d7fc,\n  0x5dfec0e1,\n  0x53f7cdea,\n  0x79c8eedb,\n  0x77c1e3d0,\n  0x65daf4cd,\n  0x6bd3f9c6,\n  0x31a4b2af,\n  0x3fadbfa4,\n  0x2db6a8b9,\n  0x23bfa5b2,\n  0x09808683,\n  0x07898b88,\n  0x15929c95,\n  0x1b9b919e,\n  0xa17c0a47,\n  0xaf75074c,\n  0xbd6e1051,\n  0xb3671d5a,\n  0x99583e6b,\n  0x97513360,\n  0x854a247d,\n  0x8b432976,\n  0xd134621f,\n  0xdf3d6f14,\n  0xcd267809,\n  0xc32f7502,\n  0xe9105633,\n  0xe7195b38,\n  0xf5024c25,\n  0xfb0b412e,\n  0x9ad7618c,\n  0x94de6c87,\n  0x86c57b9a,\n  0x88cc7691,\n  0xa2f355a0,\n  0xacfa58ab,\n  0xbee14fb6,\n  0xb0e842bd,\n  0xea9f09d4,\n  0xe49604df,\n  0xf68d13c2,\n  0xf8841ec9,\n  0xd2bb3df8,\n  0xdcb230f3,\n  0xcea927ee,\n  0xc0a02ae5,\n  0x7a47b13c,\n  0x744ebc37,\n  0x6655ab2a,\n  0x685ca621,\n  0x42638510,\n  0x4c6a881b,\n  0x5e719f06,\n  0x5078920d,\n  0x0a0fd964,\n  0x0406d46f,\n  0x161dc372,\n  0x1814ce79,\n  0x322bed48,\n  0x3c22e043,\n  0x2e39f75e,\n  0x2030fa55,\n  0xec9ab701,\n  0xe293ba0a,\n  0xf088ad17,\n  0xfe81a01c,\n  0xd4be832d,\n  0xdab78e26,\n  0xc8ac993b,\n  0xc6a59430,\n  0x9cd2df59,\n  0x92dbd252,\n  0x80c0c54f,\n  0x8ec9c844,\n  0xa4f6eb75,\n  0xaaffe67e,\n  0xb8e4f163,\n  0xb6edfc68,\n  0x0c0a67b1,\n  0x02036aba,\n  0x10187da7,\n  0x1e1170ac,\n  0x342e539d,\n  0x3a275e96,\n  0x283c498b,\n  0x26354480,\n  0x7c420fe9,\n  0x724b02e2,\n  0x605015ff,\n  0x6e5918f4,\n  0x44663bc5,\n  0x4a6f36ce,\n  0x587421d3,\n  0x567d2cd8,\n  0x37a10c7a,\n  0x39a80171,\n  0x2bb3166c,\n  0x25ba1b67,\n  0x0f853856,\n  0x018c355d,\n  0x13972240,\n  0x1d9e2f4b,\n  0x47e96422,\n  0x49e06929,\n  0x5bfb7e34,\n  0x55f2733f,\n  0x7fcd500e,\n  0x71c45d05,\n  0x63df4a18,\n  0x6dd64713,\n  0xd731dcca,\n  0xd938d1c1,\n  0xcb23c6dc,\n  0xc52acbd7,\n  0xef15e8e6,\n  0xe11ce5ed,\n  0xf307f2f0,\n  0xfd0efffb,\n  0xa779b492,\n  0xa970b999,\n  0xbb6bae84,\n  0xb562a38f,\n  0x9f5d80be,\n  0x91548db5,\n  0x834f9aa8,\n  0x8d4697a3\n ]);\n function expandKey256(cipherKey) {\n  var b = 240, result = new Uint8Array(b);\n  var r = 1;\n  result.set(cipherKey);\n  for (var j = 32, i = 1; j < b; ++i) {\n   if (j % 32 === 16) {\n    t1 = s[t1];\n    t2 = s[t2];\n    t3 = s[t3];\n    t4 = s[t4];\n   } else if (j % 32 === 0) {\n    var t1 = result[j - 3], t2 = result[j - 2], t3 = result[j - 1], t4 = result[j - 4];\n    t1 = s[t1];\n    t2 = s[t2];\n    t3 = s[t3];\n    t4 = s[t4];\n    t1 = t1 ^ r;\n    if ((r <<= 1) >= 256) {\n     r = (r ^ 0x1b) & 0xFF;\n    }\n   }\n   for (var n = 0; n < 4; ++n) {\n    result[j] = t1 ^= result[j - 32];\n    j++;\n    result[j] = t2 ^= result[j - 32];\n    j++;\n    result[j] = t3 ^= result[j - 32];\n    j++;\n    result[j] = t4 ^= result[j - 32];\n    j++;\n   }\n  }\n  return result;\n }\n function decrypt256(input, key) {\n  var state = new Uint8Array(16);\n  state.set(input);\n  var i, j, k;\n  var t, u, v;\n  for (j = 0, k = 224; j < 16; ++j, ++k) {\n   state[j] ^= key[k];\n  }\n  for (i = 13; i >= 1; --i) {\n   t = state[13];\n   state[13] = state[9];\n   state[9] = state[5];\n   state[5] = state[1];\n   state[1] = t;\n   t = state[14];\n   u = state[10];\n   state[14] = state[6];\n   state[10] = state[2];\n   state[6] = t;\n   state[2] = u;\n   t = state[15];\n   u = state[11];\n   v = state[7];\n   state[15] = state[3];\n   state[11] = t;\n   state[7] = u;\n   state[3] = v;\n   for (j = 0; j < 16; ++j) {\n    state[j] = inv_s[state[j]];\n   }\n   for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n    state[j] ^= key[k];\n   }\n   for (j = 0; j < 16; j += 4) {\n    var s0 = mix[state[j]], s1 = mix[state[j + 1]], s2 = mix[state[j + 2]], s3 = mix[state[j + 3]];\n    t = s0 ^ s1 >>> 8 ^ s1 << 24 ^ s2 >>> 16 ^ s2 << 16 ^ s3 >>> 24 ^ s3 << 8;\n    state[j] = t >>> 24 & 0xFF;\n    state[j + 1] = t >> 16 & 0xFF;\n    state[j + 2] = t >> 8 & 0xFF;\n    state[j + 3] = t & 0xFF;\n   }\n  }\n  t = state[13];\n  state[13] = state[9];\n  state[9] = state[5];\n  state[5] = state[1];\n  state[1] = t;\n  t = state[14];\n  u = state[10];\n  state[14] = state[6];\n  state[10] = state[2];\n  state[6] = t;\n  state[2] = u;\n  t = state[15];\n  u = state[11];\n  v = state[7];\n  state[15] = state[3];\n  state[11] = t;\n  state[7] = u;\n  state[3] = v;\n  for (j = 0; j < 16; ++j) {\n   state[j] = inv_s[state[j]];\n   state[j] ^= key[j];\n  }\n  return state;\n }\n function encrypt256(input, key) {\n  var t, u, v, k;\n  var state = new Uint8Array(16);\n  state.set(input);\n  for (j = 0; j < 16; ++j) {\n   state[j] ^= key[j];\n  }\n  for (i = 1; i < 14; i++) {\n   for (j = 0; j < 16; ++j) {\n    state[j] = s[state[j]];\n   }\n   v = state[1];\n   state[1] = state[5];\n   state[5] = state[9];\n   state[9] = state[13];\n   state[13] = v;\n   v = state[2];\n   u = state[6];\n   state[2] = state[10];\n   state[6] = state[14];\n   state[10] = v;\n   state[14] = u;\n   v = state[3];\n   u = state[7];\n   t = state[11];\n   state[3] = state[15];\n   state[7] = v;\n   state[11] = u;\n   state[15] = t;\n   for (var j = 0; j < 16; j += 4) {\n    var s0 = state[j + 0], s1 = state[j + 1];\n    var s2 = state[j + 2], s3 = state[j + 3];\n    t = s0 ^ s1 ^ s2 ^ s3;\n    state[j + 0] ^= t ^ mixCol[s0 ^ s1];\n    state[j + 1] ^= t ^ mixCol[s1 ^ s2];\n    state[j + 2] ^= t ^ mixCol[s2 ^ s3];\n    state[j + 3] ^= t ^ mixCol[s3 ^ s0];\n   }\n   for (j = 0, k = i * 16; j < 16; ++j, ++k) {\n    state[j] ^= key[k];\n   }\n  }\n  for (j = 0; j < 16; ++j) {\n   state[j] = s[state[j]];\n  }\n  v = state[1];\n  state[1] = state[5];\n  state[5] = state[9];\n  state[9] = state[13];\n  state[13] = v;\n  v = state[2];\n  u = state[6];\n  state[2] = state[10];\n  state[6] = state[14];\n  state[10] = v;\n  state[14] = u;\n  v = state[3];\n  u = state[7];\n  t = state[11];\n  state[3] = state[15];\n  state[7] = v;\n  state[11] = u;\n  state[15] = t;\n  for (j = 0, k = 224; j < 16; ++j, ++k) {\n   state[j] ^= key[k];\n  }\n  return state;\n }\n function AES256Cipher(key) {\n  this.key = expandKey256(key);\n  this.buffer = new Uint8Array(16);\n  this.bufferPosition = 0;\n }\n function decryptBlock2(data, finalize) {\n  var i, j, ii, sourceLength = data.length, buffer = this.buffer, bufferLength = this.bufferPosition, result = [], iv = this.iv;\n  for (i = 0; i < sourceLength; ++i) {\n   buffer[bufferLength] = data[i];\n   ++bufferLength;\n   if (bufferLength < 16) {\n    continue;\n   }\n   var plain = decrypt256(buffer, this.key);\n   for (j = 0; j < 16; ++j) {\n    plain[j] ^= iv[j];\n   }\n   iv = buffer;\n   result.push(plain);\n   buffer = new Uint8Array(16);\n   bufferLength = 0;\n  }\n  this.buffer = buffer;\n  this.bufferLength = bufferLength;\n  this.iv = iv;\n  if (result.length === 0) {\n   return new Uint8Array([]);\n  }\n  var outputLength = 16 * result.length;\n  if (finalize) {\n   var lastBlock = result[result.length - 1];\n   var psLen = lastBlock[15];\n   if (psLen <= 16) {\n    for (i = 15, ii = 16 - psLen; i >= ii; --i) {\n     if (lastBlock[i] !== psLen) {\n      psLen = 0;\n      break;\n     }\n    }\n    outputLength -= psLen;\n    result[result.length - 1] = lastBlock.subarray(0, 16 - psLen);\n   }\n  }\n  var output = new Uint8Array(outputLength);\n  for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n   output.set(result[i], j);\n  }\n  return output;\n }\n AES256Cipher.prototype = {\n  decryptBlock: function AES256Cipher_decryptBlock(data, finalize, iv) {\n   var i, sourceLength = data.length;\n   var buffer = this.buffer, bufferLength = this.bufferPosition;\n   if (iv) {\n    this.iv = iv;\n   } else {\n    for (i = 0; bufferLength < 16 && i < sourceLength; ++i, ++bufferLength) {\n     buffer[bufferLength] = data[i];\n    }\n    if (bufferLength < 16) {\n     this.bufferLength = bufferLength;\n     return new Uint8Array([]);\n    }\n    this.iv = buffer;\n    data = data.subarray(16);\n   }\n   this.buffer = new Uint8Array(16);\n   this.bufferLength = 0;\n   this.decryptBlock = decryptBlock2;\n   return this.decryptBlock(data, finalize);\n  },\n  encrypt: function AES256Cipher_encrypt(data, iv) {\n   var i, j, ii, sourceLength = data.length, buffer = this.buffer, bufferLength = this.bufferPosition, result = [];\n   if (!iv) {\n    iv = new Uint8Array(16);\n   }\n   for (i = 0; i < sourceLength; ++i) {\n    buffer[bufferLength] = data[i];\n    ++bufferLength;\n    if (bufferLength < 16) {\n     continue;\n    }\n    for (j = 0; j < 16; ++j) {\n     buffer[j] ^= iv[j];\n    }\n    var cipher = encrypt256(buffer, this.key);\n    this.iv = cipher;\n    result.push(cipher);\n    buffer = new Uint8Array(16);\n    bufferLength = 0;\n   }\n   this.buffer = buffer;\n   this.bufferLength = bufferLength;\n   this.iv = iv;\n   if (result.length === 0) {\n    return new Uint8Array([]);\n   }\n   var outputLength = 16 * result.length;\n   var output = new Uint8Array(outputLength);\n   for (i = 0, j = 0, ii = result.length; i < ii; ++i, j += 16) {\n    output.set(result[i], j);\n   }\n   return output;\n  }\n };\n return AES256Cipher;\n}();\nvar PDF17 = function PDF17Closure() {\n function compareByteArrays(array1, array2) {\n  if (array1.length !== array2.length) {\n   return false;\n  }\n  for (var i = 0; i < array1.length; i++) {\n   if (array1[i] !== array2[i]) {\n    return false;\n   }\n  }\n  return true;\n }\n function PDF17() {\n }\n PDF17.prototype = {\n  checkOwnerPassword: function PDF17_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n   var hashData = new Uint8Array(password.length + 56);\n   hashData.set(password, 0);\n   hashData.set(ownerValidationSalt, password.length);\n   hashData.set(userBytes, password.length + ownerValidationSalt.length);\n   var result = calculateSHA256(hashData, 0, hashData.length);\n   return compareByteArrays(result, ownerPassword);\n  },\n  checkUserPassword: function PDF17_checkUserPassword(password, userValidationSalt, userPassword) {\n   var hashData = new Uint8Array(password.length + 8);\n   hashData.set(password, 0);\n   hashData.set(userValidationSalt, password.length);\n   var result = calculateSHA256(hashData, 0, hashData.length);\n   return compareByteArrays(result, userPassword);\n  },\n  getOwnerKey: function PDF17_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n   var hashData = new Uint8Array(password.length + 56);\n   hashData.set(password, 0);\n   hashData.set(ownerKeySalt, password.length);\n   hashData.set(userBytes, password.length + ownerKeySalt.length);\n   var key = calculateSHA256(hashData, 0, hashData.length);\n   var cipher = new AES256Cipher(key);\n   return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n  },\n  getUserKey: function PDF17_getUserKey(password, userKeySalt, userEncryption) {\n   var hashData = new Uint8Array(password.length + 8);\n   hashData.set(password, 0);\n   hashData.set(userKeySalt, password.length);\n   var key = calculateSHA256(hashData, 0, hashData.length);\n   var cipher = new AES256Cipher(key);\n   return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n  }\n };\n return PDF17;\n}();\nvar PDF20 = function PDF20Closure() {\n function concatArrays(array1, array2) {\n  var t = new Uint8Array(array1.length + array2.length);\n  t.set(array1, 0);\n  t.set(array2, array1.length);\n  return t;\n }\n function calculatePDF20Hash(password, input, userBytes) {\n  var k = calculateSHA256(input, 0, input.length).subarray(0, 32);\n  var e = [0];\n  var i = 0;\n  while (i < 64 || e[e.length - 1] > i - 32) {\n   var arrayLength = password.length + k.length + userBytes.length;\n   var k1 = new Uint8Array(arrayLength * 64);\n   var array = concatArrays(password, k);\n   array = concatArrays(array, userBytes);\n   for (var j = 0, pos = 0; j < 64; j++, pos += arrayLength) {\n    k1.set(array, pos);\n   }\n   var cipher = new AES128Cipher(k.subarray(0, 16));\n   e = cipher.encrypt(k1, k.subarray(16, 32));\n   var remainder = 0;\n   for (var z = 0; z < 16; z++) {\n    remainder *= 256 % 3;\n    remainder %= 3;\n    remainder += (e[z] >>> 0) % 3;\n    remainder %= 3;\n   }\n   if (remainder === 0) {\n    k = calculateSHA256(e, 0, e.length);\n   } else if (remainder === 1) {\n    k = calculateSHA384(e, 0, e.length);\n   } else if (remainder === 2) {\n    k = calculateSHA512(e, 0, e.length);\n   }\n   i++;\n  }\n  return k.subarray(0, 32);\n }\n function PDF20() {\n }\n function compareByteArrays(array1, array2) {\n  if (array1.length !== array2.length) {\n   return false;\n  }\n  for (var i = 0; i < array1.length; i++) {\n   if (array1[i] !== array2[i]) {\n    return false;\n   }\n  }\n  return true;\n }\n PDF20.prototype = {\n  hash: function PDF20_hash(password, concatBytes, userBytes) {\n   return calculatePDF20Hash(password, concatBytes, userBytes);\n  },\n  checkOwnerPassword: function PDF20_checkOwnerPassword(password, ownerValidationSalt, userBytes, ownerPassword) {\n   var hashData = new Uint8Array(password.length + 56);\n   hashData.set(password, 0);\n   hashData.set(ownerValidationSalt, password.length);\n   hashData.set(userBytes, password.length + ownerValidationSalt.length);\n   var result = calculatePDF20Hash(password, hashData, userBytes);\n   return compareByteArrays(result, ownerPassword);\n  },\n  checkUserPassword: function PDF20_checkUserPassword(password, userValidationSalt, userPassword) {\n   var hashData = new Uint8Array(password.length + 8);\n   hashData.set(password, 0);\n   hashData.set(userValidationSalt, password.length);\n   var result = calculatePDF20Hash(password, hashData, []);\n   return compareByteArrays(result, userPassword);\n  },\n  getOwnerKey: function PDF20_getOwnerKey(password, ownerKeySalt, userBytes, ownerEncryption) {\n   var hashData = new Uint8Array(password.length + 56);\n   hashData.set(password, 0);\n   hashData.set(ownerKeySalt, password.length);\n   hashData.set(userBytes, password.length + ownerKeySalt.length);\n   var key = calculatePDF20Hash(password, hashData, userBytes);\n   var cipher = new AES256Cipher(key);\n   return cipher.decryptBlock(ownerEncryption, false, new Uint8Array(16));\n  },\n  getUserKey: function PDF20_getUserKey(password, userKeySalt, userEncryption) {\n   var hashData = new Uint8Array(password.length + 8);\n   hashData.set(password, 0);\n   hashData.set(userKeySalt, password.length);\n   var key = calculatePDF20Hash(password, hashData, []);\n   var cipher = new AES256Cipher(key);\n   return cipher.decryptBlock(userEncryption, false, new Uint8Array(16));\n  }\n };\n return PDF20;\n}();\nvar CipherTransform = function CipherTransformClosure() {\n function CipherTransform(stringCipherConstructor, streamCipherConstructor) {\n  this.StringCipherConstructor = stringCipherConstructor;\n  this.StreamCipherConstructor = streamCipherConstructor;\n }\n CipherTransform.prototype = {\n  createStream: function CipherTransform_createStream(stream, length) {\n   var cipher = new this.StreamCipherConstructor();\n   return new DecryptStream(stream, length, function cipherTransformDecryptStream(data, finalize) {\n    return cipher.decryptBlock(data, finalize);\n   });\n  },\n  decryptString: function CipherTransform_decryptString(s) {\n   var cipher = new this.StringCipherConstructor();\n   var data = stringToBytes(s);\n   data = cipher.decryptBlock(data, true);\n   return bytesToString(data);\n  }\n };\n return CipherTransform;\n}();\nvar CipherTransformFactory = function CipherTransformFactoryClosure() {\n var defaultPasswordBytes = new Uint8Array([\n  0x28,\n  0xBF,\n  0x4E,\n  0x5E,\n  0x4E,\n  0x75,\n  0x8A,\n  0x41,\n  0x64,\n  0x00,\n  0x4E,\n  0x56,\n  0xFF,\n  0xFA,\n  0x01,\n  0x08,\n  0x2E,\n  0x2E,\n  0x00,\n  0xB6,\n  0xD0,\n  0x68,\n  0x3E,\n  0x80,\n  0x2F,\n  0x0C,\n  0xA9,\n  0xFE,\n  0x64,\n  0x53,\n  0x69,\n  0x7A\n ]);\n function createEncryptionKey20(revision, password, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms) {\n  if (password) {\n   var passwordLength = Math.min(127, password.length);\n   password = password.subarray(0, passwordLength);\n  } else {\n   password = [];\n  }\n  var pdfAlgorithm;\n  if (revision === 6) {\n   pdfAlgorithm = new PDF20();\n  } else {\n   pdfAlgorithm = new PDF17();\n  }\n  if (pdfAlgorithm.checkUserPassword(password, userValidationSalt, userPassword)) {\n   return pdfAlgorithm.getUserKey(password, userKeySalt, userEncryption);\n  } else if (password.length && pdfAlgorithm.checkOwnerPassword(password, ownerValidationSalt, uBytes, ownerPassword)) {\n   return pdfAlgorithm.getOwnerKey(password, ownerKeySalt, uBytes, ownerEncryption);\n  }\n  return null;\n }\n function prepareKeyData(fileId, password, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata) {\n  var hashDataSize = 40 + ownerPassword.length + fileId.length;\n  var hashData = new Uint8Array(hashDataSize), i = 0, j, n;\n  if (password) {\n   n = Math.min(32, password.length);\n   for (; i < n; ++i) {\n    hashData[i] = password[i];\n   }\n  }\n  j = 0;\n  while (i < 32) {\n   hashData[i++] = defaultPasswordBytes[j++];\n  }\n  for (j = 0, n = ownerPassword.length; j < n; ++j) {\n   hashData[i++] = ownerPassword[j];\n  }\n  hashData[i++] = flags & 0xFF;\n  hashData[i++] = flags >> 8 & 0xFF;\n  hashData[i++] = flags >> 16 & 0xFF;\n  hashData[i++] = flags >>> 24 & 0xFF;\n  for (j = 0, n = fileId.length; j < n; ++j) {\n   hashData[i++] = fileId[j];\n  }\n  if (revision >= 4 && !encryptMetadata) {\n   hashData[i++] = 0xFF;\n   hashData[i++] = 0xFF;\n   hashData[i++] = 0xFF;\n   hashData[i++] = 0xFF;\n  }\n  var hash = calculateMD5(hashData, 0, i);\n  var keyLengthInBytes = keyLength >> 3;\n  if (revision >= 3) {\n   for (j = 0; j < 50; ++j) {\n    hash = calculateMD5(hash, 0, keyLengthInBytes);\n   }\n  }\n  var encryptionKey = hash.subarray(0, keyLengthInBytes);\n  var cipher, checkData;\n  if (revision >= 3) {\n   for (i = 0; i < 32; ++i) {\n    hashData[i] = defaultPasswordBytes[i];\n   }\n   for (j = 0, n = fileId.length; j < n; ++j) {\n    hashData[i++] = fileId[j];\n   }\n   cipher = new ARCFourCipher(encryptionKey);\n   checkData = cipher.encryptBlock(calculateMD5(hashData, 0, i));\n   n = encryptionKey.length;\n   var derivedKey = new Uint8Array(n), k;\n   for (j = 1; j <= 19; ++j) {\n    for (k = 0; k < n; ++k) {\n     derivedKey[k] = encryptionKey[k] ^ j;\n    }\n    cipher = new ARCFourCipher(derivedKey);\n    checkData = cipher.encryptBlock(checkData);\n   }\n   for (j = 0, n = checkData.length; j < n; ++j) {\n    if (userPassword[j] !== checkData[j]) {\n     return null;\n    }\n   }\n  } else {\n   cipher = new ARCFourCipher(encryptionKey);\n   checkData = cipher.encryptBlock(defaultPasswordBytes);\n   for (j = 0, n = checkData.length; j < n; ++j) {\n    if (userPassword[j] !== checkData[j]) {\n     return null;\n    }\n   }\n  }\n  return encryptionKey;\n }\n function decodeUserPassword(password, ownerPassword, revision, keyLength) {\n  var hashData = new Uint8Array(32), i = 0, j, n;\n  n = Math.min(32, password.length);\n  for (; i < n; ++i) {\n   hashData[i] = password[i];\n  }\n  j = 0;\n  while (i < 32) {\n   hashData[i++] = defaultPasswordBytes[j++];\n  }\n  var hash = calculateMD5(hashData, 0, i);\n  var keyLengthInBytes = keyLength >> 3;\n  if (revision >= 3) {\n   for (j = 0; j < 50; ++j) {\n    hash = calculateMD5(hash, 0, hash.length);\n   }\n  }\n  var cipher, userPassword;\n  if (revision >= 3) {\n   userPassword = ownerPassword;\n   var derivedKey = new Uint8Array(keyLengthInBytes), k;\n   for (j = 19; j >= 0; j--) {\n    for (k = 0; k < keyLengthInBytes; ++k) {\n     derivedKey[k] = hash[k] ^ j;\n    }\n    cipher = new ARCFourCipher(derivedKey);\n    userPassword = cipher.encryptBlock(userPassword);\n   }\n  } else {\n   cipher = new ARCFourCipher(hash.subarray(0, keyLengthInBytes));\n   userPassword = cipher.encryptBlock(ownerPassword);\n  }\n  return userPassword;\n }\n var identityName = Name.get('Identity');\n function CipherTransformFactory(dict, fileId, password) {\n  var filter = dict.get('Filter');\n  if (!isName(filter, 'Standard')) {\n   error('unknown encryption method');\n  }\n  this.dict = dict;\n  var algorithm = dict.get('V');\n  if (!isInt(algorithm) || algorithm !== 1 && algorithm !== 2 && algorithm !== 4 && algorithm !== 5) {\n   error('unsupported encryption algorithm');\n  }\n  this.algorithm = algorithm;\n  var keyLength = dict.get('Length');\n  if (!keyLength) {\n   if (algorithm <= 3) {\n    keyLength = 40;\n   } else {\n    var cfDict = dict.get('CF');\n    var streamCryptoName = dict.get('StmF');\n    if (isDict(cfDict) && isName(streamCryptoName)) {\n     cfDict.suppressEncryption = true;\n     var handlerDict = cfDict.get(streamCryptoName.name);\n     keyLength = handlerDict && handlerDict.get('Length') || 128;\n     if (keyLength < 40) {\n      keyLength <<= 3;\n     }\n    }\n   }\n  }\n  if (!isInt(keyLength) || keyLength < 40 || keyLength % 8 !== 0) {\n   error('invalid key length');\n  }\n  var ownerPassword = stringToBytes(dict.get('O')).subarray(0, 32);\n  var userPassword = stringToBytes(dict.get('U')).subarray(0, 32);\n  var flags = dict.get('P');\n  var revision = dict.get('R');\n  var encryptMetadata = (algorithm === 4 || algorithm === 5) && dict.get('EncryptMetadata') !== false;\n  this.encryptMetadata = encryptMetadata;\n  var fileIdBytes = stringToBytes(fileId);\n  var passwordBytes;\n  if (password) {\n   if (revision === 6) {\n    try {\n     password = utf8StringToString(password);\n    } catch (ex) {\n     warn('CipherTransformFactory: ' + 'Unable to convert UTF8 encoded password.');\n    }\n   }\n   passwordBytes = stringToBytes(password);\n  }\n  var encryptionKey;\n  if (algorithm !== 5) {\n   encryptionKey = prepareKeyData(fileIdBytes, passwordBytes, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n  } else {\n   var ownerValidationSalt = stringToBytes(dict.get('O')).subarray(32, 40);\n   var ownerKeySalt = stringToBytes(dict.get('O')).subarray(40, 48);\n   var uBytes = stringToBytes(dict.get('U')).subarray(0, 48);\n   var userValidationSalt = stringToBytes(dict.get('U')).subarray(32, 40);\n   var userKeySalt = stringToBytes(dict.get('U')).subarray(40, 48);\n   var ownerEncryption = stringToBytes(dict.get('OE'));\n   var userEncryption = stringToBytes(dict.get('UE'));\n   var perms = stringToBytes(dict.get('Perms'));\n   encryptionKey = createEncryptionKey20(revision, passwordBytes, ownerPassword, ownerValidationSalt, ownerKeySalt, uBytes, userPassword, userValidationSalt, userKeySalt, ownerEncryption, userEncryption, perms);\n  }\n  if (!encryptionKey && !password) {\n   throw new PasswordException('No password given', PasswordResponses.NEED_PASSWORD);\n  } else if (!encryptionKey && password) {\n   var decodedPassword = decodeUserPassword(passwordBytes, ownerPassword, revision, keyLength);\n   encryptionKey = prepareKeyData(fileIdBytes, decodedPassword, ownerPassword, userPassword, flags, revision, keyLength, encryptMetadata);\n  }\n  if (!encryptionKey) {\n   throw new PasswordException('Incorrect Password', PasswordResponses.INCORRECT_PASSWORD);\n  }\n  this.encryptionKey = encryptionKey;\n  if (algorithm >= 4) {\n   var cf = dict.get('CF');\n   if (isDict(cf)) {\n    cf.suppressEncryption = true;\n   }\n   this.cf = cf;\n   this.stmf = dict.get('StmF') || identityName;\n   this.strf = dict.get('StrF') || identityName;\n   this.eff = dict.get('EFF') || this.stmf;\n  }\n }\n function buildObjectKey(num, gen, encryptionKey, isAes) {\n  var key = new Uint8Array(encryptionKey.length + 9), i, n;\n  for (i = 0, n = encryptionKey.length; i < n; ++i) {\n   key[i] = encryptionKey[i];\n  }\n  key[i++] = num & 0xFF;\n  key[i++] = num >> 8 & 0xFF;\n  key[i++] = num >> 16 & 0xFF;\n  key[i++] = gen & 0xFF;\n  key[i++] = gen >> 8 & 0xFF;\n  if (isAes) {\n   key[i++] = 0x73;\n   key[i++] = 0x41;\n   key[i++] = 0x6C;\n   key[i++] = 0x54;\n  }\n  var hash = calculateMD5(key, 0, i);\n  return hash.subarray(0, Math.min(encryptionKey.length + 5, 16));\n }\n function buildCipherConstructor(cf, name, num, gen, key) {\n  assert(isName(name), 'Invalid crypt filter name.');\n  var cryptFilter = cf.get(name.name);\n  var cfm;\n  if (cryptFilter !== null && cryptFilter !== undefined) {\n   cfm = cryptFilter.get('CFM');\n  }\n  if (!cfm || cfm.name === 'None') {\n   return function cipherTransformFactoryBuildCipherConstructorNone() {\n    return new NullCipher();\n   };\n  }\n  if (cfm.name === 'V2') {\n   return function cipherTransformFactoryBuildCipherConstructorV2() {\n    return new ARCFourCipher(buildObjectKey(num, gen, key, false));\n   };\n  }\n  if (cfm.name === 'AESV2') {\n   return function cipherTransformFactoryBuildCipherConstructorAESV2() {\n    return new AES128Cipher(buildObjectKey(num, gen, key, true));\n   };\n  }\n  if (cfm.name === 'AESV3') {\n   return function cipherTransformFactoryBuildCipherConstructorAESV3() {\n    return new AES256Cipher(key);\n   };\n  }\n  error('Unknown crypto method');\n }\n CipherTransformFactory.prototype = {\n  createCipherTransform: function CipherTransformFactory_createCipherTransform(num, gen) {\n   if (this.algorithm === 4 || this.algorithm === 5) {\n    return new CipherTransform(buildCipherConstructor(this.cf, this.stmf, num, gen, this.encryptionKey), buildCipherConstructor(this.cf, this.strf, num, gen, this.encryptionKey));\n   }\n   var key = buildObjectKey(num, gen, this.encryptionKey, false);\n   var cipherConstructor = function buildCipherCipherConstructor() {\n    return new ARCFourCipher(key);\n   };\n   return new CipherTransform(cipherConstructor, cipherConstructor);\n  }\n };\n return CipherTransformFactory;\n}();\nexports.AES128Cipher = AES128Cipher;\nexports.AES256Cipher = AES256Cipher;\nexports.ARCFourCipher = ARCFourCipher;\nexports.CipherTransformFactory = CipherTransformFactory;\nexports.PDF17 = PDF17;\nexports.PDF20 = PDF20;\nexports.calculateMD5 = calculateMD5;\nexports.calculateSHA256 = calculateSHA256;\nexports.calculateSHA384 = calculateSHA384;\nexports.calculateSHA512 = calculateSHA512;\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar coreStream = __w_pdfjs_require__(2);\nvar coreParser = __w_pdfjs_require__(5);\nvar coreImage = __w_pdfjs_require__(27);\nvar coreColorSpace = __w_pdfjs_require__(3);\nvar coreMurmurHash3 = __w_pdfjs_require__(31);\nvar coreFonts = __w_pdfjs_require__(26);\nvar coreFunction = __w_pdfjs_require__(6);\nvar corePattern = __w_pdfjs_require__(32);\nvar coreCMap = __w_pdfjs_require__(23);\nvar coreMetrics = __w_pdfjs_require__(30);\nvar coreBidi = __w_pdfjs_require__(21);\nvar coreEncodings = __w_pdfjs_require__(4);\nvar coreStandardFonts = __w_pdfjs_require__(17);\nvar coreUnicode = __w_pdfjs_require__(18);\nvar coreGlyphList = __w_pdfjs_require__(7);\nvar FONT_IDENTITY_MATRIX = sharedUtil.FONT_IDENTITY_MATRIX;\nvar IDENTITY_MATRIX = sharedUtil.IDENTITY_MATRIX;\nvar UNSUPPORTED_FEATURES = sharedUtil.UNSUPPORTED_FEATURES;\nvar ImageKind = sharedUtil.ImageKind;\nvar OPS = sharedUtil.OPS;\nvar TextRenderingMode = sharedUtil.TextRenderingMode;\nvar CMapCompressionType = sharedUtil.CMapCompressionType;\nvar Util = sharedUtil.Util;\nvar assert = sharedUtil.assert;\nvar createPromiseCapability = sharedUtil.createPromiseCapability;\nvar error = sharedUtil.error;\nvar info = sharedUtil.info;\nvar isArray = sharedUtil.isArray;\nvar isNum = sharedUtil.isNum;\nvar isString = sharedUtil.isString;\nvar getLookupTableFactory = sharedUtil.getLookupTableFactory;\nvar warn = sharedUtil.warn;\nvar Dict = corePrimitives.Dict;\nvar Name = corePrimitives.Name;\nvar isEOF = corePrimitives.isEOF;\nvar isCmd = corePrimitives.isCmd;\nvar isDict = corePrimitives.isDict;\nvar isName = corePrimitives.isName;\nvar isRef = corePrimitives.isRef;\nvar isStream = corePrimitives.isStream;\nvar DecodeStream = coreStream.DecodeStream;\nvar JpegStream = coreStream.JpegStream;\nvar Stream = coreStream.Stream;\nvar Lexer = coreParser.Lexer;\nvar Parser = coreParser.Parser;\nvar PDFImage = coreImage.PDFImage;\nvar ColorSpace = coreColorSpace.ColorSpace;\nvar MurmurHash3_64 = coreMurmurHash3.MurmurHash3_64;\nvar ErrorFont = coreFonts.ErrorFont;\nvar FontFlags = coreFonts.FontFlags;\nvar Font = coreFonts.Font;\nvar IdentityToUnicodeMap = coreFonts.IdentityToUnicodeMap;\nvar ToUnicodeMap = coreFonts.ToUnicodeMap;\nvar getFontType = coreFonts.getFontType;\nvar isPDFFunction = coreFunction.isPDFFunction;\nvar PDFFunction = coreFunction.PDFFunction;\nvar Pattern = corePattern.Pattern;\nvar getTilingPatternIR = corePattern.getTilingPatternIR;\nvar CMapFactory = coreCMap.CMapFactory;\nvar IdentityCMap = coreCMap.IdentityCMap;\nvar getMetrics = coreMetrics.getMetrics;\nvar bidi = coreBidi.bidi;\nvar WinAnsiEncoding = coreEncodings.WinAnsiEncoding;\nvar StandardEncoding = coreEncodings.StandardEncoding;\nvar MacRomanEncoding = coreEncodings.MacRomanEncoding;\nvar SymbolSetEncoding = coreEncodings.SymbolSetEncoding;\nvar ZapfDingbatsEncoding = coreEncodings.ZapfDingbatsEncoding;\nvar getEncoding = coreEncodings.getEncoding;\nvar getStdFontMap = coreStandardFonts.getStdFontMap;\nvar getSerifFonts = coreStandardFonts.getSerifFonts;\nvar getSymbolsFonts = coreStandardFonts.getSymbolsFonts;\nvar getNormalizedUnicodes = coreUnicode.getNormalizedUnicodes;\nvar reverseIfRtl = coreUnicode.reverseIfRtl;\nvar getUnicodeForGlyph = coreUnicode.getUnicodeForGlyph;\nvar getGlyphsUnicode = coreGlyphList.getGlyphsUnicode;\nvar PartialEvaluator = function PartialEvaluatorClosure() {\n var DefaultPartialEvaluatorOptions = {\n  forceDataSchema: false,\n  maxImageSize: -1,\n  disableFontFace: false,\n  disableNativeImageDecoder: false\n };\n function NativeImageDecoder(xref, resources, handler, forceDataSchema) {\n  this.xref = xref;\n  this.resources = resources;\n  this.handler = handler;\n  this.forceDataSchema = forceDataSchema;\n }\n NativeImageDecoder.prototype = {\n  canDecode: function (image) {\n   return image instanceof JpegStream && NativeImageDecoder.isDecodable(image, this.xref, this.resources);\n  },\n  decode: function (image) {\n   var dict = image.dict;\n   var colorSpace = dict.get('ColorSpace', 'CS');\n   colorSpace = ColorSpace.parse(colorSpace, this.xref, this.resources);\n   var numComps = colorSpace.numComps;\n   var decodePromise = this.handler.sendWithPromise('JpegDecode', [\n    image.getIR(this.forceDataSchema),\n    numComps\n   ]);\n   return decodePromise.then(function (message) {\n    var data = message.data;\n    return new Stream(data, 0, data.length, image.dict);\n   });\n  }\n };\n NativeImageDecoder.isSupported = function NativeImageDecoder_isSupported(image, xref, res) {\n  var dict = image.dict;\n  if (dict.has('DecodeParms') || dict.has('DP')) {\n   return false;\n  }\n  var cs = ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res);\n  return (cs.name === 'DeviceGray' || cs.name === 'DeviceRGB') && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n };\n NativeImageDecoder.isDecodable = function NativeImageDecoder_isDecodable(image, xref, res) {\n  var dict = image.dict;\n  if (dict.has('DecodeParms') || dict.has('DP')) {\n   return false;\n  }\n  var cs = ColorSpace.parse(dict.get('ColorSpace', 'CS'), xref, res);\n  return (cs.numComps === 1 || cs.numComps === 3) && cs.isDefaultDecode(dict.getArray('Decode', 'D'));\n };\n function PartialEvaluator(pdfManager, xref, handler, pageIndex, idFactory, fontCache, builtInCMapCache, options) {\n  this.pdfManager = pdfManager;\n  this.xref = xref;\n  this.handler = handler;\n  this.pageIndex = pageIndex;\n  this.idFactory = idFactory;\n  this.fontCache = fontCache;\n  this.builtInCMapCache = builtInCMapCache;\n  this.options = options || DefaultPartialEvaluatorOptions;\n  this.fetchBuiltInCMap = function (name) {\n   var cachedCMap = builtInCMapCache[name];\n   if (cachedCMap) {\n    return Promise.resolve(cachedCMap);\n   }\n   return handler.sendWithPromise('FetchBuiltInCMap', { name: name }).then(function (data) {\n    if (data.compressionType !== CMapCompressionType.NONE) {\n     builtInCMapCache[name] = data;\n    }\n    return data;\n   });\n  };\n }\n var TIME_SLOT_DURATION_MS = 20;\n var CHECK_TIME_EVERY = 100;\n function TimeSlotManager() {\n  this.reset();\n }\n TimeSlotManager.prototype = {\n  check: function TimeSlotManager_check() {\n   if (++this.checked < CHECK_TIME_EVERY) {\n    return false;\n   }\n   this.checked = 0;\n   return this.endTime <= Date.now();\n  },\n  reset: function TimeSlotManager_reset() {\n   this.endTime = Date.now() + TIME_SLOT_DURATION_MS;\n   this.checked = 0;\n  }\n };\n var deferred = Promise.resolve();\n var TILING_PATTERN = 1, SHADING_PATTERN = 2;\n PartialEvaluator.prototype = {\n  hasBlendModes: function PartialEvaluator_hasBlendModes(resources) {\n   if (!isDict(resources)) {\n    return false;\n   }\n   var processed = Object.create(null);\n   if (resources.objId) {\n    processed[resources.objId] = true;\n   }\n   var nodes = [resources], xref = this.xref;\n   while (nodes.length) {\n    var key, i, ii;\n    var node = nodes.shift();\n    var graphicStates = node.get('ExtGState');\n    if (isDict(graphicStates)) {\n     var graphicStatesKeys = graphicStates.getKeys();\n     for (i = 0, ii = graphicStatesKeys.length; i < ii; i++) {\n      key = graphicStatesKeys[i];\n      var graphicState = graphicStates.get(key);\n      var bm = graphicState.get('BM');\n      if (isName(bm) && bm.name !== 'Normal') {\n       return true;\n      }\n     }\n    }\n    var xObjects = node.get('XObject');\n    if (!isDict(xObjects)) {\n     continue;\n    }\n    var xObjectsKeys = xObjects.getKeys();\n    for (i = 0, ii = xObjectsKeys.length; i < ii; i++) {\n     key = xObjectsKeys[i];\n     var xObject = xObjects.getRaw(key);\n     if (isRef(xObject)) {\n      if (processed[xObject.toString()]) {\n       continue;\n      }\n      xObject = xref.fetch(xObject);\n     }\n     if (!isStream(xObject)) {\n      continue;\n     }\n     if (xObject.dict.objId) {\n      if (processed[xObject.dict.objId]) {\n       continue;\n      }\n      processed[xObject.dict.objId] = true;\n     }\n     var xResources = xObject.dict.get('Resources');\n     if (isDict(xResources) && (!xResources.objId || !processed[xResources.objId])) {\n      nodes.push(xResources);\n      if (xResources.objId) {\n       processed[xResources.objId] = true;\n      }\n     }\n    }\n   }\n   return false;\n  },\n  buildFormXObject: function PartialEvaluator_buildFormXObject(resources, xobj, smask, operatorList, task, initialState) {\n   var matrix = xobj.dict.getArray('Matrix');\n   var bbox = xobj.dict.getArray('BBox');\n   var group = xobj.dict.get('Group');\n   if (group) {\n    var groupOptions = {\n     matrix: matrix,\n     bbox: bbox,\n     smask: smask,\n     isolated: false,\n     knockout: false\n    };\n    var groupSubtype = group.get('S');\n    var colorSpace;\n    if (isName(groupSubtype, 'Transparency')) {\n     groupOptions.isolated = group.get('I') || false;\n     groupOptions.knockout = group.get('K') || false;\n     colorSpace = group.has('CS') ? ColorSpace.parse(group.get('CS'), this.xref, resources) : null;\n    }\n    if (smask && smask.backdrop) {\n     colorSpace = colorSpace || ColorSpace.singletons.rgb;\n     smask.backdrop = colorSpace.getRgb(smask.backdrop, 0);\n    }\n    operatorList.addOp(OPS.beginGroup, [groupOptions]);\n   }\n   operatorList.addOp(OPS.paintFormXObjectBegin, [\n    matrix,\n    bbox\n   ]);\n   return this.getOperatorList(xobj, task, xobj.dict.get('Resources') || resources, operatorList, initialState).then(function () {\n    operatorList.addOp(OPS.paintFormXObjectEnd, []);\n    if (group) {\n     operatorList.addOp(OPS.endGroup, [groupOptions]);\n    }\n   });\n  },\n  buildPaintImageXObject: function PartialEvaluator_buildPaintImageXObject(resources, image, inline, operatorList, cacheKey, imageCache) {\n   var self = this;\n   var dict = image.dict;\n   var w = dict.get('Width', 'W');\n   var h = dict.get('Height', 'H');\n   if (!(w && isNum(w)) || !(h && isNum(h))) {\n    warn('Image dimensions are missing, or not numbers.');\n    return;\n   }\n   var maxImageSize = this.options.maxImageSize;\n   if (maxImageSize !== -1 && w * h > maxImageSize) {\n    warn('Image exceeded maximum allowed size and was removed.');\n    return;\n   }\n   var imageMask = dict.get('ImageMask', 'IM') || false;\n   var imgData, args;\n   if (imageMask) {\n    var width = dict.get('Width', 'W');\n    var height = dict.get('Height', 'H');\n    var bitStrideLength = width + 7 >> 3;\n    var imgArray = image.getBytes(bitStrideLength * height);\n    var decode = dict.getArray('Decode', 'D');\n    var inverseDecode = !!decode && decode[0] > 0;\n    imgData = PDFImage.createMask(imgArray, width, height, image instanceof DecodeStream, inverseDecode);\n    imgData.cached = true;\n    args = [imgData];\n    operatorList.addOp(OPS.paintImageMaskXObject, args);\n    if (cacheKey) {\n     imageCache[cacheKey] = {\n      fn: OPS.paintImageMaskXObject,\n      args: args\n     };\n    }\n    return;\n   }\n   var softMask = dict.get('SMask', 'SM') || false;\n   var mask = dict.get('Mask') || false;\n   var SMALL_IMAGE_DIMENSIONS = 200;\n   if (inline && !softMask && !mask && !(image instanceof JpegStream) && w + h < SMALL_IMAGE_DIMENSIONS) {\n    var imageObj = new PDFImage(this.xref, resources, image, inline, null, null);\n    imgData = imageObj.createImageData(true);\n    operatorList.addOp(OPS.paintInlineImageXObject, [imgData]);\n    return;\n   }\n   var useNativeImageDecoder = !this.options.disableNativeImageDecoder;\n   var objId = 'img_' + this.idFactory.createObjId();\n   operatorList.addDependency(objId);\n   args = [\n    objId,\n    w,\n    h\n   ];\n   if (useNativeImageDecoder && !softMask && !mask && image instanceof JpegStream && NativeImageDecoder.isSupported(image, this.xref, resources)) {\n    operatorList.addOp(OPS.paintJpegXObject, args);\n    this.handler.send('obj', [\n     objId,\n     this.pageIndex,\n     'JpegStream',\n     image.getIR(this.options.forceDataSchema)\n    ]);\n    return;\n   }\n   var nativeImageDecoder = null;\n   if (useNativeImageDecoder && (image instanceof JpegStream || mask instanceof JpegStream || softMask instanceof JpegStream)) {\n    nativeImageDecoder = new NativeImageDecoder(self.xref, resources, self.handler, self.options.forceDataSchema);\n   }\n   PDFImage.buildImage(self.handler, self.xref, resources, image, inline, nativeImageDecoder).then(function (imageObj) {\n    var imgData = imageObj.createImageData(false);\n    self.handler.send('obj', [\n     objId,\n     self.pageIndex,\n     'Image',\n     imgData\n    ], [imgData.data.buffer]);\n   }).then(undefined, function (reason) {\n    warn('Unable to decode image: ' + reason);\n    self.handler.send('obj', [\n     objId,\n     self.pageIndex,\n     'Image',\n     null\n    ]);\n   });\n   operatorList.addOp(OPS.paintImageXObject, args);\n   if (cacheKey) {\n    imageCache[cacheKey] = {\n     fn: OPS.paintImageXObject,\n     args: args\n    };\n   }\n  },\n  handleSMask: function PartialEvaluator_handleSmask(smask, resources, operatorList, task, stateManager) {\n   var smaskContent = smask.get('G');\n   var smaskOptions = {\n    subtype: smask.get('S').name,\n    backdrop: smask.get('BC')\n   };\n   var transferObj = smask.get('TR');\n   if (isPDFFunction(transferObj)) {\n    var transferFn = PDFFunction.parse(this.xref, transferObj);\n    var transferMap = new Uint8Array(256);\n    var tmp = new Float32Array(1);\n    for (var i = 0; i < 256; i++) {\n     tmp[0] = i / 255;\n     transferFn(tmp, 0, tmp, 0);\n     transferMap[i] = tmp[0] * 255 | 0;\n    }\n    smaskOptions.transferMap = transferMap;\n   }\n   return this.buildFormXObject(resources, smaskContent, smaskOptions, operatorList, task, stateManager.state.clone());\n  },\n  handleTilingType: function PartialEvaluator_handleTilingType(fn, args, resources, pattern, patternDict, operatorList, task) {\n   var tilingOpList = new OperatorList();\n   var resourcesArray = [\n    patternDict.get('Resources'),\n    resources\n   ];\n   var patternResources = Dict.merge(this.xref, resourcesArray);\n   return this.getOperatorList(pattern, task, patternResources, tilingOpList).then(function () {\n    operatorList.addDependencies(tilingOpList.dependencies);\n    operatorList.addOp(fn, getTilingPatternIR({\n     fnArray: tilingOpList.fnArray,\n     argsArray: tilingOpList.argsArray\n    }, patternDict, args));\n   });\n  },\n  handleSetFont: function PartialEvaluator_handleSetFont(resources, fontArgs, fontRef, operatorList, task, state) {\n   var fontName;\n   if (fontArgs) {\n    fontArgs = fontArgs.slice();\n    fontName = fontArgs[0].name;\n   }\n   var self = this;\n   return this.loadFont(fontName, fontRef, this.xref, resources).then(function (translated) {\n    if (!translated.font.isType3Font) {\n     return translated;\n    }\n    return translated.loadType3Data(self, resources, operatorList, task).then(function () {\n     return translated;\n    }, function (reason) {\n     self.handler.send('UnsupportedFeature', { featureId: UNSUPPORTED_FEATURES.font });\n     return new TranslatedFont('g_font_error', new ErrorFont('Type3 font load error: ' + reason), translated.font);\n    });\n   }).then(function (translated) {\n    state.font = translated.font;\n    translated.send(self.handler);\n    return translated.loadedName;\n   });\n  },\n  handleText: function PartialEvaluator_handleText(chars, state) {\n   var font = state.font;\n   var glyphs = font.charsToGlyphs(chars);\n   var isAddToPathSet = !!(state.textRenderingMode & TextRenderingMode.ADD_TO_PATH_FLAG);\n   if (font.data && (isAddToPathSet || this.options.disableFontFace)) {\n    var buildPath = function (fontChar) {\n     if (!font.renderer.hasBuiltPath(fontChar)) {\n      var path = font.renderer.getPathJs(fontChar);\n      this.handler.send('commonobj', [\n       font.loadedName + '_path_' + fontChar,\n       'FontPath',\n       path\n      ]);\n     }\n    }.bind(this);\n    for (var i = 0, ii = glyphs.length; i < ii; i++) {\n     var glyph = glyphs[i];\n     buildPath(glyph.fontChar);\n     var accent = glyph.accent;\n     if (accent && accent.fontChar) {\n      buildPath(accent.fontChar);\n     }\n    }\n   }\n   return glyphs;\n  },\n  setGState: function PartialEvaluator_setGState(resources, gState, operatorList, task, xref, stateManager) {\n   var gStateObj = [];\n   var gStateKeys = gState.getKeys();\n   var self = this;\n   var promise = Promise.resolve();\n   for (var i = 0, ii = gStateKeys.length; i < ii; i++) {\n    var key = gStateKeys[i];\n    var value = gState.get(key);\n    switch (key) {\n    case 'Type':\n     break;\n    case 'LW':\n    case 'LC':\n    case 'LJ':\n    case 'ML':\n    case 'D':\n    case 'RI':\n    case 'FL':\n    case 'CA':\n    case 'ca':\n     gStateObj.push([\n      key,\n      value\n     ]);\n     break;\n    case 'Font':\n     promise = promise.then(function () {\n      return self.handleSetFont(resources, null, value[0], operatorList, task, stateManager.state).then(function (loadedName) {\n       operatorList.addDependency(loadedName);\n       gStateObj.push([\n        key,\n        [\n         loadedName,\n         value[1]\n        ]\n       ]);\n      });\n     });\n     break;\n    case 'BM':\n     gStateObj.push([\n      key,\n      value\n     ]);\n     break;\n    case 'SMask':\n     if (isName(value, 'None')) {\n      gStateObj.push([\n       key,\n       false\n      ]);\n      break;\n     }\n     if (isDict(value)) {\n      promise = promise.then(function (dict) {\n       return self.handleSMask(dict, resources, operatorList, task, stateManager);\n      }.bind(this, value));\n      gStateObj.push([\n       key,\n       true\n      ]);\n     } else {\n      warn('Unsupported SMask type');\n     }\n     break;\n    case 'OP':\n    case 'op':\n    case 'OPM':\n    case 'BG':\n    case 'BG2':\n    case 'UCR':\n    case 'UCR2':\n    case 'TR':\n    case 'TR2':\n    case 'HT':\n    case 'SM':\n    case 'SA':\n    case 'AIS':\n    case 'TK':\n     info('graphic state operator ' + key);\n     break;\n    default:\n     info('Unknown graphic state operator ' + key);\n     break;\n    }\n   }\n   return promise.then(function () {\n    if (gStateObj.length > 0) {\n     operatorList.addOp(OPS.setGState, [gStateObj]);\n    }\n   });\n  },\n  loadFont: function PartialEvaluator_loadFont(fontName, font, xref, resources) {\n   function errorFont() {\n    return Promise.resolve(new TranslatedFont('g_font_error', new ErrorFont('Font ' + fontName + ' is not available'), font));\n   }\n   var fontRef;\n   if (font) {\n    assert(isRef(font));\n    fontRef = font;\n   } else {\n    var fontRes = resources.get('Font');\n    if (fontRes) {\n     fontRef = fontRes.getRaw(fontName);\n    } else {\n     warn('fontRes not available');\n     return errorFont();\n    }\n   }\n   if (!fontRef) {\n    warn('fontRef not available');\n    return errorFont();\n   }\n   if (this.fontCache.has(fontRef)) {\n    return this.fontCache.get(fontRef);\n   }\n   font = xref.fetchIfRef(fontRef);\n   if (!isDict(font)) {\n    return errorFont();\n   }\n   if (font.translated) {\n    return font.translated;\n   }\n   var fontCapability = createPromiseCapability();\n   var preEvaluatedFont = this.preEvaluateFont(font, xref);\n   var descriptor = preEvaluatedFont.descriptor;\n   var fontRefIsRef = isRef(fontRef), fontID;\n   if (fontRefIsRef) {\n    fontID = fontRef.toString();\n   }\n   if (isDict(descriptor)) {\n    if (!descriptor.fontAliases) {\n     descriptor.fontAliases = Object.create(null);\n    }\n    var fontAliases = descriptor.fontAliases;\n    var hash = preEvaluatedFont.hash;\n    if (fontAliases[hash]) {\n     var aliasFontRef = fontAliases[hash].aliasRef;\n     if (fontRefIsRef && aliasFontRef && this.fontCache.has(aliasFontRef)) {\n      this.fontCache.putAlias(fontRef, aliasFontRef);\n      return this.fontCache.get(fontRef);\n     }\n    } else {\n     fontAliases[hash] = { fontID: Font.getFontID() };\n    }\n    if (fontRefIsRef) {\n     fontAliases[hash].aliasRef = fontRef;\n    }\n    fontID = fontAliases[hash].fontID;\n   }\n   if (fontRefIsRef) {\n    this.fontCache.put(fontRef, fontCapability.promise);\n   } else {\n    if (!fontID) {\n     fontID = this.idFactory.createObjId();\n    }\n    this.fontCache.put('id_' + fontID, fontCapability.promise);\n   }\n   assert(fontID, 'The \"fontID\" must be defined.');\n   font.loadedName = 'g_' + this.pdfManager.docId + '_f' + fontID;\n   font.translated = fontCapability.promise;\n   var translatedPromise;\n   try {\n    translatedPromise = this.translateFont(preEvaluatedFont, xref);\n   } catch (e) {\n    translatedPromise = Promise.reject(e);\n   }\n   var self = this;\n   translatedPromise.then(function (translatedFont) {\n    if (translatedFont.fontType !== undefined) {\n     var xrefFontStats = xref.stats.fontTypes;\n     xrefFontStats[translatedFont.fontType] = true;\n    }\n    fontCapability.resolve(new TranslatedFont(font.loadedName, translatedFont, font));\n   }, function (reason) {\n    self.handler.send('UnsupportedFeature', { featureId: UNSUPPORTED_FEATURES.font });\n    try {\n     var descriptor = preEvaluatedFont.descriptor;\n     var fontFile3 = descriptor && descriptor.get('FontFile3');\n     var subtype = fontFile3 && fontFile3.get('Subtype');\n     var fontType = getFontType(preEvaluatedFont.type, subtype && subtype.name);\n     var xrefFontStats = xref.stats.fontTypes;\n     xrefFontStats[fontType] = true;\n    } catch (ex) {\n    }\n    fontCapability.resolve(new TranslatedFont(font.loadedName, new ErrorFont(reason instanceof Error ? reason.message : reason), font));\n   });\n   return fontCapability.promise;\n  },\n  buildPath: function PartialEvaluator_buildPath(operatorList, fn, args) {\n   var lastIndex = operatorList.length - 1;\n   if (!args) {\n    args = [];\n   }\n   if (lastIndex < 0 || operatorList.fnArray[lastIndex] !== OPS.constructPath) {\n    operatorList.addOp(OPS.constructPath, [\n     [fn],\n     args\n    ]);\n   } else {\n    var opArgs = operatorList.argsArray[lastIndex];\n    opArgs[0].push(fn);\n    Array.prototype.push.apply(opArgs[1], args);\n   }\n  },\n  handleColorN: function PartialEvaluator_handleColorN(operatorList, fn, args, cs, patterns, resources, task, xref) {\n   var patternName = args[args.length - 1];\n   var pattern;\n   if (isName(patternName) && (pattern = patterns.get(patternName.name))) {\n    var dict = isStream(pattern) ? pattern.dict : pattern;\n    var typeNum = dict.get('PatternType');\n    if (typeNum === TILING_PATTERN) {\n     var color = cs.base ? cs.base.getRgb(args, 0) : null;\n     return this.handleTilingType(fn, color, resources, pattern, dict, operatorList, task);\n    } else if (typeNum === SHADING_PATTERN) {\n     var shading = dict.get('Shading');\n     var matrix = dict.getArray('Matrix');\n     pattern = Pattern.parseShading(shading, matrix, xref, resources, this.handler);\n     operatorList.addOp(fn, pattern.getIR());\n     return Promise.resolve();\n    }\n    return Promise.reject('Unknown PatternType: ' + typeNum);\n   }\n   operatorList.addOp(fn, args);\n   return Promise.resolve();\n  },\n  getOperatorList: function PartialEvaluator_getOperatorList(stream, task, resources, operatorList, initialState) {\n   var self = this;\n   var xref = this.xref;\n   var imageCache = Object.create(null);\n   assert(operatorList);\n   resources = resources || Dict.empty;\n   var xobjs = resources.get('XObject') || Dict.empty;\n   var patterns = resources.get('Pattern') || Dict.empty;\n   var stateManager = new StateManager(initialState || new EvalState());\n   var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n   var timeSlotManager = new TimeSlotManager();\n   return new Promise(function promiseBody(resolve, reject) {\n    var next = function (promise) {\n     promise.then(function () {\n      try {\n       promiseBody(resolve, reject);\n      } catch (ex) {\n       reject(ex);\n      }\n     }, reject);\n    };\n    task.ensureNotTerminated();\n    timeSlotManager.reset();\n    var stop, operation = {}, i, ii, cs;\n    while (!(stop = timeSlotManager.check())) {\n     operation.args = null;\n     if (!preprocessor.read(operation)) {\n      break;\n     }\n     var args = operation.args;\n     var fn = operation.fn;\n     switch (fn | 0) {\n     case OPS.paintXObject:\n      if (args[0].code) {\n       break;\n      }\n      var name = args[0].name;\n      if (!name) {\n       warn('XObject must be referred to by name.');\n       continue;\n      }\n      if (imageCache[name] !== undefined) {\n       operatorList.addOp(imageCache[name].fn, imageCache[name].args);\n       args = null;\n       continue;\n      }\n      var xobj = xobjs.get(name);\n      if (xobj) {\n       assert(isStream(xobj), 'XObject should be a stream');\n       var type = xobj.dict.get('Subtype');\n       assert(isName(type), 'XObject should have a Name subtype');\n       if (type.name === 'Form') {\n        stateManager.save();\n        next(self.buildFormXObject(resources, xobj, null, operatorList, task, stateManager.state.clone()).then(function () {\n         stateManager.restore();\n        }));\n        return;\n       } else if (type.name === 'Image') {\n        self.buildPaintImageXObject(resources, xobj, false, operatorList, name, imageCache);\n        args = null;\n        continue;\n       } else if (type.name === 'PS') {\n        info('Ignored XObject subtype PS');\n        continue;\n       } else {\n        error('Unhandled XObject subtype ' + type.name);\n       }\n      }\n      break;\n     case OPS.setFont:\n      var fontSize = args[1];\n      next(self.handleSetFont(resources, args, null, operatorList, task, stateManager.state).then(function (loadedName) {\n       operatorList.addDependency(loadedName);\n       operatorList.addOp(OPS.setFont, [\n        loadedName,\n        fontSize\n       ]);\n      }));\n      return;\n     case OPS.endInlineImage:\n      var cacheKey = args[0].cacheKey;\n      if (cacheKey) {\n       var cacheEntry = imageCache[cacheKey];\n       if (cacheEntry !== undefined) {\n        operatorList.addOp(cacheEntry.fn, cacheEntry.args);\n        args = null;\n        continue;\n       }\n      }\n      self.buildPaintImageXObject(resources, args[0], true, operatorList, cacheKey, imageCache);\n      args = null;\n      continue;\n     case OPS.showText:\n      args[0] = self.handleText(args[0], stateManager.state);\n      break;\n     case OPS.showSpacedText:\n      var arr = args[0];\n      var combinedGlyphs = [];\n      var arrLength = arr.length;\n      var state = stateManager.state;\n      for (i = 0; i < arrLength; ++i) {\n       var arrItem = arr[i];\n       if (isString(arrItem)) {\n        Array.prototype.push.apply(combinedGlyphs, self.handleText(arrItem, state));\n       } else if (isNum(arrItem)) {\n        combinedGlyphs.push(arrItem);\n       }\n      }\n      args[0] = combinedGlyphs;\n      fn = OPS.showText;\n      break;\n     case OPS.nextLineShowText:\n      operatorList.addOp(OPS.nextLine);\n      args[0] = self.handleText(args[0], stateManager.state);\n      fn = OPS.showText;\n      break;\n     case OPS.nextLineSetSpacingShowText:\n      operatorList.addOp(OPS.nextLine);\n      operatorList.addOp(OPS.setWordSpacing, [args.shift()]);\n      operatorList.addOp(OPS.setCharSpacing, [args.shift()]);\n      args[0] = self.handleText(args[0], stateManager.state);\n      fn = OPS.showText;\n      break;\n     case OPS.setTextRenderingMode:\n      stateManager.state.textRenderingMode = args[0];\n      break;\n     case OPS.setFillColorSpace:\n      stateManager.state.fillColorSpace = ColorSpace.parse(args[0], xref, resources);\n      continue;\n     case OPS.setStrokeColorSpace:\n      stateManager.state.strokeColorSpace = ColorSpace.parse(args[0], xref, resources);\n      continue;\n     case OPS.setFillColor:\n      cs = stateManager.state.fillColorSpace;\n      args = cs.getRgb(args, 0);\n      fn = OPS.setFillRGBColor;\n      break;\n     case OPS.setStrokeColor:\n      cs = stateManager.state.strokeColorSpace;\n      args = cs.getRgb(args, 0);\n      fn = OPS.setStrokeRGBColor;\n      break;\n     case OPS.setFillGray:\n      stateManager.state.fillColorSpace = ColorSpace.singletons.gray;\n      args = ColorSpace.singletons.gray.getRgb(args, 0);\n      fn = OPS.setFillRGBColor;\n      break;\n     case OPS.setStrokeGray:\n      stateManager.state.strokeColorSpace = ColorSpace.singletons.gray;\n      args = ColorSpace.singletons.gray.getRgb(args, 0);\n      fn = OPS.setStrokeRGBColor;\n      break;\n     case OPS.setFillCMYKColor:\n      stateManager.state.fillColorSpace = ColorSpace.singletons.cmyk;\n      args = ColorSpace.singletons.cmyk.getRgb(args, 0);\n      fn = OPS.setFillRGBColor;\n      break;\n     case OPS.setStrokeCMYKColor:\n      stateManager.state.strokeColorSpace = ColorSpace.singletons.cmyk;\n      args = ColorSpace.singletons.cmyk.getRgb(args, 0);\n      fn = OPS.setStrokeRGBColor;\n      break;\n     case OPS.setFillRGBColor:\n      stateManager.state.fillColorSpace = ColorSpace.singletons.rgb;\n      args = ColorSpace.singletons.rgb.getRgb(args, 0);\n      break;\n     case OPS.setStrokeRGBColor:\n      stateManager.state.strokeColorSpace = ColorSpace.singletons.rgb;\n      args = ColorSpace.singletons.rgb.getRgb(args, 0);\n      break;\n     case OPS.setFillColorN:\n      cs = stateManager.state.fillColorSpace;\n      if (cs.name === 'Pattern') {\n       next(self.handleColorN(operatorList, OPS.setFillColorN, args, cs, patterns, resources, task, xref));\n       return;\n      }\n      args = cs.getRgb(args, 0);\n      fn = OPS.setFillRGBColor;\n      break;\n     case OPS.setStrokeColorN:\n      cs = stateManager.state.strokeColorSpace;\n      if (cs.name === 'Pattern') {\n       next(self.handleColorN(operatorList, OPS.setStrokeColorN, args, cs, patterns, resources, task, xref));\n       return;\n      }\n      args = cs.getRgb(args, 0);\n      fn = OPS.setStrokeRGBColor;\n      break;\n     case OPS.shadingFill:\n      var shadingRes = resources.get('Shading');\n      if (!shadingRes) {\n       error('No shading resource found');\n      }\n      var shading = shadingRes.get(args[0].name);\n      if (!shading) {\n       error('No shading object found');\n      }\n      var shadingFill = Pattern.parseShading(shading, null, xref, resources, self.handler);\n      var patternIR = shadingFill.getIR();\n      args = [patternIR];\n      fn = OPS.shadingFill;\n      break;\n     case OPS.setGState:\n      var dictName = args[0];\n      var extGState = resources.get('ExtGState');\n      if (!isDict(extGState) || !extGState.has(dictName.name)) {\n       break;\n      }\n      var gState = extGState.get(dictName.name);\n      next(self.setGState(resources, gState, operatorList, task, xref, stateManager));\n      return;\n     case OPS.moveTo:\n     case OPS.lineTo:\n     case OPS.curveTo:\n     case OPS.curveTo2:\n     case OPS.curveTo3:\n     case OPS.closePath:\n      self.buildPath(operatorList, fn, args);\n      continue;\n     case OPS.rectangle:\n      self.buildPath(operatorList, fn, args);\n      continue;\n     case OPS.markPoint:\n     case OPS.markPointProps:\n     case OPS.beginMarkedContent:\n     case OPS.beginMarkedContentProps:\n     case OPS.endMarkedContent:\n     case OPS.beginCompat:\n     case OPS.endCompat:\n      continue;\n     default:\n      if (args !== null) {\n       for (i = 0, ii = args.length; i < ii; i++) {\n        if (args[i] instanceof Dict) {\n         break;\n        }\n       }\n       if (i < ii) {\n        warn('getOperatorList - ignoring operator: ' + fn);\n        continue;\n       }\n      }\n     }\n     operatorList.addOp(fn, args);\n    }\n    if (stop) {\n     next(deferred);\n     return;\n    }\n    for (i = 0, ii = preprocessor.savedStatesDepth; i < ii; i++) {\n     operatorList.addOp(OPS.restore, []);\n    }\n    resolve();\n   });\n  },\n  getTextContent: function PartialEvaluator_getTextContent(stream, task, resources, stateManager, normalizeWhitespace, combineTextItems) {\n   stateManager = stateManager || new StateManager(new TextState());\n   var WhitespaceRegexp = /\\s/g;\n   var textContent = {\n    items: [],\n    styles: Object.create(null)\n   };\n   var textContentItem = {\n    initialized: false,\n    str: [],\n    width: 0,\n    height: 0,\n    vertical: false,\n    lastAdvanceWidth: 0,\n    lastAdvanceHeight: 0,\n    textAdvanceScale: 0,\n    spaceWidth: 0,\n    fakeSpaceMin: Infinity,\n    fakeMultiSpaceMin: Infinity,\n    fakeMultiSpaceMax: -0,\n    textRunBreakAllowed: false,\n    transform: null,\n    fontName: null\n   };\n   var SPACE_FACTOR = 0.3;\n   var MULTI_SPACE_FACTOR = 1.5;\n   var MULTI_SPACE_FACTOR_MAX = 4;\n   var self = this;\n   var xref = this.xref;\n   resources = xref.fetchIfRef(resources) || Dict.empty;\n   var xobjs = null;\n   var xobjsCache = Object.create(null);\n   var preprocessor = new EvaluatorPreprocessor(stream, xref, stateManager);\n   var textState;\n   function ensureTextContentItem() {\n    if (textContentItem.initialized) {\n     return textContentItem;\n    }\n    var font = textState.font;\n    if (!(font.loadedName in textContent.styles)) {\n     textContent.styles[font.loadedName] = {\n      fontFamily: font.fallbackName,\n      ascent: font.ascent,\n      descent: font.descent,\n      vertical: font.vertical\n     };\n    }\n    textContentItem.fontName = font.loadedName;\n    var tsm = [\n     textState.fontSize * textState.textHScale,\n     0,\n     0,\n     textState.fontSize,\n     0,\n     textState.textRise\n    ];\n    if (font.isType3Font && textState.fontMatrix !== FONT_IDENTITY_MATRIX && textState.fontSize === 1) {\n     var glyphHeight = font.bbox[3] - font.bbox[1];\n     if (glyphHeight > 0) {\n      glyphHeight = glyphHeight * textState.fontMatrix[3];\n      tsm[3] *= glyphHeight;\n     }\n    }\n    var trm = Util.transform(textState.ctm, Util.transform(textState.textMatrix, tsm));\n    textContentItem.transform = trm;\n    if (!font.vertical) {\n     textContentItem.width = 0;\n     textContentItem.height = Math.sqrt(trm[2] * trm[2] + trm[3] * trm[3]);\n     textContentItem.vertical = false;\n    } else {\n     textContentItem.width = Math.sqrt(trm[0] * trm[0] + trm[1] * trm[1]);\n     textContentItem.height = 0;\n     textContentItem.vertical = true;\n    }\n    var a = textState.textLineMatrix[0];\n    var b = textState.textLineMatrix[1];\n    var scaleLineX = Math.sqrt(a * a + b * b);\n    a = textState.ctm[0];\n    b = textState.ctm[1];\n    var scaleCtmX = Math.sqrt(a * a + b * b);\n    textContentItem.textAdvanceScale = scaleCtmX * scaleLineX;\n    textContentItem.lastAdvanceWidth = 0;\n    textContentItem.lastAdvanceHeight = 0;\n    var spaceWidth = font.spaceWidth / 1000 * textState.fontSize;\n    if (spaceWidth) {\n     textContentItem.spaceWidth = spaceWidth;\n     textContentItem.fakeSpaceMin = spaceWidth * SPACE_FACTOR;\n     textContentItem.fakeMultiSpaceMin = spaceWidth * MULTI_SPACE_FACTOR;\n     textContentItem.fakeMultiSpaceMax = spaceWidth * MULTI_SPACE_FACTOR_MAX;\n     textContentItem.textRunBreakAllowed = !font.isMonospace;\n    } else {\n     textContentItem.spaceWidth = 0;\n     textContentItem.fakeSpaceMin = Infinity;\n     textContentItem.fakeMultiSpaceMin = Infinity;\n     textContentItem.fakeMultiSpaceMax = 0;\n     textContentItem.textRunBreakAllowed = false;\n    }\n    textContentItem.initialized = true;\n    return textContentItem;\n   }\n   function replaceWhitespace(str) {\n    var i = 0, ii = str.length, code;\n    while (i < ii && (code = str.charCodeAt(i)) >= 0x20 && code <= 0x7F) {\n     i++;\n    }\n    return i < ii ? str.replace(WhitespaceRegexp, ' ') : str;\n   }\n   function runBidiTransform(textChunk) {\n    var str = textChunk.str.join('');\n    var bidiResult = bidi(str, -1, textChunk.vertical);\n    return {\n     str: normalizeWhitespace ? replaceWhitespace(bidiResult.str) : bidiResult.str,\n     dir: bidiResult.dir,\n     width: textChunk.width,\n     height: textChunk.height,\n     transform: textChunk.transform,\n     fontName: textChunk.fontName\n    };\n   }\n   function handleSetFont(fontName, fontRef) {\n    return self.loadFont(fontName, fontRef, xref, resources).then(function (translated) {\n     textState.font = translated.font;\n     textState.fontMatrix = translated.font.fontMatrix || FONT_IDENTITY_MATRIX;\n    });\n   }\n   function buildTextContentItem(chars) {\n    var font = textState.font;\n    var textChunk = ensureTextContentItem();\n    var width = 0;\n    var height = 0;\n    var glyphs = font.charsToGlyphs(chars);\n    for (var i = 0; i < glyphs.length; i++) {\n     var glyph = glyphs[i];\n     var glyphWidth = null;\n     if (font.vertical && glyph.vmetric) {\n      glyphWidth = glyph.vmetric[0];\n     } else {\n      glyphWidth = glyph.width;\n     }\n     var glyphUnicode = glyph.unicode;\n     var NormalizedUnicodes = getNormalizedUnicodes();\n     if (NormalizedUnicodes[glyphUnicode] !== undefined) {\n      glyphUnicode = NormalizedUnicodes[glyphUnicode];\n     }\n     glyphUnicode = reverseIfRtl(glyphUnicode);\n     var charSpacing = textState.charSpacing;\n     if (glyph.isSpace) {\n      var wordSpacing = textState.wordSpacing;\n      charSpacing += wordSpacing;\n      if (wordSpacing > 0) {\n       addFakeSpaces(wordSpacing, textChunk.str);\n      }\n     }\n     var tx = 0;\n     var ty = 0;\n     if (!font.vertical) {\n      var w0 = glyphWidth * textState.fontMatrix[0];\n      tx = (w0 * textState.fontSize + charSpacing) * textState.textHScale;\n      width += tx;\n     } else {\n      var w1 = glyphWidth * textState.fontMatrix[0];\n      ty = w1 * textState.fontSize + charSpacing;\n      height += ty;\n     }\n     textState.translateTextMatrix(tx, ty);\n     textChunk.str.push(glyphUnicode);\n    }\n    if (!font.vertical) {\n     textChunk.lastAdvanceWidth = width;\n     textChunk.width += width;\n    } else {\n     textChunk.lastAdvanceHeight = height;\n     textChunk.height += Math.abs(height);\n    }\n    return textChunk;\n   }\n   function addFakeSpaces(width, strBuf) {\n    if (width < textContentItem.fakeSpaceMin) {\n     return;\n    }\n    if (width < textContentItem.fakeMultiSpaceMin) {\n     strBuf.push(' ');\n     return;\n    }\n    var fakeSpaces = Math.round(width / textContentItem.spaceWidth);\n    while (fakeSpaces-- > 0) {\n     strBuf.push(' ');\n    }\n   }\n   function flushTextContentItem() {\n    if (!textContentItem.initialized) {\n     return;\n    }\n    textContentItem.width *= textContentItem.textAdvanceScale;\n    textContentItem.height *= textContentItem.textAdvanceScale;\n    textContent.items.push(runBidiTransform(textContentItem));\n    textContentItem.initialized = false;\n    textContentItem.str.length = 0;\n   }\n   var timeSlotManager = new TimeSlotManager();\n   return new Promise(function promiseBody(resolve, reject) {\n    var next = function (promise) {\n     promise.then(function () {\n      try {\n       promiseBody(resolve, reject);\n      } catch (ex) {\n       reject(ex);\n      }\n     }, reject);\n    };\n    task.ensureNotTerminated();\n    timeSlotManager.reset();\n    var stop, operation = {}, args = [];\n    while (!(stop = timeSlotManager.check())) {\n     args.length = 0;\n     operation.args = args;\n     if (!preprocessor.read(operation)) {\n      break;\n     }\n     textState = stateManager.state;\n     var fn = operation.fn;\n     args = operation.args;\n     var advance, diff;\n     switch (fn | 0) {\n     case OPS.setFont:\n      var fontNameArg = args[0].name, fontSizeArg = args[1];\n      if (textState.font && fontNameArg === textState.fontName && fontSizeArg === textState.fontSize) {\n       break;\n      }\n      flushTextContentItem();\n      textState.fontName = fontNameArg;\n      textState.fontSize = fontSizeArg;\n      next(handleSetFont(fontNameArg, null));\n      return;\n     case OPS.setTextRise:\n      flushTextContentItem();\n      textState.textRise = args[0];\n      break;\n     case OPS.setHScale:\n      flushTextContentItem();\n      textState.textHScale = args[0] / 100;\n      break;\n     case OPS.setLeading:\n      flushTextContentItem();\n      textState.leading = args[0];\n      break;\n     case OPS.moveText:\n      var isSameTextLine = !textState.font ? false : (textState.font.vertical ? args[0] : args[1]) === 0;\n      advance = args[0] - args[1];\n      if (combineTextItems && isSameTextLine && textContentItem.initialized && advance > 0 && advance <= textContentItem.fakeMultiSpaceMax) {\n       textState.translateTextLineMatrix(args[0], args[1]);\n       textContentItem.width += args[0] - textContentItem.lastAdvanceWidth;\n       textContentItem.height += args[1] - textContentItem.lastAdvanceHeight;\n       diff = args[0] - textContentItem.lastAdvanceWidth - (args[1] - textContentItem.lastAdvanceHeight);\n       addFakeSpaces(diff, textContentItem.str);\n       break;\n      }\n      flushTextContentItem();\n      textState.translateTextLineMatrix(args[0], args[1]);\n      textState.textMatrix = textState.textLineMatrix.slice();\n      break;\n     case OPS.setLeadingMoveText:\n      flushTextContentItem();\n      textState.leading = -args[1];\n      textState.translateTextLineMatrix(args[0], args[1]);\n      textState.textMatrix = textState.textLineMatrix.slice();\n      break;\n     case OPS.nextLine:\n      flushTextContentItem();\n      textState.carriageReturn();\n      break;\n     case OPS.setTextMatrix:\n      advance = textState.calcTextLineMatrixAdvance(args[0], args[1], args[2], args[3], args[4], args[5]);\n      if (combineTextItems && advance !== null && textContentItem.initialized && advance.value > 0 && advance.value <= textContentItem.fakeMultiSpaceMax) {\n       textState.translateTextLineMatrix(advance.width, advance.height);\n       textContentItem.width += advance.width - textContentItem.lastAdvanceWidth;\n       textContentItem.height += advance.height - textContentItem.lastAdvanceHeight;\n       diff = advance.width - textContentItem.lastAdvanceWidth - (advance.height - textContentItem.lastAdvanceHeight);\n       addFakeSpaces(diff, textContentItem.str);\n       break;\n      }\n      flushTextContentItem();\n      textState.setTextMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n      textState.setTextLineMatrix(args[0], args[1], args[2], args[3], args[4], args[5]);\n      break;\n     case OPS.setCharSpacing:\n      textState.charSpacing = args[0];\n      break;\n     case OPS.setWordSpacing:\n      textState.wordSpacing = args[0];\n      break;\n     case OPS.beginText:\n      flushTextContentItem();\n      textState.textMatrix = IDENTITY_MATRIX.slice();\n      textState.textLineMatrix = IDENTITY_MATRIX.slice();\n      break;\n     case OPS.showSpacedText:\n      var items = args[0];\n      var offset;\n      for (var j = 0, jj = items.length; j < jj; j++) {\n       if (typeof items[j] === 'string') {\n        buildTextContentItem(items[j]);\n       } else if (isNum(items[j])) {\n        ensureTextContentItem();\n        advance = items[j] * textState.fontSize / 1000;\n        var breakTextRun = false;\n        if (textState.font.vertical) {\n         offset = advance;\n         textState.translateTextMatrix(0, offset);\n         breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n         if (!breakTextRun) {\n          textContentItem.height += offset;\n         }\n        } else {\n         advance = -advance;\n         offset = advance * textState.textHScale;\n         textState.translateTextMatrix(offset, 0);\n         breakTextRun = textContentItem.textRunBreakAllowed && advance > textContentItem.fakeMultiSpaceMax;\n         if (!breakTextRun) {\n          textContentItem.width += offset;\n         }\n        }\n        if (breakTextRun) {\n         flushTextContentItem();\n        } else if (advance > 0) {\n         addFakeSpaces(advance, textContentItem.str);\n        }\n       }\n      }\n      break;\n     case OPS.showText:\n      buildTextContentItem(args[0]);\n      break;\n     case OPS.nextLineShowText:\n      flushTextContentItem();\n      textState.carriageReturn();\n      buildTextContentItem(args[0]);\n      break;\n     case OPS.nextLineSetSpacingShowText:\n      flushTextContentItem();\n      textState.wordSpacing = args[0];\n      textState.charSpacing = args[1];\n      textState.carriageReturn();\n      buildTextContentItem(args[2]);\n      break;\n     case OPS.paintXObject:\n      flushTextContentItem();\n      if (args[0].code) {\n       break;\n      }\n      if (!xobjs) {\n       xobjs = resources.get('XObject') || Dict.empty;\n      }\n      var name = args[0].name;\n      if (xobjsCache.key === name) {\n       if (xobjsCache.texts) {\n        Util.appendToArray(textContent.items, xobjsCache.texts.items);\n        Util.extendObj(textContent.styles, xobjsCache.texts.styles);\n       }\n       break;\n      }\n      var xobj = xobjs.get(name);\n      if (!xobj) {\n       break;\n      }\n      assert(isStream(xobj), 'XObject should be a stream');\n      var type = xobj.dict.get('Subtype');\n      assert(isName(type), 'XObject should have a Name subtype');\n      if ('Form' !== type.name) {\n       xobjsCache.key = name;\n       xobjsCache.texts = null;\n       break;\n      }\n      stateManager.save();\n      var matrix = xobj.dict.getArray('Matrix');\n      if (isArray(matrix) && matrix.length === 6) {\n       stateManager.transform(matrix);\n      }\n      next(self.getTextContent(xobj, task, xobj.dict.get('Resources') || resources, stateManager, normalizeWhitespace, combineTextItems).then(function (formTextContent) {\n       Util.appendToArray(textContent.items, formTextContent.items);\n       Util.extendObj(textContent.styles, formTextContent.styles);\n       stateManager.restore();\n       xobjsCache.key = name;\n       xobjsCache.texts = formTextContent;\n      }));\n      return;\n     case OPS.setGState:\n      flushTextContentItem();\n      var dictName = args[0];\n      var extGState = resources.get('ExtGState');\n      if (!isDict(extGState) || !isName(dictName)) {\n       break;\n      }\n      var gState = extGState.get(dictName.name);\n      if (!isDict(gState)) {\n       break;\n      }\n      var gStateFont = gState.get('Font');\n      if (gStateFont) {\n       textState.fontName = null;\n       textState.fontSize = gStateFont[1];\n       next(handleSetFont(null, gStateFont[0]));\n       return;\n      }\n      break;\n     }\n    }\n    if (stop) {\n     next(deferred);\n     return;\n    }\n    flushTextContentItem();\n    resolve(textContent);\n   });\n  },\n  extractDataStructures: function PartialEvaluator_extractDataStructures(dict, baseDict, xref, properties) {\n   var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n   var toUnicodePromise = toUnicode ? this.readToUnicode(toUnicode) : Promise.resolve(undefined);\n   if (properties.composite) {\n    var cidSystemInfo = dict.get('CIDSystemInfo');\n    if (isDict(cidSystemInfo)) {\n     properties.cidSystemInfo = {\n      registry: cidSystemInfo.get('Registry'),\n      ordering: cidSystemInfo.get('Ordering'),\n      supplement: cidSystemInfo.get('Supplement')\n     };\n    }\n    var cidToGidMap = dict.get('CIDToGIDMap');\n    if (isStream(cidToGidMap)) {\n     properties.cidToGidMap = this.readCidToGidMap(cidToGidMap);\n    }\n   }\n   var differences = [];\n   var baseEncodingName = null;\n   var encoding;\n   if (dict.has('Encoding')) {\n    encoding = dict.get('Encoding');\n    if (isDict(encoding)) {\n     baseEncodingName = encoding.get('BaseEncoding');\n     baseEncodingName = isName(baseEncodingName) ? baseEncodingName.name : null;\n     if (encoding.has('Differences')) {\n      var diffEncoding = encoding.get('Differences');\n      var index = 0;\n      for (var j = 0, jj = diffEncoding.length; j < jj; j++) {\n       var data = xref.fetchIfRef(diffEncoding[j]);\n       if (isNum(data)) {\n        index = data;\n       } else if (isName(data)) {\n        differences[index++] = data.name;\n       } else {\n        error('Invalid entry in \\'Differences\\' array: ' + data);\n       }\n      }\n     }\n    } else if (isName(encoding)) {\n     baseEncodingName = encoding.name;\n    } else {\n     error('Encoding is not a Name nor a Dict');\n    }\n    if (baseEncodingName !== 'MacRomanEncoding' && baseEncodingName !== 'MacExpertEncoding' && baseEncodingName !== 'WinAnsiEncoding') {\n     baseEncodingName = null;\n    }\n   }\n   if (baseEncodingName) {\n    properties.defaultEncoding = getEncoding(baseEncodingName).slice();\n   } else {\n    var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n    var isNonsymbolicFont = !!(properties.flags & FontFlags.Nonsymbolic);\n    encoding = StandardEncoding;\n    if (properties.type === 'TrueType' && !isNonsymbolicFont) {\n     encoding = WinAnsiEncoding;\n    }\n    if (isSymbolicFont) {\n     encoding = MacRomanEncoding;\n     if (!properties.file) {\n      if (/Symbol/i.test(properties.name)) {\n       encoding = SymbolSetEncoding;\n      } else if (/Dingbats/i.test(properties.name)) {\n       encoding = ZapfDingbatsEncoding;\n      }\n     }\n    }\n    properties.defaultEncoding = encoding;\n   }\n   properties.differences = differences;\n   properties.baseEncodingName = baseEncodingName;\n   properties.hasEncoding = !!baseEncodingName || differences.length > 0;\n   properties.dict = dict;\n   return toUnicodePromise.then(function (toUnicode) {\n    properties.toUnicode = toUnicode;\n    return this.buildToUnicode(properties);\n   }.bind(this)).then(function (toUnicode) {\n    properties.toUnicode = toUnicode;\n    return properties;\n   });\n  },\n  buildToUnicode: function PartialEvaluator_buildToUnicode(properties) {\n   properties.hasIncludedToUnicodeMap = !!properties.toUnicode && properties.toUnicode.length > 0;\n   if (properties.hasIncludedToUnicodeMap) {\n    return Promise.resolve(properties.toUnicode);\n   }\n   var toUnicode, charcode, glyphName;\n   if (!properties.composite) {\n    toUnicode = [];\n    var encoding = properties.defaultEncoding.slice();\n    var baseEncodingName = properties.baseEncodingName;\n    var differences = properties.differences;\n    for (charcode in differences) {\n     glyphName = differences[charcode];\n     if (glyphName === '.notdef') {\n      continue;\n     }\n     encoding[charcode] = glyphName;\n    }\n    var glyphsUnicodeMap = getGlyphsUnicode();\n    for (charcode in encoding) {\n     glyphName = encoding[charcode];\n     if (glyphName === '') {\n      continue;\n     } else if (glyphsUnicodeMap[glyphName] === undefined) {\n      var code = 0;\n      switch (glyphName[0]) {\n      case 'G':\n       if (glyphName.length === 3) {\n        code = parseInt(glyphName.substr(1), 16);\n       }\n       break;\n      case 'g':\n       if (glyphName.length === 5) {\n        code = parseInt(glyphName.substr(1), 16);\n       }\n       break;\n      case 'C':\n      case 'c':\n       if (glyphName.length >= 3) {\n        code = +glyphName.substr(1);\n       }\n       break;\n      default:\n       var unicode = getUnicodeForGlyph(glyphName, glyphsUnicodeMap);\n       if (unicode !== -1) {\n        code = unicode;\n       }\n      }\n      if (code) {\n       if (baseEncodingName && code === +charcode) {\n        var baseEncoding = getEncoding(baseEncodingName);\n        if (baseEncoding && (glyphName = baseEncoding[charcode])) {\n         toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n         continue;\n        }\n       }\n       toUnicode[charcode] = String.fromCharCode(code);\n      }\n      continue;\n     }\n     toUnicode[charcode] = String.fromCharCode(glyphsUnicodeMap[glyphName]);\n    }\n    return Promise.resolve(new ToUnicodeMap(toUnicode));\n   }\n   if (properties.composite && (properties.cMap.builtInCMap && !(properties.cMap instanceof IdentityCMap) || properties.cidSystemInfo.registry === 'Adobe' && (properties.cidSystemInfo.ordering === 'GB1' || properties.cidSystemInfo.ordering === 'CNS1' || properties.cidSystemInfo.ordering === 'Japan1' || properties.cidSystemInfo.ordering === 'Korea1'))) {\n    var registry = properties.cidSystemInfo.registry;\n    var ordering = properties.cidSystemInfo.ordering;\n    var ucs2CMapName = Name.get(registry + '-' + ordering + '-UCS2');\n    return CMapFactory.create({\n     encoding: ucs2CMapName,\n     fetchBuiltInCMap: this.fetchBuiltInCMap,\n     useCMap: null\n    }).then(function (ucs2CMap) {\n     var cMap = properties.cMap;\n     toUnicode = [];\n     cMap.forEach(function (charcode, cid) {\n      assert(cid <= 0xffff, 'Max size of CID is 65,535');\n      var ucs2 = ucs2CMap.lookup(cid);\n      if (ucs2) {\n       toUnicode[charcode] = String.fromCharCode((ucs2.charCodeAt(0) << 8) + ucs2.charCodeAt(1));\n      }\n     });\n     return new ToUnicodeMap(toUnicode);\n    });\n   }\n   return Promise.resolve(new IdentityToUnicodeMap(properties.firstChar, properties.lastChar));\n  },\n  readToUnicode: function PartialEvaluator_readToUnicode(toUnicode) {\n   var cmapObj = toUnicode;\n   if (isName(cmapObj)) {\n    return CMapFactory.create({\n     encoding: cmapObj,\n     fetchBuiltInCMap: this.fetchBuiltInCMap,\n     useCMap: null\n    }).then(function (cmap) {\n     if (cmap instanceof IdentityCMap) {\n      return new IdentityToUnicodeMap(0, 0xFFFF);\n     }\n     return new ToUnicodeMap(cmap.getMap());\n    });\n   } else if (isStream(cmapObj)) {\n    return CMapFactory.create({\n     encoding: cmapObj,\n     fetchBuiltInCMap: this.fetchBuiltInCMap,\n     useCMap: null\n    }).then(function (cmap) {\n     if (cmap instanceof IdentityCMap) {\n      return new IdentityToUnicodeMap(0, 0xFFFF);\n     }\n     var map = new Array(cmap.length);\n     cmap.forEach(function (charCode, token) {\n      var str = [];\n      for (var k = 0; k < token.length; k += 2) {\n       var w1 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n       if ((w1 & 0xF800) !== 0xD800) {\n        str.push(w1);\n        continue;\n       }\n       k += 2;\n       var w2 = token.charCodeAt(k) << 8 | token.charCodeAt(k + 1);\n       str.push(((w1 & 0x3ff) << 10) + (w2 & 0x3ff) + 0x10000);\n      }\n      map[charCode] = String.fromCharCode.apply(String, str);\n     });\n     return new ToUnicodeMap(map);\n    });\n   }\n   return Promise.resolve(null);\n  },\n  readCidToGidMap: function PartialEvaluator_readCidToGidMap(cidToGidStream) {\n   var glyphsData = cidToGidStream.getBytes();\n   var result = [];\n   for (var j = 0, jj = glyphsData.length; j < jj; j++) {\n    var glyphID = glyphsData[j++] << 8 | glyphsData[j];\n    if (glyphID === 0) {\n     continue;\n    }\n    var code = j >> 1;\n    result[code] = glyphID;\n   }\n   return result;\n  },\n  extractWidths: function PartialEvaluator_extractWidths(dict, xref, descriptor, properties) {\n   var glyphsWidths = [];\n   var defaultWidth = 0;\n   var glyphsVMetrics = [];\n   var defaultVMetrics;\n   var i, ii, j, jj, start, code, widths;\n   if (properties.composite) {\n    defaultWidth = dict.get('DW') || 1000;\n    widths = dict.get('W');\n    if (widths) {\n     for (i = 0, ii = widths.length; i < ii; i++) {\n      start = xref.fetchIfRef(widths[i++]);\n      code = xref.fetchIfRef(widths[i]);\n      if (isArray(code)) {\n       for (j = 0, jj = code.length; j < jj; j++) {\n        glyphsWidths[start++] = xref.fetchIfRef(code[j]);\n       }\n      } else {\n       var width = xref.fetchIfRef(widths[++i]);\n       for (j = start; j <= code; j++) {\n        glyphsWidths[j] = width;\n       }\n      }\n     }\n    }\n    if (properties.vertical) {\n     var vmetrics = dict.getArray('DW2') || [\n      880,\n      -1000\n     ];\n     defaultVMetrics = [\n      vmetrics[1],\n      defaultWidth * 0.5,\n      vmetrics[0]\n     ];\n     vmetrics = dict.get('W2');\n     if (vmetrics) {\n      for (i = 0, ii = vmetrics.length; i < ii; i++) {\n       start = xref.fetchIfRef(vmetrics[i++]);\n       code = xref.fetchIfRef(vmetrics[i]);\n       if (isArray(code)) {\n        for (j = 0, jj = code.length; j < jj; j++) {\n         glyphsVMetrics[start++] = [\n          xref.fetchIfRef(code[j++]),\n          xref.fetchIfRef(code[j++]),\n          xref.fetchIfRef(code[j])\n         ];\n        }\n       } else {\n        var vmetric = [\n         xref.fetchIfRef(vmetrics[++i]),\n         xref.fetchIfRef(vmetrics[++i]),\n         xref.fetchIfRef(vmetrics[++i])\n        ];\n        for (j = start; j <= code; j++) {\n         glyphsVMetrics[j] = vmetric;\n        }\n       }\n      }\n     }\n    }\n   } else {\n    var firstChar = properties.firstChar;\n    widths = dict.get('Widths');\n    if (widths) {\n     j = firstChar;\n     for (i = 0, ii = widths.length; i < ii; i++) {\n      glyphsWidths[j++] = xref.fetchIfRef(widths[i]);\n     }\n     defaultWidth = parseFloat(descriptor.get('MissingWidth')) || 0;\n    } else {\n     var baseFontName = dict.get('BaseFont');\n     if (isName(baseFontName)) {\n      var metrics = this.getBaseFontMetrics(baseFontName.name);\n      glyphsWidths = this.buildCharCodeToWidth(metrics.widths, properties);\n      defaultWidth = metrics.defaultWidth;\n     }\n    }\n   }\n   var isMonospace = true;\n   var firstWidth = defaultWidth;\n   for (var glyph in glyphsWidths) {\n    var glyphWidth = glyphsWidths[glyph];\n    if (!glyphWidth) {\n     continue;\n    }\n    if (!firstWidth) {\n     firstWidth = glyphWidth;\n     continue;\n    }\n    if (firstWidth !== glyphWidth) {\n     isMonospace = false;\n     break;\n    }\n   }\n   if (isMonospace) {\n    properties.flags |= FontFlags.FixedPitch;\n   }\n   properties.defaultWidth = defaultWidth;\n   properties.widths = glyphsWidths;\n   properties.defaultVMetrics = defaultVMetrics;\n   properties.vmetrics = glyphsVMetrics;\n  },\n  isSerifFont: function PartialEvaluator_isSerifFont(baseFontName) {\n   var fontNameWoStyle = baseFontName.split('-')[0];\n   return fontNameWoStyle in getSerifFonts() || fontNameWoStyle.search(/serif/gi) !== -1;\n  },\n  getBaseFontMetrics: function PartialEvaluator_getBaseFontMetrics(name) {\n   var defaultWidth = 0;\n   var widths = [];\n   var monospace = false;\n   var stdFontMap = getStdFontMap();\n   var lookupName = stdFontMap[name] || name;\n   var Metrics = getMetrics();\n   if (!(lookupName in Metrics)) {\n    if (this.isSerifFont(name)) {\n     lookupName = 'Times-Roman';\n    } else {\n     lookupName = 'Helvetica';\n    }\n   }\n   var glyphWidths = Metrics[lookupName];\n   if (isNum(glyphWidths)) {\n    defaultWidth = glyphWidths;\n    monospace = true;\n   } else {\n    widths = glyphWidths();\n   }\n   return {\n    defaultWidth: defaultWidth,\n    monospace: monospace,\n    widths: widths\n   };\n  },\n  buildCharCodeToWidth: function PartialEvaluator_bulildCharCodeToWidth(widthsByGlyphName, properties) {\n   var widths = Object.create(null);\n   var differences = properties.differences;\n   var encoding = properties.defaultEncoding;\n   for (var charCode = 0; charCode < 256; charCode++) {\n    if (charCode in differences && widthsByGlyphName[differences[charCode]]) {\n     widths[charCode] = widthsByGlyphName[differences[charCode]];\n     continue;\n    }\n    if (charCode in encoding && widthsByGlyphName[encoding[charCode]]) {\n     widths[charCode] = widthsByGlyphName[encoding[charCode]];\n     continue;\n    }\n   }\n   return widths;\n  },\n  preEvaluateFont: function PartialEvaluator_preEvaluateFont(dict, xref) {\n   var baseDict = dict;\n   var type = dict.get('Subtype');\n   assert(isName(type), 'invalid font Subtype');\n   var composite = false;\n   var uint8array;\n   if (type.name === 'Type0') {\n    var df = dict.get('DescendantFonts');\n    if (!df) {\n     error('Descendant fonts are not specified');\n    }\n    dict = isArray(df) ? xref.fetchIfRef(df[0]) : df;\n    type = dict.get('Subtype');\n    assert(isName(type), 'invalid font Subtype');\n    composite = true;\n   }\n   var descriptor = dict.get('FontDescriptor');\n   if (descriptor) {\n    var hash = new MurmurHash3_64();\n    var encoding = baseDict.getRaw('Encoding');\n    if (isName(encoding)) {\n     hash.update(encoding.name);\n    } else if (isRef(encoding)) {\n     hash.update(encoding.toString());\n    } else if (isDict(encoding)) {\n     var keys = encoding.getKeys();\n     for (var i = 0, ii = keys.length; i < ii; i++) {\n      var entry = encoding.getRaw(keys[i]);\n      if (isName(entry)) {\n       hash.update(entry.name);\n      } else if (isRef(entry)) {\n       hash.update(entry.toString());\n      } else if (isArray(entry)) {\n       var diffLength = entry.length, diffBuf = new Array(diffLength);\n       for (var j = 0; j < diffLength; j++) {\n        var diffEntry = entry[j];\n        if (isName(diffEntry)) {\n         diffBuf[j] = diffEntry.name;\n        } else if (isNum(diffEntry) || isRef(diffEntry)) {\n         diffBuf[j] = diffEntry.toString();\n        }\n       }\n       hash.update(diffBuf.join());\n      }\n     }\n    }\n    var toUnicode = dict.get('ToUnicode') || baseDict.get('ToUnicode');\n    if (isStream(toUnicode)) {\n     var stream = toUnicode.str || toUnicode;\n     uint8array = stream.buffer ? new Uint8Array(stream.buffer.buffer, 0, stream.bufferLength) : new Uint8Array(stream.bytes.buffer, stream.start, stream.end - stream.start);\n     hash.update(uint8array);\n    } else if (isName(toUnicode)) {\n     hash.update(toUnicode.name);\n    }\n    var widths = dict.get('Widths') || baseDict.get('Widths');\n    if (widths) {\n     uint8array = new Uint8Array(new Uint32Array(widths).buffer);\n     hash.update(uint8array);\n    }\n   }\n   return {\n    descriptor: descriptor,\n    dict: dict,\n    baseDict: baseDict,\n    composite: composite,\n    type: type.name,\n    hash: hash ? hash.hexdigest() : ''\n   };\n  },\n  translateFont: function PartialEvaluator_translateFont(preEvaluatedFont, xref) {\n   var baseDict = preEvaluatedFont.baseDict;\n   var dict = preEvaluatedFont.dict;\n   var composite = preEvaluatedFont.composite;\n   var descriptor = preEvaluatedFont.descriptor;\n   var type = preEvaluatedFont.type;\n   var maxCharIndex = composite ? 0xFFFF : 0xFF;\n   var properties;\n   if (!descriptor) {\n    if (type === 'Type3') {\n     descriptor = new Dict(null);\n     descriptor.set('FontName', Name.get(type));\n     descriptor.set('FontBBox', dict.getArray('FontBBox'));\n    } else {\n     var baseFontName = dict.get('BaseFont');\n     if (!isName(baseFontName)) {\n      error('Base font is not specified');\n     }\n     baseFontName = baseFontName.name.replace(/[,_]/g, '-');\n     var metrics = this.getBaseFontMetrics(baseFontName);\n     var fontNameWoStyle = baseFontName.split('-')[0];\n     var flags = (this.isSerifFont(fontNameWoStyle) ? FontFlags.Serif : 0) | (metrics.monospace ? FontFlags.FixedPitch : 0) | (getSymbolsFonts()[fontNameWoStyle] ? FontFlags.Symbolic : FontFlags.Nonsymbolic);\n     properties = {\n      type: type,\n      name: baseFontName,\n      widths: metrics.widths,\n      defaultWidth: metrics.defaultWidth,\n      flags: flags,\n      firstChar: 0,\n      lastChar: maxCharIndex\n     };\n     return this.extractDataStructures(dict, dict, xref, properties).then(function (properties) {\n      properties.widths = this.buildCharCodeToWidth(metrics.widths, properties);\n      return new Font(baseFontName, null, properties);\n     }.bind(this));\n    }\n   }\n   var firstChar = dict.get('FirstChar') || 0;\n   var lastChar = dict.get('LastChar') || maxCharIndex;\n   var fontName = descriptor.get('FontName');\n   var baseFont = dict.get('BaseFont');\n   if (isString(fontName)) {\n    fontName = Name.get(fontName);\n   }\n   if (isString(baseFont)) {\n    baseFont = Name.get(baseFont);\n   }\n   if (type !== 'Type3') {\n    var fontNameStr = fontName && fontName.name;\n    var baseFontStr = baseFont && baseFont.name;\n    if (fontNameStr !== baseFontStr) {\n     info('The FontDescriptor\\'s FontName is \"' + fontNameStr + '\" but should be the same as the Font\\'s BaseFont \"' + baseFontStr + '\"');\n     if (fontNameStr && baseFontStr && baseFontStr.indexOf(fontNameStr) === 0) {\n      fontName = baseFont;\n     }\n    }\n   }\n   fontName = fontName || baseFont;\n   assert(isName(fontName), 'invalid font name');\n   var fontFile = descriptor.get('FontFile', 'FontFile2', 'FontFile3');\n   if (fontFile) {\n    if (fontFile.dict) {\n     var subtype = fontFile.dict.get('Subtype');\n     if (subtype) {\n      subtype = subtype.name;\n     }\n     var length1 = fontFile.dict.get('Length1');\n     var length2 = fontFile.dict.get('Length2');\n     var length3 = fontFile.dict.get('Length3');\n    }\n   }\n   properties = {\n    type: type,\n    name: fontName.name,\n    subtype: subtype,\n    file: fontFile,\n    length1: length1,\n    length2: length2,\n    length3: length3,\n    loadedName: baseDict.loadedName,\n    composite: composite,\n    wideChars: composite,\n    fixedPitch: false,\n    fontMatrix: dict.getArray('FontMatrix') || FONT_IDENTITY_MATRIX,\n    firstChar: firstChar || 0,\n    lastChar: lastChar || maxCharIndex,\n    bbox: descriptor.getArray('FontBBox'),\n    ascent: descriptor.get('Ascent'),\n    descent: descriptor.get('Descent'),\n    xHeight: descriptor.get('XHeight'),\n    capHeight: descriptor.get('CapHeight'),\n    flags: descriptor.get('Flags'),\n    italicAngle: descriptor.get('ItalicAngle'),\n    coded: false\n   };\n   var cMapPromise;\n   if (composite) {\n    var cidEncoding = baseDict.get('Encoding');\n    if (isName(cidEncoding)) {\n     properties.cidEncoding = cidEncoding.name;\n    }\n    cMapPromise = CMapFactory.create({\n     encoding: cidEncoding,\n     fetchBuiltInCMap: this.fetchBuiltInCMap,\n     useCMap: null\n    }).then(function (cMap) {\n     properties.cMap = cMap;\n     properties.vertical = properties.cMap.vertical;\n    });\n   } else {\n    cMapPromise = Promise.resolve(undefined);\n   }\n   return cMapPromise.then(function () {\n    return this.extractDataStructures(dict, baseDict, xref, properties);\n   }.bind(this)).then(function (properties) {\n    this.extractWidths(dict, xref, descriptor, properties);\n    if (type === 'Type3') {\n     properties.isType3Font = true;\n    }\n    return new Font(fontName.name, fontFile, properties);\n   }.bind(this));\n  }\n };\n return PartialEvaluator;\n}();\nvar TranslatedFont = function TranslatedFontClosure() {\n function TranslatedFont(loadedName, font, dict) {\n  this.loadedName = loadedName;\n  this.font = font;\n  this.dict = dict;\n  this.type3Loaded = null;\n  this.sent = false;\n }\n TranslatedFont.prototype = {\n  send: function (handler) {\n   if (this.sent) {\n    return;\n   }\n   var fontData = this.font.exportData();\n   handler.send('commonobj', [\n    this.loadedName,\n    'Font',\n    fontData\n   ]);\n   this.sent = true;\n  },\n  loadType3Data: function (evaluator, resources, parentOperatorList, task) {\n   assert(this.font.isType3Font);\n   if (this.type3Loaded) {\n    return this.type3Loaded;\n   }\n   var translatedFont = this.font;\n   var loadCharProcsPromise = Promise.resolve();\n   var charProcs = this.dict.get('CharProcs');\n   var fontResources = this.dict.get('Resources') || resources;\n   var charProcKeys = charProcs.getKeys();\n   var charProcOperatorList = Object.create(null);\n   for (var i = 0, n = charProcKeys.length; i < n; ++i) {\n    loadCharProcsPromise = loadCharProcsPromise.then(function (key) {\n     var glyphStream = charProcs.get(key);\n     var operatorList = new OperatorList();\n     return evaluator.getOperatorList(glyphStream, task, fontResources, operatorList).then(function () {\n      charProcOperatorList[key] = operatorList.getIR();\n      parentOperatorList.addDependencies(operatorList.dependencies);\n     }, function (reason) {\n      warn('Type3 font resource \\\"' + key + '\\\" is not available');\n      var operatorList = new OperatorList();\n      charProcOperatorList[key] = operatorList.getIR();\n     });\n    }.bind(this, charProcKeys[i]));\n   }\n   this.type3Loaded = loadCharProcsPromise.then(function () {\n    translatedFont.charProcOperatorList = charProcOperatorList;\n   });\n   return this.type3Loaded;\n  }\n };\n return TranslatedFont;\n}();\nvar OperatorList = function OperatorListClosure() {\n var CHUNK_SIZE = 1000;\n var CHUNK_SIZE_ABOUT = CHUNK_SIZE - 5;\n function getTransfers(queue) {\n  var transfers = [];\n  var fnArray = queue.fnArray, argsArray = queue.argsArray;\n  for (var i = 0, ii = queue.length; i < ii; i++) {\n   switch (fnArray[i]) {\n   case OPS.paintInlineImageXObject:\n   case OPS.paintInlineImageXObjectGroup:\n   case OPS.paintImageMaskXObject:\n    var arg = argsArray[i][0];\n    if (!arg.cached) {\n     transfers.push(arg.data.buffer);\n    }\n    break;\n   }\n  }\n  return transfers;\n }\n function OperatorList(intent, messageHandler, pageIndex) {\n  this.messageHandler = messageHandler;\n  this.fnArray = [];\n  this.argsArray = [];\n  this.dependencies = Object.create(null);\n  this._totalLength = 0;\n  this.pageIndex = pageIndex;\n  this.intent = intent;\n }\n OperatorList.prototype = {\n  get length() {\n   return this.argsArray.length;\n  },\n  get totalLength() {\n   return this._totalLength + this.length;\n  },\n  addOp: function (fn, args) {\n   this.fnArray.push(fn);\n   this.argsArray.push(args);\n   if (this.messageHandler) {\n    if (this.fnArray.length >= CHUNK_SIZE) {\n     this.flush();\n    } else if (this.fnArray.length >= CHUNK_SIZE_ABOUT && (fn === OPS.restore || fn === OPS.endText)) {\n     this.flush();\n    }\n   }\n  },\n  addDependency: function (dependency) {\n   if (dependency in this.dependencies) {\n    return;\n   }\n   this.dependencies[dependency] = true;\n   this.addOp(OPS.dependency, [dependency]);\n  },\n  addDependencies: function (dependencies) {\n   for (var key in dependencies) {\n    this.addDependency(key);\n   }\n  },\n  addOpList: function (opList) {\n   Util.extendObj(this.dependencies, opList.dependencies);\n   for (var i = 0, ii = opList.length; i < ii; i++) {\n    this.addOp(opList.fnArray[i], opList.argsArray[i]);\n   }\n  },\n  getIR: function () {\n   return {\n    fnArray: this.fnArray,\n    argsArray: this.argsArray,\n    length: this.length\n   };\n  },\n  flush: function (lastChunk) {\n   if (this.intent !== 'oplist') {\n    new QueueOptimizer().optimize(this);\n   }\n   var transfers = getTransfers(this);\n   var length = this.length;\n   this._totalLength += length;\n   this.messageHandler.send('RenderPageChunk', {\n    operatorList: {\n     fnArray: this.fnArray,\n     argsArray: this.argsArray,\n     lastChunk: lastChunk,\n     length: length\n    },\n    pageIndex: this.pageIndex,\n    intent: this.intent\n   }, transfers);\n   this.dependencies = Object.create(null);\n   this.fnArray.length = 0;\n   this.argsArray.length = 0;\n  }\n };\n return OperatorList;\n}();\nvar StateManager = function StateManagerClosure() {\n function StateManager(initialState) {\n  this.state = initialState;\n  this.stateStack = [];\n }\n StateManager.prototype = {\n  save: function () {\n   var old = this.state;\n   this.stateStack.push(this.state);\n   this.state = old.clone();\n  },\n  restore: function () {\n   var prev = this.stateStack.pop();\n   if (prev) {\n    this.state = prev;\n   }\n  },\n  transform: function (args) {\n   this.state.ctm = Util.transform(this.state.ctm, args);\n  }\n };\n return StateManager;\n}();\nvar TextState = function TextStateClosure() {\n function TextState() {\n  this.ctm = new Float32Array(IDENTITY_MATRIX);\n  this.fontName = null;\n  this.fontSize = 0;\n  this.font = null;\n  this.fontMatrix = FONT_IDENTITY_MATRIX;\n  this.textMatrix = IDENTITY_MATRIX.slice();\n  this.textLineMatrix = IDENTITY_MATRIX.slice();\n  this.charSpacing = 0;\n  this.wordSpacing = 0;\n  this.leading = 0;\n  this.textHScale = 1;\n  this.textRise = 0;\n }\n TextState.prototype = {\n  setTextMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n   var m = this.textMatrix;\n   m[0] = a;\n   m[1] = b;\n   m[2] = c;\n   m[3] = d;\n   m[4] = e;\n   m[5] = f;\n  },\n  setTextLineMatrix: function TextState_setTextMatrix(a, b, c, d, e, f) {\n   var m = this.textLineMatrix;\n   m[0] = a;\n   m[1] = b;\n   m[2] = c;\n   m[3] = d;\n   m[4] = e;\n   m[5] = f;\n  },\n  translateTextMatrix: function TextState_translateTextMatrix(x, y) {\n   var m = this.textMatrix;\n   m[4] = m[0] * x + m[2] * y + m[4];\n   m[5] = m[1] * x + m[3] * y + m[5];\n  },\n  translateTextLineMatrix: function TextState_translateTextMatrix(x, y) {\n   var m = this.textLineMatrix;\n   m[4] = m[0] * x + m[2] * y + m[4];\n   m[5] = m[1] * x + m[3] * y + m[5];\n  },\n  calcTextLineMatrixAdvance: function TextState_calcTextLineMatrixAdvance(a, b, c, d, e, f) {\n   var font = this.font;\n   if (!font) {\n    return null;\n   }\n   var m = this.textLineMatrix;\n   if (!(a === m[0] && b === m[1] && c === m[2] && d === m[3])) {\n    return null;\n   }\n   var txDiff = e - m[4], tyDiff = f - m[5];\n   if (font.vertical && txDiff !== 0 || !font.vertical && tyDiff !== 0) {\n    return null;\n   }\n   var tx, ty, denominator = a * d - b * c;\n   if (font.vertical) {\n    tx = -tyDiff * c / denominator;\n    ty = tyDiff * a / denominator;\n   } else {\n    tx = txDiff * d / denominator;\n    ty = -txDiff * b / denominator;\n   }\n   return {\n    width: tx,\n    height: ty,\n    value: font.vertical ? ty : tx\n   };\n  },\n  calcRenderMatrix: function TextState_calcRendeMatrix(ctm) {\n   var tsm = [\n    this.fontSize * this.textHScale,\n    0,\n    0,\n    this.fontSize,\n    0,\n    this.textRise\n   ];\n   return Util.transform(ctm, Util.transform(this.textMatrix, tsm));\n  },\n  carriageReturn: function TextState_carriageReturn() {\n   this.translateTextLineMatrix(0, -this.leading);\n   this.textMatrix = this.textLineMatrix.slice();\n  },\n  clone: function TextState_clone() {\n   var clone = Object.create(this);\n   clone.textMatrix = this.textMatrix.slice();\n   clone.textLineMatrix = this.textLineMatrix.slice();\n   clone.fontMatrix = this.fontMatrix.slice();\n   return clone;\n  }\n };\n return TextState;\n}();\nvar EvalState = function EvalStateClosure() {\n function EvalState() {\n  this.ctm = new Float32Array(IDENTITY_MATRIX);\n  this.font = null;\n  this.textRenderingMode = TextRenderingMode.FILL;\n  this.fillColorSpace = ColorSpace.singletons.gray;\n  this.strokeColorSpace = ColorSpace.singletons.gray;\n }\n EvalState.prototype = {\n  clone: function CanvasExtraState_clone() {\n   return Object.create(this);\n  }\n };\n return EvalState;\n}();\nvar EvaluatorPreprocessor = function EvaluatorPreprocessorClosure() {\n var getOPMap = getLookupTableFactory(function (t) {\n  t['w'] = {\n   id: OPS.setLineWidth,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['J'] = {\n   id: OPS.setLineCap,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['j'] = {\n   id: OPS.setLineJoin,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['M'] = {\n   id: OPS.setMiterLimit,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['d'] = {\n   id: OPS.setDash,\n   numArgs: 2,\n   variableArgs: false\n  };\n  t['ri'] = {\n   id: OPS.setRenderingIntent,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['i'] = {\n   id: OPS.setFlatness,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['gs'] = {\n   id: OPS.setGState,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['q'] = {\n   id: OPS.save,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['Q'] = {\n   id: OPS.restore,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['cm'] = {\n   id: OPS.transform,\n   numArgs: 6,\n   variableArgs: false\n  };\n  t['m'] = {\n   id: OPS.moveTo,\n   numArgs: 2,\n   variableArgs: false\n  };\n  t['l'] = {\n   id: OPS.lineTo,\n   numArgs: 2,\n   variableArgs: false\n  };\n  t['c'] = {\n   id: OPS.curveTo,\n   numArgs: 6,\n   variableArgs: false\n  };\n  t['v'] = {\n   id: OPS.curveTo2,\n   numArgs: 4,\n   variableArgs: false\n  };\n  t['y'] = {\n   id: OPS.curveTo3,\n   numArgs: 4,\n   variableArgs: false\n  };\n  t['h'] = {\n   id: OPS.closePath,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['re'] = {\n   id: OPS.rectangle,\n   numArgs: 4,\n   variableArgs: false\n  };\n  t['S'] = {\n   id: OPS.stroke,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['s'] = {\n   id: OPS.closeStroke,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['f'] = {\n   id: OPS.fill,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['F'] = {\n   id: OPS.fill,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['f*'] = {\n   id: OPS.eoFill,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['B'] = {\n   id: OPS.fillStroke,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['B*'] = {\n   id: OPS.eoFillStroke,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['b'] = {\n   id: OPS.closeFillStroke,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['b*'] = {\n   id: OPS.closeEOFillStroke,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['n'] = {\n   id: OPS.endPath,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['W'] = {\n   id: OPS.clip,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['W*'] = {\n   id: OPS.eoClip,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['BT'] = {\n   id: OPS.beginText,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['ET'] = {\n   id: OPS.endText,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['Tc'] = {\n   id: OPS.setCharSpacing,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['Tw'] = {\n   id: OPS.setWordSpacing,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['Tz'] = {\n   id: OPS.setHScale,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['TL'] = {\n   id: OPS.setLeading,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['Tf'] = {\n   id: OPS.setFont,\n   numArgs: 2,\n   variableArgs: false\n  };\n  t['Tr'] = {\n   id: OPS.setTextRenderingMode,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['Ts'] = {\n   id: OPS.setTextRise,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['Td'] = {\n   id: OPS.moveText,\n   numArgs: 2,\n   variableArgs: false\n  };\n  t['TD'] = {\n   id: OPS.setLeadingMoveText,\n   numArgs: 2,\n   variableArgs: false\n  };\n  t['Tm'] = {\n   id: OPS.setTextMatrix,\n   numArgs: 6,\n   variableArgs: false\n  };\n  t['T*'] = {\n   id: OPS.nextLine,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['Tj'] = {\n   id: OPS.showText,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['TJ'] = {\n   id: OPS.showSpacedText,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['\\''] = {\n   id: OPS.nextLineShowText,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['\"'] = {\n   id: OPS.nextLineSetSpacingShowText,\n   numArgs: 3,\n   variableArgs: false\n  };\n  t['d0'] = {\n   id: OPS.setCharWidth,\n   numArgs: 2,\n   variableArgs: false\n  };\n  t['d1'] = {\n   id: OPS.setCharWidthAndBounds,\n   numArgs: 6,\n   variableArgs: false\n  };\n  t['CS'] = {\n   id: OPS.setStrokeColorSpace,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['cs'] = {\n   id: OPS.setFillColorSpace,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['SC'] = {\n   id: OPS.setStrokeColor,\n   numArgs: 4,\n   variableArgs: true\n  };\n  t['SCN'] = {\n   id: OPS.setStrokeColorN,\n   numArgs: 33,\n   variableArgs: true\n  };\n  t['sc'] = {\n   id: OPS.setFillColor,\n   numArgs: 4,\n   variableArgs: true\n  };\n  t['scn'] = {\n   id: OPS.setFillColorN,\n   numArgs: 33,\n   variableArgs: true\n  };\n  t['G'] = {\n   id: OPS.setStrokeGray,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['g'] = {\n   id: OPS.setFillGray,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['RG'] = {\n   id: OPS.setStrokeRGBColor,\n   numArgs: 3,\n   variableArgs: false\n  };\n  t['rg'] = {\n   id: OPS.setFillRGBColor,\n   numArgs: 3,\n   variableArgs: false\n  };\n  t['K'] = {\n   id: OPS.setStrokeCMYKColor,\n   numArgs: 4,\n   variableArgs: false\n  };\n  t['k'] = {\n   id: OPS.setFillCMYKColor,\n   numArgs: 4,\n   variableArgs: false\n  };\n  t['sh'] = {\n   id: OPS.shadingFill,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['BI'] = {\n   id: OPS.beginInlineImage,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['ID'] = {\n   id: OPS.beginImageData,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['EI'] = {\n   id: OPS.endInlineImage,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['Do'] = {\n   id: OPS.paintXObject,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['MP'] = {\n   id: OPS.markPoint,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['DP'] = {\n   id: OPS.markPointProps,\n   numArgs: 2,\n   variableArgs: false\n  };\n  t['BMC'] = {\n   id: OPS.beginMarkedContent,\n   numArgs: 1,\n   variableArgs: false\n  };\n  t['BDC'] = {\n   id: OPS.beginMarkedContentProps,\n   numArgs: 2,\n   variableArgs: false\n  };\n  t['EMC'] = {\n   id: OPS.endMarkedContent,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['BX'] = {\n   id: OPS.beginCompat,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['EX'] = {\n   id: OPS.endCompat,\n   numArgs: 0,\n   variableArgs: false\n  };\n  t['BM'] = null;\n  t['BD'] = null;\n  t['true'] = null;\n  t['fa'] = null;\n  t['fal'] = null;\n  t['fals'] = null;\n  t['false'] = null;\n  t['nu'] = null;\n  t['nul'] = null;\n  t['null'] = null;\n });\n function EvaluatorPreprocessor(stream, xref, stateManager) {\n  this.opMap = getOPMap();\n  this.parser = new Parser(new Lexer(stream, this.opMap), false, xref);\n  this.stateManager = stateManager;\n  this.nonProcessedArgs = [];\n }\n EvaluatorPreprocessor.prototype = {\n  get savedStatesDepth() {\n   return this.stateManager.stateStack.length;\n  },\n  read: function EvaluatorPreprocessor_read(operation) {\n   var args = operation.args;\n   while (true) {\n    var obj = this.parser.getObj();\n    if (isCmd(obj)) {\n     var cmd = obj.cmd;\n     var opSpec = this.opMap[cmd];\n     if (!opSpec) {\n      warn('Unknown command \"' + cmd + '\"');\n      continue;\n     }\n     var fn = opSpec.id;\n     var numArgs = opSpec.numArgs;\n     var argsLength = args !== null ? args.length : 0;\n     if (!opSpec.variableArgs) {\n      if (argsLength !== numArgs) {\n       var nonProcessedArgs = this.nonProcessedArgs;\n       while (argsLength > numArgs) {\n        nonProcessedArgs.push(args.shift());\n        argsLength--;\n       }\n       while (argsLength < numArgs && nonProcessedArgs.length !== 0) {\n        if (args === null) {\n         args = [];\n        }\n        args.unshift(nonProcessedArgs.pop());\n        argsLength++;\n       }\n      }\n      if (argsLength < numArgs) {\n       warn('Skipping command ' + fn + ': expected ' + numArgs + ' args, but received ' + argsLength + ' args.');\n       if (args !== null) {\n        args.length = 0;\n       }\n       continue;\n      }\n     } else if (argsLength > numArgs) {\n      info('Command ' + fn + ': expected [0,' + numArgs + '] args, but received ' + argsLength + ' args.');\n     }\n     this.preprocessCommand(fn, args);\n     operation.fn = fn;\n     operation.args = args;\n     return true;\n    }\n    if (isEOF(obj)) {\n     return false;\n    }\n    if (obj !== null) {\n     if (args === null) {\n      args = [];\n     }\n     args.push(obj);\n     assert(args.length <= 33, 'Too many arguments');\n    }\n   }\n  },\n  preprocessCommand: function EvaluatorPreprocessor_preprocessCommand(fn, args) {\n   switch (fn | 0) {\n   case OPS.save:\n    this.stateManager.save();\n    break;\n   case OPS.restore:\n    this.stateManager.restore();\n    break;\n   case OPS.transform:\n    this.stateManager.transform(args);\n    break;\n   }\n  }\n };\n return EvaluatorPreprocessor;\n}();\nvar QueueOptimizer = function QueueOptimizerClosure() {\n function addState(parentState, pattern, fn) {\n  var state = parentState;\n  for (var i = 0, ii = pattern.length - 1; i < ii; i++) {\n   var item = pattern[i];\n   state = state[item] || (state[item] = []);\n  }\n  state[pattern[pattern.length - 1]] = fn;\n }\n function handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray) {\n  var iFirstPIMXO = iFirstSave + 2;\n  for (var i = 0; i < count; i++) {\n   var arg = argsArray[iFirstPIMXO + 4 * i];\n   var imageMask = arg.length === 1 && arg[0];\n   if (imageMask && imageMask.width === 1 && imageMask.height === 1 && (!imageMask.data.length || imageMask.data.length === 1 && imageMask.data[0] === 0)) {\n    fnArray[iFirstPIMXO + 4 * i] = OPS.paintSolidColorImageMask;\n    continue;\n   }\n   break;\n  }\n  return count - i;\n }\n var InitialState = [];\n addState(InitialState, [\n  OPS.save,\n  OPS.transform,\n  OPS.paintInlineImageXObject,\n  OPS.restore\n ], function foundInlineImageGroup(context) {\n  var MIN_IMAGES_IN_INLINE_IMAGES_BLOCK = 10;\n  var MAX_IMAGES_IN_INLINE_IMAGES_BLOCK = 200;\n  var MAX_WIDTH = 1000;\n  var IMAGE_PADDING = 1;\n  var fnArray = context.fnArray, argsArray = context.argsArray;\n  var curr = context.iCurr;\n  var iFirstSave = curr - 3;\n  var iFirstTransform = curr - 2;\n  var iFirstPIIXO = curr - 1;\n  var i = iFirstSave + 4;\n  var ii = fnArray.length;\n  while (i + 3 < ii) {\n   if (fnArray[i] !== OPS.save || fnArray[i + 1] !== OPS.transform || fnArray[i + 2] !== OPS.paintInlineImageXObject || fnArray[i + 3] !== OPS.restore) {\n    break;\n   }\n   i += 4;\n  }\n  var count = Math.min((i - iFirstSave) / 4, MAX_IMAGES_IN_INLINE_IMAGES_BLOCK);\n  if (count < MIN_IMAGES_IN_INLINE_IMAGES_BLOCK) {\n   return i;\n  }\n  var maxX = 0;\n  var map = [], maxLineHeight = 0;\n  var currentX = IMAGE_PADDING, currentY = IMAGE_PADDING;\n  var q;\n  for (q = 0; q < count; q++) {\n   var transform = argsArray[iFirstTransform + (q << 2)];\n   var img = argsArray[iFirstPIIXO + (q << 2)][0];\n   if (currentX + img.width > MAX_WIDTH) {\n    maxX = Math.max(maxX, currentX);\n    currentY += maxLineHeight + 2 * IMAGE_PADDING;\n    currentX = 0;\n    maxLineHeight = 0;\n   }\n   map.push({\n    transform: transform,\n    x: currentX,\n    y: currentY,\n    w: img.width,\n    h: img.height\n   });\n   currentX += img.width + 2 * IMAGE_PADDING;\n   maxLineHeight = Math.max(maxLineHeight, img.height);\n  }\n  var imgWidth = Math.max(maxX, currentX) + IMAGE_PADDING;\n  var imgHeight = currentY + maxLineHeight + IMAGE_PADDING;\n  var imgData = new Uint8Array(imgWidth * imgHeight * 4);\n  var imgRowSize = imgWidth << 2;\n  for (q = 0; q < count; q++) {\n   var data = argsArray[iFirstPIIXO + (q << 2)][0].data;\n   var rowSize = map[q].w << 2;\n   var dataOffset = 0;\n   var offset = map[q].x + map[q].y * imgWidth << 2;\n   imgData.set(data.subarray(0, rowSize), offset - imgRowSize);\n   for (var k = 0, kk = map[q].h; k < kk; k++) {\n    imgData.set(data.subarray(dataOffset, dataOffset + rowSize), offset);\n    dataOffset += rowSize;\n    offset += imgRowSize;\n   }\n   imgData.set(data.subarray(dataOffset - rowSize, dataOffset), offset);\n   while (offset >= 0) {\n    data[offset - 4] = data[offset];\n    data[offset - 3] = data[offset + 1];\n    data[offset - 2] = data[offset + 2];\n    data[offset - 1] = data[offset + 3];\n    data[offset + rowSize] = data[offset + rowSize - 4];\n    data[offset + rowSize + 1] = data[offset + rowSize - 3];\n    data[offset + rowSize + 2] = data[offset + rowSize - 2];\n    data[offset + rowSize + 3] = data[offset + rowSize - 1];\n    offset -= imgRowSize;\n   }\n  }\n  fnArray.splice(iFirstSave, count * 4, OPS.paintInlineImageXObjectGroup);\n  argsArray.splice(iFirstSave, count * 4, [\n   {\n    width: imgWidth,\n    height: imgHeight,\n    kind: ImageKind.RGBA_32BPP,\n    data: imgData\n   },\n   map\n  ]);\n  return iFirstSave + 1;\n });\n addState(InitialState, [\n  OPS.save,\n  OPS.transform,\n  OPS.paintImageMaskXObject,\n  OPS.restore\n ], function foundImageMaskGroup(context) {\n  var MIN_IMAGES_IN_MASKS_BLOCK = 10;\n  var MAX_IMAGES_IN_MASKS_BLOCK = 100;\n  var MAX_SAME_IMAGES_IN_MASKS_BLOCK = 1000;\n  var fnArray = context.fnArray, argsArray = context.argsArray;\n  var curr = context.iCurr;\n  var iFirstSave = curr - 3;\n  var iFirstTransform = curr - 2;\n  var iFirstPIMXO = curr - 1;\n  var i = iFirstSave + 4;\n  var ii = fnArray.length;\n  while (i + 3 < ii) {\n   if (fnArray[i] !== OPS.save || fnArray[i + 1] !== OPS.transform || fnArray[i + 2] !== OPS.paintImageMaskXObject || fnArray[i + 3] !== OPS.restore) {\n    break;\n   }\n   i += 4;\n  }\n  var count = (i - iFirstSave) / 4;\n  count = handlePaintSolidColorImageMask(iFirstSave, count, fnArray, argsArray);\n  if (count < MIN_IMAGES_IN_MASKS_BLOCK) {\n   return i;\n  }\n  var q;\n  var isSameImage = false;\n  var iTransform, transformArgs;\n  var firstPIMXOArg0 = argsArray[iFirstPIMXO][0];\n  if (argsArray[iFirstTransform][1] === 0 && argsArray[iFirstTransform][2] === 0) {\n   isSameImage = true;\n   var firstTransformArg0 = argsArray[iFirstTransform][0];\n   var firstTransformArg3 = argsArray[iFirstTransform][3];\n   iTransform = iFirstTransform + 4;\n   var iPIMXO = iFirstPIMXO + 4;\n   for (q = 1; q < count; q++, iTransform += 4, iPIMXO += 4) {\n    transformArgs = argsArray[iTransform];\n    if (argsArray[iPIMXO][0] !== firstPIMXOArg0 || transformArgs[0] !== firstTransformArg0 || transformArgs[1] !== 0 || transformArgs[2] !== 0 || transformArgs[3] !== firstTransformArg3) {\n     if (q < MIN_IMAGES_IN_MASKS_BLOCK) {\n      isSameImage = false;\n     } else {\n      count = q;\n     }\n     break;\n    }\n   }\n  }\n  if (isSameImage) {\n   count = Math.min(count, MAX_SAME_IMAGES_IN_MASKS_BLOCK);\n   var positions = new Float32Array(count * 2);\n   iTransform = iFirstTransform;\n   for (q = 0; q < count; q++, iTransform += 4) {\n    transformArgs = argsArray[iTransform];\n    positions[q << 1] = transformArgs[4];\n    positions[(q << 1) + 1] = transformArgs[5];\n   }\n   fnArray.splice(iFirstSave, count * 4, OPS.paintImageMaskXObjectRepeat);\n   argsArray.splice(iFirstSave, count * 4, [\n    firstPIMXOArg0,\n    firstTransformArg0,\n    firstTransformArg3,\n    positions\n   ]);\n  } else {\n   count = Math.min(count, MAX_IMAGES_IN_MASKS_BLOCK);\n   var images = [];\n   for (q = 0; q < count; q++) {\n    transformArgs = argsArray[iFirstTransform + (q << 2)];\n    var maskParams = argsArray[iFirstPIMXO + (q << 2)][0];\n    images.push({\n     data: maskParams.data,\n     width: maskParams.width,\n     height: maskParams.height,\n     transform: transformArgs\n    });\n   }\n   fnArray.splice(iFirstSave, count * 4, OPS.paintImageMaskXObjectGroup);\n   argsArray.splice(iFirstSave, count * 4, [images]);\n  }\n  return iFirstSave + 1;\n });\n addState(InitialState, [\n  OPS.save,\n  OPS.transform,\n  OPS.paintImageXObject,\n  OPS.restore\n ], function (context) {\n  var MIN_IMAGES_IN_BLOCK = 3;\n  var MAX_IMAGES_IN_BLOCK = 1000;\n  var fnArray = context.fnArray, argsArray = context.argsArray;\n  var curr = context.iCurr;\n  var iFirstSave = curr - 3;\n  var iFirstTransform = curr - 2;\n  var iFirstPIXO = curr - 1;\n  var iFirstRestore = curr;\n  if (argsArray[iFirstTransform][1] !== 0 || argsArray[iFirstTransform][2] !== 0) {\n   return iFirstRestore + 1;\n  }\n  var firstPIXOArg0 = argsArray[iFirstPIXO][0];\n  var firstTransformArg0 = argsArray[iFirstTransform][0];\n  var firstTransformArg3 = argsArray[iFirstTransform][3];\n  var i = iFirstSave + 4;\n  var ii = fnArray.length;\n  while (i + 3 < ii) {\n   if (fnArray[i] !== OPS.save || fnArray[i + 1] !== OPS.transform || fnArray[i + 2] !== OPS.paintImageXObject || fnArray[i + 3] !== OPS.restore) {\n    break;\n   }\n   if (argsArray[i + 1][0] !== firstTransformArg0 || argsArray[i + 1][1] !== 0 || argsArray[i + 1][2] !== 0 || argsArray[i + 1][3] !== firstTransformArg3) {\n    break;\n   }\n   if (argsArray[i + 2][0] !== firstPIXOArg0) {\n    break;\n   }\n   i += 4;\n  }\n  var count = Math.min((i - iFirstSave) / 4, MAX_IMAGES_IN_BLOCK);\n  if (count < MIN_IMAGES_IN_BLOCK) {\n   return i;\n  }\n  var positions = new Float32Array(count * 2);\n  var iTransform = iFirstTransform;\n  for (var q = 0; q < count; q++, iTransform += 4) {\n   var transformArgs = argsArray[iTransform];\n   positions[q << 1] = transformArgs[4];\n   positions[(q << 1) + 1] = transformArgs[5];\n  }\n  var args = [\n   firstPIXOArg0,\n   firstTransformArg0,\n   firstTransformArg3,\n   positions\n  ];\n  fnArray.splice(iFirstSave, count * 4, OPS.paintImageXObjectRepeat);\n  argsArray.splice(iFirstSave, count * 4, args);\n  return iFirstSave + 1;\n });\n addState(InitialState, [\n  OPS.beginText,\n  OPS.setFont,\n  OPS.setTextMatrix,\n  OPS.showText,\n  OPS.endText\n ], function (context) {\n  var MIN_CHARS_IN_BLOCK = 3;\n  var MAX_CHARS_IN_BLOCK = 1000;\n  var fnArray = context.fnArray, argsArray = context.argsArray;\n  var curr = context.iCurr;\n  var iFirstBeginText = curr - 4;\n  var iFirstSetFont = curr - 3;\n  var iFirstSetTextMatrix = curr - 2;\n  var iFirstShowText = curr - 1;\n  var iFirstEndText = curr;\n  var firstSetFontArg0 = argsArray[iFirstSetFont][0];\n  var firstSetFontArg1 = argsArray[iFirstSetFont][1];\n  var i = iFirstBeginText + 5;\n  var ii = fnArray.length;\n  while (i + 4 < ii) {\n   if (fnArray[i] !== OPS.beginText || fnArray[i + 1] !== OPS.setFont || fnArray[i + 2] !== OPS.setTextMatrix || fnArray[i + 3] !== OPS.showText || fnArray[i + 4] !== OPS.endText) {\n    break;\n   }\n   if (argsArray[i + 1][0] !== firstSetFontArg0 || argsArray[i + 1][1] !== firstSetFontArg1) {\n    break;\n   }\n   i += 5;\n  }\n  var count = Math.min((i - iFirstBeginText) / 5, MAX_CHARS_IN_BLOCK);\n  if (count < MIN_CHARS_IN_BLOCK) {\n   return i;\n  }\n  var iFirst = iFirstBeginText;\n  if (iFirstBeginText >= 4 && fnArray[iFirstBeginText - 4] === fnArray[iFirstSetFont] && fnArray[iFirstBeginText - 3] === fnArray[iFirstSetTextMatrix] && fnArray[iFirstBeginText - 2] === fnArray[iFirstShowText] && fnArray[iFirstBeginText - 1] === fnArray[iFirstEndText] && argsArray[iFirstBeginText - 4][0] === firstSetFontArg0 && argsArray[iFirstBeginText - 4][1] === firstSetFontArg1) {\n   count++;\n   iFirst -= 5;\n  }\n  var iEndText = iFirst + 4;\n  for (var q = 1; q < count; q++) {\n   fnArray.splice(iEndText, 3);\n   argsArray.splice(iEndText, 3);\n   iEndText += 2;\n  }\n  return iEndText + 1;\n });\n function QueueOptimizer() {\n }\n QueueOptimizer.prototype = {\n  optimize: function QueueOptimizer_optimize(queue) {\n   var fnArray = queue.fnArray, argsArray = queue.argsArray;\n   var context = {\n    iCurr: 0,\n    fnArray: fnArray,\n    argsArray: argsArray\n   };\n   var state;\n   var i = 0, ii = fnArray.length;\n   while (i < ii) {\n    state = (state || InitialState)[fnArray[i]];\n    if (typeof state === 'function') {\n     context.iCurr = i;\n     i = state(context);\n     state = undefined;\n     ii = context.fnArray.length;\n    } else {\n     i++;\n    }\n   }\n  }\n };\n return QueueOptimizer;\n}();\nexports.OperatorList = OperatorList;\nexports.PartialEvaluator = PartialEvaluator;\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar coreArithmeticDecoder = __w_pdfjs_require__(10);\nvar info = sharedUtil.info;\nvar warn = sharedUtil.warn;\nvar error = sharedUtil.error;\nvar log2 = sharedUtil.log2;\nvar readUint16 = sharedUtil.readUint16;\nvar readUint32 = sharedUtil.readUint32;\nvar ArithmeticDecoder = coreArithmeticDecoder.ArithmeticDecoder;\nvar JpxImage = function JpxImageClosure() {\n var SubbandsGainLog2 = {\n  'LL': 0,\n  'LH': 1,\n  'HL': 1,\n  'HH': 2\n };\n function JpxImage() {\n  this.failOnCorruptedImage = false;\n }\n JpxImage.prototype = {\n  parse: function JpxImage_parse(data) {\n   var head = readUint16(data, 0);\n   if (head === 0xFF4F) {\n    this.parseCodestream(data, 0, data.length);\n    return;\n   }\n   var position = 0, length = data.length;\n   while (position < length) {\n    var headerSize = 8;\n    var lbox = readUint32(data, position);\n    var tbox = readUint32(data, position + 4);\n    position += headerSize;\n    if (lbox === 1) {\n     lbox = readUint32(data, position) * 4294967296 + readUint32(data, position + 4);\n     position += 8;\n     headerSize += 8;\n    }\n    if (lbox === 0) {\n     lbox = length - position + headerSize;\n    }\n    if (lbox < headerSize) {\n     error('JPX Error: Invalid box field size');\n    }\n    var dataLength = lbox - headerSize;\n    var jumpDataLength = true;\n    switch (tbox) {\n    case 0x6A703268:\n     jumpDataLength = false;\n     break;\n    case 0x636F6C72:\n     var method = data[position];\n     if (method === 1) {\n      var colorspace = readUint32(data, position + 3);\n      switch (colorspace) {\n      case 16:\n      case 17:\n      case 18:\n       break;\n      default:\n       warn('Unknown colorspace ' + colorspace);\n       break;\n      }\n     } else if (method === 2) {\n      info('ICC profile not supported');\n     }\n     break;\n    case 0x6A703263:\n     this.parseCodestream(data, position, position + dataLength);\n     break;\n    case 0x6A502020:\n     if (0x0d0a870a !== readUint32(data, position)) {\n      warn('Invalid JP2 signature');\n     }\n     break;\n    case 0x6A501A1A:\n    case 0x66747970:\n    case 0x72726571:\n    case 0x72657320:\n    case 0x69686472:\n     break;\n    default:\n     var headerType = String.fromCharCode(tbox >> 24 & 0xFF, tbox >> 16 & 0xFF, tbox >> 8 & 0xFF, tbox & 0xFF);\n     warn('Unsupported header type ' + tbox + ' (' + headerType + ')');\n     break;\n    }\n    if (jumpDataLength) {\n     position += dataLength;\n    }\n   }\n  },\n  parseImageProperties: function JpxImage_parseImageProperties(stream) {\n   var newByte = stream.getByte();\n   while (newByte >= 0) {\n    var oldByte = newByte;\n    newByte = stream.getByte();\n    var code = oldByte << 8 | newByte;\n    if (code === 0xFF51) {\n     stream.skip(4);\n     var Xsiz = stream.getInt32() >>> 0;\n     var Ysiz = stream.getInt32() >>> 0;\n     var XOsiz = stream.getInt32() >>> 0;\n     var YOsiz = stream.getInt32() >>> 0;\n     stream.skip(16);\n     var Csiz = stream.getUint16();\n     this.width = Xsiz - XOsiz;\n     this.height = Ysiz - YOsiz;\n     this.componentsCount = Csiz;\n     this.bitsPerComponent = 8;\n     return;\n    }\n   }\n   error('JPX Error: No size marker found in JPX stream');\n  },\n  parseCodestream: function JpxImage_parseCodestream(data, start, end) {\n   var context = {};\n   var doNotRecover = false;\n   try {\n    var position = start;\n    while (position + 1 < end) {\n     var code = readUint16(data, position);\n     position += 2;\n     var length = 0, j, sqcd, spqcds, spqcdSize, scalarExpounded, tile;\n     switch (code) {\n     case 0xFF4F:\n      context.mainHeader = true;\n      break;\n     case 0xFFD9:\n      break;\n     case 0xFF51:\n      length = readUint16(data, position);\n      var siz = {};\n      siz.Xsiz = readUint32(data, position + 4);\n      siz.Ysiz = readUint32(data, position + 8);\n      siz.XOsiz = readUint32(data, position + 12);\n      siz.YOsiz = readUint32(data, position + 16);\n      siz.XTsiz = readUint32(data, position + 20);\n      siz.YTsiz = readUint32(data, position + 24);\n      siz.XTOsiz = readUint32(data, position + 28);\n      siz.YTOsiz = readUint32(data, position + 32);\n      var componentsCount = readUint16(data, position + 36);\n      siz.Csiz = componentsCount;\n      var components = [];\n      j = position + 38;\n      for (var i = 0; i < componentsCount; i++) {\n       var component = {\n        precision: (data[j] & 0x7F) + 1,\n        isSigned: !!(data[j] & 0x80),\n        XRsiz: data[j + 1],\n        YRsiz: data[j + 1]\n       };\n       calculateComponentDimensions(component, siz);\n       components.push(component);\n      }\n      context.SIZ = siz;\n      context.components = components;\n      calculateTileGrids(context, components);\n      context.QCC = [];\n      context.COC = [];\n      break;\n     case 0xFF5C:\n      length = readUint16(data, position);\n      var qcd = {};\n      j = position + 2;\n      sqcd = data[j++];\n      switch (sqcd & 0x1F) {\n      case 0:\n       spqcdSize = 8;\n       scalarExpounded = true;\n       break;\n      case 1:\n       spqcdSize = 16;\n       scalarExpounded = false;\n       break;\n      case 2:\n       spqcdSize = 16;\n       scalarExpounded = true;\n       break;\n      default:\n       throw new Error('Invalid SQcd value ' + sqcd);\n      }\n      qcd.noQuantization = spqcdSize === 8;\n      qcd.scalarExpounded = scalarExpounded;\n      qcd.guardBits = sqcd >> 5;\n      spqcds = [];\n      while (j < length + position) {\n       var spqcd = {};\n       if (spqcdSize === 8) {\n        spqcd.epsilon = data[j++] >> 3;\n        spqcd.mu = 0;\n       } else {\n        spqcd.epsilon = data[j] >> 3;\n        spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n        j += 2;\n       }\n       spqcds.push(spqcd);\n      }\n      qcd.SPqcds = spqcds;\n      if (context.mainHeader) {\n       context.QCD = qcd;\n      } else {\n       context.currentTile.QCD = qcd;\n       context.currentTile.QCC = [];\n      }\n      break;\n     case 0xFF5D:\n      length = readUint16(data, position);\n      var qcc = {};\n      j = position + 2;\n      var cqcc;\n      if (context.SIZ.Csiz < 257) {\n       cqcc = data[j++];\n      } else {\n       cqcc = readUint16(data, j);\n       j += 2;\n      }\n      sqcd = data[j++];\n      switch (sqcd & 0x1F) {\n      case 0:\n       spqcdSize = 8;\n       scalarExpounded = true;\n       break;\n      case 1:\n       spqcdSize = 16;\n       scalarExpounded = false;\n       break;\n      case 2:\n       spqcdSize = 16;\n       scalarExpounded = true;\n       break;\n      default:\n       throw new Error('Invalid SQcd value ' + sqcd);\n      }\n      qcc.noQuantization = spqcdSize === 8;\n      qcc.scalarExpounded = scalarExpounded;\n      qcc.guardBits = sqcd >> 5;\n      spqcds = [];\n      while (j < length + position) {\n       spqcd = {};\n       if (spqcdSize === 8) {\n        spqcd.epsilon = data[j++] >> 3;\n        spqcd.mu = 0;\n       } else {\n        spqcd.epsilon = data[j] >> 3;\n        spqcd.mu = (data[j] & 0x7) << 8 | data[j + 1];\n        j += 2;\n       }\n       spqcds.push(spqcd);\n      }\n      qcc.SPqcds = spqcds;\n      if (context.mainHeader) {\n       context.QCC[cqcc] = qcc;\n      } else {\n       context.currentTile.QCC[cqcc] = qcc;\n      }\n      break;\n     case 0xFF52:\n      length = readUint16(data, position);\n      var cod = {};\n      j = position + 2;\n      var scod = data[j++];\n      cod.entropyCoderWithCustomPrecincts = !!(scod & 1);\n      cod.sopMarkerUsed = !!(scod & 2);\n      cod.ephMarkerUsed = !!(scod & 4);\n      cod.progressionOrder = data[j++];\n      cod.layersCount = readUint16(data, j);\n      j += 2;\n      cod.multipleComponentTransform = data[j++];\n      cod.decompositionLevelsCount = data[j++];\n      cod.xcb = (data[j++] & 0xF) + 2;\n      cod.ycb = (data[j++] & 0xF) + 2;\n      var blockStyle = data[j++];\n      cod.selectiveArithmeticCodingBypass = !!(blockStyle & 1);\n      cod.resetContextProbabilities = !!(blockStyle & 2);\n      cod.terminationOnEachCodingPass = !!(blockStyle & 4);\n      cod.verticalyStripe = !!(blockStyle & 8);\n      cod.predictableTermination = !!(blockStyle & 16);\n      cod.segmentationSymbolUsed = !!(blockStyle & 32);\n      cod.reversibleTransformation = data[j++];\n      if (cod.entropyCoderWithCustomPrecincts) {\n       var precinctsSizes = [];\n       while (j < length + position) {\n        var precinctsSize = data[j++];\n        precinctsSizes.push({\n         PPx: precinctsSize & 0xF,\n         PPy: precinctsSize >> 4\n        });\n       }\n       cod.precinctsSizes = precinctsSizes;\n      }\n      var unsupported = [];\n      if (cod.selectiveArithmeticCodingBypass) {\n       unsupported.push('selectiveArithmeticCodingBypass');\n      }\n      if (cod.resetContextProbabilities) {\n       unsupported.push('resetContextProbabilities');\n      }\n      if (cod.terminationOnEachCodingPass) {\n       unsupported.push('terminationOnEachCodingPass');\n      }\n      if (cod.verticalyStripe) {\n       unsupported.push('verticalyStripe');\n      }\n      if (cod.predictableTermination) {\n       unsupported.push('predictableTermination');\n      }\n      if (unsupported.length > 0) {\n       doNotRecover = true;\n       throw new Error('Unsupported COD options (' + unsupported.join(', ') + ')');\n      }\n      if (context.mainHeader) {\n       context.COD = cod;\n      } else {\n       context.currentTile.COD = cod;\n       context.currentTile.COC = [];\n      }\n      break;\n     case 0xFF90:\n      length = readUint16(data, position);\n      tile = {};\n      tile.index = readUint16(data, position + 2);\n      tile.length = readUint32(data, position + 4);\n      tile.dataEnd = tile.length + position - 2;\n      tile.partIndex = data[position + 8];\n      tile.partsCount = data[position + 9];\n      context.mainHeader = false;\n      if (tile.partIndex === 0) {\n       tile.COD = context.COD;\n       tile.COC = context.COC.slice(0);\n       tile.QCD = context.QCD;\n       tile.QCC = context.QCC.slice(0);\n      }\n      context.currentTile = tile;\n      break;\n     case 0xFF93:\n      tile = context.currentTile;\n      if (tile.partIndex === 0) {\n       initializeTile(context, tile.index);\n       buildPackets(context);\n      }\n      length = tile.dataEnd - position;\n      parseTilePackets(context, data, position, length);\n      break;\n     case 0xFF55:\n     case 0xFF57:\n     case 0xFF58:\n     case 0xFF64:\n      length = readUint16(data, position);\n      break;\n     case 0xFF53:\n      throw new Error('Codestream code 0xFF53 (COC) is ' + 'not implemented');\n     default:\n      throw new Error('Unknown codestream code: ' + code.toString(16));\n     }\n     position += length;\n    }\n   } catch (e) {\n    if (doNotRecover || this.failOnCorruptedImage) {\n     error('JPX Error: ' + e.message);\n    } else {\n     warn('JPX: Trying to recover from: ' + e.message);\n    }\n   }\n   this.tiles = transformComponents(context);\n   this.width = context.SIZ.Xsiz - context.SIZ.XOsiz;\n   this.height = context.SIZ.Ysiz - context.SIZ.YOsiz;\n   this.componentsCount = context.SIZ.Csiz;\n  }\n };\n function calculateComponentDimensions(component, siz) {\n  component.x0 = Math.ceil(siz.XOsiz / component.XRsiz);\n  component.x1 = Math.ceil(siz.Xsiz / component.XRsiz);\n  component.y0 = Math.ceil(siz.YOsiz / component.YRsiz);\n  component.y1 = Math.ceil(siz.Ysiz / component.YRsiz);\n  component.width = component.x1 - component.x0;\n  component.height = component.y1 - component.y0;\n }\n function calculateTileGrids(context, components) {\n  var siz = context.SIZ;\n  var tile, tiles = [];\n  var numXtiles = Math.ceil((siz.Xsiz - siz.XTOsiz) / siz.XTsiz);\n  var numYtiles = Math.ceil((siz.Ysiz - siz.YTOsiz) / siz.YTsiz);\n  for (var q = 0; q < numYtiles; q++) {\n   for (var p = 0; p < numXtiles; p++) {\n    tile = {};\n    tile.tx0 = Math.max(siz.XTOsiz + p * siz.XTsiz, siz.XOsiz);\n    tile.ty0 = Math.max(siz.YTOsiz + q * siz.YTsiz, siz.YOsiz);\n    tile.tx1 = Math.min(siz.XTOsiz + (p + 1) * siz.XTsiz, siz.Xsiz);\n    tile.ty1 = Math.min(siz.YTOsiz + (q + 1) * siz.YTsiz, siz.Ysiz);\n    tile.width = tile.tx1 - tile.tx0;\n    tile.height = tile.ty1 - tile.ty0;\n    tile.components = [];\n    tiles.push(tile);\n   }\n  }\n  context.tiles = tiles;\n  var componentsCount = siz.Csiz;\n  for (var i = 0, ii = componentsCount; i < ii; i++) {\n   var component = components[i];\n   for (var j = 0, jj = tiles.length; j < jj; j++) {\n    var tileComponent = {};\n    tile = tiles[j];\n    tileComponent.tcx0 = Math.ceil(tile.tx0 / component.XRsiz);\n    tileComponent.tcy0 = Math.ceil(tile.ty0 / component.YRsiz);\n    tileComponent.tcx1 = Math.ceil(tile.tx1 / component.XRsiz);\n    tileComponent.tcy1 = Math.ceil(tile.ty1 / component.YRsiz);\n    tileComponent.width = tileComponent.tcx1 - tileComponent.tcx0;\n    tileComponent.height = tileComponent.tcy1 - tileComponent.tcy0;\n    tile.components[i] = tileComponent;\n   }\n  }\n }\n function getBlocksDimensions(context, component, r) {\n  var codOrCoc = component.codingStyleParameters;\n  var result = {};\n  if (!codOrCoc.entropyCoderWithCustomPrecincts) {\n   result.PPx = 15;\n   result.PPy = 15;\n  } else {\n   result.PPx = codOrCoc.precinctsSizes[r].PPx;\n   result.PPy = codOrCoc.precinctsSizes[r].PPy;\n  }\n  result.xcb_ = r > 0 ? Math.min(codOrCoc.xcb, result.PPx - 1) : Math.min(codOrCoc.xcb, result.PPx);\n  result.ycb_ = r > 0 ? Math.min(codOrCoc.ycb, result.PPy - 1) : Math.min(codOrCoc.ycb, result.PPy);\n  return result;\n }\n function buildPrecincts(context, resolution, dimensions) {\n  var precinctWidth = 1 << dimensions.PPx;\n  var precinctHeight = 1 << dimensions.PPy;\n  var isZeroRes = resolution.resLevel === 0;\n  var precinctWidthInSubband = 1 << dimensions.PPx + (isZeroRes ? 0 : -1);\n  var precinctHeightInSubband = 1 << dimensions.PPy + (isZeroRes ? 0 : -1);\n  var numprecinctswide = resolution.trx1 > resolution.trx0 ? Math.ceil(resolution.trx1 / precinctWidth) - Math.floor(resolution.trx0 / precinctWidth) : 0;\n  var numprecinctshigh = resolution.try1 > resolution.try0 ? Math.ceil(resolution.try1 / precinctHeight) - Math.floor(resolution.try0 / precinctHeight) : 0;\n  var numprecincts = numprecinctswide * numprecinctshigh;\n  resolution.precinctParameters = {\n   precinctWidth: precinctWidth,\n   precinctHeight: precinctHeight,\n   numprecinctswide: numprecinctswide,\n   numprecinctshigh: numprecinctshigh,\n   numprecincts: numprecincts,\n   precinctWidthInSubband: precinctWidthInSubband,\n   precinctHeightInSubband: precinctHeightInSubband\n  };\n }\n function buildCodeblocks(context, subband, dimensions) {\n  var xcb_ = dimensions.xcb_;\n  var ycb_ = dimensions.ycb_;\n  var codeblockWidth = 1 << xcb_;\n  var codeblockHeight = 1 << ycb_;\n  var cbx0 = subband.tbx0 >> xcb_;\n  var cby0 = subband.tby0 >> ycb_;\n  var cbx1 = subband.tbx1 + codeblockWidth - 1 >> xcb_;\n  var cby1 = subband.tby1 + codeblockHeight - 1 >> ycb_;\n  var precinctParameters = subband.resolution.precinctParameters;\n  var codeblocks = [];\n  var precincts = [];\n  var i, j, codeblock, precinctNumber;\n  for (j = cby0; j < cby1; j++) {\n   for (i = cbx0; i < cbx1; i++) {\n    codeblock = {\n     cbx: i,\n     cby: j,\n     tbx0: codeblockWidth * i,\n     tby0: codeblockHeight * j,\n     tbx1: codeblockWidth * (i + 1),\n     tby1: codeblockHeight * (j + 1)\n    };\n    codeblock.tbx0_ = Math.max(subband.tbx0, codeblock.tbx0);\n    codeblock.tby0_ = Math.max(subband.tby0, codeblock.tby0);\n    codeblock.tbx1_ = Math.min(subband.tbx1, codeblock.tbx1);\n    codeblock.tby1_ = Math.min(subband.tby1, codeblock.tby1);\n    var pi = Math.floor((codeblock.tbx0_ - subband.tbx0) / precinctParameters.precinctWidthInSubband);\n    var pj = Math.floor((codeblock.tby0_ - subband.tby0) / precinctParameters.precinctHeightInSubband);\n    precinctNumber = pi + pj * precinctParameters.numprecinctswide;\n    codeblock.precinctNumber = precinctNumber;\n    codeblock.subbandType = subband.type;\n    codeblock.Lblock = 3;\n    if (codeblock.tbx1_ <= codeblock.tbx0_ || codeblock.tby1_ <= codeblock.tby0_) {\n     continue;\n    }\n    codeblocks.push(codeblock);\n    var precinct = precincts[precinctNumber];\n    if (precinct !== undefined) {\n     if (i < precinct.cbxMin) {\n      precinct.cbxMin = i;\n     } else if (i > precinct.cbxMax) {\n      precinct.cbxMax = i;\n     }\n     if (j < precinct.cbyMin) {\n      precinct.cbxMin = j;\n     } else if (j > precinct.cbyMax) {\n      precinct.cbyMax = j;\n     }\n    } else {\n     precincts[precinctNumber] = precinct = {\n      cbxMin: i,\n      cbyMin: j,\n      cbxMax: i,\n      cbyMax: j\n     };\n    }\n    codeblock.precinct = precinct;\n   }\n  }\n  subband.codeblockParameters = {\n   codeblockWidth: xcb_,\n   codeblockHeight: ycb_,\n   numcodeblockwide: cbx1 - cbx0 + 1,\n   numcodeblockhigh: cby1 - cby0 + 1\n  };\n  subband.codeblocks = codeblocks;\n  subband.precincts = precincts;\n }\n function createPacket(resolution, precinctNumber, layerNumber) {\n  var precinctCodeblocks = [];\n  var subbands = resolution.subbands;\n  for (var i = 0, ii = subbands.length; i < ii; i++) {\n   var subband = subbands[i];\n   var codeblocks = subband.codeblocks;\n   for (var j = 0, jj = codeblocks.length; j < jj; j++) {\n    var codeblock = codeblocks[j];\n    if (codeblock.precinctNumber !== precinctNumber) {\n     continue;\n    }\n    precinctCodeblocks.push(codeblock);\n   }\n  }\n  return {\n   layerNumber: layerNumber,\n   codeblocks: precinctCodeblocks\n  };\n }\n function LayerResolutionComponentPositionIterator(context) {\n  var siz = context.SIZ;\n  var tileIndex = context.currentTile.index;\n  var tile = context.tiles[tileIndex];\n  var layersCount = tile.codingStyleDefaultParameters.layersCount;\n  var componentsCount = siz.Csiz;\n  var maxDecompositionLevelsCount = 0;\n  for (var q = 0; q < componentsCount; q++) {\n   maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n  }\n  var l = 0, r = 0, i = 0, k = 0;\n  this.nextPacket = function JpxImage_nextPacket() {\n   for (; l < layersCount; l++) {\n    for (; r <= maxDecompositionLevelsCount; r++) {\n     for (; i < componentsCount; i++) {\n      var component = tile.components[i];\n      if (r > component.codingStyleParameters.decompositionLevelsCount) {\n       continue;\n      }\n      var resolution = component.resolutions[r];\n      var numprecincts = resolution.precinctParameters.numprecincts;\n      for (; k < numprecincts;) {\n       var packet = createPacket(resolution, k, l);\n       k++;\n       return packet;\n      }\n      k = 0;\n     }\n     i = 0;\n    }\n    r = 0;\n   }\n   error('JPX Error: Out of packets');\n  };\n }\n function ResolutionLayerComponentPositionIterator(context) {\n  var siz = context.SIZ;\n  var tileIndex = context.currentTile.index;\n  var tile = context.tiles[tileIndex];\n  var layersCount = tile.codingStyleDefaultParameters.layersCount;\n  var componentsCount = siz.Csiz;\n  var maxDecompositionLevelsCount = 0;\n  for (var q = 0; q < componentsCount; q++) {\n   maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, tile.components[q].codingStyleParameters.decompositionLevelsCount);\n  }\n  var r = 0, l = 0, i = 0, k = 0;\n  this.nextPacket = function JpxImage_nextPacket() {\n   for (; r <= maxDecompositionLevelsCount; r++) {\n    for (; l < layersCount; l++) {\n     for (; i < componentsCount; i++) {\n      var component = tile.components[i];\n      if (r > component.codingStyleParameters.decompositionLevelsCount) {\n       continue;\n      }\n      var resolution = component.resolutions[r];\n      var numprecincts = resolution.precinctParameters.numprecincts;\n      for (; k < numprecincts;) {\n       var packet = createPacket(resolution, k, l);\n       k++;\n       return packet;\n      }\n      k = 0;\n     }\n     i = 0;\n    }\n    l = 0;\n   }\n   error('JPX Error: Out of packets');\n  };\n }\n function ResolutionPositionComponentLayerIterator(context) {\n  var siz = context.SIZ;\n  var tileIndex = context.currentTile.index;\n  var tile = context.tiles[tileIndex];\n  var layersCount = tile.codingStyleDefaultParameters.layersCount;\n  var componentsCount = siz.Csiz;\n  var l, r, c, p;\n  var maxDecompositionLevelsCount = 0;\n  for (c = 0; c < componentsCount; c++) {\n   var component = tile.components[c];\n   maxDecompositionLevelsCount = Math.max(maxDecompositionLevelsCount, component.codingStyleParameters.decompositionLevelsCount);\n  }\n  var maxNumPrecinctsInLevel = new Int32Array(maxDecompositionLevelsCount + 1);\n  for (r = 0; r <= maxDecompositionLevelsCount; ++r) {\n   var maxNumPrecincts = 0;\n   for (c = 0; c < componentsCount; ++c) {\n    var resolutions = tile.components[c].resolutions;\n    if (r < resolutions.length) {\n     maxNumPrecincts = Math.max(maxNumPrecincts, resolutions[r].precinctParameters.numprecincts);\n    }\n   }\n   maxNumPrecinctsInLevel[r] = maxNumPrecincts;\n  }\n  l = 0;\n  r = 0;\n  c = 0;\n  p = 0;\n  this.nextPacket = function JpxImage_nextPacket() {\n   for (; r <= maxDecompositionLevelsCount; r++) {\n    for (; p < maxNumPrecinctsInLevel[r]; p++) {\n     for (; c < componentsCount; c++) {\n      var component = tile.components[c];\n      if (r > component.codingStyleParameters.decompositionLevelsCount) {\n       continue;\n      }\n      var resolution = component.resolutions[r];\n      var numprecincts = resolution.precinctParameters.numprecincts;\n      if (p >= numprecincts) {\n       continue;\n      }\n      for (; l < layersCount;) {\n       var packet = createPacket(resolution, p, l);\n       l++;\n       return packet;\n      }\n      l = 0;\n     }\n     c = 0;\n    }\n    p = 0;\n   }\n   error('JPX Error: Out of packets');\n  };\n }\n function PositionComponentResolutionLayerIterator(context) {\n  var siz = context.SIZ;\n  var tileIndex = context.currentTile.index;\n  var tile = context.tiles[tileIndex];\n  var layersCount = tile.codingStyleDefaultParameters.layersCount;\n  var componentsCount = siz.Csiz;\n  var precinctsSizes = getPrecinctSizesInImageScale(tile);\n  var precinctsIterationSizes = precinctsSizes;\n  var l = 0, r = 0, c = 0, px = 0, py = 0;\n  this.nextPacket = function JpxImage_nextPacket() {\n   for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n    for (; px < precinctsIterationSizes.maxNumWide; px++) {\n     for (; c < componentsCount; c++) {\n      var component = tile.components[c];\n      var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n      for (; r <= decompositionLevelsCount; r++) {\n       var resolution = component.resolutions[r];\n       var sizeInImageScale = precinctsSizes.components[c].resolutions[r];\n       var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n       if (k === null) {\n        continue;\n       }\n       for (; l < layersCount;) {\n        var packet = createPacket(resolution, k, l);\n        l++;\n        return packet;\n       }\n       l = 0;\n      }\n      r = 0;\n     }\n     c = 0;\n    }\n    px = 0;\n   }\n   error('JPX Error: Out of packets');\n  };\n }\n function ComponentPositionResolutionLayerIterator(context) {\n  var siz = context.SIZ;\n  var tileIndex = context.currentTile.index;\n  var tile = context.tiles[tileIndex];\n  var layersCount = tile.codingStyleDefaultParameters.layersCount;\n  var componentsCount = siz.Csiz;\n  var precinctsSizes = getPrecinctSizesInImageScale(tile);\n  var l = 0, r = 0, c = 0, px = 0, py = 0;\n  this.nextPacket = function JpxImage_nextPacket() {\n   for (; c < componentsCount; ++c) {\n    var component = tile.components[c];\n    var precinctsIterationSizes = precinctsSizes.components[c];\n    var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n    for (; py < precinctsIterationSizes.maxNumHigh; py++) {\n     for (; px < precinctsIterationSizes.maxNumWide; px++) {\n      for (; r <= decompositionLevelsCount; r++) {\n       var resolution = component.resolutions[r];\n       var sizeInImageScale = precinctsIterationSizes.resolutions[r];\n       var k = getPrecinctIndexIfExist(px, py, sizeInImageScale, precinctsIterationSizes, resolution);\n       if (k === null) {\n        continue;\n       }\n       for (; l < layersCount;) {\n        var packet = createPacket(resolution, k, l);\n        l++;\n        return packet;\n       }\n       l = 0;\n      }\n      r = 0;\n     }\n     px = 0;\n    }\n    py = 0;\n   }\n   error('JPX Error: Out of packets');\n  };\n }\n function getPrecinctIndexIfExist(pxIndex, pyIndex, sizeInImageScale, precinctIterationSizes, resolution) {\n  var posX = pxIndex * precinctIterationSizes.minWidth;\n  var posY = pyIndex * precinctIterationSizes.minHeight;\n  if (posX % sizeInImageScale.width !== 0 || posY % sizeInImageScale.height !== 0) {\n   return null;\n  }\n  var startPrecinctRowIndex = posY / sizeInImageScale.width * resolution.precinctParameters.numprecinctswide;\n  return posX / sizeInImageScale.height + startPrecinctRowIndex;\n }\n function getPrecinctSizesInImageScale(tile) {\n  var componentsCount = tile.components.length;\n  var minWidth = Number.MAX_VALUE;\n  var minHeight = Number.MAX_VALUE;\n  var maxNumWide = 0;\n  var maxNumHigh = 0;\n  var sizePerComponent = new Array(componentsCount);\n  for (var c = 0; c < componentsCount; c++) {\n   var component = tile.components[c];\n   var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n   var sizePerResolution = new Array(decompositionLevelsCount + 1);\n   var minWidthCurrentComponent = Number.MAX_VALUE;\n   var minHeightCurrentComponent = Number.MAX_VALUE;\n   var maxNumWideCurrentComponent = 0;\n   var maxNumHighCurrentComponent = 0;\n   var scale = 1;\n   for (var r = decompositionLevelsCount; r >= 0; --r) {\n    var resolution = component.resolutions[r];\n    var widthCurrentResolution = scale * resolution.precinctParameters.precinctWidth;\n    var heightCurrentResolution = scale * resolution.precinctParameters.precinctHeight;\n    minWidthCurrentComponent = Math.min(minWidthCurrentComponent, widthCurrentResolution);\n    minHeightCurrentComponent = Math.min(minHeightCurrentComponent, heightCurrentResolution);\n    maxNumWideCurrentComponent = Math.max(maxNumWideCurrentComponent, resolution.precinctParameters.numprecinctswide);\n    maxNumHighCurrentComponent = Math.max(maxNumHighCurrentComponent, resolution.precinctParameters.numprecinctshigh);\n    sizePerResolution[r] = {\n     width: widthCurrentResolution,\n     height: heightCurrentResolution\n    };\n    scale <<= 1;\n   }\n   minWidth = Math.min(minWidth, minWidthCurrentComponent);\n   minHeight = Math.min(minHeight, minHeightCurrentComponent);\n   maxNumWide = Math.max(maxNumWide, maxNumWideCurrentComponent);\n   maxNumHigh = Math.max(maxNumHigh, maxNumHighCurrentComponent);\n   sizePerComponent[c] = {\n    resolutions: sizePerResolution,\n    minWidth: minWidthCurrentComponent,\n    minHeight: minHeightCurrentComponent,\n    maxNumWide: maxNumWideCurrentComponent,\n    maxNumHigh: maxNumHighCurrentComponent\n   };\n  }\n  return {\n   components: sizePerComponent,\n   minWidth: minWidth,\n   minHeight: minHeight,\n   maxNumWide: maxNumWide,\n   maxNumHigh: maxNumHigh\n  };\n }\n function buildPackets(context) {\n  var siz = context.SIZ;\n  var tileIndex = context.currentTile.index;\n  var tile = context.tiles[tileIndex];\n  var componentsCount = siz.Csiz;\n  for (var c = 0; c < componentsCount; c++) {\n   var component = tile.components[c];\n   var decompositionLevelsCount = component.codingStyleParameters.decompositionLevelsCount;\n   var resolutions = [];\n   var subbands = [];\n   for (var r = 0; r <= decompositionLevelsCount; r++) {\n    var blocksDimensions = getBlocksDimensions(context, component, r);\n    var resolution = {};\n    var scale = 1 << decompositionLevelsCount - r;\n    resolution.trx0 = Math.ceil(component.tcx0 / scale);\n    resolution.try0 = Math.ceil(component.tcy0 / scale);\n    resolution.trx1 = Math.ceil(component.tcx1 / scale);\n    resolution.try1 = Math.ceil(component.tcy1 / scale);\n    resolution.resLevel = r;\n    buildPrecincts(context, resolution, blocksDimensions);\n    resolutions.push(resolution);\n    var subband;\n    if (r === 0) {\n     subband = {};\n     subband.type = 'LL';\n     subband.tbx0 = Math.ceil(component.tcx0 / scale);\n     subband.tby0 = Math.ceil(component.tcy0 / scale);\n     subband.tbx1 = Math.ceil(component.tcx1 / scale);\n     subband.tby1 = Math.ceil(component.tcy1 / scale);\n     subband.resolution = resolution;\n     buildCodeblocks(context, subband, blocksDimensions);\n     subbands.push(subband);\n     resolution.subbands = [subband];\n    } else {\n     var bscale = 1 << decompositionLevelsCount - r + 1;\n     var resolutionSubbands = [];\n     subband = {};\n     subband.type = 'HL';\n     subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n     subband.tby0 = Math.ceil(component.tcy0 / bscale);\n     subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n     subband.tby1 = Math.ceil(component.tcy1 / bscale);\n     subband.resolution = resolution;\n     buildCodeblocks(context, subband, blocksDimensions);\n     subbands.push(subband);\n     resolutionSubbands.push(subband);\n     subband = {};\n     subband.type = 'LH';\n     subband.tbx0 = Math.ceil(component.tcx0 / bscale);\n     subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n     subband.tbx1 = Math.ceil(component.tcx1 / bscale);\n     subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n     subband.resolution = resolution;\n     buildCodeblocks(context, subband, blocksDimensions);\n     subbands.push(subband);\n     resolutionSubbands.push(subband);\n     subband = {};\n     subband.type = 'HH';\n     subband.tbx0 = Math.ceil(component.tcx0 / bscale - 0.5);\n     subband.tby0 = Math.ceil(component.tcy0 / bscale - 0.5);\n     subband.tbx1 = Math.ceil(component.tcx1 / bscale - 0.5);\n     subband.tby1 = Math.ceil(component.tcy1 / bscale - 0.5);\n     subband.resolution = resolution;\n     buildCodeblocks(context, subband, blocksDimensions);\n     subbands.push(subband);\n     resolutionSubbands.push(subband);\n     resolution.subbands = resolutionSubbands;\n    }\n   }\n   component.resolutions = resolutions;\n   component.subbands = subbands;\n  }\n  var progressionOrder = tile.codingStyleDefaultParameters.progressionOrder;\n  switch (progressionOrder) {\n  case 0:\n   tile.packetsIterator = new LayerResolutionComponentPositionIterator(context);\n   break;\n  case 1:\n   tile.packetsIterator = new ResolutionLayerComponentPositionIterator(context);\n   break;\n  case 2:\n   tile.packetsIterator = new ResolutionPositionComponentLayerIterator(context);\n   break;\n  case 3:\n   tile.packetsIterator = new PositionComponentResolutionLayerIterator(context);\n   break;\n  case 4:\n   tile.packetsIterator = new ComponentPositionResolutionLayerIterator(context);\n   break;\n  default:\n   error('JPX Error: Unsupported progression order ' + progressionOrder);\n  }\n }\n function parseTilePackets(context, data, offset, dataLength) {\n  var position = 0;\n  var buffer, bufferSize = 0, skipNextBit = false;\n  function readBits(count) {\n   while (bufferSize < count) {\n    var b = data[offset + position];\n    position++;\n    if (skipNextBit) {\n     buffer = buffer << 7 | b;\n     bufferSize += 7;\n     skipNextBit = false;\n    } else {\n     buffer = buffer << 8 | b;\n     bufferSize += 8;\n    }\n    if (b === 0xFF) {\n     skipNextBit = true;\n    }\n   }\n   bufferSize -= count;\n   return buffer >>> bufferSize & (1 << count) - 1;\n  }\n  function skipMarkerIfEqual(value) {\n   if (data[offset + position - 1] === 0xFF && data[offset + position] === value) {\n    skipBytes(1);\n    return true;\n   } else if (data[offset + position] === 0xFF && data[offset + position + 1] === value) {\n    skipBytes(2);\n    return true;\n   }\n   return false;\n  }\n  function skipBytes(count) {\n   position += count;\n  }\n  function alignToByte() {\n   bufferSize = 0;\n   if (skipNextBit) {\n    position++;\n    skipNextBit = false;\n   }\n  }\n  function readCodingpasses() {\n   if (readBits(1) === 0) {\n    return 1;\n   }\n   if (readBits(1) === 0) {\n    return 2;\n   }\n   var value = readBits(2);\n   if (value < 3) {\n    return value + 3;\n   }\n   value = readBits(5);\n   if (value < 31) {\n    return value + 6;\n   }\n   value = readBits(7);\n   return value + 37;\n  }\n  var tileIndex = context.currentTile.index;\n  var tile = context.tiles[tileIndex];\n  var sopMarkerUsed = context.COD.sopMarkerUsed;\n  var ephMarkerUsed = context.COD.ephMarkerUsed;\n  var packetsIterator = tile.packetsIterator;\n  while (position < dataLength) {\n   alignToByte();\n   if (sopMarkerUsed && skipMarkerIfEqual(0x91)) {\n    skipBytes(4);\n   }\n   var packet = packetsIterator.nextPacket();\n   if (!readBits(1)) {\n    continue;\n   }\n   var layerNumber = packet.layerNumber;\n   var queue = [], codeblock;\n   for (var i = 0, ii = packet.codeblocks.length; i < ii; i++) {\n    codeblock = packet.codeblocks[i];\n    var precinct = codeblock.precinct;\n    var codeblockColumn = codeblock.cbx - precinct.cbxMin;\n    var codeblockRow = codeblock.cby - precinct.cbyMin;\n    var codeblockIncluded = false;\n    var firstTimeInclusion = false;\n    var valueReady;\n    if (codeblock['included'] !== undefined) {\n     codeblockIncluded = !!readBits(1);\n    } else {\n     precinct = codeblock.precinct;\n     var inclusionTree, zeroBitPlanesTree;\n     if (precinct['inclusionTree'] !== undefined) {\n      inclusionTree = precinct.inclusionTree;\n     } else {\n      var width = precinct.cbxMax - precinct.cbxMin + 1;\n      var height = precinct.cbyMax - precinct.cbyMin + 1;\n      inclusionTree = new InclusionTree(width, height, layerNumber);\n      zeroBitPlanesTree = new TagTree(width, height);\n      precinct.inclusionTree = inclusionTree;\n      precinct.zeroBitPlanesTree = zeroBitPlanesTree;\n     }\n     if (inclusionTree.reset(codeblockColumn, codeblockRow, layerNumber)) {\n      while (true) {\n       if (readBits(1)) {\n        valueReady = !inclusionTree.nextLevel();\n        if (valueReady) {\n         codeblock.included = true;\n         codeblockIncluded = firstTimeInclusion = true;\n         break;\n        }\n       } else {\n        inclusionTree.incrementValue(layerNumber);\n        break;\n       }\n      }\n     }\n    }\n    if (!codeblockIncluded) {\n     continue;\n    }\n    if (firstTimeInclusion) {\n     zeroBitPlanesTree = precinct.zeroBitPlanesTree;\n     zeroBitPlanesTree.reset(codeblockColumn, codeblockRow);\n     while (true) {\n      if (readBits(1)) {\n       valueReady = !zeroBitPlanesTree.nextLevel();\n       if (valueReady) {\n        break;\n       }\n      } else {\n       zeroBitPlanesTree.incrementValue();\n      }\n     }\n     codeblock.zeroBitPlanes = zeroBitPlanesTree.value;\n    }\n    var codingpasses = readCodingpasses();\n    while (readBits(1)) {\n     codeblock.Lblock++;\n    }\n    var codingpassesLog2 = log2(codingpasses);\n    var bits = (codingpasses < 1 << codingpassesLog2 ? codingpassesLog2 - 1 : codingpassesLog2) + codeblock.Lblock;\n    var codedDataLength = readBits(bits);\n    queue.push({\n     codeblock: codeblock,\n     codingpasses: codingpasses,\n     dataLength: codedDataLength\n    });\n   }\n   alignToByte();\n   if (ephMarkerUsed) {\n    skipMarkerIfEqual(0x92);\n   }\n   while (queue.length > 0) {\n    var packetItem = queue.shift();\n    codeblock = packetItem.codeblock;\n    if (codeblock['data'] === undefined) {\n     codeblock.data = [];\n    }\n    codeblock.data.push({\n     data: data,\n     start: offset + position,\n     end: offset + position + packetItem.dataLength,\n     codingpasses: packetItem.codingpasses\n    });\n    position += packetItem.dataLength;\n   }\n  }\n  return position;\n }\n function copyCoefficients(coefficients, levelWidth, levelHeight, subband, delta, mb, reversible, segmentationSymbolUsed) {\n  var x0 = subband.tbx0;\n  var y0 = subband.tby0;\n  var width = subband.tbx1 - subband.tbx0;\n  var codeblocks = subband.codeblocks;\n  var right = subband.type.charAt(0) === 'H' ? 1 : 0;\n  var bottom = subband.type.charAt(1) === 'H' ? levelWidth : 0;\n  for (var i = 0, ii = codeblocks.length; i < ii; ++i) {\n   var codeblock = codeblocks[i];\n   var blockWidth = codeblock.tbx1_ - codeblock.tbx0_;\n   var blockHeight = codeblock.tby1_ - codeblock.tby0_;\n   if (blockWidth === 0 || blockHeight === 0) {\n    continue;\n   }\n   if (codeblock['data'] === undefined) {\n    continue;\n   }\n   var bitModel, currentCodingpassType;\n   bitModel = new BitModel(blockWidth, blockHeight, codeblock.subbandType, codeblock.zeroBitPlanes, mb);\n   currentCodingpassType = 2;\n   var data = codeblock.data, totalLength = 0, codingpasses = 0;\n   var j, jj, dataItem;\n   for (j = 0, jj = data.length; j < jj; j++) {\n    dataItem = data[j];\n    totalLength += dataItem.end - dataItem.start;\n    codingpasses += dataItem.codingpasses;\n   }\n   var encodedData = new Uint8Array(totalLength);\n   var position = 0;\n   for (j = 0, jj = data.length; j < jj; j++) {\n    dataItem = data[j];\n    var chunk = dataItem.data.subarray(dataItem.start, dataItem.end);\n    encodedData.set(chunk, position);\n    position += chunk.length;\n   }\n   var decoder = new ArithmeticDecoder(encodedData, 0, totalLength);\n   bitModel.setDecoder(decoder);\n   for (j = 0; j < codingpasses; j++) {\n    switch (currentCodingpassType) {\n    case 0:\n     bitModel.runSignificancePropagationPass();\n     break;\n    case 1:\n     bitModel.runMagnitudeRefinementPass();\n     break;\n    case 2:\n     bitModel.runCleanupPass();\n     if (segmentationSymbolUsed) {\n      bitModel.checkSegmentationSymbol();\n     }\n     break;\n    }\n    currentCodingpassType = (currentCodingpassType + 1) % 3;\n   }\n   var offset = codeblock.tbx0_ - x0 + (codeblock.tby0_ - y0) * width;\n   var sign = bitModel.coefficentsSign;\n   var magnitude = bitModel.coefficentsMagnitude;\n   var bitsDecoded = bitModel.bitsDecoded;\n   var magnitudeCorrection = reversible ? 0 : 0.5;\n   var k, n, nb;\n   position = 0;\n   var interleave = subband.type !== 'LL';\n   for (j = 0; j < blockHeight; j++) {\n    var row = offset / width | 0;\n    var levelOffset = 2 * row * (levelWidth - width) + right + bottom;\n    for (k = 0; k < blockWidth; k++) {\n     n = magnitude[position];\n     if (n !== 0) {\n      n = (n + magnitudeCorrection) * delta;\n      if (sign[position] !== 0) {\n       n = -n;\n      }\n      nb = bitsDecoded[position];\n      var pos = interleave ? levelOffset + (offset << 1) : offset;\n      if (reversible && nb >= mb) {\n       coefficients[pos] = n;\n      } else {\n       coefficients[pos] = n * (1 << mb - nb);\n      }\n     }\n     offset++;\n     position++;\n    }\n    offset += width - blockWidth;\n   }\n  }\n }\n function transformTile(context, tile, c) {\n  var component = tile.components[c];\n  var codingStyleParameters = component.codingStyleParameters;\n  var quantizationParameters = component.quantizationParameters;\n  var decompositionLevelsCount = codingStyleParameters.decompositionLevelsCount;\n  var spqcds = quantizationParameters.SPqcds;\n  var scalarExpounded = quantizationParameters.scalarExpounded;\n  var guardBits = quantizationParameters.guardBits;\n  var segmentationSymbolUsed = codingStyleParameters.segmentationSymbolUsed;\n  var precision = context.components[c].precision;\n  var reversible = codingStyleParameters.reversibleTransformation;\n  var transform = reversible ? new ReversibleTransform() : new IrreversibleTransform();\n  var subbandCoefficients = [];\n  var b = 0;\n  for (var i = 0; i <= decompositionLevelsCount; i++) {\n   var resolution = component.resolutions[i];\n   var width = resolution.trx1 - resolution.trx0;\n   var height = resolution.try1 - resolution.try0;\n   var coefficients = new Float32Array(width * height);\n   for (var j = 0, jj = resolution.subbands.length; j < jj; j++) {\n    var mu, epsilon;\n    if (!scalarExpounded) {\n     mu = spqcds[0].mu;\n     epsilon = spqcds[0].epsilon + (i > 0 ? 1 - i : 0);\n    } else {\n     mu = spqcds[b].mu;\n     epsilon = spqcds[b].epsilon;\n     b++;\n    }\n    var subband = resolution.subbands[j];\n    var gainLog2 = SubbandsGainLog2[subband.type];\n    var delta = reversible ? 1 : Math.pow(2, precision + gainLog2 - epsilon) * (1 + mu / 2048);\n    var mb = guardBits + epsilon - 1;\n    copyCoefficients(coefficients, width, height, subband, delta, mb, reversible, segmentationSymbolUsed);\n   }\n   subbandCoefficients.push({\n    width: width,\n    height: height,\n    items: coefficients\n   });\n  }\n  var result = transform.calculate(subbandCoefficients, component.tcx0, component.tcy0);\n  return {\n   left: component.tcx0,\n   top: component.tcy0,\n   width: result.width,\n   height: result.height,\n   items: result.items\n  };\n }\n function transformComponents(context) {\n  var siz = context.SIZ;\n  var components = context.components;\n  var componentsCount = siz.Csiz;\n  var resultImages = [];\n  for (var i = 0, ii = context.tiles.length; i < ii; i++) {\n   var tile = context.tiles[i];\n   var transformedTiles = [];\n   var c;\n   for (c = 0; c < componentsCount; c++) {\n    transformedTiles[c] = transformTile(context, tile, c);\n   }\n   var tile0 = transformedTiles[0];\n   var out = new Uint8Array(tile0.items.length * componentsCount);\n   var result = {\n    left: tile0.left,\n    top: tile0.top,\n    width: tile0.width,\n    height: tile0.height,\n    items: out\n   };\n   var shift, offset, max, min, maxK;\n   var pos = 0, j, jj, y0, y1, y2, r, g, b, k, val;\n   if (tile.codingStyleDefaultParameters.multipleComponentTransform) {\n    var fourComponents = componentsCount === 4;\n    var y0items = transformedTiles[0].items;\n    var y1items = transformedTiles[1].items;\n    var y2items = transformedTiles[2].items;\n    var y3items = fourComponents ? transformedTiles[3].items : null;\n    shift = components[0].precision - 8;\n    offset = (128 << shift) + 0.5;\n    max = 255 * (1 << shift);\n    maxK = max * 0.5;\n    min = -maxK;\n    var component0 = tile.components[0];\n    var alpha01 = componentsCount - 3;\n    jj = y0items.length;\n    if (!component0.codingStyleParameters.reversibleTransformation) {\n     for (j = 0; j < jj; j++, pos += alpha01) {\n      y0 = y0items[j] + offset;\n      y1 = y1items[j];\n      y2 = y2items[j];\n      r = y0 + 1.402 * y2;\n      g = y0 - 0.34413 * y1 - 0.71414 * y2;\n      b = y0 + 1.772 * y1;\n      out[pos++] = r <= 0 ? 0 : r >= max ? 255 : r >> shift;\n      out[pos++] = g <= 0 ? 0 : g >= max ? 255 : g >> shift;\n      out[pos++] = b <= 0 ? 0 : b >= max ? 255 : b >> shift;\n     }\n    } else {\n     for (j = 0; j < jj; j++, pos += alpha01) {\n      y0 = y0items[j] + offset;\n      y1 = y1items[j];\n      y2 = y2items[j];\n      g = y0 - (y2 + y1 >> 2);\n      r = g + y2;\n      b = g + y1;\n      out[pos++] = r <= 0 ? 0 : r >= max ? 255 : r >> shift;\n      out[pos++] = g <= 0 ? 0 : g >= max ? 255 : g >> shift;\n      out[pos++] = b <= 0 ? 0 : b >= max ? 255 : b >> shift;\n     }\n    }\n    if (fourComponents) {\n     for (j = 0, pos = 3; j < jj; j++, pos += 4) {\n      k = y3items[j];\n      out[pos] = k <= min ? 0 : k >= maxK ? 255 : k + offset >> shift;\n     }\n    }\n   } else {\n    for (c = 0; c < componentsCount; c++) {\n     var items = transformedTiles[c].items;\n     shift = components[c].precision - 8;\n     offset = (128 << shift) + 0.5;\n     max = 127.5 * (1 << shift);\n     min = -max;\n     for (pos = c, j = 0, jj = items.length; j < jj; j++) {\n      val = items[j];\n      out[pos] = val <= min ? 0 : val >= max ? 255 : val + offset >> shift;\n      pos += componentsCount;\n     }\n    }\n   }\n   resultImages.push(result);\n  }\n  return resultImages;\n }\n function initializeTile(context, tileIndex) {\n  var siz = context.SIZ;\n  var componentsCount = siz.Csiz;\n  var tile = context.tiles[tileIndex];\n  for (var c = 0; c < componentsCount; c++) {\n   var component = tile.components[c];\n   var qcdOrQcc = context.currentTile.QCC[c] !== undefined ? context.currentTile.QCC[c] : context.currentTile.QCD;\n   component.quantizationParameters = qcdOrQcc;\n   var codOrCoc = context.currentTile.COC[c] !== undefined ? context.currentTile.COC[c] : context.currentTile.COD;\n   component.codingStyleParameters = codOrCoc;\n  }\n  tile.codingStyleDefaultParameters = context.currentTile.COD;\n }\n var TagTree = function TagTreeClosure() {\n  function TagTree(width, height) {\n   var levelsLength = log2(Math.max(width, height)) + 1;\n   this.levels = [];\n   for (var i = 0; i < levelsLength; i++) {\n    var level = {\n     width: width,\n     height: height,\n     items: []\n    };\n    this.levels.push(level);\n    width = Math.ceil(width / 2);\n    height = Math.ceil(height / 2);\n   }\n  }\n  TagTree.prototype = {\n   reset: function TagTree_reset(i, j) {\n    var currentLevel = 0, value = 0, level;\n    while (currentLevel < this.levels.length) {\n     level = this.levels[currentLevel];\n     var index = i + j * level.width;\n     if (level.items[index] !== undefined) {\n      value = level.items[index];\n      break;\n     }\n     level.index = index;\n     i >>= 1;\n     j >>= 1;\n     currentLevel++;\n    }\n    currentLevel--;\n    level = this.levels[currentLevel];\n    level.items[level.index] = value;\n    this.currentLevel = currentLevel;\n    delete this.value;\n   },\n   incrementValue: function TagTree_incrementValue() {\n    var level = this.levels[this.currentLevel];\n    level.items[level.index]++;\n   },\n   nextLevel: function TagTree_nextLevel() {\n    var currentLevel = this.currentLevel;\n    var level = this.levels[currentLevel];\n    var value = level.items[level.index];\n    currentLevel--;\n    if (currentLevel < 0) {\n     this.value = value;\n     return false;\n    }\n    this.currentLevel = currentLevel;\n    level = this.levels[currentLevel];\n    level.items[level.index] = value;\n    return true;\n   }\n  };\n  return TagTree;\n }();\n var InclusionTree = function InclusionTreeClosure() {\n  function InclusionTree(width, height, defaultValue) {\n   var levelsLength = log2(Math.max(width, height)) + 1;\n   this.levels = [];\n   for (var i = 0; i < levelsLength; i++) {\n    var items = new Uint8Array(width * height);\n    for (var j = 0, jj = items.length; j < jj; j++) {\n     items[j] = defaultValue;\n    }\n    var level = {\n     width: width,\n     height: height,\n     items: items\n    };\n    this.levels.push(level);\n    width = Math.ceil(width / 2);\n    height = Math.ceil(height / 2);\n   }\n  }\n  InclusionTree.prototype = {\n   reset: function InclusionTree_reset(i, j, stopValue) {\n    var currentLevel = 0;\n    while (currentLevel < this.levels.length) {\n     var level = this.levels[currentLevel];\n     var index = i + j * level.width;\n     level.index = index;\n     var value = level.items[index];\n     if (value === 0xFF) {\n      break;\n     }\n     if (value > stopValue) {\n      this.currentLevel = currentLevel;\n      this.propagateValues();\n      return false;\n     }\n     i >>= 1;\n     j >>= 1;\n     currentLevel++;\n    }\n    this.currentLevel = currentLevel - 1;\n    return true;\n   },\n   incrementValue: function InclusionTree_incrementValue(stopValue) {\n    var level = this.levels[this.currentLevel];\n    level.items[level.index] = stopValue + 1;\n    this.propagateValues();\n   },\n   propagateValues: function InclusionTree_propagateValues() {\n    var levelIndex = this.currentLevel;\n    var level = this.levels[levelIndex];\n    var currentValue = level.items[level.index];\n    while (--levelIndex >= 0) {\n     level = this.levels[levelIndex];\n     level.items[level.index] = currentValue;\n    }\n   },\n   nextLevel: function InclusionTree_nextLevel() {\n    var currentLevel = this.currentLevel;\n    var level = this.levels[currentLevel];\n    var value = level.items[level.index];\n    level.items[level.index] = 0xFF;\n    currentLevel--;\n    if (currentLevel < 0) {\n     return false;\n    }\n    this.currentLevel = currentLevel;\n    level = this.levels[currentLevel];\n    level.items[level.index] = value;\n    return true;\n   }\n  };\n  return InclusionTree;\n }();\n var BitModel = function BitModelClosure() {\n  var UNIFORM_CONTEXT = 17;\n  var RUNLENGTH_CONTEXT = 18;\n  var LLAndLHContextsLabel = new Uint8Array([\n   0,\n   5,\n   8,\n   0,\n   3,\n   7,\n   8,\n   0,\n   4,\n   7,\n   8,\n   0,\n   0,\n   0,\n   0,\n   0,\n   1,\n   6,\n   8,\n   0,\n   3,\n   7,\n   8,\n   0,\n   4,\n   7,\n   8,\n   0,\n   0,\n   0,\n   0,\n   0,\n   2,\n   6,\n   8,\n   0,\n   3,\n   7,\n   8,\n   0,\n   4,\n   7,\n   8,\n   0,\n   0,\n   0,\n   0,\n   0,\n   2,\n   6,\n   8,\n   0,\n   3,\n   7,\n   8,\n   0,\n   4,\n   7,\n   8,\n   0,\n   0,\n   0,\n   0,\n   0,\n   2,\n   6,\n   8,\n   0,\n   3,\n   7,\n   8,\n   0,\n   4,\n   7,\n   8\n  ]);\n  var HLContextLabel = new Uint8Array([\n   0,\n   3,\n   4,\n   0,\n   5,\n   7,\n   7,\n   0,\n   8,\n   8,\n   8,\n   0,\n   0,\n   0,\n   0,\n   0,\n   1,\n   3,\n   4,\n   0,\n   6,\n   7,\n   7,\n   0,\n   8,\n   8,\n   8,\n   0,\n   0,\n   0,\n   0,\n   0,\n   2,\n   3,\n   4,\n   0,\n   6,\n   7,\n   7,\n   0,\n   8,\n   8,\n   8,\n   0,\n   0,\n   0,\n   0,\n   0,\n   2,\n   3,\n   4,\n   0,\n   6,\n   7,\n   7,\n   0,\n   8,\n   8,\n   8,\n   0,\n   0,\n   0,\n   0,\n   0,\n   2,\n   3,\n   4,\n   0,\n   6,\n   7,\n   7,\n   0,\n   8,\n   8,\n   8\n  ]);\n  var HHContextLabel = new Uint8Array([\n   0,\n   1,\n   2,\n   0,\n   1,\n   2,\n   2,\n   0,\n   2,\n   2,\n   2,\n   0,\n   0,\n   0,\n   0,\n   0,\n   3,\n   4,\n   5,\n   0,\n   4,\n   5,\n   5,\n   0,\n   5,\n   5,\n   5,\n   0,\n   0,\n   0,\n   0,\n   0,\n   6,\n   7,\n   7,\n   0,\n   7,\n   7,\n   7,\n   0,\n   7,\n   7,\n   7,\n   0,\n   0,\n   0,\n   0,\n   0,\n   8,\n   8,\n   8,\n   0,\n   8,\n   8,\n   8,\n   0,\n   8,\n   8,\n   8,\n   0,\n   0,\n   0,\n   0,\n   0,\n   8,\n   8,\n   8,\n   0,\n   8,\n   8,\n   8,\n   0,\n   8,\n   8,\n   8\n  ]);\n  function BitModel(width, height, subband, zeroBitPlanes, mb) {\n   this.width = width;\n   this.height = height;\n   this.contextLabelTable = subband === 'HH' ? HHContextLabel : subband === 'HL' ? HLContextLabel : LLAndLHContextsLabel;\n   var coefficientCount = width * height;\n   this.neighborsSignificance = new Uint8Array(coefficientCount);\n   this.coefficentsSign = new Uint8Array(coefficientCount);\n   this.coefficentsMagnitude = mb > 14 ? new Uint32Array(coefficientCount) : mb > 6 ? new Uint16Array(coefficientCount) : new Uint8Array(coefficientCount);\n   this.processingFlags = new Uint8Array(coefficientCount);\n   var bitsDecoded = new Uint8Array(coefficientCount);\n   if (zeroBitPlanes !== 0) {\n    for (var i = 0; i < coefficientCount; i++) {\n     bitsDecoded[i] = zeroBitPlanes;\n    }\n   }\n   this.bitsDecoded = bitsDecoded;\n   this.reset();\n  }\n  BitModel.prototype = {\n   setDecoder: function BitModel_setDecoder(decoder) {\n    this.decoder = decoder;\n   },\n   reset: function BitModel_reset() {\n    this.contexts = new Int8Array(19);\n    this.contexts[0] = 4 << 1 | 0;\n    this.contexts[UNIFORM_CONTEXT] = 46 << 1 | 0;\n    this.contexts[RUNLENGTH_CONTEXT] = 3 << 1 | 0;\n   },\n   setNeighborsSignificance: function BitModel_setNeighborsSignificance(row, column, index) {\n    var neighborsSignificance = this.neighborsSignificance;\n    var width = this.width, height = this.height;\n    var left = column > 0;\n    var right = column + 1 < width;\n    var i;\n    if (row > 0) {\n     i = index - width;\n     if (left) {\n      neighborsSignificance[i - 1] += 0x10;\n     }\n     if (right) {\n      neighborsSignificance[i + 1] += 0x10;\n     }\n     neighborsSignificance[i] += 0x04;\n    }\n    if (row + 1 < height) {\n     i = index + width;\n     if (left) {\n      neighborsSignificance[i - 1] += 0x10;\n     }\n     if (right) {\n      neighborsSignificance[i + 1] += 0x10;\n     }\n     neighborsSignificance[i] += 0x04;\n    }\n    if (left) {\n     neighborsSignificance[index - 1] += 0x01;\n    }\n    if (right) {\n     neighborsSignificance[index + 1] += 0x01;\n    }\n    neighborsSignificance[index] |= 0x80;\n   },\n   runSignificancePropagationPass: function BitModel_runSignificancePropagationPass() {\n    var decoder = this.decoder;\n    var width = this.width, height = this.height;\n    var coefficentsMagnitude = this.coefficentsMagnitude;\n    var coefficentsSign = this.coefficentsSign;\n    var neighborsSignificance = this.neighborsSignificance;\n    var processingFlags = this.processingFlags;\n    var contexts = this.contexts;\n    var labels = this.contextLabelTable;\n    var bitsDecoded = this.bitsDecoded;\n    var processedInverseMask = ~1;\n    var processedMask = 1;\n    var firstMagnitudeBitMask = 2;\n    for (var i0 = 0; i0 < height; i0 += 4) {\n     for (var j = 0; j < width; j++) {\n      var index = i0 * width + j;\n      for (var i1 = 0; i1 < 4; i1++, index += width) {\n       var i = i0 + i1;\n       if (i >= height) {\n        break;\n       }\n       processingFlags[index] &= processedInverseMask;\n       if (coefficentsMagnitude[index] || !neighborsSignificance[index]) {\n        continue;\n       }\n       var contextLabel = labels[neighborsSignificance[index]];\n       var decision = decoder.readBit(contexts, contextLabel);\n       if (decision) {\n        var sign = this.decodeSignBit(i, j, index);\n        coefficentsSign[index] = sign;\n        coefficentsMagnitude[index] = 1;\n        this.setNeighborsSignificance(i, j, index);\n        processingFlags[index] |= firstMagnitudeBitMask;\n       }\n       bitsDecoded[index]++;\n       processingFlags[index] |= processedMask;\n      }\n     }\n    }\n   },\n   decodeSignBit: function BitModel_decodeSignBit(row, column, index) {\n    var width = this.width, height = this.height;\n    var coefficentsMagnitude = this.coefficentsMagnitude;\n    var coefficentsSign = this.coefficentsSign;\n    var contribution, sign0, sign1, significance1;\n    var contextLabel, decoded;\n    significance1 = column > 0 && coefficentsMagnitude[index - 1] !== 0;\n    if (column + 1 < width && coefficentsMagnitude[index + 1] !== 0) {\n     sign1 = coefficentsSign[index + 1];\n     if (significance1) {\n      sign0 = coefficentsSign[index - 1];\n      contribution = 1 - sign1 - sign0;\n     } else {\n      contribution = 1 - sign1 - sign1;\n     }\n    } else if (significance1) {\n     sign0 = coefficentsSign[index - 1];\n     contribution = 1 - sign0 - sign0;\n    } else {\n     contribution = 0;\n    }\n    var horizontalContribution = 3 * contribution;\n    significance1 = row > 0 && coefficentsMagnitude[index - width] !== 0;\n    if (row + 1 < height && coefficentsMagnitude[index + width] !== 0) {\n     sign1 = coefficentsSign[index + width];\n     if (significance1) {\n      sign0 = coefficentsSign[index - width];\n      contribution = 1 - sign1 - sign0 + horizontalContribution;\n     } else {\n      contribution = 1 - sign1 - sign1 + horizontalContribution;\n     }\n    } else if (significance1) {\n     sign0 = coefficentsSign[index - width];\n     contribution = 1 - sign0 - sign0 + horizontalContribution;\n    } else {\n     contribution = horizontalContribution;\n    }\n    if (contribution >= 0) {\n     contextLabel = 9 + contribution;\n     decoded = this.decoder.readBit(this.contexts, contextLabel);\n    } else {\n     contextLabel = 9 - contribution;\n     decoded = this.decoder.readBit(this.contexts, contextLabel) ^ 1;\n    }\n    return decoded;\n   },\n   runMagnitudeRefinementPass: function BitModel_runMagnitudeRefinementPass() {\n    var decoder = this.decoder;\n    var width = this.width, height = this.height;\n    var coefficentsMagnitude = this.coefficentsMagnitude;\n    var neighborsSignificance = this.neighborsSignificance;\n    var contexts = this.contexts;\n    var bitsDecoded = this.bitsDecoded;\n    var processingFlags = this.processingFlags;\n    var processedMask = 1;\n    var firstMagnitudeBitMask = 2;\n    var length = width * height;\n    var width4 = width * 4;\n    for (var index0 = 0, indexNext; index0 < length; index0 = indexNext) {\n     indexNext = Math.min(length, index0 + width4);\n     for (var j = 0; j < width; j++) {\n      for (var index = index0 + j; index < indexNext; index += width) {\n       if (!coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n        continue;\n       }\n       var contextLabel = 16;\n       if ((processingFlags[index] & firstMagnitudeBitMask) !== 0) {\n        processingFlags[index] ^= firstMagnitudeBitMask;\n        var significance = neighborsSignificance[index] & 127;\n        contextLabel = significance === 0 ? 15 : 14;\n       }\n       var bit = decoder.readBit(contexts, contextLabel);\n       coefficentsMagnitude[index] = coefficentsMagnitude[index] << 1 | bit;\n       bitsDecoded[index]++;\n       processingFlags[index] |= processedMask;\n      }\n     }\n    }\n   },\n   runCleanupPass: function BitModel_runCleanupPass() {\n    var decoder = this.decoder;\n    var width = this.width, height = this.height;\n    var neighborsSignificance = this.neighborsSignificance;\n    var coefficentsMagnitude = this.coefficentsMagnitude;\n    var coefficentsSign = this.coefficentsSign;\n    var contexts = this.contexts;\n    var labels = this.contextLabelTable;\n    var bitsDecoded = this.bitsDecoded;\n    var processingFlags = this.processingFlags;\n    var processedMask = 1;\n    var firstMagnitudeBitMask = 2;\n    var oneRowDown = width;\n    var twoRowsDown = width * 2;\n    var threeRowsDown = width * 3;\n    var iNext;\n    for (var i0 = 0; i0 < height; i0 = iNext) {\n     iNext = Math.min(i0 + 4, height);\n     var indexBase = i0 * width;\n     var checkAllEmpty = i0 + 3 < height;\n     for (var j = 0; j < width; j++) {\n      var index0 = indexBase + j;\n      var allEmpty = checkAllEmpty && processingFlags[index0] === 0 && processingFlags[index0 + oneRowDown] === 0 && processingFlags[index0 + twoRowsDown] === 0 && processingFlags[index0 + threeRowsDown] === 0 && neighborsSignificance[index0] === 0 && neighborsSignificance[index0 + oneRowDown] === 0 && neighborsSignificance[index0 + twoRowsDown] === 0 && neighborsSignificance[index0 + threeRowsDown] === 0;\n      var i1 = 0, index = index0;\n      var i = i0, sign;\n      if (allEmpty) {\n       var hasSignificantCoefficent = decoder.readBit(contexts, RUNLENGTH_CONTEXT);\n       if (!hasSignificantCoefficent) {\n        bitsDecoded[index0]++;\n        bitsDecoded[index0 + oneRowDown]++;\n        bitsDecoded[index0 + twoRowsDown]++;\n        bitsDecoded[index0 + threeRowsDown]++;\n        continue;\n       }\n       i1 = decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n       if (i1 !== 0) {\n        i = i0 + i1;\n        index += i1 * width;\n       }\n       sign = this.decodeSignBit(i, j, index);\n       coefficentsSign[index] = sign;\n       coefficentsMagnitude[index] = 1;\n       this.setNeighborsSignificance(i, j, index);\n       processingFlags[index] |= firstMagnitudeBitMask;\n       index = index0;\n       for (var i2 = i0; i2 <= i; i2++, index += width) {\n        bitsDecoded[index]++;\n       }\n       i1++;\n      }\n      for (i = i0 + i1; i < iNext; i++, index += width) {\n       if (coefficentsMagnitude[index] || (processingFlags[index] & processedMask) !== 0) {\n        continue;\n       }\n       var contextLabel = labels[neighborsSignificance[index]];\n       var decision = decoder.readBit(contexts, contextLabel);\n       if (decision === 1) {\n        sign = this.decodeSignBit(i, j, index);\n        coefficentsSign[index] = sign;\n        coefficentsMagnitude[index] = 1;\n        this.setNeighborsSignificance(i, j, index);\n        processingFlags[index] |= firstMagnitudeBitMask;\n       }\n       bitsDecoded[index]++;\n      }\n     }\n    }\n   },\n   checkSegmentationSymbol: function BitModel_checkSegmentationSymbol() {\n    var decoder = this.decoder;\n    var contexts = this.contexts;\n    var symbol = decoder.readBit(contexts, UNIFORM_CONTEXT) << 3 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 2 | decoder.readBit(contexts, UNIFORM_CONTEXT) << 1 | decoder.readBit(contexts, UNIFORM_CONTEXT);\n    if (symbol !== 0xA) {\n     error('JPX Error: Invalid segmentation symbol');\n    }\n   }\n  };\n  return BitModel;\n }();\n var Transform = function TransformClosure() {\n  function Transform() {\n  }\n  Transform.prototype.calculate = function transformCalculate(subbands, u0, v0) {\n   var ll = subbands[0];\n   for (var i = 1, ii = subbands.length; i < ii; i++) {\n    ll = this.iterate(ll, subbands[i], u0, v0);\n   }\n   return ll;\n  };\n  Transform.prototype.extend = function extend(buffer, offset, size) {\n   var i1 = offset - 1, j1 = offset + 1;\n   var i2 = offset + size - 2, j2 = offset + size;\n   buffer[i1--] = buffer[j1++];\n   buffer[j2++] = buffer[i2--];\n   buffer[i1--] = buffer[j1++];\n   buffer[j2++] = buffer[i2--];\n   buffer[i1--] = buffer[j1++];\n   buffer[j2++] = buffer[i2--];\n   buffer[i1] = buffer[j1];\n   buffer[j2] = buffer[i2];\n  };\n  Transform.prototype.iterate = function Transform_iterate(ll, hl_lh_hh, u0, v0) {\n   var llWidth = ll.width, llHeight = ll.height, llItems = ll.items;\n   var width = hl_lh_hh.width;\n   var height = hl_lh_hh.height;\n   var items = hl_lh_hh.items;\n   var i, j, k, l, u, v;\n   for (k = 0, i = 0; i < llHeight; i++) {\n    l = i * 2 * width;\n    for (j = 0; j < llWidth; j++, k++, l += 2) {\n     items[l] = llItems[k];\n    }\n   }\n   llItems = ll.items = null;\n   var bufferPadding = 4;\n   var rowBuffer = new Float32Array(width + 2 * bufferPadding);\n   if (width === 1) {\n    if ((u0 & 1) !== 0) {\n     for (v = 0, k = 0; v < height; v++, k += width) {\n      items[k] *= 0.5;\n     }\n    }\n   } else {\n    for (v = 0, k = 0; v < height; v++, k += width) {\n     rowBuffer.set(items.subarray(k, k + width), bufferPadding);\n     this.extend(rowBuffer, bufferPadding, width);\n     this.filter(rowBuffer, bufferPadding, width);\n     items.set(rowBuffer.subarray(bufferPadding, bufferPadding + width), k);\n    }\n   }\n   var numBuffers = 16;\n   var colBuffers = [];\n   for (i = 0; i < numBuffers; i++) {\n    colBuffers.push(new Float32Array(height + 2 * bufferPadding));\n   }\n   var b, currentBuffer = 0;\n   ll = bufferPadding + height;\n   if (height === 1) {\n    if ((v0 & 1) !== 0) {\n     for (u = 0; u < width; u++) {\n      items[u] *= 0.5;\n     }\n    }\n   } else {\n    for (u = 0; u < width; u++) {\n     if (currentBuffer === 0) {\n      numBuffers = Math.min(width - u, numBuffers);\n      for (k = u, l = bufferPadding; l < ll; k += width, l++) {\n       for (b = 0; b < numBuffers; b++) {\n        colBuffers[b][l] = items[k + b];\n       }\n      }\n      currentBuffer = numBuffers;\n     }\n     currentBuffer--;\n     var buffer = colBuffers[currentBuffer];\n     this.extend(buffer, bufferPadding, height);\n     this.filter(buffer, bufferPadding, height);\n     if (currentBuffer === 0) {\n      k = u - numBuffers + 1;\n      for (l = bufferPadding; l < ll; k += width, l++) {\n       for (b = 0; b < numBuffers; b++) {\n        items[k + b] = colBuffers[b][l];\n       }\n      }\n     }\n    }\n   }\n   return {\n    width: width,\n    height: height,\n    items: items\n   };\n  };\n  return Transform;\n }();\n var IrreversibleTransform = function IrreversibleTransformClosure() {\n  function IrreversibleTransform() {\n   Transform.call(this);\n  }\n  IrreversibleTransform.prototype = Object.create(Transform.prototype);\n  IrreversibleTransform.prototype.filter = function irreversibleTransformFilter(x, offset, length) {\n   var len = length >> 1;\n   offset = offset | 0;\n   var j, n, current, next;\n   var alpha = -1.586134342059924;\n   var beta = -0.052980118572961;\n   var gamma = 0.882911075530934;\n   var delta = 0.443506852043971;\n   var K = 1.230174104914001;\n   var K_ = 1 / K;\n   j = offset - 3;\n   for (n = len + 4; n--; j += 2) {\n    x[j] *= K_;\n   }\n   j = offset - 2;\n   current = delta * x[j - 1];\n   for (n = len + 3; n--; j += 2) {\n    next = delta * x[j + 1];\n    x[j] = K * x[j] - current - next;\n    if (n--) {\n     j += 2;\n     current = delta * x[j + 1];\n     x[j] = K * x[j] - current - next;\n    } else {\n     break;\n    }\n   }\n   j = offset - 1;\n   current = gamma * x[j - 1];\n   for (n = len + 2; n--; j += 2) {\n    next = gamma * x[j + 1];\n    x[j] -= current + next;\n    if (n--) {\n     j += 2;\n     current = gamma * x[j + 1];\n     x[j] -= current + next;\n    } else {\n     break;\n    }\n   }\n   j = offset;\n   current = beta * x[j - 1];\n   for (n = len + 1; n--; j += 2) {\n    next = beta * x[j + 1];\n    x[j] -= current + next;\n    if (n--) {\n     j += 2;\n     current = beta * x[j + 1];\n     x[j] -= current + next;\n    } else {\n     break;\n    }\n   }\n   if (len !== 0) {\n    j = offset + 1;\n    current = alpha * x[j - 1];\n    for (n = len; n--; j += 2) {\n     next = alpha * x[j + 1];\n     x[j] -= current + next;\n     if (n--) {\n      j += 2;\n      current = alpha * x[j + 1];\n      x[j] -= current + next;\n     } else {\n      break;\n     }\n    }\n   }\n  };\n  return IrreversibleTransform;\n }();\n var ReversibleTransform = function ReversibleTransformClosure() {\n  function ReversibleTransform() {\n   Transform.call(this);\n  }\n  ReversibleTransform.prototype = Object.create(Transform.prototype);\n  ReversibleTransform.prototype.filter = function reversibleTransformFilter(x, offset, length) {\n   var len = length >> 1;\n   offset = offset | 0;\n   var j, n;\n   for (j = offset, n = len + 1; n--; j += 2) {\n    x[j] -= x[j - 1] + x[j + 1] + 2 >> 2;\n   }\n   for (j = offset + 1, n = len; n--; j += 2) {\n    x[j] += x[j - 1] + x[j + 1] >> 1;\n   }\n  };\n  return ReversibleTransform;\n }();\n return JpxImage;\n}();\nexports.JpxImage = JpxImage;\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar coreCrypto = __w_pdfjs_require__(13);\nvar coreParser = __w_pdfjs_require__(5);\nvar coreChunkedStream = __w_pdfjs_require__(12);\nvar coreColorSpace = __w_pdfjs_require__(3);\nvar InvalidPDFException = sharedUtil.InvalidPDFException;\nvar MissingDataException = sharedUtil.MissingDataException;\nvar XRefParseException = sharedUtil.XRefParseException;\nvar assert = sharedUtil.assert;\nvar bytesToString = sharedUtil.bytesToString;\nvar createPromiseCapability = sharedUtil.createPromiseCapability;\nvar error = sharedUtil.error;\nvar info = sharedUtil.info;\nvar isArray = sharedUtil.isArray;\nvar isBool = sharedUtil.isBool;\nvar isInt = sharedUtil.isInt;\nvar isString = sharedUtil.isString;\nvar shadow = sharedUtil.shadow;\nvar stringToPDFString = sharedUtil.stringToPDFString;\nvar stringToUTF8String = sharedUtil.stringToUTF8String;\nvar warn = sharedUtil.warn;\nvar createValidAbsoluteUrl = sharedUtil.createValidAbsoluteUrl;\nvar Util = sharedUtil.Util;\nvar Ref = corePrimitives.Ref;\nvar RefSet = corePrimitives.RefSet;\nvar RefSetCache = corePrimitives.RefSetCache;\nvar isName = corePrimitives.isName;\nvar isCmd = corePrimitives.isCmd;\nvar isDict = corePrimitives.isDict;\nvar isRef = corePrimitives.isRef;\nvar isRefsEqual = corePrimitives.isRefsEqual;\nvar isStream = corePrimitives.isStream;\nvar CipherTransformFactory = coreCrypto.CipherTransformFactory;\nvar Lexer = coreParser.Lexer;\nvar Parser = coreParser.Parser;\nvar ChunkedStream = coreChunkedStream.ChunkedStream;\nvar ColorSpace = coreColorSpace.ColorSpace;\nvar Catalog = function CatalogClosure() {\n function Catalog(pdfManager, xref, pageFactory) {\n  this.pdfManager = pdfManager;\n  this.xref = xref;\n  this.catDict = xref.getCatalogObj();\n  this.fontCache = new RefSetCache();\n  this.builtInCMapCache = Object.create(null);\n  assert(isDict(this.catDict), 'catalog object is not a dictionary');\n  this.pageFactory = pageFactory;\n  this.pagePromises = [];\n }\n Catalog.prototype = {\n  get metadata() {\n   var streamRef = this.catDict.getRaw('Metadata');\n   if (!isRef(streamRef)) {\n    return shadow(this, 'metadata', null);\n   }\n   var encryptMetadata = !this.xref.encrypt ? false : this.xref.encrypt.encryptMetadata;\n   var stream = this.xref.fetch(streamRef, !encryptMetadata);\n   var metadata;\n   if (stream && isDict(stream.dict)) {\n    var type = stream.dict.get('Type');\n    var subtype = stream.dict.get('Subtype');\n    if (isName(type, 'Metadata') && isName(subtype, 'XML')) {\n     try {\n      metadata = stringToUTF8String(bytesToString(stream.getBytes()));\n     } catch (e) {\n      info('Skipping invalid metadata.');\n     }\n    }\n   }\n   return shadow(this, 'metadata', metadata);\n  },\n  get toplevelPagesDict() {\n   var pagesObj = this.catDict.get('Pages');\n   assert(isDict(pagesObj), 'invalid top-level pages dictionary');\n   return shadow(this, 'toplevelPagesDict', pagesObj);\n  },\n  get documentOutline() {\n   var obj = null;\n   try {\n    obj = this.readDocumentOutline();\n   } catch (ex) {\n    if (ex instanceof MissingDataException) {\n     throw ex;\n    }\n    warn('Unable to read document outline');\n   }\n   return shadow(this, 'documentOutline', obj);\n  },\n  readDocumentOutline: function Catalog_readDocumentOutline() {\n   var obj = this.catDict.get('Outlines');\n   if (!isDict(obj)) {\n    return null;\n   }\n   obj = obj.getRaw('First');\n   if (!isRef(obj)) {\n    return null;\n   }\n   var root = { items: [] };\n   var queue = [{\n     obj: obj,\n     parent: root\n    }];\n   var processed = new RefSet();\n   processed.put(obj);\n   var xref = this.xref, blackColor = new Uint8Array(3);\n   while (queue.length > 0) {\n    var i = queue.shift();\n    var outlineDict = xref.fetchIfRef(i.obj);\n    if (outlineDict === null) {\n     continue;\n    }\n    assert(outlineDict.has('Title'), 'Invalid outline item');\n    var data = {\n     url: null,\n     dest: null\n    };\n    Catalog.parseDestDictionary({\n     destDict: outlineDict,\n     resultObj: data,\n     docBaseUrl: this.pdfManager.docBaseUrl\n    });\n    var title = outlineDict.get('Title');\n    var flags = outlineDict.get('F') || 0;\n    var color = outlineDict.getArray('C'), rgbColor = blackColor;\n    if (isArray(color) && color.length === 3 && (color[0] !== 0 || color[1] !== 0 || color[2] !== 0)) {\n     rgbColor = ColorSpace.singletons.rgb.getRgb(color, 0);\n    }\n    var outlineItem = {\n     dest: data.dest,\n     url: data.url,\n     unsafeUrl: data.unsafeUrl,\n     newWindow: data.newWindow,\n     title: stringToPDFString(title),\n     color: rgbColor,\n     count: outlineDict.get('Count'),\n     bold: !!(flags & 2),\n     italic: !!(flags & 1),\n     items: []\n    };\n    i.parent.items.push(outlineItem);\n    obj = outlineDict.getRaw('First');\n    if (isRef(obj) && !processed.has(obj)) {\n     queue.push({\n      obj: obj,\n      parent: outlineItem\n     });\n     processed.put(obj);\n    }\n    obj = outlineDict.getRaw('Next');\n    if (isRef(obj) && !processed.has(obj)) {\n     queue.push({\n      obj: obj,\n      parent: i.parent\n     });\n     processed.put(obj);\n    }\n   }\n   return root.items.length > 0 ? root.items : null;\n  },\n  get numPages() {\n   var obj = this.toplevelPagesDict.get('Count');\n   assert(isInt(obj), 'page count in top level pages object is not an integer');\n   return shadow(this, 'num', obj);\n  },\n  get destinations() {\n   function fetchDestination(dest) {\n    return isDict(dest) ? dest.get('D') : dest;\n   }\n   var xref = this.xref;\n   var dests = {}, nameTreeRef, nameDictionaryRef;\n   var obj = this.catDict.get('Names');\n   if (obj && obj.has('Dests')) {\n    nameTreeRef = obj.getRaw('Dests');\n   } else if (this.catDict.has('Dests')) {\n    nameDictionaryRef = this.catDict.get('Dests');\n   }\n   if (nameDictionaryRef) {\n    obj = nameDictionaryRef;\n    obj.forEach(function catalogForEach(key, value) {\n     if (!value) {\n      return;\n     }\n     dests[key] = fetchDestination(value);\n    });\n   }\n   if (nameTreeRef) {\n    var nameTree = new NameTree(nameTreeRef, xref);\n    var names = nameTree.getAll();\n    for (var name in names) {\n     dests[name] = fetchDestination(names[name]);\n    }\n   }\n   return shadow(this, 'destinations', dests);\n  },\n  getDestination: function Catalog_getDestination(destinationId) {\n   function fetchDestination(dest) {\n    return isDict(dest) ? dest.get('D') : dest;\n   }\n   var xref = this.xref;\n   var dest = null, nameTreeRef, nameDictionaryRef;\n   var obj = this.catDict.get('Names');\n   if (obj && obj.has('Dests')) {\n    nameTreeRef = obj.getRaw('Dests');\n   } else if (this.catDict.has('Dests')) {\n    nameDictionaryRef = this.catDict.get('Dests');\n   }\n   if (nameDictionaryRef) {\n    var value = nameDictionaryRef.get(destinationId);\n    if (value) {\n     dest = fetchDestination(value);\n    }\n   }\n   if (nameTreeRef) {\n    var nameTree = new NameTree(nameTreeRef, xref);\n    dest = fetchDestination(nameTree.get(destinationId));\n   }\n   return dest;\n  },\n  get pageLabels() {\n   var obj = null;\n   try {\n    obj = this.readPageLabels();\n   } catch (ex) {\n    if (ex instanceof MissingDataException) {\n     throw ex;\n    }\n    warn('Unable to read page labels.');\n   }\n   return shadow(this, 'pageLabels', obj);\n  },\n  readPageLabels: function Catalog_readPageLabels() {\n   var obj = this.catDict.getRaw('PageLabels');\n   if (!obj) {\n    return null;\n   }\n   var pageLabels = new Array(this.numPages);\n   var style = null;\n   var prefix = '';\n   var numberTree = new NumberTree(obj, this.xref);\n   var nums = numberTree.getAll();\n   var currentLabel = '', currentIndex = 1;\n   for (var i = 0, ii = this.numPages; i < ii; i++) {\n    if (i in nums) {\n     var labelDict = nums[i];\n     assert(isDict(labelDict), 'The PageLabel is not a dictionary.');\n     var type = labelDict.get('Type');\n     assert(!type || isName(type, 'PageLabel'), 'Invalid type in PageLabel dictionary.');\n     var s = labelDict.get('S');\n     assert(!s || isName(s), 'Invalid style in PageLabel dictionary.');\n     style = s ? s.name : null;\n     var p = labelDict.get('P');\n     assert(!p || isString(p), 'Invalid prefix in PageLabel dictionary.');\n     prefix = p ? stringToPDFString(p) : '';\n     var st = labelDict.get('St');\n     assert(!st || isInt(st) && st >= 1, 'Invalid start in PageLabel dictionary.');\n     currentIndex = st || 1;\n    }\n    switch (style) {\n    case 'D':\n     currentLabel = currentIndex;\n     break;\n    case 'R':\n    case 'r':\n     currentLabel = Util.toRoman(currentIndex, style === 'r');\n     break;\n    case 'A':\n    case 'a':\n     var LIMIT = 26;\n     var A_UPPER_CASE = 0x41, A_LOWER_CASE = 0x61;\n     var baseCharCode = style === 'a' ? A_LOWER_CASE : A_UPPER_CASE;\n     var letterIndex = currentIndex - 1;\n     var character = String.fromCharCode(baseCharCode + letterIndex % LIMIT);\n     var charBuf = [];\n     for (var j = 0, jj = letterIndex / LIMIT | 0; j <= jj; j++) {\n      charBuf.push(character);\n     }\n     currentLabel = charBuf.join('');\n     break;\n    default:\n     assert(!style, 'Invalid style \"' + style + '\" in PageLabel dictionary.');\n    }\n    pageLabels[i] = prefix + currentLabel;\n    currentLabel = '';\n    currentIndex++;\n   }\n   return pageLabels;\n  },\n  get attachments() {\n   var xref = this.xref;\n   var attachments = null, nameTreeRef;\n   var obj = this.catDict.get('Names');\n   if (obj) {\n    nameTreeRef = obj.getRaw('EmbeddedFiles');\n   }\n   if (nameTreeRef) {\n    var nameTree = new NameTree(nameTreeRef, xref);\n    var names = nameTree.getAll();\n    for (var name in names) {\n     var fs = new FileSpec(names[name], xref);\n     if (!attachments) {\n      attachments = Object.create(null);\n     }\n     attachments[stringToPDFString(name)] = fs.serializable;\n    }\n   }\n   return shadow(this, 'attachments', attachments);\n  },\n  get javaScript() {\n   var xref = this.xref;\n   var obj = this.catDict.get('Names');\n   var javaScript = [];\n   function appendIfJavaScriptDict(jsDict) {\n    var type = jsDict.get('S');\n    if (!isName(type, 'JavaScript')) {\n     return;\n    }\n    var js = jsDict.get('JS');\n    if (isStream(js)) {\n     js = bytesToString(js.getBytes());\n    } else if (!isString(js)) {\n     return;\n    }\n    javaScript.push(stringToPDFString(js));\n   }\n   if (obj && obj.has('JavaScript')) {\n    var nameTree = new NameTree(obj.getRaw('JavaScript'), xref);\n    var names = nameTree.getAll();\n    for (var name in names) {\n     var jsDict = names[name];\n     if (isDict(jsDict)) {\n      appendIfJavaScriptDict(jsDict);\n     }\n    }\n   }\n   var openactionDict = this.catDict.get('OpenAction');\n   if (isDict(openactionDict, 'Action')) {\n    var actionType = openactionDict.get('S');\n    if (isName(actionType, 'Named')) {\n     var action = openactionDict.get('N');\n     if (isName(action, 'Print')) {\n      javaScript.push('print({});');\n     }\n    } else {\n     appendIfJavaScriptDict(openactionDict);\n    }\n   }\n   return shadow(this, 'javaScript', javaScript);\n  },\n  cleanup: function Catalog_cleanup() {\n   var promises = [];\n   this.fontCache.forEach(function (promise) {\n    promises.push(promise);\n   });\n   return Promise.all(promises).then(function (translatedFonts) {\n    for (var i = 0, ii = translatedFonts.length; i < ii; i++) {\n     var font = translatedFonts[i].dict;\n     delete font.translated;\n    }\n    this.fontCache.clear();\n    this.builtInCMapCache = Object.create(null);\n   }.bind(this));\n  },\n  getPage: function Catalog_getPage(pageIndex) {\n   if (!(pageIndex in this.pagePromises)) {\n    this.pagePromises[pageIndex] = this.getPageDict(pageIndex).then(function (a) {\n     var dict = a[0];\n     var ref = a[1];\n     return this.pageFactory.createPage(pageIndex, dict, ref, this.fontCache, this.builtInCMapCache);\n    }.bind(this));\n   }\n   return this.pagePromises[pageIndex];\n  },\n  getPageDict: function Catalog_getPageDict(pageIndex) {\n   var capability = createPromiseCapability();\n   var nodesToVisit = [this.catDict.getRaw('Pages')];\n   var currentPageIndex = 0;\n   var xref = this.xref;\n   function next() {\n    while (nodesToVisit.length) {\n     var currentNode = nodesToVisit.pop();\n     if (isRef(currentNode)) {\n      xref.fetchAsync(currentNode).then(function (obj) {\n       if (isDict(obj, 'Page') || isDict(obj) && !obj.has('Kids')) {\n        if (pageIndex === currentPageIndex) {\n         capability.resolve([\n          obj,\n          currentNode\n         ]);\n        } else {\n         currentPageIndex++;\n         next();\n        }\n        return;\n       }\n       nodesToVisit.push(obj);\n       next();\n      }, capability.reject);\n      return;\n     }\n     assert(isDict(currentNode), 'page dictionary kid reference points to wrong type of object');\n     var count = currentNode.get('Count');\n     if (currentPageIndex + count <= pageIndex) {\n      currentPageIndex += count;\n      continue;\n     }\n     var kids = currentNode.get('Kids');\n     assert(isArray(kids), 'page dictionary kids object is not an array');\n     for (var last = kids.length - 1; last >= 0; last--) {\n      nodesToVisit.push(kids[last]);\n     }\n    }\n    capability.reject('Page index ' + pageIndex + ' not found.');\n   }\n   next();\n   return capability.promise;\n  },\n  getPageIndex: function Catalog_getPageIndex(pageRef) {\n   var xref = this.xref;\n   function pagesBeforeRef(kidRef) {\n    var total = 0;\n    var parentRef;\n    return xref.fetchAsync(kidRef).then(function (node) {\n     if (isRefsEqual(kidRef, pageRef) && !isDict(node, 'Page') && !(isDict(node) && !node.has('Type') && node.has('Contents'))) {\n      throw new Error('The reference does not point to a /Page Dict.');\n     }\n     if (!node) {\n      return null;\n     }\n     assert(isDict(node), 'node must be a Dict.');\n     parentRef = node.getRaw('Parent');\n     return node.getAsync('Parent');\n    }).then(function (parent) {\n     if (!parent) {\n      return null;\n     }\n     assert(isDict(parent), 'parent must be a Dict.');\n     return parent.getAsync('Kids');\n    }).then(function (kids) {\n     if (!kids) {\n      return null;\n     }\n     var kidPromises = [];\n     var found = false;\n     for (var i = 0; i < kids.length; i++) {\n      var kid = kids[i];\n      assert(isRef(kid), 'kid must be a Ref.');\n      if (kid.num === kidRef.num) {\n       found = true;\n       break;\n      }\n      kidPromises.push(xref.fetchAsync(kid).then(function (kid) {\n       if (kid.has('Count')) {\n        var count = kid.get('Count');\n        total += count;\n       } else {\n        total++;\n       }\n      }));\n     }\n     if (!found) {\n      error('kid ref not found in parents kids');\n     }\n     return Promise.all(kidPromises).then(function () {\n      return [\n       total,\n       parentRef\n      ];\n     });\n    });\n   }\n   var total = 0;\n   function next(ref) {\n    return pagesBeforeRef(ref).then(function (args) {\n     if (!args) {\n      return total;\n     }\n     var count = args[0];\n     var parentRef = args[1];\n     total += count;\n     return next(parentRef);\n    });\n   }\n   return next(pageRef);\n  }\n };\n Catalog.parseDestDictionary = function Catalog_parseDestDictionary(params) {\n  function addDefaultProtocolToUrl(url) {\n   if (url.indexOf('www.') === 0) {\n    return 'http://' + url;\n   }\n   return url;\n  }\n  function tryConvertUrlEncoding(url) {\n   try {\n    return stringToUTF8String(url);\n   } catch (e) {\n    return url;\n   }\n  }\n  var destDict = params.destDict;\n  if (!isDict(destDict)) {\n   warn('Catalog_parseDestDictionary: \"destDict\" must be a dictionary.');\n   return;\n  }\n  var resultObj = params.resultObj;\n  if (typeof resultObj !== 'object') {\n   warn('Catalog_parseDestDictionary: \"resultObj\" must be an object.');\n   return;\n  }\n  var docBaseUrl = params.docBaseUrl || null;\n  var action = destDict.get('A'), url, dest;\n  if (isDict(action)) {\n   var linkType = action.get('S').name;\n   switch (linkType) {\n   case 'URI':\n    url = action.get('URI');\n    if (isName(url)) {\n     url = '/' + url.name;\n    } else if (isString(url)) {\n     url = addDefaultProtocolToUrl(url);\n    }\n    break;\n   case 'GoTo':\n    dest = action.get('D');\n    break;\n   case 'Launch':\n   case 'GoToR':\n    var urlDict = action.get('F');\n    if (isDict(urlDict)) {\n     url = urlDict.get('F') || null;\n    } else if (isString(urlDict)) {\n     url = urlDict;\n    }\n    var remoteDest = action.get('D');\n    if (remoteDest) {\n     if (isName(remoteDest)) {\n      remoteDest = remoteDest.name;\n     }\n     if (isString(url)) {\n      var baseUrl = url.split('#')[0];\n      if (isString(remoteDest)) {\n       url = baseUrl + '#' + (/^\\d+$/.test(remoteDest) ? 'nameddest=' : '') + remoteDest;\n      } else if (isArray(remoteDest)) {\n       url = baseUrl + '#' + JSON.stringify(remoteDest);\n      }\n     }\n    }\n    var newWindow = action.get('NewWindow');\n    if (isBool(newWindow)) {\n     resultObj.newWindow = newWindow;\n    }\n    break;\n   case 'Named':\n    var namedAction = action.get('N');\n    if (isName(namedAction)) {\n     resultObj.action = namedAction.name;\n    }\n    break;\n   case 'JavaScript':\n    var jsAction = action.get('JS'), js;\n    if (isStream(jsAction)) {\n     js = bytesToString(jsAction.getBytes());\n    } else if (isString(jsAction)) {\n     js = jsAction;\n    }\n    if (js) {\n     var URL_OPEN_METHODS = [\n      'app.launchURL',\n      'window.open'\n     ];\n     var regex = new RegExp('^\\\\s*(' + URL_OPEN_METHODS.join('|').split('.').join('\\\\.') + ')\\\\((?:\\'|\\\")([^\\'\\\"]*)(?:\\'|\\\")(?:,\\\\s*(\\\\w+)\\\\)|\\\\))', 'i');\n     var jsUrl = regex.exec(stringToPDFString(js));\n     if (jsUrl && jsUrl[2]) {\n      url = jsUrl[2];\n      if (jsUrl[3] === 'true' && jsUrl[1] === 'app.launchURL') {\n       resultObj.newWindow = true;\n      }\n      break;\n     }\n    }\n   default:\n    warn('Catalog_parseDestDictionary: Unrecognized link type \"' + linkType + '\".');\n    break;\n   }\n  } else if (destDict.has('Dest')) {\n   dest = destDict.get('Dest');\n  }\n  if (isString(url)) {\n   url = tryConvertUrlEncoding(url);\n   var absoluteUrl = createValidAbsoluteUrl(url, docBaseUrl);\n   if (absoluteUrl) {\n    resultObj.url = absoluteUrl.href;\n   }\n   resultObj.unsafeUrl = url;\n  }\n  if (dest) {\n   if (isName(dest)) {\n    dest = dest.name;\n   }\n   if (isString(dest) || isArray(dest)) {\n    resultObj.dest = dest;\n   }\n  }\n };\n return Catalog;\n}();\nvar XRef = function XRefClosure() {\n function XRef(stream, pdfManager) {\n  this.stream = stream;\n  this.pdfManager = pdfManager;\n  this.entries = [];\n  this.xrefstms = Object.create(null);\n  this.cache = [];\n  this.stats = {\n   streamTypes: [],\n   fontTypes: []\n  };\n }\n XRef.prototype = {\n  setStartXRef: function XRef_setStartXRef(startXRef) {\n   this.startXRefQueue = [startXRef];\n  },\n  parse: function XRef_parse(recoveryMode) {\n   var trailerDict;\n   if (!recoveryMode) {\n    trailerDict = this.readXRef();\n   } else {\n    warn('Indexing all PDF objects');\n    trailerDict = this.indexObjects();\n   }\n   trailerDict.assignXref(this);\n   this.trailer = trailerDict;\n   var encrypt = trailerDict.get('Encrypt');\n   if (isDict(encrypt)) {\n    var ids = trailerDict.get('ID');\n    var fileId = ids && ids.length ? ids[0] : '';\n    encrypt.suppressEncryption = true;\n    this.encrypt = new CipherTransformFactory(encrypt, fileId, this.pdfManager.password);\n   }\n   if (!(this.root = trailerDict.get('Root'))) {\n    error('Invalid root reference');\n   }\n  },\n  processXRefTable: function XRef_processXRefTable(parser) {\n   if (!('tableState' in this)) {\n    this.tableState = {\n     entryNum: 0,\n     streamPos: parser.lexer.stream.pos,\n     parserBuf1: parser.buf1,\n     parserBuf2: parser.buf2\n    };\n   }\n   var obj = this.readXRefTable(parser);\n   if (!isCmd(obj, 'trailer')) {\n    error('Invalid XRef table: could not find trailer dictionary');\n   }\n   var dict = parser.getObj();\n   if (!isDict(dict) && dict.dict) {\n    dict = dict.dict;\n   }\n   if (!isDict(dict)) {\n    error('Invalid XRef table: could not parse trailer dictionary');\n   }\n   delete this.tableState;\n   return dict;\n  },\n  readXRefTable: function XRef_readXRefTable(parser) {\n   var stream = parser.lexer.stream;\n   var tableState = this.tableState;\n   stream.pos = tableState.streamPos;\n   parser.buf1 = tableState.parserBuf1;\n   parser.buf2 = tableState.parserBuf2;\n   var obj;\n   while (true) {\n    if (!('firstEntryNum' in tableState) || !('entryCount' in tableState)) {\n     if (isCmd(obj = parser.getObj(), 'trailer')) {\n      break;\n     }\n     tableState.firstEntryNum = obj;\n     tableState.entryCount = parser.getObj();\n    }\n    var first = tableState.firstEntryNum;\n    var count = tableState.entryCount;\n    if (!isInt(first) || !isInt(count)) {\n     error('Invalid XRef table: wrong types in subsection header');\n    }\n    for (var i = tableState.entryNum; i < count; i++) {\n     tableState.streamPos = stream.pos;\n     tableState.entryNum = i;\n     tableState.parserBuf1 = parser.buf1;\n     tableState.parserBuf2 = parser.buf2;\n     var entry = {};\n     entry.offset = parser.getObj();\n     entry.gen = parser.getObj();\n     var type = parser.getObj();\n     if (isCmd(type, 'f')) {\n      entry.free = true;\n     } else if (isCmd(type, 'n')) {\n      entry.uncompressed = true;\n     }\n     if (!isInt(entry.offset) || !isInt(entry.gen) || !(entry.free || entry.uncompressed)) {\n      error('Invalid entry in XRef subsection: ' + first + ', ' + count);\n     }\n     if (i === 0 && entry.free && first === 1) {\n      first = 0;\n     }\n     if (!this.entries[i + first]) {\n      this.entries[i + first] = entry;\n     }\n    }\n    tableState.entryNum = 0;\n    tableState.streamPos = stream.pos;\n    tableState.parserBuf1 = parser.buf1;\n    tableState.parserBuf2 = parser.buf2;\n    delete tableState.firstEntryNum;\n    delete tableState.entryCount;\n   }\n   if (this.entries[0] && !this.entries[0].free) {\n    error('Invalid XRef table: unexpected first object');\n   }\n   return obj;\n  },\n  processXRefStream: function XRef_processXRefStream(stream) {\n   if (!('streamState' in this)) {\n    var streamParameters = stream.dict;\n    var byteWidths = streamParameters.get('W');\n    var range = streamParameters.get('Index');\n    if (!range) {\n     range = [\n      0,\n      streamParameters.get('Size')\n     ];\n    }\n    this.streamState = {\n     entryRanges: range,\n     byteWidths: byteWidths,\n     entryNum: 0,\n     streamPos: stream.pos\n    };\n   }\n   this.readXRefStream(stream);\n   delete this.streamState;\n   return stream.dict;\n  },\n  readXRefStream: function XRef_readXRefStream(stream) {\n   var i, j;\n   var streamState = this.streamState;\n   stream.pos = streamState.streamPos;\n   var byteWidths = streamState.byteWidths;\n   var typeFieldWidth = byteWidths[0];\n   var offsetFieldWidth = byteWidths[1];\n   var generationFieldWidth = byteWidths[2];\n   var entryRanges = streamState.entryRanges;\n   while (entryRanges.length > 0) {\n    var first = entryRanges[0];\n    var n = entryRanges[1];\n    if (!isInt(first) || !isInt(n)) {\n     error('Invalid XRef range fields: ' + first + ', ' + n);\n    }\n    if (!isInt(typeFieldWidth) || !isInt(offsetFieldWidth) || !isInt(generationFieldWidth)) {\n     error('Invalid XRef entry fields length: ' + first + ', ' + n);\n    }\n    for (i = streamState.entryNum; i < n; ++i) {\n     streamState.entryNum = i;\n     streamState.streamPos = stream.pos;\n     var type = 0, offset = 0, generation = 0;\n     for (j = 0; j < typeFieldWidth; ++j) {\n      type = type << 8 | stream.getByte();\n     }\n     if (typeFieldWidth === 0) {\n      type = 1;\n     }\n     for (j = 0; j < offsetFieldWidth; ++j) {\n      offset = offset << 8 | stream.getByte();\n     }\n     for (j = 0; j < generationFieldWidth; ++j) {\n      generation = generation << 8 | stream.getByte();\n     }\n     var entry = {};\n     entry.offset = offset;\n     entry.gen = generation;\n     switch (type) {\n     case 0:\n      entry.free = true;\n      break;\n     case 1:\n      entry.uncompressed = true;\n      break;\n     case 2:\n      break;\n     default:\n      error('Invalid XRef entry type: ' + type);\n     }\n     if (!this.entries[first + i]) {\n      this.entries[first + i] = entry;\n     }\n    }\n    streamState.entryNum = 0;\n    streamState.streamPos = stream.pos;\n    entryRanges.splice(0, 2);\n   }\n  },\n  indexObjects: function XRef_indexObjects() {\n   var TAB = 0x9, LF = 0xA, CR = 0xD, SPACE = 0x20;\n   var PERCENT = 0x25, LT = 0x3C;\n   function readToken(data, offset) {\n    var token = '', ch = data[offset];\n    while (ch !== LF && ch !== CR && ch !== LT) {\n     if (++offset >= data.length) {\n      break;\n     }\n     token += String.fromCharCode(ch);\n     ch = data[offset];\n    }\n    return token;\n   }\n   function skipUntil(data, offset, what) {\n    var length = what.length, dataLength = data.length;\n    var skipped = 0;\n    while (offset < dataLength) {\n     var i = 0;\n     while (i < length && data[offset + i] === what[i]) {\n      ++i;\n     }\n     if (i >= length) {\n      break;\n     }\n     offset++;\n     skipped++;\n    }\n    return skipped;\n   }\n   var objRegExp = /^(\\d+)\\s+(\\d+)\\s+obj\\b/;\n   var trailerBytes = new Uint8Array([\n    116,\n    114,\n    97,\n    105,\n    108,\n    101,\n    114\n   ]);\n   var startxrefBytes = new Uint8Array([\n    115,\n    116,\n    97,\n    114,\n    116,\n    120,\n    114,\n    101,\n    102\n   ]);\n   var endobjBytes = new Uint8Array([\n    101,\n    110,\n    100,\n    111,\n    98,\n    106\n   ]);\n   var xrefBytes = new Uint8Array([\n    47,\n    88,\n    82,\n    101,\n    102\n   ]);\n   this.entries.length = 0;\n   var stream = this.stream;\n   stream.pos = 0;\n   var buffer = stream.getBytes();\n   var position = stream.start, length = buffer.length;\n   var trailers = [], xrefStms = [];\n   while (position < length) {\n    var ch = buffer[position];\n    if (ch === TAB || ch === LF || ch === CR || ch === SPACE) {\n     ++position;\n     continue;\n    }\n    if (ch === PERCENT) {\n     do {\n      ++position;\n      if (position >= length) {\n       break;\n      }\n      ch = buffer[position];\n     } while (ch !== LF && ch !== CR);\n     continue;\n    }\n    var token = readToken(buffer, position);\n    var m;\n    if (token.indexOf('xref') === 0 && (token.length === 4 || /\\s/.test(token[4]))) {\n     position += skipUntil(buffer, position, trailerBytes);\n     trailers.push(position);\n     position += skipUntil(buffer, position, startxrefBytes);\n    } else if (m = objRegExp.exec(token)) {\n     if (typeof this.entries[m[1]] === 'undefined') {\n      this.entries[m[1]] = {\n       offset: position - stream.start,\n       gen: m[2] | 0,\n       uncompressed: true\n      };\n     }\n     var contentLength = skipUntil(buffer, position, endobjBytes) + 7;\n     var content = buffer.subarray(position, position + contentLength);\n     var xrefTagOffset = skipUntil(content, 0, xrefBytes);\n     if (xrefTagOffset < contentLength && content[xrefTagOffset + 5] < 64) {\n      xrefStms.push(position - stream.start);\n      this.xrefstms[position - stream.start] = 1;\n     }\n     position += contentLength;\n    } else if (token.indexOf('trailer') === 0 && (token.length === 7 || /\\s/.test(token[7]))) {\n     trailers.push(position);\n     position += skipUntil(buffer, position, startxrefBytes);\n    } else {\n     position += token.length + 1;\n    }\n   }\n   var i, ii;\n   for (i = 0, ii = xrefStms.length; i < ii; ++i) {\n    this.startXRefQueue.push(xrefStms[i]);\n    this.readXRef(true);\n   }\n   var dict;\n   for (i = 0, ii = trailers.length; i < ii; ++i) {\n    stream.pos = trailers[i];\n    var parser = new Parser(new Lexer(stream), true, this, true);\n    var obj = parser.getObj();\n    if (!isCmd(obj, 'trailer')) {\n     continue;\n    }\n    dict = parser.getObj();\n    if (!isDict(dict)) {\n     continue;\n    }\n    if (dict.has('ID')) {\n     return dict;\n    }\n   }\n   if (dict) {\n    return dict;\n   }\n   throw new InvalidPDFException('Invalid PDF structure');\n  },\n  readXRef: function XRef_readXRef(recoveryMode) {\n   var stream = this.stream;\n   try {\n    while (this.startXRefQueue.length) {\n     var startXRef = this.startXRefQueue[0];\n     stream.pos = startXRef + stream.start;\n     var parser = new Parser(new Lexer(stream), true, this);\n     var obj = parser.getObj();\n     var dict;\n     if (isCmd(obj, 'xref')) {\n      dict = this.processXRefTable(parser);\n      if (!this.topDict) {\n       this.topDict = dict;\n      }\n      obj = dict.get('XRefStm');\n      if (isInt(obj)) {\n       var pos = obj;\n       if (!(pos in this.xrefstms)) {\n        this.xrefstms[pos] = 1;\n        this.startXRefQueue.push(pos);\n       }\n      }\n     } else if (isInt(obj)) {\n      if (!isInt(parser.getObj()) || !isCmd(parser.getObj(), 'obj') || !isStream(obj = parser.getObj())) {\n       error('Invalid XRef stream');\n      }\n      dict = this.processXRefStream(obj);\n      if (!this.topDict) {\n       this.topDict = dict;\n      }\n      if (!dict) {\n       error('Failed to read XRef stream');\n      }\n     } else {\n      error('Invalid XRef stream header');\n     }\n     obj = dict.get('Prev');\n     if (isInt(obj)) {\n      this.startXRefQueue.push(obj);\n     } else if (isRef(obj)) {\n      this.startXRefQueue.push(obj.num);\n     }\n     this.startXRefQueue.shift();\n    }\n    return this.topDict;\n   } catch (e) {\n    if (e instanceof MissingDataException) {\n     throw e;\n    }\n    info('(while reading XRef): ' + e);\n   }\n   if (recoveryMode) {\n    return;\n   }\n   throw new XRefParseException();\n  },\n  getEntry: function XRef_getEntry(i) {\n   var xrefEntry = this.entries[i];\n   if (xrefEntry && !xrefEntry.free && xrefEntry.offset) {\n    return xrefEntry;\n   }\n   return null;\n  },\n  fetchIfRef: function XRef_fetchIfRef(obj, suppressEncryption) {\n   if (!isRef(obj)) {\n    return obj;\n   }\n   return this.fetch(obj, suppressEncryption);\n  },\n  fetch: function XRef_fetch(ref, suppressEncryption) {\n   assert(isRef(ref), 'ref object is not a reference');\n   var num = ref.num;\n   if (num in this.cache) {\n    var cacheEntry = this.cache[num];\n    if (isDict(cacheEntry) && !cacheEntry.objId) {\n     cacheEntry.objId = ref.toString();\n    }\n    return cacheEntry;\n   }\n   var xrefEntry = this.getEntry(num);\n   if (xrefEntry === null) {\n    return this.cache[num] = null;\n   }\n   if (xrefEntry.uncompressed) {\n    xrefEntry = this.fetchUncompressed(ref, xrefEntry, suppressEncryption);\n   } else {\n    xrefEntry = this.fetchCompressed(xrefEntry, suppressEncryption);\n   }\n   if (isDict(xrefEntry)) {\n    xrefEntry.objId = ref.toString();\n   } else if (isStream(xrefEntry)) {\n    xrefEntry.dict.objId = ref.toString();\n   }\n   return xrefEntry;\n  },\n  fetchUncompressed: function XRef_fetchUncompressed(ref, xrefEntry, suppressEncryption) {\n   var gen = ref.gen;\n   var num = ref.num;\n   if (xrefEntry.gen !== gen) {\n    error('inconsistent generation in XRef');\n   }\n   var stream = this.stream.makeSubStream(xrefEntry.offset + this.stream.start);\n   var parser = new Parser(new Lexer(stream), true, this);\n   var obj1 = parser.getObj();\n   var obj2 = parser.getObj();\n   var obj3 = parser.getObj();\n   if (!isInt(obj1) || parseInt(obj1, 10) !== num || !isInt(obj2) || parseInt(obj2, 10) !== gen || !isCmd(obj3)) {\n    error('bad XRef entry');\n   }\n   if (!isCmd(obj3, 'obj')) {\n    if (obj3.cmd.indexOf('obj') === 0) {\n     num = parseInt(obj3.cmd.substring(3), 10);\n     if (!isNaN(num)) {\n      return num;\n     }\n    }\n    error('bad XRef entry');\n   }\n   if (this.encrypt && !suppressEncryption) {\n    xrefEntry = parser.getObj(this.encrypt.createCipherTransform(num, gen));\n   } else {\n    xrefEntry = parser.getObj();\n   }\n   if (!isStream(xrefEntry)) {\n    this.cache[num] = xrefEntry;\n   }\n   return xrefEntry;\n  },\n  fetchCompressed: function XRef_fetchCompressed(xrefEntry, suppressEncryption) {\n   var tableOffset = xrefEntry.offset;\n   var stream = this.fetch(new Ref(tableOffset, 0));\n   if (!isStream(stream)) {\n    error('bad ObjStm stream');\n   }\n   var first = stream.dict.get('First');\n   var n = stream.dict.get('N');\n   if (!isInt(first) || !isInt(n)) {\n    error('invalid first and n parameters for ObjStm stream');\n   }\n   var parser = new Parser(new Lexer(stream), false, this);\n   parser.allowStreams = true;\n   var i, entries = [], num, nums = [];\n   for (i = 0; i < n; ++i) {\n    num = parser.getObj();\n    if (!isInt(num)) {\n     error('invalid object number in the ObjStm stream: ' + num);\n    }\n    nums.push(num);\n    var offset = parser.getObj();\n    if (!isInt(offset)) {\n     error('invalid object offset in the ObjStm stream: ' + offset);\n    }\n   }\n   for (i = 0; i < n; ++i) {\n    entries.push(parser.getObj());\n    if (isCmd(parser.buf1, 'endobj')) {\n     parser.shift();\n    }\n    num = nums[i];\n    var entry = this.entries[num];\n    if (entry && entry.offset === tableOffset && entry.gen === i) {\n     this.cache[num] = entries[i];\n    }\n   }\n   xrefEntry = entries[xrefEntry.gen];\n   if (xrefEntry === undefined) {\n    error('bad XRef entry for compressed object');\n   }\n   return xrefEntry;\n  },\n  fetchIfRefAsync: function XRef_fetchIfRefAsync(obj, suppressEncryption) {\n   if (!isRef(obj)) {\n    return Promise.resolve(obj);\n   }\n   return this.fetchAsync(obj, suppressEncryption);\n  },\n  fetchAsync: function XRef_fetchAsync(ref, suppressEncryption) {\n   var streamManager = this.stream.manager;\n   var xref = this;\n   return new Promise(function tryFetch(resolve, reject) {\n    try {\n     resolve(xref.fetch(ref, suppressEncryption));\n    } catch (e) {\n     if (e instanceof MissingDataException) {\n      streamManager.requestRange(e.begin, e.end).then(function () {\n       tryFetch(resolve, reject);\n      }, reject);\n      return;\n     }\n     reject(e);\n    }\n   });\n  },\n  getCatalogObj: function XRef_getCatalogObj() {\n   return this.root;\n  }\n };\n return XRef;\n}();\nvar NameOrNumberTree = function NameOrNumberTreeClosure() {\n function NameOrNumberTree(root, xref) {\n  throw new Error('Cannot initialize NameOrNumberTree.');\n }\n NameOrNumberTree.prototype = {\n  getAll: function NameOrNumberTree_getAll() {\n   var dict = Object.create(null);\n   if (!this.root) {\n    return dict;\n   }\n   var xref = this.xref;\n   var processed = new RefSet();\n   processed.put(this.root);\n   var queue = [this.root];\n   while (queue.length > 0) {\n    var i, n;\n    var obj = xref.fetchIfRef(queue.shift());\n    if (!isDict(obj)) {\n     continue;\n    }\n    if (obj.has('Kids')) {\n     var kids = obj.get('Kids');\n     for (i = 0, n = kids.length; i < n; i++) {\n      var kid = kids[i];\n      assert(!processed.has(kid), 'Duplicate entry in \"' + this._type + '\" tree.');\n      queue.push(kid);\n      processed.put(kid);\n     }\n     continue;\n    }\n    var entries = obj.get(this._type);\n    if (isArray(entries)) {\n     for (i = 0, n = entries.length; i < n; i += 2) {\n      dict[xref.fetchIfRef(entries[i])] = xref.fetchIfRef(entries[i + 1]);\n     }\n    }\n   }\n   return dict;\n  },\n  get: function NameOrNumberTree_get(key) {\n   if (!this.root) {\n    return null;\n   }\n   var xref = this.xref;\n   var kidsOrEntries = xref.fetchIfRef(this.root);\n   var loopCount = 0;\n   var MAX_LEVELS = 10;\n   var l, r, m;\n   while (kidsOrEntries.has('Kids')) {\n    if (++loopCount > MAX_LEVELS) {\n     warn('Search depth limit reached for \"' + this._type + '\" tree.');\n     return null;\n    }\n    var kids = kidsOrEntries.get('Kids');\n    if (!isArray(kids)) {\n     return null;\n    }\n    l = 0;\n    r = kids.length - 1;\n    while (l <= r) {\n     m = l + r >> 1;\n     var kid = xref.fetchIfRef(kids[m]);\n     var limits = kid.get('Limits');\n     if (key < xref.fetchIfRef(limits[0])) {\n      r = m - 1;\n     } else if (key > xref.fetchIfRef(limits[1])) {\n      l = m + 1;\n     } else {\n      kidsOrEntries = xref.fetchIfRef(kids[m]);\n      break;\n     }\n    }\n    if (l > r) {\n     return null;\n    }\n   }\n   var entries = kidsOrEntries.get(this._type);\n   if (isArray(entries)) {\n    l = 0;\n    r = entries.length - 2;\n    while (l <= r) {\n     m = l + r & ~1;\n     var currentKey = xref.fetchIfRef(entries[m]);\n     if (key < currentKey) {\n      r = m - 2;\n     } else if (key > currentKey) {\n      l = m + 2;\n     } else {\n      return xref.fetchIfRef(entries[m + 1]);\n     }\n    }\n   }\n   return null;\n  }\n };\n return NameOrNumberTree;\n}();\nvar NameTree = function NameTreeClosure() {\n function NameTree(root, xref) {\n  this.root = root;\n  this.xref = xref;\n  this._type = 'Names';\n }\n Util.inherit(NameTree, NameOrNumberTree, {});\n return NameTree;\n}();\nvar NumberTree = function NumberTreeClosure() {\n function NumberTree(root, xref) {\n  this.root = root;\n  this.xref = xref;\n  this._type = 'Nums';\n }\n Util.inherit(NumberTree, NameOrNumberTree, {});\n return NumberTree;\n}();\nvar FileSpec = function FileSpecClosure() {\n function FileSpec(root, xref) {\n  if (!root || !isDict(root)) {\n   return;\n  }\n  this.xref = xref;\n  this.root = root;\n  if (root.has('FS')) {\n   this.fs = root.get('FS');\n  }\n  this.description = root.has('Desc') ? stringToPDFString(root.get('Desc')) : '';\n  if (root.has('RF')) {\n   warn('Related file specifications are not supported');\n  }\n  this.contentAvailable = true;\n  if (!root.has('EF')) {\n   this.contentAvailable = false;\n   warn('Non-embedded file specifications are not supported');\n  }\n }\n function pickPlatformItem(dict) {\n  if (dict.has('UF')) {\n   return dict.get('UF');\n  } else if (dict.has('F')) {\n   return dict.get('F');\n  } else if (dict.has('Unix')) {\n   return dict.get('Unix');\n  } else if (dict.has('Mac')) {\n   return dict.get('Mac');\n  } else if (dict.has('DOS')) {\n   return dict.get('DOS');\n  }\n  return null;\n }\n FileSpec.prototype = {\n  get filename() {\n   if (!this._filename && this.root) {\n    var filename = pickPlatformItem(this.root) || 'unnamed';\n    this._filename = stringToPDFString(filename).replace(/\\\\\\\\/g, '\\\\').replace(/\\\\\\//g, '/').replace(/\\\\/g, '/');\n   }\n   return this._filename;\n  },\n  get content() {\n   if (!this.contentAvailable) {\n    return null;\n   }\n   if (!this.contentRef && this.root) {\n    this.contentRef = pickPlatformItem(this.root.get('EF'));\n   }\n   var content = null;\n   if (this.contentRef) {\n    var xref = this.xref;\n    var fileObj = xref.fetchIfRef(this.contentRef);\n    if (fileObj && isStream(fileObj)) {\n     content = fileObj.getBytes();\n    } else {\n     warn('Embedded file specification points to non-existing/invalid ' + 'content');\n    }\n   } else {\n    warn('Embedded file specification does not have a content');\n   }\n   return content;\n  },\n  get serializable() {\n   return {\n    filename: this.filename,\n    content: this.content\n   };\n  }\n };\n return FileSpec;\n}();\nvar ObjectLoader = function () {\n function mayHaveChildren(value) {\n  return isRef(value) || isDict(value) || isArray(value) || isStream(value);\n }\n function addChildren(node, nodesToVisit) {\n  var value;\n  if (isDict(node) || isStream(node)) {\n   var map;\n   if (isDict(node)) {\n    map = node.map;\n   } else {\n    map = node.dict.map;\n   }\n   for (var key in map) {\n    value = map[key];\n    if (mayHaveChildren(value)) {\n     nodesToVisit.push(value);\n    }\n   }\n  } else if (isArray(node)) {\n   for (var i = 0, ii = node.length; i < ii; i++) {\n    value = node[i];\n    if (mayHaveChildren(value)) {\n     nodesToVisit.push(value);\n    }\n   }\n  }\n }\n function ObjectLoader(obj, keys, xref) {\n  this.obj = obj;\n  this.keys = keys;\n  this.xref = xref;\n  this.refSet = null;\n  this.capability = null;\n }\n ObjectLoader.prototype = {\n  load: function ObjectLoader_load() {\n   var keys = this.keys;\n   this.capability = createPromiseCapability();\n   if (!(this.xref.stream instanceof ChunkedStream) || this.xref.stream.getMissingChunks().length === 0) {\n    this.capability.resolve();\n    return this.capability.promise;\n   }\n   this.refSet = new RefSet();\n   var nodesToVisit = [];\n   for (var i = 0; i < keys.length; i++) {\n    nodesToVisit.push(this.obj[keys[i]]);\n   }\n   this._walk(nodesToVisit);\n   return this.capability.promise;\n  },\n  _walk: function ObjectLoader_walk(nodesToVisit) {\n   var nodesToRevisit = [];\n   var pendingRequests = [];\n   while (nodesToVisit.length) {\n    var currentNode = nodesToVisit.pop();\n    if (isRef(currentNode)) {\n     if (this.refSet.has(currentNode)) {\n      continue;\n     }\n     try {\n      var ref = currentNode;\n      this.refSet.put(ref);\n      currentNode = this.xref.fetch(currentNode);\n     } catch (e) {\n      if (!(e instanceof MissingDataException)) {\n       throw e;\n      }\n      nodesToRevisit.push(currentNode);\n      pendingRequests.push({\n       begin: e.begin,\n       end: e.end\n      });\n     }\n    }\n    if (currentNode && currentNode.getBaseStreams) {\n     var baseStreams = currentNode.getBaseStreams();\n     var foundMissingData = false;\n     for (var i = 0; i < baseStreams.length; i++) {\n      var stream = baseStreams[i];\n      if (stream.getMissingChunks && stream.getMissingChunks().length) {\n       foundMissingData = true;\n       pendingRequests.push({\n        begin: stream.start,\n        end: stream.end\n       });\n      }\n     }\n     if (foundMissingData) {\n      nodesToRevisit.push(currentNode);\n     }\n    }\n    addChildren(currentNode, nodesToVisit);\n   }\n   if (pendingRequests.length) {\n    this.xref.stream.manager.requestRanges(pendingRequests).then(function pendingRequestCallback() {\n     nodesToVisit = nodesToRevisit;\n     for (var i = 0; i < nodesToRevisit.length; i++) {\n      var node = nodesToRevisit[i];\n      if (isRef(node)) {\n       this.refSet.remove(node);\n      }\n     }\n     this._walk(nodesToVisit);\n    }.bind(this), this.capability.reject);\n    return;\n   }\n   this.refSet = null;\n   this.capability.resolve();\n  }\n };\n return ObjectLoader;\n}();\nexports.Catalog = Catalog;\nexports.ObjectLoader = ObjectLoader;\nexports.XRef = XRef;\nexports.FileSpec = FileSpec;\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar getLookupTableFactory = sharedUtil.getLookupTableFactory;\nvar getStdFontMap = getLookupTableFactory(function (t) {\n t['ArialNarrow'] = 'Helvetica';\n t['ArialNarrow-Bold'] = 'Helvetica-Bold';\n t['ArialNarrow-BoldItalic'] = 'Helvetica-BoldOblique';\n t['ArialNarrow-Italic'] = 'Helvetica-Oblique';\n t['ArialBlack'] = 'Helvetica';\n t['ArialBlack-Bold'] = 'Helvetica-Bold';\n t['ArialBlack-BoldItalic'] = 'Helvetica-BoldOblique';\n t['ArialBlack-Italic'] = 'Helvetica-Oblique';\n t['Arial-Black'] = 'Helvetica';\n t['Arial-Black-Bold'] = 'Helvetica-Bold';\n t['Arial-Black-BoldItalic'] = 'Helvetica-BoldOblique';\n t['Arial-Black-Italic'] = 'Helvetica-Oblique';\n t['Arial'] = 'Helvetica';\n t['Arial-Bold'] = 'Helvetica-Bold';\n t['Arial-BoldItalic'] = 'Helvetica-BoldOblique';\n t['Arial-Italic'] = 'Helvetica-Oblique';\n t['Arial-BoldItalicMT'] = 'Helvetica-BoldOblique';\n t['Arial-BoldMT'] = 'Helvetica-Bold';\n t['Arial-ItalicMT'] = 'Helvetica-Oblique';\n t['ArialMT'] = 'Helvetica';\n t['Courier-Bold'] = 'Courier-Bold';\n t['Courier-BoldItalic'] = 'Courier-BoldOblique';\n t['Courier-Italic'] = 'Courier-Oblique';\n t['CourierNew'] = 'Courier';\n t['CourierNew-Bold'] = 'Courier-Bold';\n t['CourierNew-BoldItalic'] = 'Courier-BoldOblique';\n t['CourierNew-Italic'] = 'Courier-Oblique';\n t['CourierNewPS-BoldItalicMT'] = 'Courier-BoldOblique';\n t['CourierNewPS-BoldMT'] = 'Courier-Bold';\n t['CourierNewPS-ItalicMT'] = 'Courier-Oblique';\n t['CourierNewPSMT'] = 'Courier';\n t['Helvetica'] = 'Helvetica';\n t['Helvetica-Bold'] = 'Helvetica-Bold';\n t['Helvetica-BoldItalic'] = 'Helvetica-BoldOblique';\n t['Helvetica-BoldOblique'] = 'Helvetica-BoldOblique';\n t['Helvetica-Italic'] = 'Helvetica-Oblique';\n t['Helvetica-Oblique'] = 'Helvetica-Oblique';\n t['Symbol-Bold'] = 'Symbol';\n t['Symbol-BoldItalic'] = 'Symbol';\n t['Symbol-Italic'] = 'Symbol';\n t['TimesNewRoman'] = 'Times-Roman';\n t['TimesNewRoman-Bold'] = 'Times-Bold';\n t['TimesNewRoman-BoldItalic'] = 'Times-BoldItalic';\n t['TimesNewRoman-Italic'] = 'Times-Italic';\n t['TimesNewRomanPS'] = 'Times-Roman';\n t['TimesNewRomanPS-Bold'] = 'Times-Bold';\n t['TimesNewRomanPS-BoldItalic'] = 'Times-BoldItalic';\n t['TimesNewRomanPS-BoldItalicMT'] = 'Times-BoldItalic';\n t['TimesNewRomanPS-BoldMT'] = 'Times-Bold';\n t['TimesNewRomanPS-Italic'] = 'Times-Italic';\n t['TimesNewRomanPS-ItalicMT'] = 'Times-Italic';\n t['TimesNewRomanPSMT'] = 'Times-Roman';\n t['TimesNewRomanPSMT-Bold'] = 'Times-Bold';\n t['TimesNewRomanPSMT-BoldItalic'] = 'Times-BoldItalic';\n t['TimesNewRomanPSMT-Italic'] = 'Times-Italic';\n});\nvar getNonStdFontMap = getLookupTableFactory(function (t) {\n t['CenturyGothic'] = 'Helvetica';\n t['CenturyGothic-Bold'] = 'Helvetica-Bold';\n t['CenturyGothic-BoldItalic'] = 'Helvetica-BoldOblique';\n t['CenturyGothic-Italic'] = 'Helvetica-Oblique';\n t['ComicSansMS'] = 'Comic Sans MS';\n t['ComicSansMS-Bold'] = 'Comic Sans MS-Bold';\n t['ComicSansMS-BoldItalic'] = 'Comic Sans MS-BoldItalic';\n t['ComicSansMS-Italic'] = 'Comic Sans MS-Italic';\n t['LucidaConsole'] = 'Courier';\n t['LucidaConsole-Bold'] = 'Courier-Bold';\n t['LucidaConsole-BoldItalic'] = 'Courier-BoldOblique';\n t['LucidaConsole-Italic'] = 'Courier-Oblique';\n t['MS-Gothic'] = 'MS Gothic';\n t['MS-Gothic-Bold'] = 'MS Gothic-Bold';\n t['MS-Gothic-BoldItalic'] = 'MS Gothic-BoldItalic';\n t['MS-Gothic-Italic'] = 'MS Gothic-Italic';\n t['MS-Mincho'] = 'MS Mincho';\n t['MS-Mincho-Bold'] = 'MS Mincho-Bold';\n t['MS-Mincho-BoldItalic'] = 'MS Mincho-BoldItalic';\n t['MS-Mincho-Italic'] = 'MS Mincho-Italic';\n t['MS-PGothic'] = 'MS PGothic';\n t['MS-PGothic-Bold'] = 'MS PGothic-Bold';\n t['MS-PGothic-BoldItalic'] = 'MS PGothic-BoldItalic';\n t['MS-PGothic-Italic'] = 'MS PGothic-Italic';\n t['MS-PMincho'] = 'MS PMincho';\n t['MS-PMincho-Bold'] = 'MS PMincho-Bold';\n t['MS-PMincho-BoldItalic'] = 'MS PMincho-BoldItalic';\n t['MS-PMincho-Italic'] = 'MS PMincho-Italic';\n t['NuptialScript'] = 'Times-Italic';\n t['Wingdings'] = 'ZapfDingbats';\n});\nvar getSerifFonts = getLookupTableFactory(function (t) {\n t['Adobe Jenson'] = true;\n t['Adobe Text'] = true;\n t['Albertus'] = true;\n t['Aldus'] = true;\n t['Alexandria'] = true;\n t['Algerian'] = true;\n t['American Typewriter'] = true;\n t['Antiqua'] = true;\n t['Apex'] = true;\n t['Arno'] = true;\n t['Aster'] = true;\n t['Aurora'] = true;\n t['Baskerville'] = true;\n t['Bell'] = true;\n t['Bembo'] = true;\n t['Bembo Schoolbook'] = true;\n t['Benguiat'] = true;\n t['Berkeley Old Style'] = true;\n t['Bernhard Modern'] = true;\n t['Berthold City'] = true;\n t['Bodoni'] = true;\n t['Bauer Bodoni'] = true;\n t['Book Antiqua'] = true;\n t['Bookman'] = true;\n t['Bordeaux Roman'] = true;\n t['Californian FB'] = true;\n t['Calisto'] = true;\n t['Calvert'] = true;\n t['Capitals'] = true;\n t['Cambria'] = true;\n t['Cartier'] = true;\n t['Caslon'] = true;\n t['Catull'] = true;\n t['Centaur'] = true;\n t['Century Old Style'] = true;\n t['Century Schoolbook'] = true;\n t['Chaparral'] = true;\n t['Charis SIL'] = true;\n t['Cheltenham'] = true;\n t['Cholla Slab'] = true;\n t['Clarendon'] = true;\n t['Clearface'] = true;\n t['Cochin'] = true;\n t['Colonna'] = true;\n t['Computer Modern'] = true;\n t['Concrete Roman'] = true;\n t['Constantia'] = true;\n t['Cooper Black'] = true;\n t['Corona'] = true;\n t['Ecotype'] = true;\n t['Egyptienne'] = true;\n t['Elephant'] = true;\n t['Excelsior'] = true;\n t['Fairfield'] = true;\n t['FF Scala'] = true;\n t['Folkard'] = true;\n t['Footlight'] = true;\n t['FreeSerif'] = true;\n t['Friz Quadrata'] = true;\n t['Garamond'] = true;\n t['Gentium'] = true;\n t['Georgia'] = true;\n t['Gloucester'] = true;\n t['Goudy Old Style'] = true;\n t['Goudy Schoolbook'] = true;\n t['Goudy Pro Font'] = true;\n t['Granjon'] = true;\n t['Guardian Egyptian'] = true;\n t['Heather'] = true;\n t['Hercules'] = true;\n t['High Tower Text'] = true;\n t['Hiroshige'] = true;\n t['Hoefler Text'] = true;\n t['Humana Serif'] = true;\n t['Imprint'] = true;\n t['Ionic No. 5'] = true;\n t['Janson'] = true;\n t['Joanna'] = true;\n t['Korinna'] = true;\n t['Lexicon'] = true;\n t['Liberation Serif'] = true;\n t['Linux Libertine'] = true;\n t['Literaturnaya'] = true;\n t['Lucida'] = true;\n t['Lucida Bright'] = true;\n t['Melior'] = true;\n t['Memphis'] = true;\n t['Miller'] = true;\n t['Minion'] = true;\n t['Modern'] = true;\n t['Mona Lisa'] = true;\n t['Mrs Eaves'] = true;\n t['MS Serif'] = true;\n t['Museo Slab'] = true;\n t['New York'] = true;\n t['Nimbus Roman'] = true;\n t['NPS Rawlinson Roadway'] = true;\n t['NuptialScript'] = true;\n t['Palatino'] = true;\n t['Perpetua'] = true;\n t['Plantin'] = true;\n t['Plantin Schoolbook'] = true;\n t['Playbill'] = true;\n t['Poor Richard'] = true;\n t['Rawlinson Roadway'] = true;\n t['Renault'] = true;\n t['Requiem'] = true;\n t['Rockwell'] = true;\n t['Roman'] = true;\n t['Rotis Serif'] = true;\n t['Sabon'] = true;\n t['Scala'] = true;\n t['Seagull'] = true;\n t['Sistina'] = true;\n t['Souvenir'] = true;\n t['STIX'] = true;\n t['Stone Informal'] = true;\n t['Stone Serif'] = true;\n t['Sylfaen'] = true;\n t['Times'] = true;\n t['Trajan'] = true;\n t['Trinité'] = true;\n t['Trump Mediaeval'] = true;\n t['Utopia'] = true;\n t['Vale Type'] = true;\n t['Bitstream Vera'] = true;\n t['Vera Serif'] = true;\n t['Versailles'] = true;\n t['Wanted'] = true;\n t['Weiss'] = true;\n t['Wide Latin'] = true;\n t['Windsor'] = true;\n t['XITS'] = true;\n});\nvar getSymbolsFonts = getLookupTableFactory(function (t) {\n t['Dingbats'] = true;\n t['Symbol'] = true;\n t['ZapfDingbats'] = true;\n});\nvar getGlyphMapForStandardFonts = getLookupTableFactory(function (t) {\n t[2] = 10;\n t[3] = 32;\n t[4] = 33;\n t[5] = 34;\n t[6] = 35;\n t[7] = 36;\n t[8] = 37;\n t[9] = 38;\n t[10] = 39;\n t[11] = 40;\n t[12] = 41;\n t[13] = 42;\n t[14] = 43;\n t[15] = 44;\n t[16] = 45;\n t[17] = 46;\n t[18] = 47;\n t[19] = 48;\n t[20] = 49;\n t[21] = 50;\n t[22] = 51;\n t[23] = 52;\n t[24] = 53;\n t[25] = 54;\n t[26] = 55;\n t[27] = 56;\n t[28] = 57;\n t[29] = 58;\n t[30] = 894;\n t[31] = 60;\n t[32] = 61;\n t[33] = 62;\n t[34] = 63;\n t[35] = 64;\n t[36] = 65;\n t[37] = 66;\n t[38] = 67;\n t[39] = 68;\n t[40] = 69;\n t[41] = 70;\n t[42] = 71;\n t[43] = 72;\n t[44] = 73;\n t[45] = 74;\n t[46] = 75;\n t[47] = 76;\n t[48] = 77;\n t[49] = 78;\n t[50] = 79;\n t[51] = 80;\n t[52] = 81;\n t[53] = 82;\n t[54] = 83;\n t[55] = 84;\n t[56] = 85;\n t[57] = 86;\n t[58] = 87;\n t[59] = 88;\n t[60] = 89;\n t[61] = 90;\n t[62] = 91;\n t[63] = 92;\n t[64] = 93;\n t[65] = 94;\n t[66] = 95;\n t[67] = 96;\n t[68] = 97;\n t[69] = 98;\n t[70] = 99;\n t[71] = 100;\n t[72] = 101;\n t[73] = 102;\n t[74] = 103;\n t[75] = 104;\n t[76] = 105;\n t[77] = 106;\n t[78] = 107;\n t[79] = 108;\n t[80] = 109;\n t[81] = 110;\n t[82] = 111;\n t[83] = 112;\n t[84] = 113;\n t[85] = 114;\n t[86] = 115;\n t[87] = 116;\n t[88] = 117;\n t[89] = 118;\n t[90] = 119;\n t[91] = 120;\n t[92] = 121;\n t[93] = 122;\n t[94] = 123;\n t[95] = 124;\n t[96] = 125;\n t[97] = 126;\n t[98] = 196;\n t[99] = 197;\n t[100] = 199;\n t[101] = 201;\n t[102] = 209;\n t[103] = 214;\n t[104] = 220;\n t[105] = 225;\n t[106] = 224;\n t[107] = 226;\n t[108] = 228;\n t[109] = 227;\n t[110] = 229;\n t[111] = 231;\n t[112] = 233;\n t[113] = 232;\n t[114] = 234;\n t[115] = 235;\n t[116] = 237;\n t[117] = 236;\n t[118] = 238;\n t[119] = 239;\n t[120] = 241;\n t[121] = 243;\n t[122] = 242;\n t[123] = 244;\n t[124] = 246;\n t[125] = 245;\n t[126] = 250;\n t[127] = 249;\n t[128] = 251;\n t[129] = 252;\n t[130] = 8224;\n t[131] = 176;\n t[132] = 162;\n t[133] = 163;\n t[134] = 167;\n t[135] = 8226;\n t[136] = 182;\n t[137] = 223;\n t[138] = 174;\n t[139] = 169;\n t[140] = 8482;\n t[141] = 180;\n t[142] = 168;\n t[143] = 8800;\n t[144] = 198;\n t[145] = 216;\n t[146] = 8734;\n t[147] = 177;\n t[148] = 8804;\n t[149] = 8805;\n t[150] = 165;\n t[151] = 181;\n t[152] = 8706;\n t[153] = 8721;\n t[154] = 8719;\n t[156] = 8747;\n t[157] = 170;\n t[158] = 186;\n t[159] = 8486;\n t[160] = 230;\n t[161] = 248;\n t[162] = 191;\n t[163] = 161;\n t[164] = 172;\n t[165] = 8730;\n t[166] = 402;\n t[167] = 8776;\n t[168] = 8710;\n t[169] = 171;\n t[170] = 187;\n t[171] = 8230;\n t[210] = 218;\n t[223] = 711;\n t[224] = 321;\n t[225] = 322;\n t[227] = 353;\n t[229] = 382;\n t[234] = 253;\n t[252] = 263;\n t[253] = 268;\n t[254] = 269;\n t[258] = 258;\n t[260] = 260;\n t[261] = 261;\n t[265] = 280;\n t[266] = 281;\n t[268] = 283;\n t[269] = 313;\n t[275] = 323;\n t[276] = 324;\n t[278] = 328;\n t[284] = 345;\n t[285] = 346;\n t[286] = 347;\n t[292] = 367;\n t[295] = 377;\n t[296] = 378;\n t[298] = 380;\n t[305] = 963;\n t[306] = 964;\n t[307] = 966;\n t[308] = 8215;\n t[309] = 8252;\n t[310] = 8319;\n t[311] = 8359;\n t[312] = 8592;\n t[313] = 8593;\n t[337] = 9552;\n t[493] = 1039;\n t[494] = 1040;\n t[705] = 1524;\n t[706] = 8362;\n t[710] = 64288;\n t[711] = 64298;\n t[759] = 1617;\n t[761] = 1776;\n t[763] = 1778;\n t[775] = 1652;\n t[777] = 1764;\n t[778] = 1780;\n t[779] = 1781;\n t[780] = 1782;\n t[782] = 771;\n t[783] = 64726;\n t[786] = 8363;\n t[788] = 8532;\n t[790] = 768;\n t[791] = 769;\n t[792] = 768;\n t[795] = 803;\n t[797] = 64336;\n t[798] = 64337;\n t[799] = 64342;\n t[800] = 64343;\n t[801] = 64344;\n t[802] = 64345;\n t[803] = 64362;\n t[804] = 64363;\n t[805] = 64364;\n t[2424] = 7821;\n t[2425] = 7822;\n t[2426] = 7823;\n t[2427] = 7824;\n t[2428] = 7825;\n t[2429] = 7826;\n t[2430] = 7827;\n t[2433] = 7682;\n t[2678] = 8045;\n t[2679] = 8046;\n t[2830] = 1552;\n t[2838] = 686;\n t[2840] = 751;\n t[2842] = 753;\n t[2843] = 754;\n t[2844] = 755;\n t[2846] = 757;\n t[2856] = 767;\n t[2857] = 848;\n t[2858] = 849;\n t[2862] = 853;\n t[2863] = 854;\n t[2864] = 855;\n t[2865] = 861;\n t[2866] = 862;\n t[2906] = 7460;\n t[2908] = 7462;\n t[2909] = 7463;\n t[2910] = 7464;\n t[2912] = 7466;\n t[2913] = 7467;\n t[2914] = 7468;\n t[2916] = 7470;\n t[2917] = 7471;\n t[2918] = 7472;\n t[2920] = 7474;\n t[2921] = 7475;\n t[2922] = 7476;\n t[2924] = 7478;\n t[2925] = 7479;\n t[2926] = 7480;\n t[2928] = 7482;\n t[2929] = 7483;\n t[2930] = 7484;\n t[2932] = 7486;\n t[2933] = 7487;\n t[2934] = 7488;\n t[2936] = 7490;\n t[2937] = 7491;\n t[2938] = 7492;\n t[2940] = 7494;\n t[2941] = 7495;\n t[2942] = 7496;\n t[2944] = 7498;\n t[2946] = 7500;\n t[2948] = 7502;\n t[2950] = 7504;\n t[2951] = 7505;\n t[2952] = 7506;\n t[2954] = 7508;\n t[2955] = 7509;\n t[2956] = 7510;\n t[2958] = 7512;\n t[2959] = 7513;\n t[2960] = 7514;\n t[2962] = 7516;\n t[2963] = 7517;\n t[2964] = 7518;\n t[2966] = 7520;\n t[2967] = 7521;\n t[2968] = 7522;\n t[2970] = 7524;\n t[2971] = 7525;\n t[2972] = 7526;\n t[2974] = 7528;\n t[2975] = 7529;\n t[2976] = 7530;\n t[2978] = 1537;\n t[2979] = 1538;\n t[2980] = 1539;\n t[2982] = 1549;\n t[2983] = 1551;\n t[2984] = 1552;\n t[2986] = 1554;\n t[2987] = 1555;\n t[2988] = 1556;\n t[2990] = 1623;\n t[2991] = 1624;\n t[2995] = 1775;\n t[2999] = 1791;\n t[3002] = 64290;\n t[3003] = 64291;\n t[3004] = 64292;\n t[3006] = 64294;\n t[3007] = 64295;\n t[3008] = 64296;\n t[3011] = 1900;\n t[3014] = 8223;\n t[3015] = 8244;\n t[3017] = 7532;\n t[3018] = 7533;\n t[3019] = 7534;\n t[3075] = 7590;\n t[3076] = 7591;\n t[3079] = 7594;\n t[3080] = 7595;\n t[3083] = 7598;\n t[3084] = 7599;\n t[3087] = 7602;\n t[3088] = 7603;\n t[3091] = 7606;\n t[3092] = 7607;\n t[3095] = 7610;\n t[3096] = 7611;\n t[3099] = 7614;\n t[3100] = 7615;\n t[3103] = 7618;\n t[3104] = 7619;\n t[3107] = 8337;\n t[3108] = 8338;\n t[3116] = 1884;\n t[3119] = 1885;\n t[3120] = 1885;\n t[3123] = 1886;\n t[3124] = 1886;\n t[3127] = 1887;\n t[3128] = 1887;\n t[3131] = 1888;\n t[3132] = 1888;\n t[3135] = 1889;\n t[3136] = 1889;\n t[3139] = 1890;\n t[3140] = 1890;\n t[3143] = 1891;\n t[3144] = 1891;\n t[3147] = 1892;\n t[3148] = 1892;\n t[3153] = 580;\n t[3154] = 581;\n t[3157] = 584;\n t[3158] = 585;\n t[3161] = 588;\n t[3162] = 589;\n t[3165] = 891;\n t[3166] = 892;\n t[3169] = 1274;\n t[3170] = 1275;\n t[3173] = 1278;\n t[3174] = 1279;\n t[3181] = 7622;\n t[3182] = 7623;\n t[3282] = 11799;\n t[3316] = 578;\n t[3379] = 42785;\n t[3393] = 1159;\n t[3416] = 8377;\n});\nvar getSupplementalGlyphMapForArialBlack = getLookupTableFactory(function (t) {\n t[227] = 322;\n t[264] = 261;\n t[291] = 346;\n});\nexports.getStdFontMap = getStdFontMap;\nexports.getNonStdFontMap = getNonStdFontMap;\nexports.getSerifFonts = getSerifFonts;\nexports.getSymbolsFonts = getSymbolsFonts;\nexports.getGlyphMapForStandardFonts = getGlyphMapForStandardFonts;\nexports.getSupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack;\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar getLookupTableFactory = sharedUtil.getLookupTableFactory;\nvar getSpecialPUASymbols = getLookupTableFactory(function (t) {\n t[63721] = 0x00A9;\n t[63193] = 0x00A9;\n t[63720] = 0x00AE;\n t[63194] = 0x00AE;\n t[63722] = 0x2122;\n t[63195] = 0x2122;\n t[63729] = 0x23A7;\n t[63730] = 0x23A8;\n t[63731] = 0x23A9;\n t[63740] = 0x23AB;\n t[63741] = 0x23AC;\n t[63742] = 0x23AD;\n t[63726] = 0x23A1;\n t[63727] = 0x23A2;\n t[63728] = 0x23A3;\n t[63737] = 0x23A4;\n t[63738] = 0x23A5;\n t[63739] = 0x23A6;\n t[63723] = 0x239B;\n t[63724] = 0x239C;\n t[63725] = 0x239D;\n t[63734] = 0x239E;\n t[63735] = 0x239F;\n t[63736] = 0x23A0;\n});\nfunction mapSpecialUnicodeValues(code) {\n if (code >= 0xFFF0 && code <= 0xFFFF) {\n  return 0;\n } else if (code >= 0xF600 && code <= 0xF8FF) {\n  return getSpecialPUASymbols()[code] || code;\n }\n return code;\n}\nfunction getUnicodeForGlyph(name, glyphsUnicodeMap) {\n var unicode = glyphsUnicodeMap[name];\n if (unicode !== undefined) {\n  return unicode;\n }\n if (!name) {\n  return -1;\n }\n if (name[0] === 'u') {\n  var nameLen = name.length, hexStr;\n  if (nameLen === 7 && name[1] === 'n' && name[2] === 'i') {\n   hexStr = name.substr(3);\n  } else if (nameLen >= 5 && nameLen <= 7) {\n   hexStr = name.substr(1);\n  } else {\n   return -1;\n  }\n  if (hexStr === hexStr.toUpperCase()) {\n   unicode = parseInt(hexStr, 16);\n   if (unicode >= 0) {\n    return unicode;\n   }\n  }\n }\n return -1;\n}\nvar UnicodeRanges = [\n {\n  'begin': 0x0000,\n  'end': 0x007F\n },\n {\n  'begin': 0x0080,\n  'end': 0x00FF\n },\n {\n  'begin': 0x0100,\n  'end': 0x017F\n },\n {\n  'begin': 0x0180,\n  'end': 0x024F\n },\n {\n  'begin': 0x0250,\n  'end': 0x02AF\n },\n {\n  'begin': 0x02B0,\n  'end': 0x02FF\n },\n {\n  'begin': 0x0300,\n  'end': 0x036F\n },\n {\n  'begin': 0x0370,\n  'end': 0x03FF\n },\n {\n  'begin': 0x2C80,\n  'end': 0x2CFF\n },\n {\n  'begin': 0x0400,\n  'end': 0x04FF\n },\n {\n  'begin': 0x0530,\n  'end': 0x058F\n },\n {\n  'begin': 0x0590,\n  'end': 0x05FF\n },\n {\n  'begin': 0xA500,\n  'end': 0xA63F\n },\n {\n  'begin': 0x0600,\n  'end': 0x06FF\n },\n {\n  'begin': 0x07C0,\n  'end': 0x07FF\n },\n {\n  'begin': 0x0900,\n  'end': 0x097F\n },\n {\n  'begin': 0x0980,\n  'end': 0x09FF\n },\n {\n  'begin': 0x0A00,\n  'end': 0x0A7F\n },\n {\n  'begin': 0x0A80,\n  'end': 0x0AFF\n },\n {\n  'begin': 0x0B00,\n  'end': 0x0B7F\n },\n {\n  'begin': 0x0B80,\n  'end': 0x0BFF\n },\n {\n  'begin': 0x0C00,\n  'end': 0x0C7F\n },\n {\n  'begin': 0x0C80,\n  'end': 0x0CFF\n },\n {\n  'begin': 0x0D00,\n  'end': 0x0D7F\n },\n {\n  'begin': 0x0E00,\n  'end': 0x0E7F\n },\n {\n  'begin': 0x0E80,\n  'end': 0x0EFF\n },\n {\n  'begin': 0x10A0,\n  'end': 0x10FF\n },\n {\n  'begin': 0x1B00,\n  'end': 0x1B7F\n },\n {\n  'begin': 0x1100,\n  'end': 0x11FF\n },\n {\n  'begin': 0x1E00,\n  'end': 0x1EFF\n },\n {\n  'begin': 0x1F00,\n  'end': 0x1FFF\n },\n {\n  'begin': 0x2000,\n  'end': 0x206F\n },\n {\n  'begin': 0x2070,\n  'end': 0x209F\n },\n {\n  'begin': 0x20A0,\n  'end': 0x20CF\n },\n {\n  'begin': 0x20D0,\n  'end': 0x20FF\n },\n {\n  'begin': 0x2100,\n  'end': 0x214F\n },\n {\n  'begin': 0x2150,\n  'end': 0x218F\n },\n {\n  'begin': 0x2190,\n  'end': 0x21FF\n },\n {\n  'begin': 0x2200,\n  'end': 0x22FF\n },\n {\n  'begin': 0x2300,\n  'end': 0x23FF\n },\n {\n  'begin': 0x2400,\n  'end': 0x243F\n },\n {\n  'begin': 0x2440,\n  'end': 0x245F\n },\n {\n  'begin': 0x2460,\n  'end': 0x24FF\n },\n {\n  'begin': 0x2500,\n  'end': 0x257F\n },\n {\n  'begin': 0x2580,\n  'end': 0x259F\n },\n {\n  'begin': 0x25A0,\n  'end': 0x25FF\n },\n {\n  'begin': 0x2600,\n  'end': 0x26FF\n },\n {\n  'begin': 0x2700,\n  'end': 0x27BF\n },\n {\n  'begin': 0x3000,\n  'end': 0x303F\n },\n {\n  'begin': 0x3040,\n  'end': 0x309F\n },\n {\n  'begin': 0x30A0,\n  'end': 0x30FF\n },\n {\n  'begin': 0x3100,\n  'end': 0x312F\n },\n {\n  'begin': 0x3130,\n  'end': 0x318F\n },\n {\n  'begin': 0xA840,\n  'end': 0xA87F\n },\n {\n  'begin': 0x3200,\n  'end': 0x32FF\n },\n {\n  'begin': 0x3300,\n  'end': 0x33FF\n },\n {\n  'begin': 0xAC00,\n  'end': 0xD7AF\n },\n {\n  'begin': 0xD800,\n  'end': 0xDFFF\n },\n {\n  'begin': 0x10900,\n  'end': 0x1091F\n },\n {\n  'begin': 0x4E00,\n  'end': 0x9FFF\n },\n {\n  'begin': 0xE000,\n  'end': 0xF8FF\n },\n {\n  'begin': 0x31C0,\n  'end': 0x31EF\n },\n {\n  'begin': 0xFB00,\n  'end': 0xFB4F\n },\n {\n  'begin': 0xFB50,\n  'end': 0xFDFF\n },\n {\n  'begin': 0xFE20,\n  'end': 0xFE2F\n },\n {\n  'begin': 0xFE10,\n  'end': 0xFE1F\n },\n {\n  'begin': 0xFE50,\n  'end': 0xFE6F\n },\n {\n  'begin': 0xFE70,\n  'end': 0xFEFF\n },\n {\n  'begin': 0xFF00,\n  'end': 0xFFEF\n },\n {\n  'begin': 0xFFF0,\n  'end': 0xFFFF\n },\n {\n  'begin': 0x0F00,\n  'end': 0x0FFF\n },\n {\n  'begin': 0x0700,\n  'end': 0x074F\n },\n {\n  'begin': 0x0780,\n  'end': 0x07BF\n },\n {\n  'begin': 0x0D80,\n  'end': 0x0DFF\n },\n {\n  'begin': 0x1000,\n  'end': 0x109F\n },\n {\n  'begin': 0x1200,\n  'end': 0x137F\n },\n {\n  'begin': 0x13A0,\n  'end': 0x13FF\n },\n {\n  'begin': 0x1400,\n  'end': 0x167F\n },\n {\n  'begin': 0x1680,\n  'end': 0x169F\n },\n {\n  'begin': 0x16A0,\n  'end': 0x16FF\n },\n {\n  'begin': 0x1780,\n  'end': 0x17FF\n },\n {\n  'begin': 0x1800,\n  'end': 0x18AF\n },\n {\n  'begin': 0x2800,\n  'end': 0x28FF\n },\n {\n  'begin': 0xA000,\n  'end': 0xA48F\n },\n {\n  'begin': 0x1700,\n  'end': 0x171F\n },\n {\n  'begin': 0x10300,\n  'end': 0x1032F\n },\n {\n  'begin': 0x10330,\n  'end': 0x1034F\n },\n {\n  'begin': 0x10400,\n  'end': 0x1044F\n },\n {\n  'begin': 0x1D000,\n  'end': 0x1D0FF\n },\n {\n  'begin': 0x1D400,\n  'end': 0x1D7FF\n },\n {\n  'begin': 0xFF000,\n  'end': 0xFFFFD\n },\n {\n  'begin': 0xFE00,\n  'end': 0xFE0F\n },\n {\n  'begin': 0xE0000,\n  'end': 0xE007F\n },\n {\n  'begin': 0x1900,\n  'end': 0x194F\n },\n {\n  'begin': 0x1950,\n  'end': 0x197F\n },\n {\n  'begin': 0x1980,\n  'end': 0x19DF\n },\n {\n  'begin': 0x1A00,\n  'end': 0x1A1F\n },\n {\n  'begin': 0x2C00,\n  'end': 0x2C5F\n },\n {\n  'begin': 0x2D30,\n  'end': 0x2D7F\n },\n {\n  'begin': 0x4DC0,\n  'end': 0x4DFF\n },\n {\n  'begin': 0xA800,\n  'end': 0xA82F\n },\n {\n  'begin': 0x10000,\n  'end': 0x1007F\n },\n {\n  'begin': 0x10140,\n  'end': 0x1018F\n },\n {\n  'begin': 0x10380,\n  'end': 0x1039F\n },\n {\n  'begin': 0x103A0,\n  'end': 0x103DF\n },\n {\n  'begin': 0x10450,\n  'end': 0x1047F\n },\n {\n  'begin': 0x10480,\n  'end': 0x104AF\n },\n {\n  'begin': 0x10800,\n  'end': 0x1083F\n },\n {\n  'begin': 0x10A00,\n  'end': 0x10A5F\n },\n {\n  'begin': 0x1D300,\n  'end': 0x1D35F\n },\n {\n  'begin': 0x12000,\n  'end': 0x123FF\n },\n {\n  'begin': 0x1D360,\n  'end': 0x1D37F\n },\n {\n  'begin': 0x1B80,\n  'end': 0x1BBF\n },\n {\n  'begin': 0x1C00,\n  'end': 0x1C4F\n },\n {\n  'begin': 0x1C50,\n  'end': 0x1C7F\n },\n {\n  'begin': 0xA880,\n  'end': 0xA8DF\n },\n {\n  'begin': 0xA900,\n  'end': 0xA92F\n },\n {\n  'begin': 0xA930,\n  'end': 0xA95F\n },\n {\n  'begin': 0xAA00,\n  'end': 0xAA5F\n },\n {\n  'begin': 0x10190,\n  'end': 0x101CF\n },\n {\n  'begin': 0x101D0,\n  'end': 0x101FF\n },\n {\n  'begin': 0x102A0,\n  'end': 0x102DF\n },\n {\n  'begin': 0x1F030,\n  'end': 0x1F09F\n }\n];\nfunction getUnicodeRangeFor(value) {\n for (var i = 0, ii = UnicodeRanges.length; i < ii; i++) {\n  var range = UnicodeRanges[i];\n  if (value >= range.begin && value < range.end) {\n   return i;\n  }\n }\n return -1;\n}\nfunction isRTLRangeFor(value) {\n var range = UnicodeRanges[13];\n if (value >= range.begin && value < range.end) {\n  return true;\n }\n range = UnicodeRanges[11];\n if (value >= range.begin && value < range.end) {\n  return true;\n }\n return false;\n}\nvar getNormalizedUnicodes = getLookupTableFactory(function (t) {\n t['\\u00A8'] = '\\u0020\\u0308';\n t['\\u00AF'] = '\\u0020\\u0304';\n t['\\u00B4'] = '\\u0020\\u0301';\n t['\\u00B5'] = '\\u03BC';\n t['\\u00B8'] = '\\u0020\\u0327';\n t['\\u0132'] = '\\u0049\\u004A';\n t['\\u0133'] = '\\u0069\\u006A';\n t['\\u013F'] = '\\u004C\\u00B7';\n t['\\u0140'] = '\\u006C\\u00B7';\n t['\\u0149'] = '\\u02BC\\u006E';\n t['\\u017F'] = '\\u0073';\n t['\\u01C4'] = '\\u0044\\u017D';\n t['\\u01C5'] = '\\u0044\\u017E';\n t['\\u01C6'] = '\\u0064\\u017E';\n t['\\u01C7'] = '\\u004C\\u004A';\n t['\\u01C8'] = '\\u004C\\u006A';\n t['\\u01C9'] = '\\u006C\\u006A';\n t['\\u01CA'] = '\\u004E\\u004A';\n t['\\u01CB'] = '\\u004E\\u006A';\n t['\\u01CC'] = '\\u006E\\u006A';\n t['\\u01F1'] = '\\u0044\\u005A';\n t['\\u01F2'] = '\\u0044\\u007A';\n t['\\u01F3'] = '\\u0064\\u007A';\n t['\\u02D8'] = '\\u0020\\u0306';\n t['\\u02D9'] = '\\u0020\\u0307';\n t['\\u02DA'] = '\\u0020\\u030A';\n t['\\u02DB'] = '\\u0020\\u0328';\n t['\\u02DC'] = '\\u0020\\u0303';\n t['\\u02DD'] = '\\u0020\\u030B';\n t['\\u037A'] = '\\u0020\\u0345';\n t['\\u0384'] = '\\u0020\\u0301';\n t['\\u03D0'] = '\\u03B2';\n t['\\u03D1'] = '\\u03B8';\n t['\\u03D2'] = '\\u03A5';\n t['\\u03D5'] = '\\u03C6';\n t['\\u03D6'] = '\\u03C0';\n t['\\u03F0'] = '\\u03BA';\n t['\\u03F1'] = '\\u03C1';\n t['\\u03F2'] = '\\u03C2';\n t['\\u03F4'] = '\\u0398';\n t['\\u03F5'] = '\\u03B5';\n t['\\u03F9'] = '\\u03A3';\n t['\\u0587'] = '\\u0565\\u0582';\n t['\\u0675'] = '\\u0627\\u0674';\n t['\\u0676'] = '\\u0648\\u0674';\n t['\\u0677'] = '\\u06C7\\u0674';\n t['\\u0678'] = '\\u064A\\u0674';\n t['\\u0E33'] = '\\u0E4D\\u0E32';\n t['\\u0EB3'] = '\\u0ECD\\u0EB2';\n t['\\u0EDC'] = '\\u0EAB\\u0E99';\n t['\\u0EDD'] = '\\u0EAB\\u0EA1';\n t['\\u0F77'] = '\\u0FB2\\u0F81';\n t['\\u0F79'] = '\\u0FB3\\u0F81';\n t['\\u1E9A'] = '\\u0061\\u02BE';\n t['\\u1FBD'] = '\\u0020\\u0313';\n t['\\u1FBF'] = '\\u0020\\u0313';\n t['\\u1FC0'] = '\\u0020\\u0342';\n t['\\u1FFE'] = '\\u0020\\u0314';\n t['\\u2002'] = '\\u0020';\n t['\\u2003'] = '\\u0020';\n t['\\u2004'] = '\\u0020';\n t['\\u2005'] = '\\u0020';\n t['\\u2006'] = '\\u0020';\n t['\\u2008'] = '\\u0020';\n t['\\u2009'] = '\\u0020';\n t['\\u200A'] = '\\u0020';\n t['\\u2017'] = '\\u0020\\u0333';\n t['\\u2024'] = '\\u002E';\n t['\\u2025'] = '\\u002E\\u002E';\n t['\\u2026'] = '\\u002E\\u002E\\u002E';\n t['\\u2033'] = '\\u2032\\u2032';\n t['\\u2034'] = '\\u2032\\u2032\\u2032';\n t['\\u2036'] = '\\u2035\\u2035';\n t['\\u2037'] = '\\u2035\\u2035\\u2035';\n t['\\u203C'] = '\\u0021\\u0021';\n t['\\u203E'] = '\\u0020\\u0305';\n t['\\u2047'] = '\\u003F\\u003F';\n t['\\u2048'] = '\\u003F\\u0021';\n t['\\u2049'] = '\\u0021\\u003F';\n t['\\u2057'] = '\\u2032\\u2032\\u2032\\u2032';\n t['\\u205F'] = '\\u0020';\n t['\\u20A8'] = '\\u0052\\u0073';\n t['\\u2100'] = '\\u0061\\u002F\\u0063';\n t['\\u2101'] = '\\u0061\\u002F\\u0073';\n t['\\u2103'] = '\\u00B0\\u0043';\n t['\\u2105'] = '\\u0063\\u002F\\u006F';\n t['\\u2106'] = '\\u0063\\u002F\\u0075';\n t['\\u2107'] = '\\u0190';\n t['\\u2109'] = '\\u00B0\\u0046';\n t['\\u2116'] = '\\u004E\\u006F';\n t['\\u2121'] = '\\u0054\\u0045\\u004C';\n t['\\u2135'] = '\\u05D0';\n t['\\u2136'] = '\\u05D1';\n t['\\u2137'] = '\\u05D2';\n t['\\u2138'] = '\\u05D3';\n t['\\u213B'] = '\\u0046\\u0041\\u0058';\n t['\\u2160'] = '\\u0049';\n t['\\u2161'] = '\\u0049\\u0049';\n t['\\u2162'] = '\\u0049\\u0049\\u0049';\n t['\\u2163'] = '\\u0049\\u0056';\n t['\\u2164'] = '\\u0056';\n t['\\u2165'] = '\\u0056\\u0049';\n t['\\u2166'] = '\\u0056\\u0049\\u0049';\n t['\\u2167'] = '\\u0056\\u0049\\u0049\\u0049';\n t['\\u2168'] = '\\u0049\\u0058';\n t['\\u2169'] = '\\u0058';\n t['\\u216A'] = '\\u0058\\u0049';\n t['\\u216B'] = '\\u0058\\u0049\\u0049';\n t['\\u216C'] = '\\u004C';\n t['\\u216D'] = '\\u0043';\n t['\\u216E'] = '\\u0044';\n t['\\u216F'] = '\\u004D';\n t['\\u2170'] = '\\u0069';\n t['\\u2171'] = '\\u0069\\u0069';\n t['\\u2172'] = '\\u0069\\u0069\\u0069';\n t['\\u2173'] = '\\u0069\\u0076';\n t['\\u2174'] = '\\u0076';\n t['\\u2175'] = '\\u0076\\u0069';\n t['\\u2176'] = '\\u0076\\u0069\\u0069';\n t['\\u2177'] = '\\u0076\\u0069\\u0069\\u0069';\n t['\\u2178'] = '\\u0069\\u0078';\n t['\\u2179'] = '\\u0078';\n t['\\u217A'] = '\\u0078\\u0069';\n t['\\u217B'] = '\\u0078\\u0069\\u0069';\n t['\\u217C'] = '\\u006C';\n t['\\u217D'] = '\\u0063';\n t['\\u217E'] = '\\u0064';\n t['\\u217F'] = '\\u006D';\n t['\\u222C'] = '\\u222B\\u222B';\n t['\\u222D'] = '\\u222B\\u222B\\u222B';\n t['\\u222F'] = '\\u222E\\u222E';\n t['\\u2230'] = '\\u222E\\u222E\\u222E';\n t['\\u2474'] = '\\u0028\\u0031\\u0029';\n t['\\u2475'] = '\\u0028\\u0032\\u0029';\n t['\\u2476'] = '\\u0028\\u0033\\u0029';\n t['\\u2477'] = '\\u0028\\u0034\\u0029';\n t['\\u2478'] = '\\u0028\\u0035\\u0029';\n t['\\u2479'] = '\\u0028\\u0036\\u0029';\n t['\\u247A'] = '\\u0028\\u0037\\u0029';\n t['\\u247B'] = '\\u0028\\u0038\\u0029';\n t['\\u247C'] = '\\u0028\\u0039\\u0029';\n t['\\u247D'] = '\\u0028\\u0031\\u0030\\u0029';\n t['\\u247E'] = '\\u0028\\u0031\\u0031\\u0029';\n t['\\u247F'] = '\\u0028\\u0031\\u0032\\u0029';\n t['\\u2480'] = '\\u0028\\u0031\\u0033\\u0029';\n t['\\u2481'] = '\\u0028\\u0031\\u0034\\u0029';\n t['\\u2482'] = '\\u0028\\u0031\\u0035\\u0029';\n t['\\u2483'] = '\\u0028\\u0031\\u0036\\u0029';\n t['\\u2484'] = '\\u0028\\u0031\\u0037\\u0029';\n t['\\u2485'] = '\\u0028\\u0031\\u0038\\u0029';\n t['\\u2486'] = '\\u0028\\u0031\\u0039\\u0029';\n t['\\u2487'] = '\\u0028\\u0032\\u0030\\u0029';\n t['\\u2488'] = '\\u0031\\u002E';\n t['\\u2489'] = '\\u0032\\u002E';\n t['\\u248A'] = '\\u0033\\u002E';\n t['\\u248B'] = '\\u0034\\u002E';\n t['\\u248C'] = '\\u0035\\u002E';\n t['\\u248D'] = '\\u0036\\u002E';\n t['\\u248E'] = '\\u0037\\u002E';\n t['\\u248F'] = '\\u0038\\u002E';\n t['\\u2490'] = '\\u0039\\u002E';\n t['\\u2491'] = '\\u0031\\u0030\\u002E';\n t['\\u2492'] = '\\u0031\\u0031\\u002E';\n t['\\u2493'] = '\\u0031\\u0032\\u002E';\n t['\\u2494'] = '\\u0031\\u0033\\u002E';\n t['\\u2495'] = '\\u0031\\u0034\\u002E';\n t['\\u2496'] = '\\u0031\\u0035\\u002E';\n t['\\u2497'] = '\\u0031\\u0036\\u002E';\n t['\\u2498'] = '\\u0031\\u0037\\u002E';\n t['\\u2499'] = '\\u0031\\u0038\\u002E';\n t['\\u249A'] = '\\u0031\\u0039\\u002E';\n t['\\u249B'] = '\\u0032\\u0030\\u002E';\n t['\\u249C'] = '\\u0028\\u0061\\u0029';\n t['\\u249D'] = '\\u0028\\u0062\\u0029';\n t['\\u249E'] = '\\u0028\\u0063\\u0029';\n t['\\u249F'] = '\\u0028\\u0064\\u0029';\n t['\\u24A0'] = '\\u0028\\u0065\\u0029';\n t['\\u24A1'] = '\\u0028\\u0066\\u0029';\n t['\\u24A2'] = '\\u0028\\u0067\\u0029';\n t['\\u24A3'] = '\\u0028\\u0068\\u0029';\n t['\\u24A4'] = '\\u0028\\u0069\\u0029';\n t['\\u24A5'] = '\\u0028\\u006A\\u0029';\n t['\\u24A6'] = '\\u0028\\u006B\\u0029';\n t['\\u24A7'] = '\\u0028\\u006C\\u0029';\n t['\\u24A8'] = '\\u0028\\u006D\\u0029';\n t['\\u24A9'] = '\\u0028\\u006E\\u0029';\n t['\\u24AA'] = '\\u0028\\u006F\\u0029';\n t['\\u24AB'] = '\\u0028\\u0070\\u0029';\n t['\\u24AC'] = '\\u0028\\u0071\\u0029';\n t['\\u24AD'] = '\\u0028\\u0072\\u0029';\n t['\\u24AE'] = '\\u0028\\u0073\\u0029';\n t['\\u24AF'] = '\\u0028\\u0074\\u0029';\n t['\\u24B0'] = '\\u0028\\u0075\\u0029';\n t['\\u24B1'] = '\\u0028\\u0076\\u0029';\n t['\\u24B2'] = '\\u0028\\u0077\\u0029';\n t['\\u24B3'] = '\\u0028\\u0078\\u0029';\n t['\\u24B4'] = '\\u0028\\u0079\\u0029';\n t['\\u24B5'] = '\\u0028\\u007A\\u0029';\n t['\\u2A0C'] = '\\u222B\\u222B\\u222B\\u222B';\n t['\\u2A74'] = '\\u003A\\u003A\\u003D';\n t['\\u2A75'] = '\\u003D\\u003D';\n t['\\u2A76'] = '\\u003D\\u003D\\u003D';\n t['\\u2E9F'] = '\\u6BCD';\n t['\\u2EF3'] = '\\u9F9F';\n t['\\u2F00'] = '\\u4E00';\n t['\\u2F01'] = '\\u4E28';\n t['\\u2F02'] = '\\u4E36';\n t['\\u2F03'] = '\\u4E3F';\n t['\\u2F04'] = '\\u4E59';\n t['\\u2F05'] = '\\u4E85';\n t['\\u2F06'] = '\\u4E8C';\n t['\\u2F07'] = '\\u4EA0';\n t['\\u2F08'] = '\\u4EBA';\n t['\\u2F09'] = '\\u513F';\n t['\\u2F0A'] = '\\u5165';\n t['\\u2F0B'] = '\\u516B';\n t['\\u2F0C'] = '\\u5182';\n t['\\u2F0D'] = '\\u5196';\n t['\\u2F0E'] = '\\u51AB';\n t['\\u2F0F'] = '\\u51E0';\n t['\\u2F10'] = '\\u51F5';\n t['\\u2F11'] = '\\u5200';\n t['\\u2F12'] = '\\u529B';\n t['\\u2F13'] = '\\u52F9';\n t['\\u2F14'] = '\\u5315';\n t['\\u2F15'] = '\\u531A';\n t['\\u2F16'] = '\\u5338';\n t['\\u2F17'] = '\\u5341';\n t['\\u2F18'] = '\\u535C';\n t['\\u2F19'] = '\\u5369';\n t['\\u2F1A'] = '\\u5382';\n t['\\u2F1B'] = '\\u53B6';\n t['\\u2F1C'] = '\\u53C8';\n t['\\u2F1D'] = '\\u53E3';\n t['\\u2F1E'] = '\\u56D7';\n t['\\u2F1F'] = '\\u571F';\n t['\\u2F20'] = '\\u58EB';\n t['\\u2F21'] = '\\u5902';\n t['\\u2F22'] = '\\u590A';\n t['\\u2F23'] = '\\u5915';\n t['\\u2F24'] = '\\u5927';\n t['\\u2F25'] = '\\u5973';\n t['\\u2F26'] = '\\u5B50';\n t['\\u2F27'] = '\\u5B80';\n t['\\u2F28'] = '\\u5BF8';\n t['\\u2F29'] = '\\u5C0F';\n t['\\u2F2A'] = '\\u5C22';\n t['\\u2F2B'] = '\\u5C38';\n t['\\u2F2C'] = '\\u5C6E';\n t['\\u2F2D'] = '\\u5C71';\n t['\\u2F2E'] = '\\u5DDB';\n t['\\u2F2F'] = '\\u5DE5';\n t['\\u2F30'] = '\\u5DF1';\n t['\\u2F31'] = '\\u5DFE';\n t['\\u2F32'] = '\\u5E72';\n t['\\u2F33'] = '\\u5E7A';\n t['\\u2F34'] = '\\u5E7F';\n t['\\u2F35'] = '\\u5EF4';\n t['\\u2F36'] = '\\u5EFE';\n t['\\u2F37'] = '\\u5F0B';\n t['\\u2F38'] = '\\u5F13';\n t['\\u2F39'] = '\\u5F50';\n t['\\u2F3A'] = '\\u5F61';\n t['\\u2F3B'] = '\\u5F73';\n t['\\u2F3C'] = '\\u5FC3';\n t['\\u2F3D'] = '\\u6208';\n t['\\u2F3E'] = '\\u6236';\n t['\\u2F3F'] = '\\u624B';\n t['\\u2F40'] = '\\u652F';\n t['\\u2F41'] = '\\u6534';\n t['\\u2F42'] = '\\u6587';\n t['\\u2F43'] = '\\u6597';\n t['\\u2F44'] = '\\u65A4';\n t['\\u2F45'] = '\\u65B9';\n t['\\u2F46'] = '\\u65E0';\n t['\\u2F47'] = '\\u65E5';\n t['\\u2F48'] = '\\u66F0';\n t['\\u2F49'] = '\\u6708';\n t['\\u2F4A'] = '\\u6728';\n t['\\u2F4B'] = '\\u6B20';\n t['\\u2F4C'] = '\\u6B62';\n t['\\u2F4D'] = '\\u6B79';\n t['\\u2F4E'] = '\\u6BB3';\n t['\\u2F4F'] = '\\u6BCB';\n t['\\u2F50'] = '\\u6BD4';\n t['\\u2F51'] = '\\u6BDB';\n t['\\u2F52'] = '\\u6C0F';\n t['\\u2F53'] = '\\u6C14';\n t['\\u2F54'] = '\\u6C34';\n t['\\u2F55'] = '\\u706B';\n t['\\u2F56'] = '\\u722A';\n t['\\u2F57'] = '\\u7236';\n t['\\u2F58'] = '\\u723B';\n t['\\u2F59'] = '\\u723F';\n t['\\u2F5A'] = '\\u7247';\n t['\\u2F5B'] = '\\u7259';\n t['\\u2F5C'] = '\\u725B';\n t['\\u2F5D'] = '\\u72AC';\n t['\\u2F5E'] = '\\u7384';\n t['\\u2F5F'] = '\\u7389';\n t['\\u2F60'] = '\\u74DC';\n t['\\u2F61'] = '\\u74E6';\n t['\\u2F62'] = '\\u7518';\n t['\\u2F63'] = '\\u751F';\n t['\\u2F64'] = '\\u7528';\n t['\\u2F65'] = '\\u7530';\n t['\\u2F66'] = '\\u758B';\n t['\\u2F67'] = '\\u7592';\n t['\\u2F68'] = '\\u7676';\n t['\\u2F69'] = '\\u767D';\n t['\\u2F6A'] = '\\u76AE';\n t['\\u2F6B'] = '\\u76BF';\n t['\\u2F6C'] = '\\u76EE';\n t['\\u2F6D'] = '\\u77DB';\n t['\\u2F6E'] = '\\u77E2';\n t['\\u2F6F'] = '\\u77F3';\n t['\\u2F70'] = '\\u793A';\n t['\\u2F71'] = '\\u79B8';\n t['\\u2F72'] = '\\u79BE';\n t['\\u2F73'] = '\\u7A74';\n t['\\u2F74'] = '\\u7ACB';\n t['\\u2F75'] = '\\u7AF9';\n t['\\u2F76'] = '\\u7C73';\n t['\\u2F77'] = '\\u7CF8';\n t['\\u2F78'] = '\\u7F36';\n t['\\u2F79'] = '\\u7F51';\n t['\\u2F7A'] = '\\u7F8A';\n t['\\u2F7B'] = '\\u7FBD';\n t['\\u2F7C'] = '\\u8001';\n t['\\u2F7D'] = '\\u800C';\n t['\\u2F7E'] = '\\u8012';\n t['\\u2F7F'] = '\\u8033';\n t['\\u2F80'] = '\\u807F';\n t['\\u2F81'] = '\\u8089';\n t['\\u2F82'] = '\\u81E3';\n t['\\u2F83'] = '\\u81EA';\n t['\\u2F84'] = '\\u81F3';\n t['\\u2F85'] = '\\u81FC';\n t['\\u2F86'] = '\\u820C';\n t['\\u2F87'] = '\\u821B';\n t['\\u2F88'] = '\\u821F';\n t['\\u2F89'] = '\\u826E';\n t['\\u2F8A'] = '\\u8272';\n t['\\u2F8B'] = '\\u8278';\n t['\\u2F8C'] = '\\u864D';\n t['\\u2F8D'] = '\\u866B';\n t['\\u2F8E'] = '\\u8840';\n t['\\u2F8F'] = '\\u884C';\n t['\\u2F90'] = '\\u8863';\n t['\\u2F91'] = '\\u897E';\n t['\\u2F92'] = '\\u898B';\n t['\\u2F93'] = '\\u89D2';\n t['\\u2F94'] = '\\u8A00';\n t['\\u2F95'] = '\\u8C37';\n t['\\u2F96'] = '\\u8C46';\n t['\\u2F97'] = '\\u8C55';\n t['\\u2F98'] = '\\u8C78';\n t['\\u2F99'] = '\\u8C9D';\n t['\\u2F9A'] = '\\u8D64';\n t['\\u2F9B'] = '\\u8D70';\n t['\\u2F9C'] = '\\u8DB3';\n t['\\u2F9D'] = '\\u8EAB';\n t['\\u2F9E'] = '\\u8ECA';\n t['\\u2F9F'] = '\\u8F9B';\n t['\\u2FA0'] = '\\u8FB0';\n t['\\u2FA1'] = '\\u8FB5';\n t['\\u2FA2'] = '\\u9091';\n t['\\u2FA3'] = '\\u9149';\n t['\\u2FA4'] = '\\u91C6';\n t['\\u2FA5'] = '\\u91CC';\n t['\\u2FA6'] = '\\u91D1';\n t['\\u2FA7'] = '\\u9577';\n t['\\u2FA8'] = '\\u9580';\n t['\\u2FA9'] = '\\u961C';\n t['\\u2FAA'] = '\\u96B6';\n t['\\u2FAB'] = '\\u96B9';\n t['\\u2FAC'] = '\\u96E8';\n t['\\u2FAD'] = '\\u9751';\n t['\\u2FAE'] = '\\u975E';\n t['\\u2FAF'] = '\\u9762';\n t['\\u2FB0'] = '\\u9769';\n t['\\u2FB1'] = '\\u97CB';\n t['\\u2FB2'] = '\\u97ED';\n t['\\u2FB3'] = '\\u97F3';\n t['\\u2FB4'] = '\\u9801';\n t['\\u2FB5'] = '\\u98A8';\n t['\\u2FB6'] = '\\u98DB';\n t['\\u2FB7'] = '\\u98DF';\n t['\\u2FB8'] = '\\u9996';\n t['\\u2FB9'] = '\\u9999';\n t['\\u2FBA'] = '\\u99AC';\n t['\\u2FBB'] = '\\u9AA8';\n t['\\u2FBC'] = '\\u9AD8';\n t['\\u2FBD'] = '\\u9ADF';\n t['\\u2FBE'] = '\\u9B25';\n t['\\u2FBF'] = '\\u9B2F';\n t['\\u2FC0'] = '\\u9B32';\n t['\\u2FC1'] = '\\u9B3C';\n t['\\u2FC2'] = '\\u9B5A';\n t['\\u2FC3'] = '\\u9CE5';\n t['\\u2FC4'] = '\\u9E75';\n t['\\u2FC5'] = '\\u9E7F';\n t['\\u2FC6'] = '\\u9EA5';\n t['\\u2FC7'] = '\\u9EBB';\n t['\\u2FC8'] = '\\u9EC3';\n t['\\u2FC9'] = '\\u9ECD';\n t['\\u2FCA'] = '\\u9ED1';\n t['\\u2FCB'] = '\\u9EF9';\n t['\\u2FCC'] = '\\u9EFD';\n t['\\u2FCD'] = '\\u9F0E';\n t['\\u2FCE'] = '\\u9F13';\n t['\\u2FCF'] = '\\u9F20';\n t['\\u2FD0'] = '\\u9F3B';\n t['\\u2FD1'] = '\\u9F4A';\n t['\\u2FD2'] = '\\u9F52';\n t['\\u2FD3'] = '\\u9F8D';\n t['\\u2FD4'] = '\\u9F9C';\n t['\\u2FD5'] = '\\u9FA0';\n t['\\u3036'] = '\\u3012';\n t['\\u3038'] = '\\u5341';\n t['\\u3039'] = '\\u5344';\n t['\\u303A'] = '\\u5345';\n t['\\u309B'] = '\\u0020\\u3099';\n t['\\u309C'] = '\\u0020\\u309A';\n t['\\u3131'] = '\\u1100';\n t['\\u3132'] = '\\u1101';\n t['\\u3133'] = '\\u11AA';\n t['\\u3134'] = '\\u1102';\n t['\\u3135'] = '\\u11AC';\n t['\\u3136'] = '\\u11AD';\n t['\\u3137'] = '\\u1103';\n t['\\u3138'] = '\\u1104';\n t['\\u3139'] = '\\u1105';\n t['\\u313A'] = '\\u11B0';\n t['\\u313B'] = '\\u11B1';\n t['\\u313C'] = '\\u11B2';\n t['\\u313D'] = '\\u11B3';\n t['\\u313E'] = '\\u11B4';\n t['\\u313F'] = '\\u11B5';\n t['\\u3140'] = '\\u111A';\n t['\\u3141'] = '\\u1106';\n t['\\u3142'] = '\\u1107';\n t['\\u3143'] = '\\u1108';\n t['\\u3144'] = '\\u1121';\n t['\\u3145'] = '\\u1109';\n t['\\u3146'] = '\\u110A';\n t['\\u3147'] = '\\u110B';\n t['\\u3148'] = '\\u110C';\n t['\\u3149'] = '\\u110D';\n t['\\u314A'] = '\\u110E';\n t['\\u314B'] = '\\u110F';\n t['\\u314C'] = '\\u1110';\n t['\\u314D'] = '\\u1111';\n t['\\u314E'] = '\\u1112';\n t['\\u314F'] = '\\u1161';\n t['\\u3150'] = '\\u1162';\n t['\\u3151'] = '\\u1163';\n t['\\u3152'] = '\\u1164';\n t['\\u3153'] = '\\u1165';\n t['\\u3154'] = '\\u1166';\n t['\\u3155'] = '\\u1167';\n t['\\u3156'] = '\\u1168';\n t['\\u3157'] = '\\u1169';\n t['\\u3158'] = '\\u116A';\n t['\\u3159'] = '\\u116B';\n t['\\u315A'] = '\\u116C';\n t['\\u315B'] = '\\u116D';\n t['\\u315C'] = '\\u116E';\n t['\\u315D'] = '\\u116F';\n t['\\u315E'] = '\\u1170';\n t['\\u315F'] = '\\u1171';\n t['\\u3160'] = '\\u1172';\n t['\\u3161'] = '\\u1173';\n t['\\u3162'] = '\\u1174';\n t['\\u3163'] = '\\u1175';\n t['\\u3164'] = '\\u1160';\n t['\\u3165'] = '\\u1114';\n t['\\u3166'] = '\\u1115';\n t['\\u3167'] = '\\u11C7';\n t['\\u3168'] = '\\u11C8';\n t['\\u3169'] = '\\u11CC';\n t['\\u316A'] = '\\u11CE';\n t['\\u316B'] = '\\u11D3';\n t['\\u316C'] = '\\u11D7';\n t['\\u316D'] = '\\u11D9';\n t['\\u316E'] = '\\u111C';\n t['\\u316F'] = '\\u11DD';\n t['\\u3170'] = '\\u11DF';\n t['\\u3171'] = '\\u111D';\n t['\\u3172'] = '\\u111E';\n t['\\u3173'] = '\\u1120';\n t['\\u3174'] = '\\u1122';\n t['\\u3175'] = '\\u1123';\n t['\\u3176'] = '\\u1127';\n t['\\u3177'] = '\\u1129';\n t['\\u3178'] = '\\u112B';\n t['\\u3179'] = '\\u112C';\n t['\\u317A'] = '\\u112D';\n t['\\u317B'] = '\\u112E';\n t['\\u317C'] = '\\u112F';\n t['\\u317D'] = '\\u1132';\n t['\\u317E'] = '\\u1136';\n t['\\u317F'] = '\\u1140';\n t['\\u3180'] = '\\u1147';\n t['\\u3181'] = '\\u114C';\n t['\\u3182'] = '\\u11F1';\n t['\\u3183'] = '\\u11F2';\n t['\\u3184'] = '\\u1157';\n t['\\u3185'] = '\\u1158';\n t['\\u3186'] = '\\u1159';\n t['\\u3187'] = '\\u1184';\n t['\\u3188'] = '\\u1185';\n t['\\u3189'] = '\\u1188';\n t['\\u318A'] = '\\u1191';\n t['\\u318B'] = '\\u1192';\n t['\\u318C'] = '\\u1194';\n t['\\u318D'] = '\\u119E';\n t['\\u318E'] = '\\u11A1';\n t['\\u3200'] = '\\u0028\\u1100\\u0029';\n t['\\u3201'] = '\\u0028\\u1102\\u0029';\n t['\\u3202'] = '\\u0028\\u1103\\u0029';\n t['\\u3203'] = '\\u0028\\u1105\\u0029';\n t['\\u3204'] = '\\u0028\\u1106\\u0029';\n t['\\u3205'] = '\\u0028\\u1107\\u0029';\n t['\\u3206'] = '\\u0028\\u1109\\u0029';\n t['\\u3207'] = '\\u0028\\u110B\\u0029';\n t['\\u3208'] = '\\u0028\\u110C\\u0029';\n t['\\u3209'] = '\\u0028\\u110E\\u0029';\n t['\\u320A'] = '\\u0028\\u110F\\u0029';\n t['\\u320B'] = '\\u0028\\u1110\\u0029';\n t['\\u320C'] = '\\u0028\\u1111\\u0029';\n t['\\u320D'] = '\\u0028\\u1112\\u0029';\n t['\\u320E'] = '\\u0028\\u1100\\u1161\\u0029';\n t['\\u320F'] = '\\u0028\\u1102\\u1161\\u0029';\n t['\\u3210'] = '\\u0028\\u1103\\u1161\\u0029';\n t['\\u3211'] = '\\u0028\\u1105\\u1161\\u0029';\n t['\\u3212'] = '\\u0028\\u1106\\u1161\\u0029';\n t['\\u3213'] = '\\u0028\\u1107\\u1161\\u0029';\n t['\\u3214'] = '\\u0028\\u1109\\u1161\\u0029';\n t['\\u3215'] = '\\u0028\\u110B\\u1161\\u0029';\n t['\\u3216'] = '\\u0028\\u110C\\u1161\\u0029';\n t['\\u3217'] = '\\u0028\\u110E\\u1161\\u0029';\n t['\\u3218'] = '\\u0028\\u110F\\u1161\\u0029';\n t['\\u3219'] = '\\u0028\\u1110\\u1161\\u0029';\n t['\\u321A'] = '\\u0028\\u1111\\u1161\\u0029';\n t['\\u321B'] = '\\u0028\\u1112\\u1161\\u0029';\n t['\\u321C'] = '\\u0028\\u110C\\u116E\\u0029';\n t['\\u321D'] = '\\u0028\\u110B\\u1169\\u110C\\u1165\\u11AB\\u0029';\n t['\\u321E'] = '\\u0028\\u110B\\u1169\\u1112\\u116E\\u0029';\n t['\\u3220'] = '\\u0028\\u4E00\\u0029';\n t['\\u3221'] = '\\u0028\\u4E8C\\u0029';\n t['\\u3222'] = '\\u0028\\u4E09\\u0029';\n t['\\u3223'] = '\\u0028\\u56DB\\u0029';\n t['\\u3224'] = '\\u0028\\u4E94\\u0029';\n t['\\u3225'] = '\\u0028\\u516D\\u0029';\n t['\\u3226'] = '\\u0028\\u4E03\\u0029';\n t['\\u3227'] = '\\u0028\\u516B\\u0029';\n t['\\u3228'] = '\\u0028\\u4E5D\\u0029';\n t['\\u3229'] = '\\u0028\\u5341\\u0029';\n t['\\u322A'] = '\\u0028\\u6708\\u0029';\n t['\\u322B'] = '\\u0028\\u706B\\u0029';\n t['\\u322C'] = '\\u0028\\u6C34\\u0029';\n t['\\u322D'] = '\\u0028\\u6728\\u0029';\n t['\\u322E'] = '\\u0028\\u91D1\\u0029';\n t['\\u322F'] = '\\u0028\\u571F\\u0029';\n t['\\u3230'] = '\\u0028\\u65E5\\u0029';\n t['\\u3231'] = '\\u0028\\u682A\\u0029';\n t['\\u3232'] = '\\u0028\\u6709\\u0029';\n t['\\u3233'] = '\\u0028\\u793E\\u0029';\n t['\\u3234'] = '\\u0028\\u540D\\u0029';\n t['\\u3235'] = '\\u0028\\u7279\\u0029';\n t['\\u3236'] = '\\u0028\\u8CA1\\u0029';\n t['\\u3237'] = '\\u0028\\u795D\\u0029';\n t['\\u3238'] = '\\u0028\\u52B4\\u0029';\n t['\\u3239'] = '\\u0028\\u4EE3\\u0029';\n t['\\u323A'] = '\\u0028\\u547C\\u0029';\n t['\\u323B'] = '\\u0028\\u5B66\\u0029';\n t['\\u323C'] = '\\u0028\\u76E3\\u0029';\n t['\\u323D'] = '\\u0028\\u4F01\\u0029';\n t['\\u323E'] = '\\u0028\\u8CC7\\u0029';\n t['\\u323F'] = '\\u0028\\u5354\\u0029';\n t['\\u3240'] = '\\u0028\\u796D\\u0029';\n t['\\u3241'] = '\\u0028\\u4F11\\u0029';\n t['\\u3242'] = '\\u0028\\u81EA\\u0029';\n t['\\u3243'] = '\\u0028\\u81F3\\u0029';\n t['\\u32C0'] = '\\u0031\\u6708';\n t['\\u32C1'] = '\\u0032\\u6708';\n t['\\u32C2'] = '\\u0033\\u6708';\n t['\\u32C3'] = '\\u0034\\u6708';\n t['\\u32C4'] = '\\u0035\\u6708';\n t['\\u32C5'] = '\\u0036\\u6708';\n t['\\u32C6'] = '\\u0037\\u6708';\n t['\\u32C7'] = '\\u0038\\u6708';\n t['\\u32C8'] = '\\u0039\\u6708';\n t['\\u32C9'] = '\\u0031\\u0030\\u6708';\n t['\\u32CA'] = '\\u0031\\u0031\\u6708';\n t['\\u32CB'] = '\\u0031\\u0032\\u6708';\n t['\\u3358'] = '\\u0030\\u70B9';\n t['\\u3359'] = '\\u0031\\u70B9';\n t['\\u335A'] = '\\u0032\\u70B9';\n t['\\u335B'] = '\\u0033\\u70B9';\n t['\\u335C'] = '\\u0034\\u70B9';\n t['\\u335D'] = '\\u0035\\u70B9';\n t['\\u335E'] = '\\u0036\\u70B9';\n t['\\u335F'] = '\\u0037\\u70B9';\n t['\\u3360'] = '\\u0038\\u70B9';\n t['\\u3361'] = '\\u0039\\u70B9';\n t['\\u3362'] = '\\u0031\\u0030\\u70B9';\n t['\\u3363'] = '\\u0031\\u0031\\u70B9';\n t['\\u3364'] = '\\u0031\\u0032\\u70B9';\n t['\\u3365'] = '\\u0031\\u0033\\u70B9';\n t['\\u3366'] = '\\u0031\\u0034\\u70B9';\n t['\\u3367'] = '\\u0031\\u0035\\u70B9';\n t['\\u3368'] = '\\u0031\\u0036\\u70B9';\n t['\\u3369'] = '\\u0031\\u0037\\u70B9';\n t['\\u336A'] = '\\u0031\\u0038\\u70B9';\n t['\\u336B'] = '\\u0031\\u0039\\u70B9';\n t['\\u336C'] = '\\u0032\\u0030\\u70B9';\n t['\\u336D'] = '\\u0032\\u0031\\u70B9';\n t['\\u336E'] = '\\u0032\\u0032\\u70B9';\n t['\\u336F'] = '\\u0032\\u0033\\u70B9';\n t['\\u3370'] = '\\u0032\\u0034\\u70B9';\n t['\\u33E0'] = '\\u0031\\u65E5';\n t['\\u33E1'] = '\\u0032\\u65E5';\n t['\\u33E2'] = '\\u0033\\u65E5';\n t['\\u33E3'] = '\\u0034\\u65E5';\n t['\\u33E4'] = '\\u0035\\u65E5';\n t['\\u33E5'] = '\\u0036\\u65E5';\n t['\\u33E6'] = '\\u0037\\u65E5';\n t['\\u33E7'] = '\\u0038\\u65E5';\n t['\\u33E8'] = '\\u0039\\u65E5';\n t['\\u33E9'] = '\\u0031\\u0030\\u65E5';\n t['\\u33EA'] = '\\u0031\\u0031\\u65E5';\n t['\\u33EB'] = '\\u0031\\u0032\\u65E5';\n t['\\u33EC'] = '\\u0031\\u0033\\u65E5';\n t['\\u33ED'] = '\\u0031\\u0034\\u65E5';\n t['\\u33EE'] = '\\u0031\\u0035\\u65E5';\n t['\\u33EF'] = '\\u0031\\u0036\\u65E5';\n t['\\u33F0'] = '\\u0031\\u0037\\u65E5';\n t['\\u33F1'] = '\\u0031\\u0038\\u65E5';\n t['\\u33F2'] = '\\u0031\\u0039\\u65E5';\n t['\\u33F3'] = '\\u0032\\u0030\\u65E5';\n t['\\u33F4'] = '\\u0032\\u0031\\u65E5';\n t['\\u33F5'] = '\\u0032\\u0032\\u65E5';\n t['\\u33F6'] = '\\u0032\\u0033\\u65E5';\n t['\\u33F7'] = '\\u0032\\u0034\\u65E5';\n t['\\u33F8'] = '\\u0032\\u0035\\u65E5';\n t['\\u33F9'] = '\\u0032\\u0036\\u65E5';\n t['\\u33FA'] = '\\u0032\\u0037\\u65E5';\n t['\\u33FB'] = '\\u0032\\u0038\\u65E5';\n t['\\u33FC'] = '\\u0032\\u0039\\u65E5';\n t['\\u33FD'] = '\\u0033\\u0030\\u65E5';\n t['\\u33FE'] = '\\u0033\\u0031\\u65E5';\n t['\\uFB00'] = '\\u0066\\u0066';\n t['\\uFB01'] = '\\u0066\\u0069';\n t['\\uFB02'] = '\\u0066\\u006C';\n t['\\uFB03'] = '\\u0066\\u0066\\u0069';\n t['\\uFB04'] = '\\u0066\\u0066\\u006C';\n t['\\uFB05'] = '\\u017F\\u0074';\n t['\\uFB06'] = '\\u0073\\u0074';\n t['\\uFB13'] = '\\u0574\\u0576';\n t['\\uFB14'] = '\\u0574\\u0565';\n t['\\uFB15'] = '\\u0574\\u056B';\n t['\\uFB16'] = '\\u057E\\u0576';\n t['\\uFB17'] = '\\u0574\\u056D';\n t['\\uFB4F'] = '\\u05D0\\u05DC';\n t['\\uFB50'] = '\\u0671';\n t['\\uFB51'] = '\\u0671';\n t['\\uFB52'] = '\\u067B';\n t['\\uFB53'] = '\\u067B';\n t['\\uFB54'] = '\\u067B';\n t['\\uFB55'] = '\\u067B';\n t['\\uFB56'] = '\\u067E';\n t['\\uFB57'] = '\\u067E';\n t['\\uFB58'] = '\\u067E';\n t['\\uFB59'] = '\\u067E';\n t['\\uFB5A'] = '\\u0680';\n t['\\uFB5B'] = '\\u0680';\n t['\\uFB5C'] = '\\u0680';\n t['\\uFB5D'] = '\\u0680';\n t['\\uFB5E'] = '\\u067A';\n t['\\uFB5F'] = '\\u067A';\n t['\\uFB60'] = '\\u067A';\n t['\\uFB61'] = '\\u067A';\n t['\\uFB62'] = '\\u067F';\n t['\\uFB63'] = '\\u067F';\n t['\\uFB64'] = '\\u067F';\n t['\\uFB65'] = '\\u067F';\n t['\\uFB66'] = '\\u0679';\n t['\\uFB67'] = '\\u0679';\n t['\\uFB68'] = '\\u0679';\n t['\\uFB69'] = '\\u0679';\n t['\\uFB6A'] = '\\u06A4';\n t['\\uFB6B'] = '\\u06A4';\n t['\\uFB6C'] = '\\u06A4';\n t['\\uFB6D'] = '\\u06A4';\n t['\\uFB6E'] = '\\u06A6';\n t['\\uFB6F'] = '\\u06A6';\n t['\\uFB70'] = '\\u06A6';\n t['\\uFB71'] = '\\u06A6';\n t['\\uFB72'] = '\\u0684';\n t['\\uFB73'] = '\\u0684';\n t['\\uFB74'] = '\\u0684';\n t['\\uFB75'] = '\\u0684';\n t['\\uFB76'] = '\\u0683';\n t['\\uFB77'] = '\\u0683';\n t['\\uFB78'] = '\\u0683';\n t['\\uFB79'] = '\\u0683';\n t['\\uFB7A'] = '\\u0686';\n t['\\uFB7B'] = '\\u0686';\n t['\\uFB7C'] = '\\u0686';\n t['\\uFB7D'] = '\\u0686';\n t['\\uFB7E'] = '\\u0687';\n t['\\uFB7F'] = '\\u0687';\n t['\\uFB80'] = '\\u0687';\n t['\\uFB81'] = '\\u0687';\n t['\\uFB82'] = '\\u068D';\n t['\\uFB83'] = '\\u068D';\n t['\\uFB84'] = '\\u068C';\n t['\\uFB85'] = '\\u068C';\n t['\\uFB86'] = '\\u068E';\n t['\\uFB87'] = '\\u068E';\n t['\\uFB88'] = '\\u0688';\n t['\\uFB89'] = '\\u0688';\n t['\\uFB8A'] = '\\u0698';\n t['\\uFB8B'] = '\\u0698';\n t['\\uFB8C'] = '\\u0691';\n t['\\uFB8D'] = '\\u0691';\n t['\\uFB8E'] = '\\u06A9';\n t['\\uFB8F'] = '\\u06A9';\n t['\\uFB90'] = '\\u06A9';\n t['\\uFB91'] = '\\u06A9';\n t['\\uFB92'] = '\\u06AF';\n t['\\uFB93'] = '\\u06AF';\n t['\\uFB94'] = '\\u06AF';\n t['\\uFB95'] = '\\u06AF';\n t['\\uFB96'] = '\\u06B3';\n t['\\uFB97'] = '\\u06B3';\n t['\\uFB98'] = '\\u06B3';\n t['\\uFB99'] = '\\u06B3';\n t['\\uFB9A'] = '\\u06B1';\n t['\\uFB9B'] = '\\u06B1';\n t['\\uFB9C'] = '\\u06B1';\n t['\\uFB9D'] = '\\u06B1';\n t['\\uFB9E'] = '\\u06BA';\n t['\\uFB9F'] = '\\u06BA';\n t['\\uFBA0'] = '\\u06BB';\n t['\\uFBA1'] = '\\u06BB';\n t['\\uFBA2'] = '\\u06BB';\n t['\\uFBA3'] = '\\u06BB';\n t['\\uFBA4'] = '\\u06C0';\n t['\\uFBA5'] = '\\u06C0';\n t['\\uFBA6'] = '\\u06C1';\n t['\\uFBA7'] = '\\u06C1';\n t['\\uFBA8'] = '\\u06C1';\n t['\\uFBA9'] = '\\u06C1';\n t['\\uFBAA'] = '\\u06BE';\n t['\\uFBAB'] = '\\u06BE';\n t['\\uFBAC'] = '\\u06BE';\n t['\\uFBAD'] = '\\u06BE';\n t['\\uFBAE'] = '\\u06D2';\n t['\\uFBAF'] = '\\u06D2';\n t['\\uFBB0'] = '\\u06D3';\n t['\\uFBB1'] = '\\u06D3';\n t['\\uFBD3'] = '\\u06AD';\n t['\\uFBD4'] = '\\u06AD';\n t['\\uFBD5'] = '\\u06AD';\n t['\\uFBD6'] = '\\u06AD';\n t['\\uFBD7'] = '\\u06C7';\n t['\\uFBD8'] = '\\u06C7';\n t['\\uFBD9'] = '\\u06C6';\n t['\\uFBDA'] = '\\u06C6';\n t['\\uFBDB'] = '\\u06C8';\n t['\\uFBDC'] = '\\u06C8';\n t['\\uFBDD'] = '\\u0677';\n t['\\uFBDE'] = '\\u06CB';\n t['\\uFBDF'] = '\\u06CB';\n t['\\uFBE0'] = '\\u06C5';\n t['\\uFBE1'] = '\\u06C5';\n t['\\uFBE2'] = '\\u06C9';\n t['\\uFBE3'] = '\\u06C9';\n t['\\uFBE4'] = '\\u06D0';\n t['\\uFBE5'] = '\\u06D0';\n t['\\uFBE6'] = '\\u06D0';\n t['\\uFBE7'] = '\\u06D0';\n t['\\uFBE8'] = '\\u0649';\n t['\\uFBE9'] = '\\u0649';\n t['\\uFBEA'] = '\\u0626\\u0627';\n t['\\uFBEB'] = '\\u0626\\u0627';\n t['\\uFBEC'] = '\\u0626\\u06D5';\n t['\\uFBED'] = '\\u0626\\u06D5';\n t['\\uFBEE'] = '\\u0626\\u0648';\n t['\\uFBEF'] = '\\u0626\\u0648';\n t['\\uFBF0'] = '\\u0626\\u06C7';\n t['\\uFBF1'] = '\\u0626\\u06C7';\n t['\\uFBF2'] = '\\u0626\\u06C6';\n t['\\uFBF3'] = '\\u0626\\u06C6';\n t['\\uFBF4'] = '\\u0626\\u06C8';\n t['\\uFBF5'] = '\\u0626\\u06C8';\n t['\\uFBF6'] = '\\u0626\\u06D0';\n t['\\uFBF7'] = '\\u0626\\u06D0';\n t['\\uFBF8'] = '\\u0626\\u06D0';\n t['\\uFBF9'] = '\\u0626\\u0649';\n t['\\uFBFA'] = '\\u0626\\u0649';\n t['\\uFBFB'] = '\\u0626\\u0649';\n t['\\uFBFC'] = '\\u06CC';\n t['\\uFBFD'] = '\\u06CC';\n t['\\uFBFE'] = '\\u06CC';\n t['\\uFBFF'] = '\\u06CC';\n t['\\uFC00'] = '\\u0626\\u062C';\n t['\\uFC01'] = '\\u0626\\u062D';\n t['\\uFC02'] = '\\u0626\\u0645';\n t['\\uFC03'] = '\\u0626\\u0649';\n t['\\uFC04'] = '\\u0626\\u064A';\n t['\\uFC05'] = '\\u0628\\u062C';\n t['\\uFC06'] = '\\u0628\\u062D';\n t['\\uFC07'] = '\\u0628\\u062E';\n t['\\uFC08'] = '\\u0628\\u0645';\n t['\\uFC09'] = '\\u0628\\u0649';\n t['\\uFC0A'] = '\\u0628\\u064A';\n t['\\uFC0B'] = '\\u062A\\u062C';\n t['\\uFC0C'] = '\\u062A\\u062D';\n t['\\uFC0D'] = '\\u062A\\u062E';\n t['\\uFC0E'] = '\\u062A\\u0645';\n t['\\uFC0F'] = '\\u062A\\u0649';\n t['\\uFC10'] = '\\u062A\\u064A';\n t['\\uFC11'] = '\\u062B\\u062C';\n t['\\uFC12'] = '\\u062B\\u0645';\n t['\\uFC13'] = '\\u062B\\u0649';\n t['\\uFC14'] = '\\u062B\\u064A';\n t['\\uFC15'] = '\\u062C\\u062D';\n t['\\uFC16'] = '\\u062C\\u0645';\n t['\\uFC17'] = '\\u062D\\u062C';\n t['\\uFC18'] = '\\u062D\\u0645';\n t['\\uFC19'] = '\\u062E\\u062C';\n t['\\uFC1A'] = '\\u062E\\u062D';\n t['\\uFC1B'] = '\\u062E\\u0645';\n t['\\uFC1C'] = '\\u0633\\u062C';\n t['\\uFC1D'] = '\\u0633\\u062D';\n t['\\uFC1E'] = '\\u0633\\u062E';\n t['\\uFC1F'] = '\\u0633\\u0645';\n t['\\uFC20'] = '\\u0635\\u062D';\n t['\\uFC21'] = '\\u0635\\u0645';\n t['\\uFC22'] = '\\u0636\\u062C';\n t['\\uFC23'] = '\\u0636\\u062D';\n t['\\uFC24'] = '\\u0636\\u062E';\n t['\\uFC25'] = '\\u0636\\u0645';\n t['\\uFC26'] = '\\u0637\\u062D';\n t['\\uFC27'] = '\\u0637\\u0645';\n t['\\uFC28'] = '\\u0638\\u0645';\n t['\\uFC29'] = '\\u0639\\u062C';\n t['\\uFC2A'] = '\\u0639\\u0645';\n t['\\uFC2B'] = '\\u063A\\u062C';\n t['\\uFC2C'] = '\\u063A\\u0645';\n t['\\uFC2D'] = '\\u0641\\u062C';\n t['\\uFC2E'] = '\\u0641\\u062D';\n t['\\uFC2F'] = '\\u0641\\u062E';\n t['\\uFC30'] = '\\u0641\\u0645';\n t['\\uFC31'] = '\\u0641\\u0649';\n t['\\uFC32'] = '\\u0641\\u064A';\n t['\\uFC33'] = '\\u0642\\u062D';\n t['\\uFC34'] = '\\u0642\\u0645';\n t['\\uFC35'] = '\\u0642\\u0649';\n t['\\uFC36'] = '\\u0642\\u064A';\n t['\\uFC37'] = '\\u0643\\u0627';\n t['\\uFC38'] = '\\u0643\\u062C';\n t['\\uFC39'] = '\\u0643\\u062D';\n t['\\uFC3A'] = '\\u0643\\u062E';\n t['\\uFC3B'] = '\\u0643\\u0644';\n t['\\uFC3C'] = '\\u0643\\u0645';\n t['\\uFC3D'] = '\\u0643\\u0649';\n t['\\uFC3E'] = '\\u0643\\u064A';\n t['\\uFC3F'] = '\\u0644\\u062C';\n t['\\uFC40'] = '\\u0644\\u062D';\n t['\\uFC41'] = '\\u0644\\u062E';\n t['\\uFC42'] = '\\u0644\\u0645';\n t['\\uFC43'] = '\\u0644\\u0649';\n t['\\uFC44'] = '\\u0644\\u064A';\n t['\\uFC45'] = '\\u0645\\u062C';\n t['\\uFC46'] = '\\u0645\\u062D';\n t['\\uFC47'] = '\\u0645\\u062E';\n t['\\uFC48'] = '\\u0645\\u0645';\n t['\\uFC49'] = '\\u0645\\u0649';\n t['\\uFC4A'] = '\\u0645\\u064A';\n t['\\uFC4B'] = '\\u0646\\u062C';\n t['\\uFC4C'] = '\\u0646\\u062D';\n t['\\uFC4D'] = '\\u0646\\u062E';\n t['\\uFC4E'] = '\\u0646\\u0645';\n t['\\uFC4F'] = '\\u0646\\u0649';\n t['\\uFC50'] = '\\u0646\\u064A';\n t['\\uFC51'] = '\\u0647\\u062C';\n t['\\uFC52'] = '\\u0647\\u0645';\n t['\\uFC53'] = '\\u0647\\u0649';\n t['\\uFC54'] = '\\u0647\\u064A';\n t['\\uFC55'] = '\\u064A\\u062C';\n t['\\uFC56'] = '\\u064A\\u062D';\n t['\\uFC57'] = '\\u064A\\u062E';\n t['\\uFC58'] = '\\u064A\\u0645';\n t['\\uFC59'] = '\\u064A\\u0649';\n t['\\uFC5A'] = '\\u064A\\u064A';\n t['\\uFC5B'] = '\\u0630\\u0670';\n t['\\uFC5C'] = '\\u0631\\u0670';\n t['\\uFC5D'] = '\\u0649\\u0670';\n t['\\uFC5E'] = '\\u0020\\u064C\\u0651';\n t['\\uFC5F'] = '\\u0020\\u064D\\u0651';\n t['\\uFC60'] = '\\u0020\\u064E\\u0651';\n t['\\uFC61'] = '\\u0020\\u064F\\u0651';\n t['\\uFC62'] = '\\u0020\\u0650\\u0651';\n t['\\uFC63'] = '\\u0020\\u0651\\u0670';\n t['\\uFC64'] = '\\u0626\\u0631';\n t['\\uFC65'] = '\\u0626\\u0632';\n t['\\uFC66'] = '\\u0626\\u0645';\n t['\\uFC67'] = '\\u0626\\u0646';\n t['\\uFC68'] = '\\u0626\\u0649';\n t['\\uFC69'] = '\\u0626\\u064A';\n t['\\uFC6A'] = '\\u0628\\u0631';\n t['\\uFC6B'] = '\\u0628\\u0632';\n t['\\uFC6C'] = '\\u0628\\u0645';\n t['\\uFC6D'] = '\\u0628\\u0646';\n t['\\uFC6E'] = '\\u0628\\u0649';\n t['\\uFC6F'] = '\\u0628\\u064A';\n t['\\uFC70'] = '\\u062A\\u0631';\n t['\\uFC71'] = '\\u062A\\u0632';\n t['\\uFC72'] = '\\u062A\\u0645';\n t['\\uFC73'] = '\\u062A\\u0646';\n t['\\uFC74'] = '\\u062A\\u0649';\n t['\\uFC75'] = '\\u062A\\u064A';\n t['\\uFC76'] = '\\u062B\\u0631';\n t['\\uFC77'] = '\\u062B\\u0632';\n t['\\uFC78'] = '\\u062B\\u0645';\n t['\\uFC79'] = '\\u062B\\u0646';\n t['\\uFC7A'] = '\\u062B\\u0649';\n t['\\uFC7B'] = '\\u062B\\u064A';\n t['\\uFC7C'] = '\\u0641\\u0649';\n t['\\uFC7D'] = '\\u0641\\u064A';\n t['\\uFC7E'] = '\\u0642\\u0649';\n t['\\uFC7F'] = '\\u0642\\u064A';\n t['\\uFC80'] = '\\u0643\\u0627';\n t['\\uFC81'] = '\\u0643\\u0644';\n t['\\uFC82'] = '\\u0643\\u0645';\n t['\\uFC83'] = '\\u0643\\u0649';\n t['\\uFC84'] = '\\u0643\\u064A';\n t['\\uFC85'] = '\\u0644\\u0645';\n t['\\uFC86'] = '\\u0644\\u0649';\n t['\\uFC87'] = '\\u0644\\u064A';\n t['\\uFC88'] = '\\u0645\\u0627';\n t['\\uFC89'] = '\\u0645\\u0645';\n t['\\uFC8A'] = '\\u0646\\u0631';\n t['\\uFC8B'] = '\\u0646\\u0632';\n t['\\uFC8C'] = '\\u0646\\u0645';\n t['\\uFC8D'] = '\\u0646\\u0646';\n t['\\uFC8E'] = '\\u0646\\u0649';\n t['\\uFC8F'] = '\\u0646\\u064A';\n t['\\uFC90'] = '\\u0649\\u0670';\n t['\\uFC91'] = '\\u064A\\u0631';\n t['\\uFC92'] = '\\u064A\\u0632';\n t['\\uFC93'] = '\\u064A\\u0645';\n t['\\uFC94'] = '\\u064A\\u0646';\n t['\\uFC95'] = '\\u064A\\u0649';\n t['\\uFC96'] = '\\u064A\\u064A';\n t['\\uFC97'] = '\\u0626\\u062C';\n t['\\uFC98'] = '\\u0626\\u062D';\n t['\\uFC99'] = '\\u0626\\u062E';\n t['\\uFC9A'] = '\\u0626\\u0645';\n t['\\uFC9B'] = '\\u0626\\u0647';\n t['\\uFC9C'] = '\\u0628\\u062C';\n t['\\uFC9D'] = '\\u0628\\u062D';\n t['\\uFC9E'] = '\\u0628\\u062E';\n t['\\uFC9F'] = '\\u0628\\u0645';\n t['\\uFCA0'] = '\\u0628\\u0647';\n t['\\uFCA1'] = '\\u062A\\u062C';\n t['\\uFCA2'] = '\\u062A\\u062D';\n t['\\uFCA3'] = '\\u062A\\u062E';\n t['\\uFCA4'] = '\\u062A\\u0645';\n t['\\uFCA5'] = '\\u062A\\u0647';\n t['\\uFCA6'] = '\\u062B\\u0645';\n t['\\uFCA7'] = '\\u062C\\u062D';\n t['\\uFCA8'] = '\\u062C\\u0645';\n t['\\uFCA9'] = '\\u062D\\u062C';\n t['\\uFCAA'] = '\\u062D\\u0645';\n t['\\uFCAB'] = '\\u062E\\u062C';\n t['\\uFCAC'] = '\\u062E\\u0645';\n t['\\uFCAD'] = '\\u0633\\u062C';\n t['\\uFCAE'] = '\\u0633\\u062D';\n t['\\uFCAF'] = '\\u0633\\u062E';\n t['\\uFCB0'] = '\\u0633\\u0645';\n t['\\uFCB1'] = '\\u0635\\u062D';\n t['\\uFCB2'] = '\\u0635\\u062E';\n t['\\uFCB3'] = '\\u0635\\u0645';\n t['\\uFCB4'] = '\\u0636\\u062C';\n t['\\uFCB5'] = '\\u0636\\u062D';\n t['\\uFCB6'] = '\\u0636\\u062E';\n t['\\uFCB7'] = '\\u0636\\u0645';\n t['\\uFCB8'] = '\\u0637\\u062D';\n t['\\uFCB9'] = '\\u0638\\u0645';\n t['\\uFCBA'] = '\\u0639\\u062C';\n t['\\uFCBB'] = '\\u0639\\u0645';\n t['\\uFCBC'] = '\\u063A\\u062C';\n t['\\uFCBD'] = '\\u063A\\u0645';\n t['\\uFCBE'] = '\\u0641\\u062C';\n t['\\uFCBF'] = '\\u0641\\u062D';\n t['\\uFCC0'] = '\\u0641\\u062E';\n t['\\uFCC1'] = '\\u0641\\u0645';\n t['\\uFCC2'] = '\\u0642\\u062D';\n t['\\uFCC3'] = '\\u0642\\u0645';\n t['\\uFCC4'] = '\\u0643\\u062C';\n t['\\uFCC5'] = '\\u0643\\u062D';\n t['\\uFCC6'] = '\\u0643\\u062E';\n t['\\uFCC7'] = '\\u0643\\u0644';\n t['\\uFCC8'] = '\\u0643\\u0645';\n t['\\uFCC9'] = '\\u0644\\u062C';\n t['\\uFCCA'] = '\\u0644\\u062D';\n t['\\uFCCB'] = '\\u0644\\u062E';\n t['\\uFCCC'] = '\\u0644\\u0645';\n t['\\uFCCD'] = '\\u0644\\u0647';\n t['\\uFCCE'] = '\\u0645\\u062C';\n t['\\uFCCF'] = '\\u0645\\u062D';\n t['\\uFCD0'] = '\\u0645\\u062E';\n t['\\uFCD1'] = '\\u0645\\u0645';\n t['\\uFCD2'] = '\\u0646\\u062C';\n t['\\uFCD3'] = '\\u0646\\u062D';\n t['\\uFCD4'] = '\\u0646\\u062E';\n t['\\uFCD5'] = '\\u0646\\u0645';\n t['\\uFCD6'] = '\\u0646\\u0647';\n t['\\uFCD7'] = '\\u0647\\u062C';\n t['\\uFCD8'] = '\\u0647\\u0645';\n t['\\uFCD9'] = '\\u0647\\u0670';\n t['\\uFCDA'] = '\\u064A\\u062C';\n t['\\uFCDB'] = '\\u064A\\u062D';\n t['\\uFCDC'] = '\\u064A\\u062E';\n t['\\uFCDD'] = '\\u064A\\u0645';\n t['\\uFCDE'] = '\\u064A\\u0647';\n t['\\uFCDF'] = '\\u0626\\u0645';\n t['\\uFCE0'] = '\\u0626\\u0647';\n t['\\uFCE1'] = '\\u0628\\u0645';\n t['\\uFCE2'] = '\\u0628\\u0647';\n t['\\uFCE3'] = '\\u062A\\u0645';\n t['\\uFCE4'] = '\\u062A\\u0647';\n t['\\uFCE5'] = '\\u062B\\u0645';\n t['\\uFCE6'] = '\\u062B\\u0647';\n t['\\uFCE7'] = '\\u0633\\u0645';\n t['\\uFCE8'] = '\\u0633\\u0647';\n t['\\uFCE9'] = '\\u0634\\u0645';\n t['\\uFCEA'] = '\\u0634\\u0647';\n t['\\uFCEB'] = '\\u0643\\u0644';\n t['\\uFCEC'] = '\\u0643\\u0645';\n t['\\uFCED'] = '\\u0644\\u0645';\n t['\\uFCEE'] = '\\u0646\\u0645';\n t['\\uFCEF'] = '\\u0646\\u0647';\n t['\\uFCF0'] = '\\u064A\\u0645';\n t['\\uFCF1'] = '\\u064A\\u0647';\n t['\\uFCF2'] = '\\u0640\\u064E\\u0651';\n t['\\uFCF3'] = '\\u0640\\u064F\\u0651';\n t['\\uFCF4'] = '\\u0640\\u0650\\u0651';\n t['\\uFCF5'] = '\\u0637\\u0649';\n t['\\uFCF6'] = '\\u0637\\u064A';\n t['\\uFCF7'] = '\\u0639\\u0649';\n t['\\uFCF8'] = '\\u0639\\u064A';\n t['\\uFCF9'] = '\\u063A\\u0649';\n t['\\uFCFA'] = '\\u063A\\u064A';\n t['\\uFCFB'] = '\\u0633\\u0649';\n t['\\uFCFC'] = '\\u0633\\u064A';\n t['\\uFCFD'] = '\\u0634\\u0649';\n t['\\uFCFE'] = '\\u0634\\u064A';\n t['\\uFCFF'] = '\\u062D\\u0649';\n t['\\uFD00'] = '\\u062D\\u064A';\n t['\\uFD01'] = '\\u062C\\u0649';\n t['\\uFD02'] = '\\u062C\\u064A';\n t['\\uFD03'] = '\\u062E\\u0649';\n t['\\uFD04'] = '\\u062E\\u064A';\n t['\\uFD05'] = '\\u0635\\u0649';\n t['\\uFD06'] = '\\u0635\\u064A';\n t['\\uFD07'] = '\\u0636\\u0649';\n t['\\uFD08'] = '\\u0636\\u064A';\n t['\\uFD09'] = '\\u0634\\u062C';\n t['\\uFD0A'] = '\\u0634\\u062D';\n t['\\uFD0B'] = '\\u0634\\u062E';\n t['\\uFD0C'] = '\\u0634\\u0645';\n t['\\uFD0D'] = '\\u0634\\u0631';\n t['\\uFD0E'] = '\\u0633\\u0631';\n t['\\uFD0F'] = '\\u0635\\u0631';\n t['\\uFD10'] = '\\u0636\\u0631';\n t['\\uFD11'] = '\\u0637\\u0649';\n t['\\uFD12'] = '\\u0637\\u064A';\n t['\\uFD13'] = '\\u0639\\u0649';\n t['\\uFD14'] = '\\u0639\\u064A';\n t['\\uFD15'] = '\\u063A\\u0649';\n t['\\uFD16'] = '\\u063A\\u064A';\n t['\\uFD17'] = '\\u0633\\u0649';\n t['\\uFD18'] = '\\u0633\\u064A';\n t['\\uFD19'] = '\\u0634\\u0649';\n t['\\uFD1A'] = '\\u0634\\u064A';\n t['\\uFD1B'] = '\\u062D\\u0649';\n t['\\uFD1C'] = '\\u062D\\u064A';\n t['\\uFD1D'] = '\\u062C\\u0649';\n t['\\uFD1E'] = '\\u062C\\u064A';\n t['\\uFD1F'] = '\\u062E\\u0649';\n t['\\uFD20'] = '\\u062E\\u064A';\n t['\\uFD21'] = '\\u0635\\u0649';\n t['\\uFD22'] = '\\u0635\\u064A';\n t['\\uFD23'] = '\\u0636\\u0649';\n t['\\uFD24'] = '\\u0636\\u064A';\n t['\\uFD25'] = '\\u0634\\u062C';\n t['\\uFD26'] = '\\u0634\\u062D';\n t['\\uFD27'] = '\\u0634\\u062E';\n t['\\uFD28'] = '\\u0634\\u0645';\n t['\\uFD29'] = '\\u0634\\u0631';\n t['\\uFD2A'] = '\\u0633\\u0631';\n t['\\uFD2B'] = '\\u0635\\u0631';\n t['\\uFD2C'] = '\\u0636\\u0631';\n t['\\uFD2D'] = '\\u0634\\u062C';\n t['\\uFD2E'] = '\\u0634\\u062D';\n t['\\uFD2F'] = '\\u0634\\u062E';\n t['\\uFD30'] = '\\u0634\\u0645';\n t['\\uFD31'] = '\\u0633\\u0647';\n t['\\uFD32'] = '\\u0634\\u0647';\n t['\\uFD33'] = '\\u0637\\u0645';\n t['\\uFD34'] = '\\u0633\\u062C';\n t['\\uFD35'] = '\\u0633\\u062D';\n t['\\uFD36'] = '\\u0633\\u062E';\n t['\\uFD37'] = '\\u0634\\u062C';\n t['\\uFD38'] = '\\u0634\\u062D';\n t['\\uFD39'] = '\\u0634\\u062E';\n t['\\uFD3A'] = '\\u0637\\u0645';\n t['\\uFD3B'] = '\\u0638\\u0645';\n t['\\uFD3C'] = '\\u0627\\u064B';\n t['\\uFD3D'] = '\\u0627\\u064B';\n t['\\uFD50'] = '\\u062A\\u062C\\u0645';\n t['\\uFD51'] = '\\u062A\\u062D\\u062C';\n t['\\uFD52'] = '\\u062A\\u062D\\u062C';\n t['\\uFD53'] = '\\u062A\\u062D\\u0645';\n t['\\uFD54'] = '\\u062A\\u062E\\u0645';\n t['\\uFD55'] = '\\u062A\\u0645\\u062C';\n t['\\uFD56'] = '\\u062A\\u0645\\u062D';\n t['\\uFD57'] = '\\u062A\\u0645\\u062E';\n t['\\uFD58'] = '\\u062C\\u0645\\u062D';\n t['\\uFD59'] = '\\u062C\\u0645\\u062D';\n t['\\uFD5A'] = '\\u062D\\u0645\\u064A';\n t['\\uFD5B'] = '\\u062D\\u0645\\u0649';\n t['\\uFD5C'] = '\\u0633\\u062D\\u062C';\n t['\\uFD5D'] = '\\u0633\\u062C\\u062D';\n t['\\uFD5E'] = '\\u0633\\u062C\\u0649';\n t['\\uFD5F'] = '\\u0633\\u0645\\u062D';\n t['\\uFD60'] = '\\u0633\\u0645\\u062D';\n t['\\uFD61'] = '\\u0633\\u0645\\u062C';\n t['\\uFD62'] = '\\u0633\\u0645\\u0645';\n t['\\uFD63'] = '\\u0633\\u0645\\u0645';\n t['\\uFD64'] = '\\u0635\\u062D\\u062D';\n t['\\uFD65'] = '\\u0635\\u062D\\u062D';\n t['\\uFD66'] = '\\u0635\\u0645\\u0645';\n t['\\uFD67'] = '\\u0634\\u062D\\u0645';\n t['\\uFD68'] = '\\u0634\\u062D\\u0645';\n t['\\uFD69'] = '\\u0634\\u062C\\u064A';\n t['\\uFD6A'] = '\\u0634\\u0645\\u062E';\n t['\\uFD6B'] = '\\u0634\\u0645\\u062E';\n t['\\uFD6C'] = '\\u0634\\u0645\\u0645';\n t['\\uFD6D'] = '\\u0634\\u0645\\u0645';\n t['\\uFD6E'] = '\\u0636\\u062D\\u0649';\n t['\\uFD6F'] = '\\u0636\\u062E\\u0645';\n t['\\uFD70'] = '\\u0636\\u062E\\u0645';\n t['\\uFD71'] = '\\u0637\\u0645\\u062D';\n t['\\uFD72'] = '\\u0637\\u0645\\u062D';\n t['\\uFD73'] = '\\u0637\\u0645\\u0645';\n t['\\uFD74'] = '\\u0637\\u0645\\u064A';\n t['\\uFD75'] = '\\u0639\\u062C\\u0645';\n t['\\uFD76'] = '\\u0639\\u0645\\u0645';\n t['\\uFD77'] = '\\u0639\\u0645\\u0645';\n t['\\uFD78'] = '\\u0639\\u0645\\u0649';\n t['\\uFD79'] = '\\u063A\\u0645\\u0645';\n t['\\uFD7A'] = '\\u063A\\u0645\\u064A';\n t['\\uFD7B'] = '\\u063A\\u0645\\u0649';\n t['\\uFD7C'] = '\\u0641\\u062E\\u0645';\n t['\\uFD7D'] = '\\u0641\\u062E\\u0645';\n t['\\uFD7E'] = '\\u0642\\u0645\\u062D';\n t['\\uFD7F'] = '\\u0642\\u0645\\u0645';\n t['\\uFD80'] = '\\u0644\\u062D\\u0645';\n t['\\uFD81'] = '\\u0644\\u062D\\u064A';\n t['\\uFD82'] = '\\u0644\\u062D\\u0649';\n t['\\uFD83'] = '\\u0644\\u062C\\u062C';\n t['\\uFD84'] = '\\u0644\\u062C\\u062C';\n t['\\uFD85'] = '\\u0644\\u062E\\u0645';\n t['\\uFD86'] = '\\u0644\\u062E\\u0645';\n t['\\uFD87'] = '\\u0644\\u0645\\u062D';\n t['\\uFD88'] = '\\u0644\\u0645\\u062D';\n t['\\uFD89'] = '\\u0645\\u062D\\u062C';\n t['\\uFD8A'] = '\\u0645\\u062D\\u0645';\n t['\\uFD8B'] = '\\u0645\\u062D\\u064A';\n t['\\uFD8C'] = '\\u0645\\u062C\\u062D';\n t['\\uFD8D'] = '\\u0645\\u062C\\u0645';\n t['\\uFD8E'] = '\\u0645\\u062E\\u062C';\n t['\\uFD8F'] = '\\u0645\\u062E\\u0645';\n t['\\uFD92'] = '\\u0645\\u062C\\u062E';\n t['\\uFD93'] = '\\u0647\\u0645\\u062C';\n t['\\uFD94'] = '\\u0647\\u0645\\u0645';\n t['\\uFD95'] = '\\u0646\\u062D\\u0645';\n t['\\uFD96'] = '\\u0646\\u062D\\u0649';\n t['\\uFD97'] = '\\u0646\\u062C\\u0645';\n t['\\uFD98'] = '\\u0646\\u062C\\u0645';\n t['\\uFD99'] = '\\u0646\\u062C\\u0649';\n t['\\uFD9A'] = '\\u0646\\u0645\\u064A';\n t['\\uFD9B'] = '\\u0646\\u0645\\u0649';\n t['\\uFD9C'] = '\\u064A\\u0645\\u0645';\n t['\\uFD9D'] = '\\u064A\\u0645\\u0645';\n t['\\uFD9E'] = '\\u0628\\u062E\\u064A';\n t['\\uFD9F'] = '\\u062A\\u062C\\u064A';\n t['\\uFDA0'] = '\\u062A\\u062C\\u0649';\n t['\\uFDA1'] = '\\u062A\\u062E\\u064A';\n t['\\uFDA2'] = '\\u062A\\u062E\\u0649';\n t['\\uFDA3'] = '\\u062A\\u0645\\u064A';\n t['\\uFDA4'] = '\\u062A\\u0645\\u0649';\n t['\\uFDA5'] = '\\u062C\\u0645\\u064A';\n t['\\uFDA6'] = '\\u062C\\u062D\\u0649';\n t['\\uFDA7'] = '\\u062C\\u0645\\u0649';\n t['\\uFDA8'] = '\\u0633\\u062E\\u0649';\n t['\\uFDA9'] = '\\u0635\\u062D\\u064A';\n t['\\uFDAA'] = '\\u0634\\u062D\\u064A';\n t['\\uFDAB'] = '\\u0636\\u062D\\u064A';\n t['\\uFDAC'] = '\\u0644\\u062C\\u064A';\n t['\\uFDAD'] = '\\u0644\\u0645\\u064A';\n t['\\uFDAE'] = '\\u064A\\u062D\\u064A';\n t['\\uFDAF'] = '\\u064A\\u062C\\u064A';\n t['\\uFDB0'] = '\\u064A\\u0645\\u064A';\n t['\\uFDB1'] = '\\u0645\\u0645\\u064A';\n t['\\uFDB2'] = '\\u0642\\u0645\\u064A';\n t['\\uFDB3'] = '\\u0646\\u062D\\u064A';\n t['\\uFDB4'] = '\\u0642\\u0645\\u062D';\n t['\\uFDB5'] = '\\u0644\\u062D\\u0645';\n t['\\uFDB6'] = '\\u0639\\u0645\\u064A';\n t['\\uFDB7'] = '\\u0643\\u0645\\u064A';\n t['\\uFDB8'] = '\\u0646\\u062C\\u062D';\n t['\\uFDB9'] = '\\u0645\\u062E\\u064A';\n t['\\uFDBA'] = '\\u0644\\u062C\\u0645';\n t['\\uFDBB'] = '\\u0643\\u0645\\u0645';\n t['\\uFDBC'] = '\\u0644\\u062C\\u0645';\n t['\\uFDBD'] = '\\u0646\\u062C\\u062D';\n t['\\uFDBE'] = '\\u062C\\u062D\\u064A';\n t['\\uFDBF'] = '\\u062D\\u062C\\u064A';\n t['\\uFDC0'] = '\\u0645\\u062C\\u064A';\n t['\\uFDC1'] = '\\u0641\\u0645\\u064A';\n t['\\uFDC2'] = '\\u0628\\u062D\\u064A';\n t['\\uFDC3'] = '\\u0643\\u0645\\u0645';\n t['\\uFDC4'] = '\\u0639\\u062C\\u0645';\n t['\\uFDC5'] = '\\u0635\\u0645\\u0645';\n t['\\uFDC6'] = '\\u0633\\u062E\\u064A';\n t['\\uFDC7'] = '\\u0646\\u062C\\u064A';\n t['\\uFE49'] = '\\u203E';\n t['\\uFE4A'] = '\\u203E';\n t['\\uFE4B'] = '\\u203E';\n t['\\uFE4C'] = '\\u203E';\n t['\\uFE4D'] = '\\u005F';\n t['\\uFE4E'] = '\\u005F';\n t['\\uFE4F'] = '\\u005F';\n t['\\uFE80'] = '\\u0621';\n t['\\uFE81'] = '\\u0622';\n t['\\uFE82'] = '\\u0622';\n t['\\uFE83'] = '\\u0623';\n t['\\uFE84'] = '\\u0623';\n t['\\uFE85'] = '\\u0624';\n t['\\uFE86'] = '\\u0624';\n t['\\uFE87'] = '\\u0625';\n t['\\uFE88'] = '\\u0625';\n t['\\uFE89'] = '\\u0626';\n t['\\uFE8A'] = '\\u0626';\n t['\\uFE8B'] = '\\u0626';\n t['\\uFE8C'] = '\\u0626';\n t['\\uFE8D'] = '\\u0627';\n t['\\uFE8E'] = '\\u0627';\n t['\\uFE8F'] = '\\u0628';\n t['\\uFE90'] = '\\u0628';\n t['\\uFE91'] = '\\u0628';\n t['\\uFE92'] = '\\u0628';\n t['\\uFE93'] = '\\u0629';\n t['\\uFE94'] = '\\u0629';\n t['\\uFE95'] = '\\u062A';\n t['\\uFE96'] = '\\u062A';\n t['\\uFE97'] = '\\u062A';\n t['\\uFE98'] = '\\u062A';\n t['\\uFE99'] = '\\u062B';\n t['\\uFE9A'] = '\\u062B';\n t['\\uFE9B'] = '\\u062B';\n t['\\uFE9C'] = '\\u062B';\n t['\\uFE9D'] = '\\u062C';\n t['\\uFE9E'] = '\\u062C';\n t['\\uFE9F'] = '\\u062C';\n t['\\uFEA0'] = '\\u062C';\n t['\\uFEA1'] = '\\u062D';\n t['\\uFEA2'] = '\\u062D';\n t['\\uFEA3'] = '\\u062D';\n t['\\uFEA4'] = '\\u062D';\n t['\\uFEA5'] = '\\u062E';\n t['\\uFEA6'] = '\\u062E';\n t['\\uFEA7'] = '\\u062E';\n t['\\uFEA8'] = '\\u062E';\n t['\\uFEA9'] = '\\u062F';\n t['\\uFEAA'] = '\\u062F';\n t['\\uFEAB'] = '\\u0630';\n t['\\uFEAC'] = '\\u0630';\n t['\\uFEAD'] = '\\u0631';\n t['\\uFEAE'] = '\\u0631';\n t['\\uFEAF'] = '\\u0632';\n t['\\uFEB0'] = '\\u0632';\n t['\\uFEB1'] = '\\u0633';\n t['\\uFEB2'] = '\\u0633';\n t['\\uFEB3'] = '\\u0633';\n t['\\uFEB4'] = '\\u0633';\n t['\\uFEB5'] = '\\u0634';\n t['\\uFEB6'] = '\\u0634';\n t['\\uFEB7'] = '\\u0634';\n t['\\uFEB8'] = '\\u0634';\n t['\\uFEB9'] = '\\u0635';\n t['\\uFEBA'] = '\\u0635';\n t['\\uFEBB'] = '\\u0635';\n t['\\uFEBC'] = '\\u0635';\n t['\\uFEBD'] = '\\u0636';\n t['\\uFEBE'] = '\\u0636';\n t['\\uFEBF'] = '\\u0636';\n t['\\uFEC0'] = '\\u0636';\n t['\\uFEC1'] = '\\u0637';\n t['\\uFEC2'] = '\\u0637';\n t['\\uFEC3'] = '\\u0637';\n t['\\uFEC4'] = '\\u0637';\n t['\\uFEC5'] = '\\u0638';\n t['\\uFEC6'] = '\\u0638';\n t['\\uFEC7'] = '\\u0638';\n t['\\uFEC8'] = '\\u0638';\n t['\\uFEC9'] = '\\u0639';\n t['\\uFECA'] = '\\u0639';\n t['\\uFECB'] = '\\u0639';\n t['\\uFECC'] = '\\u0639';\n t['\\uFECD'] = '\\u063A';\n t['\\uFECE'] = '\\u063A';\n t['\\uFECF'] = '\\u063A';\n t['\\uFED0'] = '\\u063A';\n t['\\uFED1'] = '\\u0641';\n t['\\uFED2'] = '\\u0641';\n t['\\uFED3'] = '\\u0641';\n t['\\uFED4'] = '\\u0641';\n t['\\uFED5'] = '\\u0642';\n t['\\uFED6'] = '\\u0642';\n t['\\uFED7'] = '\\u0642';\n t['\\uFED8'] = '\\u0642';\n t['\\uFED9'] = '\\u0643';\n t['\\uFEDA'] = '\\u0643';\n t['\\uFEDB'] = '\\u0643';\n t['\\uFEDC'] = '\\u0643';\n t['\\uFEDD'] = '\\u0644';\n t['\\uFEDE'] = '\\u0644';\n t['\\uFEDF'] = '\\u0644';\n t['\\uFEE0'] = '\\u0644';\n t['\\uFEE1'] = '\\u0645';\n t['\\uFEE2'] = '\\u0645';\n t['\\uFEE3'] = '\\u0645';\n t['\\uFEE4'] = '\\u0645';\n t['\\uFEE5'] = '\\u0646';\n t['\\uFEE6'] = '\\u0646';\n t['\\uFEE7'] = '\\u0646';\n t['\\uFEE8'] = '\\u0646';\n t['\\uFEE9'] = '\\u0647';\n t['\\uFEEA'] = '\\u0647';\n t['\\uFEEB'] = '\\u0647';\n t['\\uFEEC'] = '\\u0647';\n t['\\uFEED'] = '\\u0648';\n t['\\uFEEE'] = '\\u0648';\n t['\\uFEEF'] = '\\u0649';\n t['\\uFEF0'] = '\\u0649';\n t['\\uFEF1'] = '\\u064A';\n t['\\uFEF2'] = '\\u064A';\n t['\\uFEF3'] = '\\u064A';\n t['\\uFEF4'] = '\\u064A';\n t['\\uFEF5'] = '\\u0644\\u0622';\n t['\\uFEF6'] = '\\u0644\\u0622';\n t['\\uFEF7'] = '\\u0644\\u0623';\n t['\\uFEF8'] = '\\u0644\\u0623';\n t['\\uFEF9'] = '\\u0644\\u0625';\n t['\\uFEFA'] = '\\u0644\\u0625';\n t['\\uFEFB'] = '\\u0644\\u0627';\n t['\\uFEFC'] = '\\u0644\\u0627';\n});\nfunction reverseIfRtl(chars) {\n var charsLength = chars.length;\n if (charsLength <= 1 || !isRTLRangeFor(chars.charCodeAt(0))) {\n  return chars;\n }\n var s = '';\n for (var ii = charsLength - 1; ii >= 0; ii--) {\n  s += chars[ii];\n }\n return s;\n}\nexports.mapSpecialUnicodeValues = mapSpecialUnicodeValues;\nexports.reverseIfRtl = reverseIfRtl;\nexports.getUnicodeRangeFor = getUnicodeRangeFor;\nexports.getNormalizedUnicodes = getNormalizedUnicodes;\nexports.getUnicodeForGlyph = getUnicodeForGlyph;\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar coreWorker = __w_pdfjs_require__(8);\nvar globalScope = sharedUtil.globalScope;\nvar OK_RESPONSE = 200;\nvar PARTIAL_CONTENT_RESPONSE = 206;\nfunction NetworkManager(url, args) {\n this.url = url;\n args = args || {};\n this.isHttp = /^https?:/i.test(url);\n this.httpHeaders = this.isHttp && args.httpHeaders || {};\n this.withCredentials = args.withCredentials || false;\n this.getXhr = args.getXhr || function NetworkManager_getXhr() {\n  return new XMLHttpRequest();\n };\n this.currXhrId = 0;\n this.pendingRequests = Object.create(null);\n this.loadedRequests = Object.create(null);\n}\nfunction getArrayBuffer(xhr) {\n var data = xhr.response;\n if (typeof data !== 'string') {\n  return data;\n }\n var length = data.length;\n var array = new Uint8Array(length);\n for (var i = 0; i < length; i++) {\n  array[i] = data.charCodeAt(i) & 0xFF;\n }\n return array.buffer;\n}\nvar supportsMozChunked = function supportsMozChunkedClosure() {\n try {\n  var x = new XMLHttpRequest();\n  x.open('GET', globalScope.location.href);\n  x.responseType = 'moz-chunked-arraybuffer';\n  return x.responseType === 'moz-chunked-arraybuffer';\n } catch (e) {\n  return false;\n }\n}();\nNetworkManager.prototype = {\n requestRange: function NetworkManager_requestRange(begin, end, listeners) {\n  var args = {\n   begin: begin,\n   end: end\n  };\n  for (var prop in listeners) {\n   args[prop] = listeners[prop];\n  }\n  return this.request(args);\n },\n requestFull: function NetworkManager_requestFull(listeners) {\n  return this.request(listeners);\n },\n request: function NetworkManager_request(args) {\n  var xhr = this.getXhr();\n  var xhrId = this.currXhrId++;\n  var pendingRequest = this.pendingRequests[xhrId] = { xhr: xhr };\n  xhr.open('GET', this.url);\n  xhr.withCredentials = this.withCredentials;\n  for (var property in this.httpHeaders) {\n   var value = this.httpHeaders[property];\n   if (typeof value === 'undefined') {\n    continue;\n   }\n   xhr.setRequestHeader(property, value);\n  }\n  if (this.isHttp && 'begin' in args && 'end' in args) {\n   var rangeStr = args.begin + '-' + (args.end - 1);\n   xhr.setRequestHeader('Range', 'bytes=' + rangeStr);\n   pendingRequest.expectedStatus = 206;\n  } else {\n   pendingRequest.expectedStatus = 200;\n  }\n  var useMozChunkedLoading = supportsMozChunked && !!args.onProgressiveData;\n  if (useMozChunkedLoading) {\n   xhr.responseType = 'moz-chunked-arraybuffer';\n   pendingRequest.onProgressiveData = args.onProgressiveData;\n   pendingRequest.mozChunked = true;\n  } else {\n   xhr.responseType = 'arraybuffer';\n  }\n  if (args.onError) {\n   xhr.onerror = function (evt) {\n    args.onError(xhr.status);\n   };\n  }\n  xhr.onreadystatechange = this.onStateChange.bind(this, xhrId);\n  xhr.onprogress = this.onProgress.bind(this, xhrId);\n  pendingRequest.onHeadersReceived = args.onHeadersReceived;\n  pendingRequest.onDone = args.onDone;\n  pendingRequest.onError = args.onError;\n  pendingRequest.onProgress = args.onProgress;\n  xhr.send(null);\n  return xhrId;\n },\n onProgress: function NetworkManager_onProgress(xhrId, evt) {\n  var pendingRequest = this.pendingRequests[xhrId];\n  if (!pendingRequest) {\n   return;\n  }\n  if (pendingRequest.mozChunked) {\n   var chunk = getArrayBuffer(pendingRequest.xhr);\n   pendingRequest.onProgressiveData(chunk);\n  }\n  var onProgress = pendingRequest.onProgress;\n  if (onProgress) {\n   onProgress(evt);\n  }\n },\n onStateChange: function NetworkManager_onStateChange(xhrId, evt) {\n  var pendingRequest = this.pendingRequests[xhrId];\n  if (!pendingRequest) {\n   return;\n  }\n  var xhr = pendingRequest.xhr;\n  if (xhr.readyState >= 2 && pendingRequest.onHeadersReceived) {\n   pendingRequest.onHeadersReceived();\n   delete pendingRequest.onHeadersReceived;\n  }\n  if (xhr.readyState !== 4) {\n   return;\n  }\n  if (!(xhrId in this.pendingRequests)) {\n   return;\n  }\n  delete this.pendingRequests[xhrId];\n  if (xhr.status === 0 && this.isHttp) {\n   if (pendingRequest.onError) {\n    pendingRequest.onError(xhr.status);\n   }\n   return;\n  }\n  var xhrStatus = xhr.status || OK_RESPONSE;\n  var ok_response_on_range_request = xhrStatus === OK_RESPONSE && pendingRequest.expectedStatus === PARTIAL_CONTENT_RESPONSE;\n  if (!ok_response_on_range_request && xhrStatus !== pendingRequest.expectedStatus) {\n   if (pendingRequest.onError) {\n    pendingRequest.onError(xhr.status);\n   }\n   return;\n  }\n  this.loadedRequests[xhrId] = true;\n  var chunk = getArrayBuffer(xhr);\n  if (xhrStatus === PARTIAL_CONTENT_RESPONSE) {\n   var rangeHeader = xhr.getResponseHeader('Content-Range');\n   var matches = /bytes (\\d+)-(\\d+)\\/(\\d+)/.exec(rangeHeader);\n   var begin = parseInt(matches[1], 10);\n   pendingRequest.onDone({\n    begin: begin,\n    chunk: chunk\n   });\n  } else if (pendingRequest.onProgressiveData) {\n   pendingRequest.onDone(null);\n  } else if (chunk) {\n   pendingRequest.onDone({\n    begin: 0,\n    chunk: chunk\n   });\n  } else if (pendingRequest.onError) {\n   pendingRequest.onError(xhr.status);\n  }\n },\n hasPendingRequests: function NetworkManager_hasPendingRequests() {\n  for (var xhrId in this.pendingRequests) {\n   return true;\n  }\n  return false;\n },\n getRequestXhr: function NetworkManager_getXhr(xhrId) {\n  return this.pendingRequests[xhrId].xhr;\n },\n isStreamingRequest: function NetworkManager_isStreamingRequest(xhrId) {\n  return !!this.pendingRequests[xhrId].onProgressiveData;\n },\n isPendingRequest: function NetworkManager_isPendingRequest(xhrId) {\n  return xhrId in this.pendingRequests;\n },\n isLoadedRequest: function NetworkManager_isLoadedRequest(xhrId) {\n  return xhrId in this.loadedRequests;\n },\n abortAllRequests: function NetworkManager_abortAllRequests() {\n  for (var xhrId in this.pendingRequests) {\n   this.abortRequest(xhrId | 0);\n  }\n },\n abortRequest: function NetworkManager_abortRequest(xhrId) {\n  var xhr = this.pendingRequests[xhrId].xhr;\n  delete this.pendingRequests[xhrId];\n  xhr.abort();\n }\n};\nvar assert = sharedUtil.assert;\nvar createPromiseCapability = sharedUtil.createPromiseCapability;\nvar isInt = sharedUtil.isInt;\nvar MissingPDFException = sharedUtil.MissingPDFException;\nvar UnexpectedResponseException = sharedUtil.UnexpectedResponseException;\nfunction PDFNetworkStream(options) {\n this._options = options;\n var source = options.source;\n this._manager = new NetworkManager(source.url, {\n  httpHeaders: source.httpHeaders,\n  withCredentials: source.withCredentials\n });\n this._rangeChunkSize = source.rangeChunkSize;\n this._fullRequestReader = null;\n this._rangeRequestReaders = [];\n}\nPDFNetworkStream.prototype = {\n _onRangeRequestReaderClosed: function PDFNetworkStream_onRangeRequestReaderClosed(reader) {\n  var i = this._rangeRequestReaders.indexOf(reader);\n  if (i >= 0) {\n   this._rangeRequestReaders.splice(i, 1);\n  }\n },\n getFullReader: function PDFNetworkStream_getFullReader() {\n  assert(!this._fullRequestReader);\n  this._fullRequestReader = new PDFNetworkStreamFullRequestReader(this._manager, this._options);\n  return this._fullRequestReader;\n },\n getRangeReader: function PDFNetworkStream_getRangeReader(begin, end) {\n  var reader = new PDFNetworkStreamRangeRequestReader(this._manager, begin, end);\n  reader.onClosed = this._onRangeRequestReaderClosed.bind(this);\n  this._rangeRequestReaders.push(reader);\n  return reader;\n },\n cancelAllRequests: function PDFNetworkStream_cancelAllRequests(reason) {\n  if (this._fullRequestReader) {\n   this._fullRequestReader.cancel(reason);\n  }\n  var readers = this._rangeRequestReaders.slice(0);\n  readers.forEach(function (reader) {\n   reader.cancel(reason);\n  });\n }\n};\nfunction PDFNetworkStreamFullRequestReader(manager, options) {\n this._manager = manager;\n var source = options.source;\n var args = {\n  onHeadersReceived: this._onHeadersReceived.bind(this),\n  onProgressiveData: source.disableStream ? null : this._onProgressiveData.bind(this),\n  onDone: this._onDone.bind(this),\n  onError: this._onError.bind(this),\n  onProgress: this._onProgress.bind(this)\n };\n this._url = source.url;\n this._fullRequestId = manager.requestFull(args);\n this._headersReceivedCapability = createPromiseCapability();\n this._disableRange = options.disableRange || false;\n this._contentLength = source.length;\n this._rangeChunkSize = source.rangeChunkSize;\n if (!this._rangeChunkSize && !this._disableRange) {\n  this._disableRange = true;\n }\n this._isStreamingSupported = false;\n this._isRangeSupported = false;\n this._cachedChunks = [];\n this._requests = [];\n this._done = false;\n this._storedError = undefined;\n this.onProgress = null;\n}\nPDFNetworkStreamFullRequestReader.prototype = {\n _validateRangeRequestCapabilities: function PDFNetworkStreamFullRequestReader_validateRangeRequestCapabilities() {\n  if (this._disableRange) {\n   return false;\n  }\n  var networkManager = this._manager;\n  if (!networkManager.isHttp) {\n   return false;\n  }\n  var fullRequestXhrId = this._fullRequestId;\n  var fullRequestXhr = networkManager.getRequestXhr(fullRequestXhrId);\n  if (fullRequestXhr.getResponseHeader('Accept-Ranges') !== 'bytes') {\n   return false;\n  }\n  var contentEncoding = fullRequestXhr.getResponseHeader('Content-Encoding') || 'identity';\n  if (contentEncoding !== 'identity') {\n   return false;\n  }\n  var length = fullRequestXhr.getResponseHeader('Content-Length');\n  length = parseInt(length, 10);\n  if (!isInt(length)) {\n   return false;\n  }\n  this._contentLength = length;\n  if (length <= 2 * this._rangeChunkSize) {\n   return false;\n  }\n  return true;\n },\n _onHeadersReceived: function PDFNetworkStreamFullRequestReader_onHeadersReceived() {\n  if (this._validateRangeRequestCapabilities()) {\n   this._isRangeSupported = true;\n  }\n  var networkManager = this._manager;\n  var fullRequestXhrId = this._fullRequestId;\n  if (networkManager.isStreamingRequest(fullRequestXhrId)) {\n   this._isStreamingSupported = true;\n  } else if (this._isRangeSupported) {\n   networkManager.abortRequest(fullRequestXhrId);\n  }\n  this._headersReceivedCapability.resolve();\n },\n _onProgressiveData: function PDFNetworkStreamFullRequestReader_onProgressiveData(chunk) {\n  if (this._requests.length > 0) {\n   var requestCapability = this._requests.shift();\n   requestCapability.resolve({\n    value: chunk,\n    done: false\n   });\n  } else {\n   this._cachedChunks.push(chunk);\n  }\n },\n _onDone: function PDFNetworkStreamFullRequestReader_onDone(args) {\n  if (args) {\n   this._onProgressiveData(args.chunk);\n  }\n  this._done = true;\n  if (this._cachedChunks.length > 0) {\n   return;\n  }\n  this._requests.forEach(function (requestCapability) {\n   requestCapability.resolve({\n    value: undefined,\n    done: true\n   });\n  });\n  this._requests = [];\n },\n _onError: function PDFNetworkStreamFullRequestReader_onError(status) {\n  var url = this._url;\n  var exception;\n  if (status === 404 || status === 0 && /^file:/.test(url)) {\n   exception = new MissingPDFException('Missing PDF \"' + url + '\".');\n  } else {\n   exception = new UnexpectedResponseException('Unexpected server response (' + status + ') while retrieving PDF \"' + url + '\".', status);\n  }\n  this._storedError = exception;\n  this._headersReceivedCapability.reject(exception);\n  this._requests.forEach(function (requestCapability) {\n   requestCapability.reject(exception);\n  });\n  this._requests = [];\n  this._cachedChunks = [];\n },\n _onProgress: function PDFNetworkStreamFullRequestReader_onProgress(data) {\n  if (this.onProgress) {\n   this.onProgress({\n    loaded: data.loaded,\n    total: data.lengthComputable ? data.total : this._contentLength\n   });\n  }\n },\n get isRangeSupported() {\n  return this._isRangeSupported;\n },\n get isStreamingSupported() {\n  return this._isStreamingSupported;\n },\n get contentLength() {\n  return this._contentLength;\n },\n get headersReady() {\n  return this._headersReceivedCapability.promise;\n },\n read: function PDFNetworkStreamFullRequestReader_read() {\n  if (this._storedError) {\n   return Promise.reject(this._storedError);\n  }\n  if (this._cachedChunks.length > 0) {\n   var chunk = this._cachedChunks.shift();\n   return Promise.resolve(chunk);\n  }\n  if (this._done) {\n   return Promise.resolve({\n    value: undefined,\n    done: true\n   });\n  }\n  var requestCapability = createPromiseCapability();\n  this._requests.push(requestCapability);\n  return requestCapability.promise;\n },\n cancel: function PDFNetworkStreamFullRequestReader_cancel(reason) {\n  this._done = true;\n  this._headersReceivedCapability.reject(reason);\n  this._requests.forEach(function (requestCapability) {\n   requestCapability.resolve({\n    value: undefined,\n    done: true\n   });\n  });\n  this._requests = [];\n  if (this._manager.isPendingRequest(this._fullRequestId)) {\n   this._manager.abortRequest(this._fullRequestId);\n  }\n  this._fullRequestReader = null;\n }\n};\nfunction PDFNetworkStreamRangeRequestReader(manager, begin, end) {\n this._manager = manager;\n var args = {\n  onDone: this._onDone.bind(this),\n  onProgress: this._onProgress.bind(this)\n };\n this._requestId = manager.requestRange(begin, end, args);\n this._requests = [];\n this._queuedChunk = null;\n this._done = false;\n this.onProgress = null;\n this.onClosed = null;\n}\nPDFNetworkStreamRangeRequestReader.prototype = {\n _close: function PDFNetworkStreamRangeRequestReader_close() {\n  if (this.onClosed) {\n   this.onClosed(this);\n  }\n },\n _onDone: function PDFNetworkStreamRangeRequestReader_onDone(data) {\n  var chunk = data.chunk;\n  if (this._requests.length > 0) {\n   var requestCapability = this._requests.shift();\n   requestCapability.resolve({\n    value: chunk,\n    done: false\n   });\n  } else {\n   this._queuedChunk = chunk;\n  }\n  this._done = true;\n  this._requests.forEach(function (requestCapability) {\n   requestCapability.resolve({\n    value: undefined,\n    done: true\n   });\n  });\n  this._requests = [];\n  this._close();\n },\n _onProgress: function PDFNetworkStreamRangeRequestReader_onProgress(evt) {\n  if (!this.isStreamingSupported && this.onProgress) {\n   this.onProgress({ loaded: evt.loaded });\n  }\n },\n get isStreamingSupported() {\n  return false;\n },\n read: function PDFNetworkStreamRangeRequestReader_read() {\n  if (this._queuedChunk !== null) {\n   var chunk = this._queuedChunk;\n   this._queuedChunk = null;\n   return Promise.resolve({\n    value: chunk,\n    done: false\n   });\n  }\n  if (this._done) {\n   return Promise.resolve({\n    value: undefined,\n    done: true\n   });\n  }\n  var requestCapability = createPromiseCapability();\n  this._requests.push(requestCapability);\n  return requestCapability.promise;\n },\n cancel: function PDFNetworkStreamRangeRequestReader_cancel(reason) {\n  this._done = true;\n  this._requests.forEach(function (requestCapability) {\n   requestCapability.resolve({\n    value: undefined,\n    done: true\n   });\n  });\n  this._requests = [];\n  if (this._manager.isPendingRequest(this._requestId)) {\n   this._manager.abortRequest(this._requestId);\n  }\n  this._close();\n }\n};\ncoreWorker.setPDFNetworkStreamClass(PDFNetworkStream);\nexports.PDFNetworkStream = PDFNetworkStream;\nexports.NetworkManager = NetworkManager;\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar coreStream = __w_pdfjs_require__(2);\nvar coreColorSpace = __w_pdfjs_require__(3);\nvar coreObj = __w_pdfjs_require__(16);\nvar coreEvaluator = __w_pdfjs_require__(14);\nvar AnnotationBorderStyleType = sharedUtil.AnnotationBorderStyleType;\nvar AnnotationFieldFlag = sharedUtil.AnnotationFieldFlag;\nvar AnnotationFlag = sharedUtil.AnnotationFlag;\nvar AnnotationType = sharedUtil.AnnotationType;\nvar OPS = sharedUtil.OPS;\nvar Util = sharedUtil.Util;\nvar isArray = sharedUtil.isArray;\nvar isInt = sharedUtil.isInt;\nvar stringToBytes = sharedUtil.stringToBytes;\nvar stringToPDFString = sharedUtil.stringToPDFString;\nvar warn = sharedUtil.warn;\nvar Dict = corePrimitives.Dict;\nvar isDict = corePrimitives.isDict;\nvar isName = corePrimitives.isName;\nvar isRef = corePrimitives.isRef;\nvar isStream = corePrimitives.isStream;\nvar Stream = coreStream.Stream;\nvar ColorSpace = coreColorSpace.ColorSpace;\nvar Catalog = coreObj.Catalog;\nvar ObjectLoader = coreObj.ObjectLoader;\nvar FileSpec = coreObj.FileSpec;\nvar OperatorList = coreEvaluator.OperatorList;\nfunction AnnotationFactory() {\n}\nAnnotationFactory.prototype = {\n create: function AnnotationFactory_create(xref, ref, pdfManager, idFactory) {\n  var dict = xref.fetchIfRef(ref);\n  if (!isDict(dict)) {\n   return;\n  }\n  var id = isRef(ref) ? ref.toString() : 'annot_' + idFactory.createObjId();\n  var subtype = dict.get('Subtype');\n  subtype = isName(subtype) ? subtype.name : null;\n  var parameters = {\n   xref: xref,\n   dict: dict,\n   ref: isRef(ref) ? ref : null,\n   subtype: subtype,\n   id: id,\n   pdfManager: pdfManager\n  };\n  switch (subtype) {\n  case 'Link':\n   return new LinkAnnotation(parameters);\n  case 'Text':\n   return new TextAnnotation(parameters);\n  case 'Widget':\n   var fieldType = Util.getInheritableProperty(dict, 'FT');\n   fieldType = isName(fieldType) ? fieldType.name : null;\n   switch (fieldType) {\n   case 'Tx':\n    return new TextWidgetAnnotation(parameters);\n   case 'Btn':\n    return new ButtonWidgetAnnotation(parameters);\n   case 'Ch':\n    return new ChoiceWidgetAnnotation(parameters);\n   }\n   warn('Unimplemented widget field type \"' + fieldType + '\", ' + 'falling back to base field type.');\n   return new WidgetAnnotation(parameters);\n  case 'Popup':\n   return new PopupAnnotation(parameters);\n  case 'Highlight':\n   return new HighlightAnnotation(parameters);\n  case 'Underline':\n   return new UnderlineAnnotation(parameters);\n  case 'Squiggly':\n   return new SquigglyAnnotation(parameters);\n  case 'StrikeOut':\n   return new StrikeOutAnnotation(parameters);\n  case 'FileAttachment':\n   return new FileAttachmentAnnotation(parameters);\n  default:\n   if (!subtype) {\n    warn('Annotation is missing the required /Subtype.');\n   } else {\n    warn('Unimplemented annotation type \"' + subtype + '\", ' + 'falling back to base annotation.');\n   }\n   return new Annotation(parameters);\n  }\n }\n};\nvar Annotation = function AnnotationClosure() {\n function getTransformMatrix(rect, bbox, matrix) {\n  var bounds = Util.getAxialAlignedBoundingBox(bbox, matrix);\n  var minX = bounds[0];\n  var minY = bounds[1];\n  var maxX = bounds[2];\n  var maxY = bounds[3];\n  if (minX === maxX || minY === maxY) {\n   return [\n    1,\n    0,\n    0,\n    1,\n    rect[0],\n    rect[1]\n   ];\n  }\n  var xRatio = (rect[2] - rect[0]) / (maxX - minX);\n  var yRatio = (rect[3] - rect[1]) / (maxY - minY);\n  return [\n   xRatio,\n   0,\n   0,\n   yRatio,\n   rect[0] - minX * xRatio,\n   rect[1] - minY * yRatio\n  ];\n }\n function Annotation(params) {\n  var dict = params.dict;\n  this.setFlags(dict.get('F'));\n  this.setRectangle(dict.getArray('Rect'));\n  this.setColor(dict.getArray('C'));\n  this.setBorderStyle(dict);\n  this.setAppearance(dict);\n  this.data = {};\n  this.data.id = params.id;\n  this.data.subtype = params.subtype;\n  this.data.annotationFlags = this.flags;\n  this.data.rect = this.rectangle;\n  this.data.color = this.color;\n  this.data.borderStyle = this.borderStyle;\n  this.data.hasAppearance = !!this.appearance;\n }\n Annotation.prototype = {\n  _hasFlag: function Annotation_hasFlag(flags, flag) {\n   return !!(flags & flag);\n  },\n  _isViewable: function Annotation_isViewable(flags) {\n   return !this._hasFlag(flags, AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, AnnotationFlag.HIDDEN) && !this._hasFlag(flags, AnnotationFlag.NOVIEW);\n  },\n  _isPrintable: function AnnotationFlag_isPrintable(flags) {\n   return this._hasFlag(flags, AnnotationFlag.PRINT) && !this._hasFlag(flags, AnnotationFlag.INVISIBLE) && !this._hasFlag(flags, AnnotationFlag.HIDDEN);\n  },\n  get viewable() {\n   if (this.flags === 0) {\n    return true;\n   }\n   return this._isViewable(this.flags);\n  },\n  get printable() {\n   if (this.flags === 0) {\n    return false;\n   }\n   return this._isPrintable(this.flags);\n  },\n  setFlags: function Annotation_setFlags(flags) {\n   this.flags = isInt(flags) && flags > 0 ? flags : 0;\n  },\n  hasFlag: function Annotation_hasFlag(flag) {\n   return this._hasFlag(this.flags, flag);\n  },\n  setRectangle: function Annotation_setRectangle(rectangle) {\n   if (isArray(rectangle) && rectangle.length === 4) {\n    this.rectangle = Util.normalizeRect(rectangle);\n   } else {\n    this.rectangle = [\n     0,\n     0,\n     0,\n     0\n    ];\n   }\n  },\n  setColor: function Annotation_setColor(color) {\n   var rgbColor = new Uint8Array(3);\n   if (!isArray(color)) {\n    this.color = rgbColor;\n    return;\n   }\n   switch (color.length) {\n   case 0:\n    this.color = null;\n    break;\n   case 1:\n    ColorSpace.singletons.gray.getRgbItem(color, 0, rgbColor, 0);\n    this.color = rgbColor;\n    break;\n   case 3:\n    ColorSpace.singletons.rgb.getRgbItem(color, 0, rgbColor, 0);\n    this.color = rgbColor;\n    break;\n   case 4:\n    ColorSpace.singletons.cmyk.getRgbItem(color, 0, rgbColor, 0);\n    this.color = rgbColor;\n    break;\n   default:\n    this.color = rgbColor;\n    break;\n   }\n  },\n  setBorderStyle: function Annotation_setBorderStyle(borderStyle) {\n   this.borderStyle = new AnnotationBorderStyle();\n   if (!isDict(borderStyle)) {\n    return;\n   }\n   if (borderStyle.has('BS')) {\n    var dict = borderStyle.get('BS');\n    var dictType = dict.get('Type');\n    if (!dictType || isName(dictType, 'Border')) {\n     this.borderStyle.setWidth(dict.get('W'));\n     this.borderStyle.setStyle(dict.get('S'));\n     this.borderStyle.setDashArray(dict.getArray('D'));\n    }\n   } else if (borderStyle.has('Border')) {\n    var array = borderStyle.getArray('Border');\n    if (isArray(array) && array.length >= 3) {\n     this.borderStyle.setHorizontalCornerRadius(array[0]);\n     this.borderStyle.setVerticalCornerRadius(array[1]);\n     this.borderStyle.setWidth(array[2]);\n     if (array.length === 4) {\n      this.borderStyle.setDashArray(array[3]);\n     }\n    }\n   } else {\n    this.borderStyle.setWidth(0);\n   }\n  },\n  setAppearance: function Annotation_setAppearance(dict) {\n   this.appearance = null;\n   var appearanceStates = dict.get('AP');\n   if (!isDict(appearanceStates)) {\n    return;\n   }\n   var normalAppearanceState = appearanceStates.get('N');\n   if (isStream(normalAppearanceState)) {\n    this.appearance = normalAppearanceState;\n    return;\n   }\n   if (!isDict(normalAppearanceState)) {\n    return;\n   }\n   var as = dict.get('AS');\n   if (!isName(as) || !normalAppearanceState.has(as.name)) {\n    return;\n   }\n   this.appearance = normalAppearanceState.get(as.name);\n  },\n  _preparePopup: function Annotation_preparePopup(dict) {\n   if (!dict.has('C')) {\n    this.data.color = null;\n   }\n   this.data.hasPopup = dict.has('Popup');\n   this.data.title = stringToPDFString(dict.get('T') || '');\n   this.data.contents = stringToPDFString(dict.get('Contents') || '');\n  },\n  loadResources: function Annotation_loadResources(keys) {\n   return new Promise(function (resolve, reject) {\n    this.appearance.dict.getAsync('Resources').then(function (resources) {\n     if (!resources) {\n      resolve();\n      return;\n     }\n     var objectLoader = new ObjectLoader(resources.map, keys, resources.xref);\n     objectLoader.load().then(function () {\n      resolve(resources);\n     }, reject);\n    }, reject);\n   }.bind(this));\n  },\n  getOperatorList: function Annotation_getOperatorList(evaluator, task, renderForms) {\n   if (!this.appearance) {\n    return Promise.resolve(new OperatorList());\n   }\n   var data = this.data;\n   var appearanceDict = this.appearance.dict;\n   var resourcesPromise = this.loadResources([\n    'ExtGState',\n    'ColorSpace',\n    'Pattern',\n    'Shading',\n    'XObject',\n    'Font'\n   ]);\n   var bbox = appearanceDict.getArray('BBox') || [\n    0,\n    0,\n    1,\n    1\n   ];\n   var matrix = appearanceDict.getArray('Matrix') || [\n    1,\n    0,\n    0,\n    1,\n    0,\n    0\n   ];\n   var transform = getTransformMatrix(data.rect, bbox, matrix);\n   var self = this;\n   return resourcesPromise.then(function (resources) {\n    var opList = new OperatorList();\n    opList.addOp(OPS.beginAnnotation, [\n     data.rect,\n     transform,\n     matrix\n    ]);\n    return evaluator.getOperatorList(self.appearance, task, resources, opList).then(function () {\n     opList.addOp(OPS.endAnnotation, []);\n     self.appearance.reset();\n     return opList;\n    });\n   });\n  }\n };\n return Annotation;\n}();\nvar AnnotationBorderStyle = function AnnotationBorderStyleClosure() {\n function AnnotationBorderStyle() {\n  this.width = 1;\n  this.style = AnnotationBorderStyleType.SOLID;\n  this.dashArray = [3];\n  this.horizontalCornerRadius = 0;\n  this.verticalCornerRadius = 0;\n }\n AnnotationBorderStyle.prototype = {\n  setWidth: function AnnotationBorderStyle_setWidth(width) {\n   if (width === (width | 0)) {\n    this.width = width;\n   }\n  },\n  setStyle: function AnnotationBorderStyle_setStyle(style) {\n   if (!style) {\n    return;\n   }\n   switch (style.name) {\n   case 'S':\n    this.style = AnnotationBorderStyleType.SOLID;\n    break;\n   case 'D':\n    this.style = AnnotationBorderStyleType.DASHED;\n    break;\n   case 'B':\n    this.style = AnnotationBorderStyleType.BEVELED;\n    break;\n   case 'I':\n    this.style = AnnotationBorderStyleType.INSET;\n    break;\n   case 'U':\n    this.style = AnnotationBorderStyleType.UNDERLINE;\n    break;\n   default:\n    break;\n   }\n  },\n  setDashArray: function AnnotationBorderStyle_setDashArray(dashArray) {\n   if (isArray(dashArray) && dashArray.length > 0) {\n    var isValid = true;\n    var allZeros = true;\n    for (var i = 0, len = dashArray.length; i < len; i++) {\n     var element = dashArray[i];\n     var validNumber = +element >= 0;\n     if (!validNumber) {\n      isValid = false;\n      break;\n     } else if (element > 0) {\n      allZeros = false;\n     }\n    }\n    if (isValid && !allZeros) {\n     this.dashArray = dashArray;\n    } else {\n     this.width = 0;\n    }\n   } else if (dashArray) {\n    this.width = 0;\n   }\n  },\n  setHorizontalCornerRadius: function AnnotationBorderStyle_setHorizontalCornerRadius(radius) {\n   if (radius === (radius | 0)) {\n    this.horizontalCornerRadius = radius;\n   }\n  },\n  setVerticalCornerRadius: function AnnotationBorderStyle_setVerticalCornerRadius(radius) {\n   if (radius === (radius | 0)) {\n    this.verticalCornerRadius = radius;\n   }\n  }\n };\n return AnnotationBorderStyle;\n}();\nvar WidgetAnnotation = function WidgetAnnotationClosure() {\n function WidgetAnnotation(params) {\n  Annotation.call(this, params);\n  var dict = params.dict;\n  var data = this.data;\n  data.annotationType = AnnotationType.WIDGET;\n  data.fieldName = this._constructFieldName(dict);\n  data.fieldValue = Util.getInheritableProperty(dict, 'V', true);\n  data.alternativeText = stringToPDFString(dict.get('TU') || '');\n  data.defaultAppearance = Util.getInheritableProperty(dict, 'DA') || '';\n  var fieldType = Util.getInheritableProperty(dict, 'FT');\n  data.fieldType = isName(fieldType) ? fieldType.name : null;\n  this.fieldResources = Util.getInheritableProperty(dict, 'DR') || Dict.empty;\n  data.fieldFlags = Util.getInheritableProperty(dict, 'Ff');\n  if (!isInt(data.fieldFlags) || data.fieldFlags < 0) {\n   data.fieldFlags = 0;\n  }\n  data.readOnly = this.hasFieldFlag(AnnotationFieldFlag.READONLY);\n  if (data.fieldType === 'Sig') {\n   this.setFlags(AnnotationFlag.HIDDEN);\n  }\n }\n Util.inherit(WidgetAnnotation, Annotation, {\n  _constructFieldName: function WidgetAnnotation_constructFieldName(dict) {\n   if (!dict.has('T') && !dict.has('Parent')) {\n    warn('Unknown field name, falling back to empty field name.');\n    return '';\n   }\n   if (!dict.has('Parent')) {\n    return stringToPDFString(dict.get('T'));\n   }\n   var fieldName = [];\n   if (dict.has('T')) {\n    fieldName.unshift(stringToPDFString(dict.get('T')));\n   }\n   var loopDict = dict;\n   while (loopDict.has('Parent')) {\n    loopDict = loopDict.get('Parent');\n    if (!isDict(loopDict)) {\n     break;\n    }\n    if (loopDict.has('T')) {\n     fieldName.unshift(stringToPDFString(loopDict.get('T')));\n    }\n   }\n   return fieldName.join('.');\n  },\n  hasFieldFlag: function WidgetAnnotation_hasFieldFlag(flag) {\n   return !!(this.data.fieldFlags & flag);\n  }\n });\n return WidgetAnnotation;\n}();\nvar TextWidgetAnnotation = function TextWidgetAnnotationClosure() {\n function TextWidgetAnnotation(params) {\n  WidgetAnnotation.call(this, params);\n  this.data.fieldValue = stringToPDFString(this.data.fieldValue || '');\n  var alignment = Util.getInheritableProperty(params.dict, 'Q');\n  if (!isInt(alignment) || alignment < 0 || alignment > 2) {\n   alignment = null;\n  }\n  this.data.textAlignment = alignment;\n  var maximumLength = Util.getInheritableProperty(params.dict, 'MaxLen');\n  if (!isInt(maximumLength) || maximumLength < 0) {\n   maximumLength = null;\n  }\n  this.data.maxLen = maximumLength;\n  this.data.multiLine = this.hasFieldFlag(AnnotationFieldFlag.MULTILINE);\n  this.data.comb = this.hasFieldFlag(AnnotationFieldFlag.COMB) && !this.hasFieldFlag(AnnotationFieldFlag.MULTILINE) && !this.hasFieldFlag(AnnotationFieldFlag.PASSWORD) && !this.hasFieldFlag(AnnotationFieldFlag.FILESELECT) && this.data.maxLen !== null;\n }\n Util.inherit(TextWidgetAnnotation, WidgetAnnotation, {\n  getOperatorList: function TextWidgetAnnotation_getOperatorList(evaluator, task, renderForms) {\n   var operatorList = new OperatorList();\n   if (renderForms) {\n    return Promise.resolve(operatorList);\n   }\n   if (this.appearance) {\n    return Annotation.prototype.getOperatorList.call(this, evaluator, task, renderForms);\n   }\n   if (!this.data.defaultAppearance) {\n    return Promise.resolve(operatorList);\n   }\n   var stream = new Stream(stringToBytes(this.data.defaultAppearance));\n   return evaluator.getOperatorList(stream, task, this.fieldResources, operatorList).then(function () {\n    return operatorList;\n   });\n  }\n });\n return TextWidgetAnnotation;\n}();\nvar ButtonWidgetAnnotation = function ButtonWidgetAnnotationClosure() {\n function ButtonWidgetAnnotation(params) {\n  WidgetAnnotation.call(this, params);\n  this.data.checkBox = !this.hasFieldFlag(AnnotationFieldFlag.RADIO) && !this.hasFieldFlag(AnnotationFieldFlag.PUSHBUTTON);\n  if (this.data.checkBox) {\n   if (!isName(this.data.fieldValue)) {\n    return;\n   }\n   this.data.fieldValue = this.data.fieldValue.name;\n  }\n  this.data.radioButton = this.hasFieldFlag(AnnotationFieldFlag.RADIO) && !this.hasFieldFlag(AnnotationFieldFlag.PUSHBUTTON);\n  if (this.data.radioButton) {\n   this.data.fieldValue = this.data.buttonValue = null;\n   var fieldParent = params.dict.get('Parent');\n   if (isDict(fieldParent) && fieldParent.has('V')) {\n    var fieldParentValue = fieldParent.get('V');\n    if (isName(fieldParentValue)) {\n     this.data.fieldValue = fieldParentValue.name;\n    }\n   }\n   var appearanceStates = params.dict.get('AP');\n   if (!isDict(appearanceStates)) {\n    return;\n   }\n   var normalAppearanceState = appearanceStates.get('N');\n   if (!isDict(normalAppearanceState)) {\n    return;\n   }\n   var keys = normalAppearanceState.getKeys();\n   for (var i = 0, ii = keys.length; i < ii; i++) {\n    if (keys[i] !== 'Off') {\n     this.data.buttonValue = keys[i];\n     break;\n    }\n   }\n  }\n }\n Util.inherit(ButtonWidgetAnnotation, WidgetAnnotation, {\n  getOperatorList: function ButtonWidgetAnnotation_getOperatorList(evaluator, task, renderForms) {\n   var operatorList = new OperatorList();\n   if (renderForms) {\n    return Promise.resolve(operatorList);\n   }\n   if (this.appearance) {\n    return Annotation.prototype.getOperatorList.call(this, evaluator, task, renderForms);\n   }\n   return Promise.resolve(operatorList);\n  }\n });\n return ButtonWidgetAnnotation;\n}();\nvar ChoiceWidgetAnnotation = function ChoiceWidgetAnnotationClosure() {\n function ChoiceWidgetAnnotation(params) {\n  WidgetAnnotation.call(this, params);\n  this.data.options = [];\n  var options = Util.getInheritableProperty(params.dict, 'Opt');\n  if (isArray(options)) {\n   var xref = params.xref;\n   for (var i = 0, ii = options.length; i < ii; i++) {\n    var option = xref.fetchIfRef(options[i]);\n    var isOptionArray = isArray(option);\n    this.data.options[i] = {\n     exportValue: isOptionArray ? xref.fetchIfRef(option[0]) : option,\n     displayValue: isOptionArray ? xref.fetchIfRef(option[1]) : option\n    };\n   }\n  }\n  if (!isArray(this.data.fieldValue)) {\n   this.data.fieldValue = [this.data.fieldValue];\n  }\n  this.data.combo = this.hasFieldFlag(AnnotationFieldFlag.COMBO);\n  this.data.multiSelect = this.hasFieldFlag(AnnotationFieldFlag.MULTISELECT);\n }\n Util.inherit(ChoiceWidgetAnnotation, WidgetAnnotation, {\n  getOperatorList: function ChoiceWidgetAnnotation_getOperatorList(evaluator, task, renderForms) {\n   var operatorList = new OperatorList();\n   if (renderForms) {\n    return Promise.resolve(operatorList);\n   }\n   return Annotation.prototype.getOperatorList.call(this, evaluator, task, renderForms);\n  }\n });\n return ChoiceWidgetAnnotation;\n}();\nvar TextAnnotation = function TextAnnotationClosure() {\n var DEFAULT_ICON_SIZE = 22;\n function TextAnnotation(parameters) {\n  Annotation.call(this, parameters);\n  this.data.annotationType = AnnotationType.TEXT;\n  if (this.data.hasAppearance) {\n   this.data.name = 'NoIcon';\n  } else {\n   this.data.rect[1] = this.data.rect[3] - DEFAULT_ICON_SIZE;\n   this.data.rect[2] = this.data.rect[0] + DEFAULT_ICON_SIZE;\n   this.data.name = parameters.dict.has('Name') ? parameters.dict.get('Name').name : 'Note';\n  }\n  this._preparePopup(parameters.dict);\n }\n Util.inherit(TextAnnotation, Annotation, {});\n return TextAnnotation;\n}();\nvar LinkAnnotation = function LinkAnnotationClosure() {\n function LinkAnnotation(params) {\n  Annotation.call(this, params);\n  var data = this.data;\n  data.annotationType = AnnotationType.LINK;\n  Catalog.parseDestDictionary({\n   destDict: params.dict,\n   resultObj: data,\n   docBaseUrl: params.pdfManager.docBaseUrl\n  });\n }\n Util.inherit(LinkAnnotation, Annotation, {});\n return LinkAnnotation;\n}();\nvar PopupAnnotation = function PopupAnnotationClosure() {\n function PopupAnnotation(parameters) {\n  Annotation.call(this, parameters);\n  this.data.annotationType = AnnotationType.POPUP;\n  var dict = parameters.dict;\n  var parentItem = dict.get('Parent');\n  if (!parentItem) {\n   warn('Popup annotation has a missing or invalid parent annotation.');\n   return;\n  }\n  this.data.parentId = dict.getRaw('Parent').toString();\n  this.data.title = stringToPDFString(parentItem.get('T') || '');\n  this.data.contents = stringToPDFString(parentItem.get('Contents') || '');\n  if (!parentItem.has('C')) {\n   this.data.color = null;\n  } else {\n   this.setColor(parentItem.getArray('C'));\n   this.data.color = this.color;\n  }\n  if (!this.viewable) {\n   var parentFlags = parentItem.get('F');\n   if (this._isViewable(parentFlags)) {\n    this.setFlags(parentFlags);\n   }\n  }\n }\n Util.inherit(PopupAnnotation, Annotation, {});\n return PopupAnnotation;\n}();\nvar HighlightAnnotation = function HighlightAnnotationClosure() {\n function HighlightAnnotation(parameters) {\n  Annotation.call(this, parameters);\n  this.data.annotationType = AnnotationType.HIGHLIGHT;\n  this._preparePopup(parameters.dict);\n  this.data.borderStyle.setWidth(0);\n }\n Util.inherit(HighlightAnnotation, Annotation, {});\n return HighlightAnnotation;\n}();\nvar UnderlineAnnotation = function UnderlineAnnotationClosure() {\n function UnderlineAnnotation(parameters) {\n  Annotation.call(this, parameters);\n  this.data.annotationType = AnnotationType.UNDERLINE;\n  this._preparePopup(parameters.dict);\n  this.data.borderStyle.setWidth(0);\n }\n Util.inherit(UnderlineAnnotation, Annotation, {});\n return UnderlineAnnotation;\n}();\nvar SquigglyAnnotation = function SquigglyAnnotationClosure() {\n function SquigglyAnnotation(parameters) {\n  Annotation.call(this, parameters);\n  this.data.annotationType = AnnotationType.SQUIGGLY;\n  this._preparePopup(parameters.dict);\n  this.data.borderStyle.setWidth(0);\n }\n Util.inherit(SquigglyAnnotation, Annotation, {});\n return SquigglyAnnotation;\n}();\nvar StrikeOutAnnotation = function StrikeOutAnnotationClosure() {\n function StrikeOutAnnotation(parameters) {\n  Annotation.call(this, parameters);\n  this.data.annotationType = AnnotationType.STRIKEOUT;\n  this._preparePopup(parameters.dict);\n  this.data.borderStyle.setWidth(0);\n }\n Util.inherit(StrikeOutAnnotation, Annotation, {});\n return StrikeOutAnnotation;\n}();\nvar FileAttachmentAnnotation = function FileAttachmentAnnotationClosure() {\n function FileAttachmentAnnotation(parameters) {\n  Annotation.call(this, parameters);\n  var file = new FileSpec(parameters.dict.get('FS'), parameters.xref);\n  this.data.annotationType = AnnotationType.FILEATTACHMENT;\n  this.data.file = file.serializable;\n  this._preparePopup(parameters.dict);\n }\n Util.inherit(FileAttachmentAnnotation, Annotation, {});\n return FileAttachmentAnnotation;\n}();\nexports.Annotation = Annotation;\nexports.AnnotationBorderStyle = AnnotationBorderStyle;\nexports.AnnotationFactory = AnnotationFactory;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar warn = sharedUtil.warn;\nvar baseTypes = [\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'S',\n 'B',\n 'S',\n 'WS',\n 'B',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'B',\n 'B',\n 'B',\n 'S',\n 'WS',\n 'ON',\n 'ON',\n 'ET',\n 'ET',\n 'ET',\n 'ON',\n 'ON',\n 'ON',\n 'ON',\n 'ON',\n 'ES',\n 'CS',\n 'ES',\n 'CS',\n 'CS',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'CS',\n 'ON',\n 'ON',\n 'ON',\n 'ON',\n 'ON',\n 'ON',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'ON',\n 'ON',\n 'ON',\n 'ON',\n 'ON',\n 'ON',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'ON',\n 'ON',\n 'ON',\n 'ON',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'B',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'BN',\n 'CS',\n 'ON',\n 'ET',\n 'ET',\n 'ET',\n 'ET',\n 'ON',\n 'ON',\n 'ON',\n 'ON',\n 'L',\n 'ON',\n 'ON',\n 'BN',\n 'ON',\n 'ON',\n 'ET',\n 'ET',\n 'EN',\n 'EN',\n 'ON',\n 'L',\n 'ON',\n 'ON',\n 'ON',\n 'EN',\n 'L',\n 'ON',\n 'ON',\n 'ON',\n 'ON',\n 'ON',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'ON',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'ON',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L',\n 'L'\n];\nvar arabicTypes = [\n 'AN',\n 'AN',\n 'AN',\n 'AN',\n 'AN',\n 'AN',\n 'ON',\n 'ON',\n 'AL',\n 'ET',\n 'ET',\n 'AL',\n 'CS',\n 'AL',\n 'ON',\n 'ON',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'AL',\n 'AL',\n '',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'AN',\n 'AN',\n 'AN',\n 'AN',\n 'AN',\n 'AN',\n 'AN',\n 'AN',\n 'AN',\n 'AN',\n 'ET',\n 'AN',\n 'AN',\n 'AL',\n 'AL',\n 'AL',\n 'NSM',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'AN',\n 'ON',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'AL',\n 'AL',\n 'NSM',\n 'NSM',\n 'ON',\n 'NSM',\n 'NSM',\n 'NSM',\n 'NSM',\n 'AL',\n 'AL',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'EN',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL',\n 'AL'\n];\nfunction isOdd(i) {\n return (i & 1) !== 0;\n}\nfunction isEven(i) {\n return (i & 1) === 0;\n}\nfunction findUnequal(arr, start, value) {\n for (var j = start, jj = arr.length; j < jj; ++j) {\n  if (arr[j] !== value) {\n   return j;\n  }\n }\n return j;\n}\nfunction setValues(arr, start, end, value) {\n for (var j = start; j < end; ++j) {\n  arr[j] = value;\n }\n}\nfunction reverseValues(arr, start, end) {\n for (var i = start, j = end - 1; i < j; ++i, --j) {\n  var temp = arr[i];\n  arr[i] = arr[j];\n  arr[j] = temp;\n }\n}\nfunction createBidiText(str, isLTR, vertical) {\n return {\n  str: str,\n  dir: vertical ? 'ttb' : isLTR ? 'ltr' : 'rtl'\n };\n}\nvar chars = [];\nvar types = [];\nfunction bidi(str, startLevel, vertical) {\n var isLTR = true;\n var strLength = str.length;\n if (strLength === 0 || vertical) {\n  return createBidiText(str, isLTR, vertical);\n }\n chars.length = strLength;\n types.length = strLength;\n var numBidi = 0;\n var i, ii;\n for (i = 0; i < strLength; ++i) {\n  chars[i] = str.charAt(i);\n  var charCode = str.charCodeAt(i);\n  var charType = 'L';\n  if (charCode <= 0x00ff) {\n   charType = baseTypes[charCode];\n  } else if (0x0590 <= charCode && charCode <= 0x05f4) {\n   charType = 'R';\n  } else if (0x0600 <= charCode && charCode <= 0x06ff) {\n   charType = arabicTypes[charCode & 0xff];\n   if (!charType) {\n    warn('Bidi: invalid Unicode character ' + charCode.toString(16));\n   }\n  } else if (0x0700 <= charCode && charCode <= 0x08AC) {\n   charType = 'AL';\n  }\n  if (charType === 'R' || charType === 'AL' || charType === 'AN') {\n   numBidi++;\n  }\n  types[i] = charType;\n }\n if (numBidi === 0) {\n  isLTR = true;\n  return createBidiText(str, isLTR);\n }\n if (startLevel === -1) {\n  if (numBidi / strLength < 0.3) {\n   isLTR = true;\n   startLevel = 0;\n  } else {\n   isLTR = false;\n   startLevel = 1;\n  }\n }\n var levels = [];\n for (i = 0; i < strLength; ++i) {\n  levels[i] = startLevel;\n }\n var e = isOdd(startLevel) ? 'R' : 'L';\n var sor = e;\n var eor = sor;\n var lastType = sor;\n for (i = 0; i < strLength; ++i) {\n  if (types[i] === 'NSM') {\n   types[i] = lastType;\n  } else {\n   lastType = types[i];\n  }\n }\n lastType = sor;\n var t;\n for (i = 0; i < strLength; ++i) {\n  t = types[i];\n  if (t === 'EN') {\n   types[i] = lastType === 'AL' ? 'AN' : 'EN';\n  } else if (t === 'R' || t === 'L' || t === 'AL') {\n   lastType = t;\n  }\n }\n for (i = 0; i < strLength; ++i) {\n  t = types[i];\n  if (t === 'AL') {\n   types[i] = 'R';\n  }\n }\n for (i = 1; i < strLength - 1; ++i) {\n  if (types[i] === 'ES' && types[i - 1] === 'EN' && types[i + 1] === 'EN') {\n   types[i] = 'EN';\n  }\n  if (types[i] === 'CS' && (types[i - 1] === 'EN' || types[i - 1] === 'AN') && types[i + 1] === types[i - 1]) {\n   types[i] = types[i - 1];\n  }\n }\n for (i = 0; i < strLength; ++i) {\n  if (types[i] === 'EN') {\n   var j;\n   for (j = i - 1; j >= 0; --j) {\n    if (types[j] !== 'ET') {\n     break;\n    }\n    types[j] = 'EN';\n   }\n   for (j = i + 1; j < strLength; ++j) {\n    if (types[j] !== 'ET') {\n     break;\n    }\n    types[j] = 'EN';\n   }\n  }\n }\n for (i = 0; i < strLength; ++i) {\n  t = types[i];\n  if (t === 'WS' || t === 'ES' || t === 'ET' || t === 'CS') {\n   types[i] = 'ON';\n  }\n }\n lastType = sor;\n for (i = 0; i < strLength; ++i) {\n  t = types[i];\n  if (t === 'EN') {\n   types[i] = lastType === 'L' ? 'L' : 'EN';\n  } else if (t === 'R' || t === 'L') {\n   lastType = t;\n  }\n }\n for (i = 0; i < strLength; ++i) {\n  if (types[i] === 'ON') {\n   var end = findUnequal(types, i + 1, 'ON');\n   var before = sor;\n   if (i > 0) {\n    before = types[i - 1];\n   }\n   var after = eor;\n   if (end + 1 < strLength) {\n    after = types[end + 1];\n   }\n   if (before !== 'L') {\n    before = 'R';\n   }\n   if (after !== 'L') {\n    after = 'R';\n   }\n   if (before === after) {\n    setValues(types, i, end, before);\n   }\n   i = end - 1;\n  }\n }\n for (i = 0; i < strLength; ++i) {\n  if (types[i] === 'ON') {\n   types[i] = e;\n  }\n }\n for (i = 0; i < strLength; ++i) {\n  t = types[i];\n  if (isEven(levels[i])) {\n   if (t === 'R') {\n    levels[i] += 1;\n   } else if (t === 'AN' || t === 'EN') {\n    levels[i] += 2;\n   }\n  } else {\n   if (t === 'L' || t === 'AN' || t === 'EN') {\n    levels[i] += 1;\n   }\n  }\n }\n var highestLevel = -1;\n var lowestOddLevel = 99;\n var level;\n for (i = 0, ii = levels.length; i < ii; ++i) {\n  level = levels[i];\n  if (highestLevel < level) {\n   highestLevel = level;\n  }\n  if (lowestOddLevel > level && isOdd(level)) {\n   lowestOddLevel = level;\n  }\n }\n for (level = highestLevel; level >= lowestOddLevel; --level) {\n  var start = -1;\n  for (i = 0, ii = levels.length; i < ii; ++i) {\n   if (levels[i] < level) {\n    if (start >= 0) {\n     reverseValues(chars, start, i);\n     start = -1;\n    }\n   } else if (start < 0) {\n    start = i;\n   }\n  }\n  if (start >= 0) {\n   reverseValues(chars, start, levels.length);\n  }\n }\n for (i = 0, ii = chars.length; i < ii; ++i) {\n  var ch = chars[i];\n  if (ch === '<' || ch === '>') {\n   chars[i] = '';\n  }\n }\n return createBidiText(chars.join(''), isLTR);\n}\nexports.bidi = bidi;\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar ISOAdobeCharset = [\n '.notdef',\n 'space',\n 'exclam',\n 'quotedbl',\n 'numbersign',\n 'dollar',\n 'percent',\n 'ampersand',\n 'quoteright',\n 'parenleft',\n 'parenright',\n 'asterisk',\n 'plus',\n 'comma',\n 'hyphen',\n 'period',\n 'slash',\n 'zero',\n 'one',\n 'two',\n 'three',\n 'four',\n 'five',\n 'six',\n 'seven',\n 'eight',\n 'nine',\n 'colon',\n 'semicolon',\n 'less',\n 'equal',\n 'greater',\n 'question',\n 'at',\n 'A',\n 'B',\n 'C',\n 'D',\n 'E',\n 'F',\n 'G',\n 'H',\n 'I',\n 'J',\n 'K',\n 'L',\n 'M',\n 'N',\n 'O',\n 'P',\n 'Q',\n 'R',\n 'S',\n 'T',\n 'U',\n 'V',\n 'W',\n 'X',\n 'Y',\n 'Z',\n 'bracketleft',\n 'backslash',\n 'bracketright',\n 'asciicircum',\n 'underscore',\n 'quoteleft',\n 'a',\n 'b',\n 'c',\n 'd',\n 'e',\n 'f',\n 'g',\n 'h',\n 'i',\n 'j',\n 'k',\n 'l',\n 'm',\n 'n',\n 'o',\n 'p',\n 'q',\n 'r',\n 's',\n 't',\n 'u',\n 'v',\n 'w',\n 'x',\n 'y',\n 'z',\n 'braceleft',\n 'bar',\n 'braceright',\n 'asciitilde',\n 'exclamdown',\n 'cent',\n 'sterling',\n 'fraction',\n 'yen',\n 'florin',\n 'section',\n 'currency',\n 'quotesingle',\n 'quotedblleft',\n 'guillemotleft',\n 'guilsinglleft',\n 'guilsinglright',\n 'fi',\n 'fl',\n 'endash',\n 'dagger',\n 'daggerdbl',\n 'periodcentered',\n 'paragraph',\n 'bullet',\n 'quotesinglbase',\n 'quotedblbase',\n 'quotedblright',\n 'guillemotright',\n 'ellipsis',\n 'perthousand',\n 'questiondown',\n 'grave',\n 'acute',\n 'circumflex',\n 'tilde',\n 'macron',\n 'breve',\n 'dotaccent',\n 'dieresis',\n 'ring',\n 'cedilla',\n 'hungarumlaut',\n 'ogonek',\n 'caron',\n 'emdash',\n 'AE',\n 'ordfeminine',\n 'Lslash',\n 'Oslash',\n 'OE',\n 'ordmasculine',\n 'ae',\n 'dotlessi',\n 'lslash',\n 'oslash',\n 'oe',\n 'germandbls',\n 'onesuperior',\n 'logicalnot',\n 'mu',\n 'trademark',\n 'Eth',\n 'onehalf',\n 'plusminus',\n 'Thorn',\n 'onequarter',\n 'divide',\n 'brokenbar',\n 'degree',\n 'thorn',\n 'threequarters',\n 'twosuperior',\n 'registered',\n 'minus',\n 'eth',\n 'multiply',\n 'threesuperior',\n 'copyright',\n 'Aacute',\n 'Acircumflex',\n 'Adieresis',\n 'Agrave',\n 'Aring',\n 'Atilde',\n 'Ccedilla',\n 'Eacute',\n 'Ecircumflex',\n 'Edieresis',\n 'Egrave',\n 'Iacute',\n 'Icircumflex',\n 'Idieresis',\n 'Igrave',\n 'Ntilde',\n 'Oacute',\n 'Ocircumflex',\n 'Odieresis',\n 'Ograve',\n 'Otilde',\n 'Scaron',\n 'Uacute',\n 'Ucircumflex',\n 'Udieresis',\n 'Ugrave',\n 'Yacute',\n 'Ydieresis',\n 'Zcaron',\n 'aacute',\n 'acircumflex',\n 'adieresis',\n 'agrave',\n 'aring',\n 'atilde',\n 'ccedilla',\n 'eacute',\n 'ecircumflex',\n 'edieresis',\n 'egrave',\n 'iacute',\n 'icircumflex',\n 'idieresis',\n 'igrave',\n 'ntilde',\n 'oacute',\n 'ocircumflex',\n 'odieresis',\n 'ograve',\n 'otilde',\n 'scaron',\n 'uacute',\n 'ucircumflex',\n 'udieresis',\n 'ugrave',\n 'yacute',\n 'ydieresis',\n 'zcaron'\n];\nvar ExpertCharset = [\n '.notdef',\n 'space',\n 'exclamsmall',\n 'Hungarumlautsmall',\n 'dollaroldstyle',\n 'dollarsuperior',\n 'ampersandsmall',\n 'Acutesmall',\n 'parenleftsuperior',\n 'parenrightsuperior',\n 'twodotenleader',\n 'onedotenleader',\n 'comma',\n 'hyphen',\n 'period',\n 'fraction',\n 'zerooldstyle',\n 'oneoldstyle',\n 'twooldstyle',\n 'threeoldstyle',\n 'fouroldstyle',\n 'fiveoldstyle',\n 'sixoldstyle',\n 'sevenoldstyle',\n 'eightoldstyle',\n 'nineoldstyle',\n 'colon',\n 'semicolon',\n 'commasuperior',\n 'threequartersemdash',\n 'periodsuperior',\n 'questionsmall',\n 'asuperior',\n 'bsuperior',\n 'centsuperior',\n 'dsuperior',\n 'esuperior',\n 'isuperior',\n 'lsuperior',\n 'msuperior',\n 'nsuperior',\n 'osuperior',\n 'rsuperior',\n 'ssuperior',\n 'tsuperior',\n 'ff',\n 'fi',\n 'fl',\n 'ffi',\n 'ffl',\n 'parenleftinferior',\n 'parenrightinferior',\n 'Circumflexsmall',\n 'hyphensuperior',\n 'Gravesmall',\n 'Asmall',\n 'Bsmall',\n 'Csmall',\n 'Dsmall',\n 'Esmall',\n 'Fsmall',\n 'Gsmall',\n 'Hsmall',\n 'Ismall',\n 'Jsmall',\n 'Ksmall',\n 'Lsmall',\n 'Msmall',\n 'Nsmall',\n 'Osmall',\n 'Psmall',\n 'Qsmall',\n 'Rsmall',\n 'Ssmall',\n 'Tsmall',\n 'Usmall',\n 'Vsmall',\n 'Wsmall',\n 'Xsmall',\n 'Ysmall',\n 'Zsmall',\n 'colonmonetary',\n 'onefitted',\n 'rupiah',\n 'Tildesmall',\n 'exclamdownsmall',\n 'centoldstyle',\n 'Lslashsmall',\n 'Scaronsmall',\n 'Zcaronsmall',\n 'Dieresissmall',\n 'Brevesmall',\n 'Caronsmall',\n 'Dotaccentsmall',\n 'Macronsmall',\n 'figuredash',\n 'hypheninferior',\n 'Ogoneksmall',\n 'Ringsmall',\n 'Cedillasmall',\n 'onequarter',\n 'onehalf',\n 'threequarters',\n 'questiondownsmall',\n 'oneeighth',\n 'threeeighths',\n 'fiveeighths',\n 'seveneighths',\n 'onethird',\n 'twothirds',\n 'zerosuperior',\n 'onesuperior',\n 'twosuperior',\n 'threesuperior',\n 'foursuperior',\n 'fivesuperior',\n 'sixsuperior',\n 'sevensuperior',\n 'eightsuperior',\n 'ninesuperior',\n 'zeroinferior',\n 'oneinferior',\n 'twoinferior',\n 'threeinferior',\n 'fourinferior',\n 'fiveinferior',\n 'sixinferior',\n 'seveninferior',\n 'eightinferior',\n 'nineinferior',\n 'centinferior',\n 'dollarinferior',\n 'periodinferior',\n 'commainferior',\n 'Agravesmall',\n 'Aacutesmall',\n 'Acircumflexsmall',\n 'Atildesmall',\n 'Adieresissmall',\n 'Aringsmall',\n 'AEsmall',\n 'Ccedillasmall',\n 'Egravesmall',\n 'Eacutesmall',\n 'Ecircumflexsmall',\n 'Edieresissmall',\n 'Igravesmall',\n 'Iacutesmall',\n 'Icircumflexsmall',\n 'Idieresissmall',\n 'Ethsmall',\n 'Ntildesmall',\n 'Ogravesmall',\n 'Oacutesmall',\n 'Ocircumflexsmall',\n 'Otildesmall',\n 'Odieresissmall',\n 'OEsmall',\n 'Oslashsmall',\n 'Ugravesmall',\n 'Uacutesmall',\n 'Ucircumflexsmall',\n 'Udieresissmall',\n 'Yacutesmall',\n 'Thornsmall',\n 'Ydieresissmall'\n];\nvar ExpertSubsetCharset = [\n '.notdef',\n 'space',\n 'dollaroldstyle',\n 'dollarsuperior',\n 'parenleftsuperior',\n 'parenrightsuperior',\n 'twodotenleader',\n 'onedotenleader',\n 'comma',\n 'hyphen',\n 'period',\n 'fraction',\n 'zerooldstyle',\n 'oneoldstyle',\n 'twooldstyle',\n 'threeoldstyle',\n 'fouroldstyle',\n 'fiveoldstyle',\n 'sixoldstyle',\n 'sevenoldstyle',\n 'eightoldstyle',\n 'nineoldstyle',\n 'colon',\n 'semicolon',\n 'commasuperior',\n 'threequartersemdash',\n 'periodsuperior',\n 'asuperior',\n 'bsuperior',\n 'centsuperior',\n 'dsuperior',\n 'esuperior',\n 'isuperior',\n 'lsuperior',\n 'msuperior',\n 'nsuperior',\n 'osuperior',\n 'rsuperior',\n 'ssuperior',\n 'tsuperior',\n 'ff',\n 'fi',\n 'fl',\n 'ffi',\n 'ffl',\n 'parenleftinferior',\n 'parenrightinferior',\n 'hyphensuperior',\n 'colonmonetary',\n 'onefitted',\n 'rupiah',\n 'centoldstyle',\n 'figuredash',\n 'hypheninferior',\n 'onequarter',\n 'onehalf',\n 'threequarters',\n 'oneeighth',\n 'threeeighths',\n 'fiveeighths',\n 'seveneighths',\n 'onethird',\n 'twothirds',\n 'zerosuperior',\n 'onesuperior',\n 'twosuperior',\n 'threesuperior',\n 'foursuperior',\n 'fivesuperior',\n 'sixsuperior',\n 'sevensuperior',\n 'eightsuperior',\n 'ninesuperior',\n 'zeroinferior',\n 'oneinferior',\n 'twoinferior',\n 'threeinferior',\n 'fourinferior',\n 'fiveinferior',\n 'sixinferior',\n 'seveninferior',\n 'eightinferior',\n 'nineinferior',\n 'centinferior',\n 'dollarinferior',\n 'periodinferior',\n 'commainferior'\n];\nexports.ISOAdobeCharset = ISOAdobeCharset;\nexports.ExpertCharset = ExpertCharset;\nexports.ExpertSubsetCharset = ExpertSubsetCharset;\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar coreStream = __w_pdfjs_require__(2);\nvar coreParser = __w_pdfjs_require__(5);\nvar Util = sharedUtil.Util;\nvar assert = sharedUtil.assert;\nvar warn = sharedUtil.warn;\nvar error = sharedUtil.error;\nvar isInt = sharedUtil.isInt;\nvar isString = sharedUtil.isString;\nvar MissingDataException = sharedUtil.MissingDataException;\nvar CMapCompressionType = sharedUtil.CMapCompressionType;\nvar isEOF = corePrimitives.isEOF;\nvar isName = corePrimitives.isName;\nvar isCmd = corePrimitives.isCmd;\nvar isStream = corePrimitives.isStream;\nvar Stream = coreStream.Stream;\nvar Lexer = coreParser.Lexer;\nvar BUILT_IN_CMAPS = [\n 'Adobe-GB1-UCS2',\n 'Adobe-CNS1-UCS2',\n 'Adobe-Japan1-UCS2',\n 'Adobe-Korea1-UCS2',\n '78-EUC-H',\n '78-EUC-V',\n '78-H',\n '78-RKSJ-H',\n '78-RKSJ-V',\n '78-V',\n '78ms-RKSJ-H',\n '78ms-RKSJ-V',\n '83pv-RKSJ-H',\n '90ms-RKSJ-H',\n '90ms-RKSJ-V',\n '90msp-RKSJ-H',\n '90msp-RKSJ-V',\n '90pv-RKSJ-H',\n '90pv-RKSJ-V',\n 'Add-H',\n 'Add-RKSJ-H',\n 'Add-RKSJ-V',\n 'Add-V',\n 'Adobe-CNS1-0',\n 'Adobe-CNS1-1',\n 'Adobe-CNS1-2',\n 'Adobe-CNS1-3',\n 'Adobe-CNS1-4',\n 'Adobe-CNS1-5',\n 'Adobe-CNS1-6',\n 'Adobe-GB1-0',\n 'Adobe-GB1-1',\n 'Adobe-GB1-2',\n 'Adobe-GB1-3',\n 'Adobe-GB1-4',\n 'Adobe-GB1-5',\n 'Adobe-Japan1-0',\n 'Adobe-Japan1-1',\n 'Adobe-Japan1-2',\n 'Adobe-Japan1-3',\n 'Adobe-Japan1-4',\n 'Adobe-Japan1-5',\n 'Adobe-Japan1-6',\n 'Adobe-Korea1-0',\n 'Adobe-Korea1-1',\n 'Adobe-Korea1-2',\n 'B5-H',\n 'B5-V',\n 'B5pc-H',\n 'B5pc-V',\n 'CNS-EUC-H',\n 'CNS-EUC-V',\n 'CNS1-H',\n 'CNS1-V',\n 'CNS2-H',\n 'CNS2-V',\n 'ETHK-B5-H',\n 'ETHK-B5-V',\n 'ETen-B5-H',\n 'ETen-B5-V',\n 'ETenms-B5-H',\n 'ETenms-B5-V',\n 'EUC-H',\n 'EUC-V',\n 'Ext-H',\n 'Ext-RKSJ-H',\n 'Ext-RKSJ-V',\n 'Ext-V',\n 'GB-EUC-H',\n 'GB-EUC-V',\n 'GB-H',\n 'GB-V',\n 'GBK-EUC-H',\n 'GBK-EUC-V',\n 'GBK2K-H',\n 'GBK2K-V',\n 'GBKp-EUC-H',\n 'GBKp-EUC-V',\n 'GBT-EUC-H',\n 'GBT-EUC-V',\n 'GBT-H',\n 'GBT-V',\n 'GBTpc-EUC-H',\n 'GBTpc-EUC-V',\n 'GBpc-EUC-H',\n 'GBpc-EUC-V',\n 'H',\n 'HKdla-B5-H',\n 'HKdla-B5-V',\n 'HKdlb-B5-H',\n 'HKdlb-B5-V',\n 'HKgccs-B5-H',\n 'HKgccs-B5-V',\n 'HKm314-B5-H',\n 'HKm314-B5-V',\n 'HKm471-B5-H',\n 'HKm471-B5-V',\n 'HKscs-B5-H',\n 'HKscs-B5-V',\n 'Hankaku',\n 'Hiragana',\n 'KSC-EUC-H',\n 'KSC-EUC-V',\n 'KSC-H',\n 'KSC-Johab-H',\n 'KSC-Johab-V',\n 'KSC-V',\n 'KSCms-UHC-H',\n 'KSCms-UHC-HW-H',\n 'KSCms-UHC-HW-V',\n 'KSCms-UHC-V',\n 'KSCpc-EUC-H',\n 'KSCpc-EUC-V',\n 'Katakana',\n 'NWP-H',\n 'NWP-V',\n 'RKSJ-H',\n 'RKSJ-V',\n 'Roman',\n 'UniCNS-UCS2-H',\n 'UniCNS-UCS2-V',\n 'UniCNS-UTF16-H',\n 'UniCNS-UTF16-V',\n 'UniCNS-UTF32-H',\n 'UniCNS-UTF32-V',\n 'UniCNS-UTF8-H',\n 'UniCNS-UTF8-V',\n 'UniGB-UCS2-H',\n 'UniGB-UCS2-V',\n 'UniGB-UTF16-H',\n 'UniGB-UTF16-V',\n 'UniGB-UTF32-H',\n 'UniGB-UTF32-V',\n 'UniGB-UTF8-H',\n 'UniGB-UTF8-V',\n 'UniJIS-UCS2-H',\n 'UniJIS-UCS2-HW-H',\n 'UniJIS-UCS2-HW-V',\n 'UniJIS-UCS2-V',\n 'UniJIS-UTF16-H',\n 'UniJIS-UTF16-V',\n 'UniJIS-UTF32-H',\n 'UniJIS-UTF32-V',\n 'UniJIS-UTF8-H',\n 'UniJIS-UTF8-V',\n 'UniJIS2004-UTF16-H',\n 'UniJIS2004-UTF16-V',\n 'UniJIS2004-UTF32-H',\n 'UniJIS2004-UTF32-V',\n 'UniJIS2004-UTF8-H',\n 'UniJIS2004-UTF8-V',\n 'UniJISPro-UCS2-HW-V',\n 'UniJISPro-UCS2-V',\n 'UniJISPro-UTF8-V',\n 'UniJISX0213-UTF32-H',\n 'UniJISX0213-UTF32-V',\n 'UniJISX02132004-UTF32-H',\n 'UniJISX02132004-UTF32-V',\n 'UniKS-UCS2-H',\n 'UniKS-UCS2-V',\n 'UniKS-UTF16-H',\n 'UniKS-UTF16-V',\n 'UniKS-UTF32-H',\n 'UniKS-UTF32-V',\n 'UniKS-UTF8-H',\n 'UniKS-UTF8-V',\n 'V',\n 'WP-Symbol'\n];\nvar CMap = function CMapClosure() {\n function CMap(builtInCMap) {\n  this.codespaceRanges = [\n   [],\n   [],\n   [],\n   []\n  ];\n  this.numCodespaceRanges = 0;\n  this._map = [];\n  this.name = '';\n  this.vertical = false;\n  this.useCMap = null;\n  this.builtInCMap = builtInCMap;\n }\n CMap.prototype = {\n  addCodespaceRange: function (n, low, high) {\n   this.codespaceRanges[n - 1].push(low, high);\n   this.numCodespaceRanges++;\n  },\n  mapCidRange: function (low, high, dstLow) {\n   while (low <= high) {\n    this._map[low++] = dstLow++;\n   }\n  },\n  mapBfRange: function (low, high, dstLow) {\n   var lastByte = dstLow.length - 1;\n   while (low <= high) {\n    this._map[low++] = dstLow;\n    dstLow = dstLow.substr(0, lastByte) + String.fromCharCode(dstLow.charCodeAt(lastByte) + 1);\n   }\n  },\n  mapBfRangeToArray: function (low, high, array) {\n   var i = 0, ii = array.length;\n   while (low <= high && i < ii) {\n    this._map[low] = array[i++];\n    ++low;\n   }\n  },\n  mapOne: function (src, dst) {\n   this._map[src] = dst;\n  },\n  lookup: function (code) {\n   return this._map[code];\n  },\n  contains: function (code) {\n   return this._map[code] !== undefined;\n  },\n  forEach: function (callback) {\n   var map = this._map;\n   var length = map.length;\n   var i;\n   if (length <= 0x10000) {\n    for (i = 0; i < length; i++) {\n     if (map[i] !== undefined) {\n      callback(i, map[i]);\n     }\n    }\n   } else {\n    for (i in this._map) {\n     callback(i, map[i]);\n    }\n   }\n  },\n  charCodeOf: function (value) {\n   return this._map.indexOf(value);\n  },\n  getMap: function () {\n   return this._map;\n  },\n  readCharCode: function (str, offset, out) {\n   var c = 0;\n   var codespaceRanges = this.codespaceRanges;\n   var codespaceRangesLen = this.codespaceRanges.length;\n   for (var n = 0; n < codespaceRangesLen; n++) {\n    c = (c << 8 | str.charCodeAt(offset + n)) >>> 0;\n    var codespaceRange = codespaceRanges[n];\n    for (var k = 0, kk = codespaceRange.length; k < kk;) {\n     var low = codespaceRange[k++];\n     var high = codespaceRange[k++];\n     if (c >= low && c <= high) {\n      out.charcode = c;\n      out.length = n + 1;\n      return;\n     }\n    }\n   }\n   out.charcode = 0;\n   out.length = 1;\n  },\n  get length() {\n   return this._map.length;\n  },\n  get isIdentityCMap() {\n   if (!(this.name === 'Identity-H' || this.name === 'Identity-V')) {\n    return false;\n   }\n   if (this._map.length !== 0x10000) {\n    return false;\n   }\n   for (var i = 0; i < 0x10000; i++) {\n    if (this._map[i] !== i) {\n     return false;\n    }\n   }\n   return true;\n  }\n };\n return CMap;\n}();\nvar IdentityCMap = function IdentityCMapClosure() {\n function IdentityCMap(vertical, n) {\n  CMap.call(this);\n  this.vertical = vertical;\n  this.addCodespaceRange(n, 0, 0xffff);\n }\n Util.inherit(IdentityCMap, CMap, {});\n IdentityCMap.prototype = {\n  addCodespaceRange: CMap.prototype.addCodespaceRange,\n  mapCidRange: function (low, high, dstLow) {\n   error('should not call mapCidRange');\n  },\n  mapBfRange: function (low, high, dstLow) {\n   error('should not call mapBfRange');\n  },\n  mapBfRangeToArray: function (low, high, array) {\n   error('should not call mapBfRangeToArray');\n  },\n  mapOne: function (src, dst) {\n   error('should not call mapCidOne');\n  },\n  lookup: function (code) {\n   return isInt(code) && code <= 0xffff ? code : undefined;\n  },\n  contains: function (code) {\n   return isInt(code) && code <= 0xffff;\n  },\n  forEach: function (callback) {\n   for (var i = 0; i <= 0xffff; i++) {\n    callback(i, i);\n   }\n  },\n  charCodeOf: function (value) {\n   return isInt(value) && value <= 0xffff ? value : -1;\n  },\n  getMap: function () {\n   var map = new Array(0x10000);\n   for (var i = 0; i <= 0xffff; i++) {\n    map[i] = i;\n   }\n   return map;\n  },\n  readCharCode: CMap.prototype.readCharCode,\n  get length() {\n   return 0x10000;\n  },\n  get isIdentityCMap() {\n   error('should not access .isIdentityCMap');\n  }\n };\n return IdentityCMap;\n}();\nvar BinaryCMapReader = function BinaryCMapReaderClosure() {\n function hexToInt(a, size) {\n  var n = 0;\n  for (var i = 0; i <= size; i++) {\n   n = n << 8 | a[i];\n  }\n  return n >>> 0;\n }\n function hexToStr(a, size) {\n  if (size === 1) {\n   return String.fromCharCode(a[0], a[1]);\n  }\n  if (size === 3) {\n   return String.fromCharCode(a[0], a[1], a[2], a[3]);\n  }\n  return String.fromCharCode.apply(null, a.subarray(0, size + 1));\n }\n function addHex(a, b, size) {\n  var c = 0;\n  for (var i = size; i >= 0; i--) {\n   c += a[i] + b[i];\n   a[i] = c & 255;\n   c >>= 8;\n  }\n }\n function incHex(a, size) {\n  var c = 1;\n  for (var i = size; i >= 0 && c > 0; i--) {\n   c += a[i];\n   a[i] = c & 255;\n   c >>= 8;\n  }\n }\n var MAX_NUM_SIZE = 16;\n var MAX_ENCODED_NUM_SIZE = 19;\n function BinaryCMapStream(data) {\n  this.buffer = data;\n  this.pos = 0;\n  this.end = data.length;\n  this.tmpBuf = new Uint8Array(MAX_ENCODED_NUM_SIZE);\n }\n BinaryCMapStream.prototype = {\n  readByte: function () {\n   if (this.pos >= this.end) {\n    return -1;\n   }\n   return this.buffer[this.pos++];\n  },\n  readNumber: function () {\n   var n = 0;\n   var last;\n   do {\n    var b = this.readByte();\n    if (b < 0) {\n     error('unexpected EOF in bcmap');\n    }\n    last = !(b & 0x80);\n    n = n << 7 | b & 0x7F;\n   } while (!last);\n   return n;\n  },\n  readSigned: function () {\n   var n = this.readNumber();\n   return n & 1 ? ~(n >>> 1) : n >>> 1;\n  },\n  readHex: function (num, size) {\n   num.set(this.buffer.subarray(this.pos, this.pos + size + 1));\n   this.pos += size + 1;\n  },\n  readHexNumber: function (num, size) {\n   var last;\n   var stack = this.tmpBuf, sp = 0;\n   do {\n    var b = this.readByte();\n    if (b < 0) {\n     error('unexpected EOF in bcmap');\n    }\n    last = !(b & 0x80);\n    stack[sp++] = b & 0x7F;\n   } while (!last);\n   var i = size, buffer = 0, bufferSize = 0;\n   while (i >= 0) {\n    while (bufferSize < 8 && stack.length > 0) {\n     buffer = stack[--sp] << bufferSize | buffer;\n     bufferSize += 7;\n    }\n    num[i] = buffer & 255;\n    i--;\n    buffer >>= 8;\n    bufferSize -= 8;\n   }\n  },\n  readHexSigned: function (num, size) {\n   this.readHexNumber(num, size);\n   var sign = num[size] & 1 ? 255 : 0;\n   var c = 0;\n   for (var i = 0; i <= size; i++) {\n    c = (c & 1) << 8 | num[i];\n    num[i] = c >> 1 ^ sign;\n   }\n  },\n  readString: function () {\n   var len = this.readNumber();\n   var s = '';\n   for (var i = 0; i < len; i++) {\n    s += String.fromCharCode(this.readNumber());\n   }\n   return s;\n  }\n };\n function processBinaryCMap(data, cMap, extend) {\n  return new Promise(function (resolve, reject) {\n   var stream = new BinaryCMapStream(data);\n   var header = stream.readByte();\n   cMap.vertical = !!(header & 1);\n   var useCMap = null;\n   var start = new Uint8Array(MAX_NUM_SIZE);\n   var end = new Uint8Array(MAX_NUM_SIZE);\n   var char = new Uint8Array(MAX_NUM_SIZE);\n   var charCode = new Uint8Array(MAX_NUM_SIZE);\n   var tmp = new Uint8Array(MAX_NUM_SIZE);\n   var code;\n   var b;\n   while ((b = stream.readByte()) >= 0) {\n    var type = b >> 5;\n    if (type === 7) {\n     switch (b & 0x1F) {\n     case 0:\n      stream.readString();\n      break;\n     case 1:\n      useCMap = stream.readString();\n      break;\n     }\n     continue;\n    }\n    var sequence = !!(b & 0x10);\n    var dataSize = b & 15;\n    assert(dataSize + 1 <= MAX_NUM_SIZE);\n    var ucs2DataSize = 1;\n    var subitemsCount = stream.readNumber();\n    var i;\n    switch (type) {\n    case 0:\n     stream.readHex(start, dataSize);\n     stream.readHexNumber(end, dataSize);\n     addHex(end, start, dataSize);\n     cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n     for (i = 1; i < subitemsCount; i++) {\n      incHex(end, dataSize);\n      stream.readHexNumber(start, dataSize);\n      addHex(start, end, dataSize);\n      stream.readHexNumber(end, dataSize);\n      addHex(end, start, dataSize);\n      cMap.addCodespaceRange(dataSize + 1, hexToInt(start, dataSize), hexToInt(end, dataSize));\n     }\n     break;\n    case 1:\n     stream.readHex(start, dataSize);\n     stream.readHexNumber(end, dataSize);\n     addHex(end, start, dataSize);\n     code = stream.readNumber();\n     for (i = 1; i < subitemsCount; i++) {\n      incHex(end, dataSize);\n      stream.readHexNumber(start, dataSize);\n      addHex(start, end, dataSize);\n      stream.readHexNumber(end, dataSize);\n      addHex(end, start, dataSize);\n      code = stream.readNumber();\n     }\n     break;\n    case 2:\n     stream.readHex(char, dataSize);\n     code = stream.readNumber();\n     cMap.mapOne(hexToInt(char, dataSize), code);\n     for (i = 1; i < subitemsCount; i++) {\n      incHex(char, dataSize);\n      if (!sequence) {\n       stream.readHexNumber(tmp, dataSize);\n       addHex(char, tmp, dataSize);\n      }\n      code = stream.readSigned() + (code + 1);\n      cMap.mapOne(hexToInt(char, dataSize), code);\n     }\n     break;\n    case 3:\n     stream.readHex(start, dataSize);\n     stream.readHexNumber(end, dataSize);\n     addHex(end, start, dataSize);\n     code = stream.readNumber();\n     cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n     for (i = 1; i < subitemsCount; i++) {\n      incHex(end, dataSize);\n      if (!sequence) {\n       stream.readHexNumber(start, dataSize);\n       addHex(start, end, dataSize);\n      } else {\n       start.set(end);\n      }\n      stream.readHexNumber(end, dataSize);\n      addHex(end, start, dataSize);\n      code = stream.readNumber();\n      cMap.mapCidRange(hexToInt(start, dataSize), hexToInt(end, dataSize), code);\n     }\n     break;\n    case 4:\n     stream.readHex(char, ucs2DataSize);\n     stream.readHex(charCode, dataSize);\n     cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n     for (i = 1; i < subitemsCount; i++) {\n      incHex(char, ucs2DataSize);\n      if (!sequence) {\n       stream.readHexNumber(tmp, ucs2DataSize);\n       addHex(char, tmp, ucs2DataSize);\n      }\n      incHex(charCode, dataSize);\n      stream.readHexSigned(tmp, dataSize);\n      addHex(charCode, tmp, dataSize);\n      cMap.mapOne(hexToInt(char, ucs2DataSize), hexToStr(charCode, dataSize));\n     }\n     break;\n    case 5:\n     stream.readHex(start, ucs2DataSize);\n     stream.readHexNumber(end, ucs2DataSize);\n     addHex(end, start, ucs2DataSize);\n     stream.readHex(charCode, dataSize);\n     cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n     for (i = 1; i < subitemsCount; i++) {\n      incHex(end, ucs2DataSize);\n      if (!sequence) {\n       stream.readHexNumber(start, ucs2DataSize);\n       addHex(start, end, ucs2DataSize);\n      } else {\n       start.set(end);\n      }\n      stream.readHexNumber(end, ucs2DataSize);\n      addHex(end, start, ucs2DataSize);\n      stream.readHex(charCode, dataSize);\n      cMap.mapBfRange(hexToInt(start, ucs2DataSize), hexToInt(end, ucs2DataSize), hexToStr(charCode, dataSize));\n     }\n     break;\n    default:\n     reject(new Error('processBinaryCMap: Unknown type: ' + type));\n     return;\n    }\n   }\n   if (useCMap) {\n    resolve(extend(useCMap));\n    return;\n   }\n   resolve(cMap);\n  });\n }\n function BinaryCMapReader() {\n }\n BinaryCMapReader.prototype = { process: processBinaryCMap };\n return BinaryCMapReader;\n}();\nvar CMapFactory = function CMapFactoryClosure() {\n function strToInt(str) {\n  var a = 0;\n  for (var i = 0; i < str.length; i++) {\n   a = a << 8 | str.charCodeAt(i);\n  }\n  return a >>> 0;\n }\n function expectString(obj) {\n  if (!isString(obj)) {\n   error('Malformed CMap: expected string.');\n  }\n }\n function expectInt(obj) {\n  if (!isInt(obj)) {\n   error('Malformed CMap: expected int.');\n  }\n }\n function parseBfChar(cMap, lexer) {\n  while (true) {\n   var obj = lexer.getObj();\n   if (isEOF(obj)) {\n    break;\n   }\n   if (isCmd(obj, 'endbfchar')) {\n    return;\n   }\n   expectString(obj);\n   var src = strToInt(obj);\n   obj = lexer.getObj();\n   expectString(obj);\n   var dst = obj;\n   cMap.mapOne(src, dst);\n  }\n }\n function parseBfRange(cMap, lexer) {\n  while (true) {\n   var obj = lexer.getObj();\n   if (isEOF(obj)) {\n    break;\n   }\n   if (isCmd(obj, 'endbfrange')) {\n    return;\n   }\n   expectString(obj);\n   var low = strToInt(obj);\n   obj = lexer.getObj();\n   expectString(obj);\n   var high = strToInt(obj);\n   obj = lexer.getObj();\n   if (isInt(obj) || isString(obj)) {\n    var dstLow = isInt(obj) ? String.fromCharCode(obj) : obj;\n    cMap.mapBfRange(low, high, dstLow);\n   } else if (isCmd(obj, '[')) {\n    obj = lexer.getObj();\n    var array = [];\n    while (!isCmd(obj, ']') && !isEOF(obj)) {\n     array.push(obj);\n     obj = lexer.getObj();\n    }\n    cMap.mapBfRangeToArray(low, high, array);\n   } else {\n    break;\n   }\n  }\n  error('Invalid bf range.');\n }\n function parseCidChar(cMap, lexer) {\n  while (true) {\n   var obj = lexer.getObj();\n   if (isEOF(obj)) {\n    break;\n   }\n   if (isCmd(obj, 'endcidchar')) {\n    return;\n   }\n   expectString(obj);\n   var src = strToInt(obj);\n   obj = lexer.getObj();\n   expectInt(obj);\n   var dst = obj;\n   cMap.mapOne(src, dst);\n  }\n }\n function parseCidRange(cMap, lexer) {\n  while (true) {\n   var obj = lexer.getObj();\n   if (isEOF(obj)) {\n    break;\n   }\n   if (isCmd(obj, 'endcidrange')) {\n    return;\n   }\n   expectString(obj);\n   var low = strToInt(obj);\n   obj = lexer.getObj();\n   expectString(obj);\n   var high = strToInt(obj);\n   obj = lexer.getObj();\n   expectInt(obj);\n   var dstLow = obj;\n   cMap.mapCidRange(low, high, dstLow);\n  }\n }\n function parseCodespaceRange(cMap, lexer) {\n  while (true) {\n   var obj = lexer.getObj();\n   if (isEOF(obj)) {\n    break;\n   }\n   if (isCmd(obj, 'endcodespacerange')) {\n    return;\n   }\n   if (!isString(obj)) {\n    break;\n   }\n   var low = strToInt(obj);\n   obj = lexer.getObj();\n   if (!isString(obj)) {\n    break;\n   }\n   var high = strToInt(obj);\n   cMap.addCodespaceRange(obj.length, low, high);\n  }\n  error('Invalid codespace range.');\n }\n function parseWMode(cMap, lexer) {\n  var obj = lexer.getObj();\n  if (isInt(obj)) {\n   cMap.vertical = !!obj;\n  }\n }\n function parseCMapName(cMap, lexer) {\n  var obj = lexer.getObj();\n  if (isName(obj) && isString(obj.name)) {\n   cMap.name = obj.name;\n  }\n }\n function parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap) {\n  var previous;\n  var embededUseCMap;\n  objLoop:\n   while (true) {\n    try {\n     var obj = lexer.getObj();\n     if (isEOF(obj)) {\n      break;\n     } else if (isName(obj)) {\n      if (obj.name === 'WMode') {\n       parseWMode(cMap, lexer);\n      } else if (obj.name === 'CMapName') {\n       parseCMapName(cMap, lexer);\n      }\n      previous = obj;\n     } else if (isCmd(obj)) {\n      switch (obj.cmd) {\n      case 'endcmap':\n       break objLoop;\n      case 'usecmap':\n       if (isName(previous)) {\n        embededUseCMap = previous.name;\n       }\n       break;\n      case 'begincodespacerange':\n       parseCodespaceRange(cMap, lexer);\n       break;\n      case 'beginbfchar':\n       parseBfChar(cMap, lexer);\n       break;\n      case 'begincidchar':\n       parseCidChar(cMap, lexer);\n       break;\n      case 'beginbfrange':\n       parseBfRange(cMap, lexer);\n       break;\n      case 'begincidrange':\n       parseCidRange(cMap, lexer);\n       break;\n      }\n     }\n    } catch (ex) {\n     if (ex instanceof MissingDataException) {\n      throw ex;\n     }\n     warn('Invalid cMap data: ' + ex);\n     continue;\n    }\n   }\n  if (!useCMap && embededUseCMap) {\n   useCMap = embededUseCMap;\n  }\n  if (useCMap) {\n   return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n  }\n  return Promise.resolve(cMap);\n }\n function extendCMap(cMap, fetchBuiltInCMap, useCMap) {\n  return createBuiltInCMap(useCMap, fetchBuiltInCMap).then(function (newCMap) {\n   cMap.useCMap = newCMap;\n   if (cMap.numCodespaceRanges === 0) {\n    var useCodespaceRanges = cMap.useCMap.codespaceRanges;\n    for (var i = 0; i < useCodespaceRanges.length; i++) {\n     cMap.codespaceRanges[i] = useCodespaceRanges[i].slice();\n    }\n    cMap.numCodespaceRanges = cMap.useCMap.numCodespaceRanges;\n   }\n   cMap.useCMap.forEach(function (key, value) {\n    if (!cMap.contains(key)) {\n     cMap.mapOne(key, cMap.useCMap.lookup(key));\n    }\n   });\n   return cMap;\n  });\n }\n function createBuiltInCMap(name, fetchBuiltInCMap) {\n  if (name === 'Identity-H') {\n   return Promise.resolve(new IdentityCMap(false, 2));\n  } else if (name === 'Identity-V') {\n   return Promise.resolve(new IdentityCMap(true, 2));\n  }\n  if (BUILT_IN_CMAPS.indexOf(name) === -1) {\n   return Promise.reject(new Error('Unknown cMap name: ' + name));\n  }\n  assert(fetchBuiltInCMap, 'Built-in CMap parameters are not provided.');\n  return fetchBuiltInCMap(name).then(function (data) {\n   var cMapData = data.cMapData, compressionType = data.compressionType;\n   var cMap = new CMap(true);\n   if (compressionType === CMapCompressionType.BINARY) {\n    return new BinaryCMapReader().process(cMapData, cMap, function (useCMap) {\n     return extendCMap(cMap, fetchBuiltInCMap, useCMap);\n    });\n   }\n   assert(compressionType === CMapCompressionType.NONE, 'TODO: Only BINARY/NONE CMap compression is currently supported.');\n   var lexer = new Lexer(new Stream(cMapData));\n   return parseCMap(cMap, lexer, fetchBuiltInCMap, null);\n  });\n }\n return {\n  create: function (params) {\n   var encoding = params.encoding;\n   var fetchBuiltInCMap = params.fetchBuiltInCMap;\n   var useCMap = params.useCMap;\n   if (isName(encoding)) {\n    return createBuiltInCMap(encoding.name, fetchBuiltInCMap);\n   } else if (isStream(encoding)) {\n    var cMap = new CMap();\n    var lexer = new Lexer(encoding);\n    return parseCMap(cMap, lexer, fetchBuiltInCMap, useCMap).then(function (parsedCMap) {\n     if (parsedCMap.isIdentityCMap) {\n      return createBuiltInCMap(parsedCMap.name, fetchBuiltInCMap);\n     }\n     return parsedCMap;\n    });\n   }\n   return Promise.reject(new Error('Encoding required.'));\n  }\n };\n}();\nexports.CMap = CMap;\nexports.CMapFactory = CMapFactory;\nexports.IdentityCMap = IdentityCMap;\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar coreStream = __w_pdfjs_require__(2);\nvar coreObj = __w_pdfjs_require__(16);\nvar coreParser = __w_pdfjs_require__(5);\nvar coreCrypto = __w_pdfjs_require__(13);\nvar coreEvaluator = __w_pdfjs_require__(14);\nvar coreAnnotation = __w_pdfjs_require__(20);\nvar OPS = sharedUtil.OPS;\nvar MissingDataException = sharedUtil.MissingDataException;\nvar Util = sharedUtil.Util;\nvar assert = sharedUtil.assert;\nvar error = sharedUtil.error;\nvar info = sharedUtil.info;\nvar isArray = sharedUtil.isArray;\nvar isArrayBuffer = sharedUtil.isArrayBuffer;\nvar isNum = sharedUtil.isNum;\nvar isString = sharedUtil.isString;\nvar shadow = sharedUtil.shadow;\nvar stringToBytes = sharedUtil.stringToBytes;\nvar stringToPDFString = sharedUtil.stringToPDFString;\nvar warn = sharedUtil.warn;\nvar isSpace = sharedUtil.isSpace;\nvar Dict = corePrimitives.Dict;\nvar isDict = corePrimitives.isDict;\nvar isName = corePrimitives.isName;\nvar isStream = corePrimitives.isStream;\nvar NullStream = coreStream.NullStream;\nvar Stream = coreStream.Stream;\nvar StreamsSequenceStream = coreStream.StreamsSequenceStream;\nvar Catalog = coreObj.Catalog;\nvar ObjectLoader = coreObj.ObjectLoader;\nvar XRef = coreObj.XRef;\nvar Linearization = coreParser.Linearization;\nvar calculateMD5 = coreCrypto.calculateMD5;\nvar OperatorList = coreEvaluator.OperatorList;\nvar PartialEvaluator = coreEvaluator.PartialEvaluator;\nvar AnnotationFactory = coreAnnotation.AnnotationFactory;\nvar Page = function PageClosure() {\n var DEFAULT_USER_UNIT = 1.0;\n var LETTER_SIZE_MEDIABOX = [\n  0,\n  0,\n  612,\n  792\n ];\n function isAnnotationRenderable(annotation, intent) {\n  return intent === 'display' && annotation.viewable || intent === 'print' && annotation.printable;\n }\n function Page(pdfManager, xref, pageIndex, pageDict, ref, fontCache, builtInCMapCache) {\n  this.pdfManager = pdfManager;\n  this.pageIndex = pageIndex;\n  this.pageDict = pageDict;\n  this.xref = xref;\n  this.ref = ref;\n  this.fontCache = fontCache;\n  this.builtInCMapCache = builtInCMapCache;\n  this.evaluatorOptions = pdfManager.evaluatorOptions;\n  this.resourcesPromise = null;\n  var uniquePrefix = 'p' + this.pageIndex + '_';\n  var idCounters = { obj: 0 };\n  this.idFactory = {\n   createObjId: function () {\n    return uniquePrefix + ++idCounters.obj;\n   }\n  };\n }\n Page.prototype = {\n  getPageProp: function Page_getPageProp(key) {\n   return this.pageDict.get(key);\n  },\n  getInheritedPageProp: function Page_getInheritedPageProp(key, getArray) {\n   var dict = this.pageDict, valueArray = null, loopCount = 0;\n   var MAX_LOOP_COUNT = 100;\n   getArray = getArray || false;\n   while (dict) {\n    var value = getArray ? dict.getArray(key) : dict.get(key);\n    if (value !== undefined) {\n     if (!valueArray) {\n      valueArray = [];\n     }\n     valueArray.push(value);\n    }\n    if (++loopCount > MAX_LOOP_COUNT) {\n     warn('getInheritedPageProp: maximum loop count exceeded for ' + key);\n     return valueArray ? valueArray[0] : undefined;\n    }\n    dict = dict.get('Parent');\n   }\n   if (!valueArray) {\n    return undefined;\n   }\n   if (valueArray.length === 1 || !isDict(valueArray[0])) {\n    return valueArray[0];\n   }\n   return Dict.merge(this.xref, valueArray);\n  },\n  get content() {\n   return this.getPageProp('Contents');\n  },\n  get resources() {\n   return shadow(this, 'resources', this.getInheritedPageProp('Resources') || Dict.empty);\n  },\n  get mediaBox() {\n   var mediaBox = this.getInheritedPageProp('MediaBox', true);\n   if (!isArray(mediaBox) || mediaBox.length !== 4) {\n    return shadow(this, 'mediaBox', LETTER_SIZE_MEDIABOX);\n   }\n   return shadow(this, 'mediaBox', mediaBox);\n  },\n  get cropBox() {\n   var cropBox = this.getInheritedPageProp('CropBox', true);\n   if (!isArray(cropBox) || cropBox.length !== 4) {\n    return shadow(this, 'cropBox', this.mediaBox);\n   }\n   return shadow(this, 'cropBox', cropBox);\n  },\n  get userUnit() {\n   var obj = this.getPageProp('UserUnit');\n   if (!isNum(obj) || obj <= 0) {\n    obj = DEFAULT_USER_UNIT;\n   }\n   return shadow(this, 'userUnit', obj);\n  },\n  get view() {\n   var mediaBox = this.mediaBox, cropBox = this.cropBox;\n   if (mediaBox === cropBox) {\n    return shadow(this, 'view', mediaBox);\n   }\n   var intersection = Util.intersect(cropBox, mediaBox);\n   return shadow(this, 'view', intersection || mediaBox);\n  },\n  get rotate() {\n   var rotate = this.getInheritedPageProp('Rotate') || 0;\n   if (rotate % 90 !== 0) {\n    rotate = 0;\n   } else if (rotate >= 360) {\n    rotate = rotate % 360;\n   } else if (rotate < 0) {\n    rotate = (rotate % 360 + 360) % 360;\n   }\n   return shadow(this, 'rotate', rotate);\n  },\n  getContentStream: function Page_getContentStream() {\n   var content = this.content;\n   var stream;\n   if (isArray(content)) {\n    var xref = this.xref;\n    var i, n = content.length;\n    var streams = [];\n    for (i = 0; i < n; ++i) {\n     streams.push(xref.fetchIfRef(content[i]));\n    }\n    stream = new StreamsSequenceStream(streams);\n   } else if (isStream(content)) {\n    stream = content;\n   } else {\n    stream = new NullStream();\n   }\n   return stream;\n  },\n  loadResources: function Page_loadResources(keys) {\n   if (!this.resourcesPromise) {\n    this.resourcesPromise = this.pdfManager.ensure(this, 'resources');\n   }\n   return this.resourcesPromise.then(function resourceSuccess() {\n    var objectLoader = new ObjectLoader(this.resources.map, keys, this.xref);\n    return objectLoader.load();\n   }.bind(this));\n  },\n  getOperatorList: function Page_getOperatorList(handler, task, intent, renderInteractiveForms) {\n   var self = this;\n   var pdfManager = this.pdfManager;\n   var contentStreamPromise = pdfManager.ensure(this, 'getContentStream', []);\n   var resourcesPromise = this.loadResources([\n    'ExtGState',\n    'ColorSpace',\n    'Pattern',\n    'Shading',\n    'XObject',\n    'Font'\n   ]);\n   var partialEvaluator = new PartialEvaluator(pdfManager, this.xref, handler, this.pageIndex, this.idFactory, this.fontCache, this.builtInCMapCache, this.evaluatorOptions);\n   var dataPromises = Promise.all([\n    contentStreamPromise,\n    resourcesPromise\n   ]);\n   var pageListPromise = dataPromises.then(function (data) {\n    var contentStream = data[0];\n    var opList = new OperatorList(intent, handler, self.pageIndex);\n    handler.send('StartRenderPage', {\n     transparency: partialEvaluator.hasBlendModes(self.resources),\n     pageIndex: self.pageIndex,\n     intent: intent\n    });\n    return partialEvaluator.getOperatorList(contentStream, task, self.resources, opList).then(function () {\n     return opList;\n    });\n   });\n   var annotationsPromise = pdfManager.ensure(this, 'annotations');\n   return Promise.all([\n    pageListPromise,\n    annotationsPromise\n   ]).then(function (datas) {\n    var pageOpList = datas[0];\n    var annotations = datas[1];\n    if (annotations.length === 0) {\n     pageOpList.flush(true);\n     return pageOpList;\n    }\n    var i, ii, opListPromises = [];\n    for (i = 0, ii = annotations.length; i < ii; i++) {\n     if (isAnnotationRenderable(annotations[i], intent)) {\n      opListPromises.push(annotations[i].getOperatorList(partialEvaluator, task, renderInteractiveForms));\n     }\n    }\n    return Promise.all(opListPromises).then(function (opLists) {\n     pageOpList.addOp(OPS.beginAnnotations, []);\n     for (i = 0, ii = opLists.length; i < ii; i++) {\n      pageOpList.addOpList(opLists[i]);\n     }\n     pageOpList.addOp(OPS.endAnnotations, []);\n     pageOpList.flush(true);\n     return pageOpList;\n    });\n   });\n  },\n  extractTextContent: function Page_extractTextContent(task, normalizeWhitespace, combineTextItems) {\n   var handler = {\n    on: function nullHandlerOn() {\n    },\n    send: function nullHandlerSend() {\n    }\n   };\n   var self = this;\n   var pdfManager = this.pdfManager;\n   var contentStreamPromise = pdfManager.ensure(this, 'getContentStream', []);\n   var resourcesPromise = this.loadResources([\n    'ExtGState',\n    'XObject',\n    'Font'\n   ]);\n   var dataPromises = Promise.all([\n    contentStreamPromise,\n    resourcesPromise\n   ]);\n   return dataPromises.then(function (data) {\n    var contentStream = data[0];\n    var partialEvaluator = new PartialEvaluator(pdfManager, self.xref, handler, self.pageIndex, self.idFactory, self.fontCache, self.builtInCMapCache, self.evaluatorOptions);\n    return partialEvaluator.getTextContent(contentStream, task, self.resources, null, normalizeWhitespace, combineTextItems);\n   });\n  },\n  getAnnotationsData: function Page_getAnnotationsData(intent) {\n   var annotations = this.annotations;\n   var annotationsData = [];\n   for (var i = 0, n = annotations.length; i < n; ++i) {\n    if (!intent || isAnnotationRenderable(annotations[i], intent)) {\n     annotationsData.push(annotations[i].data);\n    }\n   }\n   return annotationsData;\n  },\n  get annotations() {\n   var annotations = [];\n   var annotationRefs = this.getInheritedPageProp('Annots') || [];\n   var annotationFactory = new AnnotationFactory();\n   for (var i = 0, n = annotationRefs.length; i < n; ++i) {\n    var annotationRef = annotationRefs[i];\n    var annotation = annotationFactory.create(this.xref, annotationRef, this.pdfManager, this.idFactory);\n    if (annotation) {\n     annotations.push(annotation);\n    }\n   }\n   return shadow(this, 'annotations', annotations);\n  }\n };\n return Page;\n}();\nvar PDFDocument = function PDFDocumentClosure() {\n var FINGERPRINT_FIRST_BYTES = 1024;\n var EMPTY_FINGERPRINT = '\\x00\\x00\\x00\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00\\x00';\n function PDFDocument(pdfManager, arg) {\n  var stream;\n  if (isStream(arg)) {\n   stream = arg;\n  } else if (isArrayBuffer(arg)) {\n   stream = new Stream(arg);\n  } else {\n   error('PDFDocument: Unknown argument type');\n  }\n  assert(stream.length > 0, 'stream must have data');\n  this.pdfManager = pdfManager;\n  this.stream = stream;\n  this.xref = new XRef(stream, pdfManager);\n }\n function find(stream, needle, limit, backwards) {\n  var pos = stream.pos;\n  var end = stream.end;\n  var strBuf = [];\n  if (pos + limit > end) {\n   limit = end - pos;\n  }\n  for (var n = 0; n < limit; ++n) {\n   strBuf.push(String.fromCharCode(stream.getByte()));\n  }\n  var str = strBuf.join('');\n  stream.pos = pos;\n  var index = backwards ? str.lastIndexOf(needle) : str.indexOf(needle);\n  if (index === -1) {\n   return false;\n  }\n  stream.pos += index;\n  return true;\n }\n var DocumentInfoValidators = {\n  get entries() {\n   return shadow(this, 'entries', {\n    Title: isString,\n    Author: isString,\n    Subject: isString,\n    Keywords: isString,\n    Creator: isString,\n    Producer: isString,\n    CreationDate: isString,\n    ModDate: isString,\n    Trapped: isName\n   });\n  }\n };\n PDFDocument.prototype = {\n  parse: function PDFDocument_parse(recoveryMode) {\n   this.setup(recoveryMode);\n   var version = this.catalog.catDict.get('Version');\n   if (isName(version)) {\n    this.pdfFormatVersion = version.name;\n   }\n   try {\n    this.acroForm = this.catalog.catDict.get('AcroForm');\n    if (this.acroForm) {\n     this.xfa = this.acroForm.get('XFA');\n     var fields = this.acroForm.get('Fields');\n     if ((!fields || !isArray(fields) || fields.length === 0) && !this.xfa) {\n      this.acroForm = null;\n     }\n    }\n   } catch (ex) {\n    info('Something wrong with AcroForm entry');\n    this.acroForm = null;\n   }\n  },\n  get linearization() {\n   var linearization = null;\n   if (this.stream.length) {\n    try {\n     linearization = Linearization.create(this.stream);\n    } catch (err) {\n     if (err instanceof MissingDataException) {\n      throw err;\n     }\n     info(err);\n    }\n   }\n   return shadow(this, 'linearization', linearization);\n  },\n  get startXRef() {\n   var stream = this.stream;\n   var startXRef = 0;\n   var linearization = this.linearization;\n   if (linearization) {\n    stream.reset();\n    if (find(stream, 'endobj', 1024)) {\n     startXRef = stream.pos + 6;\n    }\n   } else {\n    var step = 1024;\n    var found = false, pos = stream.end;\n    while (!found && pos > 0) {\n     pos -= step - 'startxref'.length;\n     if (pos < 0) {\n      pos = 0;\n     }\n     stream.pos = pos;\n     found = find(stream, 'startxref', step, true);\n    }\n    if (found) {\n     stream.skip(9);\n     var ch;\n     do {\n      ch = stream.getByte();\n     } while (isSpace(ch));\n     var str = '';\n     while (ch >= 0x20 && ch <= 0x39) {\n      str += String.fromCharCode(ch);\n      ch = stream.getByte();\n     }\n     startXRef = parseInt(str, 10);\n     if (isNaN(startXRef)) {\n      startXRef = 0;\n     }\n    }\n   }\n   return shadow(this, 'startXRef', startXRef);\n  },\n  get mainXRefEntriesOffset() {\n   var mainXRefEntriesOffset = 0;\n   var linearization = this.linearization;\n   if (linearization) {\n    mainXRefEntriesOffset = linearization.mainXRefEntriesOffset;\n   }\n   return shadow(this, 'mainXRefEntriesOffset', mainXRefEntriesOffset);\n  },\n  checkHeader: function PDFDocument_checkHeader() {\n   var stream = this.stream;\n   stream.reset();\n   if (find(stream, '%PDF-', 1024)) {\n    stream.moveStart();\n    var MAX_VERSION_LENGTH = 12;\n    var version = '', ch;\n    while ((ch = stream.getByte()) > 0x20) {\n     if (version.length >= MAX_VERSION_LENGTH) {\n      break;\n     }\n     version += String.fromCharCode(ch);\n    }\n    if (!this.pdfFormatVersion) {\n     this.pdfFormatVersion = version.substring(5);\n    }\n    return;\n   }\n  },\n  parseStartXRef: function PDFDocument_parseStartXRef() {\n   var startXRef = this.startXRef;\n   this.xref.setStartXRef(startXRef);\n  },\n  setup: function PDFDocument_setup(recoveryMode) {\n   this.xref.parse(recoveryMode);\n   var self = this;\n   var pageFactory = {\n    createPage: function (pageIndex, dict, ref, fontCache, builtInCMapCache) {\n     return new Page(self.pdfManager, self.xref, pageIndex, dict, ref, fontCache, builtInCMapCache);\n    }\n   };\n   this.catalog = new Catalog(this.pdfManager, this.xref, pageFactory);\n  },\n  get numPages() {\n   var linearization = this.linearization;\n   var num = linearization ? linearization.numPages : this.catalog.numPages;\n   return shadow(this, 'numPages', num);\n  },\n  get documentInfo() {\n   var docInfo = {\n    PDFFormatVersion: this.pdfFormatVersion,\n    IsAcroFormPresent: !!this.acroForm,\n    IsXFAPresent: !!this.xfa\n   };\n   var infoDict;\n   try {\n    infoDict = this.xref.trailer.get('Info');\n   } catch (err) {\n    info('The document information dictionary is invalid.');\n   }\n   if (infoDict) {\n    var validEntries = DocumentInfoValidators.entries;\n    for (var key in validEntries) {\n     if (infoDict.has(key)) {\n      var value = infoDict.get(key);\n      if (validEntries[key](value)) {\n       docInfo[key] = typeof value !== 'string' ? value : stringToPDFString(value);\n      } else {\n       info('Bad value in document info for \"' + key + '\"');\n      }\n     }\n    }\n   }\n   return shadow(this, 'documentInfo', docInfo);\n  },\n  get fingerprint() {\n   var xref = this.xref, hash, fileID = '';\n   var idArray = xref.trailer.get('ID');\n   if (idArray && isArray(idArray) && idArray[0] && isString(idArray[0]) && idArray[0] !== EMPTY_FINGERPRINT) {\n    hash = stringToBytes(idArray[0]);\n   } else {\n    if (this.stream.ensureRange) {\n     this.stream.ensureRange(0, Math.min(FINGERPRINT_FIRST_BYTES, this.stream.end));\n    }\n    hash = calculateMD5(this.stream.bytes.subarray(0, FINGERPRINT_FIRST_BYTES), 0, FINGERPRINT_FIRST_BYTES);\n   }\n   for (var i = 0, n = hash.length; i < n; i++) {\n    var hex = hash[i].toString(16);\n    fileID += hex.length === 1 ? '0' + hex : hex;\n   }\n   return shadow(this, 'fingerprint', fileID);\n  },\n  getPage: function PDFDocument_getPage(pageIndex) {\n   return this.catalog.getPage(pageIndex);\n  },\n  cleanup: function PDFDocument_cleanup() {\n   return this.catalog.cleanup();\n  }\n };\n return PDFDocument;\n}();\nexports.Page = Page;\nexports.PDFDocument = PDFDocument;\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar coreStream = __w_pdfjs_require__(2);\nvar coreGlyphList = __w_pdfjs_require__(7);\nvar coreEncodings = __w_pdfjs_require__(4);\nvar coreCFFParser = __w_pdfjs_require__(11);\nvar Util = sharedUtil.Util;\nvar bytesToString = sharedUtil.bytesToString;\nvar error = sharedUtil.error;\nvar Stream = coreStream.Stream;\nvar getGlyphsUnicode = coreGlyphList.getGlyphsUnicode;\nvar StandardEncoding = coreEncodings.StandardEncoding;\nvar CFFParser = coreCFFParser.CFFParser;\nvar FontRendererFactory = function FontRendererFactoryClosure() {\n function getLong(data, offset) {\n  return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n }\n function getUshort(data, offset) {\n  return data[offset] << 8 | data[offset + 1];\n }\n function parseCmap(data, start, end) {\n  var offset = getUshort(data, start + 2) === 1 ? getLong(data, start + 8) : getLong(data, start + 16);\n  var format = getUshort(data, start + offset);\n  var ranges, p, i;\n  if (format === 4) {\n   getUshort(data, start + offset + 2);\n   var segCount = getUshort(data, start + offset + 6) >> 1;\n   p = start + offset + 14;\n   ranges = [];\n   for (i = 0; i < segCount; i++, p += 2) {\n    ranges[i] = { end: getUshort(data, p) };\n   }\n   p += 2;\n   for (i = 0; i < segCount; i++, p += 2) {\n    ranges[i].start = getUshort(data, p);\n   }\n   for (i = 0; i < segCount; i++, p += 2) {\n    ranges[i].idDelta = getUshort(data, p);\n   }\n   for (i = 0; i < segCount; i++, p += 2) {\n    var idOffset = getUshort(data, p);\n    if (idOffset === 0) {\n     continue;\n    }\n    ranges[i].ids = [];\n    for (var j = 0, jj = ranges[i].end - ranges[i].start + 1; j < jj; j++) {\n     ranges[i].ids[j] = getUshort(data, p + idOffset);\n     idOffset += 2;\n    }\n   }\n   return ranges;\n  } else if (format === 12) {\n   getLong(data, start + offset + 4);\n   var groups = getLong(data, start + offset + 12);\n   p = start + offset + 16;\n   ranges = [];\n   for (i = 0; i < groups; i++) {\n    ranges.push({\n     start: getLong(data, p),\n     end: getLong(data, p + 4),\n     idDelta: getLong(data, p + 8) - getLong(data, p)\n    });\n    p += 12;\n   }\n   return ranges;\n  }\n  error('not supported cmap: ' + format);\n }\n function parseCff(data, start, end, seacAnalysisEnabled) {\n  var properties = {};\n  var parser = new CFFParser(new Stream(data, start, end - start), properties, seacAnalysisEnabled);\n  var cff = parser.parse();\n  return {\n   glyphs: cff.charStrings.objects,\n   subrs: cff.topDict.privateDict && cff.topDict.privateDict.subrsIndex && cff.topDict.privateDict.subrsIndex.objects,\n   gsubrs: cff.globalSubrIndex && cff.globalSubrIndex.objects\n  };\n }\n function parseGlyfTable(glyf, loca, isGlyphLocationsLong) {\n  var itemSize, itemDecode;\n  if (isGlyphLocationsLong) {\n   itemSize = 4;\n   itemDecode = function fontItemDecodeLong(data, offset) {\n    return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n   };\n  } else {\n   itemSize = 2;\n   itemDecode = function fontItemDecode(data, offset) {\n    return data[offset] << 9 | data[offset + 1] << 1;\n   };\n  }\n  var glyphs = [];\n  var startOffset = itemDecode(loca, 0);\n  for (var j = itemSize; j < loca.length; j += itemSize) {\n   var endOffset = itemDecode(loca, j);\n   glyphs.push(glyf.subarray(startOffset, endOffset));\n   startOffset = endOffset;\n  }\n  return glyphs;\n }\n function lookupCmap(ranges, unicode) {\n  var code = unicode.charCodeAt(0), gid = 0;\n  var l = 0, r = ranges.length - 1;\n  while (l < r) {\n   var c = l + r + 1 >> 1;\n   if (code < ranges[c].start) {\n    r = c - 1;\n   } else {\n    l = c;\n   }\n  }\n  if (ranges[l].start <= code && code <= ranges[l].end) {\n   gid = ranges[l].idDelta + (ranges[l].ids ? ranges[l].ids[code - ranges[l].start] : code) & 0xFFFF;\n  }\n  return {\n   charCode: code,\n   glyphId: gid\n  };\n }\n function compileGlyf(code, cmds, font) {\n  function moveTo(x, y) {\n   cmds.push({\n    cmd: 'moveTo',\n    args: [\n     x,\n     y\n    ]\n   });\n  }\n  function lineTo(x, y) {\n   cmds.push({\n    cmd: 'lineTo',\n    args: [\n     x,\n     y\n    ]\n   });\n  }\n  function quadraticCurveTo(xa, ya, x, y) {\n   cmds.push({\n    cmd: 'quadraticCurveTo',\n    args: [\n     xa,\n     ya,\n     x,\n     y\n    ]\n   });\n  }\n  var i = 0;\n  var numberOfContours = (code[i] << 24 | code[i + 1] << 16) >> 16;\n  var flags;\n  var x = 0, y = 0;\n  i += 10;\n  if (numberOfContours < 0) {\n   do {\n    flags = code[i] << 8 | code[i + 1];\n    var glyphIndex = code[i + 2] << 8 | code[i + 3];\n    i += 4;\n    var arg1, arg2;\n    if (flags & 0x01) {\n     arg1 = (code[i] << 24 | code[i + 1] << 16) >> 16;\n     arg2 = (code[i + 2] << 24 | code[i + 3] << 16) >> 16;\n     i += 4;\n    } else {\n     arg1 = code[i++];\n     arg2 = code[i++];\n    }\n    if (flags & 0x02) {\n     x = arg1;\n     y = arg2;\n    } else {\n     x = 0;\n     y = 0;\n    }\n    var scaleX = 1, scaleY = 1, scale01 = 0, scale10 = 0;\n    if (flags & 0x08) {\n     scaleX = scaleY = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n     i += 2;\n    } else if (flags & 0x40) {\n     scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n     scaleY = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n     i += 4;\n    } else if (flags & 0x80) {\n     scaleX = (code[i] << 24 | code[i + 1] << 16) / 1073741824;\n     scale01 = (code[i + 2] << 24 | code[i + 3] << 16) / 1073741824;\n     scale10 = (code[i + 4] << 24 | code[i + 5] << 16) / 1073741824;\n     scaleY = (code[i + 6] << 24 | code[i + 7] << 16) / 1073741824;\n     i += 8;\n    }\n    var subglyph = font.glyphs[glyphIndex];\n    if (subglyph) {\n     cmds.push({ cmd: 'save' });\n     cmds.push({\n      cmd: 'transform',\n      args: [\n       scaleX,\n       scale01,\n       scale10,\n       scaleY,\n       x,\n       y\n      ]\n     });\n     compileGlyf(subglyph, cmds, font);\n     cmds.push({ cmd: 'restore' });\n    }\n   } while (flags & 0x20);\n  } else {\n   var endPtsOfContours = [];\n   var j, jj;\n   for (j = 0; j < numberOfContours; j++) {\n    endPtsOfContours.push(code[i] << 8 | code[i + 1]);\n    i += 2;\n   }\n   var instructionLength = code[i] << 8 | code[i + 1];\n   i += 2 + instructionLength;\n   var numberOfPoints = endPtsOfContours[endPtsOfContours.length - 1] + 1;\n   var points = [];\n   while (points.length < numberOfPoints) {\n    flags = code[i++];\n    var repeat = 1;\n    if (flags & 0x08) {\n     repeat += code[i++];\n    }\n    while (repeat-- > 0) {\n     points.push({ flags: flags });\n    }\n   }\n   for (j = 0; j < numberOfPoints; j++) {\n    switch (points[j].flags & 0x12) {\n    case 0x00:\n     x += (code[i] << 24 | code[i + 1] << 16) >> 16;\n     i += 2;\n     break;\n    case 0x02:\n     x -= code[i++];\n     break;\n    case 0x12:\n     x += code[i++];\n     break;\n    }\n    points[j].x = x;\n   }\n   for (j = 0; j < numberOfPoints; j++) {\n    switch (points[j].flags & 0x24) {\n    case 0x00:\n     y += (code[i] << 24 | code[i + 1] << 16) >> 16;\n     i += 2;\n     break;\n    case 0x04:\n     y -= code[i++];\n     break;\n    case 0x24:\n     y += code[i++];\n     break;\n    }\n    points[j].y = y;\n   }\n   var startPoint = 0;\n   for (i = 0; i < numberOfContours; i++) {\n    var endPoint = endPtsOfContours[i];\n    var contour = points.slice(startPoint, endPoint + 1);\n    if (contour[0].flags & 1) {\n     contour.push(contour[0]);\n    } else if (contour[contour.length - 1].flags & 1) {\n     contour.unshift(contour[contour.length - 1]);\n    } else {\n     var p = {\n      flags: 1,\n      x: (contour[0].x + contour[contour.length - 1].x) / 2,\n      y: (contour[0].y + contour[contour.length - 1].y) / 2\n     };\n     contour.unshift(p);\n     contour.push(p);\n    }\n    moveTo(contour[0].x, contour[0].y);\n    for (j = 1, jj = contour.length; j < jj; j++) {\n     if (contour[j].flags & 1) {\n      lineTo(contour[j].x, contour[j].y);\n     } else if (contour[j + 1].flags & 1) {\n      quadraticCurveTo(contour[j].x, contour[j].y, contour[j + 1].x, contour[j + 1].y);\n      j++;\n     } else {\n      quadraticCurveTo(contour[j].x, contour[j].y, (contour[j].x + contour[j + 1].x) / 2, (contour[j].y + contour[j + 1].y) / 2);\n     }\n    }\n    startPoint = endPoint + 1;\n   }\n  }\n }\n function compileCharString(code, cmds, font) {\n  var stack = [];\n  var x = 0, y = 0;\n  var stems = 0;\n  function moveTo(x, y) {\n   cmds.push({\n    cmd: 'moveTo',\n    args: [\n     x,\n     y\n    ]\n   });\n  }\n  function lineTo(x, y) {\n   cmds.push({\n    cmd: 'lineTo',\n    args: [\n     x,\n     y\n    ]\n   });\n  }\n  function bezierCurveTo(x1, y1, x2, y2, x, y) {\n   cmds.push({\n    cmd: 'bezierCurveTo',\n    args: [\n     x1,\n     y1,\n     x2,\n     y2,\n     x,\n     y\n    ]\n   });\n  }\n  function parse(code) {\n   var i = 0;\n   while (i < code.length) {\n    var stackClean = false;\n    var v = code[i++];\n    var xa, xb, ya, yb, y1, y2, y3, n, subrCode;\n    switch (v) {\n    case 1:\n     stems += stack.length >> 1;\n     stackClean = true;\n     break;\n    case 3:\n     stems += stack.length >> 1;\n     stackClean = true;\n     break;\n    case 4:\n     y += stack.pop();\n     moveTo(x, y);\n     stackClean = true;\n     break;\n    case 5:\n     while (stack.length > 0) {\n      x += stack.shift();\n      y += stack.shift();\n      lineTo(x, y);\n     }\n     break;\n    case 6:\n     while (stack.length > 0) {\n      x += stack.shift();\n      lineTo(x, y);\n      if (stack.length === 0) {\n       break;\n      }\n      y += stack.shift();\n      lineTo(x, y);\n     }\n     break;\n    case 7:\n     while (stack.length > 0) {\n      y += stack.shift();\n      lineTo(x, y);\n      if (stack.length === 0) {\n       break;\n      }\n      x += stack.shift();\n      lineTo(x, y);\n     }\n     break;\n    case 8:\n     while (stack.length > 0) {\n      xa = x + stack.shift();\n      ya = y + stack.shift();\n      xb = xa + stack.shift();\n      yb = ya + stack.shift();\n      x = xb + stack.shift();\n      y = yb + stack.shift();\n      bezierCurveTo(xa, ya, xb, yb, x, y);\n     }\n     break;\n    case 10:\n     n = stack.pop() + font.subrsBias;\n     subrCode = font.subrs[n];\n     if (subrCode) {\n      parse(subrCode);\n     }\n     break;\n    case 11:\n     return;\n    case 12:\n     v = code[i++];\n     switch (v) {\n     case 34:\n      xa = x + stack.shift();\n      xb = xa + stack.shift();\n      y1 = y + stack.shift();\n      x = xb + stack.shift();\n      bezierCurveTo(xa, y, xb, y1, x, y1);\n      xa = x + stack.shift();\n      xb = xa + stack.shift();\n      x = xb + stack.shift();\n      bezierCurveTo(xa, y1, xb, y, x, y);\n      break;\n     case 35:\n      xa = x + stack.shift();\n      ya = y + stack.shift();\n      xb = xa + stack.shift();\n      yb = ya + stack.shift();\n      x = xb + stack.shift();\n      y = yb + stack.shift();\n      bezierCurveTo(xa, ya, xb, yb, x, y);\n      xa = x + stack.shift();\n      ya = y + stack.shift();\n      xb = xa + stack.shift();\n      yb = ya + stack.shift();\n      x = xb + stack.shift();\n      y = yb + stack.shift();\n      bezierCurveTo(xa, ya, xb, yb, x, y);\n      stack.pop();\n      break;\n     case 36:\n      xa = x + stack.shift();\n      y1 = y + stack.shift();\n      xb = xa + stack.shift();\n      y2 = y1 + stack.shift();\n      x = xb + stack.shift();\n      bezierCurveTo(xa, y1, xb, y2, x, y2);\n      xa = x + stack.shift();\n      xb = xa + stack.shift();\n      y3 = y2 + stack.shift();\n      x = xb + stack.shift();\n      bezierCurveTo(xa, y2, xb, y3, x, y);\n      break;\n     case 37:\n      var x0 = x, y0 = y;\n      xa = x + stack.shift();\n      ya = y + stack.shift();\n      xb = xa + stack.shift();\n      yb = ya + stack.shift();\n      x = xb + stack.shift();\n      y = yb + stack.shift();\n      bezierCurveTo(xa, ya, xb, yb, x, y);\n      xa = x + stack.shift();\n      ya = y + stack.shift();\n      xb = xa + stack.shift();\n      yb = ya + stack.shift();\n      x = xb;\n      y = yb;\n      if (Math.abs(x - x0) > Math.abs(y - y0)) {\n       x += stack.shift();\n      } else {\n       y += stack.shift();\n      }\n      bezierCurveTo(xa, ya, xb, yb, x, y);\n      break;\n     default:\n      error('unknown operator: 12 ' + v);\n     }\n     break;\n    case 14:\n     if (stack.length >= 4) {\n      var achar = stack.pop();\n      var bchar = stack.pop();\n      y = stack.pop();\n      x = stack.pop();\n      cmds.push({ cmd: 'save' });\n      cmds.push({\n       cmd: 'translate',\n       args: [\n        x,\n        y\n       ]\n      });\n      var cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[StandardEncoding[achar]]));\n      compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n      cmds.push({ cmd: 'restore' });\n      cmap = lookupCmap(font.cmap, String.fromCharCode(font.glyphNameMap[StandardEncoding[bchar]]));\n      compileCharString(font.glyphs[cmap.glyphId], cmds, font);\n     }\n     return;\n    case 18:\n     stems += stack.length >> 1;\n     stackClean = true;\n     break;\n    case 19:\n     stems += stack.length >> 1;\n     i += stems + 7 >> 3;\n     stackClean = true;\n     break;\n    case 20:\n     stems += stack.length >> 1;\n     i += stems + 7 >> 3;\n     stackClean = true;\n     break;\n    case 21:\n     y += stack.pop();\n     x += stack.pop();\n     moveTo(x, y);\n     stackClean = true;\n     break;\n    case 22:\n     x += stack.pop();\n     moveTo(x, y);\n     stackClean = true;\n     break;\n    case 23:\n     stems += stack.length >> 1;\n     stackClean = true;\n     break;\n    case 24:\n     while (stack.length > 2) {\n      xa = x + stack.shift();\n      ya = y + stack.shift();\n      xb = xa + stack.shift();\n      yb = ya + stack.shift();\n      x = xb + stack.shift();\n      y = yb + stack.shift();\n      bezierCurveTo(xa, ya, xb, yb, x, y);\n     }\n     x += stack.shift();\n     y += stack.shift();\n     lineTo(x, y);\n     break;\n    case 25:\n     while (stack.length > 6) {\n      x += stack.shift();\n      y += stack.shift();\n      lineTo(x, y);\n     }\n     xa = x + stack.shift();\n     ya = y + stack.shift();\n     xb = xa + stack.shift();\n     yb = ya + stack.shift();\n     x = xb + stack.shift();\n     y = yb + stack.shift();\n     bezierCurveTo(xa, ya, xb, yb, x, y);\n     break;\n    case 26:\n     if (stack.length % 2) {\n      x += stack.shift();\n     }\n     while (stack.length > 0) {\n      xa = x;\n      ya = y + stack.shift();\n      xb = xa + stack.shift();\n      yb = ya + stack.shift();\n      x = xb;\n      y = yb + stack.shift();\n      bezierCurveTo(xa, ya, xb, yb, x, y);\n     }\n     break;\n    case 27:\n     if (stack.length % 2) {\n      y += stack.shift();\n     }\n     while (stack.length > 0) {\n      xa = x + stack.shift();\n      ya = y;\n      xb = xa + stack.shift();\n      yb = ya + stack.shift();\n      x = xb + stack.shift();\n      y = yb;\n      bezierCurveTo(xa, ya, xb, yb, x, y);\n     }\n     break;\n    case 28:\n     stack.push((code[i] << 24 | code[i + 1] << 16) >> 16);\n     i += 2;\n     break;\n    case 29:\n     n = stack.pop() + font.gsubrsBias;\n     subrCode = font.gsubrs[n];\n     if (subrCode) {\n      parse(subrCode);\n     }\n     break;\n    case 30:\n     while (stack.length > 0) {\n      xa = x;\n      ya = y + stack.shift();\n      xb = xa + stack.shift();\n      yb = ya + stack.shift();\n      x = xb + stack.shift();\n      y = yb + (stack.length === 1 ? stack.shift() : 0);\n      bezierCurveTo(xa, ya, xb, yb, x, y);\n      if (stack.length === 0) {\n       break;\n      }\n      xa = x + stack.shift();\n      ya = y;\n      xb = xa + stack.shift();\n      yb = ya + stack.shift();\n      y = yb + stack.shift();\n      x = xb + (stack.length === 1 ? stack.shift() : 0);\n      bezierCurveTo(xa, ya, xb, yb, x, y);\n     }\n     break;\n    case 31:\n     while (stack.length > 0) {\n      xa = x + stack.shift();\n      ya = y;\n      xb = xa + stack.shift();\n      yb = ya + stack.shift();\n      y = yb + stack.shift();\n      x = xb + (stack.length === 1 ? stack.shift() : 0);\n      bezierCurveTo(xa, ya, xb, yb, x, y);\n      if (stack.length === 0) {\n       break;\n      }\n      xa = x;\n      ya = y + stack.shift();\n      xb = xa + stack.shift();\n      yb = ya + stack.shift();\n      x = xb + stack.shift();\n      y = yb + (stack.length === 1 ? stack.shift() : 0);\n      bezierCurveTo(xa, ya, xb, yb, x, y);\n     }\n     break;\n    default:\n     if (v < 32) {\n      error('unknown operator: ' + v);\n     }\n     if (v < 247) {\n      stack.push(v - 139);\n     } else if (v < 251) {\n      stack.push((v - 247) * 256 + code[i++] + 108);\n     } else if (v < 255) {\n      stack.push(-(v - 251) * 256 - code[i++] - 108);\n     } else {\n      stack.push((code[i] << 24 | code[i + 1] << 16 | code[i + 2] << 8 | code[i + 3]) / 65536);\n      i += 4;\n     }\n     break;\n    }\n    if (stackClean) {\n     stack.length = 0;\n    }\n   }\n  }\n  parse(code);\n }\n var noop = '';\n function CompiledFont(fontMatrix) {\n  this.compiledGlyphs = Object.create(null);\n  this.compiledCharCodeToGlyphId = Object.create(null);\n  this.fontMatrix = fontMatrix;\n }\n CompiledFont.prototype = {\n  getPathJs: function (unicode) {\n   var cmap = lookupCmap(this.cmap, unicode);\n   var fn = this.compiledGlyphs[cmap.glyphId];\n   if (!fn) {\n    fn = this.compileGlyph(this.glyphs[cmap.glyphId]);\n    this.compiledGlyphs[cmap.glyphId] = fn;\n   }\n   if (this.compiledCharCodeToGlyphId[cmap.charCode] === undefined) {\n    this.compiledCharCodeToGlyphId[cmap.charCode] = cmap.glyphId;\n   }\n   return fn;\n  },\n  compileGlyph: function (code) {\n   if (!code || code.length === 0 || code[0] === 14) {\n    return noop;\n   }\n   var cmds = [];\n   cmds.push({ cmd: 'save' });\n   cmds.push({\n    cmd: 'transform',\n    args: this.fontMatrix.slice()\n   });\n   cmds.push({\n    cmd: 'scale',\n    args: [\n     'size',\n     '-size'\n    ]\n   });\n   this.compileGlyphImpl(code, cmds);\n   cmds.push({ cmd: 'restore' });\n   return cmds;\n  },\n  compileGlyphImpl: function () {\n   error('Children classes should implement this.');\n  },\n  hasBuiltPath: function (unicode) {\n   var cmap = lookupCmap(this.cmap, unicode);\n   return this.compiledGlyphs[cmap.glyphId] !== undefined && this.compiledCharCodeToGlyphId[cmap.charCode] !== undefined;\n  }\n };\n function TrueTypeCompiled(glyphs, cmap, fontMatrix) {\n  fontMatrix = fontMatrix || [\n   0.000488,\n   0,\n   0,\n   0.000488,\n   0,\n   0\n  ];\n  CompiledFont.call(this, fontMatrix);\n  this.glyphs = glyphs;\n  this.cmap = cmap;\n }\n Util.inherit(TrueTypeCompiled, CompiledFont, {\n  compileGlyphImpl: function (code, cmds) {\n   compileGlyf(code, cmds, this);\n  }\n });\n function Type2Compiled(cffInfo, cmap, fontMatrix, glyphNameMap) {\n  fontMatrix = fontMatrix || [\n   0.001,\n   0,\n   0,\n   0.001,\n   0,\n   0\n  ];\n  CompiledFont.call(this, fontMatrix);\n  this.glyphs = cffInfo.glyphs;\n  this.gsubrs = cffInfo.gsubrs || [];\n  this.subrs = cffInfo.subrs || [];\n  this.cmap = cmap;\n  this.glyphNameMap = glyphNameMap || getGlyphsUnicode();\n  this.gsubrsBias = this.gsubrs.length < 1240 ? 107 : this.gsubrs.length < 33900 ? 1131 : 32768;\n  this.subrsBias = this.subrs.length < 1240 ? 107 : this.subrs.length < 33900 ? 1131 : 32768;\n }\n Util.inherit(Type2Compiled, CompiledFont, {\n  compileGlyphImpl: function (code, cmds) {\n   compileCharString(code, cmds, this);\n  }\n });\n return {\n  create: function FontRendererFactory_create(font, seacAnalysisEnabled) {\n   var data = new Uint8Array(font.data);\n   var cmap, glyf, loca, cff, indexToLocFormat, unitsPerEm;\n   var numTables = getUshort(data, 4);\n   for (var i = 0, p = 12; i < numTables; i++, p += 16) {\n    var tag = bytesToString(data.subarray(p, p + 4));\n    var offset = getLong(data, p + 8);\n    var length = getLong(data, p + 12);\n    switch (tag) {\n    case 'cmap':\n     cmap = parseCmap(data, offset, offset + length);\n     break;\n    case 'glyf':\n     glyf = data.subarray(offset, offset + length);\n     break;\n    case 'loca':\n     loca = data.subarray(offset, offset + length);\n     break;\n    case 'head':\n     unitsPerEm = getUshort(data, offset + 18);\n     indexToLocFormat = getUshort(data, offset + 50);\n     break;\n    case 'CFF ':\n     cff = parseCff(data, offset, offset + length, seacAnalysisEnabled);\n     break;\n    }\n   }\n   if (glyf) {\n    var fontMatrix = !unitsPerEm ? font.fontMatrix : [\n     1 / unitsPerEm,\n     0,\n     0,\n     1 / unitsPerEm,\n     0,\n     0\n    ];\n    return new TrueTypeCompiled(parseGlyfTable(glyf, loca, indexToLocFormat), cmap, fontMatrix);\n   }\n   return new Type2Compiled(cff, cmap, font.fontMatrix, font.glyphNameMap);\n  }\n };\n}();\nexports.FontRendererFactory = FontRendererFactory;\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar coreStream = __w_pdfjs_require__(2);\nvar coreGlyphList = __w_pdfjs_require__(7);\nvar coreFontRenderer = __w_pdfjs_require__(25);\nvar coreEncodings = __w_pdfjs_require__(4);\nvar coreStandardFonts = __w_pdfjs_require__(17);\nvar coreUnicode = __w_pdfjs_require__(18);\nvar coreType1Parser = __w_pdfjs_require__(35);\nvar coreCFFParser = __w_pdfjs_require__(11);\nvar FONT_IDENTITY_MATRIX = sharedUtil.FONT_IDENTITY_MATRIX;\nvar FontType = sharedUtil.FontType;\nvar assert = sharedUtil.assert;\nvar bytesToString = sharedUtil.bytesToString;\nvar error = sharedUtil.error;\nvar info = sharedUtil.info;\nvar isArray = sharedUtil.isArray;\nvar isInt = sharedUtil.isInt;\nvar isNum = sharedUtil.isNum;\nvar readUint32 = sharedUtil.readUint32;\nvar shadow = sharedUtil.shadow;\nvar string32 = sharedUtil.string32;\nvar warn = sharedUtil.warn;\nvar MissingDataException = sharedUtil.MissingDataException;\nvar isSpace = sharedUtil.isSpace;\nvar Stream = coreStream.Stream;\nvar getGlyphsUnicode = coreGlyphList.getGlyphsUnicode;\nvar getDingbatsGlyphsUnicode = coreGlyphList.getDingbatsGlyphsUnicode;\nvar FontRendererFactory = coreFontRenderer.FontRendererFactory;\nvar StandardEncoding = coreEncodings.StandardEncoding;\nvar MacRomanEncoding = coreEncodings.MacRomanEncoding;\nvar SymbolSetEncoding = coreEncodings.SymbolSetEncoding;\nvar ZapfDingbatsEncoding = coreEncodings.ZapfDingbatsEncoding;\nvar getEncoding = coreEncodings.getEncoding;\nvar getStdFontMap = coreStandardFonts.getStdFontMap;\nvar getNonStdFontMap = coreStandardFonts.getNonStdFontMap;\nvar getGlyphMapForStandardFonts = coreStandardFonts.getGlyphMapForStandardFonts;\nvar getSupplementalGlyphMapForArialBlack = coreStandardFonts.getSupplementalGlyphMapForArialBlack;\nvar getUnicodeRangeFor = coreUnicode.getUnicodeRangeFor;\nvar mapSpecialUnicodeValues = coreUnicode.mapSpecialUnicodeValues;\nvar getUnicodeForGlyph = coreUnicode.getUnicodeForGlyph;\nvar Type1Parser = coreType1Parser.Type1Parser;\nvar CFFStandardStrings = coreCFFParser.CFFStandardStrings;\nvar CFFParser = coreCFFParser.CFFParser;\nvar CFFCompiler = coreCFFParser.CFFCompiler;\nvar CFF = coreCFFParser.CFF;\nvar CFFHeader = coreCFFParser.CFFHeader;\nvar CFFTopDict = coreCFFParser.CFFTopDict;\nvar CFFPrivateDict = coreCFFParser.CFFPrivateDict;\nvar CFFStrings = coreCFFParser.CFFStrings;\nvar CFFIndex = coreCFFParser.CFFIndex;\nvar CFFCharset = coreCFFParser.CFFCharset;\nvar PRIVATE_USE_OFFSET_START = 0xE000;\nvar PRIVATE_USE_OFFSET_END = 0xF8FF;\nvar SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = false;\nvar PDF_GLYPH_SPACE_UNITS = 1000;\nvar SEAC_ANALYSIS_ENABLED = false;\nvar FontFlags = {\n FixedPitch: 1,\n Serif: 2,\n Symbolic: 4,\n Script: 8,\n Nonsymbolic: 32,\n Italic: 64,\n AllCap: 65536,\n SmallCap: 131072,\n ForceBold: 262144\n};\nvar MacStandardGlyphOrdering = [\n '.notdef',\n '.null',\n 'nonmarkingreturn',\n 'space',\n 'exclam',\n 'quotedbl',\n 'numbersign',\n 'dollar',\n 'percent',\n 'ampersand',\n 'quotesingle',\n 'parenleft',\n 'parenright',\n 'asterisk',\n 'plus',\n 'comma',\n 'hyphen',\n 'period',\n 'slash',\n 'zero',\n 'one',\n 'two',\n 'three',\n 'four',\n 'five',\n 'six',\n 'seven',\n 'eight',\n 'nine',\n 'colon',\n 'semicolon',\n 'less',\n 'equal',\n 'greater',\n 'question',\n 'at',\n 'A',\n 'B',\n 'C',\n 'D',\n 'E',\n 'F',\n 'G',\n 'H',\n 'I',\n 'J',\n 'K',\n 'L',\n 'M',\n 'N',\n 'O',\n 'P',\n 'Q',\n 'R',\n 'S',\n 'T',\n 'U',\n 'V',\n 'W',\n 'X',\n 'Y',\n 'Z',\n 'bracketleft',\n 'backslash',\n 'bracketright',\n 'asciicircum',\n 'underscore',\n 'grave',\n 'a',\n 'b',\n 'c',\n 'd',\n 'e',\n 'f',\n 'g',\n 'h',\n 'i',\n 'j',\n 'k',\n 'l',\n 'm',\n 'n',\n 'o',\n 'p',\n 'q',\n 'r',\n 's',\n 't',\n 'u',\n 'v',\n 'w',\n 'x',\n 'y',\n 'z',\n 'braceleft',\n 'bar',\n 'braceright',\n 'asciitilde',\n 'Adieresis',\n 'Aring',\n 'Ccedilla',\n 'Eacute',\n 'Ntilde',\n 'Odieresis',\n 'Udieresis',\n 'aacute',\n 'agrave',\n 'acircumflex',\n 'adieresis',\n 'atilde',\n 'aring',\n 'ccedilla',\n 'eacute',\n 'egrave',\n 'ecircumflex',\n 'edieresis',\n 'iacute',\n 'igrave',\n 'icircumflex',\n 'idieresis',\n 'ntilde',\n 'oacute',\n 'ograve',\n 'ocircumflex',\n 'odieresis',\n 'otilde',\n 'uacute',\n 'ugrave',\n 'ucircumflex',\n 'udieresis',\n 'dagger',\n 'degree',\n 'cent',\n 'sterling',\n 'section',\n 'bullet',\n 'paragraph',\n 'germandbls',\n 'registered',\n 'copyright',\n 'trademark',\n 'acute',\n 'dieresis',\n 'notequal',\n 'AE',\n 'Oslash',\n 'infinity',\n 'plusminus',\n 'lessequal',\n 'greaterequal',\n 'yen',\n 'mu',\n 'partialdiff',\n 'summation',\n 'product',\n 'pi',\n 'integral',\n 'ordfeminine',\n 'ordmasculine',\n 'Omega',\n 'ae',\n 'oslash',\n 'questiondown',\n 'exclamdown',\n 'logicalnot',\n 'radical',\n 'florin',\n 'approxequal',\n 'Delta',\n 'guillemotleft',\n 'guillemotright',\n 'ellipsis',\n 'nonbreakingspace',\n 'Agrave',\n 'Atilde',\n 'Otilde',\n 'OE',\n 'oe',\n 'endash',\n 'emdash',\n 'quotedblleft',\n 'quotedblright',\n 'quoteleft',\n 'quoteright',\n 'divide',\n 'lozenge',\n 'ydieresis',\n 'Ydieresis',\n 'fraction',\n 'currency',\n 'guilsinglleft',\n 'guilsinglright',\n 'fi',\n 'fl',\n 'daggerdbl',\n 'periodcentered',\n 'quotesinglbase',\n 'quotedblbase',\n 'perthousand',\n 'Acircumflex',\n 'Ecircumflex',\n 'Aacute',\n 'Edieresis',\n 'Egrave',\n 'Iacute',\n 'Icircumflex',\n 'Idieresis',\n 'Igrave',\n 'Oacute',\n 'Ocircumflex',\n 'apple',\n 'Ograve',\n 'Uacute',\n 'Ucircumflex',\n 'Ugrave',\n 'dotlessi',\n 'circumflex',\n 'tilde',\n 'macron',\n 'breve',\n 'dotaccent',\n 'ring',\n 'cedilla',\n 'hungarumlaut',\n 'ogonek',\n 'caron',\n 'Lslash',\n 'lslash',\n 'Scaron',\n 'scaron',\n 'Zcaron',\n 'zcaron',\n 'brokenbar',\n 'Eth',\n 'eth',\n 'Yacute',\n 'yacute',\n 'Thorn',\n 'thorn',\n 'minus',\n 'multiply',\n 'onesuperior',\n 'twosuperior',\n 'threesuperior',\n 'onehalf',\n 'onequarter',\n 'threequarters',\n 'franc',\n 'Gbreve',\n 'gbreve',\n 'Idotaccent',\n 'Scedilla',\n 'scedilla',\n 'Cacute',\n 'cacute',\n 'Ccaron',\n 'ccaron',\n 'dcroat'\n];\nfunction adjustWidths(properties) {\n if (!properties.fontMatrix) {\n  return;\n }\n if (properties.fontMatrix[0] === FONT_IDENTITY_MATRIX[0]) {\n  return;\n }\n var scale = 0.001 / properties.fontMatrix[0];\n var glyphsWidths = properties.widths;\n for (var glyph in glyphsWidths) {\n  glyphsWidths[glyph] *= scale;\n }\n properties.defaultWidth *= scale;\n}\nfunction adjustToUnicode(properties, builtInEncoding) {\n if (properties.hasIncludedToUnicodeMap) {\n  return;\n }\n if (properties.hasEncoding) {\n  return;\n }\n if (builtInEncoding === properties.defaultEncoding) {\n  return;\n }\n if (properties.toUnicode instanceof IdentityToUnicodeMap) {\n  return;\n }\n var toUnicode = [], glyphsUnicodeMap = getGlyphsUnicode();\n for (var charCode in builtInEncoding) {\n  var glyphName = builtInEncoding[charCode];\n  var unicode = getUnicodeForGlyph(glyphName, glyphsUnicodeMap);\n  if (unicode !== -1) {\n   toUnicode[charCode] = String.fromCharCode(unicode);\n  }\n }\n properties.toUnicode.amend(toUnicode);\n}\nfunction getFontType(type, subtype) {\n switch (type) {\n case 'Type1':\n  return subtype === 'Type1C' ? FontType.TYPE1C : FontType.TYPE1;\n case 'CIDFontType0':\n  return subtype === 'CIDFontType0C' ? FontType.CIDFONTTYPE0C : FontType.CIDFONTTYPE0;\n case 'OpenType':\n  return FontType.OPENTYPE;\n case 'TrueType':\n  return FontType.TRUETYPE;\n case 'CIDFontType2':\n  return FontType.CIDFONTTYPE2;\n case 'MMType1':\n  return FontType.MMTYPE1;\n case 'Type0':\n  return FontType.TYPE0;\n default:\n  return FontType.UNKNOWN;\n }\n}\nfunction recoverGlyphName(name, glyphsUnicodeMap) {\n if (glyphsUnicodeMap[name] !== undefined) {\n  return name;\n }\n var unicode = getUnicodeForGlyph(name, glyphsUnicodeMap);\n if (unicode !== -1) {\n  for (var key in glyphsUnicodeMap) {\n   if (glyphsUnicodeMap[key] === unicode) {\n    return key;\n   }\n  }\n }\n info('Unable to recover a standard glyph name for: ' + name);\n return name;\n}\nvar Glyph = function GlyphClosure() {\n function Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n  this.fontChar = fontChar;\n  this.unicode = unicode;\n  this.accent = accent;\n  this.width = width;\n  this.vmetric = vmetric;\n  this.operatorListId = operatorListId;\n  this.isSpace = isSpace;\n  this.isInFont = isInFont;\n }\n Glyph.prototype.matchesForCache = function (fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont) {\n  return this.fontChar === fontChar && this.unicode === unicode && this.accent === accent && this.width === width && this.vmetric === vmetric && this.operatorListId === operatorListId && this.isSpace === isSpace && this.isInFont === isInFont;\n };\n return Glyph;\n}();\nvar ToUnicodeMap = function ToUnicodeMapClosure() {\n function ToUnicodeMap(cmap) {\n  this._map = cmap;\n }\n ToUnicodeMap.prototype = {\n  get length() {\n   return this._map.length;\n  },\n  forEach: function (callback) {\n   for (var charCode in this._map) {\n    callback(charCode, this._map[charCode].charCodeAt(0));\n   }\n  },\n  has: function (i) {\n   return this._map[i] !== undefined;\n  },\n  get: function (i) {\n   return this._map[i];\n  },\n  charCodeOf: function (v) {\n   return this._map.indexOf(v);\n  },\n  amend: function (map) {\n   for (var charCode in map) {\n    this._map[charCode] = map[charCode];\n   }\n  }\n };\n return ToUnicodeMap;\n}();\nvar IdentityToUnicodeMap = function IdentityToUnicodeMapClosure() {\n function IdentityToUnicodeMap(firstChar, lastChar) {\n  this.firstChar = firstChar;\n  this.lastChar = lastChar;\n }\n IdentityToUnicodeMap.prototype = {\n  get length() {\n   return this.lastChar + 1 - this.firstChar;\n  },\n  forEach: function (callback) {\n   for (var i = this.firstChar, ii = this.lastChar; i <= ii; i++) {\n    callback(i, i);\n   }\n  },\n  has: function (i) {\n   return this.firstChar <= i && i <= this.lastChar;\n  },\n  get: function (i) {\n   if (this.firstChar <= i && i <= this.lastChar) {\n    return String.fromCharCode(i);\n   }\n   return undefined;\n  },\n  charCodeOf: function (v) {\n   return isInt(v) && v >= this.firstChar && v <= this.lastChar ? v : -1;\n  },\n  amend: function (map) {\n   error('Should not call amend()');\n  }\n };\n return IdentityToUnicodeMap;\n}();\nvar OpenTypeFileBuilder = function OpenTypeFileBuilderClosure() {\n function writeInt16(dest, offset, num) {\n  dest[offset] = num >> 8 & 0xFF;\n  dest[offset + 1] = num & 0xFF;\n }\n function writeInt32(dest, offset, num) {\n  dest[offset] = num >> 24 & 0xFF;\n  dest[offset + 1] = num >> 16 & 0xFF;\n  dest[offset + 2] = num >> 8 & 0xFF;\n  dest[offset + 3] = num & 0xFF;\n }\n function writeData(dest, offset, data) {\n  var i, ii;\n  if (data instanceof Uint8Array) {\n   dest.set(data, offset);\n  } else if (typeof data === 'string') {\n   for (i = 0, ii = data.length; i < ii; i++) {\n    dest[offset++] = data.charCodeAt(i) & 0xFF;\n   }\n  } else {\n   for (i = 0, ii = data.length; i < ii; i++) {\n    dest[offset++] = data[i] & 0xFF;\n   }\n  }\n }\n function OpenTypeFileBuilder(sfnt) {\n  this.sfnt = sfnt;\n  this.tables = Object.create(null);\n }\n OpenTypeFileBuilder.getSearchParams = function OpenTypeFileBuilder_getSearchParams(entriesCount, entrySize) {\n  var maxPower2 = 1, log2 = 0;\n  while ((maxPower2 ^ entriesCount) > maxPower2) {\n   maxPower2 <<= 1;\n   log2++;\n  }\n  var searchRange = maxPower2 * entrySize;\n  return {\n   range: searchRange,\n   entry: log2,\n   rangeShift: entrySize * entriesCount - searchRange\n  };\n };\n var OTF_HEADER_SIZE = 12;\n var OTF_TABLE_ENTRY_SIZE = 16;\n OpenTypeFileBuilder.prototype = {\n  toArray: function OpenTypeFileBuilder_toArray() {\n   var sfnt = this.sfnt;\n   var tables = this.tables;\n   var tablesNames = Object.keys(tables);\n   tablesNames.sort();\n   var numTables = tablesNames.length;\n   var i, j, jj, table, tableName;\n   var offset = OTF_HEADER_SIZE + numTables * OTF_TABLE_ENTRY_SIZE;\n   var tableOffsets = [offset];\n   for (i = 0; i < numTables; i++) {\n    table = tables[tablesNames[i]];\n    var paddedLength = (table.length + 3 & ~3) >>> 0;\n    offset += paddedLength;\n    tableOffsets.push(offset);\n   }\n   var file = new Uint8Array(offset);\n   for (i = 0; i < numTables; i++) {\n    table = tables[tablesNames[i]];\n    writeData(file, tableOffsets[i], table);\n   }\n   if (sfnt === 'true') {\n    sfnt = string32(0x00010000);\n   }\n   file[0] = sfnt.charCodeAt(0) & 0xFF;\n   file[1] = sfnt.charCodeAt(1) & 0xFF;\n   file[2] = sfnt.charCodeAt(2) & 0xFF;\n   file[3] = sfnt.charCodeAt(3) & 0xFF;\n   writeInt16(file, 4, numTables);\n   var searchParams = OpenTypeFileBuilder.getSearchParams(numTables, 16);\n   writeInt16(file, 6, searchParams.range);\n   writeInt16(file, 8, searchParams.entry);\n   writeInt16(file, 10, searchParams.rangeShift);\n   offset = OTF_HEADER_SIZE;\n   for (i = 0; i < numTables; i++) {\n    tableName = tablesNames[i];\n    file[offset] = tableName.charCodeAt(0) & 0xFF;\n    file[offset + 1] = tableName.charCodeAt(1) & 0xFF;\n    file[offset + 2] = tableName.charCodeAt(2) & 0xFF;\n    file[offset + 3] = tableName.charCodeAt(3) & 0xFF;\n    var checksum = 0;\n    for (j = tableOffsets[i], jj = tableOffsets[i + 1]; j < jj; j += 4) {\n     var quad = readUint32(file, j);\n     checksum = checksum + quad >>> 0;\n    }\n    writeInt32(file, offset + 4, checksum);\n    writeInt32(file, offset + 8, tableOffsets[i]);\n    writeInt32(file, offset + 12, tables[tableName].length);\n    offset += OTF_TABLE_ENTRY_SIZE;\n   }\n   return file;\n  },\n  addTable: function OpenTypeFileBuilder_addTable(tag, data) {\n   if (tag in this.tables) {\n    throw new Error('Table ' + tag + ' already exists');\n   }\n   this.tables[tag] = data;\n  }\n };\n return OpenTypeFileBuilder;\n}();\nvar ProblematicCharRanges = new Int32Array([\n 0x0000,\n 0x0020,\n 0x007F,\n 0x00A1,\n 0x00AD,\n 0x00AE,\n 0x0600,\n 0x0780,\n 0x08A0,\n 0x10A0,\n 0x1780,\n 0x1800,\n 0x1C00,\n 0x1C50,\n 0x2000,\n 0x2010,\n 0x2011,\n 0x2012,\n 0x2028,\n 0x2030,\n 0x205F,\n 0x2070,\n 0x25CC,\n 0x25CD,\n 0x3000,\n 0x3001,\n 0xAA60,\n 0xAA80,\n 0xFFF0,\n 0x10000\n]);\nvar Font = function FontClosure() {\n function Font(name, file, properties) {\n  var charCode, glyphName, unicode;\n  this.name = name;\n  this.loadedName = properties.loadedName;\n  this.isType3Font = properties.isType3Font;\n  this.sizes = [];\n  this.missingFile = false;\n  this.glyphCache = Object.create(null);\n  this.isSerifFont = !!(properties.flags & FontFlags.Serif);\n  this.isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n  this.isMonospace = !!(properties.flags & FontFlags.FixedPitch);\n  var type = properties.type;\n  var subtype = properties.subtype;\n  this.type = type;\n  this.fallbackName = this.isMonospace ? 'monospace' : this.isSerifFont ? 'serif' : 'sans-serif';\n  this.differences = properties.differences;\n  this.widths = properties.widths;\n  this.defaultWidth = properties.defaultWidth;\n  this.composite = properties.composite;\n  this.wideChars = properties.wideChars;\n  this.cMap = properties.cMap;\n  this.ascent = properties.ascent / PDF_GLYPH_SPACE_UNITS;\n  this.descent = properties.descent / PDF_GLYPH_SPACE_UNITS;\n  this.fontMatrix = properties.fontMatrix;\n  this.bbox = properties.bbox;\n  this.toUnicode = properties.toUnicode;\n  this.toFontChar = [];\n  if (properties.type === 'Type3') {\n   for (charCode = 0; charCode < 256; charCode++) {\n    this.toFontChar[charCode] = this.differences[charCode] || properties.defaultEncoding[charCode];\n   }\n   this.fontType = FontType.TYPE3;\n   return;\n  }\n  this.cidEncoding = properties.cidEncoding;\n  this.vertical = properties.vertical;\n  if (this.vertical) {\n   this.vmetrics = properties.vmetrics;\n   this.defaultVMetrics = properties.defaultVMetrics;\n  }\n  var glyphsUnicodeMap;\n  if (!file || file.isEmpty) {\n   if (file) {\n    warn('Font file is empty in \"' + name + '\" (' + this.loadedName + ')');\n   }\n   this.missingFile = true;\n   var fontName = name.replace(/[,_]/g, '-');\n   var stdFontMap = getStdFontMap(), nonStdFontMap = getNonStdFontMap();\n   var isStandardFont = !!stdFontMap[fontName] || !!(nonStdFontMap[fontName] && stdFontMap[nonStdFontMap[fontName]]);\n   fontName = stdFontMap[fontName] || nonStdFontMap[fontName] || fontName;\n   this.bold = fontName.search(/bold/gi) !== -1;\n   this.italic = fontName.search(/oblique/gi) !== -1 || fontName.search(/italic/gi) !== -1;\n   this.black = name.search(/Black/g) !== -1;\n   this.remeasure = Object.keys(this.widths).length > 0;\n   if (isStandardFont && type === 'CIDFontType2' && properties.cidEncoding.indexOf('Identity-') === 0) {\n    var GlyphMapForStandardFonts = getGlyphMapForStandardFonts();\n    var map = [];\n    for (charCode in GlyphMapForStandardFonts) {\n     map[+charCode] = GlyphMapForStandardFonts[charCode];\n    }\n    if (/Arial-?Black/i.test(name)) {\n     var SupplementalGlyphMapForArialBlack = getSupplementalGlyphMapForArialBlack();\n     for (charCode in SupplementalGlyphMapForArialBlack) {\n      map[+charCode] = SupplementalGlyphMapForArialBlack[charCode];\n     }\n    }\n    var isIdentityUnicode = this.toUnicode instanceof IdentityToUnicodeMap;\n    if (!isIdentityUnicode) {\n     this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n      map[+charCode] = unicodeCharCode;\n     });\n    }\n    this.toFontChar = map;\n    this.toUnicode = new ToUnicodeMap(map);\n   } else if (/Symbol/i.test(fontName)) {\n    this.toFontChar = buildToFontChar(SymbolSetEncoding, getGlyphsUnicode(), properties.differences);\n   } else if (/Dingbats/i.test(fontName)) {\n    if (/Wingdings/i.test(name)) {\n     warn('Non-embedded Wingdings font, falling back to ZapfDingbats.');\n    }\n    this.toFontChar = buildToFontChar(ZapfDingbatsEncoding, getDingbatsGlyphsUnicode(), properties.differences);\n   } else if (isStandardFont) {\n    this.toFontChar = buildToFontChar(properties.defaultEncoding, getGlyphsUnicode(), properties.differences);\n   } else {\n    glyphsUnicodeMap = getGlyphsUnicode();\n    this.toUnicode.forEach(function (charCode, unicodeCharCode) {\n     if (!this.composite) {\n      glyphName = properties.differences[charCode] || properties.defaultEncoding[charCode];\n      unicode = getUnicodeForGlyph(glyphName, glyphsUnicodeMap);\n      if (unicode !== -1) {\n       unicodeCharCode = unicode;\n      }\n     }\n     this.toFontChar[charCode] = unicodeCharCode;\n    }.bind(this));\n   }\n   this.loadedName = fontName.split('-')[0];\n   this.loading = false;\n   this.fontType = getFontType(type, subtype);\n   return;\n  }\n  if (subtype === 'Type1C') {\n   if (type !== 'Type1' && type !== 'MMType1') {\n    if (isTrueTypeFile(file)) {\n     subtype = 'TrueType';\n    } else {\n     type = 'Type1';\n    }\n   } else if (isOpenTypeFile(file)) {\n    type = subtype = 'OpenType';\n   }\n  }\n  if (subtype === 'CIDFontType0C' && type !== 'CIDFontType0') {\n   type = 'CIDFontType0';\n  }\n  if (subtype === 'OpenType') {\n   type = 'OpenType';\n  }\n  if (type === 'CIDFontType0') {\n   if (isType1File(file)) {\n    subtype = 'CIDFontType0';\n   } else if (isOpenTypeFile(file)) {\n    type = subtype = 'OpenType';\n   } else {\n    subtype = 'CIDFontType0C';\n   }\n  }\n  var data;\n  switch (type) {\n  case 'MMType1':\n   info('MMType1 font (' + name + '), falling back to Type1.');\n  case 'Type1':\n  case 'CIDFontType0':\n   this.mimetype = 'font/opentype';\n   var cff = subtype === 'Type1C' || subtype === 'CIDFontType0C' ? new CFFFont(file, properties) : new Type1Font(name, file, properties);\n   adjustWidths(properties);\n   data = this.convert(name, cff, properties);\n   break;\n  case 'OpenType':\n  case 'TrueType':\n  case 'CIDFontType2':\n   this.mimetype = 'font/opentype';\n   data = this.checkAndRepair(name, file, properties);\n   if (this.isOpenType) {\n    adjustWidths(properties);\n    type = 'OpenType';\n   }\n   break;\n  default:\n   error('Font ' + type + ' is not supported');\n   break;\n  }\n  this.data = data;\n  this.fontType = getFontType(type, subtype);\n  this.fontMatrix = properties.fontMatrix;\n  this.widths = properties.widths;\n  this.defaultWidth = properties.defaultWidth;\n  this.toUnicode = properties.toUnicode;\n  this.encoding = properties.baseEncoding;\n  this.seacMap = properties.seacMap;\n  this.loading = true;\n }\n Font.getFontID = function () {\n  var ID = 1;\n  return function Font_getFontID() {\n   return String(ID++);\n  };\n }();\n function int16(b0, b1) {\n  return (b0 << 8) + b1;\n }\n function signedInt16(b0, b1) {\n  var value = (b0 << 8) + b1;\n  return value & 1 << 15 ? value - 0x10000 : value;\n }\n function int32(b0, b1, b2, b3) {\n  return (b0 << 24) + (b1 << 16) + (b2 << 8) + b3;\n }\n function string16(value) {\n  return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n }\n function safeString16(value) {\n  value = value > 0x7FFF ? 0x7FFF : value < -0x8000 ? -0x8000 : value;\n  return String.fromCharCode(value >> 8 & 0xff, value & 0xff);\n }\n function isTrueTypeFile(file) {\n  var header = file.peekBytes(4);\n  return readUint32(header, 0) === 0x00010000;\n }\n function isOpenTypeFile(file) {\n  var header = file.peekBytes(4);\n  return bytesToString(header) === 'OTTO';\n }\n function isType1File(file) {\n  var header = file.peekBytes(2);\n  if (header[0] === 0x25 && header[1] === 0x21) {\n   return true;\n  }\n  if (header[0] === 0x80 && header[1] === 0x01) {\n   return true;\n  }\n  return false;\n }\n function buildToFontChar(encoding, glyphsUnicodeMap, differences) {\n  var toFontChar = [], unicode;\n  for (var i = 0, ii = encoding.length; i < ii; i++) {\n   unicode = getUnicodeForGlyph(encoding[i], glyphsUnicodeMap);\n   if (unicode !== -1) {\n    toFontChar[i] = unicode;\n   }\n  }\n  for (var charCode in differences) {\n   unicode = getUnicodeForGlyph(differences[charCode], glyphsUnicodeMap);\n   if (unicode !== -1) {\n    toFontChar[+charCode] = unicode;\n   }\n  }\n  return toFontChar;\n }\n function isProblematicUnicodeLocation(code) {\n  var i = 0, j = ProblematicCharRanges.length - 1;\n  while (i < j) {\n   var c = i + j + 1 >> 1;\n   if (code < ProblematicCharRanges[c]) {\n    j = c - 1;\n   } else {\n    i = c;\n   }\n  }\n  return !(i & 1);\n }\n function adjustMapping(charCodeToGlyphId, properties) {\n  var toUnicode = properties.toUnicode;\n  var isSymbolic = !!(properties.flags & FontFlags.Symbolic);\n  var isIdentityUnicode = properties.toUnicode instanceof IdentityToUnicodeMap;\n  var newMap = Object.create(null);\n  var toFontChar = [];\n  var usedFontCharCodes = [];\n  var nextAvailableFontCharCode = PRIVATE_USE_OFFSET_START;\n  for (var originalCharCode in charCodeToGlyphId) {\n   originalCharCode |= 0;\n   var glyphId = charCodeToGlyphId[originalCharCode];\n   var fontCharCode = originalCharCode;\n   var hasUnicodeValue = false;\n   if (!isIdentityUnicode && toUnicode.has(originalCharCode)) {\n    hasUnicodeValue = true;\n    var unicode = toUnicode.get(fontCharCode);\n    if (unicode.length === 1) {\n     fontCharCode = unicode.charCodeAt(0);\n    }\n   }\n   if ((usedFontCharCodes[fontCharCode] !== undefined || isProblematicUnicodeLocation(fontCharCode) || isSymbolic && !hasUnicodeValue) && nextAvailableFontCharCode <= PRIVATE_USE_OFFSET_END) {\n    do {\n     fontCharCode = nextAvailableFontCharCode++;\n     if (SKIP_PRIVATE_USE_RANGE_F000_TO_F01F && fontCharCode === 0xF000) {\n      fontCharCode = 0xF020;\n      nextAvailableFontCharCode = fontCharCode + 1;\n     }\n    } while (usedFontCharCodes[fontCharCode] !== undefined && nextAvailableFontCharCode <= PRIVATE_USE_OFFSET_END);\n   }\n   newMap[fontCharCode] = glyphId;\n   toFontChar[originalCharCode] = fontCharCode;\n   usedFontCharCodes[fontCharCode] = true;\n  }\n  return {\n   toFontChar: toFontChar,\n   charCodeToGlyphId: newMap,\n   nextAvailableFontCharCode: nextAvailableFontCharCode\n  };\n }\n function getRanges(glyphs, numGlyphs) {\n  var codes = [];\n  for (var charCode in glyphs) {\n   if (glyphs[charCode] >= numGlyphs) {\n    continue;\n   }\n   codes.push({\n    fontCharCode: charCode | 0,\n    glyphId: glyphs[charCode]\n   });\n  }\n  codes.sort(function fontGetRangesSort(a, b) {\n   return a.fontCharCode - b.fontCharCode;\n  });\n  var ranges = [];\n  var length = codes.length;\n  for (var n = 0; n < length;) {\n   var start = codes[n].fontCharCode;\n   var codeIndices = [codes[n].glyphId];\n   ++n;\n   var end = start;\n   while (n < length && end + 1 === codes[n].fontCharCode) {\n    codeIndices.push(codes[n].glyphId);\n    ++end;\n    ++n;\n    if (end === 0xFFFF) {\n     break;\n    }\n   }\n   ranges.push([\n    start,\n    end,\n    codeIndices\n   ]);\n  }\n  return ranges;\n }\n function createCmapTable(glyphs, numGlyphs) {\n  var ranges = getRanges(glyphs, numGlyphs);\n  var numTables = ranges[ranges.length - 1][1] > 0xFFFF ? 2 : 1;\n  var cmap = '\\x00\\x00' + string16(numTables) + '\\x00\\x03' + '\\x00\\x01' + string32(4 + numTables * 8);\n  var i, ii, j, jj;\n  for (i = ranges.length - 1; i >= 0; --i) {\n   if (ranges[i][0] <= 0xFFFF) {\n    break;\n   }\n  }\n  var bmpLength = i + 1;\n  if (ranges[i][0] < 0xFFFF && ranges[i][1] === 0xFFFF) {\n   ranges[i][1] = 0xFFFE;\n  }\n  var trailingRangesCount = ranges[i][1] < 0xFFFF ? 1 : 0;\n  var segCount = bmpLength + trailingRangesCount;\n  var searchParams = OpenTypeFileBuilder.getSearchParams(segCount, 2);\n  var startCount = '';\n  var endCount = '';\n  var idDeltas = '';\n  var idRangeOffsets = '';\n  var glyphsIds = '';\n  var bias = 0;\n  var range, start, end, codes;\n  for (i = 0, ii = bmpLength; i < ii; i++) {\n   range = ranges[i];\n   start = range[0];\n   end = range[1];\n   startCount += string16(start);\n   endCount += string16(end);\n   codes = range[2];\n   var contiguous = true;\n   for (j = 1, jj = codes.length; j < jj; ++j) {\n    if (codes[j] !== codes[j - 1] + 1) {\n     contiguous = false;\n     break;\n    }\n   }\n   if (!contiguous) {\n    var offset = (segCount - i) * 2 + bias * 2;\n    bias += end - start + 1;\n    idDeltas += string16(0);\n    idRangeOffsets += string16(offset);\n    for (j = 0, jj = codes.length; j < jj; ++j) {\n     glyphsIds += string16(codes[j]);\n    }\n   } else {\n    var startCode = codes[0];\n    idDeltas += string16(startCode - start & 0xFFFF);\n    idRangeOffsets += string16(0);\n   }\n  }\n  if (trailingRangesCount > 0) {\n   endCount += '\\xFF\\xFF';\n   startCount += '\\xFF\\xFF';\n   idDeltas += '\\x00\\x01';\n   idRangeOffsets += '\\x00\\x00';\n  }\n  var format314 = '\\x00\\x00' + string16(2 * segCount) + string16(searchParams.range) + string16(searchParams.entry) + string16(searchParams.rangeShift) + endCount + '\\x00\\x00' + startCount + idDeltas + idRangeOffsets + glyphsIds;\n  var format31012 = '';\n  var header31012 = '';\n  if (numTables > 1) {\n   cmap += '\\x00\\x03' + '\\x00\\x0A' + string32(4 + numTables * 8 + 4 + format314.length);\n   format31012 = '';\n   for (i = 0, ii = ranges.length; i < ii; i++) {\n    range = ranges[i];\n    start = range[0];\n    codes = range[2];\n    var code = codes[0];\n    for (j = 1, jj = codes.length; j < jj; ++j) {\n     if (codes[j] !== codes[j - 1] + 1) {\n      end = range[0] + j - 1;\n      format31012 += string32(start) + string32(end) + string32(code);\n      start = end + 1;\n      code = codes[j];\n     }\n    }\n    format31012 += string32(start) + string32(range[1]) + string32(code);\n   }\n   header31012 = '\\x00\\x0C' + '\\x00\\x00' + string32(format31012.length + 16) + '\\x00\\x00\\x00\\x00' + string32(format31012.length / 12);\n  }\n  return cmap + '\\x00\\x04' + string16(format314.length + 4) + format314 + header31012 + format31012;\n }\n function validateOS2Table(os2) {\n  var stream = new Stream(os2.data);\n  var version = stream.getUint16();\n  stream.getBytes(60);\n  var selection = stream.getUint16();\n  if (version < 4 && selection & 0x0300) {\n   return false;\n  }\n  var firstChar = stream.getUint16();\n  var lastChar = stream.getUint16();\n  if (firstChar > lastChar) {\n   return false;\n  }\n  stream.getBytes(6);\n  var usWinAscent = stream.getUint16();\n  if (usWinAscent === 0) {\n   return false;\n  }\n  os2.data[8] = os2.data[9] = 0;\n  return true;\n }\n function createOS2Table(properties, charstrings, override) {\n  override = override || {\n   unitsPerEm: 0,\n   yMax: 0,\n   yMin: 0,\n   ascent: 0,\n   descent: 0\n  };\n  var ulUnicodeRange1 = 0;\n  var ulUnicodeRange2 = 0;\n  var ulUnicodeRange3 = 0;\n  var ulUnicodeRange4 = 0;\n  var firstCharIndex = null;\n  var lastCharIndex = 0;\n  if (charstrings) {\n   for (var code in charstrings) {\n    code |= 0;\n    if (firstCharIndex > code || !firstCharIndex) {\n     firstCharIndex = code;\n    }\n    if (lastCharIndex < code) {\n     lastCharIndex = code;\n    }\n    var position = getUnicodeRangeFor(code);\n    if (position < 32) {\n     ulUnicodeRange1 |= 1 << position;\n    } else if (position < 64) {\n     ulUnicodeRange2 |= 1 << position - 32;\n    } else if (position < 96) {\n     ulUnicodeRange3 |= 1 << position - 64;\n    } else if (position < 123) {\n     ulUnicodeRange4 |= 1 << position - 96;\n    } else {\n     error('Unicode ranges Bits > 123 are reserved for internal usage');\n    }\n   }\n  } else {\n   firstCharIndex = 0;\n   lastCharIndex = 255;\n  }\n  var bbox = properties.bbox || [\n   0,\n   0,\n   0,\n   0\n  ];\n  var unitsPerEm = override.unitsPerEm || 1 / (properties.fontMatrix || FONT_IDENTITY_MATRIX)[0];\n  var scale = properties.ascentScaled ? 1.0 : unitsPerEm / PDF_GLYPH_SPACE_UNITS;\n  var typoAscent = override.ascent || Math.round(scale * (properties.ascent || bbox[3]));\n  var typoDescent = override.descent || Math.round(scale * (properties.descent || bbox[1]));\n  if (typoDescent > 0 && properties.descent > 0 && bbox[1] < 0) {\n   typoDescent = -typoDescent;\n  }\n  var winAscent = override.yMax || typoAscent;\n  var winDescent = -override.yMin || -typoDescent;\n  return '\\x00\\x03' + '\\x02\\x24' + '\\x01\\xF4' + '\\x00\\x05' + '\\x00\\x00' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x00\\x8C' + '\\x02\\x8A' + '\\x02\\xBB' + '\\x00\\x00' + '\\x01\\xDF' + '\\x00\\x31' + '\\x01\\x02' + '\\x00\\x00' + '\\x00\\x00\\x06' + String.fromCharCode(properties.fixedPitch ? 0x09 : 0x00) + '\\x00\\x00\\x00\\x00\\x00\\x00' + string32(ulUnicodeRange1) + string32(ulUnicodeRange2) + string32(ulUnicodeRange3) + string32(ulUnicodeRange4) + '\\x2A\\x32\\x31\\x2A' + string16(properties.italicAngle ? 1 : 0) + string16(firstCharIndex || properties.firstChar) + string16(lastCharIndex || properties.lastChar) + string16(typoAscent) + string16(typoDescent) + '\\x00\\x64' + string16(winAscent) + string16(winDescent) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + string16(properties.xHeight) + string16(properties.capHeight) + string16(0) + string16(firstCharIndex || properties.firstChar) + '\\x00\\x03';\n }\n function createPostTable(properties) {\n  var angle = Math.floor(properties.italicAngle * Math.pow(2, 16));\n  return '\\x00\\x03\\x00\\x00' + string32(angle) + '\\x00\\x00' + '\\x00\\x00' + string32(properties.fixedPitch) + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00' + '\\x00\\x00\\x00\\x00';\n }\n function createNameTable(name, proto) {\n  if (!proto) {\n   proto = [\n    [],\n    []\n   ];\n  }\n  var strings = [\n   proto[0][0] || 'Original licence',\n   proto[0][1] || name,\n   proto[0][2] || 'Unknown',\n   proto[0][3] || 'uniqueID',\n   proto[0][4] || name,\n   proto[0][5] || 'Version 0.11',\n   proto[0][6] || '',\n   proto[0][7] || 'Unknown',\n   proto[0][8] || 'Unknown',\n   proto[0][9] || 'Unknown'\n  ];\n  var stringsUnicode = [];\n  var i, ii, j, jj, str;\n  for (i = 0, ii = strings.length; i < ii; i++) {\n   str = proto[1][i] || strings[i];\n   var strBufUnicode = [];\n   for (j = 0, jj = str.length; j < jj; j++) {\n    strBufUnicode.push(string16(str.charCodeAt(j)));\n   }\n   stringsUnicode.push(strBufUnicode.join(''));\n  }\n  var names = [\n   strings,\n   stringsUnicode\n  ];\n  var platforms = [\n   '\\x00\\x01',\n   '\\x00\\x03'\n  ];\n  var encodings = [\n   '\\x00\\x00',\n   '\\x00\\x01'\n  ];\n  var languages = [\n   '\\x00\\x00',\n   '\\x04\\x09'\n  ];\n  var namesRecordCount = strings.length * platforms.length;\n  var nameTable = '\\x00\\x00' + string16(namesRecordCount) + string16(namesRecordCount * 12 + 6);\n  var strOffset = 0;\n  for (i = 0, ii = platforms.length; i < ii; i++) {\n   var strs = names[i];\n   for (j = 0, jj = strs.length; j < jj; j++) {\n    str = strs[j];\n    var nameRecord = platforms[i] + encodings[i] + languages[i] + string16(j) + string16(str.length) + string16(strOffset);\n    nameTable += nameRecord;\n    strOffset += str.length;\n   }\n  }\n  nameTable += strings.join('') + stringsUnicode.join('');\n  return nameTable;\n }\n Font.prototype = {\n  name: null,\n  font: null,\n  mimetype: null,\n  encoding: null,\n  get renderer() {\n   var renderer = FontRendererFactory.create(this, SEAC_ANALYSIS_ENABLED);\n   return shadow(this, 'renderer', renderer);\n  },\n  exportData: function Font_exportData() {\n   var data = {};\n   for (var i in this) {\n    if (this.hasOwnProperty(i)) {\n     data[i] = this[i];\n    }\n   }\n   return data;\n  },\n  checkAndRepair: function Font_checkAndRepair(name, font, properties) {\n   function readTableEntry(file) {\n    var tag = bytesToString(file.getBytes(4));\n    var checksum = file.getInt32() >>> 0;\n    var offset = file.getInt32() >>> 0;\n    var length = file.getInt32() >>> 0;\n    var previousPosition = file.pos;\n    file.pos = file.start ? file.start : 0;\n    file.skip(offset);\n    var data = file.getBytes(length);\n    file.pos = previousPosition;\n    if (tag === 'head') {\n     data[8] = data[9] = data[10] = data[11] = 0;\n     data[17] |= 0x20;\n    }\n    return {\n     tag: tag,\n     checksum: checksum,\n     length: length,\n     offset: offset,\n     data: data\n    };\n   }\n   function readOpenTypeHeader(ttf) {\n    return {\n     version: bytesToString(ttf.getBytes(4)),\n     numTables: ttf.getUint16(),\n     searchRange: ttf.getUint16(),\n     entrySelector: ttf.getUint16(),\n     rangeShift: ttf.getUint16()\n    };\n   }\n   function readCmapTable(cmap, font, isSymbolicFont, hasEncoding) {\n    if (!cmap) {\n     warn('No cmap table available.');\n     return {\n      platformId: -1,\n      encodingId: -1,\n      mappings: [],\n      hasShortCmap: false\n     };\n    }\n    var segment;\n    var start = (font.start ? font.start : 0) + cmap.offset;\n    font.pos = start;\n    font.getUint16();\n    var numTables = font.getUint16();\n    var potentialTable;\n    var canBreak = false;\n    for (var i = 0; i < numTables; i++) {\n     var platformId = font.getUint16();\n     var encodingId = font.getUint16();\n     var offset = font.getInt32() >>> 0;\n     var useTable = false;\n     if (platformId === 0 && encodingId === 0) {\n      useTable = true;\n     } else if (platformId === 1 && encodingId === 0) {\n      useTable = true;\n     } else if (platformId === 3 && encodingId === 1 && (hasEncoding || !potentialTable)) {\n      useTable = true;\n      if (!isSymbolicFont) {\n       canBreak = true;\n      }\n     } else if (isSymbolicFont && platformId === 3 && encodingId === 0) {\n      useTable = true;\n      canBreak = true;\n     }\n     if (useTable) {\n      potentialTable = {\n       platformId: platformId,\n       encodingId: encodingId,\n       offset: offset\n      };\n     }\n     if (canBreak) {\n      break;\n     }\n    }\n    if (potentialTable) {\n     font.pos = start + potentialTable.offset;\n    }\n    if (!potentialTable || font.peekByte() === -1) {\n     warn('Could not find a preferred cmap table.');\n     return {\n      platformId: -1,\n      encodingId: -1,\n      mappings: [],\n      hasShortCmap: false\n     };\n    }\n    var format = font.getUint16();\n    font.getUint16();\n    font.getUint16();\n    var hasShortCmap = false;\n    var mappings = [];\n    var j, glyphId;\n    if (format === 0) {\n     for (j = 0; j < 256; j++) {\n      var index = font.getByte();\n      if (!index) {\n       continue;\n      }\n      mappings.push({\n       charCode: j,\n       glyphId: index\n      });\n     }\n     hasShortCmap = true;\n    } else if (format === 4) {\n     var segCount = font.getUint16() >> 1;\n     font.getBytes(6);\n     var segIndex, segments = [];\n     for (segIndex = 0; segIndex < segCount; segIndex++) {\n      segments.push({ end: font.getUint16() });\n     }\n     font.getUint16();\n     for (segIndex = 0; segIndex < segCount; segIndex++) {\n      segments[segIndex].start = font.getUint16();\n     }\n     for (segIndex = 0; segIndex < segCount; segIndex++) {\n      segments[segIndex].delta = font.getUint16();\n     }\n     var offsetsCount = 0;\n     for (segIndex = 0; segIndex < segCount; segIndex++) {\n      segment = segments[segIndex];\n      var rangeOffset = font.getUint16();\n      if (!rangeOffset) {\n       segment.offsetIndex = -1;\n       continue;\n      }\n      var offsetIndex = (rangeOffset >> 1) - (segCount - segIndex);\n      segment.offsetIndex = offsetIndex;\n      offsetsCount = Math.max(offsetsCount, offsetIndex + segment.end - segment.start + 1);\n     }\n     var offsets = [];\n     for (j = 0; j < offsetsCount; j++) {\n      offsets.push(font.getUint16());\n     }\n     for (segIndex = 0; segIndex < segCount; segIndex++) {\n      segment = segments[segIndex];\n      start = segment.start;\n      var end = segment.end;\n      var delta = segment.delta;\n      offsetIndex = segment.offsetIndex;\n      for (j = start; j <= end; j++) {\n       if (j === 0xFFFF) {\n        continue;\n       }\n       glyphId = offsetIndex < 0 ? j : offsets[offsetIndex + j - start];\n       glyphId = glyphId + delta & 0xFFFF;\n       if (glyphId === 0) {\n        continue;\n       }\n       mappings.push({\n        charCode: j,\n        glyphId: glyphId\n       });\n      }\n     }\n    } else if (format === 6) {\n     var firstCode = font.getUint16();\n     var entryCount = font.getUint16();\n     for (j = 0; j < entryCount; j++) {\n      glyphId = font.getUint16();\n      var charCode = firstCode + j;\n      mappings.push({\n       charCode: charCode,\n       glyphId: glyphId\n      });\n     }\n    } else {\n     warn('cmap table has unsupported format: ' + format);\n     return {\n      platformId: -1,\n      encodingId: -1,\n      mappings: [],\n      hasShortCmap: false\n     };\n    }\n    mappings.sort(function (a, b) {\n     return a.charCode - b.charCode;\n    });\n    for (i = 1; i < mappings.length; i++) {\n     if (mappings[i - 1].charCode === mappings[i].charCode) {\n      mappings.splice(i, 1);\n      i--;\n     }\n    }\n    return {\n     platformId: potentialTable.platformId,\n     encodingId: potentialTable.encodingId,\n     mappings: mappings,\n     hasShortCmap: hasShortCmap\n    };\n   }\n   function sanitizeMetrics(font, header, metrics, numGlyphs) {\n    if (!header) {\n     if (metrics) {\n      metrics.data = null;\n     }\n     return;\n    }\n    font.pos = (font.start ? font.start : 0) + header.offset;\n    font.pos += header.length - 2;\n    var numOfMetrics = font.getUint16();\n    if (numOfMetrics > numGlyphs) {\n     info('The numOfMetrics (' + numOfMetrics + ') should not be ' + 'greater than the numGlyphs (' + numGlyphs + ')');\n     numOfMetrics = numGlyphs;\n     header.data[34] = (numOfMetrics & 0xff00) >> 8;\n     header.data[35] = numOfMetrics & 0x00ff;\n    }\n    var numOfSidebearings = numGlyphs - numOfMetrics;\n    var numMissing = numOfSidebearings - (metrics.length - numOfMetrics * 4 >> 1);\n    if (numMissing > 0) {\n     var entries = new Uint8Array(metrics.length + numMissing * 2);\n     entries.set(metrics.data);\n     metrics.data = entries;\n    }\n   }\n   function sanitizeGlyph(source, sourceStart, sourceEnd, dest, destStart, hintsValid) {\n    if (sourceEnd - sourceStart <= 12) {\n     return 0;\n    }\n    var glyf = source.subarray(sourceStart, sourceEnd);\n    var contoursCount = glyf[0] << 8 | glyf[1];\n    if (contoursCount & 0x8000) {\n     dest.set(glyf, destStart);\n     return glyf.length;\n    }\n    var i, j = 10, flagsCount = 0;\n    for (i = 0; i < contoursCount; i++) {\n     var endPoint = glyf[j] << 8 | glyf[j + 1];\n     flagsCount = endPoint + 1;\n     j += 2;\n    }\n    var instructionsStart = j;\n    var instructionsLength = glyf[j] << 8 | glyf[j + 1];\n    j += 2 + instructionsLength;\n    var instructionsEnd = j;\n    var coordinatesLength = 0;\n    for (i = 0; i < flagsCount; i++) {\n     var flag = glyf[j++];\n     if (flag & 0xC0) {\n      glyf[j - 1] = flag & 0x3F;\n     }\n     var xyLength = (flag & 2 ? 1 : flag & 16 ? 0 : 2) + (flag & 4 ? 1 : flag & 32 ? 0 : 2);\n     coordinatesLength += xyLength;\n     if (flag & 8) {\n      var repeat = glyf[j++];\n      i += repeat;\n      coordinatesLength += repeat * xyLength;\n     }\n    }\n    if (coordinatesLength === 0) {\n     return 0;\n    }\n    var glyphDataLength = j + coordinatesLength;\n    if (glyphDataLength > glyf.length) {\n     return 0;\n    }\n    if (!hintsValid && instructionsLength > 0) {\n     dest.set(glyf.subarray(0, instructionsStart), destStart);\n     dest.set([\n      0,\n      0\n     ], destStart + instructionsStart);\n     dest.set(glyf.subarray(instructionsEnd, glyphDataLength), destStart + instructionsStart + 2);\n     glyphDataLength -= instructionsLength;\n     if (glyf.length - glyphDataLength > 3) {\n      glyphDataLength = glyphDataLength + 3 & ~3;\n     }\n     return glyphDataLength;\n    }\n    if (glyf.length - glyphDataLength > 3) {\n     glyphDataLength = glyphDataLength + 3 & ~3;\n     dest.set(glyf.subarray(0, glyphDataLength), destStart);\n     return glyphDataLength;\n    }\n    dest.set(glyf, destStart);\n    return glyf.length;\n   }\n   function sanitizeHead(head, numGlyphs, locaLength) {\n    var data = head.data;\n    var version = int32(data[0], data[1], data[2], data[3]);\n    if (version >> 16 !== 1) {\n     info('Attempting to fix invalid version in head table: ' + version);\n     data[0] = 0;\n     data[1] = 1;\n     data[2] = 0;\n     data[3] = 0;\n    }\n    var indexToLocFormat = int16(data[50], data[51]);\n    if (indexToLocFormat < 0 || indexToLocFormat > 1) {\n     info('Attempting to fix invalid indexToLocFormat in head table: ' + indexToLocFormat);\n     var numGlyphsPlusOne = numGlyphs + 1;\n     if (locaLength === numGlyphsPlusOne << 1) {\n      data[50] = 0;\n      data[51] = 0;\n     } else if (locaLength === numGlyphsPlusOne << 2) {\n      data[50] = 0;\n      data[51] = 1;\n     } else {\n      warn('Could not fix indexToLocFormat: ' + indexToLocFormat);\n     }\n    }\n   }\n   function sanitizeGlyphLocations(loca, glyf, numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry) {\n    var itemSize, itemDecode, itemEncode;\n    if (isGlyphLocationsLong) {\n     itemSize = 4;\n     itemDecode = function fontItemDecodeLong(data, offset) {\n      return data[offset] << 24 | data[offset + 1] << 16 | data[offset + 2] << 8 | data[offset + 3];\n     };\n     itemEncode = function fontItemEncodeLong(data, offset, value) {\n      data[offset] = value >>> 24 & 0xFF;\n      data[offset + 1] = value >> 16 & 0xFF;\n      data[offset + 2] = value >> 8 & 0xFF;\n      data[offset + 3] = value & 0xFF;\n     };\n    } else {\n     itemSize = 2;\n     itemDecode = function fontItemDecode(data, offset) {\n      return data[offset] << 9 | data[offset + 1] << 1;\n     };\n     itemEncode = function fontItemEncode(data, offset, value) {\n      data[offset] = value >> 9 & 0xFF;\n      data[offset + 1] = value >> 1 & 0xFF;\n     };\n    }\n    var locaData = loca.data;\n    var locaDataSize = itemSize * (1 + numGlyphs);\n    if (locaData.length !== locaDataSize) {\n     locaData = new Uint8Array(locaDataSize);\n     locaData.set(loca.data.subarray(0, locaDataSize));\n     loca.data = locaData;\n    }\n    var oldGlyfData = glyf.data;\n    var oldGlyfDataLength = oldGlyfData.length;\n    var newGlyfData = new Uint8Array(oldGlyfDataLength);\n    var startOffset = itemDecode(locaData, 0);\n    var writeOffset = 0;\n    var missingGlyphData = Object.create(null);\n    itemEncode(locaData, 0, writeOffset);\n    var i, j;\n    for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n     var endOffset = itemDecode(locaData, j);\n     if (endOffset > oldGlyfDataLength && (oldGlyfDataLength + 3 & ~3) === endOffset) {\n      endOffset = oldGlyfDataLength;\n     }\n     if (endOffset > oldGlyfDataLength) {\n      itemEncode(locaData, j, writeOffset);\n      startOffset = endOffset;\n      continue;\n     }\n     if (startOffset === endOffset) {\n      missingGlyphData[i] = true;\n     }\n     var newLength = sanitizeGlyph(oldGlyfData, startOffset, endOffset, newGlyfData, writeOffset, hintsValid);\n     writeOffset += newLength;\n     itemEncode(locaData, j, writeOffset);\n     startOffset = endOffset;\n    }\n    if (writeOffset === 0) {\n     var simpleGlyph = new Uint8Array([\n      0,\n      1,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      0,\n      49,\n      0\n     ]);\n     for (i = 0, j = itemSize; i < numGlyphs; i++, j += itemSize) {\n      itemEncode(locaData, j, simpleGlyph.length);\n     }\n     glyf.data = simpleGlyph;\n     return missingGlyphData;\n    }\n    if (dupFirstEntry) {\n     var firstEntryLength = itemDecode(locaData, itemSize);\n     if (newGlyfData.length > firstEntryLength + writeOffset) {\n      glyf.data = newGlyfData.subarray(0, firstEntryLength + writeOffset);\n     } else {\n      glyf.data = new Uint8Array(firstEntryLength + writeOffset);\n      glyf.data.set(newGlyfData.subarray(0, writeOffset));\n     }\n     glyf.data.set(newGlyfData.subarray(0, firstEntryLength), writeOffset);\n     itemEncode(loca.data, locaData.length - itemSize, writeOffset + firstEntryLength);\n    } else {\n     glyf.data = newGlyfData.subarray(0, writeOffset);\n    }\n    return missingGlyphData;\n   }\n   function readPostScriptTable(post, properties, maxpNumGlyphs) {\n    var start = (font.start ? font.start : 0) + post.offset;\n    font.pos = start;\n    var length = post.length, end = start + length;\n    var version = font.getInt32();\n    font.getBytes(28);\n    var glyphNames;\n    var valid = true;\n    var i;\n    switch (version) {\n    case 0x00010000:\n     glyphNames = MacStandardGlyphOrdering;\n     break;\n    case 0x00020000:\n     var numGlyphs = font.getUint16();\n     if (numGlyphs !== maxpNumGlyphs) {\n      valid = false;\n      break;\n     }\n     var glyphNameIndexes = [];\n     for (i = 0; i < numGlyphs; ++i) {\n      var index = font.getUint16();\n      if (index >= 32768) {\n       valid = false;\n       break;\n      }\n      glyphNameIndexes.push(index);\n     }\n     if (!valid) {\n      break;\n     }\n     var customNames = [];\n     var strBuf = [];\n     while (font.pos < end) {\n      var stringLength = font.getByte();\n      strBuf.length = stringLength;\n      for (i = 0; i < stringLength; ++i) {\n       strBuf[i] = String.fromCharCode(font.getByte());\n      }\n      customNames.push(strBuf.join(''));\n     }\n     glyphNames = [];\n     for (i = 0; i < numGlyphs; ++i) {\n      var j = glyphNameIndexes[i];\n      if (j < 258) {\n       glyphNames.push(MacStandardGlyphOrdering[j]);\n       continue;\n      }\n      glyphNames.push(customNames[j - 258]);\n     }\n     break;\n    case 0x00030000:\n     break;\n    default:\n     warn('Unknown/unsupported post table version ' + version);\n     valid = false;\n     if (properties.defaultEncoding) {\n      glyphNames = properties.defaultEncoding;\n     }\n     break;\n    }\n    properties.glyphNames = glyphNames;\n    return valid;\n   }\n   function readNameTable(nameTable) {\n    var start = (font.start ? font.start : 0) + nameTable.offset;\n    font.pos = start;\n    var names = [\n     [],\n     []\n    ];\n    var length = nameTable.length, end = start + length;\n    var format = font.getUint16();\n    var FORMAT_0_HEADER_LENGTH = 6;\n    if (format !== 0 || length < FORMAT_0_HEADER_LENGTH) {\n     return names;\n    }\n    var numRecords = font.getUint16();\n    var stringsStart = font.getUint16();\n    var records = [];\n    var NAME_RECORD_LENGTH = 12;\n    var i, ii;\n    for (i = 0; i < numRecords && font.pos + NAME_RECORD_LENGTH <= end; i++) {\n     var r = {\n      platform: font.getUint16(),\n      encoding: font.getUint16(),\n      language: font.getUint16(),\n      name: font.getUint16(),\n      length: font.getUint16(),\n      offset: font.getUint16()\n     };\n     if (r.platform === 1 && r.encoding === 0 && r.language === 0 || r.platform === 3 && r.encoding === 1 && r.language === 0x409) {\n      records.push(r);\n     }\n    }\n    for (i = 0, ii = records.length; i < ii; i++) {\n     var record = records[i];\n     if (record.length <= 0) {\n      continue;\n     }\n     var pos = start + stringsStart + record.offset;\n     if (pos + record.length > end) {\n      continue;\n     }\n     font.pos = pos;\n     var nameIndex = record.name;\n     if (record.encoding) {\n      var str = '';\n      for (var j = 0, jj = record.length; j < jj; j += 2) {\n       str += String.fromCharCode(font.getUint16());\n      }\n      names[1][nameIndex] = str;\n     } else {\n      names[0][nameIndex] = bytesToString(font.getBytes(record.length));\n     }\n    }\n    return names;\n   }\n   var TTOpsStackDeltas = [\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    -2,\n    -2,\n    -2,\n    -2,\n    0,\n    0,\n    -2,\n    -5,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    0,\n    0,\n    -1,\n    0,\n    -1,\n    -1,\n    -1,\n    -1,\n    1,\n    -1,\n    -999,\n    0,\n    1,\n    0,\n    -1,\n    -2,\n    0,\n    -1,\n    -2,\n    -1,\n    -1,\n    0,\n    -1,\n    -1,\n    0,\n    0,\n    -999,\n    -999,\n    -1,\n    -1,\n    -1,\n    -1,\n    -2,\n    -999,\n    -2,\n    -2,\n    -999,\n    0,\n    -2,\n    -2,\n    0,\n    0,\n    -2,\n    0,\n    -2,\n    0,\n    0,\n    0,\n    -2,\n    -1,\n    -1,\n    1,\n    1,\n    0,\n    0,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    0,\n    0,\n    -1,\n    0,\n    -1,\n    -1,\n    0,\n    -999,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    -1,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    0,\n    -2,\n    -999,\n    -999,\n    -999,\n    -999,\n    -999,\n    -1,\n    -1,\n    -2,\n    -2,\n    0,\n    0,\n    0,\n    0,\n    -1,\n    -1,\n    -999,\n    -2,\n    -2,\n    0,\n    0,\n    -1,\n    -2,\n    -2,\n    0,\n    0,\n    0,\n    -1,\n    -1,\n    -1,\n    -2\n   ];\n   function sanitizeTTProgram(table, ttContext) {\n    var data = table.data;\n    var i = 0, j, n, b, funcId, pc, lastEndf = 0, lastDeff = 0;\n    var stack = [];\n    var callstack = [];\n    var functionsCalled = [];\n    var tooComplexToFollowFunctions = ttContext.tooComplexToFollowFunctions;\n    var inFDEF = false, ifLevel = 0, inELSE = 0;\n    for (var ii = data.length; i < ii;) {\n     var op = data[i++];\n     if (op === 0x40) {\n      n = data[i++];\n      if (inFDEF || inELSE) {\n       i += n;\n      } else {\n       for (j = 0; j < n; j++) {\n        stack.push(data[i++]);\n       }\n      }\n     } else if (op === 0x41) {\n      n = data[i++];\n      if (inFDEF || inELSE) {\n       i += n * 2;\n      } else {\n       for (j = 0; j < n; j++) {\n        b = data[i++];\n        stack.push(b << 8 | data[i++]);\n       }\n      }\n     } else if ((op & 0xF8) === 0xB0) {\n      n = op - 0xB0 + 1;\n      if (inFDEF || inELSE) {\n       i += n;\n      } else {\n       for (j = 0; j < n; j++) {\n        stack.push(data[i++]);\n       }\n      }\n     } else if ((op & 0xF8) === 0xB8) {\n      n = op - 0xB8 + 1;\n      if (inFDEF || inELSE) {\n       i += n * 2;\n      } else {\n       for (j = 0; j < n; j++) {\n        b = data[i++];\n        stack.push(b << 8 | data[i++]);\n       }\n      }\n     } else if (op === 0x2B && !tooComplexToFollowFunctions) {\n      if (!inFDEF && !inELSE) {\n       funcId = stack[stack.length - 1];\n       ttContext.functionsUsed[funcId] = true;\n       if (funcId in ttContext.functionsStackDeltas) {\n        stack.length += ttContext.functionsStackDeltas[funcId];\n       } else if (funcId in ttContext.functionsDefined && functionsCalled.indexOf(funcId) < 0) {\n        callstack.push({\n         data: data,\n         i: i,\n         stackTop: stack.length - 1\n        });\n        functionsCalled.push(funcId);\n        pc = ttContext.functionsDefined[funcId];\n        if (!pc) {\n         warn('TT: CALL non-existent function');\n         ttContext.hintsValid = false;\n         return;\n        }\n        data = pc.data;\n        i = pc.i;\n       }\n      }\n     } else if (op === 0x2C && !tooComplexToFollowFunctions) {\n      if (inFDEF || inELSE) {\n       warn('TT: nested FDEFs not allowed');\n       tooComplexToFollowFunctions = true;\n      }\n      inFDEF = true;\n      lastDeff = i;\n      funcId = stack.pop();\n      ttContext.functionsDefined[funcId] = {\n       data: data,\n       i: i\n      };\n     } else if (op === 0x2D) {\n      if (inFDEF) {\n       inFDEF = false;\n       lastEndf = i;\n      } else {\n       pc = callstack.pop();\n       if (!pc) {\n        warn('TT: ENDF bad stack');\n        ttContext.hintsValid = false;\n        return;\n       }\n       funcId = functionsCalled.pop();\n       data = pc.data;\n       i = pc.i;\n       ttContext.functionsStackDeltas[funcId] = stack.length - pc.stackTop;\n      }\n     } else if (op === 0x89) {\n      if (inFDEF || inELSE) {\n       warn('TT: nested IDEFs not allowed');\n       tooComplexToFollowFunctions = true;\n      }\n      inFDEF = true;\n      lastDeff = i;\n     } else if (op === 0x58) {\n      ++ifLevel;\n     } else if (op === 0x1B) {\n      inELSE = ifLevel;\n     } else if (op === 0x59) {\n      if (inELSE === ifLevel) {\n       inELSE = 0;\n      }\n      --ifLevel;\n     } else if (op === 0x1C) {\n      if (!inFDEF && !inELSE) {\n       var offset = stack[stack.length - 1];\n       if (offset > 0) {\n        i += offset - 1;\n       }\n      }\n     }\n     if (!inFDEF && !inELSE) {\n      var stackDelta = op <= 0x8E ? TTOpsStackDeltas[op] : op >= 0xC0 && op <= 0xDF ? -1 : op >= 0xE0 ? -2 : 0;\n      if (op >= 0x71 && op <= 0x75) {\n       n = stack.pop();\n       if (!isNaN(n)) {\n        stackDelta = -n * 2;\n       }\n      }\n      while (stackDelta < 0 && stack.length > 0) {\n       stack.pop();\n       stackDelta++;\n      }\n      while (stackDelta > 0) {\n       stack.push(NaN);\n       stackDelta--;\n      }\n     }\n    }\n    ttContext.tooComplexToFollowFunctions = tooComplexToFollowFunctions;\n    var content = [data];\n    if (i > data.length) {\n     content.push(new Uint8Array(i - data.length));\n    }\n    if (lastDeff > lastEndf) {\n     warn('TT: complementing a missing function tail');\n     content.push(new Uint8Array([\n      0x22,\n      0x2D\n     ]));\n    }\n    foldTTTable(table, content);\n   }\n   function checkInvalidFunctions(ttContext, maxFunctionDefs) {\n    if (ttContext.tooComplexToFollowFunctions) {\n     return;\n    }\n    if (ttContext.functionsDefined.length > maxFunctionDefs) {\n     warn('TT: more functions defined than expected');\n     ttContext.hintsValid = false;\n     return;\n    }\n    for (var j = 0, jj = ttContext.functionsUsed.length; j < jj; j++) {\n     if (j > maxFunctionDefs) {\n      warn('TT: invalid function id: ' + j);\n      ttContext.hintsValid = false;\n      return;\n     }\n     if (ttContext.functionsUsed[j] && !ttContext.functionsDefined[j]) {\n      warn('TT: undefined function: ' + j);\n      ttContext.hintsValid = false;\n      return;\n     }\n    }\n   }\n   function foldTTTable(table, content) {\n    if (content.length > 1) {\n     var newLength = 0;\n     var j, jj;\n     for (j = 0, jj = content.length; j < jj; j++) {\n      newLength += content[j].length;\n     }\n     newLength = newLength + 3 & ~3;\n     var result = new Uint8Array(newLength);\n     var pos = 0;\n     for (j = 0, jj = content.length; j < jj; j++) {\n      result.set(content[j], pos);\n      pos += content[j].length;\n     }\n     table.data = result;\n     table.length = newLength;\n    }\n   }\n   function sanitizeTTPrograms(fpgm, prep, cvt, maxFunctionDefs) {\n    var ttContext = {\n     functionsDefined: [],\n     functionsUsed: [],\n     functionsStackDeltas: [],\n     tooComplexToFollowFunctions: false,\n     hintsValid: true\n    };\n    if (fpgm) {\n     sanitizeTTProgram(fpgm, ttContext);\n    }\n    if (prep) {\n     sanitizeTTProgram(prep, ttContext);\n    }\n    if (fpgm) {\n     checkInvalidFunctions(ttContext, maxFunctionDefs);\n    }\n    if (cvt && cvt.length & 1) {\n     var cvtData = new Uint8Array(cvt.length + 1);\n     cvtData.set(cvt.data);\n     cvt.data = cvtData;\n    }\n    return ttContext.hintsValid;\n   }\n   font = new Stream(new Uint8Array(font.getBytes()));\n   var VALID_TABLES = [\n    'OS/2',\n    'cmap',\n    'head',\n    'hhea',\n    'hmtx',\n    'maxp',\n    'name',\n    'post',\n    'loca',\n    'glyf',\n    'fpgm',\n    'prep',\n    'cvt ',\n    'CFF '\n   ];\n   var header = readOpenTypeHeader(font);\n   var numTables = header.numTables;\n   var cff, cffFile;\n   var tables = Object.create(null);\n   tables['OS/2'] = null;\n   tables['cmap'] = null;\n   tables['head'] = null;\n   tables['hhea'] = null;\n   tables['hmtx'] = null;\n   tables['maxp'] = null;\n   tables['name'] = null;\n   tables['post'] = null;\n   var table;\n   for (var i = 0; i < numTables; i++) {\n    table = readTableEntry(font);\n    if (VALID_TABLES.indexOf(table.tag) < 0) {\n     continue;\n    }\n    if (table.length === 0) {\n     continue;\n    }\n    tables[table.tag] = table;\n   }\n   var isTrueType = !tables['CFF '];\n   if (!isTrueType) {\n    if (header.version === 'OTTO' && !properties.composite || !tables['head'] || !tables['hhea'] || !tables['maxp'] || !tables['post']) {\n     cffFile = new Stream(tables['CFF '].data);\n     cff = new CFFFont(cffFile, properties);\n     adjustWidths(properties);\n     return this.convert(name, cff, properties);\n    }\n    delete tables['glyf'];\n    delete tables['loca'];\n    delete tables['fpgm'];\n    delete tables['prep'];\n    delete tables['cvt '];\n    this.isOpenType = true;\n   } else {\n    if (!tables['loca']) {\n     error('Required \"loca\" table is not found');\n    }\n    if (!tables['glyf']) {\n     warn('Required \"glyf\" table is not found -- trying to recover.');\n     tables['glyf'] = {\n      tag: 'glyf',\n      data: new Uint8Array(0)\n     };\n    }\n    this.isOpenType = false;\n   }\n   if (!tables['maxp']) {\n    error('Required \"maxp\" table is not found');\n   }\n   font.pos = (font.start || 0) + tables['maxp'].offset;\n   var version = font.getInt32();\n   var numGlyphs = font.getUint16();\n   var maxFunctionDefs = 0;\n   if (version >= 0x00010000 && tables['maxp'].length >= 22) {\n    font.pos += 8;\n    var maxZones = font.getUint16();\n    if (maxZones > 2) {\n     tables['maxp'].data[14] = 0;\n     tables['maxp'].data[15] = 2;\n    }\n    font.pos += 4;\n    maxFunctionDefs = font.getUint16();\n   }\n   var dupFirstEntry = false;\n   if (properties.type === 'CIDFontType2' && properties.toUnicode && properties.toUnicode.get(0) > '\\u0000') {\n    dupFirstEntry = true;\n    numGlyphs++;\n    tables['maxp'].data[4] = numGlyphs >> 8;\n    tables['maxp'].data[5] = numGlyphs & 255;\n   }\n   var hintsValid = sanitizeTTPrograms(tables['fpgm'], tables['prep'], tables['cvt '], maxFunctionDefs);\n   if (!hintsValid) {\n    delete tables['fpgm'];\n    delete tables['prep'];\n    delete tables['cvt '];\n   }\n   sanitizeMetrics(font, tables['hhea'], tables['hmtx'], numGlyphs);\n   if (!tables['head']) {\n    error('Required \"head\" table is not found');\n   }\n   sanitizeHead(tables['head'], numGlyphs, isTrueType ? tables['loca'].length : 0);\n   var missingGlyphs = Object.create(null);\n   if (isTrueType) {\n    var isGlyphLocationsLong = int16(tables['head'].data[50], tables['head'].data[51]);\n    missingGlyphs = sanitizeGlyphLocations(tables['loca'], tables['glyf'], numGlyphs, isGlyphLocationsLong, hintsValid, dupFirstEntry);\n   }\n   if (!tables['hhea']) {\n    error('Required \"hhea\" table is not found');\n   }\n   if (tables['hhea'].data[10] === 0 && tables['hhea'].data[11] === 0) {\n    tables['hhea'].data[10] = 0xFF;\n    tables['hhea'].data[11] = 0xFF;\n   }\n   var metricsOverride = {\n    unitsPerEm: int16(tables['head'].data[18], tables['head'].data[19]),\n    yMax: int16(tables['head'].data[42], tables['head'].data[43]),\n    yMin: signedInt16(tables['head'].data[38], tables['head'].data[39]),\n    ascent: int16(tables['hhea'].data[4], tables['hhea'].data[5]),\n    descent: signedInt16(tables['hhea'].data[6], tables['hhea'].data[7])\n   };\n   this.ascent = metricsOverride.ascent / metricsOverride.unitsPerEm;\n   this.descent = metricsOverride.descent / metricsOverride.unitsPerEm;\n   if (tables['post']) {\n    var valid = readPostScriptTable(tables['post'], properties, numGlyphs);\n    if (!valid) {\n     tables['post'] = null;\n    }\n   }\n   var charCodeToGlyphId = [], charCode;\n   var toUnicode = properties.toUnicode, widths = properties.widths;\n   var skipToUnicode = toUnicode instanceof IdentityToUnicodeMap || toUnicode.length === 0x10000;\n   function hasGlyph(glyphId, charCode, widthCode) {\n    if (!missingGlyphs[glyphId]) {\n     return true;\n    }\n    if (!skipToUnicode && charCode >= 0 && toUnicode.has(charCode)) {\n     return true;\n    }\n    if (widths && widthCode >= 0 && isNum(widths[widthCode])) {\n     return true;\n    }\n    return false;\n   }\n   if (properties.composite) {\n    var cidToGidMap = properties.cidToGidMap || [];\n    var isCidToGidMapEmpty = cidToGidMap.length === 0;\n    properties.cMap.forEach(function (charCode, cid) {\n     assert(cid <= 0xffff, 'Max size of CID is 65,535');\n     var glyphId = -1;\n     if (isCidToGidMapEmpty) {\n      glyphId = cid;\n     } else if (cidToGidMap[cid] !== undefined) {\n      glyphId = cidToGidMap[cid];\n     }\n     if (glyphId >= 0 && glyphId < numGlyphs && hasGlyph(glyphId, charCode, cid)) {\n      charCodeToGlyphId[charCode] = glyphId;\n     }\n    });\n    if (dupFirstEntry && (isCidToGidMapEmpty || !charCodeToGlyphId[0])) {\n     charCodeToGlyphId[0] = numGlyphs - 1;\n    }\n   } else {\n    var cmapTable = readCmapTable(tables['cmap'], font, this.isSymbolicFont, properties.hasEncoding);\n    var cmapPlatformId = cmapTable.platformId;\n    var cmapEncodingId = cmapTable.encodingId;\n    var cmapMappings = cmapTable.mappings;\n    var cmapMappingsLength = cmapMappings.length;\n    if (properties.hasEncoding && (cmapPlatformId === 3 && cmapEncodingId === 1 || cmapPlatformId === 1 && cmapEncodingId === 0) || cmapPlatformId === -1 && cmapEncodingId === -1 && !!getEncoding(properties.baseEncodingName)) {\n     var baseEncoding = [];\n     if (properties.baseEncodingName === 'MacRomanEncoding' || properties.baseEncodingName === 'WinAnsiEncoding') {\n      baseEncoding = getEncoding(properties.baseEncodingName);\n     }\n     var glyphsUnicodeMap = getGlyphsUnicode();\n     for (charCode = 0; charCode < 256; charCode++) {\n      var glyphName, standardGlyphName;\n      if (this.differences && charCode in this.differences) {\n       glyphName = this.differences[charCode];\n      } else if (charCode in baseEncoding && baseEncoding[charCode] !== '') {\n       glyphName = baseEncoding[charCode];\n      } else {\n       glyphName = StandardEncoding[charCode];\n      }\n      if (!glyphName) {\n       continue;\n      }\n      standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n      var unicodeOrCharCode, isUnicode = false;\n      if (cmapPlatformId === 3 && cmapEncodingId === 1) {\n       unicodeOrCharCode = glyphsUnicodeMap[standardGlyphName];\n       isUnicode = true;\n      } else if (cmapPlatformId === 1 && cmapEncodingId === 0) {\n       unicodeOrCharCode = MacRomanEncoding.indexOf(standardGlyphName);\n      }\n      var found = false;\n      for (i = 0; i < cmapMappingsLength; ++i) {\n       if (cmapMappings[i].charCode !== unicodeOrCharCode) {\n        continue;\n       }\n       var code = isUnicode ? charCode : unicodeOrCharCode;\n       if (hasGlyph(cmapMappings[i].glyphId, code, -1)) {\n        charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n        found = true;\n        break;\n       }\n      }\n      if (!found && properties.glyphNames) {\n       var glyphId = properties.glyphNames.indexOf(glyphName);\n       if (glyphId === -1 && standardGlyphName !== glyphName) {\n        glyphId = properties.glyphNames.indexOf(standardGlyphName);\n       }\n       if (glyphId > 0 && hasGlyph(glyphId, -1, -1)) {\n        charCodeToGlyphId[charCode] = glyphId;\n        found = true;\n       }\n      }\n      if (!found) {\n       charCodeToGlyphId[charCode] = 0;\n      }\n     }\n    } else if (cmapPlatformId === 0 && cmapEncodingId === 0) {\n     for (i = 0; i < cmapMappingsLength; ++i) {\n      charCodeToGlyphId[cmapMappings[i].charCode] = cmapMappings[i].glyphId;\n     }\n    } else {\n     for (i = 0; i < cmapMappingsLength; ++i) {\n      charCode = cmapMappings[i].charCode & 0xFF;\n      charCodeToGlyphId[charCode] = cmapMappings[i].glyphId;\n     }\n    }\n   }\n   if (charCodeToGlyphId.length === 0) {\n    charCodeToGlyphId[0] = 0;\n   }\n   var newMapping = adjustMapping(charCodeToGlyphId, properties);\n   this.toFontChar = newMapping.toFontChar;\n   tables['cmap'] = {\n    tag: 'cmap',\n    data: createCmapTable(newMapping.charCodeToGlyphId, numGlyphs)\n   };\n   if (!tables['OS/2'] || !validateOS2Table(tables['OS/2'])) {\n    tables['OS/2'] = {\n     tag: 'OS/2',\n     data: createOS2Table(properties, newMapping.charCodeToGlyphId, metricsOverride)\n    };\n   }\n   if (!tables['post']) {\n    tables['post'] = {\n     tag: 'post',\n     data: createPostTable(properties)\n    };\n   }\n   if (!isTrueType) {\n    try {\n     cffFile = new Stream(tables['CFF '].data);\n     var parser = new CFFParser(cffFile, properties, SEAC_ANALYSIS_ENABLED);\n     cff = parser.parse();\n     var compiler = new CFFCompiler(cff);\n     tables['CFF '].data = compiler.compile();\n    } catch (e) {\n     warn('Failed to compile font ' + properties.loadedName);\n    }\n   }\n   if (!tables['name']) {\n    tables['name'] = {\n     tag: 'name',\n     data: createNameTable(this.name)\n    };\n   } else {\n    var namePrototype = readNameTable(tables['name']);\n    tables['name'].data = createNameTable(name, namePrototype);\n   }\n   var builder = new OpenTypeFileBuilder(header.version);\n   for (var tableTag in tables) {\n    builder.addTable(tableTag, tables[tableTag].data);\n   }\n   return builder.toArray();\n  },\n  convert: function Font_convert(fontName, font, properties) {\n   properties.fixedPitch = false;\n   if (properties.builtInEncoding) {\n    adjustToUnicode(properties, properties.builtInEncoding);\n   }\n   var mapping = font.getGlyphMapping(properties);\n   var newMapping = adjustMapping(mapping, properties);\n   this.toFontChar = newMapping.toFontChar;\n   var numGlyphs = font.numGlyphs;\n   function getCharCodes(charCodeToGlyphId, glyphId) {\n    var charCodes = null;\n    for (var charCode in charCodeToGlyphId) {\n     if (glyphId === charCodeToGlyphId[charCode]) {\n      if (!charCodes) {\n       charCodes = [];\n      }\n      charCodes.push(charCode | 0);\n     }\n    }\n    return charCodes;\n   }\n   function createCharCode(charCodeToGlyphId, glyphId) {\n    for (var charCode in charCodeToGlyphId) {\n     if (glyphId === charCodeToGlyphId[charCode]) {\n      return charCode | 0;\n     }\n    }\n    newMapping.charCodeToGlyphId[newMapping.nextAvailableFontCharCode] = glyphId;\n    return newMapping.nextAvailableFontCharCode++;\n   }\n   var seacs = font.seacs;\n   if (SEAC_ANALYSIS_ENABLED && seacs && seacs.length) {\n    var matrix = properties.fontMatrix || FONT_IDENTITY_MATRIX;\n    var charset = font.getCharset();\n    var seacMap = Object.create(null);\n    for (var glyphId in seacs) {\n     glyphId |= 0;\n     var seac = seacs[glyphId];\n     var baseGlyphName = StandardEncoding[seac[2]];\n     var accentGlyphName = StandardEncoding[seac[3]];\n     var baseGlyphId = charset.indexOf(baseGlyphName);\n     var accentGlyphId = charset.indexOf(accentGlyphName);\n     if (baseGlyphId < 0 || accentGlyphId < 0) {\n      continue;\n     }\n     var accentOffset = {\n      x: seac[0] * matrix[0] + seac[1] * matrix[2] + matrix[4],\n      y: seac[0] * matrix[1] + seac[1] * matrix[3] + matrix[5]\n     };\n     var charCodes = getCharCodes(mapping, glyphId);\n     if (!charCodes) {\n      continue;\n     }\n     for (var i = 0, ii = charCodes.length; i < ii; i++) {\n      var charCode = charCodes[i];\n      var charCodeToGlyphId = newMapping.charCodeToGlyphId;\n      var baseFontCharCode = createCharCode(charCodeToGlyphId, baseGlyphId);\n      var accentFontCharCode = createCharCode(charCodeToGlyphId, accentGlyphId);\n      seacMap[charCode] = {\n       baseFontCharCode: baseFontCharCode,\n       accentFontCharCode: accentFontCharCode,\n       accentOffset: accentOffset\n      };\n     }\n    }\n    properties.seacMap = seacMap;\n   }\n   var unitsPerEm = 1 / (properties.fontMatrix || FONT_IDENTITY_MATRIX)[0];\n   var builder = new OpenTypeFileBuilder('\\x4F\\x54\\x54\\x4F');\n   builder.addTable('CFF ', font.data);\n   builder.addTable('OS/2', createOS2Table(properties, newMapping.charCodeToGlyphId));\n   builder.addTable('cmap', createCmapTable(newMapping.charCodeToGlyphId, numGlyphs));\n   builder.addTable('head', '\\x00\\x01\\x00\\x00' + '\\x00\\x00\\x10\\x00' + '\\x00\\x00\\x00\\x00' + '\\x5F\\x0F\\x3C\\xF5' + '\\x00\\x00' + safeString16(unitsPerEm) + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00\\x00\\x00\\x9e\\x0b\\x7e\\x27' + '\\x00\\x00' + safeString16(properties.descent) + '\\x0F\\xFF' + safeString16(properties.ascent) + string16(properties.italicAngle ? 2 : 0) + '\\x00\\x11' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00');\n   builder.addTable('hhea', '\\x00\\x01\\x00\\x00' + safeString16(properties.ascent) + safeString16(properties.descent) + '\\x00\\x00' + '\\xFF\\xFF' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + safeString16(properties.capHeight) + safeString16(Math.tan(properties.italicAngle) * properties.xHeight) + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + '\\x00\\x00' + string16(numGlyphs));\n   builder.addTable('hmtx', function fontFieldsHmtx() {\n    var charstrings = font.charstrings;\n    var cffWidths = font.cff ? font.cff.widths : null;\n    var hmtx = '\\x00\\x00\\x00\\x00';\n    for (var i = 1, ii = numGlyphs; i < ii; i++) {\n     var width = 0;\n     if (charstrings) {\n      var charstring = charstrings[i - 1];\n      width = 'width' in charstring ? charstring.width : 0;\n     } else if (cffWidths) {\n      width = Math.ceil(cffWidths[i] || 0);\n     }\n     hmtx += string16(width) + string16(0);\n    }\n    return hmtx;\n   }());\n   builder.addTable('maxp', '\\x00\\x00\\x50\\x00' + string16(numGlyphs));\n   builder.addTable('name', createNameTable(fontName));\n   builder.addTable('post', createPostTable(properties));\n   return builder.toArray();\n  },\n  get spaceWidth() {\n   if ('_shadowWidth' in this) {\n    return this._shadowWidth;\n   }\n   var possibleSpaceReplacements = [\n    'space',\n    'minus',\n    'one',\n    'i',\n    'I'\n   ];\n   var width;\n   for (var i = 0, ii = possibleSpaceReplacements.length; i < ii; i++) {\n    var glyphName = possibleSpaceReplacements[i];\n    if (glyphName in this.widths) {\n     width = this.widths[glyphName];\n     break;\n    }\n    var glyphsUnicodeMap = getGlyphsUnicode();\n    var glyphUnicode = glyphsUnicodeMap[glyphName];\n    var charcode = 0;\n    if (this.composite) {\n     if (this.cMap.contains(glyphUnicode)) {\n      charcode = this.cMap.lookup(glyphUnicode);\n     }\n    }\n    if (!charcode && this.toUnicode) {\n     charcode = this.toUnicode.charCodeOf(glyphUnicode);\n    }\n    if (charcode <= 0) {\n     charcode = glyphUnicode;\n    }\n    width = this.widths[charcode];\n    if (width) {\n     break;\n    }\n   }\n   width = width || this.defaultWidth;\n   this._shadowWidth = width;\n   return width;\n  },\n  charToGlyph: function Font_charToGlyph(charcode, isSpace) {\n   var fontCharCode, width, operatorListId;\n   var widthCode = charcode;\n   if (this.cMap && this.cMap.contains(charcode)) {\n    widthCode = this.cMap.lookup(charcode);\n   }\n   width = this.widths[widthCode];\n   width = isNum(width) ? width : this.defaultWidth;\n   var vmetric = this.vmetrics && this.vmetrics[widthCode];\n   var unicode = this.toUnicode.get(charcode) || charcode;\n   if (typeof unicode === 'number') {\n    unicode = String.fromCharCode(unicode);\n   }\n   var isInFont = charcode in this.toFontChar;\n   fontCharCode = this.toFontChar[charcode] || charcode;\n   if (this.missingFile) {\n    fontCharCode = mapSpecialUnicodeValues(fontCharCode);\n   }\n   if (this.isType3Font) {\n    operatorListId = fontCharCode;\n   }\n   var accent = null;\n   if (this.seacMap && this.seacMap[charcode]) {\n    isInFont = true;\n    var seac = this.seacMap[charcode];\n    fontCharCode = seac.baseFontCharCode;\n    accent = {\n     fontChar: String.fromCharCode(seac.accentFontCharCode),\n     offset: seac.accentOffset\n    };\n   }\n   var fontChar = String.fromCharCode(fontCharCode);\n   var glyph = this.glyphCache[charcode];\n   if (!glyph || !glyph.matchesForCache(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont)) {\n    glyph = new Glyph(fontChar, unicode, accent, width, vmetric, operatorListId, isSpace, isInFont);\n    this.glyphCache[charcode] = glyph;\n   }\n   return glyph;\n  },\n  charsToGlyphs: function Font_charsToGlyphs(chars) {\n   var charsCache = this.charsCache;\n   var glyphs, glyph, charcode;\n   if (charsCache) {\n    glyphs = charsCache[chars];\n    if (glyphs) {\n     return glyphs;\n    }\n   }\n   if (!charsCache) {\n    charsCache = this.charsCache = Object.create(null);\n   }\n   glyphs = [];\n   var charsCacheKey = chars;\n   var i = 0, ii;\n   if (this.cMap) {\n    var c = Object.create(null);\n    while (i < chars.length) {\n     this.cMap.readCharCode(chars, i, c);\n     charcode = c.charcode;\n     var length = c.length;\n     i += length;\n     var isSpace = length === 1 && chars.charCodeAt(i - 1) === 0x20;\n     glyph = this.charToGlyph(charcode, isSpace);\n     glyphs.push(glyph);\n    }\n   } else {\n    for (i = 0, ii = chars.length; i < ii; ++i) {\n     charcode = chars.charCodeAt(i);\n     glyph = this.charToGlyph(charcode, charcode === 0x20);\n     glyphs.push(glyph);\n    }\n   }\n   return charsCache[charsCacheKey] = glyphs;\n  }\n };\n return Font;\n}();\nvar ErrorFont = function ErrorFontClosure() {\n function ErrorFont(error) {\n  this.error = error;\n  this.loadedName = 'g_font_error';\n  this.loading = false;\n }\n ErrorFont.prototype = {\n  charsToGlyphs: function ErrorFont_charsToGlyphs() {\n   return [];\n  },\n  exportData: function ErrorFont_exportData() {\n   return { error: this.error };\n  }\n };\n return ErrorFont;\n}();\nfunction type1FontGlyphMapping(properties, builtInEncoding, glyphNames) {\n var charCodeToGlyphId = Object.create(null);\n var glyphId, charCode, baseEncoding;\n var isSymbolicFont = !!(properties.flags & FontFlags.Symbolic);\n if (properties.baseEncodingName) {\n  baseEncoding = getEncoding(properties.baseEncodingName);\n  for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n   glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n   if (glyphId >= 0) {\n    charCodeToGlyphId[charCode] = glyphId;\n   } else {\n    charCodeToGlyphId[charCode] = 0;\n   }\n  }\n } else if (isSymbolicFont) {\n  for (charCode in builtInEncoding) {\n   charCodeToGlyphId[charCode] = builtInEncoding[charCode];\n  }\n } else {\n  baseEncoding = StandardEncoding;\n  for (charCode = 0; charCode < baseEncoding.length; charCode++) {\n   glyphId = glyphNames.indexOf(baseEncoding[charCode]);\n   if (glyphId >= 0) {\n    charCodeToGlyphId[charCode] = glyphId;\n   } else {\n    charCodeToGlyphId[charCode] = 0;\n   }\n  }\n }\n var differences = properties.differences, glyphsUnicodeMap;\n if (differences) {\n  for (charCode in differences) {\n   var glyphName = differences[charCode];\n   glyphId = glyphNames.indexOf(glyphName);\n   if (glyphId === -1) {\n    if (!glyphsUnicodeMap) {\n     glyphsUnicodeMap = getGlyphsUnicode();\n    }\n    var standardGlyphName = recoverGlyphName(glyphName, glyphsUnicodeMap);\n    if (standardGlyphName !== glyphName) {\n     glyphId = glyphNames.indexOf(standardGlyphName);\n    }\n   }\n   if (glyphId >= 0) {\n    charCodeToGlyphId[charCode] = glyphId;\n   } else {\n    charCodeToGlyphId[charCode] = 0;\n   }\n  }\n }\n return charCodeToGlyphId;\n}\nvar Type1Font = function Type1FontClosure() {\n function findBlock(streamBytes, signature, startIndex) {\n  var streamBytesLength = streamBytes.length;\n  var signatureLength = signature.length;\n  var scanLength = streamBytesLength - signatureLength;\n  var i = startIndex, j, found = false;\n  while (i < scanLength) {\n   j = 0;\n   while (j < signatureLength && streamBytes[i + j] === signature[j]) {\n    j++;\n   }\n   if (j >= signatureLength) {\n    i += j;\n    while (i < streamBytesLength && isSpace(streamBytes[i])) {\n     i++;\n    }\n    found = true;\n    break;\n   }\n   i++;\n  }\n  return {\n   found: found,\n   length: i\n  };\n }\n function getHeaderBlock(stream, suggestedLength) {\n  var EEXEC_SIGNATURE = [\n   0x65,\n   0x65,\n   0x78,\n   0x65,\n   0x63\n  ];\n  var streamStartPos = stream.pos;\n  var headerBytes, headerBytesLength, block;\n  try {\n   headerBytes = stream.getBytes(suggestedLength);\n   headerBytesLength = headerBytes.length;\n  } catch (ex) {\n   if (ex instanceof MissingDataException) {\n    throw ex;\n   }\n  }\n  if (headerBytesLength === suggestedLength) {\n   block = findBlock(headerBytes, EEXEC_SIGNATURE, suggestedLength - 2 * EEXEC_SIGNATURE.length);\n   if (block.found && block.length === suggestedLength) {\n    return {\n     stream: new Stream(headerBytes),\n     length: suggestedLength\n    };\n   }\n  }\n  warn('Invalid \"Length1\" property in Type1 font -- trying to recover.');\n  stream.pos = streamStartPos;\n  var SCAN_BLOCK_LENGTH = 2048;\n  var actualLength;\n  while (true) {\n   var scanBytes = stream.peekBytes(SCAN_BLOCK_LENGTH);\n   block = findBlock(scanBytes, EEXEC_SIGNATURE, 0);\n   if (block.length === 0) {\n    break;\n   }\n   stream.pos += block.length;\n   if (block.found) {\n    actualLength = stream.pos - streamStartPos;\n    break;\n   }\n  }\n  stream.pos = streamStartPos;\n  if (actualLength) {\n   return {\n    stream: new Stream(stream.getBytes(actualLength)),\n    length: actualLength\n   };\n  }\n  warn('Unable to recover \"Length1\" property in Type1 font -- using as is.');\n  return {\n   stream: new Stream(stream.getBytes(suggestedLength)),\n   length: suggestedLength\n  };\n }\n function getEexecBlock(stream, suggestedLength) {\n  var eexecBytes = stream.getBytes();\n  return {\n   stream: new Stream(eexecBytes),\n   length: eexecBytes.length\n  };\n }\n function Type1Font(name, file, properties) {\n  var PFB_HEADER_SIZE = 6;\n  var headerBlockLength = properties.length1;\n  var eexecBlockLength = properties.length2;\n  var pfbHeader = file.peekBytes(PFB_HEADER_SIZE);\n  var pfbHeaderPresent = pfbHeader[0] === 0x80 && pfbHeader[1] === 0x01;\n  if (pfbHeaderPresent) {\n   file.skip(PFB_HEADER_SIZE);\n   headerBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n  }\n  var headerBlock = getHeaderBlock(file, headerBlockLength);\n  headerBlockLength = headerBlock.length;\n  var headerBlockParser = new Type1Parser(headerBlock.stream, false, SEAC_ANALYSIS_ENABLED);\n  headerBlockParser.extractFontHeader(properties);\n  if (pfbHeaderPresent) {\n   pfbHeader = file.getBytes(PFB_HEADER_SIZE);\n   eexecBlockLength = pfbHeader[5] << 24 | pfbHeader[4] << 16 | pfbHeader[3] << 8 | pfbHeader[2];\n  }\n  var eexecBlock = getEexecBlock(file, eexecBlockLength);\n  eexecBlockLength = eexecBlock.length;\n  var eexecBlockParser = new Type1Parser(eexecBlock.stream, true, SEAC_ANALYSIS_ENABLED);\n  var data = eexecBlockParser.extractFontProgram();\n  for (var info in data.properties) {\n   properties[info] = data.properties[info];\n  }\n  var charstrings = data.charstrings;\n  var type2Charstrings = this.getType2Charstrings(charstrings);\n  var subrs = this.getType2Subrs(data.subrs);\n  this.charstrings = charstrings;\n  this.data = this.wrap(name, type2Charstrings, this.charstrings, subrs, properties);\n  this.seacs = this.getSeacs(data.charstrings);\n }\n Type1Font.prototype = {\n  get numGlyphs() {\n   return this.charstrings.length + 1;\n  },\n  getCharset: function Type1Font_getCharset() {\n   var charset = ['.notdef'];\n   var charstrings = this.charstrings;\n   for (var glyphId = 0; glyphId < charstrings.length; glyphId++) {\n    charset.push(charstrings[glyphId].glyphName);\n   }\n   return charset;\n  },\n  getGlyphMapping: function Type1Font_getGlyphMapping(properties) {\n   var charstrings = this.charstrings;\n   var glyphNames = ['.notdef'], glyphId;\n   for (glyphId = 0; glyphId < charstrings.length; glyphId++) {\n    glyphNames.push(charstrings[glyphId].glyphName);\n   }\n   var encoding = properties.builtInEncoding;\n   if (encoding) {\n    var builtInEncoding = Object.create(null);\n    for (var charCode in encoding) {\n     glyphId = glyphNames.indexOf(encoding[charCode]);\n     if (glyphId >= 0) {\n      builtInEncoding[charCode] = glyphId;\n     }\n    }\n   }\n   return type1FontGlyphMapping(properties, builtInEncoding, glyphNames);\n  },\n  getSeacs: function Type1Font_getSeacs(charstrings) {\n   var i, ii;\n   var seacMap = [];\n   for (i = 0, ii = charstrings.length; i < ii; i++) {\n    var charstring = charstrings[i];\n    if (charstring.seac) {\n     seacMap[i + 1] = charstring.seac;\n    }\n   }\n   return seacMap;\n  },\n  getType2Charstrings: function Type1Font_getType2Charstrings(type1Charstrings) {\n   var type2Charstrings = [];\n   for (var i = 0, ii = type1Charstrings.length; i < ii; i++) {\n    type2Charstrings.push(type1Charstrings[i].charstring);\n   }\n   return type2Charstrings;\n  },\n  getType2Subrs: function Type1Font_getType2Subrs(type1Subrs) {\n   var bias = 0;\n   var count = type1Subrs.length;\n   if (count < 1133) {\n    bias = 107;\n   } else if (count < 33769) {\n    bias = 1131;\n   } else {\n    bias = 32768;\n   }\n   var type2Subrs = [];\n   var i;\n   for (i = 0; i < bias; i++) {\n    type2Subrs.push([0x0B]);\n   }\n   for (i = 0; i < count; i++) {\n    type2Subrs.push(type1Subrs[i]);\n   }\n   return type2Subrs;\n  },\n  wrap: function Type1Font_wrap(name, glyphs, charstrings, subrs, properties) {\n   var cff = new CFF();\n   cff.header = new CFFHeader(1, 0, 4, 4);\n   cff.names = [name];\n   var topDict = new CFFTopDict();\n   topDict.setByName('version', 391);\n   topDict.setByName('Notice', 392);\n   topDict.setByName('FullName', 393);\n   topDict.setByName('FamilyName', 394);\n   topDict.setByName('Weight', 395);\n   topDict.setByName('Encoding', null);\n   topDict.setByName('FontMatrix', properties.fontMatrix);\n   topDict.setByName('FontBBox', properties.bbox);\n   topDict.setByName('charset', null);\n   topDict.setByName('CharStrings', null);\n   topDict.setByName('Private', null);\n   cff.topDict = topDict;\n   var strings = new CFFStrings();\n   strings.add('Version 0.11');\n   strings.add('See original notice');\n   strings.add(name);\n   strings.add(name);\n   strings.add('Medium');\n   cff.strings = strings;\n   cff.globalSubrIndex = new CFFIndex();\n   var count = glyphs.length;\n   var charsetArray = [0];\n   var i, ii;\n   for (i = 0; i < count; i++) {\n    var index = CFFStandardStrings.indexOf(charstrings[i].glyphName);\n    if (index === -1) {\n     index = 0;\n    }\n    charsetArray.push(index >> 8 & 0xff, index & 0xff);\n   }\n   cff.charset = new CFFCharset(false, 0, [], charsetArray);\n   var charStringsIndex = new CFFIndex();\n   charStringsIndex.add([\n    0x8B,\n    0x0E\n   ]);\n   for (i = 0; i < count; i++) {\n    var glyph = glyphs[i];\n    if (glyph.length === 0) {\n     charStringsIndex.add([\n      0x8B,\n      0x0E\n     ]);\n     continue;\n    }\n    charStringsIndex.add(glyph);\n   }\n   cff.charStrings = charStringsIndex;\n   var privateDict = new CFFPrivateDict();\n   privateDict.setByName('Subrs', null);\n   var fields = [\n    'BlueValues',\n    'OtherBlues',\n    'FamilyBlues',\n    'FamilyOtherBlues',\n    'StemSnapH',\n    'StemSnapV',\n    'BlueShift',\n    'BlueFuzz',\n    'BlueScale',\n    'LanguageGroup',\n    'ExpansionFactor',\n    'ForceBold',\n    'StdHW',\n    'StdVW'\n   ];\n   for (i = 0, ii = fields.length; i < ii; i++) {\n    var field = fields[i];\n    if (!(field in properties.privateData)) {\n     continue;\n    }\n    var value = properties.privateData[field];\n    if (isArray(value)) {\n     for (var j = value.length - 1; j > 0; j--) {\n      value[j] -= value[j - 1];\n     }\n    }\n    privateDict.setByName(field, value);\n   }\n   cff.topDict.privateDict = privateDict;\n   var subrIndex = new CFFIndex();\n   for (i = 0, ii = subrs.length; i < ii; i++) {\n    subrIndex.add(subrs[i]);\n   }\n   privateDict.subrsIndex = subrIndex;\n   var compiler = new CFFCompiler(cff);\n   return compiler.compile();\n  }\n };\n return Type1Font;\n}();\nvar CFFFont = function CFFFontClosure() {\n function CFFFont(file, properties) {\n  this.properties = properties;\n  var parser = new CFFParser(file, properties, SEAC_ANALYSIS_ENABLED);\n  this.cff = parser.parse();\n  var compiler = new CFFCompiler(this.cff);\n  this.seacs = this.cff.seacs;\n  try {\n   this.data = compiler.compile();\n  } catch (e) {\n   warn('Failed to compile font ' + properties.loadedName);\n   this.data = file;\n  }\n }\n CFFFont.prototype = {\n  get numGlyphs() {\n   return this.cff.charStrings.count;\n  },\n  getCharset: function CFFFont_getCharset() {\n   return this.cff.charset.charset;\n  },\n  getGlyphMapping: function CFFFont_getGlyphMapping() {\n   var cff = this.cff;\n   var properties = this.properties;\n   var charsets = cff.charset.charset;\n   var charCodeToGlyphId;\n   var glyphId;\n   if (properties.composite) {\n    charCodeToGlyphId = Object.create(null);\n    if (cff.isCIDFont) {\n     for (glyphId = 0; glyphId < charsets.length; glyphId++) {\n      var cid = charsets[glyphId];\n      var charCode = properties.cMap.charCodeOf(cid);\n      charCodeToGlyphId[charCode] = glyphId;\n     }\n    } else {\n     for (glyphId = 0; glyphId < cff.charStrings.count; glyphId++) {\n      charCodeToGlyphId[glyphId] = glyphId;\n     }\n    }\n    return charCodeToGlyphId;\n   }\n   var encoding = cff.encoding ? cff.encoding.encoding : null;\n   charCodeToGlyphId = type1FontGlyphMapping(properties, encoding, charsets);\n   return charCodeToGlyphId;\n  }\n };\n return CFFFont;\n}();\n(function checkSeacSupport() {\n if (typeof navigator !== 'undefined' && /Windows/.test(navigator.userAgent)) {\n  SEAC_ANALYSIS_ENABLED = true;\n }\n}());\n(function checkChromeWindows() {\n if (typeof navigator !== 'undefined' && /Windows.*Chrome/.test(navigator.userAgent)) {\n  SKIP_PRIVATE_USE_RANGE_F000_TO_F01F = true;\n }\n}());\nexports.SEAC_ANALYSIS_ENABLED = SEAC_ANALYSIS_ENABLED;\nexports.PRIVATE_USE_OFFSET_START = PRIVATE_USE_OFFSET_START;\nexports.PRIVATE_USE_OFFSET_END = PRIVATE_USE_OFFSET_END;\nexports.ErrorFont = ErrorFont;\nexports.Font = Font;\nexports.FontFlags = FontFlags;\nexports.IdentityToUnicodeMap = IdentityToUnicodeMap;\nexports.ProblematicCharRanges = ProblematicCharRanges;\nexports.ToUnicodeMap = ToUnicodeMap;\nexports.getFontType = getFontType;\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar coreColorSpace = __w_pdfjs_require__(3);\nvar coreStream = __w_pdfjs_require__(2);\nvar coreJpx = __w_pdfjs_require__(15);\nvar ImageKind = sharedUtil.ImageKind;\nvar assert = sharedUtil.assert;\nvar error = sharedUtil.error;\nvar info = sharedUtil.info;\nvar isArray = sharedUtil.isArray;\nvar warn = sharedUtil.warn;\nvar Name = corePrimitives.Name;\nvar isStream = corePrimitives.isStream;\nvar ColorSpace = coreColorSpace.ColorSpace;\nvar DecodeStream = coreStream.DecodeStream;\nvar JpegStream = coreStream.JpegStream;\nvar JpxImage = coreJpx.JpxImage;\nvar PDFImage = function PDFImageClosure() {\n function handleImageData(image, nativeDecoder) {\n  if (nativeDecoder && nativeDecoder.canDecode(image)) {\n   return nativeDecoder.decode(image);\n  }\n  return Promise.resolve(image);\n }\n function decodeAndClamp(value, addend, coefficient, max) {\n  value = addend + value * coefficient;\n  return value < 0 ? 0 : value > max ? max : value;\n }\n function resizeImageMask(src, bpc, w1, h1, w2, h2) {\n  var length = w2 * h2;\n  var dest = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n  var xRatio = w1 / w2;\n  var yRatio = h1 / h2;\n  var i, j, py, newIndex = 0, oldIndex;\n  var xScaled = new Uint16Array(w2);\n  var w1Scanline = w1;\n  for (i = 0; i < w2; i++) {\n   xScaled[i] = Math.floor(i * xRatio);\n  }\n  for (i = 0; i < h2; i++) {\n   py = Math.floor(i * yRatio) * w1Scanline;\n   for (j = 0; j < w2; j++) {\n    oldIndex = py + xScaled[j];\n    dest[newIndex++] = src[oldIndex];\n   }\n  }\n  return dest;\n }\n function PDFImage(xref, res, image, inline, smask, mask, isMask) {\n  this.image = image;\n  var dict = image.dict;\n  if (dict.has('Filter')) {\n   var filter = dict.get('Filter').name;\n   if (filter === 'JPXDecode') {\n    var jpxImage = new JpxImage();\n    jpxImage.parseImageProperties(image.stream);\n    image.stream.reset();\n    image.bitsPerComponent = jpxImage.bitsPerComponent;\n    image.numComps = jpxImage.componentsCount;\n   } else if (filter === 'JBIG2Decode') {\n    image.bitsPerComponent = 1;\n    image.numComps = 1;\n   }\n  }\n  this.width = dict.get('Width', 'W');\n  this.height = dict.get('Height', 'H');\n  if (this.width < 1 || this.height < 1) {\n   error('Invalid image width: ' + this.width + ' or height: ' + this.height);\n  }\n  this.interpolate = dict.get('Interpolate', 'I') || false;\n  this.imageMask = dict.get('ImageMask', 'IM') || false;\n  this.matte = dict.get('Matte') || false;\n  var bitsPerComponent = image.bitsPerComponent;\n  if (!bitsPerComponent) {\n   bitsPerComponent = dict.get('BitsPerComponent', 'BPC');\n   if (!bitsPerComponent) {\n    if (this.imageMask) {\n     bitsPerComponent = 1;\n    } else {\n     error('Bits per component missing in image: ' + this.imageMask);\n    }\n   }\n  }\n  this.bpc = bitsPerComponent;\n  if (!this.imageMask) {\n   var colorSpace = dict.get('ColorSpace', 'CS');\n   if (!colorSpace) {\n    info('JPX images (which do not require color spaces)');\n    switch (image.numComps) {\n    case 1:\n     colorSpace = Name.get('DeviceGray');\n     break;\n    case 3:\n     colorSpace = Name.get('DeviceRGB');\n     break;\n    case 4:\n     colorSpace = Name.get('DeviceCMYK');\n     break;\n    default:\n     error('JPX images with ' + this.numComps + ' color components not supported.');\n    }\n   }\n   this.colorSpace = ColorSpace.parse(colorSpace, xref, res);\n   this.numComps = this.colorSpace.numComps;\n  }\n  this.decode = dict.getArray('Decode', 'D');\n  this.needsDecode = false;\n  if (this.decode && (this.colorSpace && !this.colorSpace.isDefaultDecode(this.decode) || isMask && !ColorSpace.isDefaultDecode(this.decode, 1))) {\n   this.needsDecode = true;\n   var max = (1 << bitsPerComponent) - 1;\n   this.decodeCoefficients = [];\n   this.decodeAddends = [];\n   for (var i = 0, j = 0; i < this.decode.length; i += 2, ++j) {\n    var dmin = this.decode[i];\n    var dmax = this.decode[i + 1];\n    this.decodeCoefficients[j] = dmax - dmin;\n    this.decodeAddends[j] = max * dmin;\n   }\n  }\n  if (smask) {\n   this.smask = new PDFImage(xref, res, smask, false);\n  } else if (mask) {\n   if (isStream(mask)) {\n    var maskDict = mask.dict, imageMask = maskDict.get('ImageMask', 'IM');\n    if (!imageMask) {\n     warn('Ignoring /Mask in image without /ImageMask.');\n    } else {\n     this.mask = new PDFImage(xref, res, mask, false, null, null, true);\n    }\n   } else {\n    this.mask = mask;\n   }\n  }\n }\n PDFImage.buildImage = function PDFImage_buildImage(handler, xref, res, image, inline, nativeDecoder) {\n  var imagePromise = handleImageData(image, nativeDecoder);\n  var smaskPromise;\n  var maskPromise;\n  var smask = image.dict.get('SMask');\n  var mask = image.dict.get('Mask');\n  if (smask) {\n   smaskPromise = handleImageData(smask, nativeDecoder);\n   maskPromise = Promise.resolve(null);\n  } else {\n   smaskPromise = Promise.resolve(null);\n   if (mask) {\n    if (isStream(mask)) {\n     maskPromise = handleImageData(mask, nativeDecoder);\n    } else if (isArray(mask)) {\n     maskPromise = Promise.resolve(mask);\n    } else {\n     warn('Unsupported mask format.');\n     maskPromise = Promise.resolve(null);\n    }\n   } else {\n    maskPromise = Promise.resolve(null);\n   }\n  }\n  return Promise.all([\n   imagePromise,\n   smaskPromise,\n   maskPromise\n  ]).then(function (results) {\n   var imageData = results[0];\n   var smaskData = results[1];\n   var maskData = results[2];\n   return new PDFImage(xref, res, imageData, inline, smaskData, maskData);\n  });\n };\n PDFImage.createMask = function PDFImage_createMask(imgArray, width, height, imageIsFromDecodeStream, inverseDecode) {\n  var computedLength = (width + 7 >> 3) * height;\n  var actualLength = imgArray.byteLength;\n  var haveFullData = computedLength === actualLength;\n  var data, i;\n  if (imageIsFromDecodeStream && (!inverseDecode || haveFullData)) {\n   data = imgArray;\n  } else if (!inverseDecode) {\n   data = new Uint8Array(actualLength);\n   data.set(imgArray);\n  } else {\n   data = new Uint8Array(computedLength);\n   data.set(imgArray);\n   for (i = actualLength; i < computedLength; i++) {\n    data[i] = 0xff;\n   }\n  }\n  if (inverseDecode) {\n   for (i = 0; i < actualLength; i++) {\n    data[i] = ~data[i];\n   }\n  }\n  return {\n   data: data,\n   width: width,\n   height: height\n  };\n };\n PDFImage.prototype = {\n  get drawWidth() {\n   return Math.max(this.width, this.smask && this.smask.width || 0, this.mask && this.mask.width || 0);\n  },\n  get drawHeight() {\n   return Math.max(this.height, this.smask && this.smask.height || 0, this.mask && this.mask.height || 0);\n  },\n  decodeBuffer: function PDFImage_decodeBuffer(buffer) {\n   var bpc = this.bpc;\n   var numComps = this.numComps;\n   var decodeAddends = this.decodeAddends;\n   var decodeCoefficients = this.decodeCoefficients;\n   var max = (1 << bpc) - 1;\n   var i, ii;\n   if (bpc === 1) {\n    for (i = 0, ii = buffer.length; i < ii; i++) {\n     buffer[i] = +!buffer[i];\n    }\n    return;\n   }\n   var index = 0;\n   for (i = 0, ii = this.width * this.height; i < ii; i++) {\n    for (var j = 0; j < numComps; j++) {\n     buffer[index] = decodeAndClamp(buffer[index], decodeAddends[j], decodeCoefficients[j], max);\n     index++;\n    }\n   }\n  },\n  getComponents: function PDFImage_getComponents(buffer) {\n   var bpc = this.bpc;\n   if (bpc === 8) {\n    return buffer;\n   }\n   var width = this.width;\n   var height = this.height;\n   var numComps = this.numComps;\n   var length = width * height * numComps;\n   var bufferPos = 0;\n   var output = bpc <= 8 ? new Uint8Array(length) : bpc <= 16 ? new Uint16Array(length) : new Uint32Array(length);\n   var rowComps = width * numComps;\n   var max = (1 << bpc) - 1;\n   var i = 0, ii, buf;\n   if (bpc === 1) {\n    var mask, loop1End, loop2End;\n    for (var j = 0; j < height; j++) {\n     loop1End = i + (rowComps & ~7);\n     loop2End = i + rowComps;\n     while (i < loop1End) {\n      buf = buffer[bufferPos++];\n      output[i] = buf >> 7 & 1;\n      output[i + 1] = buf >> 6 & 1;\n      output[i + 2] = buf >> 5 & 1;\n      output[i + 3] = buf >> 4 & 1;\n      output[i + 4] = buf >> 3 & 1;\n      output[i + 5] = buf >> 2 & 1;\n      output[i + 6] = buf >> 1 & 1;\n      output[i + 7] = buf & 1;\n      i += 8;\n     }\n     if (i < loop2End) {\n      buf = buffer[bufferPos++];\n      mask = 128;\n      while (i < loop2End) {\n       output[i++] = +!!(buf & mask);\n       mask >>= 1;\n      }\n     }\n    }\n   } else {\n    var bits = 0;\n    buf = 0;\n    for (i = 0, ii = length; i < ii; ++i) {\n     if (i % rowComps === 0) {\n      buf = 0;\n      bits = 0;\n     }\n     while (bits < bpc) {\n      buf = buf << 8 | buffer[bufferPos++];\n      bits += 8;\n     }\n     var remainingBits = bits - bpc;\n     var value = buf >> remainingBits;\n     output[i] = value < 0 ? 0 : value > max ? max : value;\n     buf = buf & (1 << remainingBits) - 1;\n     bits = remainingBits;\n    }\n   }\n   return output;\n  },\n  fillOpacity: function PDFImage_fillOpacity(rgbaBuf, width, height, actualHeight, image) {\n   var smask = this.smask;\n   var mask = this.mask;\n   var alphaBuf, sw, sh, i, ii, j;\n   if (smask) {\n    sw = smask.width;\n    sh = smask.height;\n    alphaBuf = new Uint8Array(sw * sh);\n    smask.fillGrayBuffer(alphaBuf);\n    if (sw !== width || sh !== height) {\n     alphaBuf = resizeImageMask(alphaBuf, smask.bpc, sw, sh, width, height);\n    }\n   } else if (mask) {\n    if (mask instanceof PDFImage) {\n     sw = mask.width;\n     sh = mask.height;\n     alphaBuf = new Uint8Array(sw * sh);\n     mask.numComps = 1;\n     mask.fillGrayBuffer(alphaBuf);\n     for (i = 0, ii = sw * sh; i < ii; ++i) {\n      alphaBuf[i] = 255 - alphaBuf[i];\n     }\n     if (sw !== width || sh !== height) {\n      alphaBuf = resizeImageMask(alphaBuf, mask.bpc, sw, sh, width, height);\n     }\n    } else if (isArray(mask)) {\n     alphaBuf = new Uint8Array(width * height);\n     var numComps = this.numComps;\n     for (i = 0, ii = width * height; i < ii; ++i) {\n      var opacity = 0;\n      var imageOffset = i * numComps;\n      for (j = 0; j < numComps; ++j) {\n       var color = image[imageOffset + j];\n       var maskOffset = j * 2;\n       if (color < mask[maskOffset] || color > mask[maskOffset + 1]) {\n        opacity = 255;\n        break;\n       }\n      }\n      alphaBuf[i] = opacity;\n     }\n    } else {\n     error('Unknown mask format.');\n    }\n   }\n   if (alphaBuf) {\n    for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n     rgbaBuf[j] = alphaBuf[i];\n    }\n   } else {\n    for (i = 0, j = 3, ii = width * actualHeight; i < ii; ++i, j += 4) {\n     rgbaBuf[j] = 255;\n    }\n   }\n  },\n  undoPreblend: function PDFImage_undoPreblend(buffer, width, height) {\n   var matte = this.smask && this.smask.matte;\n   if (!matte) {\n    return;\n   }\n   var matteRgb = this.colorSpace.getRgb(matte, 0);\n   var matteR = matteRgb[0];\n   var matteG = matteRgb[1];\n   var matteB = matteRgb[2];\n   var length = width * height * 4;\n   var r, g, b;\n   for (var i = 0; i < length; i += 4) {\n    var alpha = buffer[i + 3];\n    if (alpha === 0) {\n     buffer[i] = 255;\n     buffer[i + 1] = 255;\n     buffer[i + 2] = 255;\n     continue;\n    }\n    var k = 255 / alpha;\n    r = (buffer[i] - matteR) * k + matteR;\n    g = (buffer[i + 1] - matteG) * k + matteG;\n    b = (buffer[i + 2] - matteB) * k + matteB;\n    buffer[i] = r <= 0 ? 0 : r >= 255 ? 255 : r | 0;\n    buffer[i + 1] = g <= 0 ? 0 : g >= 255 ? 255 : g | 0;\n    buffer[i + 2] = b <= 0 ? 0 : b >= 255 ? 255 : b | 0;\n   }\n  },\n  createImageData: function PDFImage_createImageData(forceRGBA) {\n   var drawWidth = this.drawWidth;\n   var drawHeight = this.drawHeight;\n   var imgData = {\n    width: drawWidth,\n    height: drawHeight\n   };\n   var numComps = this.numComps;\n   var originalWidth = this.width;\n   var originalHeight = this.height;\n   var bpc = this.bpc;\n   var rowBytes = originalWidth * numComps * bpc + 7 >> 3;\n   var imgArray;\n   if (!forceRGBA) {\n    var kind;\n    if (this.colorSpace.name === 'DeviceGray' && bpc === 1) {\n     kind = ImageKind.GRAYSCALE_1BPP;\n    } else if (this.colorSpace.name === 'DeviceRGB' && bpc === 8 && !this.needsDecode) {\n     kind = ImageKind.RGB_24BPP;\n    }\n    if (kind && !this.smask && !this.mask && drawWidth === originalWidth && drawHeight === originalHeight) {\n     imgData.kind = kind;\n     imgArray = this.getImageBytes(originalHeight * rowBytes);\n     if (this.image instanceof DecodeStream) {\n      imgData.data = imgArray;\n     } else {\n      var newArray = new Uint8Array(imgArray.length);\n      newArray.set(imgArray);\n      imgData.data = newArray;\n     }\n     if (this.needsDecode) {\n      assert(kind === ImageKind.GRAYSCALE_1BPP);\n      var buffer = imgData.data;\n      for (var i = 0, ii = buffer.length; i < ii; i++) {\n       buffer[i] ^= 0xff;\n      }\n     }\n     return imgData;\n    }\n    if (this.image instanceof JpegStream && !this.smask && !this.mask && (this.colorSpace.name === 'DeviceGray' || this.colorSpace.name === 'DeviceRGB' || this.colorSpace.name === 'DeviceCMYK')) {\n     imgData.kind = ImageKind.RGB_24BPP;\n     imgData.data = this.getImageBytes(originalHeight * rowBytes, drawWidth, drawHeight, true);\n     return imgData;\n    }\n   }\n   imgArray = this.getImageBytes(originalHeight * rowBytes);\n   var actualHeight = 0 | imgArray.length / rowBytes * drawHeight / originalHeight;\n   var comps = this.getComponents(imgArray);\n   var alpha01, maybeUndoPreblend;\n   if (!forceRGBA && !this.smask && !this.mask) {\n    imgData.kind = ImageKind.RGB_24BPP;\n    imgData.data = new Uint8Array(drawWidth * drawHeight * 3);\n    alpha01 = 0;\n    maybeUndoPreblend = false;\n   } else {\n    imgData.kind = ImageKind.RGBA_32BPP;\n    imgData.data = new Uint8Array(drawWidth * drawHeight * 4);\n    alpha01 = 1;\n    maybeUndoPreblend = true;\n    this.fillOpacity(imgData.data, drawWidth, drawHeight, actualHeight, comps);\n   }\n   if (this.needsDecode) {\n    this.decodeBuffer(comps);\n   }\n   this.colorSpace.fillRgb(imgData.data, originalWidth, originalHeight, drawWidth, drawHeight, actualHeight, bpc, comps, alpha01);\n   if (maybeUndoPreblend) {\n    this.undoPreblend(imgData.data, drawWidth, actualHeight);\n   }\n   return imgData;\n  },\n  fillGrayBuffer: function PDFImage_fillGrayBuffer(buffer) {\n   var numComps = this.numComps;\n   if (numComps !== 1) {\n    error('Reading gray scale from a color image: ' + numComps);\n   }\n   var width = this.width;\n   var height = this.height;\n   var bpc = this.bpc;\n   var rowBytes = width * numComps * bpc + 7 >> 3;\n   var imgArray = this.getImageBytes(height * rowBytes);\n   var comps = this.getComponents(imgArray);\n   var i, length;\n   if (bpc === 1) {\n    length = width * height;\n    if (this.needsDecode) {\n     for (i = 0; i < length; ++i) {\n      buffer[i] = comps[i] - 1 & 255;\n     }\n    } else {\n     for (i = 0; i < length; ++i) {\n      buffer[i] = -comps[i] & 255;\n     }\n    }\n    return;\n   }\n   if (this.needsDecode) {\n    this.decodeBuffer(comps);\n   }\n   length = width * height;\n   var scale = 255 / ((1 << bpc) - 1);\n   for (i = 0; i < length; ++i) {\n    buffer[i] = scale * comps[i] | 0;\n   }\n  },\n  getImageBytes: function PDFImage_getImageBytes(length, drawWidth, drawHeight, forceRGB) {\n   this.image.reset();\n   this.image.drawWidth = drawWidth || this.width;\n   this.image.drawHeight = drawHeight || this.height;\n   this.image.forceRGB = !!forceRGB;\n   return this.image.getBytes(length);\n  }\n };\n return PDFImage;\n}();\nexports.PDFImage = PDFImage;\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar coreArithmeticDecoder = __w_pdfjs_require__(10);\nvar error = sharedUtil.error;\nvar log2 = sharedUtil.log2;\nvar readInt8 = sharedUtil.readInt8;\nvar readUint16 = sharedUtil.readUint16;\nvar readUint32 = sharedUtil.readUint32;\nvar shadow = sharedUtil.shadow;\nvar ArithmeticDecoder = coreArithmeticDecoder.ArithmeticDecoder;\nvar Jbig2Image = function Jbig2ImageClosure() {\n function ContextCache() {\n }\n ContextCache.prototype = {\n  getContexts: function (id) {\n   if (id in this) {\n    return this[id];\n   }\n   return this[id] = new Int8Array(1 << 16);\n  }\n };\n function DecodingContext(data, start, end) {\n  this.data = data;\n  this.start = start;\n  this.end = end;\n }\n DecodingContext.prototype = {\n  get decoder() {\n   var decoder = new ArithmeticDecoder(this.data, this.start, this.end);\n   return shadow(this, 'decoder', decoder);\n  },\n  get contextCache() {\n   var cache = new ContextCache();\n   return shadow(this, 'contextCache', cache);\n  }\n };\n function decodeInteger(contextCache, procedure, decoder) {\n  var contexts = contextCache.getContexts(procedure);\n  var prev = 1;\n  function readBits(length) {\n   var v = 0;\n   for (var i = 0; i < length; i++) {\n    var bit = decoder.readBit(contexts, prev);\n    prev = prev < 256 ? prev << 1 | bit : (prev << 1 | bit) & 511 | 256;\n    v = v << 1 | bit;\n   }\n   return v >>> 0;\n  }\n  var sign = readBits(1);\n  var value = readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(1) ? readBits(32) + 4436 : readBits(12) + 340 : readBits(8) + 84 : readBits(6) + 20 : readBits(4) + 4 : readBits(2);\n  return sign === 0 ? value : value > 0 ? -value : null;\n }\n function decodeIAID(contextCache, decoder, codeLength) {\n  var contexts = contextCache.getContexts('IAID');\n  var prev = 1;\n  for (var i = 0; i < codeLength; i++) {\n   var bit = decoder.readBit(contexts, prev);\n   prev = prev << 1 | bit;\n  }\n  if (codeLength < 31) {\n   return prev & (1 << codeLength) - 1;\n  }\n  return prev & 0x7FFFFFFF;\n }\n var SegmentTypes = [\n  'SymbolDictionary',\n  null,\n  null,\n  null,\n  'IntermediateTextRegion',\n  null,\n  'ImmediateTextRegion',\n  'ImmediateLosslessTextRegion',\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  'patternDictionary',\n  null,\n  null,\n  null,\n  'IntermediateHalftoneRegion',\n  null,\n  'ImmediateHalftoneRegion',\n  'ImmediateLosslessHalftoneRegion',\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  'IntermediateGenericRegion',\n  null,\n  'ImmediateGenericRegion',\n  'ImmediateLosslessGenericRegion',\n  'IntermediateGenericRefinementRegion',\n  null,\n  'ImmediateGenericRefinementRegion',\n  'ImmediateLosslessGenericRefinementRegion',\n  null,\n  null,\n  null,\n  null,\n  'PageInformation',\n  'EndOfPage',\n  'EndOfStripe',\n  'EndOfFile',\n  'Profiles',\n  'Tables',\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  null,\n  'Extension'\n ];\n var CodingTemplates = [\n  [\n   {\n    x: -1,\n    y: -2\n   },\n   {\n    x: 0,\n    y: -2\n   },\n   {\n    x: 1,\n    y: -2\n   },\n   {\n    x: -2,\n    y: -1\n   },\n   {\n    x: -1,\n    y: -1\n   },\n   {\n    x: 0,\n    y: -1\n   },\n   {\n    x: 1,\n    y: -1\n   },\n   {\n    x: 2,\n    y: -1\n   },\n   {\n    x: -4,\n    y: 0\n   },\n   {\n    x: -3,\n    y: 0\n   },\n   {\n    x: -2,\n    y: 0\n   },\n   {\n    x: -1,\n    y: 0\n   }\n  ],\n  [\n   {\n    x: -1,\n    y: -2\n   },\n   {\n    x: 0,\n    y: -2\n   },\n   {\n    x: 1,\n    y: -2\n   },\n   {\n    x: 2,\n    y: -2\n   },\n   {\n    x: -2,\n    y: -1\n   },\n   {\n    x: -1,\n    y: -1\n   },\n   {\n    x: 0,\n    y: -1\n   },\n   {\n    x: 1,\n    y: -1\n   },\n   {\n    x: 2,\n    y: -1\n   },\n   {\n    x: -3,\n    y: 0\n   },\n   {\n    x: -2,\n    y: 0\n   },\n   {\n    x: -1,\n    y: 0\n   }\n  ],\n  [\n   {\n    x: -1,\n    y: -2\n   },\n   {\n    x: 0,\n    y: -2\n   },\n   {\n    x: 1,\n    y: -2\n   },\n   {\n    x: -2,\n    y: -1\n   },\n   {\n    x: -1,\n    y: -1\n   },\n   {\n    x: 0,\n    y: -1\n   },\n   {\n    x: 1,\n    y: -1\n   },\n   {\n    x: -2,\n    y: 0\n   },\n   {\n    x: -1,\n    y: 0\n   }\n  ],\n  [\n   {\n    x: -3,\n    y: -1\n   },\n   {\n    x: -2,\n    y: -1\n   },\n   {\n    x: -1,\n    y: -1\n   },\n   {\n    x: 0,\n    y: -1\n   },\n   {\n    x: 1,\n    y: -1\n   },\n   {\n    x: -4,\n    y: 0\n   },\n   {\n    x: -3,\n    y: 0\n   },\n   {\n    x: -2,\n    y: 0\n   },\n   {\n    x: -1,\n    y: 0\n   }\n  ]\n ];\n var RefinementTemplates = [\n  {\n   coding: [\n    {\n     x: 0,\n     y: -1\n    },\n    {\n     x: 1,\n     y: -1\n    },\n    {\n     x: -1,\n     y: 0\n    }\n   ],\n   reference: [\n    {\n     x: 0,\n     y: -1\n    },\n    {\n     x: 1,\n     y: -1\n    },\n    {\n     x: -1,\n     y: 0\n    },\n    {\n     x: 0,\n     y: 0\n    },\n    {\n     x: 1,\n     y: 0\n    },\n    {\n     x: -1,\n     y: 1\n    },\n    {\n     x: 0,\n     y: 1\n    },\n    {\n     x: 1,\n     y: 1\n    }\n   ]\n  },\n  {\n   coding: [\n    {\n     x: -1,\n     y: -1\n    },\n    {\n     x: 0,\n     y: -1\n    },\n    {\n     x: 1,\n     y: -1\n    },\n    {\n     x: -1,\n     y: 0\n    }\n   ],\n   reference: [\n    {\n     x: 0,\n     y: -1\n    },\n    {\n     x: -1,\n     y: 0\n    },\n    {\n     x: 0,\n     y: 0\n    },\n    {\n     x: 1,\n     y: 0\n    },\n    {\n     x: 0,\n     y: 1\n    },\n    {\n     x: 1,\n     y: 1\n    }\n   ]\n  }\n ];\n var ReusedContexts = [\n  0x9B25,\n  0x0795,\n  0x00E5,\n  0x0195\n ];\n var RefinementReusedContexts = [\n  0x0020,\n  0x0008\n ];\n function decodeBitmapTemplate0(width, height, decodingContext) {\n  var decoder = decodingContext.decoder;\n  var contexts = decodingContext.contextCache.getContexts('GB');\n  var contextLabel, i, j, pixel, row, row1, row2, bitmap = [];\n  var OLD_PIXEL_MASK = 0x7BF7;\n  for (i = 0; i < height; i++) {\n   row = bitmap[i] = new Uint8Array(width);\n   row1 = i < 1 ? row : bitmap[i - 1];\n   row2 = i < 2 ? row : bitmap[i - 2];\n   contextLabel = row2[0] << 13 | row2[1] << 12 | row2[2] << 11 | row1[0] << 7 | row1[1] << 6 | row1[2] << 5 | row1[3] << 4;\n   for (j = 0; j < width; j++) {\n    row[j] = pixel = decoder.readBit(contexts, contextLabel);\n    contextLabel = (contextLabel & OLD_PIXEL_MASK) << 1 | (j + 3 < width ? row2[j + 3] << 11 : 0) | (j + 4 < width ? row1[j + 4] << 4 : 0) | pixel;\n   }\n  }\n  return bitmap;\n }\n function decodeBitmap(mmr, width, height, templateIndex, prediction, skip, at, decodingContext) {\n  if (mmr) {\n   error('JBIG2 error: MMR encoding is not supported');\n  }\n  if (templateIndex === 0 && !skip && !prediction && at.length === 4 && at[0].x === 3 && at[0].y === -1 && at[1].x === -3 && at[1].y === -1 && at[2].x === 2 && at[2].y === -2 && at[3].x === -2 && at[3].y === -2) {\n   return decodeBitmapTemplate0(width, height, decodingContext);\n  }\n  var useskip = !!skip;\n  var template = CodingTemplates[templateIndex].concat(at);\n  template.sort(function (a, b) {\n   return a.y - b.y || a.x - b.x;\n  });\n  var templateLength = template.length;\n  var templateX = new Int8Array(templateLength);\n  var templateY = new Int8Array(templateLength);\n  var changingTemplateEntries = [];\n  var reuseMask = 0, minX = 0, maxX = 0, minY = 0;\n  var c, k;\n  for (k = 0; k < templateLength; k++) {\n   templateX[k] = template[k].x;\n   templateY[k] = template[k].y;\n   minX = Math.min(minX, template[k].x);\n   maxX = Math.max(maxX, template[k].x);\n   minY = Math.min(minY, template[k].y);\n   if (k < templateLength - 1 && template[k].y === template[k + 1].y && template[k].x === template[k + 1].x - 1) {\n    reuseMask |= 1 << templateLength - 1 - k;\n   } else {\n    changingTemplateEntries.push(k);\n   }\n  }\n  var changingEntriesLength = changingTemplateEntries.length;\n  var changingTemplateX = new Int8Array(changingEntriesLength);\n  var changingTemplateY = new Int8Array(changingEntriesLength);\n  var changingTemplateBit = new Uint16Array(changingEntriesLength);\n  for (c = 0; c < changingEntriesLength; c++) {\n   k = changingTemplateEntries[c];\n   changingTemplateX[c] = template[k].x;\n   changingTemplateY[c] = template[k].y;\n   changingTemplateBit[c] = 1 << templateLength - 1 - k;\n  }\n  var sbb_left = -minX;\n  var sbb_top = -minY;\n  var sbb_right = width - maxX;\n  var pseudoPixelContext = ReusedContexts[templateIndex];\n  var row = new Uint8Array(width);\n  var bitmap = [];\n  var decoder = decodingContext.decoder;\n  var contexts = decodingContext.contextCache.getContexts('GB');\n  var ltp = 0, j, i0, j0, contextLabel = 0, bit, shift;\n  for (var i = 0; i < height; i++) {\n   if (prediction) {\n    var sltp = decoder.readBit(contexts, pseudoPixelContext);\n    ltp ^= sltp;\n    if (ltp) {\n     bitmap.push(row);\n     continue;\n    }\n   }\n   row = new Uint8Array(row);\n   bitmap.push(row);\n   for (j = 0; j < width; j++) {\n    if (useskip && skip[i][j]) {\n     row[j] = 0;\n     continue;\n    }\n    if (j >= sbb_left && j < sbb_right && i >= sbb_top) {\n     contextLabel = contextLabel << 1 & reuseMask;\n     for (k = 0; k < changingEntriesLength; k++) {\n      i0 = i + changingTemplateY[k];\n      j0 = j + changingTemplateX[k];\n      bit = bitmap[i0][j0];\n      if (bit) {\n       bit = changingTemplateBit[k];\n       contextLabel |= bit;\n      }\n     }\n    } else {\n     contextLabel = 0;\n     shift = templateLength - 1;\n     for (k = 0; k < templateLength; k++, shift--) {\n      j0 = j + templateX[k];\n      if (j0 >= 0 && j0 < width) {\n       i0 = i + templateY[k];\n       if (i0 >= 0) {\n        bit = bitmap[i0][j0];\n        if (bit) {\n         contextLabel |= bit << shift;\n        }\n       }\n      }\n     }\n    }\n    var pixel = decoder.readBit(contexts, contextLabel);\n    row[j] = pixel;\n   }\n  }\n  return bitmap;\n }\n function decodeRefinement(width, height, templateIndex, referenceBitmap, offsetX, offsetY, prediction, at, decodingContext) {\n  var codingTemplate = RefinementTemplates[templateIndex].coding;\n  if (templateIndex === 0) {\n   codingTemplate = codingTemplate.concat([at[0]]);\n  }\n  var codingTemplateLength = codingTemplate.length;\n  var codingTemplateX = new Int32Array(codingTemplateLength);\n  var codingTemplateY = new Int32Array(codingTemplateLength);\n  var k;\n  for (k = 0; k < codingTemplateLength; k++) {\n   codingTemplateX[k] = codingTemplate[k].x;\n   codingTemplateY[k] = codingTemplate[k].y;\n  }\n  var referenceTemplate = RefinementTemplates[templateIndex].reference;\n  if (templateIndex === 0) {\n   referenceTemplate = referenceTemplate.concat([at[1]]);\n  }\n  var referenceTemplateLength = referenceTemplate.length;\n  var referenceTemplateX = new Int32Array(referenceTemplateLength);\n  var referenceTemplateY = new Int32Array(referenceTemplateLength);\n  for (k = 0; k < referenceTemplateLength; k++) {\n   referenceTemplateX[k] = referenceTemplate[k].x;\n   referenceTemplateY[k] = referenceTemplate[k].y;\n  }\n  var referenceWidth = referenceBitmap[0].length;\n  var referenceHeight = referenceBitmap.length;\n  var pseudoPixelContext = RefinementReusedContexts[templateIndex];\n  var bitmap = [];\n  var decoder = decodingContext.decoder;\n  var contexts = decodingContext.contextCache.getContexts('GR');\n  var ltp = 0;\n  for (var i = 0; i < height; i++) {\n   if (prediction) {\n    var sltp = decoder.readBit(contexts, pseudoPixelContext);\n    ltp ^= sltp;\n    if (ltp) {\n     error('JBIG2 error: prediction is not supported');\n    }\n   }\n   var row = new Uint8Array(width);\n   bitmap.push(row);\n   for (var j = 0; j < width; j++) {\n    var i0, j0;\n    var contextLabel = 0;\n    for (k = 0; k < codingTemplateLength; k++) {\n     i0 = i + codingTemplateY[k];\n     j0 = j + codingTemplateX[k];\n     if (i0 < 0 || j0 < 0 || j0 >= width) {\n      contextLabel <<= 1;\n     } else {\n      contextLabel = contextLabel << 1 | bitmap[i0][j0];\n     }\n    }\n    for (k = 0; k < referenceTemplateLength; k++) {\n     i0 = i + referenceTemplateY[k] + offsetY;\n     j0 = j + referenceTemplateX[k] + offsetX;\n     if (i0 < 0 || i0 >= referenceHeight || j0 < 0 || j0 >= referenceWidth) {\n      contextLabel <<= 1;\n     } else {\n      contextLabel = contextLabel << 1 | referenceBitmap[i0][j0];\n     }\n    }\n    var pixel = decoder.readBit(contexts, contextLabel);\n    row[j] = pixel;\n   }\n  }\n  return bitmap;\n }\n function decodeSymbolDictionary(huffman, refinement, symbols, numberOfNewSymbols, numberOfExportedSymbols, huffmanTables, templateIndex, at, refinementTemplateIndex, refinementAt, decodingContext) {\n  if (huffman) {\n   error('JBIG2 error: huffman is not supported');\n  }\n  var newSymbols = [];\n  var currentHeight = 0;\n  var symbolCodeLength = log2(symbols.length + numberOfNewSymbols);\n  var decoder = decodingContext.decoder;\n  var contextCache = decodingContext.contextCache;\n  while (newSymbols.length < numberOfNewSymbols) {\n   var deltaHeight = decodeInteger(contextCache, 'IADH', decoder);\n   currentHeight += deltaHeight;\n   var currentWidth = 0;\n   while (true) {\n    var deltaWidth = decodeInteger(contextCache, 'IADW', decoder);\n    if (deltaWidth === null) {\n     break;\n    }\n    currentWidth += deltaWidth;\n    var bitmap;\n    if (refinement) {\n     var numberOfInstances = decodeInteger(contextCache, 'IAAI', decoder);\n     if (numberOfInstances > 1) {\n      bitmap = decodeTextRegion(huffman, refinement, currentWidth, currentHeight, 0, numberOfInstances, 1, symbols.concat(newSymbols), symbolCodeLength, 0, 0, 1, 0, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext);\n     } else {\n      var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n      var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n      var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n      var symbol = symbolId < symbols.length ? symbols[symbolId] : newSymbols[symbolId - symbols.length];\n      bitmap = decodeRefinement(currentWidth, currentHeight, refinementTemplateIndex, symbol, rdx, rdy, false, refinementAt, decodingContext);\n     }\n    } else {\n     bitmap = decodeBitmap(false, currentWidth, currentHeight, templateIndex, false, null, at, decodingContext);\n    }\n    newSymbols.push(bitmap);\n   }\n  }\n  var exportedSymbols = [];\n  var flags = [], currentFlag = false;\n  var totalSymbolsLength = symbols.length + numberOfNewSymbols;\n  while (flags.length < totalSymbolsLength) {\n   var runLength = decodeInteger(contextCache, 'IAEX', decoder);\n   while (runLength--) {\n    flags.push(currentFlag);\n   }\n   currentFlag = !currentFlag;\n  }\n  for (var i = 0, ii = symbols.length; i < ii; i++) {\n   if (flags[i]) {\n    exportedSymbols.push(symbols[i]);\n   }\n  }\n  for (var j = 0; j < numberOfNewSymbols; i++, j++) {\n   if (flags[i]) {\n    exportedSymbols.push(newSymbols[j]);\n   }\n  }\n  return exportedSymbols;\n }\n function decodeTextRegion(huffman, refinement, width, height, defaultPixelValue, numberOfSymbolInstances, stripSize, inputSymbols, symbolCodeLength, transposed, dsOffset, referenceCorner, combinationOperator, huffmanTables, refinementTemplateIndex, refinementAt, decodingContext) {\n  if (huffman) {\n   error('JBIG2 error: huffman is not supported');\n  }\n  var bitmap = [];\n  var i, row;\n  for (i = 0; i < height; i++) {\n   row = new Uint8Array(width);\n   if (defaultPixelValue) {\n    for (var j = 0; j < width; j++) {\n     row[j] = defaultPixelValue;\n    }\n   }\n   bitmap.push(row);\n  }\n  var decoder = decodingContext.decoder;\n  var contextCache = decodingContext.contextCache;\n  var stripT = -decodeInteger(contextCache, 'IADT', decoder);\n  var firstS = 0;\n  i = 0;\n  while (i < numberOfSymbolInstances) {\n   var deltaT = decodeInteger(contextCache, 'IADT', decoder);\n   stripT += deltaT;\n   var deltaFirstS = decodeInteger(contextCache, 'IAFS', decoder);\n   firstS += deltaFirstS;\n   var currentS = firstS;\n   do {\n    var currentT = stripSize === 1 ? 0 : decodeInteger(contextCache, 'IAIT', decoder);\n    var t = stripSize * stripT + currentT;\n    var symbolId = decodeIAID(contextCache, decoder, symbolCodeLength);\n    var applyRefinement = refinement && decodeInteger(contextCache, 'IARI', decoder);\n    var symbolBitmap = inputSymbols[symbolId];\n    var symbolWidth = symbolBitmap[0].length;\n    var symbolHeight = symbolBitmap.length;\n    if (applyRefinement) {\n     var rdw = decodeInteger(contextCache, 'IARDW', decoder);\n     var rdh = decodeInteger(contextCache, 'IARDH', decoder);\n     var rdx = decodeInteger(contextCache, 'IARDX', decoder);\n     var rdy = decodeInteger(contextCache, 'IARDY', decoder);\n     symbolWidth += rdw;\n     symbolHeight += rdh;\n     symbolBitmap = decodeRefinement(symbolWidth, symbolHeight, refinementTemplateIndex, symbolBitmap, (rdw >> 1) + rdx, (rdh >> 1) + rdy, false, refinementAt, decodingContext);\n    }\n    var offsetT = t - (referenceCorner & 1 ? 0 : symbolHeight);\n    var offsetS = currentS - (referenceCorner & 2 ? symbolWidth : 0);\n    var s2, t2, symbolRow;\n    if (transposed) {\n     for (s2 = 0; s2 < symbolHeight; s2++) {\n      row = bitmap[offsetS + s2];\n      if (!row) {\n       continue;\n      }\n      symbolRow = symbolBitmap[s2];\n      var maxWidth = Math.min(width - offsetT, symbolWidth);\n      switch (combinationOperator) {\n      case 0:\n       for (t2 = 0; t2 < maxWidth; t2++) {\n        row[offsetT + t2] |= symbolRow[t2];\n       }\n       break;\n      case 2:\n       for (t2 = 0; t2 < maxWidth; t2++) {\n        row[offsetT + t2] ^= symbolRow[t2];\n       }\n       break;\n      default:\n       error('JBIG2 error: operator ' + combinationOperator + ' is not supported');\n      }\n     }\n     currentS += symbolHeight - 1;\n    } else {\n     for (t2 = 0; t2 < symbolHeight; t2++) {\n      row = bitmap[offsetT + t2];\n      if (!row) {\n       continue;\n      }\n      symbolRow = symbolBitmap[t2];\n      switch (combinationOperator) {\n      case 0:\n       for (s2 = 0; s2 < symbolWidth; s2++) {\n        row[offsetS + s2] |= symbolRow[s2];\n       }\n       break;\n      case 2:\n       for (s2 = 0; s2 < symbolWidth; s2++) {\n        row[offsetS + s2] ^= symbolRow[s2];\n       }\n       break;\n      default:\n       error('JBIG2 error: operator ' + combinationOperator + ' is not supported');\n      }\n     }\n     currentS += symbolWidth - 1;\n    }\n    i++;\n    var deltaS = decodeInteger(contextCache, 'IADS', decoder);\n    if (deltaS === null) {\n     break;\n    }\n    currentS += deltaS + dsOffset;\n   } while (true);\n  }\n  return bitmap;\n }\n function readSegmentHeader(data, start) {\n  var segmentHeader = {};\n  segmentHeader.number = readUint32(data, start);\n  var flags = data[start + 4];\n  var segmentType = flags & 0x3F;\n  if (!SegmentTypes[segmentType]) {\n   error('JBIG2 error: invalid segment type: ' + segmentType);\n  }\n  segmentHeader.type = segmentType;\n  segmentHeader.typeName = SegmentTypes[segmentType];\n  segmentHeader.deferredNonRetain = !!(flags & 0x80);\n  var pageAssociationFieldSize = !!(flags & 0x40);\n  var referredFlags = data[start + 5];\n  var referredToCount = referredFlags >> 5 & 7;\n  var retainBits = [referredFlags & 31];\n  var position = start + 6;\n  if (referredFlags === 7) {\n   referredToCount = readUint32(data, position - 1) & 0x1FFFFFFF;\n   position += 3;\n   var bytes = referredToCount + 7 >> 3;\n   retainBits[0] = data[position++];\n   while (--bytes > 0) {\n    retainBits.push(data[position++]);\n   }\n  } else if (referredFlags === 5 || referredFlags === 6) {\n   error('JBIG2 error: invalid referred-to flags');\n  }\n  segmentHeader.retainBits = retainBits;\n  var referredToSegmentNumberSize = segmentHeader.number <= 256 ? 1 : segmentHeader.number <= 65536 ? 2 : 4;\n  var referredTo = [];\n  var i, ii;\n  for (i = 0; i < referredToCount; i++) {\n   var number = referredToSegmentNumberSize === 1 ? data[position] : referredToSegmentNumberSize === 2 ? readUint16(data, position) : readUint32(data, position);\n   referredTo.push(number);\n   position += referredToSegmentNumberSize;\n  }\n  segmentHeader.referredTo = referredTo;\n  if (!pageAssociationFieldSize) {\n   segmentHeader.pageAssociation = data[position++];\n  } else {\n   segmentHeader.pageAssociation = readUint32(data, position);\n   position += 4;\n  }\n  segmentHeader.length = readUint32(data, position);\n  position += 4;\n  if (segmentHeader.length === 0xFFFFFFFF) {\n   if (segmentType === 38) {\n    var genericRegionInfo = readRegionSegmentInformation(data, position);\n    var genericRegionSegmentFlags = data[position + RegionSegmentInformationFieldLength];\n    var genericRegionMmr = !!(genericRegionSegmentFlags & 1);\n    var searchPatternLength = 6;\n    var searchPattern = new Uint8Array(searchPatternLength);\n    if (!genericRegionMmr) {\n     searchPattern[0] = 0xFF;\n     searchPattern[1] = 0xAC;\n    }\n    searchPattern[2] = genericRegionInfo.height >>> 24 & 0xFF;\n    searchPattern[3] = genericRegionInfo.height >> 16 & 0xFF;\n    searchPattern[4] = genericRegionInfo.height >> 8 & 0xFF;\n    searchPattern[5] = genericRegionInfo.height & 0xFF;\n    for (i = position, ii = data.length; i < ii; i++) {\n     var j = 0;\n     while (j < searchPatternLength && searchPattern[j] === data[i + j]) {\n      j++;\n     }\n     if (j === searchPatternLength) {\n      segmentHeader.length = i + searchPatternLength;\n      break;\n     }\n    }\n    if (segmentHeader.length === 0xFFFFFFFF) {\n     error('JBIG2 error: segment end was not found');\n    }\n   } else {\n    error('JBIG2 error: invalid unknown segment length');\n   }\n  }\n  segmentHeader.headerEnd = position;\n  return segmentHeader;\n }\n function readSegments(header, data, start, end) {\n  var segments = [];\n  var position = start;\n  while (position < end) {\n   var segmentHeader = readSegmentHeader(data, position);\n   position = segmentHeader.headerEnd;\n   var segment = {\n    header: segmentHeader,\n    data: data\n   };\n   if (!header.randomAccess) {\n    segment.start = position;\n    position += segmentHeader.length;\n    segment.end = position;\n   }\n   segments.push(segment);\n   if (segmentHeader.type === 51) {\n    break;\n   }\n  }\n  if (header.randomAccess) {\n   for (var i = 0, ii = segments.length; i < ii; i++) {\n    segments[i].start = position;\n    position += segments[i].header.length;\n    segments[i].end = position;\n   }\n  }\n  return segments;\n }\n function readRegionSegmentInformation(data, start) {\n  return {\n   width: readUint32(data, start),\n   height: readUint32(data, start + 4),\n   x: readUint32(data, start + 8),\n   y: readUint32(data, start + 12),\n   combinationOperator: data[start + 16] & 7\n  };\n }\n var RegionSegmentInformationFieldLength = 17;\n function processSegment(segment, visitor) {\n  var header = segment.header;\n  var data = segment.data, position = segment.start, end = segment.end;\n  var args, at, i, atLength;\n  switch (header.type) {\n  case 0:\n   var dictionary = {};\n   var dictionaryFlags = readUint16(data, position);\n   dictionary.huffman = !!(dictionaryFlags & 1);\n   dictionary.refinement = !!(dictionaryFlags & 2);\n   dictionary.huffmanDHSelector = dictionaryFlags >> 2 & 3;\n   dictionary.huffmanDWSelector = dictionaryFlags >> 4 & 3;\n   dictionary.bitmapSizeSelector = dictionaryFlags >> 6 & 1;\n   dictionary.aggregationInstancesSelector = dictionaryFlags >> 7 & 1;\n   dictionary.bitmapCodingContextUsed = !!(dictionaryFlags & 256);\n   dictionary.bitmapCodingContextRetained = !!(dictionaryFlags & 512);\n   dictionary.template = dictionaryFlags >> 10 & 3;\n   dictionary.refinementTemplate = dictionaryFlags >> 12 & 1;\n   position += 2;\n   if (!dictionary.huffman) {\n    atLength = dictionary.template === 0 ? 4 : 1;\n    at = [];\n    for (i = 0; i < atLength; i++) {\n     at.push({\n      x: readInt8(data, position),\n      y: readInt8(data, position + 1)\n     });\n     position += 2;\n    }\n    dictionary.at = at;\n   }\n   if (dictionary.refinement && !dictionary.refinementTemplate) {\n    at = [];\n    for (i = 0; i < 2; i++) {\n     at.push({\n      x: readInt8(data, position),\n      y: readInt8(data, position + 1)\n     });\n     position += 2;\n    }\n    dictionary.refinementAt = at;\n   }\n   dictionary.numberOfExportedSymbols = readUint32(data, position);\n   position += 4;\n   dictionary.numberOfNewSymbols = readUint32(data, position);\n   position += 4;\n   args = [\n    dictionary,\n    header.number,\n    header.referredTo,\n    data,\n    position,\n    end\n   ];\n   break;\n  case 6:\n  case 7:\n   var textRegion = {};\n   textRegion.info = readRegionSegmentInformation(data, position);\n   position += RegionSegmentInformationFieldLength;\n   var textRegionSegmentFlags = readUint16(data, position);\n   position += 2;\n   textRegion.huffman = !!(textRegionSegmentFlags & 1);\n   textRegion.refinement = !!(textRegionSegmentFlags & 2);\n   textRegion.stripSize = 1 << (textRegionSegmentFlags >> 2 & 3);\n   textRegion.referenceCorner = textRegionSegmentFlags >> 4 & 3;\n   textRegion.transposed = !!(textRegionSegmentFlags & 64);\n   textRegion.combinationOperator = textRegionSegmentFlags >> 7 & 3;\n   textRegion.defaultPixelValue = textRegionSegmentFlags >> 9 & 1;\n   textRegion.dsOffset = textRegionSegmentFlags << 17 >> 27;\n   textRegion.refinementTemplate = textRegionSegmentFlags >> 15 & 1;\n   if (textRegion.huffman) {\n    var textRegionHuffmanFlags = readUint16(data, position);\n    position += 2;\n    textRegion.huffmanFS = textRegionHuffmanFlags & 3;\n    textRegion.huffmanDS = textRegionHuffmanFlags >> 2 & 3;\n    textRegion.huffmanDT = textRegionHuffmanFlags >> 4 & 3;\n    textRegion.huffmanRefinementDW = textRegionHuffmanFlags >> 6 & 3;\n    textRegion.huffmanRefinementDH = textRegionHuffmanFlags >> 8 & 3;\n    textRegion.huffmanRefinementDX = textRegionHuffmanFlags >> 10 & 3;\n    textRegion.huffmanRefinementDY = textRegionHuffmanFlags >> 12 & 3;\n    textRegion.huffmanRefinementSizeSelector = !!(textRegionHuffmanFlags & 14);\n   }\n   if (textRegion.refinement && !textRegion.refinementTemplate) {\n    at = [];\n    for (i = 0; i < 2; i++) {\n     at.push({\n      x: readInt8(data, position),\n      y: readInt8(data, position + 1)\n     });\n     position += 2;\n    }\n    textRegion.refinementAt = at;\n   }\n   textRegion.numberOfSymbolInstances = readUint32(data, position);\n   position += 4;\n   if (textRegion.huffman) {\n    error('JBIG2 error: huffman is not supported');\n   }\n   args = [\n    textRegion,\n    header.referredTo,\n    data,\n    position,\n    end\n   ];\n   break;\n  case 38:\n  case 39:\n   var genericRegion = {};\n   genericRegion.info = readRegionSegmentInformation(data, position);\n   position += RegionSegmentInformationFieldLength;\n   var genericRegionSegmentFlags = data[position++];\n   genericRegion.mmr = !!(genericRegionSegmentFlags & 1);\n   genericRegion.template = genericRegionSegmentFlags >> 1 & 3;\n   genericRegion.prediction = !!(genericRegionSegmentFlags & 8);\n   if (!genericRegion.mmr) {\n    atLength = genericRegion.template === 0 ? 4 : 1;\n    at = [];\n    for (i = 0; i < atLength; i++) {\n     at.push({\n      x: readInt8(data, position),\n      y: readInt8(data, position + 1)\n     });\n     position += 2;\n    }\n    genericRegion.at = at;\n   }\n   args = [\n    genericRegion,\n    data,\n    position,\n    end\n   ];\n   break;\n  case 48:\n   var pageInfo = {\n    width: readUint32(data, position),\n    height: readUint32(data, position + 4),\n    resolutionX: readUint32(data, position + 8),\n    resolutionY: readUint32(data, position + 12)\n   };\n   if (pageInfo.height === 0xFFFFFFFF) {\n    delete pageInfo.height;\n   }\n   var pageSegmentFlags = data[position + 16];\n   readUint16(data, position + 17);\n   pageInfo.lossless = !!(pageSegmentFlags & 1);\n   pageInfo.refinement = !!(pageSegmentFlags & 2);\n   pageInfo.defaultPixelValue = pageSegmentFlags >> 2 & 1;\n   pageInfo.combinationOperator = pageSegmentFlags >> 3 & 3;\n   pageInfo.requiresBuffer = !!(pageSegmentFlags & 32);\n   pageInfo.combinationOperatorOverride = !!(pageSegmentFlags & 64);\n   args = [pageInfo];\n   break;\n  case 49:\n   break;\n  case 50:\n   break;\n  case 51:\n   break;\n  case 62:\n   break;\n  default:\n   error('JBIG2 error: segment type ' + header.typeName + '(' + header.type + ') is not implemented');\n  }\n  var callbackName = 'on' + header.typeName;\n  if (callbackName in visitor) {\n   visitor[callbackName].apply(visitor, args);\n  }\n }\n function processSegments(segments, visitor) {\n  for (var i = 0, ii = segments.length; i < ii; i++) {\n   processSegment(segments[i], visitor);\n  }\n }\n function parseJbig2(data, start, end) {\n  var position = start;\n  if (data[position] !== 0x97 || data[position + 1] !== 0x4A || data[position + 2] !== 0x42 || data[position + 3] !== 0x32 || data[position + 4] !== 0x0D || data[position + 5] !== 0x0A || data[position + 6] !== 0x1A || data[position + 7] !== 0x0A) {\n   error('JBIG2 error: invalid header');\n  }\n  var header = {};\n  position += 8;\n  var flags = data[position++];\n  header.randomAccess = !(flags & 1);\n  if (!(flags & 2)) {\n   header.numberOfPages = readUint32(data, position);\n   position += 4;\n  }\n  readSegments(header, data, position, end);\n  error('Not implemented');\n }\n function parseJbig2Chunks(chunks) {\n  var visitor = new SimpleSegmentVisitor();\n  for (var i = 0, ii = chunks.length; i < ii; i++) {\n   var chunk = chunks[i];\n   var segments = readSegments({}, chunk.data, chunk.start, chunk.end);\n   processSegments(segments, visitor);\n  }\n  return visitor.buffer;\n }\n function SimpleSegmentVisitor() {\n }\n SimpleSegmentVisitor.prototype = {\n  onPageInformation: function SimpleSegmentVisitor_onPageInformation(info) {\n   this.currentPageInfo = info;\n   var rowSize = info.width + 7 >> 3;\n   var buffer = new Uint8Array(rowSize * info.height);\n   if (info.defaultPixelValue) {\n    for (var i = 0, ii = buffer.length; i < ii; i++) {\n     buffer[i] = 0xFF;\n    }\n   }\n   this.buffer = buffer;\n  },\n  drawBitmap: function SimpleSegmentVisitor_drawBitmap(regionInfo, bitmap) {\n   var pageInfo = this.currentPageInfo;\n   var width = regionInfo.width, height = regionInfo.height;\n   var rowSize = pageInfo.width + 7 >> 3;\n   var combinationOperator = pageInfo.combinationOperatorOverride ? regionInfo.combinationOperator : pageInfo.combinationOperator;\n   var buffer = this.buffer;\n   var mask0 = 128 >> (regionInfo.x & 7);\n   var offset0 = regionInfo.y * rowSize + (regionInfo.x >> 3);\n   var i, j, mask, offset;\n   switch (combinationOperator) {\n   case 0:\n    for (i = 0; i < height; i++) {\n     mask = mask0;\n     offset = offset0;\n     for (j = 0; j < width; j++) {\n      if (bitmap[i][j]) {\n       buffer[offset] |= mask;\n      }\n      mask >>= 1;\n      if (!mask) {\n       mask = 128;\n       offset++;\n      }\n     }\n     offset0 += rowSize;\n    }\n    break;\n   case 2:\n    for (i = 0; i < height; i++) {\n     mask = mask0;\n     offset = offset0;\n     for (j = 0; j < width; j++) {\n      if (bitmap[i][j]) {\n       buffer[offset] ^= mask;\n      }\n      mask >>= 1;\n      if (!mask) {\n       mask = 128;\n       offset++;\n      }\n     }\n     offset0 += rowSize;\n    }\n    break;\n   default:\n    error('JBIG2 error: operator ' + combinationOperator + ' is not supported');\n   }\n  },\n  onImmediateGenericRegion: function SimpleSegmentVisitor_onImmediateGenericRegion(region, data, start, end) {\n   var regionInfo = region.info;\n   var decodingContext = new DecodingContext(data, start, end);\n   var bitmap = decodeBitmap(region.mmr, regionInfo.width, regionInfo.height, region.template, region.prediction, null, region.at, decodingContext);\n   this.drawBitmap(regionInfo, bitmap);\n  },\n  onImmediateLosslessGenericRegion: function SimpleSegmentVisitor_onImmediateLosslessGenericRegion() {\n   this.onImmediateGenericRegion.apply(this, arguments);\n  },\n  onSymbolDictionary: function SimpleSegmentVisitor_onSymbolDictionary(dictionary, currentSegment, referredSegments, data, start, end) {\n   var huffmanTables;\n   if (dictionary.huffman) {\n    error('JBIG2 error: huffman is not supported');\n   }\n   var symbols = this.symbols;\n   if (!symbols) {\n    this.symbols = symbols = {};\n   }\n   var inputSymbols = [];\n   for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n    inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);\n   }\n   var decodingContext = new DecodingContext(data, start, end);\n   symbols[currentSegment] = decodeSymbolDictionary(dictionary.huffman, dictionary.refinement, inputSymbols, dictionary.numberOfNewSymbols, dictionary.numberOfExportedSymbols, huffmanTables, dictionary.template, dictionary.at, dictionary.refinementTemplate, dictionary.refinementAt, decodingContext);\n  },\n  onImmediateTextRegion: function SimpleSegmentVisitor_onImmediateTextRegion(region, referredSegments, data, start, end) {\n   var regionInfo = region.info;\n   var huffmanTables;\n   var symbols = this.symbols;\n   var inputSymbols = [];\n   for (var i = 0, ii = referredSegments.length; i < ii; i++) {\n    inputSymbols = inputSymbols.concat(symbols[referredSegments[i]]);\n   }\n   var symbolCodeLength = log2(inputSymbols.length);\n   var decodingContext = new DecodingContext(data, start, end);\n   var bitmap = decodeTextRegion(region.huffman, region.refinement, regionInfo.width, regionInfo.height, region.defaultPixelValue, region.numberOfSymbolInstances, region.stripSize, inputSymbols, symbolCodeLength, region.transposed, region.dsOffset, region.referenceCorner, region.combinationOperator, huffmanTables, region.refinementTemplate, region.refinementAt, decodingContext);\n   this.drawBitmap(regionInfo, bitmap);\n  },\n  onImmediateLosslessTextRegion: function SimpleSegmentVisitor_onImmediateLosslessTextRegion() {\n   this.onImmediateTextRegion.apply(this, arguments);\n  }\n };\n function Jbig2Image() {\n }\n Jbig2Image.prototype = {\n  parseChunks: function Jbig2Image_parseChunks(chunks) {\n   return parseJbig2Chunks(chunks);\n  }\n };\n return Jbig2Image;\n}();\nexports.Jbig2Image = Jbig2Image;\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar error = sharedUtil.error;\nvar JpegImage = function JpegImageClosure() {\n var dctZigZag = new Uint8Array([\n  0,\n  1,\n  8,\n  16,\n  9,\n  2,\n  3,\n  10,\n  17,\n  24,\n  32,\n  25,\n  18,\n  11,\n  4,\n  5,\n  12,\n  19,\n  26,\n  33,\n  40,\n  48,\n  41,\n  34,\n  27,\n  20,\n  13,\n  6,\n  7,\n  14,\n  21,\n  28,\n  35,\n  42,\n  49,\n  56,\n  57,\n  50,\n  43,\n  36,\n  29,\n  22,\n  15,\n  23,\n  30,\n  37,\n  44,\n  51,\n  58,\n  59,\n  52,\n  45,\n  38,\n  31,\n  39,\n  46,\n  53,\n  60,\n  61,\n  54,\n  47,\n  55,\n  62,\n  63\n ]);\n var dctCos1 = 4017;\n var dctSin1 = 799;\n var dctCos3 = 3406;\n var dctSin3 = 2276;\n var dctCos6 = 1567;\n var dctSin6 = 3784;\n var dctSqrt2 = 5793;\n var dctSqrt1d2 = 2896;\n function JpegImage() {\n  this.decodeTransform = null;\n  this.colorTransform = -1;\n }\n function buildHuffmanTable(codeLengths, values) {\n  var k = 0, code = [], i, j, length = 16;\n  while (length > 0 && !codeLengths[length - 1]) {\n   length--;\n  }\n  code.push({\n   children: [],\n   index: 0\n  });\n  var p = code[0], q;\n  for (i = 0; i < length; i++) {\n   for (j = 0; j < codeLengths[i]; j++) {\n    p = code.pop();\n    p.children[p.index] = values[k];\n    while (p.index > 0) {\n     p = code.pop();\n    }\n    p.index++;\n    code.push(p);\n    while (code.length <= i) {\n     code.push(q = {\n      children: [],\n      index: 0\n     });\n     p.children[p.index] = q.children;\n     p = q;\n    }\n    k++;\n   }\n   if (i + 1 < length) {\n    code.push(q = {\n     children: [],\n     index: 0\n    });\n    p.children[p.index] = q.children;\n    p = q;\n   }\n  }\n  return code[0].children;\n }\n function getBlockBufferOffset(component, row, col) {\n  return 64 * ((component.blocksPerLine + 1) * row + col);\n }\n function decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successivePrev, successive) {\n  var mcusPerLine = frame.mcusPerLine;\n  var progressive = frame.progressive;\n  var startOffset = offset, bitsData = 0, bitsCount = 0;\n  function readBit() {\n   if (bitsCount > 0) {\n    bitsCount--;\n    return bitsData >> bitsCount & 1;\n   }\n   bitsData = data[offset++];\n   if (bitsData === 0xFF) {\n    var nextByte = data[offset++];\n    if (nextByte) {\n     error('JPEG error: unexpected marker ' + (bitsData << 8 | nextByte).toString(16));\n    }\n   }\n   bitsCount = 7;\n   return bitsData >>> 7;\n  }\n  function decodeHuffman(tree) {\n   var node = tree;\n   while (true) {\n    node = node[readBit()];\n    if (typeof node === 'number') {\n     return node;\n    }\n    if (typeof node !== 'object') {\n     error('JPEG error: invalid huffman sequence');\n    }\n   }\n  }\n  function receive(length) {\n   var n = 0;\n   while (length > 0) {\n    n = n << 1 | readBit();\n    length--;\n   }\n   return n;\n  }\n  function receiveAndExtend(length) {\n   if (length === 1) {\n    return readBit() === 1 ? 1 : -1;\n   }\n   var n = receive(length);\n   if (n >= 1 << length - 1) {\n    return n;\n   }\n   return n + (-1 << length) + 1;\n  }\n  function decodeBaseline(component, offset) {\n   var t = decodeHuffman(component.huffmanTableDC);\n   var diff = t === 0 ? 0 : receiveAndExtend(t);\n   component.blockData[offset] = component.pred += diff;\n   var k = 1;\n   while (k < 64) {\n    var rs = decodeHuffman(component.huffmanTableAC);\n    var s = rs & 15, r = rs >> 4;\n    if (s === 0) {\n     if (r < 15) {\n      break;\n     }\n     k += 16;\n     continue;\n    }\n    k += r;\n    var z = dctZigZag[k];\n    component.blockData[offset + z] = receiveAndExtend(s);\n    k++;\n   }\n  }\n  function decodeDCFirst(component, offset) {\n   var t = decodeHuffman(component.huffmanTableDC);\n   var diff = t === 0 ? 0 : receiveAndExtend(t) << successive;\n   component.blockData[offset] = component.pred += diff;\n  }\n  function decodeDCSuccessive(component, offset) {\n   component.blockData[offset] |= readBit() << successive;\n  }\n  var eobrun = 0;\n  function decodeACFirst(component, offset) {\n   if (eobrun > 0) {\n    eobrun--;\n    return;\n   }\n   var k = spectralStart, e = spectralEnd;\n   while (k <= e) {\n    var rs = decodeHuffman(component.huffmanTableAC);\n    var s = rs & 15, r = rs >> 4;\n    if (s === 0) {\n     if (r < 15) {\n      eobrun = receive(r) + (1 << r) - 1;\n      break;\n     }\n     k += 16;\n     continue;\n    }\n    k += r;\n    var z = dctZigZag[k];\n    component.blockData[offset + z] = receiveAndExtend(s) * (1 << successive);\n    k++;\n   }\n  }\n  var successiveACState = 0, successiveACNextValue;\n  function decodeACSuccessive(component, offset) {\n   var k = spectralStart;\n   var e = spectralEnd;\n   var r = 0;\n   var s;\n   var rs;\n   while (k <= e) {\n    var z = dctZigZag[k];\n    switch (successiveACState) {\n    case 0:\n     rs = decodeHuffman(component.huffmanTableAC);\n     s = rs & 15;\n     r = rs >> 4;\n     if (s === 0) {\n      if (r < 15) {\n       eobrun = receive(r) + (1 << r);\n       successiveACState = 4;\n      } else {\n       r = 16;\n       successiveACState = 1;\n      }\n     } else {\n      if (s !== 1) {\n       error('JPEG error: invalid ACn encoding');\n      }\n      successiveACNextValue = receiveAndExtend(s);\n      successiveACState = r ? 2 : 3;\n     }\n     continue;\n    case 1:\n    case 2:\n     if (component.blockData[offset + z]) {\n      component.blockData[offset + z] += readBit() << successive;\n     } else {\n      r--;\n      if (r === 0) {\n       successiveACState = successiveACState === 2 ? 3 : 0;\n      }\n     }\n     break;\n    case 3:\n     if (component.blockData[offset + z]) {\n      component.blockData[offset + z] += readBit() << successive;\n     } else {\n      component.blockData[offset + z] = successiveACNextValue << successive;\n      successiveACState = 0;\n     }\n     break;\n    case 4:\n     if (component.blockData[offset + z]) {\n      component.blockData[offset + z] += readBit() << successive;\n     }\n     break;\n    }\n    k++;\n   }\n   if (successiveACState === 4) {\n    eobrun--;\n    if (eobrun === 0) {\n     successiveACState = 0;\n    }\n   }\n  }\n  function decodeMcu(component, decode, mcu, row, col) {\n   var mcuRow = mcu / mcusPerLine | 0;\n   var mcuCol = mcu % mcusPerLine;\n   var blockRow = mcuRow * component.v + row;\n   var blockCol = mcuCol * component.h + col;\n   var offset = getBlockBufferOffset(component, blockRow, blockCol);\n   decode(component, offset);\n  }\n  function decodeBlock(component, decode, mcu) {\n   var blockRow = mcu / component.blocksPerLine | 0;\n   var blockCol = mcu % component.blocksPerLine;\n   var offset = getBlockBufferOffset(component, blockRow, blockCol);\n   decode(component, offset);\n  }\n  var componentsLength = components.length;\n  var component, i, j, k, n;\n  var decodeFn;\n  if (progressive) {\n   if (spectralStart === 0) {\n    decodeFn = successivePrev === 0 ? decodeDCFirst : decodeDCSuccessive;\n   } else {\n    decodeFn = successivePrev === 0 ? decodeACFirst : decodeACSuccessive;\n   }\n  } else {\n   decodeFn = decodeBaseline;\n  }\n  var mcu = 0, marker;\n  var mcuExpected;\n  if (componentsLength === 1) {\n   mcuExpected = components[0].blocksPerLine * components[0].blocksPerColumn;\n  } else {\n   mcuExpected = mcusPerLine * frame.mcusPerColumn;\n  }\n  if (!resetInterval) {\n   resetInterval = mcuExpected;\n  }\n  var h, v;\n  while (mcu < mcuExpected) {\n   for (i = 0; i < componentsLength; i++) {\n    components[i].pred = 0;\n   }\n   eobrun = 0;\n   if (componentsLength === 1) {\n    component = components[0];\n    for (n = 0; n < resetInterval; n++) {\n     decodeBlock(component, decodeFn, mcu);\n     mcu++;\n    }\n   } else {\n    for (n = 0; n < resetInterval; n++) {\n     for (i = 0; i < componentsLength; i++) {\n      component = components[i];\n      h = component.h;\n      v = component.v;\n      for (j = 0; j < v; j++) {\n       for (k = 0; k < h; k++) {\n        decodeMcu(component, decodeFn, mcu, j, k);\n       }\n      }\n     }\n     mcu++;\n    }\n   }\n   bitsCount = 0;\n   marker = data[offset] << 8 | data[offset + 1];\n   while (data[offset] === 0x00 && offset < data.length - 1) {\n    offset++;\n    marker = data[offset] << 8 | data[offset + 1];\n   }\n   if (marker <= 0xFF00) {\n    error('JPEG error: marker was not found');\n   }\n   if (marker >= 0xFFD0 && marker <= 0xFFD7) {\n    offset += 2;\n   } else {\n    break;\n   }\n  }\n  return offset - startOffset;\n }\n function quantizeAndInverse(component, blockBufferOffset, p) {\n  var qt = component.quantizationTable, blockData = component.blockData;\n  var v0, v1, v2, v3, v4, v5, v6, v7;\n  var p0, p1, p2, p3, p4, p5, p6, p7;\n  var t;\n  if (!qt) {\n   error('JPEG error: missing required Quantization Table.');\n  }\n  for (var row = 0; row < 64; row += 8) {\n   p0 = blockData[blockBufferOffset + row];\n   p1 = blockData[blockBufferOffset + row + 1];\n   p2 = blockData[blockBufferOffset + row + 2];\n   p3 = blockData[blockBufferOffset + row + 3];\n   p4 = blockData[blockBufferOffset + row + 4];\n   p5 = blockData[blockBufferOffset + row + 5];\n   p6 = blockData[blockBufferOffset + row + 6];\n   p7 = blockData[blockBufferOffset + row + 7];\n   p0 *= qt[row];\n   if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n    t = dctSqrt2 * p0 + 512 >> 10;\n    p[row] = t;\n    p[row + 1] = t;\n    p[row + 2] = t;\n    p[row + 3] = t;\n    p[row + 4] = t;\n    p[row + 5] = t;\n    p[row + 6] = t;\n    p[row + 7] = t;\n    continue;\n   }\n   p1 *= qt[row + 1];\n   p2 *= qt[row + 2];\n   p3 *= qt[row + 3];\n   p4 *= qt[row + 4];\n   p5 *= qt[row + 5];\n   p6 *= qt[row + 6];\n   p7 *= qt[row + 7];\n   v0 = dctSqrt2 * p0 + 128 >> 8;\n   v1 = dctSqrt2 * p4 + 128 >> 8;\n   v2 = p2;\n   v3 = p6;\n   v4 = dctSqrt1d2 * (p1 - p7) + 128 >> 8;\n   v7 = dctSqrt1d2 * (p1 + p7) + 128 >> 8;\n   v5 = p3 << 4;\n   v6 = p5 << 4;\n   v0 = v0 + v1 + 1 >> 1;\n   v1 = v0 - v1;\n   t = v2 * dctSin6 + v3 * dctCos6 + 128 >> 8;\n   v2 = v2 * dctCos6 - v3 * dctSin6 + 128 >> 8;\n   v3 = t;\n   v4 = v4 + v6 + 1 >> 1;\n   v6 = v4 - v6;\n   v7 = v7 + v5 + 1 >> 1;\n   v5 = v7 - v5;\n   v0 = v0 + v3 + 1 >> 1;\n   v3 = v0 - v3;\n   v1 = v1 + v2 + 1 >> 1;\n   v2 = v1 - v2;\n   t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n   v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n   v7 = t;\n   t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n   v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n   v6 = t;\n   p[row] = v0 + v7;\n   p[row + 7] = v0 - v7;\n   p[row + 1] = v1 + v6;\n   p[row + 6] = v1 - v6;\n   p[row + 2] = v2 + v5;\n   p[row + 5] = v2 - v5;\n   p[row + 3] = v3 + v4;\n   p[row + 4] = v3 - v4;\n  }\n  for (var col = 0; col < 8; ++col) {\n   p0 = p[col];\n   p1 = p[col + 8];\n   p2 = p[col + 16];\n   p3 = p[col + 24];\n   p4 = p[col + 32];\n   p5 = p[col + 40];\n   p6 = p[col + 48];\n   p7 = p[col + 56];\n   if ((p1 | p2 | p3 | p4 | p5 | p6 | p7) === 0) {\n    t = dctSqrt2 * p0 + 8192 >> 14;\n    t = t < -2040 ? 0 : t >= 2024 ? 255 : t + 2056 >> 4;\n    blockData[blockBufferOffset + col] = t;\n    blockData[blockBufferOffset + col + 8] = t;\n    blockData[blockBufferOffset + col + 16] = t;\n    blockData[blockBufferOffset + col + 24] = t;\n    blockData[blockBufferOffset + col + 32] = t;\n    blockData[blockBufferOffset + col + 40] = t;\n    blockData[blockBufferOffset + col + 48] = t;\n    blockData[blockBufferOffset + col + 56] = t;\n    continue;\n   }\n   v0 = dctSqrt2 * p0 + 2048 >> 12;\n   v1 = dctSqrt2 * p4 + 2048 >> 12;\n   v2 = p2;\n   v3 = p6;\n   v4 = dctSqrt1d2 * (p1 - p7) + 2048 >> 12;\n   v7 = dctSqrt1d2 * (p1 + p7) + 2048 >> 12;\n   v5 = p3;\n   v6 = p5;\n   v0 = (v0 + v1 + 1 >> 1) + 4112;\n   v1 = v0 - v1;\n   t = v2 * dctSin6 + v3 * dctCos6 + 2048 >> 12;\n   v2 = v2 * dctCos6 - v3 * dctSin6 + 2048 >> 12;\n   v3 = t;\n   v4 = v4 + v6 + 1 >> 1;\n   v6 = v4 - v6;\n   v7 = v7 + v5 + 1 >> 1;\n   v5 = v7 - v5;\n   v0 = v0 + v3 + 1 >> 1;\n   v3 = v0 - v3;\n   v1 = v1 + v2 + 1 >> 1;\n   v2 = v1 - v2;\n   t = v4 * dctSin3 + v7 * dctCos3 + 2048 >> 12;\n   v4 = v4 * dctCos3 - v7 * dctSin3 + 2048 >> 12;\n   v7 = t;\n   t = v5 * dctSin1 + v6 * dctCos1 + 2048 >> 12;\n   v5 = v5 * dctCos1 - v6 * dctSin1 + 2048 >> 12;\n   v6 = t;\n   p0 = v0 + v7;\n   p7 = v0 - v7;\n   p1 = v1 + v6;\n   p6 = v1 - v6;\n   p2 = v2 + v5;\n   p5 = v2 - v5;\n   p3 = v3 + v4;\n   p4 = v3 - v4;\n   p0 = p0 < 16 ? 0 : p0 >= 4080 ? 255 : p0 >> 4;\n   p1 = p1 < 16 ? 0 : p1 >= 4080 ? 255 : p1 >> 4;\n   p2 = p2 < 16 ? 0 : p2 >= 4080 ? 255 : p2 >> 4;\n   p3 = p3 < 16 ? 0 : p3 >= 4080 ? 255 : p3 >> 4;\n   p4 = p4 < 16 ? 0 : p4 >= 4080 ? 255 : p4 >> 4;\n   p5 = p5 < 16 ? 0 : p5 >= 4080 ? 255 : p5 >> 4;\n   p6 = p6 < 16 ? 0 : p6 >= 4080 ? 255 : p6 >> 4;\n   p7 = p7 < 16 ? 0 : p7 >= 4080 ? 255 : p7 >> 4;\n   blockData[blockBufferOffset + col] = p0;\n   blockData[blockBufferOffset + col + 8] = p1;\n   blockData[blockBufferOffset + col + 16] = p2;\n   blockData[blockBufferOffset + col + 24] = p3;\n   blockData[blockBufferOffset + col + 32] = p4;\n   blockData[blockBufferOffset + col + 40] = p5;\n   blockData[blockBufferOffset + col + 48] = p6;\n   blockData[blockBufferOffset + col + 56] = p7;\n  }\n }\n function buildComponentData(frame, component) {\n  var blocksPerLine = component.blocksPerLine;\n  var blocksPerColumn = component.blocksPerColumn;\n  var computationBuffer = new Int16Array(64);\n  for (var blockRow = 0; blockRow < blocksPerColumn; blockRow++) {\n   for (var blockCol = 0; blockCol < blocksPerLine; blockCol++) {\n    var offset = getBlockBufferOffset(component, blockRow, blockCol);\n    quantizeAndInverse(component, offset, computationBuffer);\n   }\n  }\n  return component.blockData;\n }\n function clamp0to255(a) {\n  return a <= 0 ? 0 : a >= 255 ? 255 : a;\n }\n JpegImage.prototype = {\n  parse: function parse(data) {\n   function readUint16() {\n    var value = data[offset] << 8 | data[offset + 1];\n    offset += 2;\n    return value;\n   }\n   function readDataBlock() {\n    var length = readUint16();\n    var array = data.subarray(offset, offset + length - 2);\n    offset += array.length;\n    return array;\n   }\n   function prepareComponents(frame) {\n    var mcusPerLine = Math.ceil(frame.samplesPerLine / 8 / frame.maxH);\n    var mcusPerColumn = Math.ceil(frame.scanLines / 8 / frame.maxV);\n    for (var i = 0; i < frame.components.length; i++) {\n     component = frame.components[i];\n     var blocksPerLine = Math.ceil(Math.ceil(frame.samplesPerLine / 8) * component.h / frame.maxH);\n     var blocksPerColumn = Math.ceil(Math.ceil(frame.scanLines / 8) * component.v / frame.maxV);\n     var blocksPerLineForMcu = mcusPerLine * component.h;\n     var blocksPerColumnForMcu = mcusPerColumn * component.v;\n     var blocksBufferSize = 64 * blocksPerColumnForMcu * (blocksPerLineForMcu + 1);\n     component.blockData = new Int16Array(blocksBufferSize);\n     component.blocksPerLine = blocksPerLine;\n     component.blocksPerColumn = blocksPerColumn;\n    }\n    frame.mcusPerLine = mcusPerLine;\n    frame.mcusPerColumn = mcusPerColumn;\n   }\n   var offset = 0;\n   var jfif = null;\n   var adobe = null;\n   var frame, resetInterval;\n   var quantizationTables = [];\n   var huffmanTablesAC = [], huffmanTablesDC = [];\n   var fileMarker = readUint16();\n   if (fileMarker !== 0xFFD8) {\n    error('JPEG error: SOI not found');\n   }\n   fileMarker = readUint16();\n   while (fileMarker !== 0xFFD9) {\n    var i, j, l;\n    switch (fileMarker) {\n    case 0xFFE0:\n    case 0xFFE1:\n    case 0xFFE2:\n    case 0xFFE3:\n    case 0xFFE4:\n    case 0xFFE5:\n    case 0xFFE6:\n    case 0xFFE7:\n    case 0xFFE8:\n    case 0xFFE9:\n    case 0xFFEA:\n    case 0xFFEB:\n    case 0xFFEC:\n    case 0xFFED:\n    case 0xFFEE:\n    case 0xFFEF:\n    case 0xFFFE:\n     var appData = readDataBlock();\n     if (fileMarker === 0xFFE0) {\n      if (appData[0] === 0x4A && appData[1] === 0x46 && appData[2] === 0x49 && appData[3] === 0x46 && appData[4] === 0) {\n       jfif = {\n        version: {\n         major: appData[5],\n         minor: appData[6]\n        },\n        densityUnits: appData[7],\n        xDensity: appData[8] << 8 | appData[9],\n        yDensity: appData[10] << 8 | appData[11],\n        thumbWidth: appData[12],\n        thumbHeight: appData[13],\n        thumbData: appData.subarray(14, 14 + 3 * appData[12] * appData[13])\n       };\n      }\n     }\n     if (fileMarker === 0xFFEE) {\n      if (appData[0] === 0x41 && appData[1] === 0x64 && appData[2] === 0x6F && appData[3] === 0x62 && appData[4] === 0x65) {\n       adobe = {\n        version: appData[5] << 8 | appData[6],\n        flags0: appData[7] << 8 | appData[8],\n        flags1: appData[9] << 8 | appData[10],\n        transformCode: appData[11]\n       };\n      }\n     }\n     break;\n    case 0xFFDB:\n     var quantizationTablesLength = readUint16();\n     var quantizationTablesEnd = quantizationTablesLength + offset - 2;\n     var z;\n     while (offset < quantizationTablesEnd) {\n      var quantizationTableSpec = data[offset++];\n      var tableData = new Uint16Array(64);\n      if (quantizationTableSpec >> 4 === 0) {\n       for (j = 0; j < 64; j++) {\n        z = dctZigZag[j];\n        tableData[z] = data[offset++];\n       }\n      } else if (quantizationTableSpec >> 4 === 1) {\n       for (j = 0; j < 64; j++) {\n        z = dctZigZag[j];\n        tableData[z] = readUint16();\n       }\n      } else {\n       error('JPEG error: DQT - invalid table spec');\n      }\n      quantizationTables[quantizationTableSpec & 15] = tableData;\n     }\n     break;\n    case 0xFFC0:\n    case 0xFFC1:\n    case 0xFFC2:\n     if (frame) {\n      error('JPEG error: Only single frame JPEGs supported');\n     }\n     readUint16();\n     frame = {};\n     frame.extended = fileMarker === 0xFFC1;\n     frame.progressive = fileMarker === 0xFFC2;\n     frame.precision = data[offset++];\n     frame.scanLines = readUint16();\n     frame.samplesPerLine = readUint16();\n     frame.components = [];\n     frame.componentIds = {};\n     var componentsCount = data[offset++], componentId;\n     var maxH = 0, maxV = 0;\n     for (i = 0; i < componentsCount; i++) {\n      componentId = data[offset];\n      var h = data[offset + 1] >> 4;\n      var v = data[offset + 1] & 15;\n      if (maxH < h) {\n       maxH = h;\n      }\n      if (maxV < v) {\n       maxV = v;\n      }\n      var qId = data[offset + 2];\n      l = frame.components.push({\n       h: h,\n       v: v,\n       quantizationId: qId,\n       quantizationTable: null\n      });\n      frame.componentIds[componentId] = l - 1;\n      offset += 3;\n     }\n     frame.maxH = maxH;\n     frame.maxV = maxV;\n     prepareComponents(frame);\n     break;\n    case 0xFFC4:\n     var huffmanLength = readUint16();\n     for (i = 2; i < huffmanLength;) {\n      var huffmanTableSpec = data[offset++];\n      var codeLengths = new Uint8Array(16);\n      var codeLengthSum = 0;\n      for (j = 0; j < 16; j++, offset++) {\n       codeLengthSum += codeLengths[j] = data[offset];\n      }\n      var huffmanValues = new Uint8Array(codeLengthSum);\n      for (j = 0; j < codeLengthSum; j++, offset++) {\n       huffmanValues[j] = data[offset];\n      }\n      i += 17 + codeLengthSum;\n      (huffmanTableSpec >> 4 === 0 ? huffmanTablesDC : huffmanTablesAC)[huffmanTableSpec & 15] = buildHuffmanTable(codeLengths, huffmanValues);\n     }\n     break;\n    case 0xFFDD:\n     readUint16();\n     resetInterval = readUint16();\n     break;\n    case 0xFFDA:\n     readUint16();\n     var selectorsCount = data[offset++];\n     var components = [], component;\n     for (i = 0; i < selectorsCount; i++) {\n      var componentIndex = frame.componentIds[data[offset++]];\n      component = frame.components[componentIndex];\n      var tableSpec = data[offset++];\n      component.huffmanTableDC = huffmanTablesDC[tableSpec >> 4];\n      component.huffmanTableAC = huffmanTablesAC[tableSpec & 15];\n      components.push(component);\n     }\n     var spectralStart = data[offset++];\n     var spectralEnd = data[offset++];\n     var successiveApproximation = data[offset++];\n     var processed = decodeScan(data, offset, frame, components, resetInterval, spectralStart, spectralEnd, successiveApproximation >> 4, successiveApproximation & 15);\n     offset += processed;\n     break;\n    case 0xFFFF:\n     if (data[offset] !== 0xFF) {\n      offset--;\n     }\n     break;\n    default:\n     if (data[offset - 3] === 0xFF && data[offset - 2] >= 0xC0 && data[offset - 2] <= 0xFE) {\n      offset -= 3;\n      break;\n     }\n     error('JPEG error: unknown marker ' + fileMarker.toString(16));\n    }\n    fileMarker = readUint16();\n   }\n   this.width = frame.samplesPerLine;\n   this.height = frame.scanLines;\n   this.jfif = jfif;\n   this.adobe = adobe;\n   this.components = [];\n   for (i = 0; i < frame.components.length; i++) {\n    component = frame.components[i];\n    var quantizationTable = quantizationTables[component.quantizationId];\n    if (quantizationTable) {\n     component.quantizationTable = quantizationTable;\n    }\n    this.components.push({\n     output: buildComponentData(frame, component),\n     scaleX: component.h / frame.maxH,\n     scaleY: component.v / frame.maxV,\n     blocksPerLine: component.blocksPerLine,\n     blocksPerColumn: component.blocksPerColumn\n    });\n   }\n   this.numComponents = this.components.length;\n  },\n  _getLinearizedBlockData: function getLinearizedBlockData(width, height) {\n   var scaleX = this.width / width, scaleY = this.height / height;\n   var component, componentScaleX, componentScaleY, blocksPerScanline;\n   var x, y, i, j, k;\n   var index;\n   var offset = 0;\n   var output;\n   var numComponents = this.components.length;\n   var dataLength = width * height * numComponents;\n   var data = new Uint8Array(dataLength);\n   var xScaleBlockOffset = new Uint32Array(width);\n   var mask3LSB = 0xfffffff8;\n   for (i = 0; i < numComponents; i++) {\n    component = this.components[i];\n    componentScaleX = component.scaleX * scaleX;\n    componentScaleY = component.scaleY * scaleY;\n    offset = i;\n    output = component.output;\n    blocksPerScanline = component.blocksPerLine + 1 << 3;\n    for (x = 0; x < width; x++) {\n     j = 0 | x * componentScaleX;\n     xScaleBlockOffset[x] = (j & mask3LSB) << 3 | j & 7;\n    }\n    for (y = 0; y < height; y++) {\n     j = 0 | y * componentScaleY;\n     index = blocksPerScanline * (j & mask3LSB) | (j & 7) << 3;\n     for (x = 0; x < width; x++) {\n      data[offset] = output[index + xScaleBlockOffset[x]];\n      offset += numComponents;\n     }\n    }\n   }\n   var transform = this.decodeTransform;\n   if (transform) {\n    for (i = 0; i < dataLength;) {\n     for (j = 0, k = 0; j < numComponents; j++, i++, k += 2) {\n      data[i] = (data[i] * transform[k] >> 8) + transform[k + 1];\n     }\n    }\n   }\n   return data;\n  },\n  _isColorConversionNeeded: function isColorConversionNeeded() {\n   if (this.adobe && this.adobe.transformCode) {\n    return true;\n   } else if (this.numComponents === 3) {\n    if (!this.adobe && this.colorTransform === 0) {\n     return false;\n    }\n    return true;\n   }\n   if (!this.adobe && this.colorTransform === 1) {\n    return true;\n   }\n   return false;\n  },\n  _convertYccToRgb: function convertYccToRgb(data) {\n   var Y, Cb, Cr;\n   for (var i = 0, length = data.length; i < length; i += 3) {\n    Y = data[i];\n    Cb = data[i + 1];\n    Cr = data[i + 2];\n    data[i] = clamp0to255(Y - 179.456 + 1.402 * Cr);\n    data[i + 1] = clamp0to255(Y + 135.459 - 0.344 * Cb - 0.714 * Cr);\n    data[i + 2] = clamp0to255(Y - 226.816 + 1.772 * Cb);\n   }\n   return data;\n  },\n  _convertYcckToRgb: function convertYcckToRgb(data) {\n   var Y, Cb, Cr, k;\n   var offset = 0;\n   for (var i = 0, length = data.length; i < length; i += 4) {\n    Y = data[i];\n    Cb = data[i + 1];\n    Cr = data[i + 2];\n    k = data[i + 3];\n    var r = -122.67195406894 + Cb * (-6.60635669420364e-5 * Cb + 0.000437130475926232 * Cr - 5.4080610064599e-5 * Y + 0.00048449797120281 * k - 0.154362151871126) + Cr * (-0.000957964378445773 * Cr + 0.000817076911346625 * Y - 0.00477271405408747 * k + 1.53380253221734) + Y * (0.000961250184130688 * Y - 0.00266257332283933 * k + 0.48357088451265) + k * (-0.000336197177618394 * k + 0.484791561490776);\n    var g = 107.268039397724 + Cb * (2.19927104525741e-5 * Cb - 0.000640992018297945 * Cr + 0.000659397001245577 * Y + 0.000426105652938837 * k - 0.176491792462875) + Cr * (-0.000778269941513683 * Cr + 0.00130872261408275 * Y + 0.000770482631801132 * k - 0.151051492775562) + Y * (0.00126935368114843 * Y - 0.00265090189010898 * k + 0.25802910206845) + k * (-0.000318913117588328 * k - 0.213742400323665);\n    var b = -20.810012546947 + Cb * (-0.000570115196973677 * Cb - 2.63409051004589e-5 * Cr + 0.0020741088115012 * Y - 0.00288260236853442 * k + 0.814272968359295) + Cr * (-1.53496057440975e-5 * Cr - 0.000132689043961446 * Y + 0.000560833691242812 * k - 0.195152027534049) + Y * (0.00174418132927582 * Y - 0.00255243321439347 * k + 0.116935020465145) + k * (-0.000343531996510555 * k + 0.24165260232407);\n    data[offset++] = clamp0to255(r);\n    data[offset++] = clamp0to255(g);\n    data[offset++] = clamp0to255(b);\n   }\n   return data;\n  },\n  _convertYcckToCmyk: function convertYcckToCmyk(data) {\n   var Y, Cb, Cr;\n   for (var i = 0, length = data.length; i < length; i += 4) {\n    Y = data[i];\n    Cb = data[i + 1];\n    Cr = data[i + 2];\n    data[i] = clamp0to255(434.456 - Y - 1.402 * Cr);\n    data[i + 1] = clamp0to255(119.541 - Y + 0.344 * Cb + 0.714 * Cr);\n    data[i + 2] = clamp0to255(481.816 - Y - 1.772 * Cb);\n   }\n   return data;\n  },\n  _convertCmykToRgb: function convertCmykToRgb(data) {\n   var c, m, y, k;\n   var offset = 0;\n   var min = -255 * 255 * 255;\n   var scale = 1 / 255 / 255;\n   for (var i = 0, length = data.length; i < length; i += 4) {\n    c = data[i];\n    m = data[i + 1];\n    y = data[i + 2];\n    k = data[i + 3];\n    var r = c * (-4.387332384609988 * c + 54.48615194189176 * m + 18.82290502165302 * y + 212.25662451639585 * k - 72734.4411664936) + m * (1.7149763477362134 * m - 5.6096736904047315 * y - 17.873870861415444 * k - 1401.7366389350734) + y * (-2.5217340131683033 * y - 21.248923337353073 * k + 4465.541406466231) - k * (21.86122147463605 * k + 48317.86113160301);\n    var g = c * (8.841041422036149 * c + 60.118027045597366 * m + 6.871425592049007 * y + 31.159100130055922 * k - 20220.756542821975) + m * (-15.310361306967817 * m + 17.575251261109482 * y + 131.35250912493976 * k - 48691.05921601825) + y * (4.444339102852739 * y + 9.8632861493405 * k - 6341.191035517494) - k * (20.737325471181034 * k + 47890.15695978492);\n    var b = c * (0.8842522430003296 * c + 8.078677503112928 * m + 30.89978309703729 * y - 0.23883238689178934 * k - 3616.812083916688) + m * (10.49593273432072 * m + 63.02378494754052 * y + 50.606957656360734 * k - 28620.90484698408) + y * (0.03296041114873217 * y + 115.60384449646641 * k - 49363.43385999684) - k * (22.33816807309886 * k + 45932.16563550634);\n    data[offset++] = r >= 0 ? 255 : r <= min ? 0 : 255 + r * scale | 0;\n    data[offset++] = g >= 0 ? 255 : g <= min ? 0 : 255 + g * scale | 0;\n    data[offset++] = b >= 0 ? 255 : b <= min ? 0 : 255 + b * scale | 0;\n   }\n   return data;\n  },\n  getData: function getData(width, height, forceRGBoutput) {\n   if (this.numComponents > 4) {\n    error('JPEG error: Unsupported color mode');\n   }\n   var data = this._getLinearizedBlockData(width, height);\n   if (this.numComponents === 1 && forceRGBoutput) {\n    var dataLength = data.length;\n    var rgbData = new Uint8Array(dataLength * 3);\n    var offset = 0;\n    for (var i = 0; i < dataLength; i++) {\n     var grayColor = data[i];\n     rgbData[offset++] = grayColor;\n     rgbData[offset++] = grayColor;\n     rgbData[offset++] = grayColor;\n    }\n    return rgbData;\n   } else if (this.numComponents === 3 && this._isColorConversionNeeded()) {\n    return this._convertYccToRgb(data);\n   } else if (this.numComponents === 4) {\n    if (this._isColorConversionNeeded()) {\n     if (forceRGBoutput) {\n      return this._convertYcckToRgb(data);\n     }\n     return this._convertYcckToCmyk(data);\n    } else if (forceRGBoutput) {\n     return this._convertCmykToRgb(data);\n    }\n   }\n   return data;\n  }\n };\n return JpegImage;\n}();\nexports.JpegImage = JpegImage;\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar getLookupTableFactory = sharedUtil.getLookupTableFactory;\nvar getMetrics = getLookupTableFactory(function (t) {\n t['Courier'] = 600;\n t['Courier-Bold'] = 600;\n t['Courier-BoldOblique'] = 600;\n t['Courier-Oblique'] = 600;\n t['Helvetica'] = getLookupTableFactory(function (t) {\n  t['space'] = 278;\n  t['exclam'] = 278;\n  t['quotedbl'] = 355;\n  t['numbersign'] = 556;\n  t['dollar'] = 556;\n  t['percent'] = 889;\n  t['ampersand'] = 667;\n  t['quoteright'] = 222;\n  t['parenleft'] = 333;\n  t['parenright'] = 333;\n  t['asterisk'] = 389;\n  t['plus'] = 584;\n  t['comma'] = 278;\n  t['hyphen'] = 333;\n  t['period'] = 278;\n  t['slash'] = 278;\n  t['zero'] = 556;\n  t['one'] = 556;\n  t['two'] = 556;\n  t['three'] = 556;\n  t['four'] = 556;\n  t['five'] = 556;\n  t['six'] = 556;\n  t['seven'] = 556;\n  t['eight'] = 556;\n  t['nine'] = 556;\n  t['colon'] = 278;\n  t['semicolon'] = 278;\n  t['less'] = 584;\n  t['equal'] = 584;\n  t['greater'] = 584;\n  t['question'] = 556;\n  t['at'] = 1015;\n  t['A'] = 667;\n  t['B'] = 667;\n  t['C'] = 722;\n  t['D'] = 722;\n  t['E'] = 667;\n  t['F'] = 611;\n  t['G'] = 778;\n  t['H'] = 722;\n  t['I'] = 278;\n  t['J'] = 500;\n  t['K'] = 667;\n  t['L'] = 556;\n  t['M'] = 833;\n  t['N'] = 722;\n  t['O'] = 778;\n  t['P'] = 667;\n  t['Q'] = 778;\n  t['R'] = 722;\n  t['S'] = 667;\n  t['T'] = 611;\n  t['U'] = 722;\n  t['V'] = 667;\n  t['W'] = 944;\n  t['X'] = 667;\n  t['Y'] = 667;\n  t['Z'] = 611;\n  t['bracketleft'] = 278;\n  t['backslash'] = 278;\n  t['bracketright'] = 278;\n  t['asciicircum'] = 469;\n  t['underscore'] = 556;\n  t['quoteleft'] = 222;\n  t['a'] = 556;\n  t['b'] = 556;\n  t['c'] = 500;\n  t['d'] = 556;\n  t['e'] = 556;\n  t['f'] = 278;\n  t['g'] = 556;\n  t['h'] = 556;\n  t['i'] = 222;\n  t['j'] = 222;\n  t['k'] = 500;\n  t['l'] = 222;\n  t['m'] = 833;\n  t['n'] = 556;\n  t['o'] = 556;\n  t['p'] = 556;\n  t['q'] = 556;\n  t['r'] = 333;\n  t['s'] = 500;\n  t['t'] = 278;\n  t['u'] = 556;\n  t['v'] = 500;\n  t['w'] = 722;\n  t['x'] = 500;\n  t['y'] = 500;\n  t['z'] = 500;\n  t['braceleft'] = 334;\n  t['bar'] = 260;\n  t['braceright'] = 334;\n  t['asciitilde'] = 584;\n  t['exclamdown'] = 333;\n  t['cent'] = 556;\n  t['sterling'] = 556;\n  t['fraction'] = 167;\n  t['yen'] = 556;\n  t['florin'] = 556;\n  t['section'] = 556;\n  t['currency'] = 556;\n  t['quotesingle'] = 191;\n  t['quotedblleft'] = 333;\n  t['guillemotleft'] = 556;\n  t['guilsinglleft'] = 333;\n  t['guilsinglright'] = 333;\n  t['fi'] = 500;\n  t['fl'] = 500;\n  t['endash'] = 556;\n  t['dagger'] = 556;\n  t['daggerdbl'] = 556;\n  t['periodcentered'] = 278;\n  t['paragraph'] = 537;\n  t['bullet'] = 350;\n  t['quotesinglbase'] = 222;\n  t['quotedblbase'] = 333;\n  t['quotedblright'] = 333;\n  t['guillemotright'] = 556;\n  t['ellipsis'] = 1000;\n  t['perthousand'] = 1000;\n  t['questiondown'] = 611;\n  t['grave'] = 333;\n  t['acute'] = 333;\n  t['circumflex'] = 333;\n  t['tilde'] = 333;\n  t['macron'] = 333;\n  t['breve'] = 333;\n  t['dotaccent'] = 333;\n  t['dieresis'] = 333;\n  t['ring'] = 333;\n  t['cedilla'] = 333;\n  t['hungarumlaut'] = 333;\n  t['ogonek'] = 333;\n  t['caron'] = 333;\n  t['emdash'] = 1000;\n  t['AE'] = 1000;\n  t['ordfeminine'] = 370;\n  t['Lslash'] = 556;\n  t['Oslash'] = 778;\n  t['OE'] = 1000;\n  t['ordmasculine'] = 365;\n  t['ae'] = 889;\n  t['dotlessi'] = 278;\n  t['lslash'] = 222;\n  t['oslash'] = 611;\n  t['oe'] = 944;\n  t['germandbls'] = 611;\n  t['Idieresis'] = 278;\n  t['eacute'] = 556;\n  t['abreve'] = 556;\n  t['uhungarumlaut'] = 556;\n  t['ecaron'] = 556;\n  t['Ydieresis'] = 667;\n  t['divide'] = 584;\n  t['Yacute'] = 667;\n  t['Acircumflex'] = 667;\n  t['aacute'] = 556;\n  t['Ucircumflex'] = 722;\n  t['yacute'] = 500;\n  t['scommaaccent'] = 500;\n  t['ecircumflex'] = 556;\n  t['Uring'] = 722;\n  t['Udieresis'] = 722;\n  t['aogonek'] = 556;\n  t['Uacute'] = 722;\n  t['uogonek'] = 556;\n  t['Edieresis'] = 667;\n  t['Dcroat'] = 722;\n  t['commaaccent'] = 250;\n  t['copyright'] = 737;\n  t['Emacron'] = 667;\n  t['ccaron'] = 500;\n  t['aring'] = 556;\n  t['Ncommaaccent'] = 722;\n  t['lacute'] = 222;\n  t['agrave'] = 556;\n  t['Tcommaaccent'] = 611;\n  t['Cacute'] = 722;\n  t['atilde'] = 556;\n  t['Edotaccent'] = 667;\n  t['scaron'] = 500;\n  t['scedilla'] = 500;\n  t['iacute'] = 278;\n  t['lozenge'] = 471;\n  t['Rcaron'] = 722;\n  t['Gcommaaccent'] = 778;\n  t['ucircumflex'] = 556;\n  t['acircumflex'] = 556;\n  t['Amacron'] = 667;\n  t['rcaron'] = 333;\n  t['ccedilla'] = 500;\n  t['Zdotaccent'] = 611;\n  t['Thorn'] = 667;\n  t['Omacron'] = 778;\n  t['Racute'] = 722;\n  t['Sacute'] = 667;\n  t['dcaron'] = 643;\n  t['Umacron'] = 722;\n  t['uring'] = 556;\n  t['threesuperior'] = 333;\n  t['Ograve'] = 778;\n  t['Agrave'] = 667;\n  t['Abreve'] = 667;\n  t['multiply'] = 584;\n  t['uacute'] = 556;\n  t['Tcaron'] = 611;\n  t['partialdiff'] = 476;\n  t['ydieresis'] = 500;\n  t['Nacute'] = 722;\n  t['icircumflex'] = 278;\n  t['Ecircumflex'] = 667;\n  t['adieresis'] = 556;\n  t['edieresis'] = 556;\n  t['cacute'] = 500;\n  t['nacute'] = 556;\n  t['umacron'] = 556;\n  t['Ncaron'] = 722;\n  t['Iacute'] = 278;\n  t['plusminus'] = 584;\n  t['brokenbar'] = 260;\n  t['registered'] = 737;\n  t['Gbreve'] = 778;\n  t['Idotaccent'] = 278;\n  t['summation'] = 600;\n  t['Egrave'] = 667;\n  t['racute'] = 333;\n  t['omacron'] = 556;\n  t['Zacute'] = 611;\n  t['Zcaron'] = 611;\n  t['greaterequal'] = 549;\n  t['Eth'] = 722;\n  t['Ccedilla'] = 722;\n  t['lcommaaccent'] = 222;\n  t['tcaron'] = 317;\n  t['eogonek'] = 556;\n  t['Uogonek'] = 722;\n  t['Aacute'] = 667;\n  t['Adieresis'] = 667;\n  t['egrave'] = 556;\n  t['zacute'] = 500;\n  t['iogonek'] = 222;\n  t['Oacute'] = 778;\n  t['oacute'] = 556;\n  t['amacron'] = 556;\n  t['sacute'] = 500;\n  t['idieresis'] = 278;\n  t['Ocircumflex'] = 778;\n  t['Ugrave'] = 722;\n  t['Delta'] = 612;\n  t['thorn'] = 556;\n  t['twosuperior'] = 333;\n  t['Odieresis'] = 778;\n  t['mu'] = 556;\n  t['igrave'] = 278;\n  t['ohungarumlaut'] = 556;\n  t['Eogonek'] = 667;\n  t['dcroat'] = 556;\n  t['threequarters'] = 834;\n  t['Scedilla'] = 667;\n  t['lcaron'] = 299;\n  t['Kcommaaccent'] = 667;\n  t['Lacute'] = 556;\n  t['trademark'] = 1000;\n  t['edotaccent'] = 556;\n  t['Igrave'] = 278;\n  t['Imacron'] = 278;\n  t['Lcaron'] = 556;\n  t['onehalf'] = 834;\n  t['lessequal'] = 549;\n  t['ocircumflex'] = 556;\n  t['ntilde'] = 556;\n  t['Uhungarumlaut'] = 722;\n  t['Eacute'] = 667;\n  t['emacron'] = 556;\n  t['gbreve'] = 556;\n  t['onequarter'] = 834;\n  t['Scaron'] = 667;\n  t['Scommaaccent'] = 667;\n  t['Ohungarumlaut'] = 778;\n  t['degree'] = 400;\n  t['ograve'] = 556;\n  t['Ccaron'] = 722;\n  t['ugrave'] = 556;\n  t['radical'] = 453;\n  t['Dcaron'] = 722;\n  t['rcommaaccent'] = 333;\n  t['Ntilde'] = 722;\n  t['otilde'] = 556;\n  t['Rcommaaccent'] = 722;\n  t['Lcommaaccent'] = 556;\n  t['Atilde'] = 667;\n  t['Aogonek'] = 667;\n  t['Aring'] = 667;\n  t['Otilde'] = 778;\n  t['zdotaccent'] = 500;\n  t['Ecaron'] = 667;\n  t['Iogonek'] = 278;\n  t['kcommaaccent'] = 500;\n  t['minus'] = 584;\n  t['Icircumflex'] = 278;\n  t['ncaron'] = 556;\n  t['tcommaaccent'] = 278;\n  t['logicalnot'] = 584;\n  t['odieresis'] = 556;\n  t['udieresis'] = 556;\n  t['notequal'] = 549;\n  t['gcommaaccent'] = 556;\n  t['eth'] = 556;\n  t['zcaron'] = 500;\n  t['ncommaaccent'] = 556;\n  t['onesuperior'] = 333;\n  t['imacron'] = 278;\n  t['Euro'] = 556;\n });\n t['Helvetica-Bold'] = getLookupTableFactory(function (t) {\n  t['space'] = 278;\n  t['exclam'] = 333;\n  t['quotedbl'] = 474;\n  t['numbersign'] = 556;\n  t['dollar'] = 556;\n  t['percent'] = 889;\n  t['ampersand'] = 722;\n  t['quoteright'] = 278;\n  t['parenleft'] = 333;\n  t['parenright'] = 333;\n  t['asterisk'] = 389;\n  t['plus'] = 584;\n  t['comma'] = 278;\n  t['hyphen'] = 333;\n  t['period'] = 278;\n  t['slash'] = 278;\n  t['zero'] = 556;\n  t['one'] = 556;\n  t['two'] = 556;\n  t['three'] = 556;\n  t['four'] = 556;\n  t['five'] = 556;\n  t['six'] = 556;\n  t['seven'] = 556;\n  t['eight'] = 556;\n  t['nine'] = 556;\n  t['colon'] = 333;\n  t['semicolon'] = 333;\n  t['less'] = 584;\n  t['equal'] = 584;\n  t['greater'] = 584;\n  t['question'] = 611;\n  t['at'] = 975;\n  t['A'] = 722;\n  t['B'] = 722;\n  t['C'] = 722;\n  t['D'] = 722;\n  t['E'] = 667;\n  t['F'] = 611;\n  t['G'] = 778;\n  t['H'] = 722;\n  t['I'] = 278;\n  t['J'] = 556;\n  t['K'] = 722;\n  t['L'] = 611;\n  t['M'] = 833;\n  t['N'] = 722;\n  t['O'] = 778;\n  t['P'] = 667;\n  t['Q'] = 778;\n  t['R'] = 722;\n  t['S'] = 667;\n  t['T'] = 611;\n  t['U'] = 722;\n  t['V'] = 667;\n  t['W'] = 944;\n  t['X'] = 667;\n  t['Y'] = 667;\n  t['Z'] = 611;\n  t['bracketleft'] = 333;\n  t['backslash'] = 278;\n  t['bracketright'] = 333;\n  t['asciicircum'] = 584;\n  t['underscore'] = 556;\n  t['quoteleft'] = 278;\n  t['a'] = 556;\n  t['b'] = 611;\n  t['c'] = 556;\n  t['d'] = 611;\n  t['e'] = 556;\n  t['f'] = 333;\n  t['g'] = 611;\n  t['h'] = 611;\n  t['i'] = 278;\n  t['j'] = 278;\n  t['k'] = 556;\n  t['l'] = 278;\n  t['m'] = 889;\n  t['n'] = 611;\n  t['o'] = 611;\n  t['p'] = 611;\n  t['q'] = 611;\n  t['r'] = 389;\n  t['s'] = 556;\n  t['t'] = 333;\n  t['u'] = 611;\n  t['v'] = 556;\n  t['w'] = 778;\n  t['x'] = 556;\n  t['y'] = 556;\n  t['z'] = 500;\n  t['braceleft'] = 389;\n  t['bar'] = 280;\n  t['braceright'] = 389;\n  t['asciitilde'] = 584;\n  t['exclamdown'] = 333;\n  t['cent'] = 556;\n  t['sterling'] = 556;\n  t['fraction'] = 167;\n  t['yen'] = 556;\n  t['florin'] = 556;\n  t['section'] = 556;\n  t['currency'] = 556;\n  t['quotesingle'] = 238;\n  t['quotedblleft'] = 500;\n  t['guillemotleft'] = 556;\n  t['guilsinglleft'] = 333;\n  t['guilsinglright'] = 333;\n  t['fi'] = 611;\n  t['fl'] = 611;\n  t['endash'] = 556;\n  t['dagger'] = 556;\n  t['daggerdbl'] = 556;\n  t['periodcentered'] = 278;\n  t['paragraph'] = 556;\n  t['bullet'] = 350;\n  t['quotesinglbase'] = 278;\n  t['quotedblbase'] = 500;\n  t['quotedblright'] = 500;\n  t['guillemotright'] = 556;\n  t['ellipsis'] = 1000;\n  t['perthousand'] = 1000;\n  t['questiondown'] = 611;\n  t['grave'] = 333;\n  t['acute'] = 333;\n  t['circumflex'] = 333;\n  t['tilde'] = 333;\n  t['macron'] = 333;\n  t['breve'] = 333;\n  t['dotaccent'] = 333;\n  t['dieresis'] = 333;\n  t['ring'] = 333;\n  t['cedilla'] = 333;\n  t['hungarumlaut'] = 333;\n  t['ogonek'] = 333;\n  t['caron'] = 333;\n  t['emdash'] = 1000;\n  t['AE'] = 1000;\n  t['ordfeminine'] = 370;\n  t['Lslash'] = 611;\n  t['Oslash'] = 778;\n  t['OE'] = 1000;\n  t['ordmasculine'] = 365;\n  t['ae'] = 889;\n  t['dotlessi'] = 278;\n  t['lslash'] = 278;\n  t['oslash'] = 611;\n  t['oe'] = 944;\n  t['germandbls'] = 611;\n  t['Idieresis'] = 278;\n  t['eacute'] = 556;\n  t['abreve'] = 556;\n  t['uhungarumlaut'] = 611;\n  t['ecaron'] = 556;\n  t['Ydieresis'] = 667;\n  t['divide'] = 584;\n  t['Yacute'] = 667;\n  t['Acircumflex'] = 722;\n  t['aacute'] = 556;\n  t['Ucircumflex'] = 722;\n  t['yacute'] = 556;\n  t['scommaaccent'] = 556;\n  t['ecircumflex'] = 556;\n  t['Uring'] = 722;\n  t['Udieresis'] = 722;\n  t['aogonek'] = 556;\n  t['Uacute'] = 722;\n  t['uogonek'] = 611;\n  t['Edieresis'] = 667;\n  t['Dcroat'] = 722;\n  t['commaaccent'] = 250;\n  t['copyright'] = 737;\n  t['Emacron'] = 667;\n  t['ccaron'] = 556;\n  t['aring'] = 556;\n  t['Ncommaaccent'] = 722;\n  t['lacute'] = 278;\n  t['agrave'] = 556;\n  t['Tcommaaccent'] = 611;\n  t['Cacute'] = 722;\n  t['atilde'] = 556;\n  t['Edotaccent'] = 667;\n  t['scaron'] = 556;\n  t['scedilla'] = 556;\n  t['iacute'] = 278;\n  t['lozenge'] = 494;\n  t['Rcaron'] = 722;\n  t['Gcommaaccent'] = 778;\n  t['ucircumflex'] = 611;\n  t['acircumflex'] = 556;\n  t['Amacron'] = 722;\n  t['rcaron'] = 389;\n  t['ccedilla'] = 556;\n  t['Zdotaccent'] = 611;\n  t['Thorn'] = 667;\n  t['Omacron'] = 778;\n  t['Racute'] = 722;\n  t['Sacute'] = 667;\n  t['dcaron'] = 743;\n  t['Umacron'] = 722;\n  t['uring'] = 611;\n  t['threesuperior'] = 333;\n  t['Ograve'] = 778;\n  t['Agrave'] = 722;\n  t['Abreve'] = 722;\n  t['multiply'] = 584;\n  t['uacute'] = 611;\n  t['Tcaron'] = 611;\n  t['partialdiff'] = 494;\n  t['ydieresis'] = 556;\n  t['Nacute'] = 722;\n  t['icircumflex'] = 278;\n  t['Ecircumflex'] = 667;\n  t['adieresis'] = 556;\n  t['edieresis'] = 556;\n  t['cacute'] = 556;\n  t['nacute'] = 611;\n  t['umacron'] = 611;\n  t['Ncaron'] = 722;\n  t['Iacute'] = 278;\n  t['plusminus'] = 584;\n  t['brokenbar'] = 280;\n  t['registered'] = 737;\n  t['Gbreve'] = 778;\n  t['Idotaccent'] = 278;\n  t['summation'] = 600;\n  t['Egrave'] = 667;\n  t['racute'] = 389;\n  t['omacron'] = 611;\n  t['Zacute'] = 611;\n  t['Zcaron'] = 611;\n  t['greaterequal'] = 549;\n  t['Eth'] = 722;\n  t['Ccedilla'] = 722;\n  t['lcommaaccent'] = 278;\n  t['tcaron'] = 389;\n  t['eogonek'] = 556;\n  t['Uogonek'] = 722;\n  t['Aacute'] = 722;\n  t['Adieresis'] = 722;\n  t['egrave'] = 556;\n  t['zacute'] = 500;\n  t['iogonek'] = 278;\n  t['Oacute'] = 778;\n  t['oacute'] = 611;\n  t['amacron'] = 556;\n  t['sacute'] = 556;\n  t['idieresis'] = 278;\n  t['Ocircumflex'] = 778;\n  t['Ugrave'] = 722;\n  t['Delta'] = 612;\n  t['thorn'] = 611;\n  t['twosuperior'] = 333;\n  t['Odieresis'] = 778;\n  t['mu'] = 611;\n  t['igrave'] = 278;\n  t['ohungarumlaut'] = 611;\n  t['Eogonek'] = 667;\n  t['dcroat'] = 611;\n  t['threequarters'] = 834;\n  t['Scedilla'] = 667;\n  t['lcaron'] = 400;\n  t['Kcommaaccent'] = 722;\n  t['Lacute'] = 611;\n  t['trademark'] = 1000;\n  t['edotaccent'] = 556;\n  t['Igrave'] = 278;\n  t['Imacron'] = 278;\n  t['Lcaron'] = 611;\n  t['onehalf'] = 834;\n  t['lessequal'] = 549;\n  t['ocircumflex'] = 611;\n  t['ntilde'] = 611;\n  t['Uhungarumlaut'] = 722;\n  t['Eacute'] = 667;\n  t['emacron'] = 556;\n  t['gbreve'] = 611;\n  t['onequarter'] = 834;\n  t['Scaron'] = 667;\n  t['Scommaaccent'] = 667;\n  t['Ohungarumlaut'] = 778;\n  t['degree'] = 400;\n  t['ograve'] = 611;\n  t['Ccaron'] = 722;\n  t['ugrave'] = 611;\n  t['radical'] = 549;\n  t['Dcaron'] = 722;\n  t['rcommaaccent'] = 389;\n  t['Ntilde'] = 722;\n  t['otilde'] = 611;\n  t['Rcommaaccent'] = 722;\n  t['Lcommaaccent'] = 611;\n  t['Atilde'] = 722;\n  t['Aogonek'] = 722;\n  t['Aring'] = 722;\n  t['Otilde'] = 778;\n  t['zdotaccent'] = 500;\n  t['Ecaron'] = 667;\n  t['Iogonek'] = 278;\n  t['kcommaaccent'] = 556;\n  t['minus'] = 584;\n  t['Icircumflex'] = 278;\n  t['ncaron'] = 611;\n  t['tcommaaccent'] = 333;\n  t['logicalnot'] = 584;\n  t['odieresis'] = 611;\n  t['udieresis'] = 611;\n  t['notequal'] = 549;\n  t['gcommaaccent'] = 611;\n  t['eth'] = 611;\n  t['zcaron'] = 500;\n  t['ncommaaccent'] = 611;\n  t['onesuperior'] = 333;\n  t['imacron'] = 278;\n  t['Euro'] = 556;\n });\n t['Helvetica-BoldOblique'] = getLookupTableFactory(function (t) {\n  t['space'] = 278;\n  t['exclam'] = 333;\n  t['quotedbl'] = 474;\n  t['numbersign'] = 556;\n  t['dollar'] = 556;\n  t['percent'] = 889;\n  t['ampersand'] = 722;\n  t['quoteright'] = 278;\n  t['parenleft'] = 333;\n  t['parenright'] = 333;\n  t['asterisk'] = 389;\n  t['plus'] = 584;\n  t['comma'] = 278;\n  t['hyphen'] = 333;\n  t['period'] = 278;\n  t['slash'] = 278;\n  t['zero'] = 556;\n  t['one'] = 556;\n  t['two'] = 556;\n  t['three'] = 556;\n  t['four'] = 556;\n  t['five'] = 556;\n  t['six'] = 556;\n  t['seven'] = 556;\n  t['eight'] = 556;\n  t['nine'] = 556;\n  t['colon'] = 333;\n  t['semicolon'] = 333;\n  t['less'] = 584;\n  t['equal'] = 584;\n  t['greater'] = 584;\n  t['question'] = 611;\n  t['at'] = 975;\n  t['A'] = 722;\n  t['B'] = 722;\n  t['C'] = 722;\n  t['D'] = 722;\n  t['E'] = 667;\n  t['F'] = 611;\n  t['G'] = 778;\n  t['H'] = 722;\n  t['I'] = 278;\n  t['J'] = 556;\n  t['K'] = 722;\n  t['L'] = 611;\n  t['M'] = 833;\n  t['N'] = 722;\n  t['O'] = 778;\n  t['P'] = 667;\n  t['Q'] = 778;\n  t['R'] = 722;\n  t['S'] = 667;\n  t['T'] = 611;\n  t['U'] = 722;\n  t['V'] = 667;\n  t['W'] = 944;\n  t['X'] = 667;\n  t['Y'] = 667;\n  t['Z'] = 611;\n  t['bracketleft'] = 333;\n  t['backslash'] = 278;\n  t['bracketright'] = 333;\n  t['asciicircum'] = 584;\n  t['underscore'] = 556;\n  t['quoteleft'] = 278;\n  t['a'] = 556;\n  t['b'] = 611;\n  t['c'] = 556;\n  t['d'] = 611;\n  t['e'] = 556;\n  t['f'] = 333;\n  t['g'] = 611;\n  t['h'] = 611;\n  t['i'] = 278;\n  t['j'] = 278;\n  t['k'] = 556;\n  t['l'] = 278;\n  t['m'] = 889;\n  t['n'] = 611;\n  t['o'] = 611;\n  t['p'] = 611;\n  t['q'] = 611;\n  t['r'] = 389;\n  t['s'] = 556;\n  t['t'] = 333;\n  t['u'] = 611;\n  t['v'] = 556;\n  t['w'] = 778;\n  t['x'] = 556;\n  t['y'] = 556;\n  t['z'] = 500;\n  t['braceleft'] = 389;\n  t['bar'] = 280;\n  t['braceright'] = 389;\n  t['asciitilde'] = 584;\n  t['exclamdown'] = 333;\n  t['cent'] = 556;\n  t['sterling'] = 556;\n  t['fraction'] = 167;\n  t['yen'] = 556;\n  t['florin'] = 556;\n  t['section'] = 556;\n  t['currency'] = 556;\n  t['quotesingle'] = 238;\n  t['quotedblleft'] = 500;\n  t['guillemotleft'] = 556;\n  t['guilsinglleft'] = 333;\n  t['guilsinglright'] = 333;\n  t['fi'] = 611;\n  t['fl'] = 611;\n  t['endash'] = 556;\n  t['dagger'] = 556;\n  t['daggerdbl'] = 556;\n  t['periodcentered'] = 278;\n  t['paragraph'] = 556;\n  t['bullet'] = 350;\n  t['quotesinglbase'] = 278;\n  t['quotedblbase'] = 500;\n  t['quotedblright'] = 500;\n  t['guillemotright'] = 556;\n  t['ellipsis'] = 1000;\n  t['perthousand'] = 1000;\n  t['questiondown'] = 611;\n  t['grave'] = 333;\n  t['acute'] = 333;\n  t['circumflex'] = 333;\n  t['tilde'] = 333;\n  t['macron'] = 333;\n  t['breve'] = 333;\n  t['dotaccent'] = 333;\n  t['dieresis'] = 333;\n  t['ring'] = 333;\n  t['cedilla'] = 333;\n  t['hungarumlaut'] = 333;\n  t['ogonek'] = 333;\n  t['caron'] = 333;\n  t['emdash'] = 1000;\n  t['AE'] = 1000;\n  t['ordfeminine'] = 370;\n  t['Lslash'] = 611;\n  t['Oslash'] = 778;\n  t['OE'] = 1000;\n  t['ordmasculine'] = 365;\n  t['ae'] = 889;\n  t['dotlessi'] = 278;\n  t['lslash'] = 278;\n  t['oslash'] = 611;\n  t['oe'] = 944;\n  t['germandbls'] = 611;\n  t['Idieresis'] = 278;\n  t['eacute'] = 556;\n  t['abreve'] = 556;\n  t['uhungarumlaut'] = 611;\n  t['ecaron'] = 556;\n  t['Ydieresis'] = 667;\n  t['divide'] = 584;\n  t['Yacute'] = 667;\n  t['Acircumflex'] = 722;\n  t['aacute'] = 556;\n  t['Ucircumflex'] = 722;\n  t['yacute'] = 556;\n  t['scommaaccent'] = 556;\n  t['ecircumflex'] = 556;\n  t['Uring'] = 722;\n  t['Udieresis'] = 722;\n  t['aogonek'] = 556;\n  t['Uacute'] = 722;\n  t['uogonek'] = 611;\n  t['Edieresis'] = 667;\n  t['Dcroat'] = 722;\n  t['commaaccent'] = 250;\n  t['copyright'] = 737;\n  t['Emacron'] = 667;\n  t['ccaron'] = 556;\n  t['aring'] = 556;\n  t['Ncommaaccent'] = 722;\n  t['lacute'] = 278;\n  t['agrave'] = 556;\n  t['Tcommaaccent'] = 611;\n  t['Cacute'] = 722;\n  t['atilde'] = 556;\n  t['Edotaccent'] = 667;\n  t['scaron'] = 556;\n  t['scedilla'] = 556;\n  t['iacute'] = 278;\n  t['lozenge'] = 494;\n  t['Rcaron'] = 722;\n  t['Gcommaaccent'] = 778;\n  t['ucircumflex'] = 611;\n  t['acircumflex'] = 556;\n  t['Amacron'] = 722;\n  t['rcaron'] = 389;\n  t['ccedilla'] = 556;\n  t['Zdotaccent'] = 611;\n  t['Thorn'] = 667;\n  t['Omacron'] = 778;\n  t['Racute'] = 722;\n  t['Sacute'] = 667;\n  t['dcaron'] = 743;\n  t['Umacron'] = 722;\n  t['uring'] = 611;\n  t['threesuperior'] = 333;\n  t['Ograve'] = 778;\n  t['Agrave'] = 722;\n  t['Abreve'] = 722;\n  t['multiply'] = 584;\n  t['uacute'] = 611;\n  t['Tcaron'] = 611;\n  t['partialdiff'] = 494;\n  t['ydieresis'] = 556;\n  t['Nacute'] = 722;\n  t['icircumflex'] = 278;\n  t['Ecircumflex'] = 667;\n  t['adieresis'] = 556;\n  t['edieresis'] = 556;\n  t['cacute'] = 556;\n  t['nacute'] = 611;\n  t['umacron'] = 611;\n  t['Ncaron'] = 722;\n  t['Iacute'] = 278;\n  t['plusminus'] = 584;\n  t['brokenbar'] = 280;\n  t['registered'] = 737;\n  t['Gbreve'] = 778;\n  t['Idotaccent'] = 278;\n  t['summation'] = 600;\n  t['Egrave'] = 667;\n  t['racute'] = 389;\n  t['omacron'] = 611;\n  t['Zacute'] = 611;\n  t['Zcaron'] = 611;\n  t['greaterequal'] = 549;\n  t['Eth'] = 722;\n  t['Ccedilla'] = 722;\n  t['lcommaaccent'] = 278;\n  t['tcaron'] = 389;\n  t['eogonek'] = 556;\n  t['Uogonek'] = 722;\n  t['Aacute'] = 722;\n  t['Adieresis'] = 722;\n  t['egrave'] = 556;\n  t['zacute'] = 500;\n  t['iogonek'] = 278;\n  t['Oacute'] = 778;\n  t['oacute'] = 611;\n  t['amacron'] = 556;\n  t['sacute'] = 556;\n  t['idieresis'] = 278;\n  t['Ocircumflex'] = 778;\n  t['Ugrave'] = 722;\n  t['Delta'] = 612;\n  t['thorn'] = 611;\n  t['twosuperior'] = 333;\n  t['Odieresis'] = 778;\n  t['mu'] = 611;\n  t['igrave'] = 278;\n  t['ohungarumlaut'] = 611;\n  t['Eogonek'] = 667;\n  t['dcroat'] = 611;\n  t['threequarters'] = 834;\n  t['Scedilla'] = 667;\n  t['lcaron'] = 400;\n  t['Kcommaaccent'] = 722;\n  t['Lacute'] = 611;\n  t['trademark'] = 1000;\n  t['edotaccent'] = 556;\n  t['Igrave'] = 278;\n  t['Imacron'] = 278;\n  t['Lcaron'] = 611;\n  t['onehalf'] = 834;\n  t['lessequal'] = 549;\n  t['ocircumflex'] = 611;\n  t['ntilde'] = 611;\n  t['Uhungarumlaut'] = 722;\n  t['Eacute'] = 667;\n  t['emacron'] = 556;\n  t['gbreve'] = 611;\n  t['onequarter'] = 834;\n  t['Scaron'] = 667;\n  t['Scommaaccent'] = 667;\n  t['Ohungarumlaut'] = 778;\n  t['degree'] = 400;\n  t['ograve'] = 611;\n  t['Ccaron'] = 722;\n  t['ugrave'] = 611;\n  t['radical'] = 549;\n  t['Dcaron'] = 722;\n  t['rcommaaccent'] = 389;\n  t['Ntilde'] = 722;\n  t['otilde'] = 611;\n  t['Rcommaaccent'] = 722;\n  t['Lcommaaccent'] = 611;\n  t['Atilde'] = 722;\n  t['Aogonek'] = 722;\n  t['Aring'] = 722;\n  t['Otilde'] = 778;\n  t['zdotaccent'] = 500;\n  t['Ecaron'] = 667;\n  t['Iogonek'] = 278;\n  t['kcommaaccent'] = 556;\n  t['minus'] = 584;\n  t['Icircumflex'] = 278;\n  t['ncaron'] = 611;\n  t['tcommaaccent'] = 333;\n  t['logicalnot'] = 584;\n  t['odieresis'] = 611;\n  t['udieresis'] = 611;\n  t['notequal'] = 549;\n  t['gcommaaccent'] = 611;\n  t['eth'] = 611;\n  t['zcaron'] = 500;\n  t['ncommaaccent'] = 611;\n  t['onesuperior'] = 333;\n  t['imacron'] = 278;\n  t['Euro'] = 556;\n });\n t['Helvetica-Oblique'] = getLookupTableFactory(function (t) {\n  t['space'] = 278;\n  t['exclam'] = 278;\n  t['quotedbl'] = 355;\n  t['numbersign'] = 556;\n  t['dollar'] = 556;\n  t['percent'] = 889;\n  t['ampersand'] = 667;\n  t['quoteright'] = 222;\n  t['parenleft'] = 333;\n  t['parenright'] = 333;\n  t['asterisk'] = 389;\n  t['plus'] = 584;\n  t['comma'] = 278;\n  t['hyphen'] = 333;\n  t['period'] = 278;\n  t['slash'] = 278;\n  t['zero'] = 556;\n  t['one'] = 556;\n  t['two'] = 556;\n  t['three'] = 556;\n  t['four'] = 556;\n  t['five'] = 556;\n  t['six'] = 556;\n  t['seven'] = 556;\n  t['eight'] = 556;\n  t['nine'] = 556;\n  t['colon'] = 278;\n  t['semicolon'] = 278;\n  t['less'] = 584;\n  t['equal'] = 584;\n  t['greater'] = 584;\n  t['question'] = 556;\n  t['at'] = 1015;\n  t['A'] = 667;\n  t['B'] = 667;\n  t['C'] = 722;\n  t['D'] = 722;\n  t['E'] = 667;\n  t['F'] = 611;\n  t['G'] = 778;\n  t['H'] = 722;\n  t['I'] = 278;\n  t['J'] = 500;\n  t['K'] = 667;\n  t['L'] = 556;\n  t['M'] = 833;\n  t['N'] = 722;\n  t['O'] = 778;\n  t['P'] = 667;\n  t['Q'] = 778;\n  t['R'] = 722;\n  t['S'] = 667;\n  t['T'] = 611;\n  t['U'] = 722;\n  t['V'] = 667;\n  t['W'] = 944;\n  t['X'] = 667;\n  t['Y'] = 667;\n  t['Z'] = 611;\n  t['bracketleft'] = 278;\n  t['backslash'] = 278;\n  t['bracketright'] = 278;\n  t['asciicircum'] = 469;\n  t['underscore'] = 556;\n  t['quoteleft'] = 222;\n  t['a'] = 556;\n  t['b'] = 556;\n  t['c'] = 500;\n  t['d'] = 556;\n  t['e'] = 556;\n  t['f'] = 278;\n  t['g'] = 556;\n  t['h'] = 556;\n  t['i'] = 222;\n  t['j'] = 222;\n  t['k'] = 500;\n  t['l'] = 222;\n  t['m'] = 833;\n  t['n'] = 556;\n  t['o'] = 556;\n  t['p'] = 556;\n  t['q'] = 556;\n  t['r'] = 333;\n  t['s'] = 500;\n  t['t'] = 278;\n  t['u'] = 556;\n  t['v'] = 500;\n  t['w'] = 722;\n  t['x'] = 500;\n  t['y'] = 500;\n  t['z'] = 500;\n  t['braceleft'] = 334;\n  t['bar'] = 260;\n  t['braceright'] = 334;\n  t['asciitilde'] = 584;\n  t['exclamdown'] = 333;\n  t['cent'] = 556;\n  t['sterling'] = 556;\n  t['fraction'] = 167;\n  t['yen'] = 556;\n  t['florin'] = 556;\n  t['section'] = 556;\n  t['currency'] = 556;\n  t['quotesingle'] = 191;\n  t['quotedblleft'] = 333;\n  t['guillemotleft'] = 556;\n  t['guilsinglleft'] = 333;\n  t['guilsinglright'] = 333;\n  t['fi'] = 500;\n  t['fl'] = 500;\n  t['endash'] = 556;\n  t['dagger'] = 556;\n  t['daggerdbl'] = 556;\n  t['periodcentered'] = 278;\n  t['paragraph'] = 537;\n  t['bullet'] = 350;\n  t['quotesinglbase'] = 222;\n  t['quotedblbase'] = 333;\n  t['quotedblright'] = 333;\n  t['guillemotright'] = 556;\n  t['ellipsis'] = 1000;\n  t['perthousand'] = 1000;\n  t['questiondown'] = 611;\n  t['grave'] = 333;\n  t['acute'] = 333;\n  t['circumflex'] = 333;\n  t['tilde'] = 333;\n  t['macron'] = 333;\n  t['breve'] = 333;\n  t['dotaccent'] = 333;\n  t['dieresis'] = 333;\n  t['ring'] = 333;\n  t['cedilla'] = 333;\n  t['hungarumlaut'] = 333;\n  t['ogonek'] = 333;\n  t['caron'] = 333;\n  t['emdash'] = 1000;\n  t['AE'] = 1000;\n  t['ordfeminine'] = 370;\n  t['Lslash'] = 556;\n  t['Oslash'] = 778;\n  t['OE'] = 1000;\n  t['ordmasculine'] = 365;\n  t['ae'] = 889;\n  t['dotlessi'] = 278;\n  t['lslash'] = 222;\n  t['oslash'] = 611;\n  t['oe'] = 944;\n  t['germandbls'] = 611;\n  t['Idieresis'] = 278;\n  t['eacute'] = 556;\n  t['abreve'] = 556;\n  t['uhungarumlaut'] = 556;\n  t['ecaron'] = 556;\n  t['Ydieresis'] = 667;\n  t['divide'] = 584;\n  t['Yacute'] = 667;\n  t['Acircumflex'] = 667;\n  t['aacute'] = 556;\n  t['Ucircumflex'] = 722;\n  t['yacute'] = 500;\n  t['scommaaccent'] = 500;\n  t['ecircumflex'] = 556;\n  t['Uring'] = 722;\n  t['Udieresis'] = 722;\n  t['aogonek'] = 556;\n  t['Uacute'] = 722;\n  t['uogonek'] = 556;\n  t['Edieresis'] = 667;\n  t['Dcroat'] = 722;\n  t['commaaccent'] = 250;\n  t['copyright'] = 737;\n  t['Emacron'] = 667;\n  t['ccaron'] = 500;\n  t['aring'] = 556;\n  t['Ncommaaccent'] = 722;\n  t['lacute'] = 222;\n  t['agrave'] = 556;\n  t['Tcommaaccent'] = 611;\n  t['Cacute'] = 722;\n  t['atilde'] = 556;\n  t['Edotaccent'] = 667;\n  t['scaron'] = 500;\n  t['scedilla'] = 500;\n  t['iacute'] = 278;\n  t['lozenge'] = 471;\n  t['Rcaron'] = 722;\n  t['Gcommaaccent'] = 778;\n  t['ucircumflex'] = 556;\n  t['acircumflex'] = 556;\n  t['Amacron'] = 667;\n  t['rcaron'] = 333;\n  t['ccedilla'] = 500;\n  t['Zdotaccent'] = 611;\n  t['Thorn'] = 667;\n  t['Omacron'] = 778;\n  t['Racute'] = 722;\n  t['Sacute'] = 667;\n  t['dcaron'] = 643;\n  t['Umacron'] = 722;\n  t['uring'] = 556;\n  t['threesuperior'] = 333;\n  t['Ograve'] = 778;\n  t['Agrave'] = 667;\n  t['Abreve'] = 667;\n  t['multiply'] = 584;\n  t['uacute'] = 556;\n  t['Tcaron'] = 611;\n  t['partialdiff'] = 476;\n  t['ydieresis'] = 500;\n  t['Nacute'] = 722;\n  t['icircumflex'] = 278;\n  t['Ecircumflex'] = 667;\n  t['adieresis'] = 556;\n  t['edieresis'] = 556;\n  t['cacute'] = 500;\n  t['nacute'] = 556;\n  t['umacron'] = 556;\n  t['Ncaron'] = 722;\n  t['Iacute'] = 278;\n  t['plusminus'] = 584;\n  t['brokenbar'] = 260;\n  t['registered'] = 737;\n  t['Gbreve'] = 778;\n  t['Idotaccent'] = 278;\n  t['summation'] = 600;\n  t['Egrave'] = 667;\n  t['racute'] = 333;\n  t['omacron'] = 556;\n  t['Zacute'] = 611;\n  t['Zcaron'] = 611;\n  t['greaterequal'] = 549;\n  t['Eth'] = 722;\n  t['Ccedilla'] = 722;\n  t['lcommaaccent'] = 222;\n  t['tcaron'] = 317;\n  t['eogonek'] = 556;\n  t['Uogonek'] = 722;\n  t['Aacute'] = 667;\n  t['Adieresis'] = 667;\n  t['egrave'] = 556;\n  t['zacute'] = 500;\n  t['iogonek'] = 222;\n  t['Oacute'] = 778;\n  t['oacute'] = 556;\n  t['amacron'] = 556;\n  t['sacute'] = 500;\n  t['idieresis'] = 278;\n  t['Ocircumflex'] = 778;\n  t['Ugrave'] = 722;\n  t['Delta'] = 612;\n  t['thorn'] = 556;\n  t['twosuperior'] = 333;\n  t['Odieresis'] = 778;\n  t['mu'] = 556;\n  t['igrave'] = 278;\n  t['ohungarumlaut'] = 556;\n  t['Eogonek'] = 667;\n  t['dcroat'] = 556;\n  t['threequarters'] = 834;\n  t['Scedilla'] = 667;\n  t['lcaron'] = 299;\n  t['Kcommaaccent'] = 667;\n  t['Lacute'] = 556;\n  t['trademark'] = 1000;\n  t['edotaccent'] = 556;\n  t['Igrave'] = 278;\n  t['Imacron'] = 278;\n  t['Lcaron'] = 556;\n  t['onehalf'] = 834;\n  t['lessequal'] = 549;\n  t['ocircumflex'] = 556;\n  t['ntilde'] = 556;\n  t['Uhungarumlaut'] = 722;\n  t['Eacute'] = 667;\n  t['emacron'] = 556;\n  t['gbreve'] = 556;\n  t['onequarter'] = 834;\n  t['Scaron'] = 667;\n  t['Scommaaccent'] = 667;\n  t['Ohungarumlaut'] = 778;\n  t['degree'] = 400;\n  t['ograve'] = 556;\n  t['Ccaron'] = 722;\n  t['ugrave'] = 556;\n  t['radical'] = 453;\n  t['Dcaron'] = 722;\n  t['rcommaaccent'] = 333;\n  t['Ntilde'] = 722;\n  t['otilde'] = 556;\n  t['Rcommaaccent'] = 722;\n  t['Lcommaaccent'] = 556;\n  t['Atilde'] = 667;\n  t['Aogonek'] = 667;\n  t['Aring'] = 667;\n  t['Otilde'] = 778;\n  t['zdotaccent'] = 500;\n  t['Ecaron'] = 667;\n  t['Iogonek'] = 278;\n  t['kcommaaccent'] = 500;\n  t['minus'] = 584;\n  t['Icircumflex'] = 278;\n  t['ncaron'] = 556;\n  t['tcommaaccent'] = 278;\n  t['logicalnot'] = 584;\n  t['odieresis'] = 556;\n  t['udieresis'] = 556;\n  t['notequal'] = 549;\n  t['gcommaaccent'] = 556;\n  t['eth'] = 556;\n  t['zcaron'] = 500;\n  t['ncommaaccent'] = 556;\n  t['onesuperior'] = 333;\n  t['imacron'] = 278;\n  t['Euro'] = 556;\n });\n t['Symbol'] = getLookupTableFactory(function (t) {\n  t['space'] = 250;\n  t['exclam'] = 333;\n  t['universal'] = 713;\n  t['numbersign'] = 500;\n  t['existential'] = 549;\n  t['percent'] = 833;\n  t['ampersand'] = 778;\n  t['suchthat'] = 439;\n  t['parenleft'] = 333;\n  t['parenright'] = 333;\n  t['asteriskmath'] = 500;\n  t['plus'] = 549;\n  t['comma'] = 250;\n  t['minus'] = 549;\n  t['period'] = 250;\n  t['slash'] = 278;\n  t['zero'] = 500;\n  t['one'] = 500;\n  t['two'] = 500;\n  t['three'] = 500;\n  t['four'] = 500;\n  t['five'] = 500;\n  t['six'] = 500;\n  t['seven'] = 500;\n  t['eight'] = 500;\n  t['nine'] = 500;\n  t['colon'] = 278;\n  t['semicolon'] = 278;\n  t['less'] = 549;\n  t['equal'] = 549;\n  t['greater'] = 549;\n  t['question'] = 444;\n  t['congruent'] = 549;\n  t['Alpha'] = 722;\n  t['Beta'] = 667;\n  t['Chi'] = 722;\n  t['Delta'] = 612;\n  t['Epsilon'] = 611;\n  t['Phi'] = 763;\n  t['Gamma'] = 603;\n  t['Eta'] = 722;\n  t['Iota'] = 333;\n  t['theta1'] = 631;\n  t['Kappa'] = 722;\n  t['Lambda'] = 686;\n  t['Mu'] = 889;\n  t['Nu'] = 722;\n  t['Omicron'] = 722;\n  t['Pi'] = 768;\n  t['Theta'] = 741;\n  t['Rho'] = 556;\n  t['Sigma'] = 592;\n  t['Tau'] = 611;\n  t['Upsilon'] = 690;\n  t['sigma1'] = 439;\n  t['Omega'] = 768;\n  t['Xi'] = 645;\n  t['Psi'] = 795;\n  t['Zeta'] = 611;\n  t['bracketleft'] = 333;\n  t['therefore'] = 863;\n  t['bracketright'] = 333;\n  t['perpendicular'] = 658;\n  t['underscore'] = 500;\n  t['radicalex'] = 500;\n  t['alpha'] = 631;\n  t['beta'] = 549;\n  t['chi'] = 549;\n  t['delta'] = 494;\n  t['epsilon'] = 439;\n  t['phi'] = 521;\n  t['gamma'] = 411;\n  t['eta'] = 603;\n  t['iota'] = 329;\n  t['phi1'] = 603;\n  t['kappa'] = 549;\n  t['lambda'] = 549;\n  t['mu'] = 576;\n  t['nu'] = 521;\n  t['omicron'] = 549;\n  t['pi'] = 549;\n  t['theta'] = 521;\n  t['rho'] = 549;\n  t['sigma'] = 603;\n  t['tau'] = 439;\n  t['upsilon'] = 576;\n  t['omega1'] = 713;\n  t['omega'] = 686;\n  t['xi'] = 493;\n  t['psi'] = 686;\n  t['zeta'] = 494;\n  t['braceleft'] = 480;\n  t['bar'] = 200;\n  t['braceright'] = 480;\n  t['similar'] = 549;\n  t['Euro'] = 750;\n  t['Upsilon1'] = 620;\n  t['minute'] = 247;\n  t['lessequal'] = 549;\n  t['fraction'] = 167;\n  t['infinity'] = 713;\n  t['florin'] = 500;\n  t['club'] = 753;\n  t['diamond'] = 753;\n  t['heart'] = 753;\n  t['spade'] = 753;\n  t['arrowboth'] = 1042;\n  t['arrowleft'] = 987;\n  t['arrowup'] = 603;\n  t['arrowright'] = 987;\n  t['arrowdown'] = 603;\n  t['degree'] = 400;\n  t['plusminus'] = 549;\n  t['second'] = 411;\n  t['greaterequal'] = 549;\n  t['multiply'] = 549;\n  t['proportional'] = 713;\n  t['partialdiff'] = 494;\n  t['bullet'] = 460;\n  t['divide'] = 549;\n  t['notequal'] = 549;\n  t['equivalence'] = 549;\n  t['approxequal'] = 549;\n  t['ellipsis'] = 1000;\n  t['arrowvertex'] = 603;\n  t['arrowhorizex'] = 1000;\n  t['carriagereturn'] = 658;\n  t['aleph'] = 823;\n  t['Ifraktur'] = 686;\n  t['Rfraktur'] = 795;\n  t['weierstrass'] = 987;\n  t['circlemultiply'] = 768;\n  t['circleplus'] = 768;\n  t['emptyset'] = 823;\n  t['intersection'] = 768;\n  t['union'] = 768;\n  t['propersuperset'] = 713;\n  t['reflexsuperset'] = 713;\n  t['notsubset'] = 713;\n  t['propersubset'] = 713;\n  t['reflexsubset'] = 713;\n  t['element'] = 713;\n  t['notelement'] = 713;\n  t['angle'] = 768;\n  t['gradient'] = 713;\n  t['registerserif'] = 790;\n  t['copyrightserif'] = 790;\n  t['trademarkserif'] = 890;\n  t['product'] = 823;\n  t['radical'] = 549;\n  t['dotmath'] = 250;\n  t['logicalnot'] = 713;\n  t['logicaland'] = 603;\n  t['logicalor'] = 603;\n  t['arrowdblboth'] = 1042;\n  t['arrowdblleft'] = 987;\n  t['arrowdblup'] = 603;\n  t['arrowdblright'] = 987;\n  t['arrowdbldown'] = 603;\n  t['lozenge'] = 494;\n  t['angleleft'] = 329;\n  t['registersans'] = 790;\n  t['copyrightsans'] = 790;\n  t['trademarksans'] = 786;\n  t['summation'] = 713;\n  t['parenlefttp'] = 384;\n  t['parenleftex'] = 384;\n  t['parenleftbt'] = 384;\n  t['bracketlefttp'] = 384;\n  t['bracketleftex'] = 384;\n  t['bracketleftbt'] = 384;\n  t['bracelefttp'] = 494;\n  t['braceleftmid'] = 494;\n  t['braceleftbt'] = 494;\n  t['braceex'] = 494;\n  t['angleright'] = 329;\n  t['integral'] = 274;\n  t['integraltp'] = 686;\n  t['integralex'] = 686;\n  t['integralbt'] = 686;\n  t['parenrighttp'] = 384;\n  t['parenrightex'] = 384;\n  t['parenrightbt'] = 384;\n  t['bracketrighttp'] = 384;\n  t['bracketrightex'] = 384;\n  t['bracketrightbt'] = 384;\n  t['bracerighttp'] = 494;\n  t['bracerightmid'] = 494;\n  t['bracerightbt'] = 494;\n  t['apple'] = 790;\n });\n t['Times-Roman'] = getLookupTableFactory(function (t) {\n  t['space'] = 250;\n  t['exclam'] = 333;\n  t['quotedbl'] = 408;\n  t['numbersign'] = 500;\n  t['dollar'] = 500;\n  t['percent'] = 833;\n  t['ampersand'] = 778;\n  t['quoteright'] = 333;\n  t['parenleft'] = 333;\n  t['parenright'] = 333;\n  t['asterisk'] = 500;\n  t['plus'] = 564;\n  t['comma'] = 250;\n  t['hyphen'] = 333;\n  t['period'] = 250;\n  t['slash'] = 278;\n  t['zero'] = 500;\n  t['one'] = 500;\n  t['two'] = 500;\n  t['three'] = 500;\n  t['four'] = 500;\n  t['five'] = 500;\n  t['six'] = 500;\n  t['seven'] = 500;\n  t['eight'] = 500;\n  t['nine'] = 500;\n  t['colon'] = 278;\n  t['semicolon'] = 278;\n  t['less'] = 564;\n  t['equal'] = 564;\n  t['greater'] = 564;\n  t['question'] = 444;\n  t['at'] = 921;\n  t['A'] = 722;\n  t['B'] = 667;\n  t['C'] = 667;\n  t['D'] = 722;\n  t['E'] = 611;\n  t['F'] = 556;\n  t['G'] = 722;\n  t['H'] = 722;\n  t['I'] = 333;\n  t['J'] = 389;\n  t['K'] = 722;\n  t['L'] = 611;\n  t['M'] = 889;\n  t['N'] = 722;\n  t['O'] = 722;\n  t['P'] = 556;\n  t['Q'] = 722;\n  t['R'] = 667;\n  t['S'] = 556;\n  t['T'] = 611;\n  t['U'] = 722;\n  t['V'] = 722;\n  t['W'] = 944;\n  t['X'] = 722;\n  t['Y'] = 722;\n  t['Z'] = 611;\n  t['bracketleft'] = 333;\n  t['backslash'] = 278;\n  t['bracketright'] = 333;\n  t['asciicircum'] = 469;\n  t['underscore'] = 500;\n  t['quoteleft'] = 333;\n  t['a'] = 444;\n  t['b'] = 500;\n  t['c'] = 444;\n  t['d'] = 500;\n  t['e'] = 444;\n  t['f'] = 333;\n  t['g'] = 500;\n  t['h'] = 500;\n  t['i'] = 278;\n  t['j'] = 278;\n  t['k'] = 500;\n  t['l'] = 278;\n  t['m'] = 778;\n  t['n'] = 500;\n  t['o'] = 500;\n  t['p'] = 500;\n  t['q'] = 500;\n  t['r'] = 333;\n  t['s'] = 389;\n  t['t'] = 278;\n  t['u'] = 500;\n  t['v'] = 500;\n  t['w'] = 722;\n  t['x'] = 500;\n  t['y'] = 500;\n  t['z'] = 444;\n  t['braceleft'] = 480;\n  t['bar'] = 200;\n  t['braceright'] = 480;\n  t['asciitilde'] = 541;\n  t['exclamdown'] = 333;\n  t['cent'] = 500;\n  t['sterling'] = 500;\n  t['fraction'] = 167;\n  t['yen'] = 500;\n  t['florin'] = 500;\n  t['section'] = 500;\n  t['currency'] = 500;\n  t['quotesingle'] = 180;\n  t['quotedblleft'] = 444;\n  t['guillemotleft'] = 500;\n  t['guilsinglleft'] = 333;\n  t['guilsinglright'] = 333;\n  t['fi'] = 556;\n  t['fl'] = 556;\n  t['endash'] = 500;\n  t['dagger'] = 500;\n  t['daggerdbl'] = 500;\n  t['periodcentered'] = 250;\n  t['paragraph'] = 453;\n  t['bullet'] = 350;\n  t['quotesinglbase'] = 333;\n  t['quotedblbase'] = 444;\n  t['quotedblright'] = 444;\n  t['guillemotright'] = 500;\n  t['ellipsis'] = 1000;\n  t['perthousand'] = 1000;\n  t['questiondown'] = 444;\n  t['grave'] = 333;\n  t['acute'] = 333;\n  t['circumflex'] = 333;\n  t['tilde'] = 333;\n  t['macron'] = 333;\n  t['breve'] = 333;\n  t['dotaccent'] = 333;\n  t['dieresis'] = 333;\n  t['ring'] = 333;\n  t['cedilla'] = 333;\n  t['hungarumlaut'] = 333;\n  t['ogonek'] = 333;\n  t['caron'] = 333;\n  t['emdash'] = 1000;\n  t['AE'] = 889;\n  t['ordfeminine'] = 276;\n  t['Lslash'] = 611;\n  t['Oslash'] = 722;\n  t['OE'] = 889;\n  t['ordmasculine'] = 310;\n  t['ae'] = 667;\n  t['dotlessi'] = 278;\n  t['lslash'] = 278;\n  t['oslash'] = 500;\n  t['oe'] = 722;\n  t['germandbls'] = 500;\n  t['Idieresis'] = 333;\n  t['eacute'] = 444;\n  t['abreve'] = 444;\n  t['uhungarumlaut'] = 500;\n  t['ecaron'] = 444;\n  t['Ydieresis'] = 722;\n  t['divide'] = 564;\n  t['Yacute'] = 722;\n  t['Acircumflex'] = 722;\n  t['aacute'] = 444;\n  t['Ucircumflex'] = 722;\n  t['yacute'] = 500;\n  t['scommaaccent'] = 389;\n  t['ecircumflex'] = 444;\n  t['Uring'] = 722;\n  t['Udieresis'] = 722;\n  t['aogonek'] = 444;\n  t['Uacute'] = 722;\n  t['uogonek'] = 500;\n  t['Edieresis'] = 611;\n  t['Dcroat'] = 722;\n  t['commaaccent'] = 250;\n  t['copyright'] = 760;\n  t['Emacron'] = 611;\n  t['ccaron'] = 444;\n  t['aring'] = 444;\n  t['Ncommaaccent'] = 722;\n  t['lacute'] = 278;\n  t['agrave'] = 444;\n  t['Tcommaaccent'] = 611;\n  t['Cacute'] = 667;\n  t['atilde'] = 444;\n  t['Edotaccent'] = 611;\n  t['scaron'] = 389;\n  t['scedilla'] = 389;\n  t['iacute'] = 278;\n  t['lozenge'] = 471;\n  t['Rcaron'] = 667;\n  t['Gcommaaccent'] = 722;\n  t['ucircumflex'] = 500;\n  t['acircumflex'] = 444;\n  t['Amacron'] = 722;\n  t['rcaron'] = 333;\n  t['ccedilla'] = 444;\n  t['Zdotaccent'] = 611;\n  t['Thorn'] = 556;\n  t['Omacron'] = 722;\n  t['Racute'] = 667;\n  t['Sacute'] = 556;\n  t['dcaron'] = 588;\n  t['Umacron'] = 722;\n  t['uring'] = 500;\n  t['threesuperior'] = 300;\n  t['Ograve'] = 722;\n  t['Agrave'] = 722;\n  t['Abreve'] = 722;\n  t['multiply'] = 564;\n  t['uacute'] = 500;\n  t['Tcaron'] = 611;\n  t['partialdiff'] = 476;\n  t['ydieresis'] = 500;\n  t['Nacute'] = 722;\n  t['icircumflex'] = 278;\n  t['Ecircumflex'] = 611;\n  t['adieresis'] = 444;\n  t['edieresis'] = 444;\n  t['cacute'] = 444;\n  t['nacute'] = 500;\n  t['umacron'] = 500;\n  t['Ncaron'] = 722;\n  t['Iacute'] = 333;\n  t['plusminus'] = 564;\n  t['brokenbar'] = 200;\n  t['registered'] = 760;\n  t['Gbreve'] = 722;\n  t['Idotaccent'] = 333;\n  t['summation'] = 600;\n  t['Egrave'] = 611;\n  t['racute'] = 333;\n  t['omacron'] = 500;\n  t['Zacute'] = 611;\n  t['Zcaron'] = 611;\n  t['greaterequal'] = 549;\n  t['Eth'] = 722;\n  t['Ccedilla'] = 667;\n  t['lcommaaccent'] = 278;\n  t['tcaron'] = 326;\n  t['eogonek'] = 444;\n  t['Uogonek'] = 722;\n  t['Aacute'] = 722;\n  t['Adieresis'] = 722;\n  t['egrave'] = 444;\n  t['zacute'] = 444;\n  t['iogonek'] = 278;\n  t['Oacute'] = 722;\n  t['oacute'] = 500;\n  t['amacron'] = 444;\n  t['sacute'] = 389;\n  t['idieresis'] = 278;\n  t['Ocircumflex'] = 722;\n  t['Ugrave'] = 722;\n  t['Delta'] = 612;\n  t['thorn'] = 500;\n  t['twosuperior'] = 300;\n  t['Odieresis'] = 722;\n  t['mu'] = 500;\n  t['igrave'] = 278;\n  t['ohungarumlaut'] = 500;\n  t['Eogonek'] = 611;\n  t['dcroat'] = 500;\n  t['threequarters'] = 750;\n  t['Scedilla'] = 556;\n  t['lcaron'] = 344;\n  t['Kcommaaccent'] = 722;\n  t['Lacute'] = 611;\n  t['trademark'] = 980;\n  t['edotaccent'] = 444;\n  t['Igrave'] = 333;\n  t['Imacron'] = 333;\n  t['Lcaron'] = 611;\n  t['onehalf'] = 750;\n  t['lessequal'] = 549;\n  t['ocircumflex'] = 500;\n  t['ntilde'] = 500;\n  t['Uhungarumlaut'] = 722;\n  t['Eacute'] = 611;\n  t['emacron'] = 444;\n  t['gbreve'] = 500;\n  t['onequarter'] = 750;\n  t['Scaron'] = 556;\n  t['Scommaaccent'] = 556;\n  t['Ohungarumlaut'] = 722;\n  t['degree'] = 400;\n  t['ograve'] = 500;\n  t['Ccaron'] = 667;\n  t['ugrave'] = 500;\n  t['radical'] = 453;\n  t['Dcaron'] = 722;\n  t['rcommaaccent'] = 333;\n  t['Ntilde'] = 722;\n  t['otilde'] = 500;\n  t['Rcommaaccent'] = 667;\n  t['Lcommaaccent'] = 611;\n  t['Atilde'] = 722;\n  t['Aogonek'] = 722;\n  t['Aring'] = 722;\n  t['Otilde'] = 722;\n  t['zdotaccent'] = 444;\n  t['Ecaron'] = 611;\n  t['Iogonek'] = 333;\n  t['kcommaaccent'] = 500;\n  t['minus'] = 564;\n  t['Icircumflex'] = 333;\n  t['ncaron'] = 500;\n  t['tcommaaccent'] = 278;\n  t['logicalnot'] = 564;\n  t['odieresis'] = 500;\n  t['udieresis'] = 500;\n  t['notequal'] = 549;\n  t['gcommaaccent'] = 500;\n  t['eth'] = 500;\n  t['zcaron'] = 444;\n  t['ncommaaccent'] = 500;\n  t['onesuperior'] = 300;\n  t['imacron'] = 278;\n  t['Euro'] = 500;\n });\n t['Times-Bold'] = getLookupTableFactory(function (t) {\n  t['space'] = 250;\n  t['exclam'] = 333;\n  t['quotedbl'] = 555;\n  t['numbersign'] = 500;\n  t['dollar'] = 500;\n  t['percent'] = 1000;\n  t['ampersand'] = 833;\n  t['quoteright'] = 333;\n  t['parenleft'] = 333;\n  t['parenright'] = 333;\n  t['asterisk'] = 500;\n  t['plus'] = 570;\n  t['comma'] = 250;\n  t['hyphen'] = 333;\n  t['period'] = 250;\n  t['slash'] = 278;\n  t['zero'] = 500;\n  t['one'] = 500;\n  t['two'] = 500;\n  t['three'] = 500;\n  t['four'] = 500;\n  t['five'] = 500;\n  t['six'] = 500;\n  t['seven'] = 500;\n  t['eight'] = 500;\n  t['nine'] = 500;\n  t['colon'] = 333;\n  t['semicolon'] = 333;\n  t['less'] = 570;\n  t['equal'] = 570;\n  t['greater'] = 570;\n  t['question'] = 500;\n  t['at'] = 930;\n  t['A'] = 722;\n  t['B'] = 667;\n  t['C'] = 722;\n  t['D'] = 722;\n  t['E'] = 667;\n  t['F'] = 611;\n  t['G'] = 778;\n  t['H'] = 778;\n  t['I'] = 389;\n  t['J'] = 500;\n  t['K'] = 778;\n  t['L'] = 667;\n  t['M'] = 944;\n  t['N'] = 722;\n  t['O'] = 778;\n  t['P'] = 611;\n  t['Q'] = 778;\n  t['R'] = 722;\n  t['S'] = 556;\n  t['T'] = 667;\n  t['U'] = 722;\n  t['V'] = 722;\n  t['W'] = 1000;\n  t['X'] = 722;\n  t['Y'] = 722;\n  t['Z'] = 667;\n  t['bracketleft'] = 333;\n  t['backslash'] = 278;\n  t['bracketright'] = 333;\n  t['asciicircum'] = 581;\n  t['underscore'] = 500;\n  t['quoteleft'] = 333;\n  t['a'] = 500;\n  t['b'] = 556;\n  t['c'] = 444;\n  t['d'] = 556;\n  t['e'] = 444;\n  t['f'] = 333;\n  t['g'] = 500;\n  t['h'] = 556;\n  t['i'] = 278;\n  t['j'] = 333;\n  t['k'] = 556;\n  t['l'] = 278;\n  t['m'] = 833;\n  t['n'] = 556;\n  t['o'] = 500;\n  t['p'] = 556;\n  t['q'] = 556;\n  t['r'] = 444;\n  t['s'] = 389;\n  t['t'] = 333;\n  t['u'] = 556;\n  t['v'] = 500;\n  t['w'] = 722;\n  t['x'] = 500;\n  t['y'] = 500;\n  t['z'] = 444;\n  t['braceleft'] = 394;\n  t['bar'] = 220;\n  t['braceright'] = 394;\n  t['asciitilde'] = 520;\n  t['exclamdown'] = 333;\n  t['cent'] = 500;\n  t['sterling'] = 500;\n  t['fraction'] = 167;\n  t['yen'] = 500;\n  t['florin'] = 500;\n  t['section'] = 500;\n  t['currency'] = 500;\n  t['quotesingle'] = 278;\n  t['quotedblleft'] = 500;\n  t['guillemotleft'] = 500;\n  t['guilsinglleft'] = 333;\n  t['guilsinglright'] = 333;\n  t['fi'] = 556;\n  t['fl'] = 556;\n  t['endash'] = 500;\n  t['dagger'] = 500;\n  t['daggerdbl'] = 500;\n  t['periodcentered'] = 250;\n  t['paragraph'] = 540;\n  t['bullet'] = 350;\n  t['quotesinglbase'] = 333;\n  t['quotedblbase'] = 500;\n  t['quotedblright'] = 500;\n  t['guillemotright'] = 500;\n  t['ellipsis'] = 1000;\n  t['perthousand'] = 1000;\n  t['questiondown'] = 500;\n  t['grave'] = 333;\n  t['acute'] = 333;\n  t['circumflex'] = 333;\n  t['tilde'] = 333;\n  t['macron'] = 333;\n  t['breve'] = 333;\n  t['dotaccent'] = 333;\n  t['dieresis'] = 333;\n  t['ring'] = 333;\n  t['cedilla'] = 333;\n  t['hungarumlaut'] = 333;\n  t['ogonek'] = 333;\n  t['caron'] = 333;\n  t['emdash'] = 1000;\n  t['AE'] = 1000;\n  t['ordfeminine'] = 300;\n  t['Lslash'] = 667;\n  t['Oslash'] = 778;\n  t['OE'] = 1000;\n  t['ordmasculine'] = 330;\n  t['ae'] = 722;\n  t['dotlessi'] = 278;\n  t['lslash'] = 278;\n  t['oslash'] = 500;\n  t['oe'] = 722;\n  t['germandbls'] = 556;\n  t['Idieresis'] = 389;\n  t['eacute'] = 444;\n  t['abreve'] = 500;\n  t['uhungarumlaut'] = 556;\n  t['ecaron'] = 444;\n  t['Ydieresis'] = 722;\n  t['divide'] = 570;\n  t['Yacute'] = 722;\n  t['Acircumflex'] = 722;\n  t['aacute'] = 500;\n  t['Ucircumflex'] = 722;\n  t['yacute'] = 500;\n  t['scommaaccent'] = 389;\n  t['ecircumflex'] = 444;\n  t['Uring'] = 722;\n  t['Udieresis'] = 722;\n  t['aogonek'] = 500;\n  t['Uacute'] = 722;\n  t['uogonek'] = 556;\n  t['Edieresis'] = 667;\n  t['Dcroat'] = 722;\n  t['commaaccent'] = 250;\n  t['copyright'] = 747;\n  t['Emacron'] = 667;\n  t['ccaron'] = 444;\n  t['aring'] = 500;\n  t['Ncommaaccent'] = 722;\n  t['lacute'] = 278;\n  t['agrave'] = 500;\n  t['Tcommaaccent'] = 667;\n  t['Cacute'] = 722;\n  t['atilde'] = 500;\n  t['Edotaccent'] = 667;\n  t['scaron'] = 389;\n  t['scedilla'] = 389;\n  t['iacute'] = 278;\n  t['lozenge'] = 494;\n  t['Rcaron'] = 722;\n  t['Gcommaaccent'] = 778;\n  t['ucircumflex'] = 556;\n  t['acircumflex'] = 500;\n  t['Amacron'] = 722;\n  t['rcaron'] = 444;\n  t['ccedilla'] = 444;\n  t['Zdotaccent'] = 667;\n  t['Thorn'] = 611;\n  t['Omacron'] = 778;\n  t['Racute'] = 722;\n  t['Sacute'] = 556;\n  t['dcaron'] = 672;\n  t['Umacron'] = 722;\n  t['uring'] = 556;\n  t['threesuperior'] = 300;\n  t['Ograve'] = 778;\n  t['Agrave'] = 722;\n  t['Abreve'] = 722;\n  t['multiply'] = 570;\n  t['uacute'] = 556;\n  t['Tcaron'] = 667;\n  t['partialdiff'] = 494;\n  t['ydieresis'] = 500;\n  t['Nacute'] = 722;\n  t['icircumflex'] = 278;\n  t['Ecircumflex'] = 667;\n  t['adieresis'] = 500;\n  t['edieresis'] = 444;\n  t['cacute'] = 444;\n  t['nacute'] = 556;\n  t['umacron'] = 556;\n  t['Ncaron'] = 722;\n  t['Iacute'] = 389;\n  t['plusminus'] = 570;\n  t['brokenbar'] = 220;\n  t['registered'] = 747;\n  t['Gbreve'] = 778;\n  t['Idotaccent'] = 389;\n  t['summation'] = 600;\n  t['Egrave'] = 667;\n  t['racute'] = 444;\n  t['omacron'] = 500;\n  t['Zacute'] = 667;\n  t['Zcaron'] = 667;\n  t['greaterequal'] = 549;\n  t['Eth'] = 722;\n  t['Ccedilla'] = 722;\n  t['lcommaaccent'] = 278;\n  t['tcaron'] = 416;\n  t['eogonek'] = 444;\n  t['Uogonek'] = 722;\n  t['Aacute'] = 722;\n  t['Adieresis'] = 722;\n  t['egrave'] = 444;\n  t['zacute'] = 444;\n  t['iogonek'] = 278;\n  t['Oacute'] = 778;\n  t['oacute'] = 500;\n  t['amacron'] = 500;\n  t['sacute'] = 389;\n  t['idieresis'] = 278;\n  t['Ocircumflex'] = 778;\n  t['Ugrave'] = 722;\n  t['Delta'] = 612;\n  t['thorn'] = 556;\n  t['twosuperior'] = 300;\n  t['Odieresis'] = 778;\n  t['mu'] = 556;\n  t['igrave'] = 278;\n  t['ohungarumlaut'] = 500;\n  t['Eogonek'] = 667;\n  t['dcroat'] = 556;\n  t['threequarters'] = 750;\n  t['Scedilla'] = 556;\n  t['lcaron'] = 394;\n  t['Kcommaaccent'] = 778;\n  t['Lacute'] = 667;\n  t['trademark'] = 1000;\n  t['edotaccent'] = 444;\n  t['Igrave'] = 389;\n  t['Imacron'] = 389;\n  t['Lcaron'] = 667;\n  t['onehalf'] = 750;\n  t['lessequal'] = 549;\n  t['ocircumflex'] = 500;\n  t['ntilde'] = 556;\n  t['Uhungarumlaut'] = 722;\n  t['Eacute'] = 667;\n  t['emacron'] = 444;\n  t['gbreve'] = 500;\n  t['onequarter'] = 750;\n  t['Scaron'] = 556;\n  t['Scommaaccent'] = 556;\n  t['Ohungarumlaut'] = 778;\n  t['degree'] = 400;\n  t['ograve'] = 500;\n  t['Ccaron'] = 722;\n  t['ugrave'] = 556;\n  t['radical'] = 549;\n  t['Dcaron'] = 722;\n  t['rcommaaccent'] = 444;\n  t['Ntilde'] = 722;\n  t['otilde'] = 500;\n  t['Rcommaaccent'] = 722;\n  t['Lcommaaccent'] = 667;\n  t['Atilde'] = 722;\n  t['Aogonek'] = 722;\n  t['Aring'] = 722;\n  t['Otilde'] = 778;\n  t['zdotaccent'] = 444;\n  t['Ecaron'] = 667;\n  t['Iogonek'] = 389;\n  t['kcommaaccent'] = 556;\n  t['minus'] = 570;\n  t['Icircumflex'] = 389;\n  t['ncaron'] = 556;\n  t['tcommaaccent'] = 333;\n  t['logicalnot'] = 570;\n  t['odieresis'] = 500;\n  t['udieresis'] = 556;\n  t['notequal'] = 549;\n  t['gcommaaccent'] = 500;\n  t['eth'] = 500;\n  t['zcaron'] = 444;\n  t['ncommaaccent'] = 556;\n  t['onesuperior'] = 300;\n  t['imacron'] = 278;\n  t['Euro'] = 500;\n });\n t['Times-BoldItalic'] = getLookupTableFactory(function (t) {\n  t['space'] = 250;\n  t['exclam'] = 389;\n  t['quotedbl'] = 555;\n  t['numbersign'] = 500;\n  t['dollar'] = 500;\n  t['percent'] = 833;\n  t['ampersand'] = 778;\n  t['quoteright'] = 333;\n  t['parenleft'] = 333;\n  t['parenright'] = 333;\n  t['asterisk'] = 500;\n  t['plus'] = 570;\n  t['comma'] = 250;\n  t['hyphen'] = 333;\n  t['period'] = 250;\n  t['slash'] = 278;\n  t['zero'] = 500;\n  t['one'] = 500;\n  t['two'] = 500;\n  t['three'] = 500;\n  t['four'] = 500;\n  t['five'] = 500;\n  t['six'] = 500;\n  t['seven'] = 500;\n  t['eight'] = 500;\n  t['nine'] = 500;\n  t['colon'] = 333;\n  t['semicolon'] = 333;\n  t['less'] = 570;\n  t['equal'] = 570;\n  t['greater'] = 570;\n  t['question'] = 500;\n  t['at'] = 832;\n  t['A'] = 667;\n  t['B'] = 667;\n  t['C'] = 667;\n  t['D'] = 722;\n  t['E'] = 667;\n  t['F'] = 667;\n  t['G'] = 722;\n  t['H'] = 778;\n  t['I'] = 389;\n  t['J'] = 500;\n  t['K'] = 667;\n  t['L'] = 611;\n  t['M'] = 889;\n  t['N'] = 722;\n  t['O'] = 722;\n  t['P'] = 611;\n  t['Q'] = 722;\n  t['R'] = 667;\n  t['S'] = 556;\n  t['T'] = 611;\n  t['U'] = 722;\n  t['V'] = 667;\n  t['W'] = 889;\n  t['X'] = 667;\n  t['Y'] = 611;\n  t['Z'] = 611;\n  t['bracketleft'] = 333;\n  t['backslash'] = 278;\n  t['bracketright'] = 333;\n  t['asciicircum'] = 570;\n  t['underscore'] = 500;\n  t['quoteleft'] = 333;\n  t['a'] = 500;\n  t['b'] = 500;\n  t['c'] = 444;\n  t['d'] = 500;\n  t['e'] = 444;\n  t['f'] = 333;\n  t['g'] = 500;\n  t['h'] = 556;\n  t['i'] = 278;\n  t['j'] = 278;\n  t['k'] = 500;\n  t['l'] = 278;\n  t['m'] = 778;\n  t['n'] = 556;\n  t['o'] = 500;\n  t['p'] = 500;\n  t['q'] = 500;\n  t['r'] = 389;\n  t['s'] = 389;\n  t['t'] = 278;\n  t['u'] = 556;\n  t['v'] = 444;\n  t['w'] = 667;\n  t['x'] = 500;\n  t['y'] = 444;\n  t['z'] = 389;\n  t['braceleft'] = 348;\n  t['bar'] = 220;\n  t['braceright'] = 348;\n  t['asciitilde'] = 570;\n  t['exclamdown'] = 389;\n  t['cent'] = 500;\n  t['sterling'] = 500;\n  t['fraction'] = 167;\n  t['yen'] = 500;\n  t['florin'] = 500;\n  t['section'] = 500;\n  t['currency'] = 500;\n  t['quotesingle'] = 278;\n  t['quotedblleft'] = 500;\n  t['guillemotleft'] = 500;\n  t['guilsinglleft'] = 333;\n  t['guilsinglright'] = 333;\n  t['fi'] = 556;\n  t['fl'] = 556;\n  t['endash'] = 500;\n  t['dagger'] = 500;\n  t['daggerdbl'] = 500;\n  t['periodcentered'] = 250;\n  t['paragraph'] = 500;\n  t['bullet'] = 350;\n  t['quotesinglbase'] = 333;\n  t['quotedblbase'] = 500;\n  t['quotedblright'] = 500;\n  t['guillemotright'] = 500;\n  t['ellipsis'] = 1000;\n  t['perthousand'] = 1000;\n  t['questiondown'] = 500;\n  t['grave'] = 333;\n  t['acute'] = 333;\n  t['circumflex'] = 333;\n  t['tilde'] = 333;\n  t['macron'] = 333;\n  t['breve'] = 333;\n  t['dotaccent'] = 333;\n  t['dieresis'] = 333;\n  t['ring'] = 333;\n  t['cedilla'] = 333;\n  t['hungarumlaut'] = 333;\n  t['ogonek'] = 333;\n  t['caron'] = 333;\n  t['emdash'] = 1000;\n  t['AE'] = 944;\n  t['ordfeminine'] = 266;\n  t['Lslash'] = 611;\n  t['Oslash'] = 722;\n  t['OE'] = 944;\n  t['ordmasculine'] = 300;\n  t['ae'] = 722;\n  t['dotlessi'] = 278;\n  t['lslash'] = 278;\n  t['oslash'] = 500;\n  t['oe'] = 722;\n  t['germandbls'] = 500;\n  t['Idieresis'] = 389;\n  t['eacute'] = 444;\n  t['abreve'] = 500;\n  t['uhungarumlaut'] = 556;\n  t['ecaron'] = 444;\n  t['Ydieresis'] = 611;\n  t['divide'] = 570;\n  t['Yacute'] = 611;\n  t['Acircumflex'] = 667;\n  t['aacute'] = 500;\n  t['Ucircumflex'] = 722;\n  t['yacute'] = 444;\n  t['scommaaccent'] = 389;\n  t['ecircumflex'] = 444;\n  t['Uring'] = 722;\n  t['Udieresis'] = 722;\n  t['aogonek'] = 500;\n  t['Uacute'] = 722;\n  t['uogonek'] = 556;\n  t['Edieresis'] = 667;\n  t['Dcroat'] = 722;\n  t['commaaccent'] = 250;\n  t['copyright'] = 747;\n  t['Emacron'] = 667;\n  t['ccaron'] = 444;\n  t['aring'] = 500;\n  t['Ncommaaccent'] = 722;\n  t['lacute'] = 278;\n  t['agrave'] = 500;\n  t['Tcommaaccent'] = 611;\n  t['Cacute'] = 667;\n  t['atilde'] = 500;\n  t['Edotaccent'] = 667;\n  t['scaron'] = 389;\n  t['scedilla'] = 389;\n  t['iacute'] = 278;\n  t['lozenge'] = 494;\n  t['Rcaron'] = 667;\n  t['Gcommaaccent'] = 722;\n  t['ucircumflex'] = 556;\n  t['acircumflex'] = 500;\n  t['Amacron'] = 667;\n  t['rcaron'] = 389;\n  t['ccedilla'] = 444;\n  t['Zdotaccent'] = 611;\n  t['Thorn'] = 611;\n  t['Omacron'] = 722;\n  t['Racute'] = 667;\n  t['Sacute'] = 556;\n  t['dcaron'] = 608;\n  t['Umacron'] = 722;\n  t['uring'] = 556;\n  t['threesuperior'] = 300;\n  t['Ograve'] = 722;\n  t['Agrave'] = 667;\n  t['Abreve'] = 667;\n  t['multiply'] = 570;\n  t['uacute'] = 556;\n  t['Tcaron'] = 611;\n  t['partialdiff'] = 494;\n  t['ydieresis'] = 444;\n  t['Nacute'] = 722;\n  t['icircumflex'] = 278;\n  t['Ecircumflex'] = 667;\n  t['adieresis'] = 500;\n  t['edieresis'] = 444;\n  t['cacute'] = 444;\n  t['nacute'] = 556;\n  t['umacron'] = 556;\n  t['Ncaron'] = 722;\n  t['Iacute'] = 389;\n  t['plusminus'] = 570;\n  t['brokenbar'] = 220;\n  t['registered'] = 747;\n  t['Gbreve'] = 722;\n  t['Idotaccent'] = 389;\n  t['summation'] = 600;\n  t['Egrave'] = 667;\n  t['racute'] = 389;\n  t['omacron'] = 500;\n  t['Zacute'] = 611;\n  t['Zcaron'] = 611;\n  t['greaterequal'] = 549;\n  t['Eth'] = 722;\n  t['Ccedilla'] = 667;\n  t['lcommaaccent'] = 278;\n  t['tcaron'] = 366;\n  t['eogonek'] = 444;\n  t['Uogonek'] = 722;\n  t['Aacute'] = 667;\n  t['Adieresis'] = 667;\n  t['egrave'] = 444;\n  t['zacute'] = 389;\n  t['iogonek'] = 278;\n  t['Oacute'] = 722;\n  t['oacute'] = 500;\n  t['amacron'] = 500;\n  t['sacute'] = 389;\n  t['idieresis'] = 278;\n  t['Ocircumflex'] = 722;\n  t['Ugrave'] = 722;\n  t['Delta'] = 612;\n  t['thorn'] = 500;\n  t['twosuperior'] = 300;\n  t['Odieresis'] = 722;\n  t['mu'] = 576;\n  t['igrave'] = 278;\n  t['ohungarumlaut'] = 500;\n  t['Eogonek'] = 667;\n  t['dcroat'] = 500;\n  t['threequarters'] = 750;\n  t['Scedilla'] = 556;\n  t['lcaron'] = 382;\n  t['Kcommaaccent'] = 667;\n  t['Lacute'] = 611;\n  t['trademark'] = 1000;\n  t['edotaccent'] = 444;\n  t['Igrave'] = 389;\n  t['Imacron'] = 389;\n  t['Lcaron'] = 611;\n  t['onehalf'] = 750;\n  t['lessequal'] = 549;\n  t['ocircumflex'] = 500;\n  t['ntilde'] = 556;\n  t['Uhungarumlaut'] = 722;\n  t['Eacute'] = 667;\n  t['emacron'] = 444;\n  t['gbreve'] = 500;\n  t['onequarter'] = 750;\n  t['Scaron'] = 556;\n  t['Scommaaccent'] = 556;\n  t['Ohungarumlaut'] = 722;\n  t['degree'] = 400;\n  t['ograve'] = 500;\n  t['Ccaron'] = 667;\n  t['ugrave'] = 556;\n  t['radical'] = 549;\n  t['Dcaron'] = 722;\n  t['rcommaaccent'] = 389;\n  t['Ntilde'] = 722;\n  t['otilde'] = 500;\n  t['Rcommaaccent'] = 667;\n  t['Lcommaaccent'] = 611;\n  t['Atilde'] = 667;\n  t['Aogonek'] = 667;\n  t['Aring'] = 667;\n  t['Otilde'] = 722;\n  t['zdotaccent'] = 389;\n  t['Ecaron'] = 667;\n  t['Iogonek'] = 389;\n  t['kcommaaccent'] = 500;\n  t['minus'] = 606;\n  t['Icircumflex'] = 389;\n  t['ncaron'] = 556;\n  t['tcommaaccent'] = 278;\n  t['logicalnot'] = 606;\n  t['odieresis'] = 500;\n  t['udieresis'] = 556;\n  t['notequal'] = 549;\n  t['gcommaaccent'] = 500;\n  t['eth'] = 500;\n  t['zcaron'] = 389;\n  t['ncommaaccent'] = 556;\n  t['onesuperior'] = 300;\n  t['imacron'] = 278;\n  t['Euro'] = 500;\n });\n t['Times-Italic'] = getLookupTableFactory(function (t) {\n  t['space'] = 250;\n  t['exclam'] = 333;\n  t['quotedbl'] = 420;\n  t['numbersign'] = 500;\n  t['dollar'] = 500;\n  t['percent'] = 833;\n  t['ampersand'] = 778;\n  t['quoteright'] = 333;\n  t['parenleft'] = 333;\n  t['parenright'] = 333;\n  t['asterisk'] = 500;\n  t['plus'] = 675;\n  t['comma'] = 250;\n  t['hyphen'] = 333;\n  t['period'] = 250;\n  t['slash'] = 278;\n  t['zero'] = 500;\n  t['one'] = 500;\n  t['two'] = 500;\n  t['three'] = 500;\n  t['four'] = 500;\n  t['five'] = 500;\n  t['six'] = 500;\n  t['seven'] = 500;\n  t['eight'] = 500;\n  t['nine'] = 500;\n  t['colon'] = 333;\n  t['semicolon'] = 333;\n  t['less'] = 675;\n  t['equal'] = 675;\n  t['greater'] = 675;\n  t['question'] = 500;\n  t['at'] = 920;\n  t['A'] = 611;\n  t['B'] = 611;\n  t['C'] = 667;\n  t['D'] = 722;\n  t['E'] = 611;\n  t['F'] = 611;\n  t['G'] = 722;\n  t['H'] = 722;\n  t['I'] = 333;\n  t['J'] = 444;\n  t['K'] = 667;\n  t['L'] = 556;\n  t['M'] = 833;\n  t['N'] = 667;\n  t['O'] = 722;\n  t['P'] = 611;\n  t['Q'] = 722;\n  t['R'] = 611;\n  t['S'] = 500;\n  t['T'] = 556;\n  t['U'] = 722;\n  t['V'] = 611;\n  t['W'] = 833;\n  t['X'] = 611;\n  t['Y'] = 556;\n  t['Z'] = 556;\n  t['bracketleft'] = 389;\n  t['backslash'] = 278;\n  t['bracketright'] = 389;\n  t['asciicircum'] = 422;\n  t['underscore'] = 500;\n  t['quoteleft'] = 333;\n  t['a'] = 500;\n  t['b'] = 500;\n  t['c'] = 444;\n  t['d'] = 500;\n  t['e'] = 444;\n  t['f'] = 278;\n  t['g'] = 500;\n  t['h'] = 500;\n  t['i'] = 278;\n  t['j'] = 278;\n  t['k'] = 444;\n  t['l'] = 278;\n  t['m'] = 722;\n  t['n'] = 500;\n  t['o'] = 500;\n  t['p'] = 500;\n  t['q'] = 500;\n  t['r'] = 389;\n  t['s'] = 389;\n  t['t'] = 278;\n  t['u'] = 500;\n  t['v'] = 444;\n  t['w'] = 667;\n  t['x'] = 444;\n  t['y'] = 444;\n  t['z'] = 389;\n  t['braceleft'] = 400;\n  t['bar'] = 275;\n  t['braceright'] = 400;\n  t['asciitilde'] = 541;\n  t['exclamdown'] = 389;\n  t['cent'] = 500;\n  t['sterling'] = 500;\n  t['fraction'] = 167;\n  t['yen'] = 500;\n  t['florin'] = 500;\n  t['section'] = 500;\n  t['currency'] = 500;\n  t['quotesingle'] = 214;\n  t['quotedblleft'] = 556;\n  t['guillemotleft'] = 500;\n  t['guilsinglleft'] = 333;\n  t['guilsinglright'] = 333;\n  t['fi'] = 500;\n  t['fl'] = 500;\n  t['endash'] = 500;\n  t['dagger'] = 500;\n  t['daggerdbl'] = 500;\n  t['periodcentered'] = 250;\n  t['paragraph'] = 523;\n  t['bullet'] = 350;\n  t['quotesinglbase'] = 333;\n  t['quotedblbase'] = 556;\n  t['quotedblright'] = 556;\n  t['guillemotright'] = 500;\n  t['ellipsis'] = 889;\n  t['perthousand'] = 1000;\n  t['questiondown'] = 500;\n  t['grave'] = 333;\n  t['acute'] = 333;\n  t['circumflex'] = 333;\n  t['tilde'] = 333;\n  t['macron'] = 333;\n  t['breve'] = 333;\n  t['dotaccent'] = 333;\n  t['dieresis'] = 333;\n  t['ring'] = 333;\n  t['cedilla'] = 333;\n  t['hungarumlaut'] = 333;\n  t['ogonek'] = 333;\n  t['caron'] = 333;\n  t['emdash'] = 889;\n  t['AE'] = 889;\n  t['ordfeminine'] = 276;\n  t['Lslash'] = 556;\n  t['Oslash'] = 722;\n  t['OE'] = 944;\n  t['ordmasculine'] = 310;\n  t['ae'] = 667;\n  t['dotlessi'] = 278;\n  t['lslash'] = 278;\n  t['oslash'] = 500;\n  t['oe'] = 667;\n  t['germandbls'] = 500;\n  t['Idieresis'] = 333;\n  t['eacute'] = 444;\n  t['abreve'] = 500;\n  t['uhungarumlaut'] = 500;\n  t['ecaron'] = 444;\n  t['Ydieresis'] = 556;\n  t['divide'] = 675;\n  t['Yacute'] = 556;\n  t['Acircumflex'] = 611;\n  t['aacute'] = 500;\n  t['Ucircumflex'] = 722;\n  t['yacute'] = 444;\n  t['scommaaccent'] = 389;\n  t['ecircumflex'] = 444;\n  t['Uring'] = 722;\n  t['Udieresis'] = 722;\n  t['aogonek'] = 500;\n  t['Uacute'] = 722;\n  t['uogonek'] = 500;\n  t['Edieresis'] = 611;\n  t['Dcroat'] = 722;\n  t['commaaccent'] = 250;\n  t['copyright'] = 760;\n  t['Emacron'] = 611;\n  t['ccaron'] = 444;\n  t['aring'] = 500;\n  t['Ncommaaccent'] = 667;\n  t['lacute'] = 278;\n  t['agrave'] = 500;\n  t['Tcommaaccent'] = 556;\n  t['Cacute'] = 667;\n  t['atilde'] = 500;\n  t['Edotaccent'] = 611;\n  t['scaron'] = 389;\n  t['scedilla'] = 389;\n  t['iacute'] = 278;\n  t['lozenge'] = 471;\n  t['Rcaron'] = 611;\n  t['Gcommaaccent'] = 722;\n  t['ucircumflex'] = 500;\n  t['acircumflex'] = 500;\n  t['Amacron'] = 611;\n  t['rcaron'] = 389;\n  t['ccedilla'] = 444;\n  t['Zdotaccent'] = 556;\n  t['Thorn'] = 611;\n  t['Omacron'] = 722;\n  t['Racute'] = 611;\n  t['Sacute'] = 500;\n  t['dcaron'] = 544;\n  t['Umacron'] = 722;\n  t['uring'] = 500;\n  t['threesuperior'] = 300;\n  t['Ograve'] = 722;\n  t['Agrave'] = 611;\n  t['Abreve'] = 611;\n  t['multiply'] = 675;\n  t['uacute'] = 500;\n  t['Tcaron'] = 556;\n  t['partialdiff'] = 476;\n  t['ydieresis'] = 444;\n  t['Nacute'] = 667;\n  t['icircumflex'] = 278;\n  t['Ecircumflex'] = 611;\n  t['adieresis'] = 500;\n  t['edieresis'] = 444;\n  t['cacute'] = 444;\n  t['nacute'] = 500;\n  t['umacron'] = 500;\n  t['Ncaron'] = 667;\n  t['Iacute'] = 333;\n  t['plusminus'] = 675;\n  t['brokenbar'] = 275;\n  t['registered'] = 760;\n  t['Gbreve'] = 722;\n  t['Idotaccent'] = 333;\n  t['summation'] = 600;\n  t['Egrave'] = 611;\n  t['racute'] = 389;\n  t['omacron'] = 500;\n  t['Zacute'] = 556;\n  t['Zcaron'] = 556;\n  t['greaterequal'] = 549;\n  t['Eth'] = 722;\n  t['Ccedilla'] = 667;\n  t['lcommaaccent'] = 278;\n  t['tcaron'] = 300;\n  t['eogonek'] = 444;\n  t['Uogonek'] = 722;\n  t['Aacute'] = 611;\n  t['Adieresis'] = 611;\n  t['egrave'] = 444;\n  t['zacute'] = 389;\n  t['iogonek'] = 278;\n  t['Oacute'] = 722;\n  t['oacute'] = 500;\n  t['amacron'] = 500;\n  t['sacute'] = 389;\n  t['idieresis'] = 278;\n  t['Ocircumflex'] = 722;\n  t['Ugrave'] = 722;\n  t['Delta'] = 612;\n  t['thorn'] = 500;\n  t['twosuperior'] = 300;\n  t['Odieresis'] = 722;\n  t['mu'] = 500;\n  t['igrave'] = 278;\n  t['ohungarumlaut'] = 500;\n  t['Eogonek'] = 611;\n  t['dcroat'] = 500;\n  t['threequarters'] = 750;\n  t['Scedilla'] = 500;\n  t['lcaron'] = 300;\n  t['Kcommaaccent'] = 667;\n  t['Lacute'] = 556;\n  t['trademark'] = 980;\n  t['edotaccent'] = 444;\n  t['Igrave'] = 333;\n  t['Imacron'] = 333;\n  t['Lcaron'] = 611;\n  t['onehalf'] = 750;\n  t['lessequal'] = 549;\n  t['ocircumflex'] = 500;\n  t['ntilde'] = 500;\n  t['Uhungarumlaut'] = 722;\n  t['Eacute'] = 611;\n  t['emacron'] = 444;\n  t['gbreve'] = 500;\n  t['onequarter'] = 750;\n  t['Scaron'] = 500;\n  t['Scommaaccent'] = 500;\n  t['Ohungarumlaut'] = 722;\n  t['degree'] = 400;\n  t['ograve'] = 500;\n  t['Ccaron'] = 667;\n  t['ugrave'] = 500;\n  t['radical'] = 453;\n  t['Dcaron'] = 722;\n  t['rcommaaccent'] = 389;\n  t['Ntilde'] = 667;\n  t['otilde'] = 500;\n  t['Rcommaaccent'] = 611;\n  t['Lcommaaccent'] = 556;\n  t['Atilde'] = 611;\n  t['Aogonek'] = 611;\n  t['Aring'] = 611;\n  t['Otilde'] = 722;\n  t['zdotaccent'] = 389;\n  t['Ecaron'] = 611;\n  t['Iogonek'] = 333;\n  t['kcommaaccent'] = 444;\n  t['minus'] = 675;\n  t['Icircumflex'] = 333;\n  t['ncaron'] = 500;\n  t['tcommaaccent'] = 278;\n  t['logicalnot'] = 675;\n  t['odieresis'] = 500;\n  t['udieresis'] = 500;\n  t['notequal'] = 549;\n  t['gcommaaccent'] = 500;\n  t['eth'] = 500;\n  t['zcaron'] = 389;\n  t['ncommaaccent'] = 500;\n  t['onesuperior'] = 300;\n  t['imacron'] = 278;\n  t['Euro'] = 500;\n });\n t['ZapfDingbats'] = getLookupTableFactory(function (t) {\n  t['space'] = 278;\n  t['a1'] = 974;\n  t['a2'] = 961;\n  t['a202'] = 974;\n  t['a3'] = 980;\n  t['a4'] = 719;\n  t['a5'] = 789;\n  t['a119'] = 790;\n  t['a118'] = 791;\n  t['a117'] = 690;\n  t['a11'] = 960;\n  t['a12'] = 939;\n  t['a13'] = 549;\n  t['a14'] = 855;\n  t['a15'] = 911;\n  t['a16'] = 933;\n  t['a105'] = 911;\n  t['a17'] = 945;\n  t['a18'] = 974;\n  t['a19'] = 755;\n  t['a20'] = 846;\n  t['a21'] = 762;\n  t['a22'] = 761;\n  t['a23'] = 571;\n  t['a24'] = 677;\n  t['a25'] = 763;\n  t['a26'] = 760;\n  t['a27'] = 759;\n  t['a28'] = 754;\n  t['a6'] = 494;\n  t['a7'] = 552;\n  t['a8'] = 537;\n  t['a9'] = 577;\n  t['a10'] = 692;\n  t['a29'] = 786;\n  t['a30'] = 788;\n  t['a31'] = 788;\n  t['a32'] = 790;\n  t['a33'] = 793;\n  t['a34'] = 794;\n  t['a35'] = 816;\n  t['a36'] = 823;\n  t['a37'] = 789;\n  t['a38'] = 841;\n  t['a39'] = 823;\n  t['a40'] = 833;\n  t['a41'] = 816;\n  t['a42'] = 831;\n  t['a43'] = 923;\n  t['a44'] = 744;\n  t['a45'] = 723;\n  t['a46'] = 749;\n  t['a47'] = 790;\n  t['a48'] = 792;\n  t['a49'] = 695;\n  t['a50'] = 776;\n  t['a51'] = 768;\n  t['a52'] = 792;\n  t['a53'] = 759;\n  t['a54'] = 707;\n  t['a55'] = 708;\n  t['a56'] = 682;\n  t['a57'] = 701;\n  t['a58'] = 826;\n  t['a59'] = 815;\n  t['a60'] = 789;\n  t['a61'] = 789;\n  t['a62'] = 707;\n  t['a63'] = 687;\n  t['a64'] = 696;\n  t['a65'] = 689;\n  t['a66'] = 786;\n  t['a67'] = 787;\n  t['a68'] = 713;\n  t['a69'] = 791;\n  t['a70'] = 785;\n  t['a71'] = 791;\n  t['a72'] = 873;\n  t['a73'] = 761;\n  t['a74'] = 762;\n  t['a203'] = 762;\n  t['a75'] = 759;\n  t['a204'] = 759;\n  t['a76'] = 892;\n  t['a77'] = 892;\n  t['a78'] = 788;\n  t['a79'] = 784;\n  t['a81'] = 438;\n  t['a82'] = 138;\n  t['a83'] = 277;\n  t['a84'] = 415;\n  t['a97'] = 392;\n  t['a98'] = 392;\n  t['a99'] = 668;\n  t['a100'] = 668;\n  t['a89'] = 390;\n  t['a90'] = 390;\n  t['a93'] = 317;\n  t['a94'] = 317;\n  t['a91'] = 276;\n  t['a92'] = 276;\n  t['a205'] = 509;\n  t['a85'] = 509;\n  t['a206'] = 410;\n  t['a86'] = 410;\n  t['a87'] = 234;\n  t['a88'] = 234;\n  t['a95'] = 334;\n  t['a96'] = 334;\n  t['a101'] = 732;\n  t['a102'] = 544;\n  t['a103'] = 544;\n  t['a104'] = 910;\n  t['a106'] = 667;\n  t['a107'] = 760;\n  t['a108'] = 760;\n  t['a112'] = 776;\n  t['a111'] = 595;\n  t['a110'] = 694;\n  t['a109'] = 626;\n  t['a120'] = 788;\n  t['a121'] = 788;\n  t['a122'] = 788;\n  t['a123'] = 788;\n  t['a124'] = 788;\n  t['a125'] = 788;\n  t['a126'] = 788;\n  t['a127'] = 788;\n  t['a128'] = 788;\n  t['a129'] = 788;\n  t['a130'] = 788;\n  t['a131'] = 788;\n  t['a132'] = 788;\n  t['a133'] = 788;\n  t['a134'] = 788;\n  t['a135'] = 788;\n  t['a136'] = 788;\n  t['a137'] = 788;\n  t['a138'] = 788;\n  t['a139'] = 788;\n  t['a140'] = 788;\n  t['a141'] = 788;\n  t['a142'] = 788;\n  t['a143'] = 788;\n  t['a144'] = 788;\n  t['a145'] = 788;\n  t['a146'] = 788;\n  t['a147'] = 788;\n  t['a148'] = 788;\n  t['a149'] = 788;\n  t['a150'] = 788;\n  t['a151'] = 788;\n  t['a152'] = 788;\n  t['a153'] = 788;\n  t['a154'] = 788;\n  t['a155'] = 788;\n  t['a156'] = 788;\n  t['a157'] = 788;\n  t['a158'] = 788;\n  t['a159'] = 788;\n  t['a160'] = 894;\n  t['a161'] = 838;\n  t['a163'] = 1016;\n  t['a164'] = 458;\n  t['a196'] = 748;\n  t['a165'] = 924;\n  t['a192'] = 748;\n  t['a166'] = 918;\n  t['a167'] = 927;\n  t['a168'] = 928;\n  t['a169'] = 928;\n  t['a170'] = 834;\n  t['a171'] = 873;\n  t['a172'] = 828;\n  t['a173'] = 924;\n  t['a162'] = 924;\n  t['a174'] = 917;\n  t['a175'] = 930;\n  t['a176'] = 931;\n  t['a177'] = 463;\n  t['a178'] = 883;\n  t['a179'] = 836;\n  t['a193'] = 836;\n  t['a180'] = 867;\n  t['a199'] = 867;\n  t['a181'] = 696;\n  t['a200'] = 696;\n  t['a182'] = 874;\n  t['a201'] = 874;\n  t['a183'] = 760;\n  t['a184'] = 946;\n  t['a197'] = 771;\n  t['a185'] = 865;\n  t['a194'] = 771;\n  t['a198'] = 888;\n  t['a186'] = 967;\n  t['a195'] = 888;\n  t['a187'] = 831;\n  t['a188'] = 873;\n  t['a189'] = 927;\n  t['a190'] = 970;\n  t['a191'] = 918;\n });\n});\nexports.getMetrics = getMetrics;\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar Uint32ArrayView = sharedUtil.Uint32ArrayView;\nvar MurmurHash3_64 = function MurmurHash3_64Closure(seed) {\n var MASK_HIGH = 0xffff0000;\n var MASK_LOW = 0xffff;\n function MurmurHash3_64(seed) {\n  var SEED = 0xc3d2e1f0;\n  this.h1 = seed ? seed & 0xffffffff : SEED;\n  this.h2 = seed ? seed & 0xffffffff : SEED;\n }\n var alwaysUseUint32ArrayView = false;\n try {\n  new Uint32Array(new Uint8Array(5).buffer, 0, 1);\n } catch (e) {\n  alwaysUseUint32ArrayView = true;\n }\n MurmurHash3_64.prototype = {\n  update: function MurmurHash3_64_update(input) {\n   var useUint32ArrayView = alwaysUseUint32ArrayView;\n   var i;\n   if (typeof input === 'string') {\n    var data = new Uint8Array(input.length * 2);\n    var length = 0;\n    for (i = 0; i < input.length; i++) {\n     var code = input.charCodeAt(i);\n     if (code <= 0xff) {\n      data[length++] = code;\n     } else {\n      data[length++] = code >>> 8;\n      data[length++] = code & 0xff;\n     }\n    }\n   } else if (input instanceof Uint8Array) {\n    data = input;\n    length = data.length;\n   } else if (typeof input === 'object' && 'length' in input) {\n    data = input;\n    length = data.length;\n    useUint32ArrayView = true;\n   } else {\n    throw new Error('Wrong data format in MurmurHash3_64_update. ' + 'Input must be a string or array.');\n   }\n   var blockCounts = length >> 2;\n   var tailLength = length - blockCounts * 4;\n   var dataUint32 = useUint32ArrayView ? new Uint32ArrayView(data, blockCounts) : new Uint32Array(data.buffer, 0, blockCounts);\n   var k1 = 0;\n   var k2 = 0;\n   var h1 = this.h1;\n   var h2 = this.h2;\n   var C1 = 0xcc9e2d51;\n   var C2 = 0x1b873593;\n   var C1_LOW = C1 & MASK_LOW;\n   var C2_LOW = C2 & MASK_LOW;\n   for (i = 0; i < blockCounts; i++) {\n    if (i & 1) {\n     k1 = dataUint32[i];\n     k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n     k1 = k1 << 15 | k1 >>> 17;\n     k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n     h1 ^= k1;\n     h1 = h1 << 13 | h1 >>> 19;\n     h1 = h1 * 5 + 0xe6546b64;\n    } else {\n     k2 = dataUint32[i];\n     k2 = k2 * C1 & MASK_HIGH | k2 * C1_LOW & MASK_LOW;\n     k2 = k2 << 15 | k2 >>> 17;\n     k2 = k2 * C2 & MASK_HIGH | k2 * C2_LOW & MASK_LOW;\n     h2 ^= k2;\n     h2 = h2 << 13 | h2 >>> 19;\n     h2 = h2 * 5 + 0xe6546b64;\n    }\n   }\n   k1 = 0;\n   switch (tailLength) {\n   case 3:\n    k1 ^= data[blockCounts * 4 + 2] << 16;\n   case 2:\n    k1 ^= data[blockCounts * 4 + 1] << 8;\n   case 1:\n    k1 ^= data[blockCounts * 4];\n    k1 = k1 * C1 & MASK_HIGH | k1 * C1_LOW & MASK_LOW;\n    k1 = k1 << 15 | k1 >>> 17;\n    k1 = k1 * C2 & MASK_HIGH | k1 * C2_LOW & MASK_LOW;\n    if (blockCounts & 1) {\n     h1 ^= k1;\n    } else {\n     h2 ^= k1;\n    }\n   }\n   this.h1 = h1;\n   this.h2 = h2;\n   return this;\n  },\n  hexdigest: function MurmurHash3_64_hexdigest() {\n   var h1 = this.h1;\n   var h2 = this.h2;\n   h1 ^= h2 >>> 1;\n   h1 = h1 * 0xed558ccd & MASK_HIGH | h1 * 0x8ccd & MASK_LOW;\n   h2 = h2 * 0xff51afd7 & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xafd7ed55 & MASK_HIGH) >>> 16;\n   h1 ^= h2 >>> 1;\n   h1 = h1 * 0x1a85ec53 & MASK_HIGH | h1 * 0xec53 & MASK_LOW;\n   h2 = h2 * 0xc4ceb9fe & MASK_HIGH | ((h2 << 16 | h1 >>> 16) * 0xb9fe1a85 & MASK_HIGH) >>> 16;\n   h1 ^= h2 >>> 1;\n   for (var i = 0, arr = [\n      h1,\n      h2\n     ], str = ''; i < arr.length; i++) {\n    var hex = (arr[i] >>> 0).toString(16);\n    while (hex.length < 8) {\n     hex = '0' + hex;\n    }\n    str += hex;\n   }\n   return str;\n  }\n };\n return MurmurHash3_64;\n}();\nexports.MurmurHash3_64 = MurmurHash3_64;\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar coreFunction = __w_pdfjs_require__(6);\nvar coreColorSpace = __w_pdfjs_require__(3);\nvar UNSUPPORTED_FEATURES = sharedUtil.UNSUPPORTED_FEATURES;\nvar MissingDataException = sharedUtil.MissingDataException;\nvar Util = sharedUtil.Util;\nvar assert = sharedUtil.assert;\nvar error = sharedUtil.error;\nvar info = sharedUtil.info;\nvar warn = sharedUtil.warn;\nvar isStream = corePrimitives.isStream;\nvar PDFFunction = coreFunction.PDFFunction;\nvar ColorSpace = coreColorSpace.ColorSpace;\nvar ShadingType = {\n FUNCTION_BASED: 1,\n AXIAL: 2,\n RADIAL: 3,\n FREE_FORM_MESH: 4,\n LATTICE_FORM_MESH: 5,\n COONS_PATCH_MESH: 6,\n TENSOR_PATCH_MESH: 7\n};\nvar Pattern = function PatternClosure() {\n function Pattern() {\n  error('should not call Pattern constructor');\n }\n Pattern.prototype = {\n  getPattern: function Pattern_getPattern(ctx) {\n   error('Should not call Pattern.getStyle: ' + ctx);\n  }\n };\n Pattern.parseShading = function Pattern_parseShading(shading, matrix, xref, res, handler) {\n  var dict = isStream(shading) ? shading.dict : shading;\n  var type = dict.get('ShadingType');\n  try {\n   switch (type) {\n   case ShadingType.AXIAL:\n   case ShadingType.RADIAL:\n    return new Shadings.RadialAxial(dict, matrix, xref, res);\n   case ShadingType.FREE_FORM_MESH:\n   case ShadingType.LATTICE_FORM_MESH:\n   case ShadingType.COONS_PATCH_MESH:\n   case ShadingType.TENSOR_PATCH_MESH:\n    return new Shadings.Mesh(shading, matrix, xref, res);\n   default:\n    throw new Error('Unsupported ShadingType: ' + type);\n   }\n  } catch (ex) {\n   if (ex instanceof MissingDataException) {\n    throw ex;\n   }\n   handler.send('UnsupportedFeature', { featureId: UNSUPPORTED_FEATURES.shadingPattern });\n   warn(ex);\n   return new Shadings.Dummy();\n  }\n };\n return Pattern;\n}();\nvar Shadings = {};\nShadings.SMALL_NUMBER = 1e-6;\nShadings.RadialAxial = function RadialAxialClosure() {\n function RadialAxial(dict, matrix, xref, res) {\n  this.matrix = matrix;\n  this.coordsArr = dict.getArray('Coords');\n  this.shadingType = dict.get('ShadingType');\n  this.type = 'Pattern';\n  var cs = dict.get('ColorSpace', 'CS');\n  cs = ColorSpace.parse(cs, xref, res);\n  this.cs = cs;\n  var t0 = 0.0, t1 = 1.0;\n  if (dict.has('Domain')) {\n   var domainArr = dict.getArray('Domain');\n   t0 = domainArr[0];\n   t1 = domainArr[1];\n  }\n  var extendStart = false, extendEnd = false;\n  if (dict.has('Extend')) {\n   var extendArr = dict.getArray('Extend');\n   extendStart = extendArr[0];\n   extendEnd = extendArr[1];\n  }\n  if (this.shadingType === ShadingType.RADIAL && (!extendStart || !extendEnd)) {\n   var x1 = this.coordsArr[0];\n   var y1 = this.coordsArr[1];\n   var r1 = this.coordsArr[2];\n   var x2 = this.coordsArr[3];\n   var y2 = this.coordsArr[4];\n   var r2 = this.coordsArr[5];\n   var distance = Math.sqrt((x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2));\n   if (r1 <= r2 + distance && r2 <= r1 + distance) {\n    warn('Unsupported radial gradient.');\n   }\n  }\n  this.extendStart = extendStart;\n  this.extendEnd = extendEnd;\n  var fnObj = dict.get('Function');\n  var fn = PDFFunction.parseArray(xref, fnObj);\n  var diff = t1 - t0;\n  var step = diff / 10;\n  var colorStops = this.colorStops = [];\n  if (t0 >= t1 || step <= 0) {\n   info('Bad shading domain.');\n   return;\n  }\n  var color = new Float32Array(cs.numComps), ratio = new Float32Array(1);\n  var rgbColor;\n  for (var i = t0; i <= t1; i += step) {\n   ratio[0] = i;\n   fn(ratio, 0, color, 0);\n   rgbColor = cs.getRgb(color, 0);\n   var cssColor = Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n   colorStops.push([\n    (i - t0) / diff,\n    cssColor\n   ]);\n  }\n  var background = 'transparent';\n  if (dict.has('Background')) {\n   rgbColor = cs.getRgb(dict.get('Background'), 0);\n   background = Util.makeCssRgb(rgbColor[0], rgbColor[1], rgbColor[2]);\n  }\n  if (!extendStart) {\n   colorStops.unshift([\n    0,\n    background\n   ]);\n   colorStops[1][0] += Shadings.SMALL_NUMBER;\n  }\n  if (!extendEnd) {\n   colorStops[colorStops.length - 1][0] -= Shadings.SMALL_NUMBER;\n   colorStops.push([\n    1,\n    background\n   ]);\n  }\n  this.colorStops = colorStops;\n }\n RadialAxial.prototype = {\n  getIR: function RadialAxial_getIR() {\n   var coordsArr = this.coordsArr;\n   var shadingType = this.shadingType;\n   var type, p0, p1, r0, r1;\n   if (shadingType === ShadingType.AXIAL) {\n    p0 = [\n     coordsArr[0],\n     coordsArr[1]\n    ];\n    p1 = [\n     coordsArr[2],\n     coordsArr[3]\n    ];\n    r0 = null;\n    r1 = null;\n    type = 'axial';\n   } else if (shadingType === ShadingType.RADIAL) {\n    p0 = [\n     coordsArr[0],\n     coordsArr[1]\n    ];\n    p1 = [\n     coordsArr[3],\n     coordsArr[4]\n    ];\n    r0 = coordsArr[2];\n    r1 = coordsArr[5];\n    type = 'radial';\n   } else {\n    error('getPattern type unknown: ' + shadingType);\n   }\n   var matrix = this.matrix;\n   if (matrix) {\n    p0 = Util.applyTransform(p0, matrix);\n    p1 = Util.applyTransform(p1, matrix);\n    if (shadingType === ShadingType.RADIAL) {\n     var scale = Util.singularValueDecompose2dScale(matrix);\n     r0 *= scale[0];\n     r1 *= scale[1];\n    }\n   }\n   return [\n    'RadialAxial',\n    type,\n    this.colorStops,\n    p0,\n    p1,\n    r0,\n    r1\n   ];\n  }\n };\n return RadialAxial;\n}();\nShadings.Mesh = function MeshClosure() {\n function MeshStreamReader(stream, context) {\n  this.stream = stream;\n  this.context = context;\n  this.buffer = 0;\n  this.bufferLength = 0;\n  var numComps = context.numComps;\n  this.tmpCompsBuf = new Float32Array(numComps);\n  var csNumComps = context.colorSpace.numComps;\n  this.tmpCsCompsBuf = context.colorFn ? new Float32Array(csNumComps) : this.tmpCompsBuf;\n }\n MeshStreamReader.prototype = {\n  get hasData() {\n   if (this.stream.end) {\n    return this.stream.pos < this.stream.end;\n   }\n   if (this.bufferLength > 0) {\n    return true;\n   }\n   var nextByte = this.stream.getByte();\n   if (nextByte < 0) {\n    return false;\n   }\n   this.buffer = nextByte;\n   this.bufferLength = 8;\n   return true;\n  },\n  readBits: function MeshStreamReader_readBits(n) {\n   var buffer = this.buffer;\n   var bufferLength = this.bufferLength;\n   if (n === 32) {\n    if (bufferLength === 0) {\n     return (this.stream.getByte() << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte()) >>> 0;\n    }\n    buffer = buffer << 24 | this.stream.getByte() << 16 | this.stream.getByte() << 8 | this.stream.getByte();\n    var nextByte = this.stream.getByte();\n    this.buffer = nextByte & (1 << bufferLength) - 1;\n    return (buffer << 8 - bufferLength | (nextByte & 0xFF) >> bufferLength) >>> 0;\n   }\n   if (n === 8 && bufferLength === 0) {\n    return this.stream.getByte();\n   }\n   while (bufferLength < n) {\n    buffer = buffer << 8 | this.stream.getByte();\n    bufferLength += 8;\n   }\n   bufferLength -= n;\n   this.bufferLength = bufferLength;\n   this.buffer = buffer & (1 << bufferLength) - 1;\n   return buffer >> bufferLength;\n  },\n  align: function MeshStreamReader_align() {\n   this.buffer = 0;\n   this.bufferLength = 0;\n  },\n  readFlag: function MeshStreamReader_readFlag() {\n   return this.readBits(this.context.bitsPerFlag);\n  },\n  readCoordinate: function MeshStreamReader_readCoordinate() {\n   var bitsPerCoordinate = this.context.bitsPerCoordinate;\n   var xi = this.readBits(bitsPerCoordinate);\n   var yi = this.readBits(bitsPerCoordinate);\n   var decode = this.context.decode;\n   var scale = bitsPerCoordinate < 32 ? 1 / ((1 << bitsPerCoordinate) - 1) : 2.3283064365386963e-10;\n   return [\n    xi * scale * (decode[1] - decode[0]) + decode[0],\n    yi * scale * (decode[3] - decode[2]) + decode[2]\n   ];\n  },\n  readComponents: function MeshStreamReader_readComponents() {\n   var numComps = this.context.numComps;\n   var bitsPerComponent = this.context.bitsPerComponent;\n   var scale = bitsPerComponent < 32 ? 1 / ((1 << bitsPerComponent) - 1) : 2.3283064365386963e-10;\n   var decode = this.context.decode;\n   var components = this.tmpCompsBuf;\n   for (var i = 0, j = 4; i < numComps; i++, j += 2) {\n    var ci = this.readBits(bitsPerComponent);\n    components[i] = ci * scale * (decode[j + 1] - decode[j]) + decode[j];\n   }\n   var color = this.tmpCsCompsBuf;\n   if (this.context.colorFn) {\n    this.context.colorFn(components, 0, color, 0);\n   }\n   return this.context.colorSpace.getRgb(color, 0);\n  }\n };\n function decodeType4Shading(mesh, reader) {\n  var coords = mesh.coords;\n  var colors = mesh.colors;\n  var operators = [];\n  var ps = [];\n  var verticesLeft = 0;\n  while (reader.hasData) {\n   var f = reader.readFlag();\n   var coord = reader.readCoordinate();\n   var color = reader.readComponents();\n   if (verticesLeft === 0) {\n    assert(0 <= f && f <= 2, 'Unknown type4 flag');\n    switch (f) {\n    case 0:\n     verticesLeft = 3;\n     break;\n    case 1:\n     ps.push(ps[ps.length - 2], ps[ps.length - 1]);\n     verticesLeft = 1;\n     break;\n    case 2:\n     ps.push(ps[ps.length - 3], ps[ps.length - 1]);\n     verticesLeft = 1;\n     break;\n    }\n    operators.push(f);\n   }\n   ps.push(coords.length);\n   coords.push(coord);\n   colors.push(color);\n   verticesLeft--;\n   reader.align();\n  }\n  mesh.figures.push({\n   type: 'triangles',\n   coords: new Int32Array(ps),\n   colors: new Int32Array(ps)\n  });\n }\n function decodeType5Shading(mesh, reader, verticesPerRow) {\n  var coords = mesh.coords;\n  var colors = mesh.colors;\n  var ps = [];\n  while (reader.hasData) {\n   var coord = reader.readCoordinate();\n   var color = reader.readComponents();\n   ps.push(coords.length);\n   coords.push(coord);\n   colors.push(color);\n  }\n  mesh.figures.push({\n   type: 'lattice',\n   coords: new Int32Array(ps),\n   colors: new Int32Array(ps),\n   verticesPerRow: verticesPerRow\n  });\n }\n var MIN_SPLIT_PATCH_CHUNKS_AMOUNT = 3;\n var MAX_SPLIT_PATCH_CHUNKS_AMOUNT = 20;\n var TRIANGLE_DENSITY = 20;\n var getB = function getBClosure() {\n  function buildB(count) {\n   var lut = [];\n   for (var i = 0; i <= count; i++) {\n    var t = i / count, t_ = 1 - t;\n    lut.push(new Float32Array([\n     t_ * t_ * t_,\n     3 * t * t_ * t_,\n     3 * t * t * t_,\n     t * t * t\n    ]));\n   }\n   return lut;\n  }\n  var cache = [];\n  return function getB(count) {\n   if (!cache[count]) {\n    cache[count] = buildB(count);\n   }\n   return cache[count];\n  };\n }();\n function buildFigureFromPatch(mesh, index) {\n  var figure = mesh.figures[index];\n  assert(figure.type === 'patch', 'Unexpected patch mesh figure');\n  var coords = mesh.coords, colors = mesh.colors;\n  var pi = figure.coords;\n  var ci = figure.colors;\n  var figureMinX = Math.min(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n  var figureMinY = Math.min(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n  var figureMaxX = Math.max(coords[pi[0]][0], coords[pi[3]][0], coords[pi[12]][0], coords[pi[15]][0]);\n  var figureMaxY = Math.max(coords[pi[0]][1], coords[pi[3]][1], coords[pi[12]][1], coords[pi[15]][1]);\n  var splitXBy = Math.ceil((figureMaxX - figureMinX) * TRIANGLE_DENSITY / (mesh.bounds[2] - mesh.bounds[0]));\n  splitXBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitXBy));\n  var splitYBy = Math.ceil((figureMaxY - figureMinY) * TRIANGLE_DENSITY / (mesh.bounds[3] - mesh.bounds[1]));\n  splitYBy = Math.max(MIN_SPLIT_PATCH_CHUNKS_AMOUNT, Math.min(MAX_SPLIT_PATCH_CHUNKS_AMOUNT, splitYBy));\n  var verticesPerRow = splitXBy + 1;\n  var figureCoords = new Int32Array((splitYBy + 1) * verticesPerRow);\n  var figureColors = new Int32Array((splitYBy + 1) * verticesPerRow);\n  var k = 0;\n  var cl = new Uint8Array(3), cr = new Uint8Array(3);\n  var c0 = colors[ci[0]], c1 = colors[ci[1]], c2 = colors[ci[2]], c3 = colors[ci[3]];\n  var bRow = getB(splitYBy), bCol = getB(splitXBy);\n  for (var row = 0; row <= splitYBy; row++) {\n   cl[0] = (c0[0] * (splitYBy - row) + c2[0] * row) / splitYBy | 0;\n   cl[1] = (c0[1] * (splitYBy - row) + c2[1] * row) / splitYBy | 0;\n   cl[2] = (c0[2] * (splitYBy - row) + c2[2] * row) / splitYBy | 0;\n   cr[0] = (c1[0] * (splitYBy - row) + c3[0] * row) / splitYBy | 0;\n   cr[1] = (c1[1] * (splitYBy - row) + c3[1] * row) / splitYBy | 0;\n   cr[2] = (c1[2] * (splitYBy - row) + c3[2] * row) / splitYBy | 0;\n   for (var col = 0; col <= splitXBy; col++, k++) {\n    if ((row === 0 || row === splitYBy) && (col === 0 || col === splitXBy)) {\n     continue;\n    }\n    var x = 0, y = 0;\n    var q = 0;\n    for (var i = 0; i <= 3; i++) {\n     for (var j = 0; j <= 3; j++, q++) {\n      var m = bRow[row][i] * bCol[col][j];\n      x += coords[pi[q]][0] * m;\n      y += coords[pi[q]][1] * m;\n     }\n    }\n    figureCoords[k] = coords.length;\n    coords.push([\n     x,\n     y\n    ]);\n    figureColors[k] = colors.length;\n    var newColor = new Uint8Array(3);\n    newColor[0] = (cl[0] * (splitXBy - col) + cr[0] * col) / splitXBy | 0;\n    newColor[1] = (cl[1] * (splitXBy - col) + cr[1] * col) / splitXBy | 0;\n    newColor[2] = (cl[2] * (splitXBy - col) + cr[2] * col) / splitXBy | 0;\n    colors.push(newColor);\n   }\n  }\n  figureCoords[0] = pi[0];\n  figureColors[0] = ci[0];\n  figureCoords[splitXBy] = pi[3];\n  figureColors[splitXBy] = ci[1];\n  figureCoords[verticesPerRow * splitYBy] = pi[12];\n  figureColors[verticesPerRow * splitYBy] = ci[2];\n  figureCoords[verticesPerRow * splitYBy + splitXBy] = pi[15];\n  figureColors[verticesPerRow * splitYBy + splitXBy] = ci[3];\n  mesh.figures[index] = {\n   type: 'lattice',\n   coords: figureCoords,\n   colors: figureColors,\n   verticesPerRow: verticesPerRow\n  };\n }\n function decodeType6Shading(mesh, reader) {\n  var coords = mesh.coords;\n  var colors = mesh.colors;\n  var ps = new Int32Array(16);\n  var cs = new Int32Array(4);\n  while (reader.hasData) {\n   var f = reader.readFlag();\n   assert(0 <= f && f <= 3, 'Unknown type6 flag');\n   var i, ii;\n   var pi = coords.length;\n   for (i = 0, ii = f !== 0 ? 8 : 12; i < ii; i++) {\n    coords.push(reader.readCoordinate());\n   }\n   var ci = colors.length;\n   for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n    colors.push(reader.readComponents());\n   }\n   var tmp1, tmp2, tmp3, tmp4;\n   switch (f) {\n   case 0:\n    ps[12] = pi + 3;\n    ps[13] = pi + 4;\n    ps[14] = pi + 5;\n    ps[15] = pi + 6;\n    ps[8] = pi + 2;\n    ps[11] = pi + 7;\n    ps[4] = pi + 1;\n    ps[7] = pi + 8;\n    ps[0] = pi;\n    ps[1] = pi + 11;\n    ps[2] = pi + 10;\n    ps[3] = pi + 9;\n    cs[2] = ci + 1;\n    cs[3] = ci + 2;\n    cs[0] = ci;\n    cs[1] = ci + 3;\n    break;\n   case 1:\n    tmp1 = ps[12];\n    tmp2 = ps[13];\n    tmp3 = ps[14];\n    tmp4 = ps[15];\n    ps[12] = tmp4;\n    ps[13] = pi + 0;\n    ps[14] = pi + 1;\n    ps[15] = pi + 2;\n    ps[8] = tmp3;\n    ps[11] = pi + 3;\n    ps[4] = tmp2;\n    ps[7] = pi + 4;\n    ps[0] = tmp1;\n    ps[1] = pi + 7;\n    ps[2] = pi + 6;\n    ps[3] = pi + 5;\n    tmp1 = cs[2];\n    tmp2 = cs[3];\n    cs[2] = tmp2;\n    cs[3] = ci;\n    cs[0] = tmp1;\n    cs[1] = ci + 1;\n    break;\n   case 2:\n    tmp1 = ps[15];\n    tmp2 = ps[11];\n    ps[12] = ps[3];\n    ps[13] = pi + 0;\n    ps[14] = pi + 1;\n    ps[15] = pi + 2;\n    ps[8] = ps[7];\n    ps[11] = pi + 3;\n    ps[4] = tmp2;\n    ps[7] = pi + 4;\n    ps[0] = tmp1;\n    ps[1] = pi + 7;\n    ps[2] = pi + 6;\n    ps[3] = pi + 5;\n    tmp1 = cs[3];\n    cs[2] = cs[1];\n    cs[3] = ci;\n    cs[0] = tmp1;\n    cs[1] = ci + 1;\n    break;\n   case 3:\n    ps[12] = ps[0];\n    ps[13] = pi + 0;\n    ps[14] = pi + 1;\n    ps[15] = pi + 2;\n    ps[8] = ps[1];\n    ps[11] = pi + 3;\n    ps[4] = ps[2];\n    ps[7] = pi + 4;\n    ps[0] = ps[3];\n    ps[1] = pi + 7;\n    ps[2] = pi + 6;\n    ps[3] = pi + 5;\n    cs[2] = cs[0];\n    cs[3] = ci;\n    cs[0] = cs[1];\n    cs[1] = ci + 1;\n    break;\n   }\n   ps[5] = coords.length;\n   coords.push([\n    (-4 * coords[ps[0]][0] - coords[ps[15]][0] + 6 * (coords[ps[4]][0] + coords[ps[1]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[13]][0] + coords[ps[7]][0])) / 9,\n    (-4 * coords[ps[0]][1] - coords[ps[15]][1] + 6 * (coords[ps[4]][1] + coords[ps[1]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[13]][1] + coords[ps[7]][1])) / 9\n   ]);\n   ps[6] = coords.length;\n   coords.push([\n    (-4 * coords[ps[3]][0] - coords[ps[12]][0] + 6 * (coords[ps[2]][0] + coords[ps[7]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[4]][0] + coords[ps[14]][0])) / 9,\n    (-4 * coords[ps[3]][1] - coords[ps[12]][1] + 6 * (coords[ps[2]][1] + coords[ps[7]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[4]][1] + coords[ps[14]][1])) / 9\n   ]);\n   ps[9] = coords.length;\n   coords.push([\n    (-4 * coords[ps[12]][0] - coords[ps[3]][0] + 6 * (coords[ps[8]][0] + coords[ps[13]][0]) - 2 * (coords[ps[0]][0] + coords[ps[15]][0]) + 3 * (coords[ps[11]][0] + coords[ps[1]][0])) / 9,\n    (-4 * coords[ps[12]][1] - coords[ps[3]][1] + 6 * (coords[ps[8]][1] + coords[ps[13]][1]) - 2 * (coords[ps[0]][1] + coords[ps[15]][1]) + 3 * (coords[ps[11]][1] + coords[ps[1]][1])) / 9\n   ]);\n   ps[10] = coords.length;\n   coords.push([\n    (-4 * coords[ps[15]][0] - coords[ps[0]][0] + 6 * (coords[ps[11]][0] + coords[ps[14]][0]) - 2 * (coords[ps[12]][0] + coords[ps[3]][0]) + 3 * (coords[ps[2]][0] + coords[ps[8]][0])) / 9,\n    (-4 * coords[ps[15]][1] - coords[ps[0]][1] + 6 * (coords[ps[11]][1] + coords[ps[14]][1]) - 2 * (coords[ps[12]][1] + coords[ps[3]][1]) + 3 * (coords[ps[2]][1] + coords[ps[8]][1])) / 9\n   ]);\n   mesh.figures.push({\n    type: 'patch',\n    coords: new Int32Array(ps),\n    colors: new Int32Array(cs)\n   });\n  }\n }\n function decodeType7Shading(mesh, reader) {\n  var coords = mesh.coords;\n  var colors = mesh.colors;\n  var ps = new Int32Array(16);\n  var cs = new Int32Array(4);\n  while (reader.hasData) {\n   var f = reader.readFlag();\n   assert(0 <= f && f <= 3, 'Unknown type7 flag');\n   var i, ii;\n   var pi = coords.length;\n   for (i = 0, ii = f !== 0 ? 12 : 16; i < ii; i++) {\n    coords.push(reader.readCoordinate());\n   }\n   var ci = colors.length;\n   for (i = 0, ii = f !== 0 ? 2 : 4; i < ii; i++) {\n    colors.push(reader.readComponents());\n   }\n   var tmp1, tmp2, tmp3, tmp4;\n   switch (f) {\n   case 0:\n    ps[12] = pi + 3;\n    ps[13] = pi + 4;\n    ps[14] = pi + 5;\n    ps[15] = pi + 6;\n    ps[8] = pi + 2;\n    ps[9] = pi + 13;\n    ps[10] = pi + 14;\n    ps[11] = pi + 7;\n    ps[4] = pi + 1;\n    ps[5] = pi + 12;\n    ps[6] = pi + 15;\n    ps[7] = pi + 8;\n    ps[0] = pi;\n    ps[1] = pi + 11;\n    ps[2] = pi + 10;\n    ps[3] = pi + 9;\n    cs[2] = ci + 1;\n    cs[3] = ci + 2;\n    cs[0] = ci;\n    cs[1] = ci + 3;\n    break;\n   case 1:\n    tmp1 = ps[12];\n    tmp2 = ps[13];\n    tmp3 = ps[14];\n    tmp4 = ps[15];\n    ps[12] = tmp4;\n    ps[13] = pi + 0;\n    ps[14] = pi + 1;\n    ps[15] = pi + 2;\n    ps[8] = tmp3;\n    ps[9] = pi + 9;\n    ps[10] = pi + 10;\n    ps[11] = pi + 3;\n    ps[4] = tmp2;\n    ps[5] = pi + 8;\n    ps[6] = pi + 11;\n    ps[7] = pi + 4;\n    ps[0] = tmp1;\n    ps[1] = pi + 7;\n    ps[2] = pi + 6;\n    ps[3] = pi + 5;\n    tmp1 = cs[2];\n    tmp2 = cs[3];\n    cs[2] = tmp2;\n    cs[3] = ci;\n    cs[0] = tmp1;\n    cs[1] = ci + 1;\n    break;\n   case 2:\n    tmp1 = ps[15];\n    tmp2 = ps[11];\n    ps[12] = ps[3];\n    ps[13] = pi + 0;\n    ps[14] = pi + 1;\n    ps[15] = pi + 2;\n    ps[8] = ps[7];\n    ps[9] = pi + 9;\n    ps[10] = pi + 10;\n    ps[11] = pi + 3;\n    ps[4] = tmp2;\n    ps[5] = pi + 8;\n    ps[6] = pi + 11;\n    ps[7] = pi + 4;\n    ps[0] = tmp1;\n    ps[1] = pi + 7;\n    ps[2] = pi + 6;\n    ps[3] = pi + 5;\n    tmp1 = cs[3];\n    cs[2] = cs[1];\n    cs[3] = ci;\n    cs[0] = tmp1;\n    cs[1] = ci + 1;\n    break;\n   case 3:\n    ps[12] = ps[0];\n    ps[13] = pi + 0;\n    ps[14] = pi + 1;\n    ps[15] = pi + 2;\n    ps[8] = ps[1];\n    ps[9] = pi + 9;\n    ps[10] = pi + 10;\n    ps[11] = pi + 3;\n    ps[4] = ps[2];\n    ps[5] = pi + 8;\n    ps[6] = pi + 11;\n    ps[7] = pi + 4;\n    ps[0] = ps[3];\n    ps[1] = pi + 7;\n    ps[2] = pi + 6;\n    ps[3] = pi + 5;\n    cs[2] = cs[0];\n    cs[3] = ci;\n    cs[0] = cs[1];\n    cs[1] = ci + 1;\n    break;\n   }\n   mesh.figures.push({\n    type: 'patch',\n    coords: new Int32Array(ps),\n    colors: new Int32Array(cs)\n   });\n  }\n }\n function updateBounds(mesh) {\n  var minX = mesh.coords[0][0], minY = mesh.coords[0][1], maxX = minX, maxY = minY;\n  for (var i = 1, ii = mesh.coords.length; i < ii; i++) {\n   var x = mesh.coords[i][0], y = mesh.coords[i][1];\n   minX = minX > x ? x : minX;\n   minY = minY > y ? y : minY;\n   maxX = maxX < x ? x : maxX;\n   maxY = maxY < y ? y : maxY;\n  }\n  mesh.bounds = [\n   minX,\n   minY,\n   maxX,\n   maxY\n  ];\n }\n function packData(mesh) {\n  var i, ii, j, jj;\n  var coords = mesh.coords;\n  var coordsPacked = new Float32Array(coords.length * 2);\n  for (i = 0, j = 0, ii = coords.length; i < ii; i++) {\n   var xy = coords[i];\n   coordsPacked[j++] = xy[0];\n   coordsPacked[j++] = xy[1];\n  }\n  mesh.coords = coordsPacked;\n  var colors = mesh.colors;\n  var colorsPacked = new Uint8Array(colors.length * 3);\n  for (i = 0, j = 0, ii = colors.length; i < ii; i++) {\n   var c = colors[i];\n   colorsPacked[j++] = c[0];\n   colorsPacked[j++] = c[1];\n   colorsPacked[j++] = c[2];\n  }\n  mesh.colors = colorsPacked;\n  var figures = mesh.figures;\n  for (i = 0, ii = figures.length; i < ii; i++) {\n   var figure = figures[i], ps = figure.coords, cs = figure.colors;\n   for (j = 0, jj = ps.length; j < jj; j++) {\n    ps[j] *= 2;\n    cs[j] *= 3;\n   }\n  }\n }\n function Mesh(stream, matrix, xref, res) {\n  assert(isStream(stream), 'Mesh data is not a stream');\n  var dict = stream.dict;\n  this.matrix = matrix;\n  this.shadingType = dict.get('ShadingType');\n  this.type = 'Pattern';\n  this.bbox = dict.getArray('BBox');\n  var cs = dict.get('ColorSpace', 'CS');\n  cs = ColorSpace.parse(cs, xref, res);\n  this.cs = cs;\n  this.background = dict.has('Background') ? cs.getRgb(dict.get('Background'), 0) : null;\n  var fnObj = dict.get('Function');\n  var fn = fnObj ? PDFFunction.parseArray(xref, fnObj) : null;\n  this.coords = [];\n  this.colors = [];\n  this.figures = [];\n  var decodeContext = {\n   bitsPerCoordinate: dict.get('BitsPerCoordinate'),\n   bitsPerComponent: dict.get('BitsPerComponent'),\n   bitsPerFlag: dict.get('BitsPerFlag'),\n   decode: dict.getArray('Decode'),\n   colorFn: fn,\n   colorSpace: cs,\n   numComps: fn ? 1 : cs.numComps\n  };\n  var reader = new MeshStreamReader(stream, decodeContext);\n  var patchMesh = false;\n  switch (this.shadingType) {\n  case ShadingType.FREE_FORM_MESH:\n   decodeType4Shading(this, reader);\n   break;\n  case ShadingType.LATTICE_FORM_MESH:\n   var verticesPerRow = dict.get('VerticesPerRow') | 0;\n   assert(verticesPerRow >= 2, 'Invalid VerticesPerRow');\n   decodeType5Shading(this, reader, verticesPerRow);\n   break;\n  case ShadingType.COONS_PATCH_MESH:\n   decodeType6Shading(this, reader);\n   patchMesh = true;\n   break;\n  case ShadingType.TENSOR_PATCH_MESH:\n   decodeType7Shading(this, reader);\n   patchMesh = true;\n   break;\n  default:\n   error('Unsupported mesh type.');\n   break;\n  }\n  if (patchMesh) {\n   updateBounds(this);\n   for (var i = 0, ii = this.figures.length; i < ii; i++) {\n    buildFigureFromPatch(this, i);\n   }\n  }\n  updateBounds(this);\n  packData(this);\n }\n Mesh.prototype = {\n  getIR: function Mesh_getIR() {\n   return [\n    'Mesh',\n    this.shadingType,\n    this.coords,\n    this.colors,\n    this.figures,\n    this.bounds,\n    this.matrix,\n    this.bbox,\n    this.background\n   ];\n  }\n };\n return Mesh;\n}();\nShadings.Dummy = function DummyClosure() {\n function Dummy() {\n  this.type = 'Pattern';\n }\n Dummy.prototype = {\n  getIR: function Dummy_getIR() {\n   return ['Dummy'];\n  }\n };\n return Dummy;\n}();\nfunction getTilingPatternIR(operatorList, dict, args) {\n var matrix = dict.getArray('Matrix');\n var bbox = dict.getArray('BBox');\n var xstep = dict.get('XStep');\n var ystep = dict.get('YStep');\n var paintType = dict.get('PaintType');\n var tilingType = dict.get('TilingType');\n return [\n  'TilingPattern',\n  args,\n  operatorList,\n  matrix,\n  bbox,\n  xstep,\n  ystep,\n  paintType,\n  tilingType\n ];\n}\nexports.Pattern = Pattern;\nexports.getTilingPatternIR = getTilingPatternIR;\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar coreStream = __w_pdfjs_require__(2);\nvar coreChunkedStream = __w_pdfjs_require__(12);\nvar coreDocument = __w_pdfjs_require__(24);\nvar warn = sharedUtil.warn;\nvar createValidAbsoluteUrl = sharedUtil.createValidAbsoluteUrl;\nvar shadow = sharedUtil.shadow;\nvar NotImplementedException = sharedUtil.NotImplementedException;\nvar MissingDataException = sharedUtil.MissingDataException;\nvar createPromiseCapability = sharedUtil.createPromiseCapability;\nvar Util = sharedUtil.Util;\nvar Stream = coreStream.Stream;\nvar ChunkedStreamManager = coreChunkedStream.ChunkedStreamManager;\nvar PDFDocument = coreDocument.PDFDocument;\nvar BasePdfManager = function BasePdfManagerClosure() {\n function BasePdfManager() {\n  throw new Error('Cannot initialize BaseManagerManager');\n }\n BasePdfManager.prototype = {\n  get docId() {\n   return this._docId;\n  },\n  get password() {\n   return this._password;\n  },\n  get docBaseUrl() {\n   var docBaseUrl = null;\n   if (this._docBaseUrl) {\n    var absoluteUrl = createValidAbsoluteUrl(this._docBaseUrl);\n    if (absoluteUrl) {\n     docBaseUrl = absoluteUrl.href;\n    } else {\n     warn('Invalid absolute docBaseUrl: \"' + this._docBaseUrl + '\".');\n    }\n   }\n   return shadow(this, 'docBaseUrl', docBaseUrl);\n  },\n  onLoadedStream: function BasePdfManager_onLoadedStream() {\n   throw new NotImplementedException();\n  },\n  ensureDoc: function BasePdfManager_ensureDoc(prop, args) {\n   return this.ensure(this.pdfDocument, prop, args);\n  },\n  ensureXRef: function BasePdfManager_ensureXRef(prop, args) {\n   return this.ensure(this.pdfDocument.xref, prop, args);\n  },\n  ensureCatalog: function BasePdfManager_ensureCatalog(prop, args) {\n   return this.ensure(this.pdfDocument.catalog, prop, args);\n  },\n  getPage: function BasePdfManager_getPage(pageIndex) {\n   return this.pdfDocument.getPage(pageIndex);\n  },\n  cleanup: function BasePdfManager_cleanup() {\n   return this.pdfDocument.cleanup();\n  },\n  ensure: function BasePdfManager_ensure(obj, prop, args) {\n   return new NotImplementedException();\n  },\n  requestRange: function BasePdfManager_requestRange(begin, end) {\n   return new NotImplementedException();\n  },\n  requestLoadedStream: function BasePdfManager_requestLoadedStream() {\n   return new NotImplementedException();\n  },\n  sendProgressiveData: function BasePdfManager_sendProgressiveData(chunk) {\n   return new NotImplementedException();\n  },\n  updatePassword: function BasePdfManager_updatePassword(password) {\n   this._password = password;\n  },\n  terminate: function BasePdfManager_terminate() {\n   return new NotImplementedException();\n  }\n };\n return BasePdfManager;\n}();\nvar LocalPdfManager = function LocalPdfManagerClosure() {\n function LocalPdfManager(docId, data, password, evaluatorOptions, docBaseUrl) {\n  this._docId = docId;\n  this._password = password;\n  this._docBaseUrl = docBaseUrl;\n  this.evaluatorOptions = evaluatorOptions;\n  var stream = new Stream(data);\n  this.pdfDocument = new PDFDocument(this, stream);\n  this._loadedStreamCapability = createPromiseCapability();\n  this._loadedStreamCapability.resolve(stream);\n }\n Util.inherit(LocalPdfManager, BasePdfManager, {\n  ensure: function LocalPdfManager_ensure(obj, prop, args) {\n   return new Promise(function (resolve, reject) {\n    try {\n     var value = obj[prop];\n     var result;\n     if (typeof value === 'function') {\n      result = value.apply(obj, args);\n     } else {\n      result = value;\n     }\n     resolve(result);\n    } catch (e) {\n     reject(e);\n    }\n   });\n  },\n  requestRange: function LocalPdfManager_requestRange(begin, end) {\n   return Promise.resolve();\n  },\n  requestLoadedStream: function LocalPdfManager_requestLoadedStream() {\n  },\n  onLoadedStream: function LocalPdfManager_onLoadedStream() {\n   return this._loadedStreamCapability.promise;\n  },\n  terminate: function LocalPdfManager_terminate() {\n  }\n });\n return LocalPdfManager;\n}();\nvar NetworkPdfManager = function NetworkPdfManagerClosure() {\n function NetworkPdfManager(docId, pdfNetworkStream, args, evaluatorOptions, docBaseUrl) {\n  this._docId = docId;\n  this._password = args.password;\n  this._docBaseUrl = docBaseUrl;\n  this.msgHandler = args.msgHandler;\n  this.evaluatorOptions = evaluatorOptions;\n  var params = {\n   msgHandler: args.msgHandler,\n   url: args.url,\n   length: args.length,\n   disableAutoFetch: args.disableAutoFetch,\n   rangeChunkSize: args.rangeChunkSize\n  };\n  this.streamManager = new ChunkedStreamManager(pdfNetworkStream, params);\n  this.pdfDocument = new PDFDocument(this, this.streamManager.getStream());\n }\n Util.inherit(NetworkPdfManager, BasePdfManager, {\n  ensure: function NetworkPdfManager_ensure(obj, prop, args) {\n   var pdfManager = this;\n   return new Promise(function (resolve, reject) {\n    function ensureHelper() {\n     try {\n      var result;\n      var value = obj[prop];\n      if (typeof value === 'function') {\n       result = value.apply(obj, args);\n      } else {\n       result = value;\n      }\n      resolve(result);\n     } catch (e) {\n      if (!(e instanceof MissingDataException)) {\n       reject(e);\n       return;\n      }\n      pdfManager.streamManager.requestRange(e.begin, e.end).then(ensureHelper, reject);\n     }\n    }\n    ensureHelper();\n   });\n  },\n  requestRange: function NetworkPdfManager_requestRange(begin, end) {\n   return this.streamManager.requestRange(begin, end);\n  },\n  requestLoadedStream: function NetworkPdfManager_requestLoadedStream() {\n   this.streamManager.requestAllChunks();\n  },\n  sendProgressiveData: function NetworkPdfManager_sendProgressiveData(chunk) {\n   this.streamManager.onReceiveData({ chunk: chunk });\n  },\n  onLoadedStream: function NetworkPdfManager_onLoadedStream() {\n   return this.streamManager.onLoadedStream();\n  },\n  terminate: function NetworkPdfManager_terminate() {\n   this.streamManager.abort();\n  }\n });\n return NetworkPdfManager;\n}();\nexports.LocalPdfManager = LocalPdfManager;\nexports.NetworkPdfManager = NetworkPdfManager;\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar corePrimitives = __w_pdfjs_require__(1);\nvar error = sharedUtil.error;\nvar isSpace = sharedUtil.isSpace;\nvar EOF = corePrimitives.EOF;\nvar PostScriptParser = function PostScriptParserClosure() {\n function PostScriptParser(lexer) {\n  this.lexer = lexer;\n  this.operators = [];\n  this.token = null;\n  this.prev = null;\n }\n PostScriptParser.prototype = {\n  nextToken: function PostScriptParser_nextToken() {\n   this.prev = this.token;\n   this.token = this.lexer.getToken();\n  },\n  accept: function PostScriptParser_accept(type) {\n   if (this.token.type === type) {\n    this.nextToken();\n    return true;\n   }\n   return false;\n  },\n  expect: function PostScriptParser_expect(type) {\n   if (this.accept(type)) {\n    return true;\n   }\n   error('Unexpected symbol: found ' + this.token.type + ' expected ' + type + '.');\n  },\n  parse: function PostScriptParser_parse() {\n   this.nextToken();\n   this.expect(PostScriptTokenTypes.LBRACE);\n   this.parseBlock();\n   this.expect(PostScriptTokenTypes.RBRACE);\n   return this.operators;\n  },\n  parseBlock: function PostScriptParser_parseBlock() {\n   while (true) {\n    if (this.accept(PostScriptTokenTypes.NUMBER)) {\n     this.operators.push(this.prev.value);\n    } else if (this.accept(PostScriptTokenTypes.OPERATOR)) {\n     this.operators.push(this.prev.value);\n    } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n     this.parseCondition();\n    } else {\n     return;\n    }\n   }\n  },\n  parseCondition: function PostScriptParser_parseCondition() {\n   var conditionLocation = this.operators.length;\n   this.operators.push(null, null);\n   this.parseBlock();\n   this.expect(PostScriptTokenTypes.RBRACE);\n   if (this.accept(PostScriptTokenTypes.IF)) {\n    this.operators[conditionLocation] = this.operators.length;\n    this.operators[conditionLocation + 1] = 'jz';\n   } else if (this.accept(PostScriptTokenTypes.LBRACE)) {\n    var jumpLocation = this.operators.length;\n    this.operators.push(null, null);\n    var endOfTrue = this.operators.length;\n    this.parseBlock();\n    this.expect(PostScriptTokenTypes.RBRACE);\n    this.expect(PostScriptTokenTypes.IFELSE);\n    this.operators[jumpLocation] = this.operators.length;\n    this.operators[jumpLocation + 1] = 'j';\n    this.operators[conditionLocation] = endOfTrue;\n    this.operators[conditionLocation + 1] = 'jz';\n   } else {\n    error('PS Function: error parsing conditional.');\n   }\n  }\n };\n return PostScriptParser;\n}();\nvar PostScriptTokenTypes = {\n LBRACE: 0,\n RBRACE: 1,\n NUMBER: 2,\n OPERATOR: 3,\n IF: 4,\n IFELSE: 5\n};\nvar PostScriptToken = function PostScriptTokenClosure() {\n function PostScriptToken(type, value) {\n  this.type = type;\n  this.value = value;\n }\n var opCache = Object.create(null);\n PostScriptToken.getOperator = function PostScriptToken_getOperator(op) {\n  var opValue = opCache[op];\n  if (opValue) {\n   return opValue;\n  }\n  return opCache[op] = new PostScriptToken(PostScriptTokenTypes.OPERATOR, op);\n };\n PostScriptToken.LBRACE = new PostScriptToken(PostScriptTokenTypes.LBRACE, '{');\n PostScriptToken.RBRACE = new PostScriptToken(PostScriptTokenTypes.RBRACE, '}');\n PostScriptToken.IF = new PostScriptToken(PostScriptTokenTypes.IF, 'IF');\n PostScriptToken.IFELSE = new PostScriptToken(PostScriptTokenTypes.IFELSE, 'IFELSE');\n return PostScriptToken;\n}();\nvar PostScriptLexer = function PostScriptLexerClosure() {\n function PostScriptLexer(stream) {\n  this.stream = stream;\n  this.nextChar();\n  this.strBuf = [];\n }\n PostScriptLexer.prototype = {\n  nextChar: function PostScriptLexer_nextChar() {\n   return this.currentChar = this.stream.getByte();\n  },\n  getToken: function PostScriptLexer_getToken() {\n   var comment = false;\n   var ch = this.currentChar;\n   while (true) {\n    if (ch < 0) {\n     return EOF;\n    }\n    if (comment) {\n     if (ch === 0x0A || ch === 0x0D) {\n      comment = false;\n     }\n    } else if (ch === 0x25) {\n     comment = true;\n    } else if (!isSpace(ch)) {\n     break;\n    }\n    ch = this.nextChar();\n   }\n   switch (ch | 0) {\n   case 0x30:\n   case 0x31:\n   case 0x32:\n   case 0x33:\n   case 0x34:\n   case 0x35:\n   case 0x36:\n   case 0x37:\n   case 0x38:\n   case 0x39:\n   case 0x2B:\n   case 0x2D:\n   case 0x2E:\n    return new PostScriptToken(PostScriptTokenTypes.NUMBER, this.getNumber());\n   case 0x7B:\n    this.nextChar();\n    return PostScriptToken.LBRACE;\n   case 0x7D:\n    this.nextChar();\n    return PostScriptToken.RBRACE;\n   }\n   var strBuf = this.strBuf;\n   strBuf.length = 0;\n   strBuf[0] = String.fromCharCode(ch);\n   while ((ch = this.nextChar()) >= 0 && (ch >= 0x41 && ch <= 0x5A || ch >= 0x61 && ch <= 0x7A)) {\n    strBuf.push(String.fromCharCode(ch));\n   }\n   var str = strBuf.join('');\n   switch (str.toLowerCase()) {\n   case 'if':\n    return PostScriptToken.IF;\n   case 'ifelse':\n    return PostScriptToken.IFELSE;\n   default:\n    return PostScriptToken.getOperator(str);\n   }\n  },\n  getNumber: function PostScriptLexer_getNumber() {\n   var ch = this.currentChar;\n   var strBuf = this.strBuf;\n   strBuf.length = 0;\n   strBuf[0] = String.fromCharCode(ch);\n   while ((ch = this.nextChar()) >= 0) {\n    if (ch >= 0x30 && ch <= 0x39 || ch === 0x2D || ch === 0x2E) {\n     strBuf.push(String.fromCharCode(ch));\n    } else {\n     break;\n    }\n   }\n   var value = parseFloat(strBuf.join(''));\n   if (isNaN(value)) {\n    error('Invalid floating point number: ' + value);\n   }\n   return value;\n  }\n };\n return PostScriptLexer;\n}();\nexports.PostScriptLexer = PostScriptLexer;\nexports.PostScriptParser = PostScriptParser;\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar sharedUtil = __w_pdfjs_require__(0);\nvar coreStream = __w_pdfjs_require__(2);\nvar coreEncodings = __w_pdfjs_require__(4);\nvar warn = sharedUtil.warn;\nvar isSpace = sharedUtil.isSpace;\nvar Stream = coreStream.Stream;\nvar getEncoding = coreEncodings.getEncoding;\nvar HINTING_ENABLED = false;\nvar Type1CharString = function Type1CharStringClosure() {\n var COMMAND_MAP = {\n  'hstem': [1],\n  'vstem': [3],\n  'vmoveto': [4],\n  'rlineto': [5],\n  'hlineto': [6],\n  'vlineto': [7],\n  'rrcurveto': [8],\n  'callsubr': [10],\n  'flex': [\n   12,\n   35\n  ],\n  'drop': [\n   12,\n   18\n  ],\n  'endchar': [14],\n  'rmoveto': [21],\n  'hmoveto': [22],\n  'vhcurveto': [30],\n  'hvcurveto': [31]\n };\n function Type1CharString() {\n  this.width = 0;\n  this.lsb = 0;\n  this.flexing = false;\n  this.output = [];\n  this.stack = [];\n }\n Type1CharString.prototype = {\n  convert: function Type1CharString_convert(encoded, subrs, seacAnalysisEnabled) {\n   var count = encoded.length;\n   var error = false;\n   var wx, sbx, subrNumber;\n   for (var i = 0; i < count; i++) {\n    var value = encoded[i];\n    if (value < 32) {\n     if (value === 12) {\n      value = (value << 8) + encoded[++i];\n     }\n     switch (value) {\n     case 1:\n      if (!HINTING_ENABLED) {\n       this.stack = [];\n       break;\n      }\n      error = this.executeCommand(2, COMMAND_MAP.hstem);\n      break;\n     case 3:\n      if (!HINTING_ENABLED) {\n       this.stack = [];\n       break;\n      }\n      error = this.executeCommand(2, COMMAND_MAP.vstem);\n      break;\n     case 4:\n      if (this.flexing) {\n       if (this.stack.length < 1) {\n        error = true;\n        break;\n       }\n       var dy = this.stack.pop();\n       this.stack.push(0, dy);\n       break;\n      }\n      error = this.executeCommand(1, COMMAND_MAP.vmoveto);\n      break;\n     case 5:\n      error = this.executeCommand(2, COMMAND_MAP.rlineto);\n      break;\n     case 6:\n      error = this.executeCommand(1, COMMAND_MAP.hlineto);\n      break;\n     case 7:\n      error = this.executeCommand(1, COMMAND_MAP.vlineto);\n      break;\n     case 8:\n      error = this.executeCommand(6, COMMAND_MAP.rrcurveto);\n      break;\n     case 9:\n      this.stack = [];\n      break;\n     case 10:\n      if (this.stack.length < 1) {\n       error = true;\n       break;\n      }\n      subrNumber = this.stack.pop();\n      error = this.convert(subrs[subrNumber], subrs, seacAnalysisEnabled);\n      break;\n     case 11:\n      return error;\n     case 13:\n      if (this.stack.length < 2) {\n       error = true;\n       break;\n      }\n      wx = this.stack.pop();\n      sbx = this.stack.pop();\n      this.lsb = sbx;\n      this.width = wx;\n      this.stack.push(wx, sbx);\n      error = this.executeCommand(2, COMMAND_MAP.hmoveto);\n      break;\n     case 14:\n      this.output.push(COMMAND_MAP.endchar[0]);\n      break;\n     case 21:\n      if (this.flexing) {\n       break;\n      }\n      error = this.executeCommand(2, COMMAND_MAP.rmoveto);\n      break;\n     case 22:\n      if (this.flexing) {\n       this.stack.push(0);\n       break;\n      }\n      error = this.executeCommand(1, COMMAND_MAP.hmoveto);\n      break;\n     case 30:\n      error = this.executeCommand(4, COMMAND_MAP.vhcurveto);\n      break;\n     case 31:\n      error = this.executeCommand(4, COMMAND_MAP.hvcurveto);\n      break;\n     case (12 << 8) + 0:\n      this.stack = [];\n      break;\n     case (12 << 8) + 1:\n      if (!HINTING_ENABLED) {\n       this.stack = [];\n       break;\n      }\n      error = this.executeCommand(2, COMMAND_MAP.vstem);\n      break;\n     case (12 << 8) + 2:\n      if (!HINTING_ENABLED) {\n       this.stack = [];\n       break;\n      }\n      error = this.executeCommand(2, COMMAND_MAP.hstem);\n      break;\n     case (12 << 8) + 6:\n      if (seacAnalysisEnabled) {\n       this.seac = this.stack.splice(-4, 4);\n       error = this.executeCommand(0, COMMAND_MAP.endchar);\n      } else {\n       error = this.executeCommand(4, COMMAND_MAP.endchar);\n      }\n      break;\n     case (12 << 8) + 7:\n      if (this.stack.length < 4) {\n       error = true;\n       break;\n      }\n      this.stack.pop();\n      wx = this.stack.pop();\n      var sby = this.stack.pop();\n      sbx = this.stack.pop();\n      this.lsb = sbx;\n      this.width = wx;\n      this.stack.push(wx, sbx, sby);\n      error = this.executeCommand(3, COMMAND_MAP.rmoveto);\n      break;\n     case (12 << 8) + 12:\n      if (this.stack.length < 2) {\n       error = true;\n       break;\n      }\n      var num2 = this.stack.pop();\n      var num1 = this.stack.pop();\n      this.stack.push(num1 / num2);\n      break;\n     case (12 << 8) + 16:\n      if (this.stack.length < 2) {\n       error = true;\n       break;\n      }\n      subrNumber = this.stack.pop();\n      var numArgs = this.stack.pop();\n      if (subrNumber === 0 && numArgs === 3) {\n       var flexArgs = this.stack.splice(this.stack.length - 17, 17);\n       this.stack.push(flexArgs[2] + flexArgs[0], flexArgs[3] + flexArgs[1], flexArgs[4], flexArgs[5], flexArgs[6], flexArgs[7], flexArgs[8], flexArgs[9], flexArgs[10], flexArgs[11], flexArgs[12], flexArgs[13], flexArgs[14]);\n       error = this.executeCommand(13, COMMAND_MAP.flex, true);\n       this.flexing = false;\n       this.stack.push(flexArgs[15], flexArgs[16]);\n      } else if (subrNumber === 1 && numArgs === 0) {\n       this.flexing = true;\n      }\n      break;\n     case (12 << 8) + 17:\n      break;\n     case (12 << 8) + 33:\n      this.stack = [];\n      break;\n     default:\n      warn('Unknown type 1 charstring command of \"' + value + '\"');\n      break;\n     }\n     if (error) {\n      break;\n     }\n     continue;\n    } else if (value <= 246) {\n     value = value - 139;\n    } else if (value <= 250) {\n     value = (value - 247) * 256 + encoded[++i] + 108;\n    } else if (value <= 254) {\n     value = -((value - 251) * 256) - encoded[++i] - 108;\n    } else {\n     value = (encoded[++i] & 0xff) << 24 | (encoded[++i] & 0xff) << 16 | (encoded[++i] & 0xff) << 8 | (encoded[++i] & 0xff) << 0;\n    }\n    this.stack.push(value);\n   }\n   return error;\n  },\n  executeCommand: function (howManyArgs, command, keepStack) {\n   var stackLength = this.stack.length;\n   if (howManyArgs > stackLength) {\n    return true;\n   }\n   var start = stackLength - howManyArgs;\n   for (var i = start; i < stackLength; i++) {\n    var value = this.stack[i];\n    if (value === (value | 0)) {\n     this.output.push(28, value >> 8 & 0xff, value & 0xff);\n    } else {\n     value = 65536 * value | 0;\n     this.output.push(255, value >> 24 & 0xFF, value >> 16 & 0xFF, value >> 8 & 0xFF, value & 0xFF);\n    }\n   }\n   this.output.push.apply(this.output, command);\n   if (keepStack) {\n    this.stack.splice(start, howManyArgs);\n   } else {\n    this.stack.length = 0;\n   }\n   return false;\n  }\n };\n return Type1CharString;\n}();\nvar Type1Parser = function Type1ParserClosure() {\n var EEXEC_ENCRYPT_KEY = 55665;\n var CHAR_STRS_ENCRYPT_KEY = 4330;\n function isHexDigit(code) {\n  return code >= 48 && code <= 57 || code >= 65 && code <= 70 || code >= 97 && code <= 102;\n }\n function decrypt(data, key, discardNumber) {\n  if (discardNumber >= data.length) {\n   return new Uint8Array(0);\n  }\n  var r = key | 0, c1 = 52845, c2 = 22719, i, j;\n  for (i = 0; i < discardNumber; i++) {\n   r = (data[i] + r) * c1 + c2 & (1 << 16) - 1;\n  }\n  var count = data.length - discardNumber;\n  var decrypted = new Uint8Array(count);\n  for (i = discardNumber, j = 0; j < count; i++, j++) {\n   var value = data[i];\n   decrypted[j] = value ^ r >> 8;\n   r = (value + r) * c1 + c2 & (1 << 16) - 1;\n  }\n  return decrypted;\n }\n function decryptAscii(data, key, discardNumber) {\n  var r = key | 0, c1 = 52845, c2 = 22719;\n  var count = data.length, maybeLength = count >>> 1;\n  var decrypted = new Uint8Array(maybeLength);\n  var i, j;\n  for (i = 0, j = 0; i < count; i++) {\n   var digit1 = data[i];\n   if (!isHexDigit(digit1)) {\n    continue;\n   }\n   i++;\n   var digit2;\n   while (i < count && !isHexDigit(digit2 = data[i])) {\n    i++;\n   }\n   if (i < count) {\n    var value = parseInt(String.fromCharCode(digit1, digit2), 16);\n    decrypted[j++] = value ^ r >> 8;\n    r = (value + r) * c1 + c2 & (1 << 16) - 1;\n   }\n  }\n  return Array.prototype.slice.call(decrypted, discardNumber, j);\n }\n function isSpecial(c) {\n  return c === 0x2F || c === 0x5B || c === 0x5D || c === 0x7B || c === 0x7D || c === 0x28 || c === 0x29;\n }\n function Type1Parser(stream, encrypted, seacAnalysisEnabled) {\n  if (encrypted) {\n   var data = stream.getBytes();\n   var isBinary = !(isHexDigit(data[0]) && isHexDigit(data[1]) && isHexDigit(data[2]) && isHexDigit(data[3]));\n   stream = new Stream(isBinary ? decrypt(data, EEXEC_ENCRYPT_KEY, 4) : decryptAscii(data, EEXEC_ENCRYPT_KEY, 4));\n  }\n  this.seacAnalysisEnabled = !!seacAnalysisEnabled;\n  this.stream = stream;\n  this.nextChar();\n }\n Type1Parser.prototype = {\n  readNumberArray: function Type1Parser_readNumberArray() {\n   this.getToken();\n   var array = [];\n   while (true) {\n    var token = this.getToken();\n    if (token === null || token === ']' || token === '}') {\n     break;\n    }\n    array.push(parseFloat(token || 0));\n   }\n   return array;\n  },\n  readNumber: function Type1Parser_readNumber() {\n   var token = this.getToken();\n   return parseFloat(token || 0);\n  },\n  readInt: function Type1Parser_readInt() {\n   var token = this.getToken();\n   return parseInt(token || 0, 10) | 0;\n  },\n  readBoolean: function Type1Parser_readBoolean() {\n   var token = this.getToken();\n   return token === 'true' ? 1 : 0;\n  },\n  nextChar: function Type1_nextChar() {\n   return this.currentChar = this.stream.getByte();\n  },\n  getToken: function Type1Parser_getToken() {\n   var comment = false;\n   var ch = this.currentChar;\n   while (true) {\n    if (ch === -1) {\n     return null;\n    }\n    if (comment) {\n     if (ch === 0x0A || ch === 0x0D) {\n      comment = false;\n     }\n    } else if (ch === 0x25) {\n     comment = true;\n    } else if (!isSpace(ch)) {\n     break;\n    }\n    ch = this.nextChar();\n   }\n   if (isSpecial(ch)) {\n    this.nextChar();\n    return String.fromCharCode(ch);\n   }\n   var token = '';\n   do {\n    token += String.fromCharCode(ch);\n    ch = this.nextChar();\n   } while (ch >= 0 && !isSpace(ch) && !isSpecial(ch));\n   return token;\n  },\n  extractFontProgram: function Type1Parser_extractFontProgram() {\n   var stream = this.stream;\n   var subrs = [], charstrings = [];\n   var privateData = Object.create(null);\n   privateData['lenIV'] = 4;\n   var program = {\n    subrs: [],\n    charstrings: [],\n    properties: { 'privateData': privateData }\n   };\n   var token, length, data, lenIV, encoded;\n   while ((token = this.getToken()) !== null) {\n    if (token !== '/') {\n     continue;\n    }\n    token = this.getToken();\n    switch (token) {\n    case 'CharStrings':\n     this.getToken();\n     this.getToken();\n     this.getToken();\n     this.getToken();\n     while (true) {\n      token = this.getToken();\n      if (token === null || token === 'end') {\n       break;\n      }\n      if (token !== '/') {\n       continue;\n      }\n      var glyph = this.getToken();\n      length = this.readInt();\n      this.getToken();\n      data = stream.makeSubStream(stream.pos, length);\n      lenIV = program.properties.privateData['lenIV'];\n      encoded = decrypt(data.getBytes(), CHAR_STRS_ENCRYPT_KEY, lenIV);\n      stream.skip(length);\n      this.nextChar();\n      token = this.getToken();\n      if (token === 'noaccess') {\n       this.getToken();\n      }\n      charstrings.push({\n       glyph: glyph,\n       encoded: encoded\n      });\n     }\n     break;\n    case 'Subrs':\n     this.readInt();\n     this.getToken();\n     while ((token = this.getToken()) === 'dup') {\n      var index = this.readInt();\n      length = this.readInt();\n      this.getToken();\n      data = stream.makeSubStream(stream.pos, length);\n      lenIV = program.properties.privateData['lenIV'];\n      encoded = decrypt(data.getBytes(), CHAR_STRS_ENCRYPT_KEY, lenIV);\n      stream.skip(length);\n      this.nextChar();\n      token = this.getToken();\n      if (token === 'noaccess') {\n       this.getToken();\n      }\n      subrs[index] = encoded;\n     }\n     break;\n    case 'BlueValues':\n    case 'OtherBlues':\n    case 'FamilyBlues':\n    case 'FamilyOtherBlues':\n     var blueArray = this.readNumberArray();\n     if (blueArray.length > 0 && blueArray.length % 2 === 0 && HINTING_ENABLED) {\n      program.properties.privateData[token] = blueArray;\n     }\n     break;\n    case 'StemSnapH':\n    case 'StemSnapV':\n     program.properties.privateData[token] = this.readNumberArray();\n     break;\n    case 'StdHW':\n    case 'StdVW':\n     program.properties.privateData[token] = this.readNumberArray()[0];\n     break;\n    case 'BlueShift':\n    case 'lenIV':\n    case 'BlueFuzz':\n    case 'BlueScale':\n    case 'LanguageGroup':\n    case 'ExpansionFactor':\n     program.properties.privateData[token] = this.readNumber();\n     break;\n    case 'ForceBold':\n     program.properties.privateData[token] = this.readBoolean();\n     break;\n    }\n   }\n   for (var i = 0; i < charstrings.length; i++) {\n    glyph = charstrings[i].glyph;\n    encoded = charstrings[i].encoded;\n    var charString = new Type1CharString();\n    var error = charString.convert(encoded, subrs, this.seacAnalysisEnabled);\n    var output = charString.output;\n    if (error) {\n     output = [14];\n    }\n    program.charstrings.push({\n     glyphName: glyph,\n     charstring: output,\n     width: charString.width,\n     lsb: charString.lsb,\n     seac: charString.seac\n    });\n   }\n   return program;\n  },\n  extractFontHeader: function Type1Parser_extractFontHeader(properties) {\n   var token;\n   while ((token = this.getToken()) !== null) {\n    if (token !== '/') {\n     continue;\n    }\n    token = this.getToken();\n    switch (token) {\n    case 'FontMatrix':\n     var matrix = this.readNumberArray();\n     properties.fontMatrix = matrix;\n     break;\n    case 'Encoding':\n     var encodingArg = this.getToken();\n     var encoding;\n     if (!/^\\d+$/.test(encodingArg)) {\n      encoding = getEncoding(encodingArg);\n     } else {\n      encoding = [];\n      var size = parseInt(encodingArg, 10) | 0;\n      this.getToken();\n      for (var j = 0; j < size; j++) {\n       token = this.getToken();\n       while (token !== 'dup' && token !== 'def') {\n        token = this.getToken();\n        if (token === null) {\n         return;\n        }\n       }\n       if (token === 'def') {\n        break;\n       }\n       var index = this.readInt();\n       this.getToken();\n       var glyph = this.getToken();\n       encoding[index] = glyph;\n       this.getToken();\n      }\n     }\n     properties.builtInEncoding = encoding;\n     break;\n    case 'FontBBox':\n     var fontBBox = this.readNumberArray();\n     properties.ascent = Math.max(fontBBox[3], fontBBox[1]);\n     properties.descent = Math.min(fontBBox[1], fontBBox[3]);\n     properties.ascentScaled = true;\n     break;\n    }\n   }\n  }\n };\n return Type1Parser;\n}();\nexports.Type1Parser = Type1Parser;\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\nif (typeof PDFJS === 'undefined' || !PDFJS.compatibilityChecked) {\n var globalScope = typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : this;\n var userAgent = typeof navigator !== 'undefined' && navigator.userAgent || '';\n var isAndroid = /Android/.test(userAgent);\n var isAndroidPre3 = /Android\\s[0-2][^\\d]/.test(userAgent);\n var isAndroidPre5 = /Android\\s[0-4][^\\d]/.test(userAgent);\n var isChrome = userAgent.indexOf('Chrom') >= 0;\n var isChromeWithRangeBug = /Chrome\\/(39|40)\\./.test(userAgent);\n var isIOSChrome = userAgent.indexOf('CriOS') >= 0;\n var isIE = userAgent.indexOf('Trident') >= 0;\n var isIOS = /\\b(iPad|iPhone|iPod)(?=;)/.test(userAgent);\n var isOpera = userAgent.indexOf('Opera') >= 0;\n var isSafari = /Safari\\//.test(userAgent) && !/(Chrome\\/|Android\\s)/.test(userAgent);\n var hasDOM = typeof window === 'object' && typeof document === 'object';\n if (typeof PDFJS === 'undefined') {\n  globalScope.PDFJS = {};\n }\n PDFJS.compatibilityChecked = true;\n (function checkTypedArrayCompatibility() {\n  if (typeof Uint8Array !== 'undefined') {\n   if (typeof Uint8Array.prototype.subarray === 'undefined') {\n    Uint8Array.prototype.subarray = function subarray(start, end) {\n     return new Uint8Array(this.slice(start, end));\n    };\n    Float32Array.prototype.subarray = function subarray(start, end) {\n     return new Float32Array(this.slice(start, end));\n    };\n   }\n   if (typeof Float64Array === 'undefined') {\n    globalScope.Float64Array = Float32Array;\n   }\n   return;\n  }\n  function subarray(start, end) {\n   return new TypedArray(this.slice(start, end));\n  }\n  function setArrayOffset(array, offset) {\n   if (arguments.length < 2) {\n    offset = 0;\n   }\n   for (var i = 0, n = array.length; i < n; ++i, ++offset) {\n    this[offset] = array[i] & 0xFF;\n   }\n  }\n  function TypedArray(arg1) {\n   var result, i, n;\n   if (typeof arg1 === 'number') {\n    result = [];\n    for (i = 0; i < arg1; ++i) {\n     result[i] = 0;\n    }\n   } else if ('slice' in arg1) {\n    result = arg1.slice(0);\n   } else {\n    result = [];\n    for (i = 0, n = arg1.length; i < n; ++i) {\n     result[i] = arg1[i];\n    }\n   }\n   result.subarray = subarray;\n   result.buffer = result;\n   result.byteLength = result.length;\n   result.set = setArrayOffset;\n   if (typeof arg1 === 'object' && arg1.buffer) {\n    result.buffer = arg1.buffer;\n   }\n   return result;\n  }\n  globalScope.Uint8Array = TypedArray;\n  globalScope.Int8Array = TypedArray;\n  globalScope.Uint32Array = TypedArray;\n  globalScope.Int32Array = TypedArray;\n  globalScope.Uint16Array = TypedArray;\n  globalScope.Float32Array = TypedArray;\n  globalScope.Float64Array = TypedArray;\n }());\n (function normalizeURLObject() {\n  if (!globalScope.URL) {\n   globalScope.URL = globalScope.webkitURL;\n  }\n }());\n (function checkObjectDefinePropertyCompatibility() {\n  if (typeof Object.defineProperty !== 'undefined') {\n   var definePropertyPossible = true;\n   try {\n    if (hasDOM) {\n     Object.defineProperty(new Image(), 'id', { value: 'test' });\n    }\n    var Test = function Test() {\n    };\n    Test.prototype = {\n     get id() {\n     }\n    };\n    Object.defineProperty(new Test(), 'id', {\n     value: '',\n     configurable: true,\n     enumerable: true,\n     writable: false\n    });\n   } catch (e) {\n    definePropertyPossible = false;\n   }\n   if (definePropertyPossible) {\n    return;\n   }\n  }\n  Object.defineProperty = function objectDefineProperty(obj, name, def) {\n   delete obj[name];\n   if ('get' in def) {\n    obj.__defineGetter__(name, def['get']);\n   }\n   if ('set' in def) {\n    obj.__defineSetter__(name, def['set']);\n   }\n   if ('value' in def) {\n    obj.__defineSetter__(name, function objectDefinePropertySetter(value) {\n     this.__defineGetter__(name, function objectDefinePropertyGetter() {\n      return value;\n     });\n     return value;\n    });\n    obj[name] = def.value;\n   }\n  };\n }());\n (function checkXMLHttpRequestResponseCompatibility() {\n  if (typeof XMLHttpRequest === 'undefined') {\n   return;\n  }\n  var xhrPrototype = XMLHttpRequest.prototype;\n  var xhr = new XMLHttpRequest();\n  if (!('overrideMimeType' in xhr)) {\n   Object.defineProperty(xhrPrototype, 'overrideMimeType', {\n    value: function xmlHttpRequestOverrideMimeType(mimeType) {\n    }\n   });\n  }\n  if ('responseType' in xhr) {\n   return;\n  }\n  Object.defineProperty(xhrPrototype, 'responseType', {\n   get: function xmlHttpRequestGetResponseType() {\n    return this._responseType || 'text';\n   },\n   set: function xmlHttpRequestSetResponseType(value) {\n    if (value === 'text' || value === 'arraybuffer') {\n     this._responseType = value;\n     if (value === 'arraybuffer' && typeof this.overrideMimeType === 'function') {\n      this.overrideMimeType('text/plain; charset=x-user-defined');\n     }\n    }\n   }\n  });\n  if (typeof VBArray !== 'undefined') {\n   Object.defineProperty(xhrPrototype, 'response', {\n    get: function xmlHttpRequestResponseGet() {\n     if (this.responseType === 'arraybuffer') {\n      return new Uint8Array(new VBArray(this.responseBody).toArray());\n     }\n     return this.responseText;\n    }\n   });\n   return;\n  }\n  Object.defineProperty(xhrPrototype, 'response', {\n   get: function xmlHttpRequestResponseGet() {\n    if (this.responseType !== 'arraybuffer') {\n     return this.responseText;\n    }\n    var text = this.responseText;\n    var i, n = text.length;\n    var result = new Uint8Array(n);\n    for (i = 0; i < n; ++i) {\n     result[i] = text.charCodeAt(i) & 0xFF;\n    }\n    return result.buffer;\n   }\n  });\n }());\n (function checkWindowBtoaCompatibility() {\n  if ('btoa' in globalScope) {\n   return;\n  }\n  var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  globalScope.btoa = function (chars) {\n   var buffer = '';\n   var i, n;\n   for (i = 0, n = chars.length; i < n; i += 3) {\n    var b1 = chars.charCodeAt(i) & 0xFF;\n    var b2 = chars.charCodeAt(i + 1) & 0xFF;\n    var b3 = chars.charCodeAt(i + 2) & 0xFF;\n    var d1 = b1 >> 2, d2 = (b1 & 3) << 4 | b2 >> 4;\n    var d3 = i + 1 < n ? (b2 & 0xF) << 2 | b3 >> 6 : 64;\n    var d4 = i + 2 < n ? b3 & 0x3F : 64;\n    buffer += digits.charAt(d1) + digits.charAt(d2) + digits.charAt(d3) + digits.charAt(d4);\n   }\n   return buffer;\n  };\n }());\n (function checkWindowAtobCompatibility() {\n  if ('atob' in globalScope) {\n   return;\n  }\n  var digits = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=';\n  globalScope.atob = function (input) {\n   input = input.replace(/=+$/, '');\n   if (input.length % 4 === 1) {\n    throw new Error('bad atob input');\n   }\n   for (var bc = 0, bs, buffer, idx = 0, output = ''; buffer = input.charAt(idx++); ~buffer && (bs = bc % 4 ? bs * 64 + buffer : buffer, bc++ % 4) ? output += String.fromCharCode(255 & bs >> (-2 * bc & 6)) : 0) {\n    buffer = digits.indexOf(buffer);\n   }\n   return output;\n  };\n }());\n (function checkFunctionPrototypeBindCompatibility() {\n  if (typeof Function.prototype.bind !== 'undefined') {\n   return;\n  }\n  Function.prototype.bind = function functionPrototypeBind(obj) {\n   var fn = this, headArgs = Array.prototype.slice.call(arguments, 1);\n   var bound = function functionPrototypeBindBound() {\n    var args = headArgs.concat(Array.prototype.slice.call(arguments));\n    return fn.apply(obj, args);\n   };\n   return bound;\n  };\n }());\n (function checkDatasetProperty() {\n  if (!hasDOM) {\n   return;\n  }\n  var div = document.createElement('div');\n  if ('dataset' in div) {\n   return;\n  }\n  Object.defineProperty(HTMLElement.prototype, 'dataset', {\n   get: function () {\n    if (this._dataset) {\n     return this._dataset;\n    }\n    var dataset = {};\n    for (var j = 0, jj = this.attributes.length; j < jj; j++) {\n     var attribute = this.attributes[j];\n     if (attribute.name.substring(0, 5) !== 'data-') {\n      continue;\n     }\n     var key = attribute.name.substring(5).replace(/\\-([a-z])/g, function (all, ch) {\n      return ch.toUpperCase();\n     });\n     dataset[key] = attribute.value;\n    }\n    Object.defineProperty(this, '_dataset', {\n     value: dataset,\n     writable: false,\n     enumerable: false\n    });\n    return dataset;\n   },\n   enumerable: true\n  });\n }());\n (function checkClassListProperty() {\n  function changeList(element, itemName, add, remove) {\n   var s = element.className || '';\n   var list = s.split(/\\s+/g);\n   if (list[0] === '') {\n    list.shift();\n   }\n   var index = list.indexOf(itemName);\n   if (index < 0 && add) {\n    list.push(itemName);\n   }\n   if (index >= 0 && remove) {\n    list.splice(index, 1);\n   }\n   element.className = list.join(' ');\n   return index >= 0;\n  }\n  if (!hasDOM) {\n   return;\n  }\n  var div = document.createElement('div');\n  if ('classList' in div) {\n   return;\n  }\n  var classListPrototype = {\n   add: function (name) {\n    changeList(this.element, name, true, false);\n   },\n   contains: function (name) {\n    return changeList(this.element, name, false, false);\n   },\n   remove: function (name) {\n    changeList(this.element, name, false, true);\n   },\n   toggle: function (name) {\n    changeList(this.element, name, true, true);\n   }\n  };\n  Object.defineProperty(HTMLElement.prototype, 'classList', {\n   get: function () {\n    if (this._classList) {\n     return this._classList;\n    }\n    var classList = Object.create(classListPrototype, {\n     element: {\n      value: this,\n      writable: false,\n      enumerable: true\n     }\n    });\n    Object.defineProperty(this, '_classList', {\n     value: classList,\n     writable: false,\n     enumerable: false\n    });\n    return classList;\n   },\n   enumerable: true\n  });\n }());\n (function checkWorkerConsoleCompatibility() {\n  if (typeof importScripts === 'undefined' || 'console' in globalScope) {\n   return;\n  }\n  var consoleTimer = {};\n  var workerConsole = {\n   log: function log() {\n    var args = Array.prototype.slice.call(arguments);\n    globalScope.postMessage({\n     targetName: 'main',\n     action: 'console_log',\n     data: args\n    });\n   },\n   error: function error() {\n    var args = Array.prototype.slice.call(arguments);\n    globalScope.postMessage({\n     targetName: 'main',\n     action: 'console_error',\n     data: args\n    });\n   },\n   time: function time(name) {\n    consoleTimer[name] = Date.now();\n   },\n   timeEnd: function timeEnd(name) {\n    var time = consoleTimer[name];\n    if (!time) {\n     throw new Error('Unknown timer name ' + name);\n    }\n    this.log('Timer:', name, Date.now() - time);\n   }\n  };\n  globalScope.console = workerConsole;\n }());\n (function checkConsoleCompatibility() {\n  if (!hasDOM) {\n   return;\n  }\n  if (!('console' in window)) {\n   window.console = {\n    log: function () {\n    },\n    error: function () {\n    },\n    warn: function () {\n    }\n   };\n   return;\n  }\n  if (!('bind' in console.log)) {\n   console.log = function (fn) {\n    return function (msg) {\n     return fn(msg);\n    };\n   }(console.log);\n   console.error = function (fn) {\n    return function (msg) {\n     return fn(msg);\n    };\n   }(console.error);\n   console.warn = function (fn) {\n    return function (msg) {\n     return fn(msg);\n    };\n   }(console.warn);\n   return;\n  }\n }());\n (function checkOnClickCompatibility() {\n  function ignoreIfTargetDisabled(event) {\n   if (isDisabled(event.target)) {\n    event.stopPropagation();\n   }\n  }\n  function isDisabled(node) {\n   return node.disabled || node.parentNode && isDisabled(node.parentNode);\n  }\n  if (isOpera) {\n   document.addEventListener('click', ignoreIfTargetDisabled, true);\n  }\n }());\n (function checkOnBlobSupport() {\n  if (isIE || isIOSChrome) {\n   PDFJS.disableCreateObjectURL = true;\n  }\n }());\n (function checkNavigatorLanguage() {\n  if (typeof navigator === 'undefined') {\n   return;\n  }\n  if ('language' in navigator) {\n   return;\n  }\n  PDFJS.locale = navigator.userLanguage || 'en-US';\n }());\n (function checkRangeRequests() {\n  if (isSafari || isAndroidPre3 || isChromeWithRangeBug || isIOS) {\n   PDFJS.disableRange = true;\n   PDFJS.disableStream = true;\n  }\n }());\n (function checkHistoryManipulation() {\n  if (!hasDOM) {\n   return;\n  }\n  if (!history.pushState || isAndroidPre3) {\n   PDFJS.disableHistory = true;\n  }\n }());\n (function checkSetPresenceInImageData() {\n  if (!hasDOM) {\n   return;\n  }\n  if (window.CanvasPixelArray) {\n   if (typeof window.CanvasPixelArray.prototype.set !== 'function') {\n    window.CanvasPixelArray.prototype.set = function (arr) {\n     for (var i = 0, ii = this.length; i < ii; i++) {\n      this[i] = arr[i];\n     }\n    };\n   }\n  } else {\n   var polyfill = false, versionMatch;\n   if (isChrome) {\n    versionMatch = userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./);\n    polyfill = versionMatch && parseInt(versionMatch[2]) < 21;\n   } else if (isAndroid) {\n    polyfill = isAndroidPre5;\n   } else if (isSafari) {\n    versionMatch = userAgent.match(/Version\\/([0-9]+)\\.([0-9]+)\\.([0-9]+) Safari\\//);\n    polyfill = versionMatch && parseInt(versionMatch[1]) < 6;\n   }\n   if (polyfill) {\n    var contextPrototype = window.CanvasRenderingContext2D.prototype;\n    var createImageData = contextPrototype.createImageData;\n    contextPrototype.createImageData = function (w, h) {\n     var imageData = createImageData.call(this, w, h);\n     imageData.data.set = function (arr) {\n      for (var i = 0, ii = this.length; i < ii; i++) {\n       this[i] = arr[i];\n      }\n     };\n     return imageData;\n    };\n    contextPrototype = null;\n   }\n  }\n }());\n (function checkRequestAnimationFrame() {\n  function fakeRequestAnimationFrame(callback) {\n   window.setTimeout(callback, 20);\n  }\n  if (!hasDOM) {\n   return;\n  }\n  if (isIOS) {\n   window.requestAnimationFrame = fakeRequestAnimationFrame;\n   return;\n  }\n  if ('requestAnimationFrame' in window) {\n   return;\n  }\n  window.requestAnimationFrame = window.mozRequestAnimationFrame || window.webkitRequestAnimationFrame || fakeRequestAnimationFrame;\n }());\n (function checkCanvasSizeLimitation() {\n  if (isIOS || isAndroid) {\n   PDFJS.maxCanvasPixels = 5242880;\n  }\n }());\n (function checkFullscreenSupport() {\n  if (!hasDOM) {\n   return;\n  }\n  if (isIE && window.parent !== window) {\n   PDFJS.disableFullscreen = true;\n  }\n }());\n (function checkCurrentScript() {\n  if (!hasDOM) {\n   return;\n  }\n  if ('currentScript' in document) {\n   return;\n  }\n  Object.defineProperty(document, 'currentScript', {\n   get: function () {\n    var scripts = document.getElementsByTagName('script');\n    return scripts[scripts.length - 1];\n   },\n   enumerable: true,\n   configurable: true\n  });\n }());\n (function checkInputTypeNumberAssign() {\n  if (!hasDOM) {\n   return;\n  }\n  var el = document.createElement('input');\n  try {\n   el.type = 'number';\n  } catch (ex) {\n   var inputProto = el.constructor.prototype;\n   var typeProperty = Object.getOwnPropertyDescriptor(inputProto, 'type');\n   Object.defineProperty(inputProto, 'type', {\n    get: function () {\n     return typeProperty.get.call(this);\n    },\n    set: function (value) {\n     typeProperty.set.call(this, value === 'number' ? 'text' : value);\n    },\n    enumerable: true,\n    configurable: true\n   });\n  }\n }());\n (function checkDocumentReadyState() {\n  if (!hasDOM) {\n   return;\n  }\n  if (!document.attachEvent) {\n   return;\n  }\n  var documentProto = document.constructor.prototype;\n  var readyStateProto = Object.getOwnPropertyDescriptor(documentProto, 'readyState');\n  Object.defineProperty(documentProto, 'readyState', {\n   get: function () {\n    var value = readyStateProto.get.call(this);\n    return value === 'interactive' ? 'loading' : value;\n   },\n   set: function (value) {\n    readyStateProto.set.call(this, value);\n   },\n   enumerable: true,\n   configurable: true\n  });\n }());\n (function checkChildNodeRemove() {\n  if (!hasDOM) {\n   return;\n  }\n  if (typeof Element.prototype.remove !== 'undefined') {\n   return;\n  }\n  Element.prototype.remove = function () {\n   if (this.parentNode) {\n    this.parentNode.removeChild(this);\n   }\n  };\n }());\n (function checkPromise() {\n  if (globalScope.Promise) {\n   if (typeof globalScope.Promise.all !== 'function') {\n    globalScope.Promise.all = function (iterable) {\n     var count = 0, results = [], resolve, reject;\n     var promise = new globalScope.Promise(function (resolve_, reject_) {\n      resolve = resolve_;\n      reject = reject_;\n     });\n     iterable.forEach(function (p, i) {\n      count++;\n      p.then(function (result) {\n       results[i] = result;\n       count--;\n       if (count === 0) {\n        resolve(results);\n       }\n      }, reject);\n     });\n     if (count === 0) {\n      resolve(results);\n     }\n     return promise;\n    };\n   }\n   if (typeof globalScope.Promise.resolve !== 'function') {\n    globalScope.Promise.resolve = function (value) {\n     return new globalScope.Promise(function (resolve) {\n      resolve(value);\n     });\n    };\n   }\n   if (typeof globalScope.Promise.reject !== 'function') {\n    globalScope.Promise.reject = function (reason) {\n     return new globalScope.Promise(function (resolve, reject) {\n      reject(reason);\n     });\n    };\n   }\n   if (typeof globalScope.Promise.prototype.catch !== 'function') {\n    globalScope.Promise.prototype.catch = function (onReject) {\n     return globalScope.Promise.prototype.then(undefined, onReject);\n    };\n   }\n   return;\n  }\n  var STATUS_PENDING = 0;\n  var STATUS_RESOLVED = 1;\n  var STATUS_REJECTED = 2;\n  var REJECTION_TIMEOUT = 500;\n  var HandlerManager = {\n   handlers: [],\n   running: false,\n   unhandledRejections: [],\n   pendingRejectionCheck: false,\n   scheduleHandlers: function scheduleHandlers(promise) {\n    if (promise._status === STATUS_PENDING) {\n     return;\n    }\n    this.handlers = this.handlers.concat(promise._handlers);\n    promise._handlers = [];\n    if (this.running) {\n     return;\n    }\n    this.running = true;\n    setTimeout(this.runHandlers.bind(this), 0);\n   },\n   runHandlers: function runHandlers() {\n    var RUN_TIMEOUT = 1;\n    var timeoutAt = Date.now() + RUN_TIMEOUT;\n    while (this.handlers.length > 0) {\n     var handler = this.handlers.shift();\n     var nextStatus = handler.thisPromise._status;\n     var nextValue = handler.thisPromise._value;\n     try {\n      if (nextStatus === STATUS_RESOLVED) {\n       if (typeof handler.onResolve === 'function') {\n        nextValue = handler.onResolve(nextValue);\n       }\n      } else if (typeof handler.onReject === 'function') {\n       nextValue = handler.onReject(nextValue);\n       nextStatus = STATUS_RESOLVED;\n       if (handler.thisPromise._unhandledRejection) {\n        this.removeUnhandeledRejection(handler.thisPromise);\n       }\n      }\n     } catch (ex) {\n      nextStatus = STATUS_REJECTED;\n      nextValue = ex;\n     }\n     handler.nextPromise._updateStatus(nextStatus, nextValue);\n     if (Date.now() >= timeoutAt) {\n      break;\n     }\n    }\n    if (this.handlers.length > 0) {\n     setTimeout(this.runHandlers.bind(this), 0);\n     return;\n    }\n    this.running = false;\n   },\n   addUnhandledRejection: function addUnhandledRejection(promise) {\n    this.unhandledRejections.push({\n     promise: promise,\n     time: Date.now()\n    });\n    this.scheduleRejectionCheck();\n   },\n   removeUnhandeledRejection: function removeUnhandeledRejection(promise) {\n    promise._unhandledRejection = false;\n    for (var i = 0; i < this.unhandledRejections.length; i++) {\n     if (this.unhandledRejections[i].promise === promise) {\n      this.unhandledRejections.splice(i);\n      i--;\n     }\n    }\n   },\n   scheduleRejectionCheck: function scheduleRejectionCheck() {\n    if (this.pendingRejectionCheck) {\n     return;\n    }\n    this.pendingRejectionCheck = true;\n    setTimeout(function rejectionCheck() {\n     this.pendingRejectionCheck = false;\n     var now = Date.now();\n     for (var i = 0; i < this.unhandledRejections.length; i++) {\n      if (now - this.unhandledRejections[i].time > REJECTION_TIMEOUT) {\n       var unhandled = this.unhandledRejections[i].promise._value;\n       var msg = 'Unhandled rejection: ' + unhandled;\n       if (unhandled.stack) {\n        msg += '\\n' + unhandled.stack;\n       }\n       try {\n        throw new Error(msg);\n       } catch (_) {\n        console.warn(msg);\n       }\n       this.unhandledRejections.splice(i);\n       i--;\n      }\n     }\n     if (this.unhandledRejections.length) {\n      this.scheduleRejectionCheck();\n     }\n    }.bind(this), REJECTION_TIMEOUT);\n   }\n  };\n  var Promise = function Promise(resolver) {\n   this._status = STATUS_PENDING;\n   this._handlers = [];\n   try {\n    resolver.call(this, this._resolve.bind(this), this._reject.bind(this));\n   } catch (e) {\n    this._reject(e);\n   }\n  };\n  Promise.all = function Promise_all(promises) {\n   var resolveAll, rejectAll;\n   var deferred = new Promise(function (resolve, reject) {\n    resolveAll = resolve;\n    rejectAll = reject;\n   });\n   var unresolved = promises.length;\n   var results = [];\n   if (unresolved === 0) {\n    resolveAll(results);\n    return deferred;\n   }\n   function reject(reason) {\n    if (deferred._status === STATUS_REJECTED) {\n     return;\n    }\n    results = [];\n    rejectAll(reason);\n   }\n   for (var i = 0, ii = promises.length; i < ii; ++i) {\n    var promise = promises[i];\n    var resolve = function (i) {\n     return function (value) {\n      if (deferred._status === STATUS_REJECTED) {\n       return;\n      }\n      results[i] = value;\n      unresolved--;\n      if (unresolved === 0) {\n       resolveAll(results);\n      }\n     };\n    }(i);\n    if (Promise.isPromise(promise)) {\n     promise.then(resolve, reject);\n    } else {\n     resolve(promise);\n    }\n   }\n   return deferred;\n  };\n  Promise.isPromise = function Promise_isPromise(value) {\n   return value && typeof value.then === 'function';\n  };\n  Promise.resolve = function Promise_resolve(value) {\n   return new Promise(function (resolve) {\n    resolve(value);\n   });\n  };\n  Promise.reject = function Promise_reject(reason) {\n   return new Promise(function (resolve, reject) {\n    reject(reason);\n   });\n  };\n  Promise.prototype = {\n   _status: null,\n   _value: null,\n   _handlers: null,\n   _unhandledRejection: null,\n   _updateStatus: function Promise__updateStatus(status, value) {\n    if (this._status === STATUS_RESOLVED || this._status === STATUS_REJECTED) {\n     return;\n    }\n    if (status === STATUS_RESOLVED && Promise.isPromise(value)) {\n     value.then(this._updateStatus.bind(this, STATUS_RESOLVED), this._updateStatus.bind(this, STATUS_REJECTED));\n     return;\n    }\n    this._status = status;\n    this._value = value;\n    if (status === STATUS_REJECTED && this._handlers.length === 0) {\n     this._unhandledRejection = true;\n     HandlerManager.addUnhandledRejection(this);\n    }\n    HandlerManager.scheduleHandlers(this);\n   },\n   _resolve: function Promise_resolve(value) {\n    this._updateStatus(STATUS_RESOLVED, value);\n   },\n   _reject: function Promise_reject(reason) {\n    this._updateStatus(STATUS_REJECTED, reason);\n   },\n   then: function Promise_then(onResolve, onReject) {\n    var nextPromise = new Promise(function (resolve, reject) {\n     this.resolve = resolve;\n     this.reject = reject;\n    });\n    this._handlers.push({\n     thisPromise: this,\n     onResolve: onResolve,\n     onReject: onReject,\n     nextPromise: nextPromise\n    });\n    HandlerManager.scheduleHandlers(this);\n    return nextPromise;\n   },\n   catch: function Promise_catch(onReject) {\n    return this.then(undefined, onReject);\n   }\n  };\n  globalScope.Promise = Promise;\n }());\n (function checkWeakMap() {\n  if (globalScope.WeakMap) {\n   return;\n  }\n  var id = 0;\n  function WeakMap() {\n   this.id = '$weakmap' + id++;\n  }\n  WeakMap.prototype = {\n   has: function (obj) {\n    return !!Object.getOwnPropertyDescriptor(obj, this.id);\n   },\n   get: function (obj, defaultValue) {\n    return this.has(obj) ? obj[this.id] : defaultValue;\n   },\n   set: function (obj, value) {\n    Object.defineProperty(obj, this.id, {\n     value: value,\n     enumerable: false,\n     configurable: true\n    });\n   },\n   delete: function (obj) {\n    delete obj[this.id];\n   }\n  };\n  globalScope.WeakMap = WeakMap;\n }());\n (function checkURLConstructor() {\n  var hasWorkingUrl = false;\n  try {\n   if (typeof URL === 'function' && typeof URL.prototype === 'object' && 'origin' in URL.prototype) {\n    var u = new URL('b', 'http://a');\n    u.pathname = 'c%20d';\n    hasWorkingUrl = u.href === 'http://a/c%20d';\n   }\n  } catch (e) {\n  }\n  if (hasWorkingUrl) {\n   return;\n  }\n  var relative = Object.create(null);\n  relative['ftp'] = 21;\n  relative['file'] = 0;\n  relative['gopher'] = 70;\n  relative['http'] = 80;\n  relative['https'] = 443;\n  relative['ws'] = 80;\n  relative['wss'] = 443;\n  var relativePathDotMapping = Object.create(null);\n  relativePathDotMapping['%2e'] = '.';\n  relativePathDotMapping['.%2e'] = '..';\n  relativePathDotMapping['%2e.'] = '..';\n  relativePathDotMapping['%2e%2e'] = '..';\n  function isRelativeScheme(scheme) {\n   return relative[scheme] !== undefined;\n  }\n  function invalid() {\n   clear.call(this);\n   this._isInvalid = true;\n  }\n  function IDNAToASCII(h) {\n   if (h === '') {\n    invalid.call(this);\n   }\n   return h.toLowerCase();\n  }\n  function percentEscape(c) {\n   var unicode = c.charCodeAt(0);\n   if (unicode > 0x20 && unicode < 0x7F && [\n     0x22,\n     0x23,\n     0x3C,\n     0x3E,\n     0x3F,\n     0x60\n    ].indexOf(unicode) === -1) {\n    return c;\n   }\n   return encodeURIComponent(c);\n  }\n  function percentEscapeQuery(c) {\n   var unicode = c.charCodeAt(0);\n   if (unicode > 0x20 && unicode < 0x7F && [\n     0x22,\n     0x23,\n     0x3C,\n     0x3E,\n     0x60\n    ].indexOf(unicode) === -1) {\n    return c;\n   }\n   return encodeURIComponent(c);\n  }\n  var EOF, ALPHA = /[a-zA-Z]/, ALPHANUMERIC = /[a-zA-Z0-9\\+\\-\\.]/;\n  function parse(input, stateOverride, base) {\n   function err(message) {\n    errors.push(message);\n   }\n   var state = stateOverride || 'scheme start', cursor = 0, buffer = '', seenAt = false, seenBracket = false, errors = [];\n   loop:\n    while ((input[cursor - 1] !== EOF || cursor === 0) && !this._isInvalid) {\n     var c = input[cursor];\n     switch (state) {\n     case 'scheme start':\n      if (c && ALPHA.test(c)) {\n       buffer += c.toLowerCase();\n       state = 'scheme';\n      } else if (!stateOverride) {\n       buffer = '';\n       state = 'no scheme';\n       continue;\n      } else {\n       err('Invalid scheme.');\n       break loop;\n      }\n      break;\n     case 'scheme':\n      if (c && ALPHANUMERIC.test(c)) {\n       buffer += c.toLowerCase();\n      } else if (c === ':') {\n       this._scheme = buffer;\n       buffer = '';\n       if (stateOverride) {\n        break loop;\n       }\n       if (isRelativeScheme(this._scheme)) {\n        this._isRelative = true;\n       }\n       if (this._scheme === 'file') {\n        state = 'relative';\n       } else if (this._isRelative && base && base._scheme === this._scheme) {\n        state = 'relative or authority';\n       } else if (this._isRelative) {\n        state = 'authority first slash';\n       } else {\n        state = 'scheme data';\n       }\n      } else if (!stateOverride) {\n       buffer = '';\n       cursor = 0;\n       state = 'no scheme';\n       continue;\n      } else if (EOF === c) {\n       break loop;\n      } else {\n       err('Code point not allowed in scheme: ' + c);\n       break loop;\n      }\n      break;\n     case 'scheme data':\n      if (c === '?') {\n       this._query = '?';\n       state = 'query';\n      } else if (c === '#') {\n       this._fragment = '#';\n       state = 'fragment';\n      } else {\n       if (EOF !== c && '\\t' !== c && '\\n' !== c && '\\r' !== c) {\n        this._schemeData += percentEscape(c);\n       }\n      }\n      break;\n     case 'no scheme':\n      if (!base || !isRelativeScheme(base._scheme)) {\n       err('Missing scheme.');\n       invalid.call(this);\n      } else {\n       state = 'relative';\n       continue;\n      }\n      break;\n     case 'relative or authority':\n      if (c === '/' && input[cursor + 1] === '/') {\n       state = 'authority ignore slashes';\n      } else {\n       err('Expected /, got: ' + c);\n       state = 'relative';\n       continue;\n      }\n      break;\n     case 'relative':\n      this._isRelative = true;\n      if ('file' !== this._scheme) {\n       this._scheme = base._scheme;\n      }\n      if (EOF === c) {\n       this._host = base._host;\n       this._port = base._port;\n       this._path = base._path.slice();\n       this._query = base._query;\n       this._username = base._username;\n       this._password = base._password;\n       break loop;\n      } else if (c === '/' || c === '\\\\') {\n       if (c === '\\\\') {\n        err('\\\\ is an invalid code point.');\n       }\n       state = 'relative slash';\n      } else if (c === '?') {\n       this._host = base._host;\n       this._port = base._port;\n       this._path = base._path.slice();\n       this._query = '?';\n       this._username = base._username;\n       this._password = base._password;\n       state = 'query';\n      } else if (c === '#') {\n       this._host = base._host;\n       this._port = base._port;\n       this._path = base._path.slice();\n       this._query = base._query;\n       this._fragment = '#';\n       this._username = base._username;\n       this._password = base._password;\n       state = 'fragment';\n      } else {\n       var nextC = input[cursor + 1];\n       var nextNextC = input[cursor + 2];\n       if ('file' !== this._scheme || !ALPHA.test(c) || nextC !== ':' && nextC !== '|' || EOF !== nextNextC && '/' !== nextNextC && '\\\\' !== nextNextC && '?' !== nextNextC && '#' !== nextNextC) {\n        this._host = base._host;\n        this._port = base._port;\n        this._username = base._username;\n        this._password = base._password;\n        this._path = base._path.slice();\n        this._path.pop();\n       }\n       state = 'relative path';\n       continue;\n      }\n      break;\n     case 'relative slash':\n      if (c === '/' || c === '\\\\') {\n       if (c === '\\\\') {\n        err('\\\\ is an invalid code point.');\n       }\n       if (this._scheme === 'file') {\n        state = 'file host';\n       } else {\n        state = 'authority ignore slashes';\n       }\n      } else {\n       if ('file' !== this._scheme) {\n        this._host = base._host;\n        this._port = base._port;\n        this._username = base._username;\n        this._password = base._password;\n       }\n       state = 'relative path';\n       continue;\n      }\n      break;\n     case 'authority first slash':\n      if (c === '/') {\n       state = 'authority second slash';\n      } else {\n       err('Expected \\'/\\', got: ' + c);\n       state = 'authority ignore slashes';\n       continue;\n      }\n      break;\n     case 'authority second slash':\n      state = 'authority ignore slashes';\n      if ('/' !== c) {\n       err('Expected \\'/\\', got: ' + c);\n       continue;\n      }\n      break;\n     case 'authority ignore slashes':\n      if ('/' !== c && '\\\\' !== c) {\n       state = 'authority';\n       continue;\n      } else {\n       err('Expected authority, got: ' + c);\n      }\n      break;\n     case 'authority':\n      if (c === '@') {\n       if (seenAt) {\n        err('@ already seen.');\n        buffer += '%40';\n       }\n       seenAt = true;\n       for (var i = 0; i < buffer.length; i++) {\n        var cp = buffer[i];\n        if (cp === '\\t' || cp === '\\n' || cp === '\\r') {\n         err('Invalid whitespace in authority.');\n         continue;\n        }\n        if (cp === ':' && this._password === null) {\n         this._password = '';\n         continue;\n        }\n        var tempC = percentEscape(cp);\n        if (null !== this._password) {\n         this._password += tempC;\n        } else {\n         this._username += tempC;\n        }\n       }\n       buffer = '';\n      } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n       cursor -= buffer.length;\n       buffer = '';\n       state = 'host';\n       continue;\n      } else {\n       buffer += c;\n      }\n      break;\n     case 'file host':\n      if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n       if (buffer.length === 2 && ALPHA.test(buffer[0]) && (buffer[1] === ':' || buffer[1] === '|')) {\n        state = 'relative path';\n       } else if (buffer.length === 0) {\n        state = 'relative path start';\n       } else {\n        this._host = IDNAToASCII.call(this, buffer);\n        buffer = '';\n        state = 'relative path start';\n       }\n       continue;\n      } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n       err('Invalid whitespace in file host.');\n      } else {\n       buffer += c;\n      }\n      break;\n     case 'host':\n     case 'hostname':\n      if (c === ':' && !seenBracket) {\n       this._host = IDNAToASCII.call(this, buffer);\n       buffer = '';\n       state = 'port';\n       if (stateOverride === 'hostname') {\n        break loop;\n       }\n      } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#') {\n       this._host = IDNAToASCII.call(this, buffer);\n       buffer = '';\n       state = 'relative path start';\n       if (stateOverride) {\n        break loop;\n       }\n       continue;\n      } else if ('\\t' !== c && '\\n' !== c && '\\r' !== c) {\n       if (c === '[') {\n        seenBracket = true;\n       } else if (c === ']') {\n        seenBracket = false;\n       }\n       buffer += c;\n      } else {\n       err('Invalid code point in host/hostname: ' + c);\n      }\n      break;\n     case 'port':\n      if (/[0-9]/.test(c)) {\n       buffer += c;\n      } else if (c === EOF || c === '/' || c === '\\\\' || c === '?' || c === '#' || stateOverride) {\n       if ('' !== buffer) {\n        var temp = parseInt(buffer, 10);\n        if (temp !== relative[this._scheme]) {\n         this._port = temp + '';\n        }\n        buffer = '';\n       }\n       if (stateOverride) {\n        break loop;\n       }\n       state = 'relative path start';\n       continue;\n      } else if (c === '\\t' || c === '\\n' || c === '\\r') {\n       err('Invalid code point in port: ' + c);\n      } else {\n       invalid.call(this);\n      }\n      break;\n     case 'relative path start':\n      if (c === '\\\\') {\n       err('\\'\\\\\\' not allowed in path.');\n      }\n      state = 'relative path';\n      if ('/' !== c && '\\\\' !== c) {\n       continue;\n      }\n      break;\n     case 'relative path':\n      if (c === EOF || c === '/' || c === '\\\\' || !stateOverride && (c === '?' || c === '#')) {\n       if (c === '\\\\') {\n        err('\\\\ not allowed in relative path.');\n       }\n       var tmp;\n       if (tmp = relativePathDotMapping[buffer.toLowerCase()]) {\n        buffer = tmp;\n       }\n       if (buffer === '..') {\n        this._path.pop();\n        if ('/' !== c && '\\\\' !== c) {\n         this._path.push('');\n        }\n       } else if (buffer === '.' && '/' !== c && '\\\\' !== c) {\n        this._path.push('');\n       } else if ('.' !== buffer) {\n        if (this._scheme === 'file' && this._path.length === 0 && buffer.length === 2 && ALPHA.test(buffer[0]) && buffer[1] === '|') {\n         buffer = buffer[0] + ':';\n        }\n        this._path.push(buffer);\n       }\n       buffer = '';\n       if (c === '?') {\n        this._query = '?';\n        state = 'query';\n       } else if (c === '#') {\n        this._fragment = '#';\n        state = 'fragment';\n       }\n      } else if ('\\t' !== c && '\\n' !== c && '\\r' !== c) {\n       buffer += percentEscape(c);\n      }\n      break;\n     case 'query':\n      if (!stateOverride && c === '#') {\n       this._fragment = '#';\n       state = 'fragment';\n      } else if (EOF !== c && '\\t' !== c && '\\n' !== c && '\\r' !== c) {\n       this._query += percentEscapeQuery(c);\n      }\n      break;\n     case 'fragment':\n      if (EOF !== c && '\\t' !== c && '\\n' !== c && '\\r' !== c) {\n       this._fragment += c;\n      }\n      break;\n     }\n     cursor++;\n    }\n  }\n  function clear() {\n   this._scheme = '';\n   this._schemeData = '';\n   this._username = '';\n   this._password = null;\n   this._host = '';\n   this._port = '';\n   this._path = [];\n   this._query = '';\n   this._fragment = '';\n   this._isInvalid = false;\n   this._isRelative = false;\n  }\n  function JURL(url, base) {\n   if (base !== undefined && !(base instanceof JURL)) {\n    base = new JURL(String(base));\n   }\n   this._url = url;\n   clear.call(this);\n   var input = url.replace(/^[ \\t\\r\\n\\f]+|[ \\t\\r\\n\\f]+$/g, '');\n   parse.call(this, input, null, base);\n  }\n  JURL.prototype = {\n   toString: function () {\n    return this.href;\n   },\n   get href() {\n    if (this._isInvalid) {\n     return this._url;\n    }\n    var authority = '';\n    if ('' !== this._username || null !== this._password) {\n     authority = this._username + (null !== this._password ? ':' + this._password : '') + '@';\n    }\n    return this.protocol + (this._isRelative ? '//' + authority + this.host : '') + this.pathname + this._query + this._fragment;\n   },\n   set href(href) {\n    clear.call(this);\n    parse.call(this, href);\n   },\n   get protocol() {\n    return this._scheme + ':';\n   },\n   set protocol(protocol) {\n    if (this._isInvalid) {\n     return;\n    }\n    parse.call(this, protocol + ':', 'scheme start');\n   },\n   get host() {\n    return this._isInvalid ? '' : this._port ? this._host + ':' + this._port : this._host;\n   },\n   set host(host) {\n    if (this._isInvalid || !this._isRelative) {\n     return;\n    }\n    parse.call(this, host, 'host');\n   },\n   get hostname() {\n    return this._host;\n   },\n   set hostname(hostname) {\n    if (this._isInvalid || !this._isRelative) {\n     return;\n    }\n    parse.call(this, hostname, 'hostname');\n   },\n   get port() {\n    return this._port;\n   },\n   set port(port) {\n    if (this._isInvalid || !this._isRelative) {\n     return;\n    }\n    parse.call(this, port, 'port');\n   },\n   get pathname() {\n    return this._isInvalid ? '' : this._isRelative ? '/' + this._path.join('/') : this._schemeData;\n   },\n   set pathname(pathname) {\n    if (this._isInvalid || !this._isRelative) {\n     return;\n    }\n    this._path = [];\n    parse.call(this, pathname, 'relative path start');\n   },\n   get search() {\n    return this._isInvalid || !this._query || this._query === '?' ? '' : this._query;\n   },\n   set search(search) {\n    if (this._isInvalid || !this._isRelative) {\n     return;\n    }\n    this._query = '?';\n    if (search[0] === '?') {\n     search = search.slice(1);\n    }\n    parse.call(this, search, 'query');\n   },\n   get hash() {\n    return this._isInvalid || !this._fragment || this._fragment === '#' ? '' : this._fragment;\n   },\n   set hash(hash) {\n    if (this._isInvalid) {\n     return;\n    }\n    this._fragment = '#';\n    if (hash[0] === '#') {\n     hash = hash.slice(1);\n    }\n    parse.call(this, hash, 'fragment');\n   },\n   get origin() {\n    var host;\n    if (this._isInvalid || !this._scheme) {\n     return '';\n    }\n    switch (this._scheme) {\n    case 'data':\n    case 'file':\n    case 'javascript':\n    case 'mailto':\n     return 'null';\n    }\n    host = this.host;\n    if (!host) {\n     return '';\n    }\n    return this._scheme + '://' + host;\n   }\n  };\n  var OriginalURL = globalScope.URL;\n  if (OriginalURL) {\n   JURL.createObjectURL = function (blob) {\n    return OriginalURL.createObjectURL.apply(OriginalURL, arguments);\n   };\n   JURL.revokeObjectURL = function (url) {\n    OriginalURL.revokeObjectURL(url);\n   };\n  }\n  globalScope.URL = JURL;\n }());\n}\n/* WEBPACK VAR INJECTION */}.call(exports, __w_pdfjs_require__(9)))\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __w_pdfjs_require__) {\n\n\"use strict\";\n\nvar pdfjsVersion = '1.7.363';\nvar pdfjsBuild = '14b91a47';\nvar pdfjsCoreWorker = __w_pdfjs_require__(8);\n{\n __w_pdfjs_require__(19);\n}\nexports.WorkerMessageHandler = pdfjsCoreWorker.WorkerMessageHandler;\n\n/***/ })\n/******/ ]);\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/pdfjs-dist/build/pdf.worker.js\n// module id = 1732\n// module chunks = 21"],"sourceRoot":""}