{"version":3,"sources":["webpack:///15.fdf6ae91d47bf8eda61b.js","webpack:///./components/permalink_view.jsx","webpack:///./components/post_view/post_focus_view_controller.jsx"],"names":["webpackJsonp","1724","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_getPrototypeOf","_getPrototypeOf2","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","_possibleConstructorReturn2","_possibleConstructorReturn3","_inherits2","_inherits3","_jquery","_jquery2","_react","_react2","_channel_header","_channel_header2","_post_focus_view_controller","_post_focus_view_controller2","_channel_store","_channel_store2","_team_store","_team_store2","_es","_reactIntl","PermalinkView","_React$Component","props","this","_this","__proto__","call","getStateFromStores","bind","isStateValid","updateState","state","key","postId","params","postid","channel","getCurrent","channelId","id","channelName","name","team","teamName","setState","addChangeListener","addClass","removeChangeListener","removeClass","nextProps","createElement","className","Link","to","FormattedMessage","defaultMessage","Component","propTypes","PropTypes","object","isRequired","2024","_interopRequireWildcard","newObj","prototype","hasOwnProperty","_stringify","_stringify2","_assign","_assign2","_post_list","_post_list2","_loading_screen","_loading_screen2","_emoji_store","_emoji_store2","_post_store","_post_store2","_user_store","_user_store2","_preference_store","_preference_store2","_webrtc_store","_webrtc_store2","_utils","Utils","_constants","_constants2","Preferences","ScrollTypes","PostFocusView","onChannelChange","onPostsChange","onUserChange","onEmojiChange","onStatusChange","onPreferenceChange","onPostListScroll","onBusy","focusedPostId","getFocusedPostId","profiles","getProfiles","joinLeaveEnabled","getBool","CATEGORY_ADVANCED_SETTINGS","statuses","getStatuses","postList","filterPosts","currentUser","getCurrentUser","isBusy","scrollType","POST","currentChannel","getCurrentId","slice","scrollPostId","atTop","getVisibilityAtTop","atBottom","getVisibilityAtBottom","emojis","getEmojis","displayNameType","get","CATEGORY_DISPLAY_SETTINGS","displayPostsInCenter","CHANNEL_DISPLAY_MODE","CHANNEL_DISPLAY_MODE_DEFAULT","CHANNEL_DISPLAY_MODE_CENTERED","compactDisplay","MESSAGE_DISPLAY","MESSAGE_DISPLAY_DEFAULT","MESSAGE_DISPLAY_COMPACT","previewsCollapsed","COLLAPSE_DISPLAY","useMilitaryTime","USE_MILITARY_TIME","flaggedPosts","getCategory","CATEGORY_FLAGGED_POST","addStatusesChangeListener","addBusyListener","removeStatusesChangeListener","removeBusyListener","JSON","parse","category","previewSuffix","generateId","FREE","postsToHighlight","content","position","postListScrolled","showMoreMessagesTop","showMoreMessagesBottom","isFocusPost"],"mappings":"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","file":"15.fdf6ae91d47bf8eda61b.js","sourcesContent":["webpackJsonp([15],{\n\n/***/ 1724:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(6);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(2);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(4);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(3);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _jquery = __webpack_require__(0);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _react = __webpack_require__(1);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _channel_header = __webpack_require__(1672);\n\nvar _channel_header2 = _interopRequireDefault(_channel_header);\n\nvar _post_focus_view_controller = __webpack_require__(2024);\n\nvar _post_focus_view_controller2 = _interopRequireDefault(_post_focus_view_controller);\n\nvar _channel_store = __webpack_require__(24);\n\nvar _channel_store2 = _interopRequireDefault(_channel_store);\n\nvar _team_store = __webpack_require__(23);\n\nvar _team_store2 = _interopRequireDefault(_team_store);\n\nvar _es = __webpack_require__(37);\n\nvar _reactIntl = __webpack_require__(13);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Copyright (c) 2016 Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nvar PermalinkView = function (_React$Component) {\n    (0, _inherits3.default)(PermalinkView, _React$Component);\n\n    function PermalinkView(props) {\n        (0, _classCallCheck3.default)(this, PermalinkView);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (PermalinkView.__proto__ || (0, _getPrototypeOf2.default)(PermalinkView)).call(this, props));\n\n        _this.getStateFromStores = _this.getStateFromStores.bind(_this);\n        _this.isStateValid = _this.isStateValid.bind(_this);\n        _this.updateState = _this.updateState.bind(_this);\n\n        _this.state = _this.getStateFromStores(props);\n        return _this;\n    }\n\n    (0, _createClass3.default)(PermalinkView, [{\n        key: 'getStateFromStores',\n        value: function getStateFromStores(props) {\n            var postId = props.params.postid;\n            var channel = _channel_store2.default.getCurrent();\n            var channelId = channel ? channel.id : '';\n            var channelName = channel ? channel.name : '';\n            var team = _team_store2.default.getCurrent();\n            var teamName = team ? team.name : '';\n            return {\n                channelId: channelId,\n                channelName: channelName,\n                teamName: teamName,\n                postId: postId\n            };\n        }\n    }, {\n        key: 'isStateValid',\n        value: function isStateValid() {\n            return this.state.channelId !== '' && this.state.teamName;\n        }\n    }, {\n        key: 'updateState',\n        value: function updateState() {\n            this.setState(this.getStateFromStores(this.props));\n        }\n    }, {\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            _channel_store2.default.addChangeListener(this.updateState);\n            _team_store2.default.addChangeListener(this.updateState);\n\n            (0, _jquery2.default)('body').addClass('app__body');\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            _channel_store2.default.removeChangeListener(this.updateState);\n            _team_store2.default.removeChangeListener(this.updateState);\n\n            (0, _jquery2.default)('body').removeClass('app__body');\n        }\n    }, {\n        key: 'componentWillReceiveProps',\n        value: function componentWillReceiveProps(nextProps) {\n            this.setState(this.getStateFromStores(nextProps));\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            if (!this.isStateValid()) {\n                return null;\n            }\n            return _react2.default.createElement(\n                'div',\n                {\n                    id: 'app-content',\n                    className: 'app__content'\n                },\n                _react2.default.createElement(_channel_header2.default, {\n                    channelId: this.state.channelId\n                }),\n                _react2.default.createElement(_post_focus_view_controller2.default, null),\n                _react2.default.createElement(\n                    'div',\n                    {\n                        id: 'archive-link-home'\n                    },\n                    _react2.default.createElement(\n                        _es.Link,\n                        {\n                            to: '/' + this.state.teamName + '/channels/' + this.state.channelName\n                        },\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'center_panel.recent',\n                            defaultMessage: 'Click here to jump to recent messages. '\n                        }),\n                        _react2.default.createElement('i', { className: 'fa fa-arrow-down' })\n                    )\n                )\n            );\n        }\n    }]);\n    return PermalinkView;\n}(_react2.default.Component);\n\nexports.default = PermalinkView;\n\n\nPermalinkView.propTypes = {\n    params: _react2.default.PropTypes.object.isRequired\n};\n\n/***/ }),\n\n/***/ 2024:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _stringify = __webpack_require__(71);\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _assign = __webpack_require__(31);\n\nvar _assign2 = _interopRequireDefault(_assign);\n\nvar _getPrototypeOf = __webpack_require__(6);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(2);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(4);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(3);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _post_list = __webpack_require__(1677);\n\nvar _post_list2 = _interopRequireDefault(_post_list);\n\nvar _loading_screen = __webpack_require__(164);\n\nvar _loading_screen2 = _interopRequireDefault(_loading_screen);\n\nvar _emoji_store = __webpack_require__(80);\n\nvar _emoji_store2 = _interopRequireDefault(_emoji_store);\n\nvar _post_store = __webpack_require__(140);\n\nvar _post_store2 = _interopRequireDefault(_post_store);\n\nvar _user_store = __webpack_require__(15);\n\nvar _user_store2 = _interopRequireDefault(_user_store);\n\nvar _channel_store = __webpack_require__(24);\n\nvar _channel_store2 = _interopRequireDefault(_channel_store);\n\nvar _preference_store = __webpack_require__(42);\n\nvar _preference_store2 = _interopRequireDefault(_preference_store);\n\nvar _webrtc_store = __webpack_require__(334);\n\nvar _webrtc_store2 = _interopRequireDefault(_webrtc_store);\n\nvar _utils = __webpack_require__(11);\n\nvar Utils = _interopRequireWildcard(_utils);\n\nvar _constants = __webpack_require__(8);\n\nvar _constants2 = _interopRequireDefault(_constants);\n\nvar _react = __webpack_require__(1);\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n// Copyright (c) 2015 Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nvar Preferences = _constants2.default.Preferences;\nvar ScrollTypes = _constants2.default.ScrollTypes;\n\nvar PostFocusView = function (_React$Component) {\n    (0, _inherits3.default)(PostFocusView, _React$Component);\n\n    function PostFocusView(props) {\n        (0, _classCallCheck3.default)(this, PostFocusView);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (PostFocusView.__proto__ || (0, _getPrototypeOf2.default)(PostFocusView)).call(this, props));\n\n        _this.onChannelChange = _this.onChannelChange.bind(_this);\n        _this.onPostsChange = _this.onPostsChange.bind(_this);\n        _this.onUserChange = _this.onUserChange.bind(_this);\n        _this.onEmojiChange = _this.onEmojiChange.bind(_this);\n        _this.onStatusChange = _this.onStatusChange.bind(_this);\n        _this.onPreferenceChange = _this.onPreferenceChange.bind(_this);\n        _this.onPostListScroll = _this.onPostListScroll.bind(_this);\n        _this.onBusy = _this.onBusy.bind(_this);\n\n        var focusedPostId = _post_store2.default.getFocusedPostId();\n\n        var channel = _channel_store2.default.getCurrent();\n        var profiles = _user_store2.default.getProfiles();\n\n        var joinLeaveEnabled = _preference_store2.default.getBool(_constants2.default.Preferences.CATEGORY_ADVANCED_SETTINGS, 'join_leave', true);\n\n        var statuses = void 0;\n        if (channel) {\n            statuses = (0, _assign2.default)({}, _user_store2.default.getStatuses());\n        }\n\n        _this.state = {\n            postList: _post_store2.default.filterPosts(focusedPostId, joinLeaveEnabled),\n            currentUser: _user_store2.default.getCurrentUser(),\n            isBusy: _webrtc_store2.default.isBusy(),\n            profiles: profiles,\n            statuses: statuses,\n            scrollType: ScrollTypes.POST,\n            currentChannel: _channel_store2.default.getCurrentId().slice(),\n            scrollPostId: focusedPostId,\n            atTop: _post_store2.default.getVisibilityAtTop(focusedPostId),\n            atBottom: _post_store2.default.getVisibilityAtBottom(focusedPostId),\n            emojis: _emoji_store2.default.getEmojis(),\n            displayNameType: _preference_store2.default.get(Preferences.CATEGORY_DISPLAY_SETTINGS, 'name_format', 'false'),\n            displayPostsInCenter: _preference_store2.default.get(Preferences.CATEGORY_DISPLAY_SETTINGS, Preferences.CHANNEL_DISPLAY_MODE, Preferences.CHANNEL_DISPLAY_MODE_DEFAULT) === Preferences.CHANNEL_DISPLAY_MODE_CENTERED,\n            compactDisplay: _preference_store2.default.get(Preferences.CATEGORY_DISPLAY_SETTINGS, Preferences.MESSAGE_DISPLAY, Preferences.MESSAGE_DISPLAY_DEFAULT) === Preferences.MESSAGE_DISPLAY_COMPACT,\n            previewsCollapsed: _preference_store2.default.get(Preferences.CATEGORY_DISPLAY_SETTINGS, Preferences.COLLAPSE_DISPLAY, 'false'),\n            useMilitaryTime: _preference_store2.default.getBool(_constants2.default.Preferences.CATEGORY_DISPLAY_SETTINGS, Preferences.USE_MILITARY_TIME, false),\n            flaggedPosts: _preference_store2.default.getCategory(_constants2.default.Preferences.CATEGORY_FLAGGED_POST)\n        };\n        return _this;\n    }\n\n    (0, _createClass3.default)(PostFocusView, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            _channel_store2.default.addChangeListener(this.onChannelChange);\n            _post_store2.default.addChangeListener(this.onPostsChange);\n            _user_store2.default.addChangeListener(this.onUserChange);\n            _user_store2.default.addStatusesChangeListener(this.onStatusChange);\n            _emoji_store2.default.addChangeListener(this.onEmojiChange);\n            _preference_store2.default.addChangeListener(this.onPreferenceChange);\n            _webrtc_store2.default.addBusyListener(this.onBusy);\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            _channel_store2.default.removeChangeListener(this.onChannelChange);\n            _post_store2.default.removeChangeListener(this.onPostsChange);\n            _user_store2.default.removeChangeListener(this.onUserChange);\n            _user_store2.default.removeStatusesChangeListener(this.onStatusChange);\n            _emoji_store2.default.removeChangeListener(this.onEmojiChange);\n            _preference_store2.default.removeChangeListener(this.onPreferenceChange);\n            _webrtc_store2.default.removeBusyListener(this.onBusy);\n        }\n    }, {\n        key: 'onChannelChange',\n        value: function onChannelChange() {\n            var currentChannel = _channel_store2.default.getCurrentId();\n            if (this.state.currentChannel !== currentChannel) {\n                this.setState({\n                    currentChannel: currentChannel.slice(),\n                    scrollType: ScrollTypes.POST\n                });\n            }\n        }\n    }, {\n        key: 'onPostsChange',\n        value: function onPostsChange() {\n            var focusedPostId = _post_store2.default.getFocusedPostId();\n            if (focusedPostId == null) {\n                return;\n            }\n\n            var joinLeaveEnabled = _preference_store2.default.getBool(_constants2.default.Preferences.CATEGORY_ADVANCED_SETTINGS, 'join_leave', true);\n\n            this.setState({\n                scrollPostId: focusedPostId,\n                postList: _post_store2.default.filterPosts(focusedPostId, joinLeaveEnabled),\n                atTop: _post_store2.default.getVisibilityAtTop(focusedPostId),\n                atBottom: _post_store2.default.getVisibilityAtBottom(focusedPostId)\n            });\n        }\n    }, {\n        key: 'onUserChange',\n        value: function onUserChange() {\n            this.setState({ currentUser: _user_store2.default.getCurrentUser(), profiles: JSON.parse((0, _stringify2.default)(_user_store2.default.getProfiles())) });\n        }\n    }, {\n        key: 'onStatusChange',\n        value: function onStatusChange() {\n            var channel = _channel_store2.default.getCurrent();\n            var statuses = void 0;\n            if (channel) {\n                statuses = (0, _assign2.default)({}, _user_store2.default.getStatuses());\n            }\n\n            this.setState({ statuses: statuses });\n        }\n    }, {\n        key: 'onEmojiChange',\n        value: function onEmojiChange() {\n            this.setState({\n                emojis: _emoji_store2.default.getEmojis()\n            });\n        }\n    }, {\n        key: 'onPreferenceChange',\n        value: function onPreferenceChange(category) {\n            // Bit of a hack to force render when this setting is updated\n            // regardless of change\n            var previewSuffix = '';\n            if (category === Preferences.CATEGORY_DISPLAY_SETTINGS) {\n                previewSuffix = '_' + Utils.generateId();\n            }\n\n            var focusedPostId = _post_store2.default.getFocusedPostId();\n            if (focusedPostId == null) {\n                return;\n            }\n\n            var joinLeaveEnabled = _preference_store2.default.getBool(_constants2.default.Preferences.CATEGORY_ADVANCED_SETTINGS, 'join_leave', true);\n\n            this.setState({\n                postList: _post_store2.default.filterPosts(focusedPostId, joinLeaveEnabled),\n                displayNameType: _preference_store2.default.get(Preferences.CATEGORY_DISPLAY_SETTINGS, 'name_format', 'false'),\n                displayPostsInCenter: _preference_store2.default.get(Preferences.CATEGORY_DISPLAY_SETTINGS, Preferences.CHANNEL_DISPLAY_MODE, Preferences.CHANNEL_DISPLAY_MODE_DEFAULT) === Preferences.CHANNEL_DISPLAY_MODE_CENTERED,\n                compactDisplay: _preference_store2.default.get(Preferences.CATEGORY_DISPLAY_SETTINGS, Preferences.MESSAGE_DISPLAY, Preferences.MESSAGE_DISPLAY_DEFAULT) === Preferences.MESSAGE_DISPLAY_COMPACT,\n                previewsCollapsed: _preference_store2.default.get(Preferences.CATEGORY_DISPLAY_SETTINGS, Preferences.COLLAPSE_DISPLAY, 'false') + previewSuffix,\n                useMilitaryTime: _preference_store2.default.getBool(_constants2.default.Preferences.CATEGORY_DISPLAY_SETTINGS, Preferences.USE_MILITARY_TIME, false),\n                flaggedPosts: _preference_store2.default.getCategory(_constants2.default.Preferences.CATEGORY_FLAGGED_POST)\n            });\n        }\n    }, {\n        key: 'onPostListScroll',\n        value: function onPostListScroll() {\n            this.setState({ scrollType: ScrollTypes.FREE });\n        }\n    }, {\n        key: 'onBusy',\n        value: function onBusy(isBusy) {\n            this.setState({ isBusy: isBusy });\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var postsToHighlight = {};\n            postsToHighlight[this.state.scrollPostId] = true;\n\n            var content = void 0;\n            if (this.state.postList == null) {\n                content = _react2.default.createElement(_loading_screen2.default, {\n                    position: 'absolute',\n                    key: 'loading'\n                });\n            } else {\n                content = _react2.default.createElement(_post_list2.default, {\n                    postList: this.state.postList,\n                    currentUser: this.state.currentUser,\n                    profiles: this.state.profiles,\n                    scrollType: this.state.scrollType,\n                    scrollPostId: this.state.scrollPostId,\n                    postListScrolled: this.onPostListScroll,\n                    displayNameType: this.state.displayNameType,\n                    displayPostsInCenter: this.state.displayPostsInCenter,\n                    compactDisplay: this.state.compactDisplay,\n                    previewsCollapsed: this.state.previewsCollapsed,\n                    useMilitaryTime: this.state.useMilitaryTime,\n                    showMoreMessagesTop: !this.state.atTop,\n                    showMoreMessagesBottom: !this.state.atBottom,\n                    postsToHighlight: postsToHighlight,\n                    isFocusPost: true,\n                    emojis: this.state.emojis,\n                    flaggedPosts: this.state.flaggedPosts,\n                    statuses: this.state.statuses,\n                    isBusy: this.state.isBusy\n                });\n            }\n\n            return _react2.default.createElement(\n                'div',\n                { id: 'post-list' },\n                content\n            );\n        }\n    }]);\n    return PostFocusView;\n}(_react2.default.Component);\n\nexports.default = PostFocusView;\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 15.fdf6ae91d47bf8eda61b.js","// Copyright (c) 2016 Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport $ from 'jquery';\nimport React from 'react';\n\nimport ChannelHeader from 'components/channel_header.jsx';\nimport PostFocusViewController from 'components/post_view/post_focus_view_controller.jsx';\n\nimport ChannelStore from 'stores/channel_store.jsx';\nimport TeamStore from 'stores/team_store.jsx';\n\nimport {Link} from 'react-router/es6';\nimport {FormattedMessage} from 'react-intl';\n\nexport default class PermalinkView extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.getStateFromStores = this.getStateFromStores.bind(this);\n        this.isStateValid = this.isStateValid.bind(this);\n        this.updateState = this.updateState.bind(this);\n\n        this.state = this.getStateFromStores(props);\n    }\n    getStateFromStores(props) {\n        const postId = props.params.postid;\n        const channel = ChannelStore.getCurrent();\n        const channelId = channel ? channel.id : '';\n        const channelName = channel ? channel.name : '';\n        const team = TeamStore.getCurrent();\n        const teamName = team ? team.name : '';\n        return {\n            channelId,\n            channelName,\n            teamName,\n            postId\n        };\n    }\n    isStateValid() {\n        return this.state.channelId !== '' && this.state.teamName;\n    }\n    updateState() {\n        this.setState(this.getStateFromStores(this.props));\n    }\n    componentDidMount() {\n        ChannelStore.addChangeListener(this.updateState);\n        TeamStore.addChangeListener(this.updateState);\n\n        $('body').addClass('app__body');\n    }\n    componentWillUnmount() {\n        ChannelStore.removeChangeListener(this.updateState);\n        TeamStore.removeChangeListener(this.updateState);\n\n        $('body').removeClass('app__body');\n    }\n    componentWillReceiveProps(nextProps) {\n        this.setState(this.getStateFromStores(nextProps));\n    }\n    render() {\n        if (!this.isStateValid()) {\n            return null;\n        }\n        return (\n            <div\n                id='app-content'\n                className='app__content'\n            >\n                <ChannelHeader\n                    channelId={this.state.channelId}\n                />\n                <PostFocusViewController/>\n                <div\n                    id='archive-link-home'\n                >\n                    <Link\n                        to={'/' + this.state.teamName + '/channels/' + this.state.channelName}\n                    >\n                        <FormattedMessage\n                            id='center_panel.recent'\n                            defaultMessage='Click here to jump to recent messages. '\n                        />\n                        <i className='fa fa-arrow-down'/>\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n}\n\nPermalinkView.propTypes = {\n    params: React.PropTypes.object.isRequired\n};\n\n\n\n// WEBPACK FOOTER //\n// ./components/permalink_view.jsx","// Copyright (c) 2015 Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport PostList from './components/post_list.jsx';\nimport LoadingScreen from 'components/loading_screen.jsx';\n\nimport EmojiStore from 'stores/emoji_store.jsx';\nimport PostStore from 'stores/post_store.jsx';\nimport UserStore from 'stores/user_store.jsx';\nimport ChannelStore from 'stores/channel_store.jsx';\nimport PreferenceStore from 'stores/preference_store.jsx';\nimport WebrtcStore from 'stores/webrtc_store.jsx';\n\nimport * as Utils from 'utils/utils.jsx';\n\nimport Constants from 'utils/constants.jsx';\nconst Preferences = Constants.Preferences;\nconst ScrollTypes = Constants.ScrollTypes;\n\nimport React from 'react';\n\nexport default class PostFocusView extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.onChannelChange = this.onChannelChange.bind(this);\n        this.onPostsChange = this.onPostsChange.bind(this);\n        this.onUserChange = this.onUserChange.bind(this);\n        this.onEmojiChange = this.onEmojiChange.bind(this);\n        this.onStatusChange = this.onStatusChange.bind(this);\n        this.onPreferenceChange = this.onPreferenceChange.bind(this);\n        this.onPostListScroll = this.onPostListScroll.bind(this);\n        this.onBusy = this.onBusy.bind(this);\n\n        const focusedPostId = PostStore.getFocusedPostId();\n\n        const channel = ChannelStore.getCurrent();\n        const profiles = UserStore.getProfiles();\n\n        const joinLeaveEnabled = PreferenceStore.getBool(Constants.Preferences.CATEGORY_ADVANCED_SETTINGS, 'join_leave', true);\n\n        let statuses;\n        if (channel) {\n            statuses = Object.assign({}, UserStore.getStatuses());\n        }\n\n        this.state = {\n            postList: PostStore.filterPosts(focusedPostId, joinLeaveEnabled),\n            currentUser: UserStore.getCurrentUser(),\n            isBusy: WebrtcStore.isBusy(),\n            profiles,\n            statuses,\n            scrollType: ScrollTypes.POST,\n            currentChannel: ChannelStore.getCurrentId().slice(),\n            scrollPostId: focusedPostId,\n            atTop: PostStore.getVisibilityAtTop(focusedPostId),\n            atBottom: PostStore.getVisibilityAtBottom(focusedPostId),\n            emojis: EmojiStore.getEmojis(),\n            displayNameType: PreferenceStore.get(Preferences.CATEGORY_DISPLAY_SETTINGS, 'name_format', 'false'),\n            displayPostsInCenter: PreferenceStore.get(Preferences.CATEGORY_DISPLAY_SETTINGS, Preferences.CHANNEL_DISPLAY_MODE, Preferences.CHANNEL_DISPLAY_MODE_DEFAULT) === Preferences.CHANNEL_DISPLAY_MODE_CENTERED,\n            compactDisplay: PreferenceStore.get(Preferences.CATEGORY_DISPLAY_SETTINGS, Preferences.MESSAGE_DISPLAY, Preferences.MESSAGE_DISPLAY_DEFAULT) === Preferences.MESSAGE_DISPLAY_COMPACT,\n            previewsCollapsed: PreferenceStore.get(Preferences.CATEGORY_DISPLAY_SETTINGS, Preferences.COLLAPSE_DISPLAY, 'false'),\n            useMilitaryTime: PreferenceStore.getBool(Constants.Preferences.CATEGORY_DISPLAY_SETTINGS, Preferences.USE_MILITARY_TIME, false),\n            flaggedPosts: PreferenceStore.getCategory(Constants.Preferences.CATEGORY_FLAGGED_POST)\n        };\n    }\n\n    componentDidMount() {\n        ChannelStore.addChangeListener(this.onChannelChange);\n        PostStore.addChangeListener(this.onPostsChange);\n        UserStore.addChangeListener(this.onUserChange);\n        UserStore.addStatusesChangeListener(this.onStatusChange);\n        EmojiStore.addChangeListener(this.onEmojiChange);\n        PreferenceStore.addChangeListener(this.onPreferenceChange);\n        WebrtcStore.addBusyListener(this.onBusy);\n    }\n\n    componentWillUnmount() {\n        ChannelStore.removeChangeListener(this.onChannelChange);\n        PostStore.removeChangeListener(this.onPostsChange);\n        UserStore.removeChangeListener(this.onUserChange);\n        UserStore.removeStatusesChangeListener(this.onStatusChange);\n        EmojiStore.removeChangeListener(this.onEmojiChange);\n        PreferenceStore.removeChangeListener(this.onPreferenceChange);\n        WebrtcStore.removeBusyListener(this.onBusy);\n    }\n\n    onChannelChange() {\n        const currentChannel = ChannelStore.getCurrentId();\n        if (this.state.currentChannel !== currentChannel) {\n            this.setState({\n                currentChannel: currentChannel.slice(),\n                scrollType: ScrollTypes.POST\n            });\n        }\n    }\n\n    onPostsChange() {\n        const focusedPostId = PostStore.getFocusedPostId();\n        if (focusedPostId == null) {\n            return;\n        }\n\n        const joinLeaveEnabled = PreferenceStore.getBool(Constants.Preferences.CATEGORY_ADVANCED_SETTINGS, 'join_leave', true);\n\n        this.setState({\n            scrollPostId: focusedPostId,\n            postList: PostStore.filterPosts(focusedPostId, joinLeaveEnabled),\n            atTop: PostStore.getVisibilityAtTop(focusedPostId),\n            atBottom: PostStore.getVisibilityAtBottom(focusedPostId)\n        });\n    }\n\n    onUserChange() {\n        this.setState({currentUser: UserStore.getCurrentUser(), profiles: JSON.parse(JSON.stringify(UserStore.getProfiles()))});\n    }\n\n    onStatusChange() {\n        const channel = ChannelStore.getCurrent();\n        let statuses;\n        if (channel) {\n            statuses = Object.assign({}, UserStore.getStatuses());\n        }\n\n        this.setState({statuses});\n    }\n\n    onEmojiChange() {\n        this.setState({\n            emojis: EmojiStore.getEmojis()\n        });\n    }\n\n    onPreferenceChange(category) {\n        // Bit of a hack to force render when this setting is updated\n        // regardless of change\n        let previewSuffix = '';\n        if (category === Preferences.CATEGORY_DISPLAY_SETTINGS) {\n            previewSuffix = '_' + Utils.generateId();\n        }\n\n        const focusedPostId = PostStore.getFocusedPostId();\n        if (focusedPostId == null) {\n            return;\n        }\n\n        const joinLeaveEnabled = PreferenceStore.getBool(Constants.Preferences.CATEGORY_ADVANCED_SETTINGS, 'join_leave', true);\n\n        this.setState({\n            postList: PostStore.filterPosts(focusedPostId, joinLeaveEnabled),\n            displayNameType: PreferenceStore.get(Preferences.CATEGORY_DISPLAY_SETTINGS, 'name_format', 'false'),\n            displayPostsInCenter: PreferenceStore.get(Preferences.CATEGORY_DISPLAY_SETTINGS, Preferences.CHANNEL_DISPLAY_MODE, Preferences.CHANNEL_DISPLAY_MODE_DEFAULT) === Preferences.CHANNEL_DISPLAY_MODE_CENTERED,\n            compactDisplay: PreferenceStore.get(Preferences.CATEGORY_DISPLAY_SETTINGS, Preferences.MESSAGE_DISPLAY, Preferences.MESSAGE_DISPLAY_DEFAULT) === Preferences.MESSAGE_DISPLAY_COMPACT,\n            previewsCollapsed: PreferenceStore.get(Preferences.CATEGORY_DISPLAY_SETTINGS, Preferences.COLLAPSE_DISPLAY, 'false') + previewSuffix,\n            useMilitaryTime: PreferenceStore.getBool(Constants.Preferences.CATEGORY_DISPLAY_SETTINGS, Preferences.USE_MILITARY_TIME, false),\n            flaggedPosts: PreferenceStore.getCategory(Constants.Preferences.CATEGORY_FLAGGED_POST)\n        });\n    }\n\n    onPostListScroll() {\n        this.setState({scrollType: ScrollTypes.FREE});\n    }\n\n    onBusy(isBusy) {\n        this.setState({isBusy});\n    }\n\n    render() {\n        const postsToHighlight = {};\n        postsToHighlight[this.state.scrollPostId] = true;\n\n        let content;\n        if (this.state.postList == null) {\n            content = (\n                <LoadingScreen\n                    position='absolute'\n                    key='loading'\n                />\n            );\n        } else {\n            content = (\n                <PostList\n                    postList={this.state.postList}\n                    currentUser={this.state.currentUser}\n                    profiles={this.state.profiles}\n                    scrollType={this.state.scrollType}\n                    scrollPostId={this.state.scrollPostId}\n                    postListScrolled={this.onPostListScroll}\n                    displayNameType={this.state.displayNameType}\n                    displayPostsInCenter={this.state.displayPostsInCenter}\n                    compactDisplay={this.state.compactDisplay}\n                    previewsCollapsed={this.state.previewsCollapsed}\n                    useMilitaryTime={this.state.useMilitaryTime}\n                    showMoreMessagesTop={!this.state.atTop}\n                    showMoreMessagesBottom={!this.state.atBottom}\n                    postsToHighlight={postsToHighlight}\n                    isFocusPost={true}\n                    emojis={this.state.emojis}\n                    flaggedPosts={this.state.flaggedPosts}\n                    statuses={this.state.statuses}\n                    isBusy={this.state.isBusy}\n                />\n            );\n        }\n\n        return (\n            <div id='post-list'>\n                {content}\n            </div>\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./components/post_view/post_focus_view_controller.jsx"],"sourceRoot":""}