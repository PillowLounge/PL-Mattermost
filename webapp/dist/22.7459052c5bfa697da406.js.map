{"version":3,"sources":["webpack:///22.7459052c5bfa697da406.js","webpack:///./components/signup/signup_controller.jsx"],"names":["webpackJsonp","1729","module","exports","__webpack_require__","global","_interopRequireWildcard","obj","__esModule","newObj","key","Object","prototype","hasOwnProperty","call","default","_interopRequireDefault","defineProperty","value","_getPrototypeOf","_getPrototypeOf2","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","_possibleConstructorReturn2","_possibleConstructorReturn3","_inherits2","_inherits3","_react","_react2","_form_error","_form_error2","_loading_screen","_loading_screen2","_user_store","_user_store2","_browser_store","_browser_store2","_async_client","AsyncClient","_web_client","_web_client2","_global_actions","GlobalActions","_team_actions","_logo","_logo2","_error_bar","_error_bar2","_reactIntl","_es","SignupController","_React$Component","props","this","_this","__proto__","renderSignupControls","bind","loading","serverError","noOpenServerError","usedBefore","location","query","hash","h","inviteId","id","getCurrentUser","getGlobalItem","window","mm_config","EnableOpenServer","getNoAccounts","createElement","FormattedMessage","defaultMessage","state","_this2","checkVersion","removeGlobalItem","data","d","userLoggedIn","addUserToTeamFromInvite","team","emitInitialLoad","browserHistory","push","name","setState","getInviteInfo","inviteData","redirectUserToDefaultTeam","signupControls","EnableSignUpWithEmail","Link","className","to","search","EnableSignUpWithGitLab","href","getOAuthRoute","mm_license","IsLicensed","EnableSignUpWithGoogle","EnableSignUpWithOffice365","EnableLdap","EnableSaml","SamlLoginButtonText","length","signupDisabledError","error","margin","src","SiteName","Component","propTypes","PropTypes","object"],"mappings":"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","file":"22.7459052c5bfa697da406.js","sourcesContent":["webpackJsonp([22],{\n\n/***/ 1729:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n/* WEBPACK VAR INJECTION */(function(global) {\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(6);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(2);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(4);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(3);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = __webpack_require__(1);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _form_error = __webpack_require__(332);\n\nvar _form_error2 = _interopRequireDefault(_form_error);\n\nvar _loading_screen = __webpack_require__(164);\n\nvar _loading_screen2 = _interopRequireDefault(_loading_screen);\n\nvar _user_store = __webpack_require__(15);\n\nvar _user_store2 = _interopRequireDefault(_user_store);\n\nvar _browser_store = __webpack_require__(79);\n\nvar _browser_store2 = _interopRequireDefault(_browser_store);\n\nvar _async_client = __webpack_require__(20);\n\nvar AsyncClient = _interopRequireWildcard(_async_client);\n\nvar _web_client = __webpack_require__(28);\n\nvar _web_client2 = _interopRequireDefault(_web_client);\n\nvar _global_actions = __webpack_require__(41);\n\nvar GlobalActions = _interopRequireWildcard(_global_actions);\n\nvar _team_actions = __webpack_require__(333);\n\nvar _logo = __webpack_require__(1659);\n\nvar _logo2 = _interopRequireDefault(_logo);\n\nvar _error_bar = __webpack_require__(1662);\n\nvar _error_bar2 = _interopRequireDefault(_error_bar);\n\nvar _reactIntl = __webpack_require__(13);\n\nvar _es = __webpack_require__(37);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar SignupController = function (_React$Component) {\n    (0, _inherits3.default)(SignupController, _React$Component);\n\n    function SignupController(props) {\n        (0, _classCallCheck3.default)(this, SignupController);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (SignupController.__proto__ || (0, _getPrototypeOf2.default)(SignupController)).call(this, props));\n\n        _this.renderSignupControls = _this.renderSignupControls.bind(_this);\n\n        var loading = false;\n        var serverError = '';\n        var noOpenServerError = false;\n        var usedBefore = false;\n\n        if (props.location.query) {\n            var hash = props.location.query.h;\n            var inviteId = props.location.query.id;\n\n            if (inviteId) {\n                loading = true;\n            } else if (hash && !_user_store2.default.getCurrentUser()) {\n                usedBefore = _browser_store2.default.getGlobalItem(hash);\n            } else if (!inviteId && global.window.mm_config.EnableOpenServer !== 'true' && !_user_store2.default.getNoAccounts()) {\n                noOpenServerError = true;\n                serverError = _react2.default.createElement(_reactIntl.FormattedMessage, {\n                    id: 'signup_user_completed.no_open_server',\n                    defaultMessage: 'This server does not allow open signups.  Please speak with your Administrator to receive an invitation.'\n                });\n            }\n        }\n\n        _this.state = {\n            loading: loading,\n            serverError: serverError,\n            noOpenServerError: noOpenServerError,\n            usedBefore: usedBefore\n        };\n        return _this;\n    }\n\n    (0, _createClass3.default)(SignupController, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            var _this2 = this;\n\n            AsyncClient.checkVersion();\n            _browser_store2.default.removeGlobalItem('team');\n            if (this.props.location.query) {\n                var hash = this.props.location.query.h;\n                var data = this.props.location.query.d;\n                var inviteId = this.props.location.query.id;\n\n                var userLoggedIn = _user_store2.default.getCurrentUser() != null;\n\n                if ((inviteId || hash) && userLoggedIn) {\n                    (0, _team_actions.addUserToTeamFromInvite)(data, hash, inviteId, function (team) {\n                        GlobalActions.emitInitialLoad(function () {\n                            _es.browserHistory.push('/' + team.name + '/channels/town-square');\n                        });\n                    }, function () {\n                        _this2.setState({ // eslint-disable-line react/no-did-mount-set-state\n                            noOpenServerError: true,\n                            loading: false,\n                            serverError: _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'signup_user_completed.invalid_invite',\n                                defaultMessage: 'The invite link was invalid.  Please speak with your Administrator to receive an invitation.'\n                            })\n                        });\n                    });\n\n                    return;\n                }\n\n                if (inviteId) {\n                    (0, _team_actions.getInviteInfo)(inviteId, function (inviteData) {\n                        if (!inviteData) {\n                            return;\n                        }\n\n                        _this2.setState({ // eslint-disable-line react/no-did-mount-set-state\n                            serverError: '',\n                            loading: false\n                        });\n                    }, function () {\n                        _this2.setState({ // eslint-disable-line react/no-did-mount-set-state\n                            noOpenServerError: true,\n                            loading: false,\n                            serverError: _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'signup_user_completed.invalid_invite',\n                                defaultMessage: 'The invite link was invalid.  Please speak with your Administrator to receive an invitation.'\n                            })\n                        });\n                    });\n\n                    return;\n                }\n\n                if (userLoggedIn) {\n                    GlobalActions.redirectUserToDefaultTeam();\n                }\n            }\n        }\n    }, {\n        key: 'renderSignupControls',\n        value: function renderSignupControls() {\n            var signupControls = [];\n\n            if (global.window.mm_config.EnableSignUpWithEmail === 'true') {\n                signupControls.push(_react2.default.createElement(\n                    _es.Link,\n                    {\n                        className: 'btn btn-custom-login btn--full email',\n                        key: 'email',\n                        to: '/signup_email' + window.location.search\n                    },\n                    _react2.default.createElement('span', { className: 'icon fa fa-envelope' }),\n                    _react2.default.createElement(\n                        'span',\n                        null,\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'signup.email',\n                            defaultMessage: 'Email and Password'\n                        })\n                    )\n                ));\n            }\n\n            if (global.window.mm_config.EnableSignUpWithGitLab === 'true') {\n                signupControls.push(_react2.default.createElement(\n                    'a',\n                    {\n                        className: 'btn btn-custom-login btn--full gitlab',\n                        key: 'gitlab',\n                        href: _web_client2.default.getOAuthRoute() + '/gitlab/signup' + window.location.search\n                    },\n                    _react2.default.createElement('span', { className: 'icon' }),\n                    _react2.default.createElement(\n                        'span',\n                        null,\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'signup.gitlab',\n                            defaultMessage: 'GitLab Single-Sign-On'\n                        })\n                    )\n                ));\n            }\n\n            if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_config.EnableSignUpWithGoogle === 'true') {\n                signupControls.push(_react2.default.createElement(\n                    'a',\n                    {\n                        className: 'btn btn-custom-login btn--full google',\n                        key: 'google',\n                        href: _web_client2.default.getOAuthRoute() + '/google/signup' + window.location.search\n                    },\n                    _react2.default.createElement('span', { className: 'icon' }),\n                    _react2.default.createElement(\n                        'span',\n                        null,\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'signup.google',\n                            defaultMessage: 'Google Account'\n                        })\n                    )\n                ));\n            }\n\n            if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_config.EnableSignUpWithOffice365 === 'true') {\n                signupControls.push(_react2.default.createElement(\n                    'a',\n                    {\n                        className: 'btn btn-custom-login btn--full office365',\n                        key: 'office365',\n                        href: _web_client2.default.getOAuthRoute() + '/office365/signup' + window.location.search\n                    },\n                    _react2.default.createElement('span', { className: 'icon' }),\n                    _react2.default.createElement(\n                        'span',\n                        null,\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'signup.office365',\n                            defaultMessage: 'Office 365'\n                        })\n                    )\n                ));\n            }\n\n            if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_config.EnableLdap === 'true') {\n                signupControls.push(_react2.default.createElement(\n                    _es.Link,\n                    {\n                        className: 'btn btn-custom-login btn--full ldap',\n                        key: 'ldap',\n                        to: '/signup_ldap' + window.location.search\n                    },\n                    _react2.default.createElement('span', { className: 'icon fa fa-folder-open fa--margin-top' }),\n                    _react2.default.createElement(\n                        'span',\n                        null,\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'signup.ldap',\n                            defaultMessage: 'AD/LDAP Credentials'\n                        })\n                    )\n                ));\n            }\n\n            if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_config.EnableSaml === 'true') {\n                var query = '';\n                if (window.location.search) {\n                    query = '&action=signup';\n                } else {\n                    query = '?action=signup';\n                }\n\n                signupControls.push(_react2.default.createElement(\n                    'a',\n                    {\n                        className: 'btn btn-custom-login btn--full saml',\n                        key: 'saml',\n                        href: '/login/sso/saml' + window.location.search + query\n                    },\n                    _react2.default.createElement('span', { className: 'icon fa fa-lock fa--margin-top' }),\n                    _react2.default.createElement(\n                        'span',\n                        null,\n                        global.window.mm_config.SamlLoginButtonText\n                    )\n                ));\n            }\n\n            if (signupControls.length === 0) {\n                var signupDisabledError = _react2.default.createElement(_reactIntl.FormattedMessage, {\n                    id: 'signup_user_completed.none',\n                    defaultMessage: 'No user creation method has been enabled. Please contact an administrator for access.'\n                });\n                signupControls = _react2.default.createElement(_form_error2.default, {\n                    error: signupDisabledError,\n                    margin: true\n                });\n            } else if (signupControls.length === 1) {\n                if (global.window.mm_config.EnableSignUpWithEmail === 'true') {\n                    return _es.browserHistory.push('/signup_email' + window.location.search);\n                } else if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_config.EnableLdap === 'true') {\n                    return _es.browserHistory.push('/signup_ldap' + window.location.search);\n                }\n            }\n\n            return signupControls;\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            if (this.state.loading) {\n                return _react2.default.createElement(_loading_screen2.default, null);\n            }\n\n            if (this.state.usedBefore) {\n                return _react2.default.createElement(\n                    'div',\n                    null,\n                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'signup_user_completed.expired',\n                        defaultMessage: 'You\\'ve already completed the signup process for this invitation or this invitation has expired.'\n                    })\n                );\n            }\n\n            var serverError = null;\n            if (this.state.serverError) {\n                serverError = _react2.default.createElement(\n                    'div',\n                    { className: 'form-group has-error' },\n                    _react2.default.createElement(\n                        'label',\n                        { className: 'control-label' },\n                        this.state.serverError\n                    )\n                );\n            }\n\n            var signupControls = void 0;\n            if (this.state.noOpenServerError || this.state.usedBefore) {\n                signupControls = null;\n            } else {\n                signupControls = this.renderSignupControls();\n            }\n\n            return _react2.default.createElement(\n                'div',\n                null,\n                _react2.default.createElement(_error_bar2.default, null),\n                _react2.default.createElement(\n                    'div',\n                    { className: 'signup-header' },\n                    _react2.default.createElement(\n                        _es.Link,\n                        { to: '/' },\n                        _react2.default.createElement('span', { className: 'fa fa-chevron-left' }),\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'web.header.back'\n                        })\n                    )\n                ),\n                _react2.default.createElement(\n                    'div',\n                    { className: 'col-sm-12' },\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'signup-team__container' },\n                        _react2.default.createElement('img', {\n                            className: 'signup-team-logo',\n                            src: _logo2.default\n                        }),\n                        _react2.default.createElement(\n                            'div',\n                            { className: 'signup__content' },\n                            _react2.default.createElement(\n                                'h1',\n                                null,\n                                global.window.mm_config.SiteName\n                            ),\n                            _react2.default.createElement(\n                                'h4',\n                                { className: 'color--light' },\n                                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                    id: 'web.root.signup_info'\n                                })\n                            ),\n                            _react2.default.createElement(\n                                'div',\n                                { className: 'margin--extra' },\n                                _react2.default.createElement(\n                                    'h5',\n                                    null,\n                                    _react2.default.createElement(\n                                        'strong',\n                                        null,\n                                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                            id: 'signup.title',\n                                            defaultMessage: 'Create an account with:'\n                                        })\n                                    )\n                                )\n                            ),\n                            signupControls,\n                            serverError\n                        )\n                    )\n                )\n            );\n        }\n    }]);\n    return SignupController;\n}(_react2.default.Component); // Copyright (c) 2016 Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nexports.default = SignupController;\n\n\nSignupController.propTypes = {\n    location: _react2.default.PropTypes.object\n};\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(17)))\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 22.7459052c5bfa697da406.js","// Copyright (c) 2016 Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport React from 'react';\n\nimport FormError from 'components/form_error.jsx';\nimport LoadingScreen from 'components/loading_screen.jsx';\n\nimport UserStore from 'stores/user_store.jsx';\nimport BrowserStore from 'stores/browser_store.jsx';\n\nimport * as AsyncClient from 'utils/async_client.jsx';\nimport Client from 'client/web_client.jsx';\nimport * as GlobalActions from 'actions/global_actions.jsx';\nimport {addUserToTeamFromInvite, getInviteInfo} from 'actions/team_actions.jsx';\n\nimport logoImage from 'images/logo.png';\nimport ErrorBar from 'components/error_bar.jsx';\n\nimport {FormattedMessage} from 'react-intl';\nimport {browserHistory, Link} from 'react-router/es6';\n\nexport default class SignupController extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.renderSignupControls = this.renderSignupControls.bind(this);\n\n        let loading = false;\n        let serverError = '';\n        let noOpenServerError = false;\n        let usedBefore = false;\n\n        if (props.location.query) {\n            const hash = props.location.query.h;\n            const inviteId = props.location.query.id;\n\n            if (inviteId) {\n                loading = true;\n            } else if (hash && !UserStore.getCurrentUser()) {\n                usedBefore = BrowserStore.getGlobalItem(hash);\n            } else if (!inviteId && global.window.mm_config.EnableOpenServer !== 'true' && !UserStore.getNoAccounts()) {\n                noOpenServerError = true;\n                serverError = (\n                    <FormattedMessage\n                        id='signup_user_completed.no_open_server'\n                        defaultMessage='This server does not allow open signups.  Please speak with your Administrator to receive an invitation.'\n                    />\n                );\n            }\n        }\n\n        this.state = {\n            loading,\n            serverError,\n            noOpenServerError,\n            usedBefore\n        };\n    }\n\n    componentDidMount() {\n        AsyncClient.checkVersion();\n        BrowserStore.removeGlobalItem('team');\n        if (this.props.location.query) {\n            const hash = this.props.location.query.h;\n            const data = this.props.location.query.d;\n            const inviteId = this.props.location.query.id;\n\n            const userLoggedIn = UserStore.getCurrentUser() != null;\n\n            if ((inviteId || hash) && userLoggedIn) {\n                addUserToTeamFromInvite(\n                    data,\n                    hash,\n                    inviteId,\n                    (team) => {\n                        GlobalActions.emitInitialLoad(\n                            () => {\n                                browserHistory.push('/' + team.name + '/channels/town-square');\n                            }\n                        );\n                    },\n                    () => {\n                        this.setState({ // eslint-disable-line react/no-did-mount-set-state\n                            noOpenServerError: true,\n                            loading: false,\n                            serverError: (\n                                <FormattedMessage\n                                    id='signup_user_completed.invalid_invite'\n                                    defaultMessage='The invite link was invalid.  Please speak with your Administrator to receive an invitation.'\n                                />\n                            )\n                        });\n                    }\n                );\n\n                return;\n            }\n\n            if (inviteId) {\n                getInviteInfo(\n                    inviteId,\n                    (inviteData) => {\n                        if (!inviteData) {\n                            return;\n                        }\n\n                        this.setState({ // eslint-disable-line react/no-did-mount-set-state\n                            serverError: '',\n                            loading: false\n                        });\n                    },\n                    () => {\n                        this.setState({ // eslint-disable-line react/no-did-mount-set-state\n                            noOpenServerError: true,\n                            loading: false,\n                            serverError: (\n                                <FormattedMessage\n                                    id='signup_user_completed.invalid_invite'\n                                    defaultMessage='The invite link was invalid.  Please speak with your Administrator to receive an invitation.'\n                                />\n                            )\n                        });\n                    }\n                );\n\n                return;\n            }\n\n            if (userLoggedIn) {\n                GlobalActions.redirectUserToDefaultTeam();\n            }\n        }\n    }\n\n    renderSignupControls() {\n        let signupControls = [];\n\n        if (global.window.mm_config.EnableSignUpWithEmail === 'true') {\n            signupControls.push(\n                <Link\n                    className='btn btn-custom-login btn--full email'\n                    key='email'\n                    to={'/signup_email' + window.location.search}\n                >\n\n                    <span className='icon fa fa-envelope'/>\n                    <span>\n                        <FormattedMessage\n                            id='signup.email'\n                            defaultMessage='Email and Password'\n                        />\n                    </span>\n                </Link>\n            );\n        }\n\n        if (global.window.mm_config.EnableSignUpWithGitLab === 'true') {\n            signupControls.push(\n                <a\n                    className='btn btn-custom-login btn--full gitlab'\n                    key='gitlab'\n                    href={Client.getOAuthRoute() + '/gitlab/signup' + window.location.search}\n                >\n                    <span className='icon'/>\n                    <span>\n                        <FormattedMessage\n                            id='signup.gitlab'\n                            defaultMessage='GitLab Single-Sign-On'\n                        />\n                    </span>\n                </a>\n            );\n        }\n\n        if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_config.EnableSignUpWithGoogle === 'true') {\n            signupControls.push(\n                <a\n                    className='btn btn-custom-login btn--full google'\n                    key='google'\n                    href={Client.getOAuthRoute() + '/google/signup' + window.location.search}\n                >\n                    <span className='icon'/>\n                    <span>\n                        <FormattedMessage\n                            id='signup.google'\n                            defaultMessage='Google Account'\n                        />\n                    </span>\n                </a>\n            );\n        }\n\n        if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_config.EnableSignUpWithOffice365 === 'true') {\n            signupControls.push(\n                <a\n                    className='btn btn-custom-login btn--full office365'\n                    key='office365'\n                    href={Client.getOAuthRoute() + '/office365/signup' + window.location.search}\n                >\n                    <span className='icon'/>\n                    <span>\n                        <FormattedMessage\n                            id='signup.office365'\n                            defaultMessage='Office 365'\n                        />\n                    </span>\n                </a>\n           );\n        }\n\n        if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_config.EnableLdap === 'true') {\n            signupControls.push(\n                <Link\n                    className='btn btn-custom-login btn--full ldap'\n                    key='ldap'\n                    to={'/signup_ldap' + window.location.search}\n                >\n                    <span className='icon fa fa-folder-open fa--margin-top'/>\n                    <span>\n                        <FormattedMessage\n                            id='signup.ldap'\n                            defaultMessage='AD/LDAP Credentials'\n                        />\n                    </span>\n                </Link>\n            );\n        }\n\n        if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_config.EnableSaml === 'true') {\n            let query = '';\n            if (window.location.search) {\n                query = '&action=signup';\n            } else {\n                query = '?action=signup';\n            }\n\n            signupControls.push(\n                <a\n                    className='btn btn-custom-login btn--full saml'\n                    key='saml'\n                    href={'/login/sso/saml' + window.location.search + query}\n                >\n                    <span className='icon fa fa-lock fa--margin-top'/>\n                    <span>\n                        {global.window.mm_config.SamlLoginButtonText}\n                    </span>\n                </a>\n            );\n        }\n\n        if (signupControls.length === 0) {\n            const signupDisabledError = (\n                <FormattedMessage\n                    id='signup_user_completed.none'\n                    defaultMessage='No user creation method has been enabled. Please contact an administrator for access.'\n                />\n            );\n            signupControls = (\n                <FormError\n                    error={signupDisabledError}\n                    margin={true}\n                />\n            );\n        } else if (signupControls.length === 1) {\n            if (global.window.mm_config.EnableSignUpWithEmail === 'true') {\n                return browserHistory.push('/signup_email' + window.location.search);\n            } else if (global.window.mm_license.IsLicensed === 'true' && global.window.mm_config.EnableLdap === 'true') {\n                return browserHistory.push('/signup_ldap' + window.location.search);\n            }\n        }\n\n        return signupControls;\n    }\n\n    render() {\n        if (this.state.loading) {\n            return (<LoadingScreen/>);\n        }\n\n        if (this.state.usedBefore) {\n            return (\n                <div>\n                    <FormattedMessage\n                        id='signup_user_completed.expired'\n                        defaultMessage=\"You've already completed the signup process for this invitation or this invitation has expired.\"\n                    />\n                </div>\n            );\n        }\n\n        let serverError = null;\n        if (this.state.serverError) {\n            serverError = (\n                <div className={'form-group has-error'}>\n                    <label className='control-label'>{this.state.serverError}</label>\n                </div>\n            );\n        }\n\n        let signupControls;\n        if (this.state.noOpenServerError || this.state.usedBefore) {\n            signupControls = null;\n        } else {\n            signupControls = this.renderSignupControls();\n        }\n\n        return (\n            <div>\n                <ErrorBar/>\n                <div className='signup-header'>\n                    <Link to='/'>\n                        <span className='fa fa-chevron-left'/>\n                        <FormattedMessage\n                            id='web.header.back'\n                        />\n                    </Link>\n                </div>\n                <div className='col-sm-12'>\n                    <div className='signup-team__container'>\n                        <img\n                            className='signup-team-logo'\n                            src={logoImage}\n                        />\n                        <div className='signup__content'>\n                            <h1>{global.window.mm_config.SiteName}</h1>\n                            <h4 className='color--light'>\n                                <FormattedMessage\n                                    id='web.root.signup_info'\n                                />\n                            </h4>\n                            <div className='margin--extra'>\n                                <h5><strong>\n                                    <FormattedMessage\n                                        id='signup.title'\n                                        defaultMessage='Create an account with:'\n                                    />\n                                </strong></h5>\n                            </div>\n                            {signupControls}\n                            {serverError}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nSignupController.propTypes = {\n    location: React.PropTypes.object\n};\n\n\n\n// WEBPACK FOOTER //\n// ./components/signup/signup_controller.jsx"],"sourceRoot":""}