{"version":3,"sources":["webpack:///52.5c6da0160b7b62d0e89e.js","webpack:///./components/create_team/components/team_url.jsx"],"names":["webpackJsonp","1688","module","exports","__webpack_require__","_interopRequireWildcard","obj","__esModule","newObj","key","Object","prototype","hasOwnProperty","call","default","_interopRequireDefault","defineProperty","value","_stringify","_stringify2","_getPrototypeOf","_getPrototypeOf2","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","_possibleConstructorReturn2","_possibleConstructorReturn3","_inherits2","_inherits3","_team_actions","_diagnostics_actions","_constants","_constants2","_url","URL","_logo","_logo2","_react","_react2","_reactDom","_reactDom2","_reactBootstrap","_reactIntl","TeamUrl","_React$Component","props","this","_this","__proto__","submitBack","bind","submitNext","handleFocus","state","nameError","isLoading","trackEvent","e","preventDefault","wizard","updateParent","_this2","name","findDOMNode","refs","trim","cleanedName","cleanUpUrlable","urlRegex","setState","createElement","FormattedMessage","id","defaultMessage","length","MIN_TEAMNAME_LENGTH","MAX_TEAMNAME_LENGTH","values","min","max","test","index","RESERVED_TEAM_NAMES","indexOf","FormattedHTMLMessage","teamSignup","JSON","parse","team","type","checkIfTeamExists","foundTeam","createTeam","err","message","currentTarget","select","nameDivClass","className","title","getSiteURL","urlTooltip","Tooltip","finishMessage","src","OverlayTrigger","delayShow","OVERLAY_TIME_DELAY","placement","overlay","ref","placeholder","maxLength","defaultValue","autoFocus","onFocus","spellCheck","Button","bsStyle","disabled","onClick","href","Component","propTypes","PropTypes","object","func"],"mappings":"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","file":"52.5c6da0160b7b62d0e89e.js","sourcesContent":["webpackJsonp([52],{\n\n/***/ 1688:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _stringify = __webpack_require__(71);\n\nvar _stringify2 = _interopRequireDefault(_stringify);\n\nvar _getPrototypeOf = __webpack_require__(6);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(2);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(4);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(3);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _team_actions = __webpack_require__(333);\n\nvar _diagnostics_actions = __webpack_require__(165);\n\nvar _constants = __webpack_require__(8);\n\nvar _constants2 = _interopRequireDefault(_constants);\n\nvar _url = __webpack_require__(141);\n\nvar URL = _interopRequireWildcard(_url);\n\nvar _logo = __webpack_require__(1659);\n\nvar _logo2 = _interopRequireDefault(_logo);\n\nvar _react = __webpack_require__(1);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = __webpack_require__(30);\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _reactBootstrap = __webpack_require__(27);\n\nvar _reactIntl = __webpack_require__(13);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar TeamUrl = function (_React$Component) {\n    (0, _inherits3.default)(TeamUrl, _React$Component);\n\n    function TeamUrl(props) {\n        (0, _classCallCheck3.default)(this, TeamUrl);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (TeamUrl.__proto__ || (0, _getPrototypeOf2.default)(TeamUrl)).call(this, props));\n\n        _this.submitBack = _this.submitBack.bind(_this);\n        _this.submitNext = _this.submitNext.bind(_this);\n        _this.handleFocus = _this.handleFocus.bind(_this);\n\n        _this.state = {\n            nameError: '',\n            isLoading: false\n        };\n        return _this;\n    }\n\n    (0, _createClass3.default)(TeamUrl, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            (0, _diagnostics_actions.trackEvent)('signup', 'signup_team_02_url');\n        }\n    }, {\n        key: 'submitBack',\n        value: function submitBack(e) {\n            e.preventDefault();\n            this.props.state.wizard = 'display_name';\n            this.props.updateParent(this.props.state);\n        }\n    }, {\n        key: 'submitNext',\n        value: function submitNext(e) {\n            var _this2 = this;\n\n            e.preventDefault();\n\n            var name = _reactDom2.default.findDOMNode(this.refs.name).value.trim();\n            var cleanedName = URL.cleanUpUrlable(name);\n            var urlRegex = /^[a-z]+([a-z\\-0-9]+|(__)?)[a-z0-9]+$/g;\n\n            if (!name) {\n                this.setState({ nameError: _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'create_team.team_url.required',\n                        defaultMessage: 'This field is required'\n                    })\n                });\n                return;\n            }\n\n            if (cleanedName.length < _constants2.default.MIN_TEAMNAME_LENGTH || cleanedName.length > _constants2.default.MAX_TEAMNAME_LENGTH) {\n                this.setState({ nameError: _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'create_team.team_url.charLength',\n                        defaultMessage: 'Name must be {min} or more characters up to a maximum of {max}',\n                        values: {\n                            min: _constants2.default.MIN_TEAMNAME_LENGTH,\n                            max: _constants2.default.MAX_TEAMNAME_LENGTH\n                        }\n                    })\n                });\n                return;\n            }\n\n            if (cleanedName !== name || !urlRegex.test(name)) {\n                this.setState({ nameError: _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'create_team.team_url.regex',\n                        defaultMessage: 'Use only lower case letters, numbers and dashes. Must start with a letter and can\\'t end in a dash.'\n                    })\n                });\n                return;\n            }\n\n            for (var index = 0; index < _constants2.default.RESERVED_TEAM_NAMES.length; index++) {\n                if (cleanedName.indexOf(_constants2.default.RESERVED_TEAM_NAMES[index]) === 0) {\n                    this.setState({ nameError: _react2.default.createElement(_reactIntl.FormattedHTMLMessage, {\n                            id: 'create_team.team_url.taken',\n                            defaultMessage: 'This URL <a href=\"https://docs.mattermost.com/help/getting-started/creating-teams.html#team-url\" target=\"_blank\">starts with a reserved word</a> or is unavailable. Please try another.'\n                        })\n                    });\n                    return;\n                }\n            }\n\n            this.setState({ isLoading: true });\n            var teamSignup = JSON.parse((0, _stringify2.default)(this.props.state));\n            teamSignup.team.type = 'O';\n            teamSignup.team.name = name;\n\n            (0, _team_actions.checkIfTeamExists)(name, function (foundTeam) {\n                if (foundTeam) {\n                    _this2.setState({ nameError: _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'create_team.team_url.unavailable',\n                            defaultMessage: 'This URL is taken or unavailable. Please try another.'\n                        })\n                    });\n                    _this2.setState({ isLoading: false });\n                    return;\n                }\n\n                (0, _team_actions.createTeam)(teamSignup.team, function () {\n                    (0, _diagnostics_actions.trackEvent)('signup', 'signup_team_03_complete');\n                }, function (err) {\n                    _this2.setState({ nameError: err.message });\n                    _this2.setState({ isLoading: false });\n                });\n            }, function (err) {\n                _this2.setState({ nameError: err.message });\n            });\n        }\n    }, {\n        key: 'handleFocus',\n        value: function handleFocus(e) {\n            e.preventDefault();\n            e.currentTarget.select();\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var nameError = null;\n            var nameDivClass = 'form-group';\n            if (this.state.nameError) {\n                nameError = _react2.default.createElement(\n                    'label',\n                    { className: 'control-label' },\n                    this.state.nameError\n                );\n                nameDivClass += ' has-error';\n            }\n\n            var title = URL.getSiteURL() + '/';\n            var urlTooltip = _react2.default.createElement(\n                _reactBootstrap.Tooltip,\n                { id: 'urlTooltip' },\n                title\n            );\n\n            var finishMessage = _react2.default.createElement(_reactIntl.FormattedMessage, {\n                id: 'create_team.team_url.finish',\n                defaultMessage: 'Finish'\n            });\n\n            if (this.state.isLoading) {\n                finishMessage = _react2.default.createElement(_reactIntl.FormattedMessage, {\n                    id: 'create_team.team_url.creatingTeam',\n                    defaultMessage: 'Creating team...'\n                });\n            }\n\n            return _react2.default.createElement(\n                'div',\n                null,\n                _react2.default.createElement(\n                    'form',\n                    null,\n                    _react2.default.createElement('img', {\n                        className: 'signup-team-logo',\n                        src: _logo2.default\n                    }),\n                    _react2.default.createElement(\n                        'h2',\n                        null,\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'create_team.team_url.teamUrl',\n                            defaultMessage: 'Team URL'\n                        })\n                    ),\n                    _react2.default.createElement(\n                        'div',\n                        { className: nameDivClass },\n                        _react2.default.createElement(\n                            'div',\n                            { className: 'row' },\n                            _react2.default.createElement(\n                                'div',\n                                { className: 'col-sm-11' },\n                                _react2.default.createElement(\n                                    'div',\n                                    { className: 'input-group input-group--limit' },\n                                    _react2.default.createElement(\n                                        _reactBootstrap.OverlayTrigger,\n                                        {\n                                            delayShow: _constants2.default.OVERLAY_TIME_DELAY,\n                                            placement: 'top',\n                                            overlay: urlTooltip\n                                        },\n                                        _react2.default.createElement(\n                                            'span',\n                                            { className: 'input-group-addon' },\n                                            title\n                                        )\n                                    ),\n                                    _react2.default.createElement('input', {\n                                        type: 'text',\n                                        ref: 'name',\n                                        className: 'form-control',\n                                        placeholder: '',\n                                        maxLength: '128',\n                                        defaultValue: this.props.state.team.name,\n                                        autoFocus: true,\n                                        onFocus: this.handleFocus,\n                                        spellCheck: 'false'\n                                    })\n                                )\n                            )\n                        ),\n                        nameError\n                    ),\n                    _react2.default.createElement(\n                        'p',\n                        null,\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'create_team.team_url.webAddress',\n                            defaultMessage: 'Choose the web address of your new team:'\n                        })\n                    ),\n                    _react2.default.createElement(\n                        'ul',\n                        { className: 'color--light' },\n                        _react2.default.createElement(_reactIntl.FormattedHTMLMessage, {\n                            id: 'create_team.team_url.hint',\n                            defaultMessage: '<li>Short and memorable is best</li> <li>Use lowercase letters, numbers and dashes</li> <li>Must start with a letter and can\\'t end in a dash</li>'\n                        })\n                    ),\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'margin--extra' },\n                        _react2.default.createElement(\n                            _reactBootstrap.Button,\n                            {\n                                type: 'submit',\n                                bsStyle: 'primary',\n                                disabled: this.state.isLoading,\n                                onClick: this.submitNext\n                            },\n                            finishMessage\n                        )\n                    ),\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'margin--extra' },\n                        _react2.default.createElement(\n                            'a',\n                            {\n                                href: '#',\n                                onClick: this.submitBack\n                            },\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'create_team.team_url.back',\n                                defaultMessage: 'Back to previous step'\n                            })\n                        )\n                    )\n                )\n            );\n        }\n    }]);\n    return TeamUrl;\n}(_react2.default.Component); // Copyright (c) 2015 Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nexports.default = TeamUrl;\n\n\nTeamUrl.propTypes = {\n    state: _react2.default.PropTypes.object,\n    updateParent: _react2.default.PropTypes.func\n};\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 52.5c6da0160b7b62d0e89e.js","// Copyright (c) 2015 Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport {checkIfTeamExists, createTeam} from 'actions/team_actions.jsx';\nimport {trackEvent} from 'actions/diagnostics_actions.jsx';\nimport Constants from 'utils/constants.jsx';\nimport * as URL from 'utils/url.jsx';\n\nimport logoImage from 'images/logo.png';\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Button, Tooltip, OverlayTrigger} from 'react-bootstrap';\nimport {FormattedMessage, FormattedHTMLMessage} from 'react-intl';\n\nexport default class TeamUrl extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.submitBack = this.submitBack.bind(this);\n        this.submitNext = this.submitNext.bind(this);\n        this.handleFocus = this.handleFocus.bind(this);\n\n        this.state = {\n            nameError: '',\n            isLoading: false\n        };\n    }\n\n    componentDidMount() {\n        trackEvent('signup', 'signup_team_02_url');\n    }\n\n    submitBack(e) {\n        e.preventDefault();\n        this.props.state.wizard = 'display_name';\n        this.props.updateParent(this.props.state);\n    }\n\n    submitNext(e) {\n        e.preventDefault();\n\n        const name = ReactDOM.findDOMNode(this.refs.name).value.trim();\n        const cleanedName = URL.cleanUpUrlable(name);\n        const urlRegex = /^[a-z]+([a-z\\-0-9]+|(__)?)[a-z0-9]+$/g;\n\n        if (!name) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.team_url.required'\n                    defaultMessage='This field is required'\n                />)\n            });\n            return;\n        }\n\n        if (cleanedName.length < Constants.MIN_TEAMNAME_LENGTH || cleanedName.length > Constants.MAX_TEAMNAME_LENGTH) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.team_url.charLength'\n                    defaultMessage='Name must be {min} or more characters up to a maximum of {max}'\n                    values={{\n                        min: Constants.MIN_TEAMNAME_LENGTH,\n                        max: Constants.MAX_TEAMNAME_LENGTH\n                    }}\n                />)\n            });\n            return;\n        }\n\n        if (cleanedName !== name || !urlRegex.test(name)) {\n            this.setState({nameError: (\n                <FormattedMessage\n                    id='create_team.team_url.regex'\n                    defaultMessage=\"Use only lower case letters, numbers and dashes. Must start with a letter and can't end in a dash.\"\n                />)\n            });\n            return;\n        }\n\n        for (let index = 0; index < Constants.RESERVED_TEAM_NAMES.length; index++) {\n            if (cleanedName.indexOf(Constants.RESERVED_TEAM_NAMES[index]) === 0) {\n                this.setState({nameError: (\n                    <FormattedHTMLMessage\n                        id='create_team.team_url.taken'\n                        defaultMessage='This URL <a href=\"https://docs.mattermost.com/help/getting-started/creating-teams.html#team-url\" target=\"_blank\">starts with a reserved word</a> or is unavailable. Please try another.'\n                    />)\n                });\n                return;\n            }\n        }\n\n        this.setState({isLoading: true});\n        var teamSignup = JSON.parse(JSON.stringify(this.props.state));\n        teamSignup.team.type = 'O';\n        teamSignup.team.name = name;\n\n        checkIfTeamExists(name,\n            (foundTeam) => {\n                if (foundTeam) {\n                    this.setState({nameError: (\n                        <FormattedMessage\n                            id='create_team.team_url.unavailable'\n                            defaultMessage='This URL is taken or unavailable. Please try another.'\n                        />)\n                    });\n                    this.setState({isLoading: false});\n                    return;\n                }\n\n                createTeam(teamSignup.team,\n                    () => {\n                        trackEvent('signup', 'signup_team_03_complete');\n                    },\n                    (err) => {\n                        this.setState({nameError: err.message});\n                        this.setState({isLoading: false});\n                    }\n                );\n            },\n            (err) => {\n                this.setState({nameError: err.message});\n            }\n        );\n    }\n\n    handleFocus(e) {\n        e.preventDefault();\n        e.currentTarget.select();\n    }\n\n    render() {\n        let nameError = null;\n        let nameDivClass = 'form-group';\n        if (this.state.nameError) {\n            nameError = <label className='control-label'>{this.state.nameError}</label>;\n            nameDivClass += ' has-error';\n        }\n\n        const title = `${URL.getSiteURL()}/`;\n        const urlTooltip = (\n            <Tooltip id='urlTooltip'>{title}</Tooltip>\n        );\n\n        let finishMessage = (\n            <FormattedMessage\n                id='create_team.team_url.finish'\n                defaultMessage='Finish'\n            />\n        );\n\n        if (this.state.isLoading) {\n            finishMessage = (\n                <FormattedMessage\n                    id='create_team.team_url.creatingTeam'\n                    defaultMessage='Creating team...'\n                />\n            );\n        }\n\n        return (\n            <div>\n                <form>\n                    <img\n                        className='signup-team-logo'\n                        src={logoImage}\n                    />\n                    <h2>\n                        <FormattedMessage\n                            id='create_team.team_url.teamUrl'\n                            defaultMessage='Team URL'\n                        />\n                    </h2>\n                    <div className={nameDivClass}>\n                        <div className='row'>\n                            <div className='col-sm-11'>\n                                <div className='input-group input-group--limit'>\n                                    <OverlayTrigger\n                                        delayShow={Constants.OVERLAY_TIME_DELAY}\n                                        placement='top'\n                                        overlay={urlTooltip}\n                                    >\n                                        <span className='input-group-addon'>\n                                            {title}\n                                        </span>\n                                    </OverlayTrigger>\n                                    <input\n                                        type='text'\n                                        ref='name'\n                                        className='form-control'\n                                        placeholder=''\n                                        maxLength='128'\n                                        defaultValue={this.props.state.team.name}\n                                        autoFocus={true}\n                                        onFocus={this.handleFocus}\n                                        spellCheck='false'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        {nameError}\n                    </div>\n                    <p>\n                        <FormattedMessage\n                            id='create_team.team_url.webAddress'\n                            defaultMessage='Choose the web address of your new team:'\n                        />\n                    </p>\n                    <ul className='color--light'>\n                        <FormattedHTMLMessage\n                            id='create_team.team_url.hint'\n                            defaultMessage=\"<li>Short and memorable is best</li>\n                            <li>Use lowercase letters, numbers and dashes</li>\n                            <li>Must start with a letter and can't end in a dash</li>\"\n                        />\n                    </ul>\n                    <div className='margin--extra'>\n                        <Button\n                            type='submit'\n                            bsStyle='primary'\n                            disabled={this.state.isLoading}\n                            onClick={this.submitNext}\n                        >\n                            {finishMessage}\n                        </Button>\n                    </div>\n                    <div className='margin--extra'>\n                        <a\n                            href='#'\n                            onClick={this.submitBack}\n                        >\n                            <FormattedMessage\n                                id='create_team.team_url.back'\n                                defaultMessage='Back to previous step'\n                            />\n                        </a>\n                    </div>\n                </form>\n            </div>\n        );\n    }\n}\n\nTeamUrl.propTypes = {\n    state: React.PropTypes.object,\n    updateParent: React.PropTypes.func\n};\n\n\n\n// WEBPACK FOOTER //\n// ./components/create_team/components/team_url.jsx"],"sourceRoot":""}