{"version":3,"sources":["webpack:///40.187a92c76f17b3a48891.js","webpack:///./components/integrations/components/add_command.jsx"],"names":["webpackJsonp","1703","module","exports","__webpack_require__","_interopRequireWildcard","obj","__esModule","newObj","key","Object","prototype","hasOwnProperty","call","default","_interopRequireDefault","defineProperty","value","_getPrototypeOf","_getPrototypeOf2","_classCallCheck2","_classCallCheck3","_possibleConstructorReturn2","_possibleConstructorReturn3","_createClass2","_createClass3","_inherits2","_inherits3","_react","_react2","_async_client","AsyncClient","_utils","Utils","_backstage_header","_backstage_header2","_reactIntl","_form_error","_form_error2","_es","_spinner_button","_spinner_button2","_constants","_constants2","REQUEST_POST","REQUEST_GET","AddCommand","_React$Component","props","this","_this","__proto__","handleSubmit","bind","updateDisplayName","updateDescription","updateTrigger","updateUrl","updateMethod","updateUsername","updateIconUrl","updateAutocomplete","updateAutocompleteHint","updateAutocompleteDescription","state","displayName","description","trigger","url","method","username","iconUrl","autocomplete","autocompleteHint","autocompleteDescription","saving","serverError","clientError","get","team","PropTypes","object","e","_this2","preventDefault","setState","triggerWord","trim","toLowerCase","indexOf","substr","command","display_name","icon_url","auto_complete","auto_complete_desc","auto_complete_hint","createElement","FormattedMessage","id","defaultMessage","length","MIN_TRIGGER_LENGTH","MAX_TRIGGER_LENGTH","values","min","max","addCommand","data","browserHistory","push","name","err","message","target","checked","autocompleteFields","className","htmlFor","type","maxLength","onChange","placeholder","localizeMessage","Link","to","onSubmit","link","href","rel","errors","spinning","onClick","Component"],"mappings":"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","file":"40.187a92c76f17b3a48891.js","sourcesContent":["webpackJsonp([40],{\n\n/***/ 1703:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(6);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(2);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(4);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _inherits2 = __webpack_require__(3);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = __webpack_require__(1);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _async_client = __webpack_require__(20);\n\nvar AsyncClient = _interopRequireWildcard(_async_client);\n\nvar _utils = __webpack_require__(11);\n\nvar Utils = _interopRequireWildcard(_utils);\n\nvar _backstage_header = __webpack_require__(336);\n\nvar _backstage_header2 = _interopRequireDefault(_backstage_header);\n\nvar _reactIntl = __webpack_require__(13);\n\nvar _form_error = __webpack_require__(332);\n\nvar _form_error2 = _interopRequireDefault(_form_error);\n\nvar _es = __webpack_require__(37);\n\nvar _spinner_button = __webpack_require__(243);\n\nvar _spinner_button2 = _interopRequireDefault(_spinner_button);\n\nvar _constants = __webpack_require__(8);\n\nvar _constants2 = _interopRequireDefault(_constants);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar REQUEST_POST = 'P'; // Copyright (c) 2016 Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nvar REQUEST_GET = 'G';\n\nvar AddCommand = function (_React$Component) {\n    (0, _inherits3.default)(AddCommand, _React$Component);\n    (0, _createClass3.default)(AddCommand, null, [{\n        key: 'propTypes',\n        get: function get() {\n            return {\n                team: _react2.default.PropTypes.object\n            };\n        }\n    }]);\n\n    function AddCommand(props) {\n        (0, _classCallCheck3.default)(this, AddCommand);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (AddCommand.__proto__ || (0, _getPrototypeOf2.default)(AddCommand)).call(this, props));\n\n        _this.handleSubmit = _this.handleSubmit.bind(_this);\n\n        _this.updateDisplayName = _this.updateDisplayName.bind(_this);\n        _this.updateDescription = _this.updateDescription.bind(_this);\n        _this.updateTrigger = _this.updateTrigger.bind(_this);\n        _this.updateUrl = _this.updateUrl.bind(_this);\n        _this.updateMethod = _this.updateMethod.bind(_this);\n        _this.updateUsername = _this.updateUsername.bind(_this);\n        _this.updateIconUrl = _this.updateIconUrl.bind(_this);\n        _this.updateAutocomplete = _this.updateAutocomplete.bind(_this);\n        _this.updateAutocompleteHint = _this.updateAutocompleteHint.bind(_this);\n        _this.updateAutocompleteDescription = _this.updateAutocompleteDescription.bind(_this);\n\n        _this.state = {\n            displayName: '',\n            description: '',\n            trigger: '',\n            url: '',\n            method: REQUEST_POST,\n            username: '',\n            iconUrl: '',\n            autocomplete: false,\n            autocompleteHint: '',\n            autocompleteDescription: '',\n            saving: false,\n            serverError: '',\n            clientError: null\n        };\n        return _this;\n    }\n\n    (0, _createClass3.default)(AddCommand, [{\n        key: 'handleSubmit',\n        value: function handleSubmit(e) {\n            var _this2 = this;\n\n            e.preventDefault();\n\n            if (this.state.saving) {\n                return;\n            }\n\n            this.setState({\n                saving: true,\n                serverError: '',\n                clientError: ''\n            });\n\n            var triggerWord = this.state.trigger.trim().toLowerCase();\n            if (triggerWord.indexOf('/') === 0) {\n                triggerWord = triggerWord.substr(1);\n            }\n\n            var command = {\n                display_name: this.state.displayName,\n                description: this.state.description,\n                trigger: triggerWord,\n                url: this.state.url.trim(),\n                method: this.state.method,\n                username: this.state.username,\n                icon_url: this.state.iconUrl,\n                auto_complete: this.state.autocomplete\n            };\n\n            if (command.auto_complete) {\n                command.auto_complete_desc = this.state.autocompleteDescription;\n                command.auto_complete_hint = this.state.autocompleteHint;\n            }\n\n            if (!command.trigger) {\n                this.setState({\n                    saving: false,\n                    clientError: _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'add_command.triggerRequired',\n                        defaultMessage: 'A trigger word is required'\n                    })\n                });\n\n                return;\n            }\n\n            if (command.trigger.indexOf('/') === 0) {\n                this.setState({\n                    saving: false,\n                    clientError: _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'add_command.triggerInvalidSlash',\n                        defaultMessage: 'A trigger word cannot begin with a /'\n                    })\n                });\n\n                return;\n            }\n\n            if (command.trigger.indexOf(' ') !== -1) {\n                this.setState({\n                    saving: false,\n                    clientError: _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'add_command.triggerInvalidSpace',\n                        defaultMessage: 'A trigger word must not contain spaces'\n                    })\n                });\n                return;\n            }\n\n            if (command.trigger.length < _constants2.default.MIN_TRIGGER_LENGTH || command.trigger.length > _constants2.default.MAX_TRIGGER_LENGTH) {\n                this.setState({\n                    saving: false,\n                    clientError: _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'add_command.triggerInvalidLength',\n                        defaultMessage: 'A trigger word must contain between {min} and {max} characters',\n                        values: {\n                            min: _constants2.default.MIN_TRIGGER_LENGTH,\n                            max: _constants2.default.MAX_TRIGGER_LENGTH\n                        }\n                    })\n                });\n\n                return;\n            }\n\n            if (!command.url) {\n                this.setState({\n                    saving: false,\n                    clientError: _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'add_command.urlRequired',\n                        defaultMessage: 'A request URL is required'\n                    })\n                });\n\n                return;\n            }\n\n            AsyncClient.addCommand(command, function (data) {\n                _es.browserHistory.push('/' + _this2.props.team.name + '/integrations/commands/confirm?type=commands&id=' + data.id);\n            }, function (err) {\n                _this2.setState({\n                    saving: false,\n                    serverError: err.message\n                });\n            });\n        }\n    }, {\n        key: 'updateDisplayName',\n        value: function updateDisplayName(e) {\n            this.setState({\n                displayName: e.target.value\n            });\n        }\n    }, {\n        key: 'updateDescription',\n        value: function updateDescription(e) {\n            this.setState({\n                description: e.target.value\n            });\n        }\n    }, {\n        key: 'updateTrigger',\n        value: function updateTrigger(e) {\n            this.setState({\n                trigger: e.target.value\n            });\n        }\n    }, {\n        key: 'updateUrl',\n        value: function updateUrl(e) {\n            this.setState({\n                url: e.target.value\n            });\n        }\n    }, {\n        key: 'updateMethod',\n        value: function updateMethod(e) {\n            this.setState({\n                method: e.target.value\n            });\n        }\n    }, {\n        key: 'updateUsername',\n        value: function updateUsername(e) {\n            this.setState({\n                username: e.target.value\n            });\n        }\n    }, {\n        key: 'updateIconUrl',\n        value: function updateIconUrl(e) {\n            this.setState({\n                iconUrl: e.target.value\n            });\n        }\n    }, {\n        key: 'updateAutocomplete',\n        value: function updateAutocomplete(e) {\n            this.setState({\n                autocomplete: e.target.checked\n            });\n        }\n    }, {\n        key: 'updateAutocompleteHint',\n        value: function updateAutocompleteHint(e) {\n            this.setState({\n                autocompleteHint: e.target.value\n            });\n        }\n    }, {\n        key: 'updateAutocompleteDescription',\n        value: function updateAutocompleteDescription(e) {\n            this.setState({\n                autocompleteDescription: e.target.value\n            });\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var autocompleteFields = null;\n            if (this.state.autocomplete) {\n                autocompleteFields = [_react2.default.createElement(\n                    'div',\n                    {\n                        key: 'autocompleteHint',\n                        className: 'form-group'\n                    },\n                    _react2.default.createElement(\n                        'label',\n                        {\n                            className: 'control-label col-sm-4',\n                            htmlFor: 'autocompleteHint'\n                        },\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'add_command.autocompleteHint',\n                            defaultMessage: 'Autocomplete Hint'\n                        })\n                    ),\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'col-md-5 col-sm-8' },\n                        _react2.default.createElement('input', {\n                            id: 'autocompleteHint',\n                            type: 'text',\n                            maxLength: '1024',\n                            className: 'form-control',\n                            value: this.state.autocompleteHint,\n                            onChange: this.updateAutocompleteHint,\n                            placeholder: Utils.localizeMessage('add_command.autocompleteHint.placeholder', 'Example: [Patient Name]')\n                        }),\n                        _react2.default.createElement(\n                            'div',\n                            { className: 'form__help' },\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'add_command.autocompleteHint.help',\n                                defaultMessage: '(Optional) Arguments associated with your slash command, displayed as help in the autocomplete list.'\n                            })\n                        )\n                    )\n                ), _react2.default.createElement(\n                    'div',\n                    {\n                        key: 'autocompleteDescription',\n                        className: 'form-group'\n                    },\n                    _react2.default.createElement(\n                        'label',\n                        {\n                            className: 'control-label col-sm-4',\n                            htmlFor: 'autocompleteDescription'\n                        },\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'add_command.autocompleteDescription',\n                            defaultMessage: 'Autocomplete Description'\n                        })\n                    ),\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'col-md-5 col-sm-8' },\n                        _react2.default.createElement('input', {\n                            id: 'description',\n                            type: 'text',\n                            maxLength: '128',\n                            className: 'form-control',\n                            value: this.state.autocompleteDescription,\n                            onChange: this.updateAutocompleteDescription,\n                            placeholder: Utils.localizeMessage('add_command.autocompleteDescription.placeholder', 'Example: \"Returns search results for patient records\"')\n                        }),\n                        _react2.default.createElement(\n                            'div',\n                            { className: 'form__help' },\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'add_command.autocompleteDescription.help',\n                                defaultMessage: '(Optional) Short description of slash command for the autocomplete list.'\n                            })\n                        )\n                    )\n                )];\n            }\n\n            return _react2.default.createElement(\n                'div',\n                { className: 'backstage-content row' },\n                _react2.default.createElement(\n                    _backstage_header2.default,\n                    null,\n                    _react2.default.createElement(\n                        _es.Link,\n                        { to: '/' + this.props.team.name + '/integrations/commands' },\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'installed_command.header',\n                            defaultMessage: 'Slash Commands'\n                        })\n                    ),\n                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'integrations.add',\n                        defaultMessage: 'Add'\n                    })\n                ),\n                _react2.default.createElement(\n                    'div',\n                    { className: 'backstage-form' },\n                    _react2.default.createElement(\n                        'form',\n                        {\n                            className: 'form-horizontal',\n                            onSubmit: this.handleSubmit\n                        },\n                        _react2.default.createElement(\n                            'div',\n                            { className: 'form-group' },\n                            _react2.default.createElement(\n                                'label',\n                                {\n                                    className: 'control-label col-sm-4',\n                                    htmlFor: 'displayName'\n                                },\n                                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                    id: 'add_command.displayName',\n                                    defaultMessage: 'Display Name'\n                                })\n                            ),\n                            _react2.default.createElement(\n                                'div',\n                                { className: 'col-md-5 col-sm-8' },\n                                _react2.default.createElement('input', {\n                                    id: 'displayName',\n                                    type: 'text',\n                                    maxLength: '64',\n                                    className: 'form-control',\n                                    value: this.state.displayName,\n                                    onChange: this.updateDisplayName\n                                }),\n                                _react2.default.createElement(\n                                    'div',\n                                    { className: 'form__help' },\n                                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                        id: 'add_command.displayName.help',\n                                        defaultMessage: 'Display name for your slash command made of up to 64 characters.'\n                                    })\n                                )\n                            )\n                        ),\n                        _react2.default.createElement(\n                            'div',\n                            { className: 'form-group' },\n                            _react2.default.createElement(\n                                'label',\n                                {\n                                    className: 'control-label col-sm-4',\n                                    htmlFor: 'description'\n                                },\n                                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                    id: 'add_command.description',\n                                    defaultMessage: 'Description'\n                                })\n                            ),\n                            _react2.default.createElement(\n                                'div',\n                                { className: 'col-md-5 col-sm-8' },\n                                _react2.default.createElement('input', {\n                                    id: 'description',\n                                    type: 'text',\n                                    maxLength: '128',\n                                    className: 'form-control',\n                                    value: this.state.description,\n                                    onChange: this.updateDescription\n                                }),\n                                _react2.default.createElement(\n                                    'div',\n                                    { className: 'form__help' },\n                                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                        id: 'add_command.description.help',\n                                        defaultMessage: 'Description for your incoming webhook.'\n                                    })\n                                )\n                            )\n                        ),\n                        _react2.default.createElement(\n                            'div',\n                            { className: 'form-group' },\n                            _react2.default.createElement(\n                                'label',\n                                {\n                                    className: 'control-label col-sm-4',\n                                    htmlFor: 'trigger'\n                                },\n                                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                    id: 'add_command.trigger',\n                                    defaultMessage: 'Command Trigger Word'\n                                })\n                            ),\n                            _react2.default.createElement(\n                                'div',\n                                { className: 'col-md-5 col-sm-8' },\n                                _react2.default.createElement('input', {\n                                    id: 'trigger',\n                                    type: 'text',\n                                    maxLength: _constants2.default.MAX_TRIGGER_LENGTH,\n                                    className: 'form-control',\n                                    value: this.state.trigger,\n                                    onChange: this.updateTrigger,\n                                    placeholder: Utils.localizeMessage('add_command.trigger.placeholder', 'Command trigger e.g. \"hello\" not including the slash')\n                                }),\n                                _react2.default.createElement(\n                                    'div',\n                                    { className: 'form__help' },\n                                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                        id: 'add_command.trigger.help',\n                                        defaultMessage: 'Trigger word must be unique, and cannot begin with a slash or contain any spaces.'\n                                    })\n                                ),\n                                _react2.default.createElement(\n                                    'div',\n                                    { className: 'form__help' },\n                                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                        id: 'add_command.trigger.helpExamples',\n                                        defaultMessage: 'Examples: client, employee, patient, weather'\n                                    })\n                                ),\n                                _react2.default.createElement(\n                                    'div',\n                                    { className: 'form__help' },\n                                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                        id: 'add_command.trigger.helpReserved',\n                                        defaultMessage: 'Reserved: {link}',\n                                        values: {\n                                            link: _react2.default.createElement(\n                                                'a',\n                                                {\n                                                    href: 'https://docs.mattermost.com/help/messaging/executing-commands.html#built-in-commands',\n                                                    target: '_blank',\n                                                    rel: 'noopener noreferrer'\n                                                },\n                                                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                                    id: 'add_command.trigger.helpReservedLinkText',\n                                                    defaultMessage: 'see list of built-in slash commands'\n                                                })\n                                            )\n                                        }\n                                    })\n                                )\n                            )\n                        ),\n                        _react2.default.createElement(\n                            'div',\n                            { className: 'form-group' },\n                            _react2.default.createElement(\n                                'label',\n                                {\n                                    className: 'control-label col-sm-4',\n                                    htmlFor: 'url'\n                                },\n                                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                    id: 'add_command.url',\n                                    defaultMessage: 'Request URL'\n                                })\n                            ),\n                            _react2.default.createElement(\n                                'div',\n                                { className: 'col-md-5 col-sm-8' },\n                                _react2.default.createElement('input', {\n                                    id: 'url',\n                                    type: 'text',\n                                    maxLength: '1024',\n                                    className: 'form-control',\n                                    value: this.state.url,\n                                    onChange: this.updateUrl,\n                                    placeholder: Utils.localizeMessage('add_command.url.placeholder', 'Must start with http:// or https://')\n                                }),\n                                _react2.default.createElement(\n                                    'div',\n                                    { className: 'form__help' },\n                                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                        id: 'add_command.url.help',\n                                        defaultMessage: 'The callback URL to receive the HTTP POST or GET event request when the slash command is run.'\n                                    })\n                                )\n                            )\n                        ),\n                        _react2.default.createElement(\n                            'div',\n                            { className: 'form-group' },\n                            _react2.default.createElement(\n                                'label',\n                                {\n                                    className: 'control-label col-sm-4',\n                                    htmlFor: 'method'\n                                },\n                                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                    id: 'add_command.method',\n                                    defaultMessage: 'Request Method'\n                                })\n                            ),\n                            _react2.default.createElement(\n                                'div',\n                                { className: 'col-md-5 col-sm-8' },\n                                _react2.default.createElement(\n                                    'select',\n                                    {\n                                        id: 'method',\n                                        className: 'form-control',\n                                        value: this.state.method,\n                                        onChange: this.updateMethod\n                                    },\n                                    _react2.default.createElement(\n                                        'option',\n                                        { value: REQUEST_POST },\n                                        Utils.localizeMessage('add_command.method.post', 'POST')\n                                    ),\n                                    _react2.default.createElement(\n                                        'option',\n                                        { value: REQUEST_GET },\n                                        Utils.localizeMessage('add_command.method.get', 'GET')\n                                    )\n                                ),\n                                _react2.default.createElement(\n                                    'div',\n                                    { className: 'form__help' },\n                                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                        id: 'add_command.method.help',\n                                        defaultMessage: 'The type of command request issued to the Request URL.'\n                                    })\n                                )\n                            )\n                        ),\n                        _react2.default.createElement(\n                            'div',\n                            { className: 'form-group' },\n                            _react2.default.createElement(\n                                'label',\n                                {\n                                    className: 'control-label col-sm-4',\n                                    htmlFor: 'username'\n                                },\n                                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                    id: 'add_command.username',\n                                    defaultMessage: 'Response Username'\n                                })\n                            ),\n                            _react2.default.createElement(\n                                'div',\n                                { className: 'col-md-5 col-sm-8' },\n                                _react2.default.createElement('input', {\n                                    id: 'username',\n                                    type: 'text',\n                                    maxLength: '64',\n                                    className: 'form-control',\n                                    value: this.state.username,\n                                    onChange: this.updateUsername,\n                                    placeholder: Utils.localizeMessage('add_command.username.placeholder', 'Username')\n                                }),\n                                _react2.default.createElement(\n                                    'div',\n                                    { className: 'form__help' },\n                                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                        id: 'add_command.username.help',\n                                        defaultMessage: '(Optional) Choose a username override for responses for this slash command. Usernames can consist of up to 22 characters consisting of lowercase letters, numbers and they symbols \"-\", \"_\", and \".\" .'\n                                    })\n                                )\n                            )\n                        ),\n                        _react2.default.createElement(\n                            'div',\n                            { className: 'form-group' },\n                            _react2.default.createElement(\n                                'label',\n                                {\n                                    className: 'control-label col-sm-4',\n                                    htmlFor: 'iconUrl'\n                                },\n                                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                    id: 'add_command.iconUrl',\n                                    defaultMessage: 'Response Icon'\n                                })\n                            ),\n                            _react2.default.createElement(\n                                'div',\n                                { className: 'col-md-5 col-sm-8' },\n                                _react2.default.createElement('input', {\n                                    id: 'iconUrl',\n                                    type: 'text',\n                                    maxLength: '1024',\n                                    className: 'form-control',\n                                    value: this.state.iconUrl,\n                                    onChange: this.updateIconUrl,\n                                    placeholder: Utils.localizeMessage('add_command.iconUrl.placeholder', 'https://www.example.com/myicon.png')\n                                }),\n                                _react2.default.createElement(\n                                    'div',\n                                    { className: 'form__help' },\n                                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                        id: 'add_command.iconUrl.help',\n                                        defaultMessage: '(Optional) Choose a profile picture override for the post responses to this slash command. Enter the URL of a .png or .jpg file at least 128 pixels by 128 pixels.'\n                                    })\n                                )\n                            )\n                        ),\n                        _react2.default.createElement(\n                            'div',\n                            { className: 'form-group' },\n                            _react2.default.createElement(\n                                'label',\n                                {\n                                    className: 'control-label col-sm-4',\n                                    htmlFor: 'autocomplete'\n                                },\n                                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                    id: 'add_command.autocomplete',\n                                    defaultMessage: 'Autocomplete'\n                                })\n                            ),\n                            _react2.default.createElement(\n                                'div',\n                                { className: 'col-md-5 col-sm-8 checkbox' },\n                                _react2.default.createElement('input', {\n                                    id: 'autocomplete',\n                                    type: 'checkbox',\n                                    checked: this.state.autocomplete,\n                                    onChange: this.updateAutocomplete\n                                }),\n                                _react2.default.createElement(\n                                    'div',\n                                    { className: 'form__help' },\n                                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                        id: 'add_command.autocomplete.help',\n                                        defaultMessage: '(Optional) Show slash command in autocomplete list.'\n                                    })\n                                )\n                            )\n                        ),\n                        autocompleteFields,\n                        _react2.default.createElement(\n                            'div',\n                            { className: 'backstage-form__footer' },\n                            _react2.default.createElement(_form_error2.default, {\n                                type: 'backstage',\n                                errors: [this.state.serverError, this.state.clientError]\n                            }),\n                            _react2.default.createElement(\n                                _es.Link,\n                                {\n                                    className: 'btn btn-sm',\n                                    to: '/' + this.props.team.name + '/integrations/commands'\n                                },\n                                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                    id: 'add_command.cancel',\n                                    defaultMessage: 'Cancel'\n                                })\n                            ),\n                            _react2.default.createElement(\n                                _spinner_button2.default,\n                                {\n                                    className: 'btn btn-primary',\n                                    type: 'submit',\n                                    spinning: this.state.saving,\n                                    onClick: this.handleSubmit\n                                },\n                                _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                    id: 'add_command.save',\n                                    defaultMessage: 'Save'\n                                })\n                            )\n                        )\n                    )\n                )\n            );\n        }\n    }]);\n    return AddCommand;\n}(_react2.default.Component);\n\nexports.default = AddCommand;\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 40.187a92c76f17b3a48891.js","// Copyright (c) 2016 Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport React from 'react';\n\nimport * as AsyncClient from 'utils/async_client.jsx';\nimport * as Utils from 'utils/utils.jsx';\n\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport {FormattedMessage} from 'react-intl';\nimport FormError from 'components/form_error.jsx';\nimport {browserHistory, Link} from 'react-router/es6';\nimport SpinnerButton from 'components/spinner_button.jsx';\nimport Constants from 'utils/constants.jsx';\n\nconst REQUEST_POST = 'P';\nconst REQUEST_GET = 'G';\n\nexport default class AddCommand extends React.Component {\n    static get propTypes() {\n        return {\n            team: React.PropTypes.object\n        };\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n        this.updateDisplayName = this.updateDisplayName.bind(this);\n        this.updateDescription = this.updateDescription.bind(this);\n        this.updateTrigger = this.updateTrigger.bind(this);\n        this.updateUrl = this.updateUrl.bind(this);\n        this.updateMethod = this.updateMethod.bind(this);\n        this.updateUsername = this.updateUsername.bind(this);\n        this.updateIconUrl = this.updateIconUrl.bind(this);\n        this.updateAutocomplete = this.updateAutocomplete.bind(this);\n        this.updateAutocompleteHint = this.updateAutocompleteHint.bind(this);\n        this.updateAutocompleteDescription = this.updateAutocompleteDescription.bind(this);\n\n        this.state = {\n            displayName: '',\n            description: '',\n            trigger: '',\n            url: '',\n            method: REQUEST_POST,\n            username: '',\n            iconUrl: '',\n            autocomplete: false,\n            autocompleteHint: '',\n            autocompleteDescription: '',\n            saving: false,\n            serverError: '',\n            clientError: null\n        };\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        if (this.state.saving) {\n            return;\n        }\n\n        this.setState({\n            saving: true,\n            serverError: '',\n            clientError: ''\n        });\n\n        let triggerWord = this.state.trigger.trim().toLowerCase();\n        if (triggerWord.indexOf('/') === 0) {\n            triggerWord = triggerWord.substr(1);\n        }\n\n        const command = {\n            display_name: this.state.displayName,\n            description: this.state.description,\n            trigger: triggerWord,\n            url: this.state.url.trim(),\n            method: this.state.method,\n            username: this.state.username,\n            icon_url: this.state.iconUrl,\n            auto_complete: this.state.autocomplete\n        };\n\n        if (command.auto_complete) {\n            command.auto_complete_desc = this.state.autocompleteDescription;\n            command.auto_complete_hint = this.state.autocompleteHint;\n        }\n\n        if (!command.trigger) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.triggerRequired'\n                        defaultMessage='A trigger word is required'\n                    />\n                )\n            });\n\n            return;\n        }\n\n        if (command.trigger.indexOf('/') === 0) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.triggerInvalidSlash'\n                        defaultMessage='A trigger word cannot begin with a /'\n                    />\n                )\n            });\n\n            return;\n        }\n\n        if (command.trigger.indexOf(' ') !== -1) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.triggerInvalidSpace'\n                        defaultMessage='A trigger word must not contain spaces'\n                    />\n                )\n            });\n            return;\n        }\n\n        if (command.trigger.length < Constants.MIN_TRIGGER_LENGTH || command.trigger.length > Constants.MAX_TRIGGER_LENGTH) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.triggerInvalidLength'\n                        defaultMessage='A trigger word must contain between {min} and {max} characters'\n                        values={{\n                            min: Constants.MIN_TRIGGER_LENGTH,\n                            max: Constants.MAX_TRIGGER_LENGTH\n                        }}\n                    />\n                )\n            });\n\n            return;\n        }\n\n        if (!command.url) {\n            this.setState({\n                saving: false,\n                clientError: (\n                    <FormattedMessage\n                        id='add_command.urlRequired'\n                        defaultMessage='A request URL is required'\n                    />\n                )\n            });\n\n            return;\n        }\n\n        AsyncClient.addCommand(\n            command,\n            (data) => {\n                browserHistory.push('/' + this.props.team.name + '/integrations/commands/confirm?type=commands&id=' + data.id);\n            },\n            (err) => {\n                this.setState({\n                    saving: false,\n                    serverError: err.message\n                });\n            }\n        );\n    }\n\n    updateDisplayName(e) {\n        this.setState({\n            displayName: e.target.value\n        });\n    }\n\n    updateDescription(e) {\n        this.setState({\n            description: e.target.value\n        });\n    }\n\n    updateTrigger(e) {\n        this.setState({\n            trigger: e.target.value\n        });\n    }\n\n    updateUrl(e) {\n        this.setState({\n            url: e.target.value\n        });\n    }\n\n    updateMethod(e) {\n        this.setState({\n            method: e.target.value\n        });\n    }\n\n    updateUsername(e) {\n        this.setState({\n            username: e.target.value\n        });\n    }\n\n    updateIconUrl(e) {\n        this.setState({\n            iconUrl: e.target.value\n        });\n    }\n\n    updateAutocomplete(e) {\n        this.setState({\n            autocomplete: e.target.checked\n        });\n    }\n\n    updateAutocompleteHint(e) {\n        this.setState({\n            autocompleteHint: e.target.value\n        });\n    }\n\n    updateAutocompleteDescription(e) {\n        this.setState({\n            autocompleteDescription: e.target.value\n        });\n    }\n\n    render() {\n        let autocompleteFields = null;\n        if (this.state.autocomplete) {\n            autocompleteFields = [(\n                <div\n                    key='autocompleteHint'\n                    className='form-group'\n                >\n                    <label\n                        className='control-label col-sm-4'\n                        htmlFor='autocompleteHint'\n                    >\n                        <FormattedMessage\n                            id='add_command.autocompleteHint'\n                            defaultMessage='Autocomplete Hint'\n                        />\n                    </label>\n                    <div className='col-md-5 col-sm-8'>\n                        <input\n                            id='autocompleteHint'\n                            type='text'\n                            maxLength='1024'\n                            className='form-control'\n                            value={this.state.autocompleteHint}\n                            onChange={this.updateAutocompleteHint}\n                            placeholder={Utils.localizeMessage('add_command.autocompleteHint.placeholder', 'Example: [Patient Name]')}\n                        />\n                        <div className='form__help'>\n                            <FormattedMessage\n                                id='add_command.autocompleteHint.help'\n                                defaultMessage='(Optional) Arguments associated with your slash command, displayed as help in the autocomplete list.'\n                            />\n                        </div>\n                    </div>\n                </div>\n            ),\n            (\n                <div\n                    key='autocompleteDescription'\n                    className='form-group'\n                >\n                    <label\n                        className='control-label col-sm-4'\n                        htmlFor='autocompleteDescription'\n                    >\n                        <FormattedMessage\n                            id='add_command.autocompleteDescription'\n                            defaultMessage='Autocomplete Description'\n                        />\n                    </label>\n                    <div className='col-md-5 col-sm-8'>\n                        <input\n                            id='description'\n                            type='text'\n                            maxLength='128'\n                            className='form-control'\n                            value={this.state.autocompleteDescription}\n                            onChange={this.updateAutocompleteDescription}\n                            placeholder={Utils.localizeMessage('add_command.autocompleteDescription.placeholder', 'Example: \"Returns search results for patient records\"')}\n                        />\n                        <div className='form__help'>\n                            <FormattedMessage\n                                id='add_command.autocompleteDescription.help'\n                                defaultMessage='(Optional) Short description of slash command for the autocomplete list.'\n                            />\n                        </div>\n                    </div>\n                </div>\n            )];\n        }\n\n        return (\n            <div className='backstage-content row'>\n                <BackstageHeader>\n                    <Link to={'/' + this.props.team.name + '/integrations/commands'}>\n                        <FormattedMessage\n                            id='installed_command.header'\n                            defaultMessage='Slash Commands'\n                        />\n                    </Link>\n                    <FormattedMessage\n                        id='integrations.add'\n                        defaultMessage='Add'\n                    />\n                </BackstageHeader>\n                <div className='backstage-form'>\n                    <form\n                        className='form-horizontal'\n                        onSubmit={this.handleSubmit}\n                    >\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='displayName'\n                            >\n                                <FormattedMessage\n                                    id='add_command.displayName'\n                                    defaultMessage='Display Name'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='displayName'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.displayName}\n                                    onChange={this.updateDisplayName}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.displayName.help'\n                                        defaultMessage='Display name for your slash command made of up to 64 characters.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='description'\n                            >\n                                <FormattedMessage\n                                    id='add_command.description'\n                                    defaultMessage='Description'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='description'\n                                    type='text'\n                                    maxLength='128'\n                                    className='form-control'\n                                    value={this.state.description}\n                                    onChange={this.updateDescription}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.description.help'\n                                        defaultMessage='Description for your incoming webhook.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='trigger'\n                            >\n                                <FormattedMessage\n                                    id='add_command.trigger'\n                                    defaultMessage='Command Trigger Word'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='trigger'\n                                    type='text'\n                                    maxLength={Constants.MAX_TRIGGER_LENGTH}\n                                    className='form-control'\n                                    value={this.state.trigger}\n                                    onChange={this.updateTrigger}\n                                    placeholder={Utils.localizeMessage('add_command.trigger.placeholder', 'Command trigger e.g. \"hello\" not including the slash')}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.trigger.help'\n                                        defaultMessage='Trigger word must be unique, and cannot begin with a slash or contain any spaces.'\n                                    />\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.trigger.helpExamples'\n                                        defaultMessage='Examples: client, employee, patient, weather'\n                                    />\n                                </div>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.trigger.helpReserved'\n                                        defaultMessage='Reserved: {link}'\n                                        values={{\n                                            link: (\n                                                <a\n                                                    href='https://docs.mattermost.com/help/messaging/executing-commands.html#built-in-commands'\n                                                    target='_blank'\n                                                    rel='noopener noreferrer'\n                                                >\n                                                    <FormattedMessage\n                                                        id='add_command.trigger.helpReservedLinkText'\n                                                        defaultMessage='see list of built-in slash commands'\n                                                    />\n                                                </a>\n                                            )\n                                        }}\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='url'\n                            >\n                                <FormattedMessage\n                                    id='add_command.url'\n                                    defaultMessage='Request URL'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='url'\n                                    type='text'\n                                    maxLength='1024'\n                                    className='form-control'\n                                    value={this.state.url}\n                                    onChange={this.updateUrl}\n                                    placeholder={Utils.localizeMessage('add_command.url.placeholder', 'Must start with http:// or https://')}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.url.help'\n                                        defaultMessage='The callback URL to receive the HTTP POST or GET event request when the slash command is run.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='method'\n                            >\n                                <FormattedMessage\n                                    id='add_command.method'\n                                    defaultMessage='Request Method'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <select\n                                    id='method'\n                                    className='form-control'\n                                    value={this.state.method}\n                                    onChange={this.updateMethod}\n                                >\n                                    <option value={REQUEST_POST}>\n                                        {Utils.localizeMessage('add_command.method.post', 'POST')}\n                                    </option>\n                                    <option value={REQUEST_GET}>\n                                        {Utils.localizeMessage('add_command.method.get', 'GET')}\n                                    </option>\n                                </select>\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.method.help'\n                                        defaultMessage='The type of command request issued to the Request URL.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='username'\n                            >\n                                <FormattedMessage\n                                    id='add_command.username'\n                                    defaultMessage='Response Username'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='username'\n                                    type='text'\n                                    maxLength='64'\n                                    className='form-control'\n                                    value={this.state.username}\n                                    onChange={this.updateUsername}\n                                    placeholder={Utils.localizeMessage('add_command.username.placeholder', 'Username')}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.username.help'\n                                        defaultMessage='(Optional) Choose a username override for responses for this slash command. Usernames can consist of up to 22 characters consisting of lowercase letters, numbers and they symbols \"-\", \"_\", and \".\" .'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='iconUrl'\n                            >\n                                <FormattedMessage\n                                    id='add_command.iconUrl'\n                                    defaultMessage='Response Icon'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8'>\n                                <input\n                                    id='iconUrl'\n                                    type='text'\n                                    maxLength='1024'\n                                    className='form-control'\n                                    value={this.state.iconUrl}\n                                    onChange={this.updateIconUrl}\n                                    placeholder={Utils.localizeMessage('add_command.iconUrl.placeholder', 'https://www.example.com/myicon.png')}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.iconUrl.help'\n                                        defaultMessage='(Optional) Choose a profile picture override for the post responses to this slash command. Enter the URL of a .png or .jpg file at least 128 pixels by 128 pixels.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        <div className='form-group'>\n                            <label\n                                className='control-label col-sm-4'\n                                htmlFor='autocomplete'\n                            >\n                                <FormattedMessage\n                                    id='add_command.autocomplete'\n                                    defaultMessage='Autocomplete'\n                                />\n                            </label>\n                            <div className='col-md-5 col-sm-8 checkbox'>\n                                <input\n                                    id='autocomplete'\n                                    type='checkbox'\n                                    checked={this.state.autocomplete}\n                                    onChange={this.updateAutocomplete}\n                                />\n                                <div className='form__help'>\n                                    <FormattedMessage\n                                        id='add_command.autocomplete.help'\n                                        defaultMessage='(Optional) Show slash command in autocomplete list.'\n                                    />\n                                </div>\n                            </div>\n                        </div>\n                        {autocompleteFields}\n                        <div className='backstage-form__footer'>\n                            <FormError\n                                type='backstage'\n                                errors={[this.state.serverError, this.state.clientError]}\n                            />\n                            <Link\n                                className='btn btn-sm'\n                                to={'/' + this.props.team.name + '/integrations/commands'}\n                            >\n                                <FormattedMessage\n                                    id='add_command.cancel'\n                                    defaultMessage='Cancel'\n                                />\n                            </Link>\n                            <SpinnerButton\n                                className='btn btn-primary'\n                                type='submit'\n                                spinning={this.state.saving}\n                                onClick={this.handleSubmit}\n                            >\n                                <FormattedMessage\n                                    id='add_command.save'\n                                    defaultMessage='Save'\n                                />\n                            </SpinnerButton>\n                        </div>\n                    </form>\n                </div>\n            </div>\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./components/integrations/components/add_command.jsx"],"sourceRoot":""}