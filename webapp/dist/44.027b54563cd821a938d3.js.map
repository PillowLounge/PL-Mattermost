{"version":3,"sources":["webpack:///44.027b54563cd821a938d3.js","webpack:///./components/help/components/formatting.jsx"],"names":["webpackJsonp","1699","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_getPrototypeOf","_getPrototypeOf2","_classCallCheck2","_classCallCheck3","_createClass2","_createClass3","_possibleConstructorReturn2","_possibleConstructorReturn3","_inherits2","_inherits3","_utils","_text_formatting","_reactIntl","_es","_react","_react2","HelpFormatting","_React$Component","this","__proto__","apply","arguments","key","message","push","localizeMessage","createElement","dangerouslySetInnerHTML","__html","formatText","join","className","FormattedMessage","id","defaultMessage","Link","to","Component"],"mappings":"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","file":"44.027b54563cd821a938d3.js","sourcesContent":["webpackJsonp([44],{\n\n/***/ 1699:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(6);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(2);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(4);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _inherits2 = __webpack_require__(3);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _utils = __webpack_require__(11);\n\nvar _text_formatting = __webpack_require__(90);\n\nvar _reactIntl = __webpack_require__(13);\n\nvar _es = __webpack_require__(37);\n\nvar _react = __webpack_require__(1);\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar HelpFormatting = function (_React$Component) {\n    (0, _inherits3.default)(HelpFormatting, _React$Component);\n\n    function HelpFormatting() {\n        (0, _classCallCheck3.default)(this, HelpFormatting);\n        return (0, _possibleConstructorReturn3.default)(this, (HelpFormatting.__proto__ || (0, _getPrototypeOf2.default)(HelpFormatting)).apply(this, arguments));\n    }\n\n    (0, _createClass3.default)(HelpFormatting, [{\n        key: 'render',\n        value: function render() {\n            var message = [];\n            message.push((0, _utils.localizeMessage)('help.formatting.title', '# Formatting Text\\n_____'));\n            message.push((0, _utils.localizeMessage)('help.formatting.intro', 'Markdown makes it easy to format messages. Type a message as you normally would, and use these rules to render it with special formatting.'));\n            message.push((0, _utils.localizeMessage)('help.formatting.style', '## Text Style\\n\\nYou can use either `_` or `*` around a word to make it italic. Use two to make it bold.\\n\\n* `_italics_` renders as _italics_\\n* `**bold**` renders as **bold**\\n* `**_bold-italic_**` renders as **_bold-italics_**\\n* `~~strikethrough~~` renders as ~~strikethrough~~'));\n            message.push((0, _utils.localizeMessage)('help.formatting.code', '## Code Block\\n\\nCreate a code block by indenting each line by four spaces, or by placing ``` on the line above and below your code.'));\n            message.push((0, _utils.localizeMessage)('help.formatting.example', 'Example:') + '\\n\\n');\n            message.push('    ```\\n    ' + (0, _utils.localizeMessage)('help.formatting.codeBlock', 'code block') + '\\n    ```');\n            message.push((0, _utils.localizeMessage)('help.formatting.renders', 'Renders as:'));\n            message.push('```\\n' + (0, _utils.localizeMessage)('help.formatting.codeBlock', 'code block') + '\\n```');\n            message.push((0, _utils.localizeMessage)('help.formatting.syntax', '### Syntax Highlighting\\n\\nTo add syntax highlighting, type the language to be highlighted after the ``` at the beginning of the code block. Mattermost also offers four different code themes (GitHub, Solarized Dark, Solarized Light, Monokai) that can be changed in **Account Settings** > **Display** > **Theme** > **Custom Theme** > **Center Channel Styles**'));\n            message.push((0, _utils.localizeMessage)('help.formatting.supportedSyntax', 'Supported languages are:\\n`as`, `applescript`, `osascript`, `scpt`, `bash`, `sh`, `zsh`, `clj`, `boot`, `cl2`, `cljc`, `cljs`, `cljs.hl`, `cljscm`, `cljx`, `hic`, `coffee`, `_coffee`, `cake`, `cjsx`, `cson`, `iced`, `cpp`, `c`, `cc`, `h`, `c++`, `h++`, `hpp`, `cs`, `csharp`, `css`, `d`, `di`, `dart`, `delphi`, `dpr`, `dfm`, `pas`, `pascal`, `freepascal`, `lazarus`, `lpr`, `lfm`, `diff`, `django`, `jinja`, `dockerfile`, `docker`, `erl`, `f90`, `f95`, `fsharp`, `fs`, `gcode`, `nc`, `go`, `groovy`, `handlebars`, `hbs`, `html.hbs`, `html.handlebars`, `hs`, `hx`, `java`, `jsp`, `js`, `jsx`, `json`, `jl`, `kt`, `ktm`, `kts`, `less`, `lisp`, `lua`, `mk`, `mak`, `md`, `mkdown`, `mkd`, `matlab`, `m`, `mm`, `objc`, `obj-c`, `ml`, `perl`, `pl`, `php`, `php3`, `php4`, `php5`, `php6`, `ps`, `ps1`, `pp`, `py`, `gyp`, `r`, `ruby`, `rb`, `gemspec`, `podspec`, `thor`, `irb`, `rs`, `scala`, `scm`, `sld`, `scss`, `st`, `sql`, `swift`, `tex`, `vbnet`, `vb`, `bas`, `vbs`, `v`, `veo`, `xml`, `html`, `xhtml`, `rss`, `atom`, `xsl`, `plist`, `yaml`'));\n            message.push((0, _utils.localizeMessage)('help.formatting.example', 'Example:') + '\\n\\n');\n            message.push('    ```go\\n' + (0, _utils.localizeMessage)('help.formatting.syntaxEx', '    package main\\n    import \"fmt\"\\n    func main() {\\n        fmt.Println(\"Hello, 世界\")\\n    }') + '\\n    ```');\n            message.push((0, _utils.localizeMessage)('help.formatting.renders', 'Renders as:'));\n            message.push((0, _utils.localizeMessage)('help.formatting.githubTheme', '**GitHub Theme**'));\n            message.push('![go syntax-highlighting](https://docs.mattermost.com/_images/syntax-highlighting-github.PNG)');\n            message.push((0, _utils.localizeMessage)('help.formatting.solirizedDarkTheme', '**Solarized Dark Theme**'));\n            message.push('![go syntax-highlighting](https://docs.mattermost.com/_images/syntax-highlighting-sol-dark.PNG)');\n            message.push((0, _utils.localizeMessage)('help.formatting.solirizedLightTheme', '**Solarized Light Theme**'));\n            message.push('![go syntax-highlighting](https://docs.mattermost.com/_images/syntax-highlighting-sol-light.PNG)');\n            message.push((0, _utils.localizeMessage)('help.formatting.monokaiTheme', '**Monokai Theme**'));\n            message.push('![go syntax-highlighting](https://docs.mattermost.com/_images/syntax-highlighting-monokai.PNG)');\n            message.push((0, _utils.localizeMessage)('help.formatting.inline', '## In-line Code\\n\\nCreate in-line monospaced font by surrounding it with backticks.'));\n            message.push('```\\n`monospace`\\n```');\n            message.push((0, _utils.localizeMessage)('help.formatting.renders', 'Renders as:') + ' `monospace`');\n            message.push((0, _utils.localizeMessage)('help.formatting.links', '## Links\\n\\nCreate labeled links by putting the desired text in square brackets and the associated link in normal brackets.'));\n            message.push('`' + (0, _utils.localizeMessage)('help.formatting.linkEx', '[Check out Mattermost!](https://about.mattermost.com/)') + '`');\n            message.push((0, _utils.localizeMessage)('help.formatting.renders', 'Renders as:') + ' ' + (0, _utils.localizeMessage)('help.formatting.linkEx', '[Check out Mattermost!](https://about.mattermost.com/)'));\n            message.push((0, _utils.localizeMessage)('help.formatting.images', '## In-line Images\\n\\nCreate in-line images using an `!` followed by the alt text in square brackets and the link in normal brackets. Add hover text by placing it in quotes after the link.'));\n            message.push('```\\n' + (0, _utils.localizeMessage)('help.formatting.imagesExample', '![alt text](link \"hover text\")\\n\\nand\\n\\n[![Build Status](https://travis-ci.org/mattermost/platform.svg?branch=master)](https://travis-ci.org/mattermost/platform) [![Github](https://assets-cdn.github.com/favicon.ico)](https://github.com/mattermost/platform)') + '\\n```');\n            message.push((0, _utils.localizeMessage)('help.formatting.renders', 'Renders as:'));\n            message.push((0, _utils.localizeMessage)('help.formatting.imagesExample', '![alt text](link \"hover text\")\\n\\nand\\n\\n[![Build Status](https://travis-ci.org/mattermost/platform.svg?branch=master)](https://travis-ci.org/mattermost/platform) [![Github](https://assets-cdn.github.com/favicon.ico)](https://github.com/mattermost/platform)'));\n            message.push((0, _utils.localizeMessage)('help.formatting.emojis', '## Emojis\\n\\nOpen the emoji autocomplete by typing `:`. A full list of emojis can be found [here](http://www.emoji-cheat-sheet.com/). It is also possible to create your own [Custom Emoji](http://docs.mattermost.com/help/settings/custom-emoji.html) if the emoji you want to use doesn\\'t exist.'));\n            message.push('```\\n' + (0, _utils.localizeMessage)('help.formatting.emojiExample', ':smile: :+1: :sheep:') + '\\n```');\n            message.push((0, _utils.localizeMessage)('help.formatting.renders', 'Renders as:'));\n            message.push((0, _utils.localizeMessage)('help.formatting.emojiExample', ':smile: :+1: :sheep:'));\n            message.push((0, _utils.localizeMessage)('help.formatting.lines', '## Lines\\n\\nCreate a line by using three `*`, `_`, or `-`.'));\n            message.push('`***` ' + (0, _utils.localizeMessage)('help.formatting.renders', 'Renders as:') + '\\n***');\n            message.push((0, _utils.localizeMessage)('help.formatting.quotes', '## Block quotes\\n\\nCreate block quotes using `>`.'));\n            message.push((0, _utils.localizeMessage)('help.formatting.quotesExample', '`> block quotes` renders as:'));\n            message.push((0, _utils.localizeMessage)('help.formatting.quotesRender', '> block quotes'));\n            message.push((0, _utils.localizeMessage)('help.formatting.lists', '## Lists\\n\\nCreate a list by using `*` or `-` as bullets. Indent a bullet point by adding two spaces in front of it.'));\n            message.push('```\\n' + (0, _utils.localizeMessage)('help.formatting.listExample', '* list item one\\n* list item two\\n    * item two sub-point') + '\\n```');\n            message.push((0, _utils.localizeMessage)('help.formatting.renders', 'Renders as:'));\n            message.push((0, _utils.localizeMessage)('help.formatting.listExample', '* list item one\\n* list item two\\n    * item two sub-point'));\n            message.push((0, _utils.localizeMessage)('help.formatting.ordered', 'Make it an ordered list by using numbers instead:'));\n            message.push('```\\n' + (0, _utils.localizeMessage)('help.formatting.orderedExample', '1. Item one\\n2. Item two') + '\\n```');\n            message.push((0, _utils.localizeMessage)('help.formatting.renders', 'Renders as:'));\n            message.push((0, _utils.localizeMessage)('help.formatting.orderedExample', '1. Item one\\n2. Item two'));\n            message.push((0, _utils.localizeMessage)('help.formatting.checklist', 'Make a task list by including square brackets:'));\n            message.push('```\\n' + (0, _utils.localizeMessage)('help.formatting.checklistExample', '- [ ] Item one\\n- [ ] Item two\\n- [x] Completed item') + '\\n```');\n            message.push((0, _utils.localizeMessage)('help.formatting.renders', 'Renders as:'));\n            message.push((0, _utils.localizeMessage)('help.formatting.checklistExample', '- [ ] Item one\\n- [ ] Item two\\n- [x] Completed item'));\n            message.push((0, _utils.localizeMessage)('help.formatting.tables', '## Tables\\n\\nCreate a table by placing a dashed line under the header row and separating the columns with a pipe `|`. (The columns don’t need to line up exactly for it to work). Choose how to align table columns by including colons `:` within the header row.'));\n            message.push('```\\n' + (0, _utils.localizeMessage)('help.formatting.tableExample', '| Left-Aligned  | Center Aligned  | Right Aligned |\\n| :------------ |:---------------:| -----:|\\n| Left column 1 | this text       |  $100 |\\n| Left column 2 | is              |   $10 |\\n| Left column 3 | centered        |    $1 |') + '\\n```');\n            message.push((0, _utils.localizeMessage)('help.formatting.renders', 'Renders as:'));\n            message.push((0, _utils.localizeMessage)('help.formatting.tableExample', '| Left-Aligned  | Center Aligned  | Right Aligned |\\n| :------------ |:---------------:| -----:|\\n| Left column 1 | this text       |  $100 |\\n| Left column 2 | is              |   $10 |\\n| Left column 3 | centered        |    $1 |'));\n            message.push((0, _utils.localizeMessage)('help.formatting.headings', '## Headings\\n\\nMake a heading by typing # and a space before your title. For smaller headings, use more #’s.'));\n            message.push('```\\n' + (0, _utils.localizeMessage)('help.formatting.headingsExample', '## Large Heading\\n### Smaller Heading\\n#### Even Smaller Heading') + '\\n```');\n            message.push((0, _utils.localizeMessage)('help.formatting.renders', 'Renders as:'));\n            message.push((0, _utils.localizeMessage)('help.formatting.headingsExample', '## Large Heading\\n### Smaller Heading\\n#### Even Smaller Heading'));\n            message.push((0, _utils.localizeMessage)('help.formatting.headings2', 'Alternatively, you can underline the text using `===` or `---` to create headings.'));\n            message.push('```\\n' + (0, _utils.localizeMessage)('help.formatting.headings2Example', 'Large Heading\\n-------------') + '\\n```');\n            message.push((0, _utils.localizeMessage)('help.formatting.renders', 'Renders as:'));\n            message.push((0, _utils.localizeMessage)('help.formatting.headings2Example', 'Large Heading\\n-------------'));\n\n            return _react2.default.createElement(\n                'div',\n                null,\n                _react2.default.createElement('span', {\n                    dangerouslySetInnerHTML: { __html: (0, _text_formatting.formatText)(message.join('\\n\\n')) }\n                }),\n                _react2.default.createElement(\n                    'p',\n                    { className: 'links' },\n                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'help.learnMore',\n                        defaultMessage: 'Learn more about:'\n                    })\n                ),\n                _react2.default.createElement(\n                    'ul',\n                    null,\n                    _react2.default.createElement(\n                        'li',\n                        null,\n                        _react2.default.createElement(\n                            _es.Link,\n                            { to: '/help/messaging' },\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'help.link.messaging',\n                                defaultMessage: 'Basic Messaging'\n                            })\n                        )\n                    ),\n                    _react2.default.createElement(\n                        'li',\n                        null,\n                        _react2.default.createElement(\n                            _es.Link,\n                            { to: '/help/composing' },\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'help.link.composing',\n                                defaultMessage: 'Composing Messages and Replies'\n                            })\n                        )\n                    ),\n                    _react2.default.createElement(\n                        'li',\n                        null,\n                        _react2.default.createElement(\n                            _es.Link,\n                            { to: '/help/mentioning' },\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'help.link.mentioning',\n                                defaultMessage: 'Mentioning Teammates'\n                            })\n                        )\n                    ),\n                    _react2.default.createElement(\n                        'li',\n                        null,\n                        _react2.default.createElement(\n                            _es.Link,\n                            { to: '/help/attaching' },\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'help.link.attaching',\n                                defaultMessage: 'Attaching Files'\n                            })\n                        )\n                    ),\n                    _react2.default.createElement(\n                        'li',\n                        null,\n                        _react2.default.createElement(\n                            _es.Link,\n                            { to: '/help/commands' },\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'help.link.commands',\n                                defaultMessage: 'Executing Commands'\n                            })\n                        )\n                    )\n                )\n            );\n        }\n    }]);\n    return HelpFormatting;\n}(_react2.default.Component); // Copyright (c) 2016 Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nexports.default = HelpFormatting;\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 44.027b54563cd821a938d3.js","// Copyright (c) 2016 Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport {localizeMessage} from 'utils/utils.jsx';\nimport {formatText} from 'utils/text_formatting.jsx';\nimport {FormattedMessage} from 'react-intl';\nimport {Link} from 'react-router/es6';\n\nimport React from 'react';\n\nexport default class HelpFormatting extends React.Component {\n    render() {\n        const message = [];\n        message.push(localizeMessage('help.formatting.title', '# Formatting Text\\n_____'));\n        message.push(localizeMessage('help.formatting.intro', 'Markdown makes it easy to format messages. Type a message as you normally would, and use these rules to render it with special formatting.'));\n        message.push(localizeMessage('help.formatting.style', '## Text Style\\n\\nYou can use either `_` or `*` around a word to make it italic. Use two to make it bold.\\n\\n* `_italics_` renders as _italics_\\n* `**bold**` renders as **bold**\\n* `**_bold-italic_**` renders as **_bold-italics_**\\n* `~~strikethrough~~` renders as ~~strikethrough~~'));\n        message.push(localizeMessage('help.formatting.code', '## Code Block\\n\\nCreate a code block by indenting each line by four spaces, or by placing ``` on the line above and below your code.'));\n        message.push(localizeMessage('help.formatting.example', 'Example:') + '\\n\\n');\n        message.push('    ```\\n    ' + localizeMessage('help.formatting.codeBlock', 'code block') + '\\n    ```');\n        message.push(localizeMessage('help.formatting.renders', 'Renders as:'));\n        message.push('```\\n' + localizeMessage('help.formatting.codeBlock', 'code block') + '\\n```');\n        message.push(localizeMessage('help.formatting.syntax', '### Syntax Highlighting\\n\\nTo add syntax highlighting, type the language to be highlighted after the ``` at the beginning of the code block. Mattermost also offers four different code themes (GitHub, Solarized Dark, Solarized Light, Monokai) that can be changed in **Account Settings** > **Display** > **Theme** > **Custom Theme** > **Center Channel Styles**'));\n        message.push(localizeMessage('help.formatting.supportedSyntax', 'Supported languages are:\\n`as`, `applescript`, `osascript`, `scpt`, `bash`, `sh`, `zsh`, `clj`, `boot`, `cl2`, `cljc`, `cljs`, `cljs.hl`, `cljscm`, `cljx`, `hic`, `coffee`, `_coffee`, `cake`, `cjsx`, `cson`, `iced`, `cpp`, `c`, `cc`, `h`, `c++`, `h++`, `hpp`, `cs`, `csharp`, `css`, `d`, `di`, `dart`, `delphi`, `dpr`, `dfm`, `pas`, `pascal`, `freepascal`, `lazarus`, `lpr`, `lfm`, `diff`, `django`, `jinja`, `dockerfile`, `docker`, `erl`, `f90`, `f95`, `fsharp`, `fs`, `gcode`, `nc`, `go`, `groovy`, `handlebars`, `hbs`, `html.hbs`, `html.handlebars`, `hs`, `hx`, `java`, `jsp`, `js`, `jsx`, `json`, `jl`, `kt`, `ktm`, `kts`, `less`, `lisp`, `lua`, `mk`, `mak`, `md`, `mkdown`, `mkd`, `matlab`, `m`, `mm`, `objc`, `obj-c`, `ml`, `perl`, `pl`, `php`, `php3`, `php4`, `php5`, `php6`, `ps`, `ps1`, `pp`, `py`, `gyp`, `r`, `ruby`, `rb`, `gemspec`, `podspec`, `thor`, `irb`, `rs`, `scala`, `scm`, `sld`, `scss`, `st`, `sql`, `swift`, `tex`, `vbnet`, `vb`, `bas`, `vbs`, `v`, `veo`, `xml`, `html`, `xhtml`, `rss`, `atom`, `xsl`, `plist`, `yaml`'));\n        message.push(localizeMessage('help.formatting.example', 'Example:') + '\\n\\n');\n        message.push('    ```go\\n' + localizeMessage('help.formatting.syntaxEx', '    package main\\n    import \"fmt\"\\n    func main() {\\n        fmt.Println(\"Hello, 世界\")\\n    }') + '\\n    ```');\n        message.push(localizeMessage('help.formatting.renders', 'Renders as:'));\n        message.push(localizeMessage('help.formatting.githubTheme', '**GitHub Theme**'));\n        message.push('![go syntax-highlighting](https://docs.mattermost.com/_images/syntax-highlighting-github.PNG)');\n        message.push(localizeMessage('help.formatting.solirizedDarkTheme', '**Solarized Dark Theme**'));\n        message.push('![go syntax-highlighting](https://docs.mattermost.com/_images/syntax-highlighting-sol-dark.PNG)');\n        message.push(localizeMessage('help.formatting.solirizedLightTheme', '**Solarized Light Theme**'));\n        message.push('![go syntax-highlighting](https://docs.mattermost.com/_images/syntax-highlighting-sol-light.PNG)');\n        message.push(localizeMessage('help.formatting.monokaiTheme', '**Monokai Theme**'));\n        message.push('![go syntax-highlighting](https://docs.mattermost.com/_images/syntax-highlighting-monokai.PNG)');\n        message.push(localizeMessage('help.formatting.inline', '## In-line Code\\n\\nCreate in-line monospaced font by surrounding it with backticks.'));\n        message.push('```\\n`monospace`\\n```');\n        message.push(localizeMessage('help.formatting.renders', 'Renders as:') + ' `monospace`');\n        message.push(localizeMessage('help.formatting.links', '## Links\\n\\nCreate labeled links by putting the desired text in square brackets and the associated link in normal brackets.'));\n        message.push('`' + localizeMessage('help.formatting.linkEx', '[Check out Mattermost!](https://about.mattermost.com/)') + '`');\n        message.push(localizeMessage('help.formatting.renders', 'Renders as:') + ' ' + localizeMessage('help.formatting.linkEx', '[Check out Mattermost!](https://about.mattermost.com/)'));\n        message.push(localizeMessage('help.formatting.images', '## In-line Images\\n\\nCreate in-line images using an `!` followed by the alt text in square brackets and the link in normal brackets. Add hover text by placing it in quotes after the link.'));\n        message.push('```\\n' + localizeMessage('help.formatting.imagesExample', '![alt text](link \"hover text\")\\n\\nand\\n\\n[![Build Status](https://travis-ci.org/mattermost/platform.svg?branch=master)](https://travis-ci.org/mattermost/platform) [![Github](https://assets-cdn.github.com/favicon.ico)](https://github.com/mattermost/platform)') + '\\n```');\n        message.push(localizeMessage('help.formatting.renders', 'Renders as:'));\n        message.push(localizeMessage('help.formatting.imagesExample', '![alt text](link \"hover text\")\\n\\nand\\n\\n[![Build Status](https://travis-ci.org/mattermost/platform.svg?branch=master)](https://travis-ci.org/mattermost/platform) [![Github](https://assets-cdn.github.com/favicon.ico)](https://github.com/mattermost/platform)'));\n        message.push(localizeMessage('help.formatting.emojis', '## Emojis\\n\\nOpen the emoji autocomplete by typing `:`. A full list of emojis can be found [here](http://www.emoji-cheat-sheet.com/). It is also possible to create your own [Custom Emoji](http://docs.mattermost.com/help/settings/custom-emoji.html) if the emoji you want to use doesn\\'t exist.'));\n        message.push('```\\n' + localizeMessage('help.formatting.emojiExample', ':smile: :+1: :sheep:') + '\\n```');\n        message.push(localizeMessage('help.formatting.renders', 'Renders as:'));\n        message.push(localizeMessage('help.formatting.emojiExample', ':smile: :+1: :sheep:'));\n        message.push(localizeMessage('help.formatting.lines', '## Lines\\n\\nCreate a line by using three `*`, `_`, or `-`.'));\n        message.push('`***` ' + localizeMessage('help.formatting.renders', 'Renders as:') + '\\n***');\n        message.push(localizeMessage('help.formatting.quotes', '## Block quotes\\n\\nCreate block quotes using `>`.'));\n        message.push(localizeMessage('help.formatting.quotesExample', '`> block quotes` renders as:'));\n        message.push(localizeMessage('help.formatting.quotesRender', '> block quotes'));\n        message.push(localizeMessage('help.formatting.lists', '## Lists\\n\\nCreate a list by using `*` or `-` as bullets. Indent a bullet point by adding two spaces in front of it.'));\n        message.push('```\\n' + localizeMessage('help.formatting.listExample', '* list item one\\n* list item two\\n    * item two sub-point') + '\\n```');\n        message.push(localizeMessage('help.formatting.renders', 'Renders as:'));\n        message.push(localizeMessage('help.formatting.listExample', '* list item one\\n* list item two\\n    * item two sub-point'));\n        message.push(localizeMessage('help.formatting.ordered', 'Make it an ordered list by using numbers instead:'));\n        message.push('```\\n' + localizeMessage('help.formatting.orderedExample', '1. Item one\\n2. Item two') + '\\n```');\n        message.push(localizeMessage('help.formatting.renders', 'Renders as:'));\n        message.push(localizeMessage('help.formatting.orderedExample', '1. Item one\\n2. Item two'));\n        message.push(localizeMessage('help.formatting.checklist', 'Make a task list by including square brackets:'));\n        message.push('```\\n' + localizeMessage('help.formatting.checklistExample', '- [ ] Item one\\n- [ ] Item two\\n- [x] Completed item') + '\\n```');\n        message.push(localizeMessage('help.formatting.renders', 'Renders as:'));\n        message.push(localizeMessage('help.formatting.checklistExample', '- [ ] Item one\\n- [ ] Item two\\n- [x] Completed item'));\n        message.push(localizeMessage('help.formatting.tables', '## Tables\\n\\nCreate a table by placing a dashed line under the header row and separating the columns with a pipe `|`. (The columns don’t need to line up exactly for it to work). Choose how to align table columns by including colons `:` within the header row.'));\n        message.push('```\\n' + localizeMessage('help.formatting.tableExample', '| Left-Aligned  | Center Aligned  | Right Aligned |\\n| :------------ |:---------------:| -----:|\\n| Left column 1 | this text       |  $100 |\\n| Left column 2 | is              |   $10 |\\n| Left column 3 | centered        |    $1 |') + '\\n```');\n        message.push(localizeMessage('help.formatting.renders', 'Renders as:'));\n        message.push(localizeMessage('help.formatting.tableExample', '| Left-Aligned  | Center Aligned  | Right Aligned |\\n| :------------ |:---------------:| -----:|\\n| Left column 1 | this text       |  $100 |\\n| Left column 2 | is              |   $10 |\\n| Left column 3 | centered        |    $1 |'));\n        message.push(localizeMessage('help.formatting.headings', '## Headings\\n\\nMake a heading by typing # and a space before your title. For smaller headings, use more #’s.'));\n        message.push('```\\n' + localizeMessage('help.formatting.headingsExample', '## Large Heading\\n### Smaller Heading\\n#### Even Smaller Heading') + '\\n```');\n        message.push(localizeMessage('help.formatting.renders', 'Renders as:'));\n        message.push(localizeMessage('help.formatting.headingsExample', '## Large Heading\\n### Smaller Heading\\n#### Even Smaller Heading'));\n        message.push(localizeMessage('help.formatting.headings2', 'Alternatively, you can underline the text using `===` or `---` to create headings.'));\n        message.push('```\\n' + localizeMessage('help.formatting.headings2Example', 'Large Heading\\n-------------') + '\\n```');\n        message.push(localizeMessage('help.formatting.renders', 'Renders as:'));\n        message.push(localizeMessage('help.formatting.headings2Example', 'Large Heading\\n-------------'));\n\n        return (\n            <div>\n                <span\n                    dangerouslySetInnerHTML={{__html: formatText(message.join('\\n\\n'))}}\n                />\n                <p className='links'>\n                    <FormattedMessage\n                        id='help.learnMore'\n                        defaultMessage='Learn more about:'\n                    />\n                </p>\n                <ul>\n                    <li>\n                        <Link to='/help/messaging'>\n                            <FormattedMessage\n                                id='help.link.messaging'\n                                defaultMessage='Basic Messaging'\n                            />\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to='/help/composing'>\n                            <FormattedMessage\n                                id='help.link.composing'\n                                defaultMessage='Composing Messages and Replies'\n                            />\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to='/help/mentioning'>\n                            <FormattedMessage\n                                id='help.link.mentioning'\n                                defaultMessage='Mentioning Teammates'\n                            />\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to='/help/attaching'>\n                            <FormattedMessage\n                                id='help.link.attaching'\n                                defaultMessage='Attaching Files'\n                            />\n                        </Link>\n                    </li>\n                    <li>\n                        <Link to='/help/commands'>\n                            <FormattedMessage\n                                id='help.link.commands'\n                                defaultMessage='Executing Commands'\n                            />\n                        </Link>\n                    </li>\n                </ul>\n            </div>\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./components/help/components/formatting.jsx"],"sourceRoot":""}