{"version":3,"sources":["webpack:///3.8f6eefefa9e3af17a78d.js","webpack:///./components/integrations/components/confirm_integration.jsx"],"names":["webpackJsonp","592","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_getPrototypeOf","_getPrototypeOf2","_classCallCheck2","_classCallCheck3","_possibleConstructorReturn2","_possibleConstructorReturn3","_createClass2","_createClass3","_inherits2","_inherits3","_react","_react2","_backstage_header","_backstage_header2","_reactIntl","_es","_user_store","_user_store2","_integration_store","_integration_store2","_constants","_constants2","ConfirmIntegration","_React$Component","props","this","_this","__proto__","call","handleIntegrationChange","bind","handleKeyPress","userId","getCurrentId","state","type","location","query","id","oauthApps","getOAuthApps","loading","hasReceivedOAuthApps","key","get","team","PropTypes","object","bool","addChangeListener","window","addEventListener","removeChangeListener","removeEventListener","setState","e","browserHistory","push","name","headerText","helpText","tokenText","createElement","Integrations","COMMAND","FormattedMessage","defaultMessage","FormattedHTMLMessage","className","values","token","getCommand","INCOMING_WEBHOOK","url","origin","OUTGOING_WEBHOOK","getOutgoingWebhook","OAUTH_APP","oauthApp","i","length","secret","client_secret","callback_urls","Link","to","Component"],"mappings":"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","file":"3.8f6eefefa9e3af17a78d.js","sourcesContent":["webpackJsonp([3],{\n\n/***/ 592:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _getPrototypeOf = __webpack_require__(6);\n\nvar _getPrototypeOf2 = _interopRequireDefault(_getPrototypeOf);\n\nvar _classCallCheck2 = __webpack_require__(2);\n\nvar _classCallCheck3 = _interopRequireDefault(_classCallCheck2);\n\nvar _possibleConstructorReturn2 = __webpack_require__(4);\n\nvar _possibleConstructorReturn3 = _interopRequireDefault(_possibleConstructorReturn2);\n\nvar _createClass2 = __webpack_require__(5);\n\nvar _createClass3 = _interopRequireDefault(_createClass2);\n\nvar _inherits2 = __webpack_require__(3);\n\nvar _inherits3 = _interopRequireDefault(_inherits2);\n\nvar _react = __webpack_require__(1);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _backstage_header = __webpack_require__(336);\n\nvar _backstage_header2 = _interopRequireDefault(_backstage_header);\n\nvar _reactIntl = __webpack_require__(13);\n\nvar _es = __webpack_require__(37);\n\nvar _user_store = __webpack_require__(15);\n\nvar _user_store2 = _interopRequireDefault(_user_store);\n\nvar _integration_store = __webpack_require__(1660);\n\nvar _integration_store2 = _interopRequireDefault(_integration_store);\n\nvar _constants = __webpack_require__(8);\n\nvar _constants2 = _interopRequireDefault(_constants);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ConfirmIntegration = function (_React$Component) {\n    (0, _inherits3.default)(ConfirmIntegration, _React$Component);\n    (0, _createClass3.default)(ConfirmIntegration, null, [{\n        key: 'propTypes',\n        get: function get() {\n            return {\n                team: _react2.default.PropTypes.object,\n                location: _react2.default.PropTypes.object,\n                loading: _react2.default.PropTypes.bool\n            };\n        }\n    }]);\n\n    function ConfirmIntegration(props) {\n        (0, _classCallCheck3.default)(this, ConfirmIntegration);\n\n        var _this = (0, _possibleConstructorReturn3.default)(this, (ConfirmIntegration.__proto__ || (0, _getPrototypeOf2.default)(ConfirmIntegration)).call(this, props));\n\n        _this.handleIntegrationChange = _this.handleIntegrationChange.bind(_this);\n        _this.handleKeyPress = _this.handleKeyPress.bind(_this);\n\n        var userId = _user_store2.default.getCurrentId();\n\n        _this.state = {\n            type: _this.props.location.query.type,\n            id: _this.props.location.query.id,\n            oauthApps: _integration_store2.default.getOAuthApps(userId),\n            loading: !_integration_store2.default.hasReceivedOAuthApps(userId)\n        };\n        return _this;\n    }\n\n    (0, _createClass3.default)(ConfirmIntegration, [{\n        key: 'componentDidMount',\n        value: function componentDidMount() {\n            _integration_store2.default.addChangeListener(this.handleIntegrationChange);\n            window.addEventListener('keypress', this.handleKeyPress);\n        }\n    }, {\n        key: 'componentWillUnmount',\n        value: function componentWillUnmount() {\n            _integration_store2.default.removeChangeListener(this.handleIntegrationChange);\n            window.removeEventListener('keypress', this.handleKeyPress);\n        }\n    }, {\n        key: 'handleIntegrationChange',\n        value: function handleIntegrationChange() {\n            var userId = _user_store2.default.getCurrentId();\n\n            this.setState({\n                oauthApps: _integration_store2.default.getOAuthApps(userId),\n                loading: !_integration_store2.default.hasReceivedOAuthApps(userId)\n            });\n        }\n    }, {\n        key: 'handleKeyPress',\n        value: function handleKeyPress(e) {\n            if (e.key === 'Enter') {\n                _es.browserHistory.push('/' + this.props.team.name + '/integrations/' + this.state.type);\n            }\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            var headerText = null;\n            var helpText = null;\n            var tokenText = null;\n\n            if (this.props.loading === true) {\n                return _react2.default.createElement('div', null);\n            }\n\n            if (this.state.type === _constants2.default.Integrations.COMMAND) {\n                headerText = _react2.default.createElement(_reactIntl.FormattedMessage, {\n                    id: 'installed_commands.header',\n                    defaultMessage: 'Slash Commands'\n                });\n                helpText = _react2.default.createElement(\n                    'p',\n                    null,\n                    _react2.default.createElement(_reactIntl.FormattedHTMLMessage, {\n                        id: 'add_command.doneHelp',\n                        defaultMessage: 'Your slash command has been set up. The following token will be sent in the outgoing payload. Please use it to verify the request came from your Mattermost team (see <a href=\"https://docs.mattermost.com/developer/slash-commands.html\">documentation</a> for further details).'\n                    })\n                );\n                tokenText = _react2.default.createElement(\n                    'p',\n                    { className: 'word-break--all' },\n                    _react2.default.createElement(_reactIntl.FormattedHTMLMessage, {\n                        id: 'add_command.token',\n                        defaultMessage: '<b>Token</b>: {token}',\n                        values: {\n                            token: _integration_store2.default.getCommand(this.props.team.id, this.state.id).token\n                        }\n                    })\n                );\n            } else if (this.state.type === _constants2.default.Integrations.INCOMING_WEBHOOK) {\n                headerText = _react2.default.createElement(_reactIntl.FormattedMessage, {\n                    id: 'installed_incoming_webhooks.header',\n                    defaultMessage: 'Incoming Webhooks'\n                });\n                helpText = _react2.default.createElement(\n                    'p',\n                    null,\n                    _react2.default.createElement(_reactIntl.FormattedHTMLMessage, {\n                        id: 'add_incoming_webhook.doneHelp',\n                        defaultMessage: 'Your incoming webhook has been set up. Please send data to the following URL (see <a href=\\\\\"https://docs.mattermost.com/developer/webhooks-incoming.html\\\\\">documentation</a> for further details).'\n                    })\n                );\n                tokenText = _react2.default.createElement(\n                    'p',\n                    { className: 'word-break--all' },\n                    _react2.default.createElement(_reactIntl.FormattedHTMLMessage, {\n                        id: 'add_incoming_webhook.url',\n                        defaultMessage: '<b>URL</b>: {url}',\n                        values: {\n                            url: window.location.origin + '/hooks/' + this.state.id\n                        }\n                    })\n                );\n            } else if (this.state.type === _constants2.default.Integrations.OUTGOING_WEBHOOK) {\n                headerText = _react2.default.createElement(_reactIntl.FormattedMessage, {\n                    id: 'installed_outgoing_webhooks.header',\n                    defaultMessage: 'Outgoing Webhooks'\n                });\n                helpText = _react2.default.createElement(\n                    'p',\n                    null,\n                    _react2.default.createElement(_reactIntl.FormattedHTMLMessage, {\n                        id: 'add_outgoing_webhook.doneHelp',\n                        defaultMessage: 'Your outgoing webhook has been set up. The following token will be sent in the outgoing payload. Please use it to verify the request came from your Mattermost team (see <a href=\\\\\"https://docs.mattermost.com/developer/webhooks-outgoing.html\\\\\">documentation</a> for further details).'\n                    })\n                );\n                tokenText = _react2.default.createElement(\n                    'p',\n                    { className: 'word-break--all' },\n                    _react2.default.createElement(_reactIntl.FormattedHTMLMessage, {\n                        id: 'add_outgoing_webhook.token',\n                        defaultMessage: '<b>Token</b>: {token}',\n                        values: {\n                            token: _integration_store2.default.getOutgoingWebhook(this.props.team.id, this.state.id).token\n                        }\n                    })\n                );\n            } else if (this.state.type === _constants2.default.Integrations.OAUTH_APP) {\n                var oauthApp = {};\n                for (var i = 0; i < this.state.oauthApps.length; i++) {\n                    if (this.state.oauthApps[i].id === this.state.id) {\n                        oauthApp = this.state.oauthApps[i];\n                        break;\n                    }\n                }\n\n                if (oauthApp) {\n                    headerText = _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'installed_oauth_apps.header',\n                        defaultMessage: 'OAuth 2.0 Applications'\n                    });\n\n                    helpText = [];\n                    helpText.push(_react2.default.createElement(\n                        'p',\n                        { key: 'add_oauth_app.doneHelp' },\n                        _react2.default.createElement(_reactIntl.FormattedHTMLMessage, {\n                            id: 'add_oauth_app.doneHelp',\n                            defaultMessage: 'Your OAuth 2.0 application has been set up. Please use the following Client ID and Client Secret when requesting authorization for your application (see <a href=\"https://docs.mattermost.com/developer/oauth-2-0-applications.html\">documentation</a> for further details).'\n                        })\n                    ));\n                    helpText.push(_react2.default.createElement(\n                        'p',\n                        { key: 'add_oauth_app.clientId' },\n                        _react2.default.createElement(_reactIntl.FormattedHTMLMessage, {\n                            id: 'add_oauth_app.clientId',\n                            defaultMessage: '<b>Client ID:</b> {id}',\n                            values: {\n                                id: this.state.id\n                            }\n                        }),\n                        ' ',\n                        _react2.default.createElement('br', null),\n                        _react2.default.createElement(_reactIntl.FormattedHTMLMessage, {\n                            id: 'add_oauth_app.clientSecret',\n                            defaultMessage: '<b>Client Secret:</b> {secret}',\n                            values: {\n                                secret: oauthApp.client_secret\n                            }\n                        })\n                    ));\n\n                    helpText.push(_react2.default.createElement(\n                        'p',\n                        { key: 'add_oauth_app.doneUrlHelp' },\n                        _react2.default.createElement(_reactIntl.FormattedHTMLMessage, {\n                            id: 'add_oauth_app.doneUrlHelp',\n                            defaultMessage: 'The following are your authorized redirect URL(s).'\n                        })\n                    ));\n\n                    tokenText = _react2.default.createElement(\n                        'p',\n                        { className: 'word-break--all' },\n                        _react2.default.createElement(_reactIntl.FormattedHTMLMessage, {\n                            id: 'add_oauth_app.url',\n                            defaultMessage: '<b>URL(s)</b>: {url}',\n                            values: {\n                                url: oauthApp.callback_urls\n                            }\n                        })\n                    );\n                }\n            }\n\n            return _react2.default.createElement(\n                'div',\n                { className: 'backstage-content row' },\n                _react2.default.createElement(\n                    _backstage_header2.default,\n                    null,\n                    _react2.default.createElement(\n                        _es.Link,\n                        { to: '/' + this.props.team.name + '/integrations/' + this.state.type },\n                        headerText\n                    ),\n                    _react2.default.createElement(_reactIntl.FormattedMessage, {\n                        id: 'integrations.add',\n                        defaultMessage: 'Add'\n                    })\n                ),\n                _react2.default.createElement(\n                    'div',\n                    { className: 'backstage-form backstage-form__confirmation' },\n                    _react2.default.createElement(\n                        'h4',\n                        { className: 'backstage-form__title' },\n                        _react2.default.createElement(_reactIntl.FormattedMessage, {\n                            id: 'integrations.successful',\n                            defaultMessage: 'Setup Successful'\n                        })\n                    ),\n                    helpText,\n                    tokenText,\n                    _react2.default.createElement(\n                        'div',\n                        { className: 'backstage-form__footer' },\n                        _react2.default.createElement(\n                            _es.Link,\n                            {\n                                className: 'btn btn-primary',\n                                type: 'submit',\n                                to: '/' + this.props.team.name + '/integrations/' + this.state.type\n                            },\n                            _react2.default.createElement(_reactIntl.FormattedMessage, {\n                                id: 'integrations.done',\n                                defaultMessage: 'Done'\n                            })\n                        )\n                    )\n                )\n            );\n        }\n    }]);\n    return ConfirmIntegration;\n}(_react2.default.Component); // Copyright (c) 2016 Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nexports.default = ConfirmIntegration;\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 3.8f6eefefa9e3af17a78d.js","// Copyright (c) 2016 Mattermost, Inc. All Rights Reserved.\n// See License.txt for license information.\n\nimport React from 'react';\n\nimport BackstageHeader from 'components/backstage/components/backstage_header.jsx';\nimport {FormattedMessage, FormattedHTMLMessage} from 'react-intl';\nimport {Link, browserHistory} from 'react-router/es6';\n\nimport UserStore from 'stores/user_store.jsx';\nimport IntegrationStore from 'stores/integration_store.jsx';\n\nimport Constants from 'utils/constants.jsx';\n\nexport default class ConfirmIntegration extends React.Component {\n    static get propTypes() {\n        return {\n            team: React.PropTypes.object,\n            location: React.PropTypes.object,\n            loading: React.PropTypes.bool\n        };\n    }\n\n    constructor(props) {\n        super(props);\n\n        this.handleIntegrationChange = this.handleIntegrationChange.bind(this);\n        this.handleKeyPress = this.handleKeyPress.bind(this);\n\n        const userId = UserStore.getCurrentId();\n\n        this.state = {\n            type: this.props.location.query.type,\n            id: this.props.location.query.id,\n            oauthApps: IntegrationStore.getOAuthApps(userId),\n            loading: !IntegrationStore.hasReceivedOAuthApps(userId)\n        };\n    }\n\n    componentDidMount() {\n        IntegrationStore.addChangeListener(this.handleIntegrationChange);\n        window.addEventListener('keypress', this.handleKeyPress);\n    }\n\n    componentWillUnmount() {\n        IntegrationStore.removeChangeListener(this.handleIntegrationChange);\n        window.removeEventListener('keypress', this.handleKeyPress);\n    }\n\n    handleIntegrationChange() {\n        const userId = UserStore.getCurrentId();\n\n        this.setState({\n            oauthApps: IntegrationStore.getOAuthApps(userId),\n            loading: !IntegrationStore.hasReceivedOAuthApps(userId)\n        });\n    }\n\n    handleKeyPress(e) {\n        if (e.key === 'Enter') {\n            browserHistory.push('/' + this.props.team.name + '/integrations/' + this.state.type);\n        }\n    }\n\n    render() {\n        let headerText = null;\n        let helpText = null;\n        let tokenText = null;\n\n        if (this.props.loading === true) {\n            return (<div/>);\n        }\n\n        if (this.state.type === Constants.Integrations.COMMAND) {\n            headerText = (\n                <FormattedMessage\n                    id={'installed_commands.header'}\n                    defaultMessage='Slash Commands'\n                />\n            );\n            helpText = (\n                <p>\n                    <FormattedHTMLMessage\n                        id='add_command.doneHelp'\n                        defaultMessage='Your slash command has been set up. The following token will be sent in the outgoing payload. Please use it to verify the request came from your Mattermost team (see <a href=\"https://docs.mattermost.com/developer/slash-commands.html\">documentation</a> for further details).'\n                    />\n                </p>\n            );\n            tokenText = (\n                <p className='word-break--all'>\n                    <FormattedHTMLMessage\n                        id='add_command.token'\n                        defaultMessage='<b>Token</b>: {token}'\n                        values={{\n                            token: IntegrationStore.getCommand(this.props.team.id, this.state.id).token\n                        }}\n                    />\n                </p>\n            );\n        } else if (this.state.type === Constants.Integrations.INCOMING_WEBHOOK) {\n            headerText = (\n                <FormattedMessage\n                    id={'installed_incoming_webhooks.header'}\n                    defaultMessage='Incoming Webhooks'\n                />\n            );\n            helpText = (\n                <p>\n                    <FormattedHTMLMessage\n                        id='add_incoming_webhook.doneHelp'\n                        defaultMessage='Your incoming webhook has been set up. Please send data to the following URL (see <a href=\\\"https://docs.mattermost.com/developer/webhooks-incoming.html\\\">documentation</a> for further details).'\n                    />\n                </p>\n            );\n            tokenText = (\n                <p className='word-break--all'>\n                    <FormattedHTMLMessage\n                        id='add_incoming_webhook.url'\n                        defaultMessage='<b>URL</b>: {url}'\n                        values={{\n                            url: window.location.origin + '/hooks/' + this.state.id\n                        }}\n                    />\n                </p>\n            );\n        } else if (this.state.type === Constants.Integrations.OUTGOING_WEBHOOK) {\n            headerText = (\n                <FormattedMessage\n                    id={'installed_outgoing_webhooks.header'}\n                    defaultMessage='Outgoing Webhooks'\n                />\n            );\n            helpText = (\n                <p>\n                    <FormattedHTMLMessage\n                        id='add_outgoing_webhook.doneHelp'\n                        defaultMessage='Your outgoing webhook has been set up. The following token will be sent in the outgoing payload. Please use it to verify the request came from your Mattermost team (see <a href=\\\"https://docs.mattermost.com/developer/webhooks-outgoing.html\\\">documentation</a> for further details).'\n                    />\n                </p>\n            );\n            tokenText = (\n                <p className='word-break--all'>\n                    <FormattedHTMLMessage\n                        id='add_outgoing_webhook.token'\n                        defaultMessage='<b>Token</b>: {token}'\n                        values={{\n                            token: IntegrationStore.getOutgoingWebhook(this.props.team.id, this.state.id).token\n                        }}\n                    />\n                </p>\n            );\n        } else if (this.state.type === Constants.Integrations.OAUTH_APP) {\n            let oauthApp = {};\n            for (var i = 0; i < this.state.oauthApps.length; i++) {\n                if (this.state.oauthApps[i].id === this.state.id) {\n                    oauthApp = this.state.oauthApps[i];\n                    break;\n                }\n            }\n\n            if (oauthApp) {\n                headerText = (\n                    <FormattedMessage\n                        id={'installed_oauth_apps.header'}\n                        defaultMessage='OAuth 2.0 Applications'\n                    />\n                );\n\n                helpText = [];\n                helpText.push(\n                    <p key='add_oauth_app.doneHelp'>\n                        <FormattedHTMLMessage\n                            id='add_oauth_app.doneHelp'\n                            defaultMessage='Your OAuth 2.0 application has been set up. Please use the following Client ID and Client Secret when requesting authorization for your application (see <a href=\"https://docs.mattermost.com/developer/oauth-2-0-applications.html\">documentation</a> for further details).'\n                        />\n                    </p>\n                );\n                helpText.push(\n                    <p key='add_oauth_app.clientId'>\n                        <FormattedHTMLMessage\n                            id='add_oauth_app.clientId'\n                            defaultMessage='<b>Client ID:</b> {id}'\n                            values={{\n                                id: this.state.id\n                            }}\n                        /> <br/>\n                        <FormattedHTMLMessage\n                            id='add_oauth_app.clientSecret'\n                            defaultMessage='<b>Client Secret:</b> {secret}'\n                            values={{\n                                secret: oauthApp.client_secret\n                            }}\n                        />\n                    </p>\n                );\n\n                helpText.push(\n                    <p key='add_oauth_app.doneUrlHelp'>\n                        <FormattedHTMLMessage\n                            id='add_oauth_app.doneUrlHelp'\n                            defaultMessage='The following are your authorized redirect URL(s).'\n                        />\n                    </p>\n                );\n\n                tokenText = (\n                    <p className='word-break--all'>\n                        <FormattedHTMLMessage\n                            id='add_oauth_app.url'\n                            defaultMessage='<b>URL(s)</b>: {url}'\n                            values={{\n                                url: oauthApp.callback_urls\n                            }}\n                        />\n                    </p>\n                );\n            }\n        }\n\n        return (\n            <div className='backstage-content row'>\n                <BackstageHeader>\n                    <Link to={'/' + this.props.team.name + '/integrations/' + this.state.type}>\n                        {headerText}\n                    </Link>\n                    <FormattedMessage\n                        id='integrations.add'\n                        defaultMessage='Add'\n                    />\n                </BackstageHeader>\n                <div className='backstage-form backstage-form__confirmation'>\n                    <h4 className='backstage-form__title'>\n                        <FormattedMessage\n                            id='integrations.successful'\n                            defaultMessage='Setup Successful'\n                        />\n                    </h4>\n                    {helpText}\n                    {tokenText}\n                    <div className='backstage-form__footer'>\n                        <Link\n                            className='btn btn-primary'\n                            type='submit'\n                            to={'/' + this.props.team.name + '/integrations/' + this.state.type}\n                        >\n                            <FormattedMessage\n                                id='integrations.done'\n                                defaultMessage='Done'\n                            />\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./components/integrations/components/confirm_integration.jsx"],"sourceRoot":""}